; ModuleID = 'lstm-raw.ll'
source_filename = "lstm.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.adept::Stack" = type <{ %"class.adept::internal::StackStorageOrig", double*, %"class.std::vector.8", %"class.std::vector.8", %"class.std::__cxx11::list", %"struct.std::_List_iterator", i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.adept::internal::StackStorageOrig" = type { %"struct.adept::internal::Statement"*, double*, i32*, i32, i32, i32, i32 }
%"struct.adept::internal::Statement" = type { i32, i32 }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::__cxx11::list" = type { %"class.std::__cxx11::_List_base" }
%"class.std::__cxx11::_List_base" = type { %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl" }
%"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl" = type { %"struct.std::__detail::_List_node_header" }
%"struct.std::__detail::_List_node_header" = type { %"struct.std::__detail::_List_node_base", i64 }
%"struct.std::__detail::_List_node_base" = type { %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"* }
%"struct.std::_List_iterator" = type { %"struct.std::__detail::_List_node_base"* }
%"struct.adept::internal::EndIndex" = type { i8 }
%"class.adept::internal::AllIndex" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.timeval = type { i64, i64 }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" = type { double*, double*, double* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.LSTMInput = type { i32, i32, i32, %"class.std::vector.3", %"class.std::vector.3", %"class.std::vector.3", %"class.std::vector.3" }
%"class.adept::invalid_operation" = type { %"class.adept::array_exception" }
%"class.adept::array_exception" = type { %"class.adept::exception" }
%"class.adept::exception" = type { %"class.std::exception", %"class.std::__cxx11::basic_string" }
%"class.std::exception" = type { i32 (...)** }
%"struct.adept::Gap" = type { i32, i32 }
%"struct.std::_List_node" = type { %"struct.std::__detail::_List_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [8 x i8] }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.adept::Array" = type { float*, %"class.adept::Storage"*, %"class.adept::ExpressionSize", %"class.adept::ExpressionSize" }
%"class.adept::Storage" = type opaque
%"class.adept::ExpressionSize" = type { [2 x i32] }
%"class.adept::SpecialMatrix" = type { float*, %"class.adept::Storage"*, i32, i32 }
%"class.adept::SpecialMatrix.19" = type { float*, %"class.adept::Storage"*, i32, i32 }
%"class.adept::Array.22" = type { double*, %"class.adept::Storage.24"*, %"class.adept::ExpressionSize", %"class.adept::ExpressionSize" }
%"class.adept::Storage.24" = type <{ double*, i32, i32, i32, [4 x i8] }>
%"class.adept::SpecialMatrix.25" = type { double*, %"class.adept::Storage.24"*, i32, i32 }
%"class.adept::SpecialMatrix.27" = type { double*, %"class.adept::Storage.24"*, i32, i32 }
%"struct.adept::Block" = type { [2 x double] }
%"class.std::__cxx11::basic_stringstream" = type { %"class.std::basic_iostream.base", %"class.std::__cxx11::basic_stringbuf", %"class.std::basic_ios" }
%"class.std::basic_iostream.base" = type { %"class.std::basic_istream.base", %"class.std::basic_ostream.base" }
%"class.std::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::__cxx11::basic_stringbuf" = type { %"class.std::basic_streambuf", i32, %"class.std::__cxx11::basic_string" }
%"class.adept::Array.35" = type { float*, %"class.adept::Storage"*, %"class.adept::ExpressionSize.37", %"class.adept::ExpressionSize.37" }
%"class.adept::ExpressionSize.37" = type { [1 x i32] }
%"class.adept::Array.38" = type { double*, %"class.adept::Storage.24"*, %"class.adept::ExpressionSize.37", %"class.adept::ExpressionSize.37" }
%"class.adept::Active" = type <{ double, i32, [4 x i8] }>
%"struct.adept::internal::BinaryOperation.79" = type { %"class.adept::Active"*, %"struct.adept::internal::BinaryOperation.46" }
%"struct.adept::internal::BinaryOperation.46" = type { %"class.adept::Active"*, %"class.adept::Active"* }
%"struct.adept::internal::BinaryOperation" = type { %"class.adept::Active"*, %"class.adept::Active"* }
%"struct.adept::internal::BinaryOperation.48" = type { %"struct.adept::internal::UnaryOperation", %"class.adept::Active"* }
%"struct.adept::internal::UnaryOperation" = type { %"class.adept::Active"* }
%"struct.adept::Expression.45" = type { i8 }
%"struct.adept::Expression.80" = type { i8 }
%"struct.adept::Expression.49" = type { i8 }
%"class.adept::stack_already_active" = type { %"class.adept::autodiff_exception" }
%"class.adept::autodiff_exception" = type { %"class.adept::exception" }
%"class.adept::gradients_not_initialized" = type { %"class.adept::autodiff_exception" }
%"class.adept::feature_not_available" = type { %"class.adept::exception" }
%"class.adept::dependents_or_independents_not_identified" = type { %"class.adept::autodiff_exception" }
%"class.std::bad_alloc" = type { %"class.std::exception" }
%"class.adept::invalid_dimension" = type { %"class.adept::array_exception" }
%"struct.adept::internal::BinaryOperation.51" = type { %"struct.adept::internal::BinaryOperation.46", %"class.adept::Active"* }
%"struct.adept::Expression.47" = type { i8 }
%"struct.adept::Expression.52" = type { i8 }
%"struct.adept::internal::BinaryOperation.76" = type { %"class.adept::Active"*, %"class.adept::Active"* }
%"struct.adept::internal::BinaryOperation.74" = type { %"class.adept::Active"*, %"struct.adept::internal::UnaryOperation.70" }
%"struct.adept::internal::UnaryOperation.70" = type { %"class.adept::Active"* }
%"struct.adept::internal::UnaryOperation.72" = type { %"class.adept::Active"* }
%"struct.adept::Expression.75" = type { i8 }
%"struct.adept::Expression.77" = type { i8 }
%"struct.adept::Expression.73" = type { i8 }
%"struct.adept::internal::BinaryOperation.58" = type { %"class.adept::Active"*, %"struct.adept::internal::UnaryOperation.60" }
%"struct.adept::internal::UnaryOperation.60" = type { %"class.adept::Active"* }
%"struct.adept::Expression.59" = type { i8 }
%"struct.adept::internal::BinaryOperation.62" = type { %"class.adept::Active"*, %"struct.adept::internal::BinaryOperation.64" }
%"struct.adept::internal::BinaryOperation.64" = type { %"class.adept::Active"*, %"struct.adept::internal::UnaryOperation.66" }
%"struct.adept::internal::UnaryOperation.66" = type { %"struct.adept::internal::UnaryOperation" }
%"struct.adept::Expression.63" = type { i8 }
%"class.adept::gradient_out_of_range" = type { %"class.adept::autodiff_exception" }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ = comdat any

$_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZN5adept9exceptionD2Ev = comdat any

$_ZN5adept3invIfEENS_5ArrayILi2ET_Lb0EEERKS3_ = comdat any

$_ZN5adept3invIfLNS_8internal21SymmMatrixOrientationE0EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_ = comdat any

$_ZN5adept3invIfLNS_8internal21SymmMatrixOrientationE1EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_ = comdat any

$_ZN5adept3invIdEENS_5ArrayILi2ET_Lb0EEERKS3_ = comdat any

$_ZN5adept3invIdLNS_8internal21SymmMatrixOrientationE0EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_ = comdat any

$_ZN5adept3invIdLNS_8internal21SymmMatrixOrientationE1EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_ = comdat any

$_ZN5adept5solveIfEENS_5ArrayILi1ET_Lb0EEERKNS1_ILi2ES2_Lb0EEERKS3_ = comdat any

$_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIfEENS_5ArrayILi2ET_Lb0EEERKS3_S5_ = comdat any

$_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIdEENS_5ArrayILi1ET_Lb0EEERKNS1_ILi2ES2_Lb0EEERKS3_ = comdat any

$_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIdEENS_5ArrayILi2ET_Lb0EEERKS3_S5_ = comdat any

$_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5StackC2Eb = comdat any

$_ZN5adept6ActiveIdED2Ev = comdat any

$_ZN5adept5Stack13new_recordingEv = comdat any

$_ZN9adeptTest14lstm_objectiveIN5adept6ActiveIdEEEEviiiPT_S5_S5_S5_S5_ = comdat any

$__clang_call_terminate = comdat any

$_ZN5adept17invalid_operationD0Ev = comdat any

$_ZNK5adept9exception4whatEv = comdat any

$_ZN5adept15array_exceptionD0Ev = comdat any

$_ZN5adept9exceptionD0Ev = comdat any

$_ZN5adept20stack_already_activeD0Ev = comdat any

$_ZN5adept25gradients_not_initializedD0Ev = comdat any

$_ZN5adept21feature_not_availableD0Ev = comdat any

$_ZN5adept41dependents_or_independents_not_identifiedD0Ev = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ = comdat any

$_ZNSt6vectorIdSaIdEE17_M_default_appendEm = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_EET0_T_SC_SB_ = comdat any

$_ZN5adept5ArrayILi1EdLb0EE6resizeEPKib = comdat any

$_ZN5adept7StorageIdE11remove_linkEv = comdat any

$_ZN5adept8internal18exception_locationB5cxx11EPKci = comdat any

$_ZN5adept17invalid_dimensionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZN5adept17invalid_dimensionD0Ev = comdat any

$_ZN5adept6ActiveIdEC2IdEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE = comdat any

$_ZN9adeptTest12lstm_predictIN5adept6ActiveIdEEEEviiPT_S5_S5_S5_S5_ = comdat any

$_ZN9adeptTest9logsumexpIN5adept6ActiveIdEEEET_PKS4_i = comdat any

$_ZN5adept6ActiveIdEaSERKS1_ = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8SubtractES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE = comdat any

$_ZN5adept6ActiveIdEC2IiEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS3_14UnaryOperationIdNS3_10UnaryMinusES1_EENS3_6DivideES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSB_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SB_EE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE = comdat any

$_ZN9adeptTest10lstm_modelIN5adept6ActiveIdEEEEviPT_S5_S5_S5_S5_ = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE = comdat any

$_ZN9adeptTest7sigmoidIN5adept6ActiveIdEEEET_S4_ = comdat any

$_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSB_4rankLi0EsrSB_9is_activeEvE4typeE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyENS3_14UnaryOperationIdNS3_4TanhES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSB_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SB_EE = comdat any

$_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_6DivideENS4_IdS1_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpENS7_IdNS3_10UnaryMinusES1_EEEEEEEEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSG_4rankLi0EsrSG_9is_activeEvE4typeE = comdat any

$_ZN5adept6ActiveIdEC2IdNS_8internal14UnaryOperationIdNS3_3LogES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSB_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SB_EE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE = comdat any

$_ZN5adept5Stack13set_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPKS4_ = comdat any

$_ZN5adept21gradient_out_of_rangeD0Ev = comdat any

$_ZNK5adept5Stack13get_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPS4_ = comdat any

$_ZTWN5adept21_stack_current_threadE = comdat any

$_ZTSN5adept17invalid_operationE = comdat any

$_ZTSN5adept15array_exceptionE = comdat any

$_ZTSN5adept9exceptionE = comdat any

$_ZTIN5adept9exceptionE = comdat any

$_ZTIN5adept15array_exceptionE = comdat any

$_ZTIN5adept17invalid_operationE = comdat any

$_ZTSN5adept20stack_already_activeE = comdat any

$_ZTSN5adept18autodiff_exceptionE = comdat any

$_ZTIN5adept18autodiff_exceptionE = comdat any

$_ZTIN5adept20stack_already_activeE = comdat any

$_ZTSN5adept25gradients_not_initializedE = comdat any

$_ZTIN5adept25gradients_not_initializedE = comdat any

$_ZTSN5adept21feature_not_availableE = comdat any

$_ZTIN5adept21feature_not_availableE = comdat any

$_ZTSN5adept41dependents_or_independents_not_identifiedE = comdat any

$_ZTIN5adept41dependents_or_independents_not_identifiedE = comdat any

$_ZTVN5adept17invalid_operationE = comdat any

$_ZTVN5adept15array_exceptionE = comdat any

$_ZTVN5adept9exceptionE = comdat any

$_ZTVN5adept20stack_already_activeE = comdat any

$_ZTVN5adept25gradients_not_initializedE = comdat any

$_ZTVN5adept21feature_not_availableE = comdat any

$_ZTVN5adept41dependents_or_independents_not_identifiedE = comdat any

$_ZTSN5adept17invalid_dimensionE = comdat any

$_ZTIN5adept17invalid_dimensionE = comdat any

$_ZTVN5adept17invalid_dimensionE = comdat any

$_ZTSN5adept21gradient_out_of_rangeE = comdat any

$_ZTIN5adept21gradient_out_of_rangeE = comdat any

$_ZTVN5adept21gradient_out_of_rangeE = comdat any

@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"/\\\00", align 1
@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@.str.7 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"could not open file: %s\0A\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"%i %i %i\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"lstm_l2_c1024.txt\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"lstm_l4_c1024.txt\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"lstm_l2_c4096.txt\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"lstm_l4_c4096.txt\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"starting path %s\0A\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"data/\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"%f \00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"Tapenade combined %0.6f\0A\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"Adept combined %0.6f\0A\00", align 1
@.str.22 = private unnamed_addr constant [23 x i8] c"Enzyme combined %0.6f\0A\00", align 1
@enzyme_const = external dso_local local_unnamed_addr global i32, align 4
@enzyme_dup = external dso_local local_unnamed_addr global i32, align 4
@enzyme_dupnoneed = external dso_local local_unnamed_addr global i32, align 4
@_ZN5adept8internal21array_row_major_orderE = dso_local local_unnamed_addr global i8 1, align 1
@_ZN5adept8internal17array_print_styleE = dso_local local_unnamed_addr global i32 2, align 4
@_ZN5adept8internal16vector_separatorB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.24 = private unnamed_addr constant [3 x i8] c", \00", align 1
@_ZN5adept8internal19vector_print_beforeB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.26 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@_ZN5adept8internal18vector_print_afterB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.28 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZN5adept8internal21array_opening_bracketB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZN5adept8internal21array_closing_bracketB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZN5adept8internal26array_contiguous_separatorB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.33 = private unnamed_addr constant [3 x i8] c",\0A\00", align 1
@_ZN5adept8internal18array_print_beforeB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.35 = private unnamed_addr constant [3 x i8] c"\0A{\00", align 1
@_ZN5adept8internal17array_print_afterB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZN5adept8internal24array_print_empty_beforeB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.38 = private unnamed_addr constant [13 x i8] c"(empty rank-\00", align 1
@_ZN5adept8internal23array_print_empty_afterB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.40 = private unnamed_addr constant [8 x i8] c" array)\00", align 1
@_ZN5adept8internal18array_print_indentE = dso_local local_unnamed_addr global i8 1, align 1
@_ZN5adept8internal22array_print_empty_rankE = dso_local local_unnamed_addr global i8 1, align 1
@.str.41 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.42 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"empty\00", align 1
@.str.44 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.45 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.46 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@.str.47 = private unnamed_addr constant [33 x i8] c"Array print style not understood\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN5adept17invalid_operationE = linkonce_odr dso_local constant [28 x i8] c"N5adept17invalid_operationE\00", comdat, align 1
@_ZTSN5adept15array_exceptionE = linkonce_odr dso_local constant [26 x i8] c"N5adept15array_exceptionE\00", comdat, align 1
@_ZTSN5adept9exceptionE = linkonce_odr dso_local constant [19 x i8] c"N5adept9exceptionE\00", comdat, align 1
@_ZTISt9exception = external dso_local constant i8*
@_ZTIN5adept9exceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTSN5adept9exceptionE, i32 0, i32 0), i8* bitcast (i8** @_ZTISt9exception to i8*) }, comdat, align 8
@_ZTIN5adept15array_exceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN5adept15array_exceptionE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept9exceptionE to i8*) }, comdat, align 8
@_ZTIN5adept17invalid_operationE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN5adept17invalid_operationE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept15array_exceptionE to i8*) }, comdat, align 8
@_ZN5adept21_stack_current_threadE = dso_local thread_local global %"class.adept::Stack"* null, align 8
@_ZN5adept28_stack_current_thread_unsafeE = dso_local local_unnamed_addr global %"class.adept::Stack"* null, align 8
@.str.48 = private unnamed_addr constant [78 x i8] c"Attempt to activate an adept::Stack when one is already active in this thread\00", align 1
@_ZTSN5adept20stack_already_activeE = linkonce_odr dso_local constant [31 x i8] c"N5adept20stack_already_activeE\00", comdat, align 1
@_ZTSN5adept18autodiff_exceptionE = linkonce_odr dso_local constant [29 x i8] c"N5adept18autodiff_exceptionE\00", comdat, align 1
@_ZTIN5adept18autodiff_exceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN5adept18autodiff_exceptionE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept9exceptionE to i8*) }, comdat, align 8
@_ZTIN5adept20stack_already_activeE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @_ZTSN5adept20stack_already_activeE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*) }, comdat, align 8
@.str.49 = private unnamed_addr constant [107 x i8] c"Gradients not initialized: at least one call to set_gradient(s) is needed before a forward or reverse pass\00", align 1
@_ZTSN5adept25gradients_not_initializedE = linkonce_odr dso_local constant [36 x i8] c"N5adept25gradients_not_initializedE\00", comdat, align 1
@_ZTIN5adept25gradients_not_initializedE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTSN5adept25gradients_not_initializedE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*) }, comdat, align 8
@.str.50 = private unnamed_addr constant [5 x i8] c": d[\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"] = \00", align 1
@.str.52 = private unnamed_addr constant [3 x i8] c"0\0A\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c" + \00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"*d[\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.56 = private unnamed_addr constant [26 x i8] c"No gradients initialized\0A\00", align 1
@.str.57 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.58 = private unnamed_addr constant [42 x i8] c"Automatic Differentiation Stack (address \00", align 1
@.str.59 = private unnamed_addr constant [4 x i8] c"):\0A\00", align 1
@.str.60 = private unnamed_addr constant [37 x i8] c"   Currently attached - thread safe\0A\00", align 1
@.str.61 = private unnamed_addr constant [39 x i8] c"   Currently attached - thread unsafe\0A\00", align 1
@.str.62 = private unnamed_addr constant [23 x i8] c"   Currently detached\0A\00", align 1
@.str.63 = private unnamed_addr constant [22 x i8] c"   Recording status:\0A\00", align 1
@.str.64 = private unnamed_addr constant [23 x i8] c"      Recording is ON\0A\00", align 1
@.str.65 = private unnamed_addr constant [27 x i8] c"      Recording is PAUSED\0A\00", align 1
@.str.66 = private unnamed_addr constant [7 x i8] c"      \00", align 1
@.str.67 = private unnamed_addr constant [14 x i8] c" statements (\00", align 1
@.str.68 = private unnamed_addr constant [12 x i8] c" allocated)\00", align 1
@.str.69 = private unnamed_addr constant [6 x i8] c" and \00", align 1
@.str.70 = private unnamed_addr constant [14 x i8] c" operations (\00", align 1
@.str.71 = private unnamed_addr constant [13 x i8] c" allocated)\0A\00", align 1
@.str.72 = private unnamed_addr constant [33 x i8] c" gradients currently registered \00", align 1
@.str.73 = private unnamed_addr constant [16 x i8] c"and a total of \00", align 1
@.str.74 = private unnamed_addr constant [24 x i8] c" needed (current index \00", align 1
@.str.75 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.76 = private unnamed_addr constant [33 x i8] c"      Gradient list has no gaps\0A\00", align 1
@.str.77 = private unnamed_addr constant [25 x i8] c"      Gradient list has \00", align 1
@.str.78 = private unnamed_addr constant [8 x i8] c" gaps (\00", align 1
@.str.79 = private unnamed_addr constant [24 x i8] c"   Computation status:\0A\00", align 1
@.str.80 = private unnamed_addr constant [22 x i8] c" gradients assigned (\00", align 1
@.str.81 = private unnamed_addr constant [29 x i8] c"      0 gradients assigned (\00", align 1
@.str.82 = private unnamed_addr constant [22 x i8] c"      Jacobian size: \00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.84 = private unnamed_addr constant [27 x i8] c"      Independent indices:\00", align 1
@.str.85 = private unnamed_addr constant [28 x i8] c"\0A      Dependent indices:  \00", align 1
@.str.86 = private unnamed_addr constant [51 x i8] c"      Parallel Jacobian calculation not available\0A\00", align 1
@_ZN5adept8internal26n_storage_objects_created_E = dso_local local_unnamed_addr global i32 0, align 4
@_ZN5adept8internal26n_storage_objects_deleted_E = dso_local local_unnamed_addr global i32 0, align 4
@.str.87 = private unnamed_addr constant [74 x i8] c"Cannot perform matrix-matrix multiplication because compiled without BLAS\00", align 1
@_ZTSN5adept21feature_not_availableE = linkonce_odr dso_local constant [32 x i8] c"N5adept21feature_not_availableE\00", comdat, align 1
@_ZTIN5adept21feature_not_availableE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZTSN5adept21feature_not_availableE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept9exceptionE to i8*) }, comdat, align 8
@.str.88 = private unnamed_addr constant [74 x i8] c"Cannot perform matrix-vector multiplication because compiled without BLAS\00", align 1
@.str.89 = private unnamed_addr constant [84 x i8] c"Cannot perform symmetric matrix-matrix multiplication because compiled without BLAS\00", align 1
@.str.90 = private unnamed_addr constant [84 x i8] c"Cannot perform symmetric matrix-vector multiplication because compiled without BLAS\00", align 1
@.str.91 = private unnamed_addr constant [79 x i8] c"Cannot perform band matrix-vector multiplication because compiled without BLAS\00", align 1
@_ZN5adept3endE = dso_local local_unnamed_addr global %"struct.adept::internal::EndIndex" zeroinitializer, align 1
@_ZN5adept2__E = dso_local local_unnamed_addr global %"class.adept::internal::AllIndex" zeroinitializer, align 1
@.str.92 = private unnamed_addr constant [53 x i8] c"Cannot invert matrix because compiled without LAPACK\00", align 1
@.str.93 = private unnamed_addr constant [80 x i8] c"Dependent or independent variables not identified before a Jacobian computation\00", align 1
@_ZTSN5adept41dependents_or_independents_not_identifiedE = linkonce_odr dso_local constant [52 x i8] c"N5adept41dependents_or_independents_not_identifiedE\00", comdat, align 1
@_ZTIN5adept41dependents_or_independents_not_identifiedE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @_ZTSN5adept41dependents_or_independents_not_identifiedE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*) }, comdat, align 8
@.str.94 = private unnamed_addr constant [6 x i8] c"2.0.6\00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.96 = private unnamed_addr constant [9 x i8] c" [4.2.1]\00", align 1
@.str.97 = private unnamed_addr constant [15 x i8] c"Adept version \00", align 1
@.str.98 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@.str.99 = private unnamed_addr constant [17 x i8] c"  Compiled with \00", align 1
@.str.100 = private unnamed_addr constant [19 x i8] c"  Compiler flags \22\00", align 1
@.str.101 = private unnamed_addr constant [3 x i8] c"\22\0A\00", align 1
@.str.102 = private unnamed_addr constant [41 x i8] c"  Jacobians processed in blocks of size \00", align 1
@.str.103 = private unnamed_addr constant [62 x i8] c"Cannot solve linear equations because compiled without LAPACK\00", align 1
@.str.104 = private unnamed_addr constant [47 x i8] c"linspace(x1,x2,n) with n=1 only valid if x1=x2\00", align 1
@.str.105 = private unnamed_addr constant [28 x i8] c"A misuse of arrays occurred\00", align 1
@_ZTVN5adept17invalid_operationE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_operationE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::invalid_operation"*)* @_ZN5adept17invalid_operationD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept15array_exceptionE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept15array_exceptionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::array_exception"*)* @_ZN5adept15array_exceptionD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept9exceptionE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept9exceptionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept20stack_already_activeE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept20stack_already_activeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::stack_already_active"*)* @_ZN5adept20stack_already_activeD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept25gradients_not_initializedE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept25gradients_not_initializedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::gradients_not_initialized"*)* @_ZN5adept25gradients_not_initializedD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept21feature_not_availableE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::feature_not_available"*)* @_ZN5adept21feature_not_availableD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept41dependents_or_independents_not_identifiedE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept41dependents_or_independents_not_identifiedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::dependents_or_independents_not_identified"*)* @_ZN5adept41dependents_or_independents_not_identifiedD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@.str.106 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@.str.108 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@.str.109 = private unnamed_addr constant [21 x i8] c"basic_string::substr\00", align 1
@.str.110 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1
@.str.112 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.113 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE = external dso_local unnamed_addr constant { [16 x i8*] }, align 8
@_ZTVSt15basic_streambufIcSt11char_traitsIcEE = external dso_local unnamed_addr constant { [16 x i8*] }, align 8
@_ZTISt9bad_alloc = external dso_local constant i8*
@_ZTVSt9bad_alloc = external dso_local unnamed_addr constant { [5 x i8*] }, align 8
@.str.115 = private unnamed_addr constant [35 x i8] c"Negative array dimension requested\00", align 1
@.str.116 = private unnamed_addr constant [89 x i8] c"/localhome/mha157/Enzyme/enzyme/build/benchmarks/adept2/src/adept2/include/adept/Array.h\00", align 1
@_ZTSN5adept17invalid_dimensionE = linkonce_odr dso_local constant [28 x i8] c"N5adept17invalid_dimensionE\00", comdat, align 1
@_ZTIN5adept17invalid_dimensionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN5adept17invalid_dimensionE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept15array_exceptionE to i8*) }, comdat, align 8
@.str.117 = private unnamed_addr constant [58 x i8] c"Attempt to remove more links to a storage object than set\00", align 1
@.str.118 = private unnamed_addr constant [91 x i8] c"/localhome/mha157/Enzyme/enzyme/build/benchmarks/adept2/src/adept2/include/adept/Storage.h\00", align 1
@.str.119 = private unnamed_addr constant [6 x i8] c" (in \00", align 1
@.str.120 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZTVN5adept17invalid_dimensionE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_dimensionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::invalid_dimension"*)* @_ZN5adept17invalid_dimensionD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@.str.121 = private unnamed_addr constant [99 x i8] c"Gradient index out of range: probably aReal objects have been created after a set_gradient(s) call\00", align 1
@_ZTSN5adept21gradient_out_of_rangeE = linkonce_odr dso_local constant [32 x i8] c"N5adept21gradient_out_of_rangeE\00", comdat, align 1
@_ZTIN5adept21gradient_out_of_rangeE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZTSN5adept21gradient_out_of_rangeE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*) }, comdat, align 8
@_ZTVN5adept21gradient_out_of_rangeE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21gradient_out_of_rangeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::gradient_out_of_range"*)* @_ZN5adept21gradient_out_of_rangeD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_lstm.cpp, i8* null }]
@str = private unnamed_addr constant [14 x i8] c"starting main\00", align 1
@ResultFormatStrIR = global [6 x i8] c"Node\0A\00"

@_ZN5adept5StackD1Ev = dso_local unnamed_addr alias void (%"class.adept::Stack"*), void (%"class.adept::Stack"*)* @_ZN5adept5StackD2Ev
@_ZN5adept8internal16StackStorageOrigD1Ev = dso_local unnamed_addr alias void (%"class.adept::internal::StackStorageOrig"*), void (%"class.adept::internal::StackStorageOrig"*)* @_ZN5adept8internal16StackStorageOrigD2Ev

; Function Attrs: uwtable
define dso_local void @_Z8getTestsRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEPKcS5_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %tests, i8* %name, %"class.std::__cxx11::basic_string"* nocapture readonly %indent) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i.i139 = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %__dnew.i.i.i.i.i = alloca i64, align 8
  %path = alloca [1024 x i8], align 16
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp24 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp30 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp46 = alloca %"class.std::__cxx11::basic_string", align 8
  %call = tail call %struct.__dirstream* @opendir(i8* %name)
  %tobool.not = icmp eq %struct.__dirstream* %call, null
  br i1 %tobool.not, label %cleanup56, label %while.cond.preheader

while.cond.preheader:                             ; preds = %entry
  %call2228 = call %struct.dirent* @readdir(%struct.__dirstream* nonnull %call)
  %cmp.not229 = icmp eq %struct.dirent* %call2228, null
  br i1 %cmp.not229, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to i8*
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to %union.anon**
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 1
  %5 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp30 to i8*
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp30, i64 0, i32 2
  %7 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp30 to %union.anon**
  %8 = bitcast %union.anon* %6 to i8*
  %9 = bitcast %union.anon* %6 to i32*
  %_M_string_length.i.i.i.i.i.i122 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp30, i64 0, i32 1
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp46 to i8*
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp46, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp46 to %union.anon**
  %_M_p.i13.i.i140 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %indent, i64 0, i32 0, i32 0
  %_M_string_length.i.i.i141 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %indent, i64 0, i32 1
  %13 = bitcast i64* %__dnew.i.i.i.i.i139 to i8*
  %14 = bitcast %union.anon* %11 to i8*
  %_M_p.i13.i.i.i.i.i145 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp46, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i.i146 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp46, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i.i152 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp46, i64 0, i32 1
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %tests, i64 0, i32 0, i32 0, i32 0, i32 1
  %_M_end_of_storage.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %tests, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0
  %16 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %18 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  %19 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  %20 = bitcast %union.anon* %17 to i8*
  %_M_p.i13.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %22 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  %_M_p.i23.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  %arraydecay.i.i.i = bitcast %union.anon* %21 to i8*
  %_M_string_length.i.i.i86 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  %arrayidx.i.i.i.i.i123 = getelementptr inbounds i8, i8* %8, i64 4
  br label %while.body

while.body:                                       ; preds = %while.cond.backedge, %while.body.lr.ph
  %call2230 = phi %struct.dirent* [ %call2228, %while.body.lr.ph ], [ %call2, %while.cond.backedge ]
  %d_type = getelementptr inbounds %struct.dirent, %struct.dirent* %call2230, i64 0, i32 3
  %23 = load i8, i8* %d_type, align 2, !tbaa !2
  %cmp3 = icmp eq i8 %23, 4
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %while.body
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %15) #37
  %arraydecay = getelementptr inbounds %struct.dirent, %struct.dirent* %call2230, i64 0, i32 4, i64 0
  %call5 = call i32 @strcmp(i8* nonnull %arraydecay, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #38
  %cmp6 = icmp eq i32 %call5, 0
  br i1 %cmp6, label %cleanup, label %lor.lhs.false, !llvm.loop !8

lor.lhs.false:                                    ; preds = %if.then4
  %call9 = call i32 @strcmp(i8* nonnull %arraydecay, i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #38
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %cleanup, label %if.end12, !llvm.loop !8

if.end12:                                         ; preds = %lor.lhs.false
  %call16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %15, i64 1024, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8* %name, i8* nonnull %arraydecay) #37
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #37
  call void @llvm.experimental.noalias.scope.decl(metadata !11)
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !14, !alias.scope !11
  %24 = load i8*, i8** %_M_p.i13.i.i140, align 8, !tbaa !17, !noalias !11
  %25 = load i64, i64* %_M_string_length.i.i.i141, align 8, !tbaa !19, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #37, !noalias !11
  store i64 %25, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !11
  %cmp3.i.i.i.i.i = icmp ugt i64 %25, 15
  br i1 %cmp3.i.i.i.i.i, label %if.then4.i.i.i.i.i, label %if.end6.i.i.i.i.i

if.then4.i.i.i.i.i:                               ; preds = %if.end12
  %call5.i.i.i12.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i.i, i64 0)
  store i8* %call5.i.i.i12.i.i, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !11
  %26 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !11
  store i64 %26, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !21, !alias.scope !11
  br label %if.end6.i.i.i.i.i

if.end6.i.i.i.i.i:                                ; preds = %if.then4.i.i.i.i.i, %if.end12
  %27 = phi i8* [ %call5.i.i.i12.i.i, %if.then4.i.i.i.i.i ], [ %20, %if.end12 ]
  switch i64 %25, label %if.end.i.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i.i
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
  ]

if.then.i.i.i.i.i.i.i:                            ; preds = %if.end6.i.i.i.i.i
  %28 = load i8, i8* %24, align 1, !tbaa !21
  store i8 %28, i8* %27, align 1, !tbaa !21
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i

if.end.i.i.i.i.i.i.i.i:                           ; preds = %if.end6.i.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %24, i64 %25, i1 false) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i: ; preds = %if.end.i.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i, %if.end6.i.i.i.i.i
  %29 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !11
  store i64 %29, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19, !alias.scope !11
  %30 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !11
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %30, i64 %29
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #37, !noalias !11
  %call.i.i.i = call i64 @strlen(i8* nonnull dereferenceable(1) %arraydecay) #37, !noalias !11
  %31 = load i64, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19, !alias.scope !11
  %sub3.i.i.i = sub i64 4611686018427387903, %31
  %cmp.i.i.i = icmp ult i64 %sub3.i.i.i, %call.i.i.i
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i

if.then.i.i.i:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.106, i64 0, i64 0)) #39
          to label %.noexc.i unwind label %lpad.i.loopexit.split-lp

.noexc.i:                                         ; preds = %if.then.i.i.i
  unreachable

_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
  %call2.i2.i = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* nonnull %arraydecay, i64 %call.i.i.i)
          to label %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit unwind label %lpad.i.loopexit

lpad.i.loopexit:                                  ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
  %lpad.loopexit189 = landingpad { i8*, i32 }
          cleanup
  br label %lpad.i

lpad.i.loopexit.split-lp:                         ; preds = %if.then.i.i.i
  %lpad.loopexit.split-lp190 = landingpad { i8*, i32 }
          cleanup
  br label %lpad.i

lpad.i:                                           ; preds = %lpad.i.loopexit.split-lp, %lpad.i.loopexit
  %lpad.phi191 = phi { i8*, i32 } [ %lpad.loopexit189, %lpad.i.loopexit ], [ %lpad.loopexit.split-lp190, %lpad.i.loopexit.split-lp ]
  %32 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !11
  %cmp.i.i.i.i = icmp eq i8* %32, %20
  br i1 %cmp.i.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i, label %if.then.i.i3.i

if.then.i.i3.i:                                   ; preds = %lpad.i
  call void @_ZdlPv(i8* %32) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i: ; preds = %if.then.i.i3.i, %lpad.i
  resume { i8*, i32 } %lpad.phi191

_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit: ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
  call void @llvm.experimental.noalias.scope.decl(metadata !22)
  %33 = load i64, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19, !noalias !22
  %cmp.i.i.i84 = icmp eq i64 %33, 4611686018427387903
  br i1 %cmp.i.i.i84, label %if.then.i.i.i85, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i

if.then.i.i.i85:                                  ; preds = %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.106, i64 0, i64 0)) #39
          to label %.noexc unwind label %lpad.loopexit.split-lp193

.noexc:                                           ; preds = %if.then.i.i.i85
  unreachable

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i: ; preds = %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit
  %call2.i.i87 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1)
          to label %call2.i.i.noexc unwind label %lpad.loopexit192

call2.i.i.noexc:                                  ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !14, !alias.scope !22
  %_M_p.i.i25.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call2.i.i87, i64 0, i32 0, i32 0
  %34 = load i8*, i8** %_M_p.i.i25.i.i, align 8, !tbaa !17
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call2.i.i87, i64 0, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %35 to i8*
  %cmp.i.i2.i = icmp eq i8* %34, %arraydecay.i.i.i.i
  br i1 %cmp.i.i2.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %call2.i.i.noexc
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %arraydecay.i.i.i, i8* nonnull align 8 dereferenceable(16) %34, i64 16, i1 false) #37
  br label %invoke.cont

if.else.i.i:                                      ; preds = %call2.i.i.noexc
  store i8* %34, i8** %_M_p.i23.i.i, align 8, !tbaa !17, !alias.scope !22
  %_M_allocated_capacity.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call2.i.i87, i64 0, i32 2, i32 0
  %36 = load i64, i64* %_M_allocated_capacity.i.i, align 8, !tbaa !21
  store i64 %36, i64* %_M_allocated_capacity.i.i.i, align 8, !tbaa !21, !alias.scope !22
  br label %invoke.cont

invoke.cont:                                      ; preds = %if.else.i.i, %if.then.i.i
  %_M_string_length.i22.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call2.i.i87, i64 0, i32 1
  %37 = load i64, i64* %_M_string_length.i22.i.i, align 8, !tbaa !19
  store i64 %37, i64* %_M_string_length.i.i.i86, align 8, !tbaa !19, !alias.scope !22
  %38 = bitcast %"class.std::__cxx11::basic_string"* %call2.i.i87 to %union.anon**
  store %union.anon* %35, %union.anon** %38, align 8, !tbaa !17
  store i64 0, i64* %_M_string_length.i22.i.i, align 8, !tbaa !19
  store i8 0, i8* %arraydecay.i.i.i.i, align 8, !tbaa !21
  invoke void @_Z8getTestsRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEPKcS5_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %tests, i8* nonnull %15, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp)
          to label %invoke.cont21 unwind label %lpad20

invoke.cont21:                                    ; preds = %invoke.cont
  %39 = load i8*, i8** %_M_p.i23.i.i, align 8, !tbaa !17
  %cmp.i.i.i93 = icmp eq i8* %39, %arraydecay.i.i.i
  br i1 %cmp.i.i.i93, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit95, label %if.then.i.i94

if.then.i.i94:                                    ; preds = %invoke.cont21
  call void @_ZdlPv(i8* %39) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit95

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit95: ; preds = %if.then.i.i94, %invoke.cont21
  %40 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i98 = icmp eq i8* %40, %20
  br i1 %cmp.i.i.i98, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit100, label %if.then.i.i99

if.then.i.i99:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit95
  call void @_ZdlPv(i8* %40) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit100

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit100: ; preds = %if.then.i.i99, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #37
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %15) #37
  br label %while.cond.backedge

cleanup:                                          ; preds = %lor.lhs.false, %if.then4
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %15) #37
  br label %while.cond.backedge

lpad.loopexit192:                                 ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
  %lpad.loopexit194 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad.loopexit.split-lp193:                        ; preds = %if.then.i.i.i85
  %lpad.loopexit.split-lp195 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad20:                                           ; preds = %invoke.cont
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = load i8*, i8** %_M_p.i23.i.i, align 8, !tbaa !17
  %cmp.i.i.i103 = icmp eq i8* %42, %arraydecay.i.i.i
  br i1 %cmp.i.i.i103, label %ehcleanup, label %if.then.i.i104

if.then.i.i104:                                   ; preds = %lpad20
  call void @_ZdlPv(i8* %42) #37
  br label %ehcleanup

ehcleanup:                                        ; preds = %if.then.i.i104, %lpad20, %lpad.loopexit.split-lp193, %lpad.loopexit192
  %.pn79 = phi { i8*, i32 } [ %41, %lpad20 ], [ %41, %if.then.i.i104 ], [ %lpad.loopexit194, %lpad.loopexit192 ], [ %lpad.loopexit.split-lp195, %lpad.loopexit.split-lp193 ]
  %43 = load i8*, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i108 = icmp eq i8* %43, %20
  br i1 %cmp.i.i.i108, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit110, label %if.then.i.i109

if.then.i.i109:                                   ; preds = %ehcleanup
  call void @_ZdlPv(i8* %43) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit110

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit110: ; preds = %if.then.i.i109, %ehcleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #37
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %15) #37
  br label %ehcleanup57

if.else:                                          ; preds = %while.body
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %arraydecay26 = getelementptr inbounds %struct.dirent, %struct.dirent* %call2230, i64 0, i32 4, i64 0
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %call.i.i = call i64 @strlen(i8* nonnull dereferenceable(1) %arraydecay26) #37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 %call.i.i, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %cmp3.i.i.i.i = icmp ugt i64 %call.i.i, 15
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.else
  %call5.i.i.i9.i111 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp24, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
  store i8* %call5.i.i.i9.i111, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %44 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  store i64 %44, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  br label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.then4.i.i.i.i, %if.else
  %45 = phi i8* [ %call5.i.i.i9.i111, %if.then4.i.i.i.i ], [ %3, %if.else ]
  switch i64 %call.i.i, label %if.end.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i
    i64 0, label %invoke.cont29
  ]

if.then.i.i.i.i.i.i:                              ; preds = %if.end6.i.i.i.i
  %46 = load i8, i8* %arraydecay26, align 1, !tbaa !21
  store i8 %46, i8* %45, align 1, !tbaa !21
  br label %invoke.cont29

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end6.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* nonnull align 1 %arraydecay26, i64 %call.i.i, i1 false) #37
  br label %invoke.cont29

invoke.cont29:                                    ; preds = %if.end.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i, %if.end6.i.i.i.i
  %47 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  store i64 %47, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %48 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %48, i64 %47
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #37
  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !14
  store i32 1954051118, i32* %9, align 8
  store i64 4, i64* %_M_string_length.i.i.i.i.i.i122, align 8, !tbaa !19
  store i8 0, i8* %arrayidx.i.i.i.i.i123, align 4, !tbaa !21
  %49 = load i64, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %cmp.i = icmp ult i64 %49, 4
  br i1 %cmp.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit133, label %for.body.i.i.preheader.i.i

for.body.i.i.preheader.i.i:                       ; preds = %invoke.cont29
  %50 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17, !noalias !25
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %50, i64 %49
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.i.i.preheader.i.i
  %agg.tmp2.sroa.0.0.i.i.i = phi i8* [ %add.ptr.i.i.i, %for.body.i.i.preheader.i.i ], [ %incdec.ptr.i9.i.i.i.i, %for.body.i.i.i.i ]
  %51 = phi i8* [ %arrayidx.i.i.i.i.i123, %for.body.i.i.preheader.i.i ], [ %incdec.ptr.i11.i.i.i.i, %for.body.i.i.i.i ]
  %incdec.ptr.i11.i.i.i.i = getelementptr inbounds i8, i8* %51, i64 -1
  %52 = load i8, i8* %incdec.ptr.i11.i.i.i.i, align 1, !tbaa !21
  %incdec.ptr.i9.i.i.i.i = getelementptr inbounds i8, i8* %agg.tmp2.sroa.0.0.i.i.i, i64 -1
  %53 = load i8, i8* %incdec.ptr.i9.i.i.i.i, align 1, !tbaa !21
  %cmp.i.i.i.i128 = icmp eq i8 %52, %53
  %cmp.i.i.not.i.i.i.i = icmp ne i8* %incdec.ptr.i11.i.i.i.i, %8
  %54 = and i1 %cmp.i.i.i.i128, %cmp.i.i.not.i.i.i.i
  br i1 %54, label %for.body.i.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit133, !llvm.loop !28

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit133: ; preds = %for.body.i.i.i.i, %invoke.cont29
  %retval.0.i = phi i1 [ false, %invoke.cont29 ], [ %cmp.i.i.i.i128, %for.body.i.i.i.i ]
  %.pre = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #37
  %cmp.i.i.i136 = icmp eq i8* %.pre, %3
  br i1 %cmp.i.i.i136, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit138, label %if.then.i.i137

if.then.i.i137:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit133
  call void @_ZdlPv(i8* %.pre) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit138

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit138: ; preds = %if.then.i.i137, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit133
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br i1 %retval.0.i, label %if.then45, label %while.cond.backedge

if.then45:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit138
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #37
  call void @llvm.experimental.noalias.scope.decl(metadata !29)
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !14, !alias.scope !29
  %55 = load i8*, i8** %_M_p.i13.i.i140, align 8, !tbaa !17, !noalias !29
  %56 = load i64, i64* %_M_string_length.i.i.i141, align 8, !tbaa !19, !noalias !29
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #37, !noalias !29
  store i64 %56, i64* %__dnew.i.i.i.i.i139, align 8, !tbaa !20, !noalias !29
  %cmp3.i.i.i.i.i142 = icmp ugt i64 %56, 15
  br i1 %cmp3.i.i.i.i.i142, label %if.then4.i.i.i.i.i147, label %if.end6.i.i.i.i.i148

if.then4.i.i.i.i.i147:                            ; preds = %if.then45
  %call5.i.i.i12.i.i144 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp46, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i.i139, i64 0)
  store i8* %call5.i.i.i12.i.i144, i8** %_M_p.i13.i.i.i.i.i145, align 8, !tbaa !17, !alias.scope !29
  %57 = load i64, i64* %__dnew.i.i.i.i.i139, align 8, !tbaa !20, !noalias !29
  store i64 %57, i64* %_M_allocated_capacity.i.i.i.i.i.i146, align 8, !tbaa !21, !alias.scope !29
  br label %if.end6.i.i.i.i.i148

if.end6.i.i.i.i.i148:                             ; preds = %if.then4.i.i.i.i.i147, %if.then45
  %58 = phi i8* [ %call5.i.i.i12.i.i144, %if.then4.i.i.i.i.i147 ], [ %14, %if.then45 ]
  switch i64 %56, label %if.end.i.i.i.i.i.i.i.i150 [
    i64 1, label %if.then.i.i.i.i.i.i.i149
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i157
  ]

if.then.i.i.i.i.i.i.i149:                         ; preds = %if.end6.i.i.i.i.i148
  %59 = load i8, i8* %55, align 1, !tbaa !21
  store i8 %59, i8* %58, align 1, !tbaa !21
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i157

if.end.i.i.i.i.i.i.i.i150:                        ; preds = %if.end6.i.i.i.i.i148
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %55, i64 %56, i1 false) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i157

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i157: ; preds = %if.end.i.i.i.i.i.i.i.i150, %if.then.i.i.i.i.i.i.i149, %if.end6.i.i.i.i.i148
  %60 = load i64, i64* %__dnew.i.i.i.i.i139, align 8, !tbaa !20, !noalias !29
  store i64 %60, i64* %_M_string_length.i.i.i.i.i.i.i152, align 8, !tbaa !19, !alias.scope !29
  %61 = load i8*, i8** %_M_p.i13.i.i.i.i.i145, align 8, !tbaa !17, !alias.scope !29
  %arrayidx.i.i.i.i.i.i153 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %arrayidx.i.i.i.i.i.i153, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #37, !noalias !29
  %call.i.i.i154 = call i64 @strlen(i8* nonnull dereferenceable(1) %arraydecay26) #37, !noalias !29
  %62 = load i64, i64* %_M_string_length.i.i.i.i.i.i.i152, align 8, !tbaa !19, !alias.scope !29
  %sub3.i.i.i155 = sub i64 4611686018427387903, %62
  %cmp.i.i.i156 = icmp ult i64 %sub3.i.i.i155, %call.i.i.i154
  br i1 %cmp.i.i.i156, label %if.then.i.i.i158, label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i161

if.then.i.i.i158:                                 ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i157
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.106, i64 0, i64 0)) #39
          to label %.noexc.i159 unwind label %lpad.i164.loopexit.split-lp

.noexc.i159:                                      ; preds = %if.then.i.i.i158
  unreachable

_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i161: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i157
  %call2.i2.i160 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp46, i8* nonnull %arraydecay26, i64 %call.i.i.i154)
          to label %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit167 unwind label %lpad.i164.loopexit

lpad.i164.loopexit:                               ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i161
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %lpad.i164

lpad.i164.loopexit.split-lp:                      ; preds = %if.then.i.i.i158
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %lpad.i164

lpad.i164:                                        ; preds = %lpad.i164.loopexit.split-lp, %lpad.i164.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %lpad.i164.loopexit ], [ %lpad.loopexit.split-lp, %lpad.i164.loopexit.split-lp ]
  %63 = load i8*, i8** %_M_p.i13.i.i.i.i.i145, align 8, !tbaa !17, !alias.scope !29
  %cmp.i.i.i.i163 = icmp eq i8* %63, %14
  br i1 %cmp.i.i.i.i163, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i166, label %if.then.i.i3.i165

if.then.i.i3.i165:                                ; preds = %lpad.i164
  call void @_ZdlPv(i8* %63) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i166

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i166: ; preds = %if.then.i.i3.i165, %lpad.i164
  resume { i8*, i32 } %lpad.phi

_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit167: ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i161
  %64 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish.i.i, align 8, !tbaa !32
  %65 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_end_of_storage.i.i, align 8, !tbaa !34
  %cmp.not.i.i = icmp eq %"class.std::__cxx11::basic_string"* %64, %65
  br i1 %cmp.not.i.i, label %if.else.i.i172, label %if.then.i.i168

if.then.i.i168:                                   ; preds = %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit167
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2
  %67 = bitcast %"class.std::__cxx11::basic_string"* %64 to %union.anon**
  store %union.anon* %66, %union.anon** %67, align 8, !tbaa !14
  %68 = load i8*, i8** %_M_p.i13.i.i.i.i.i145, align 8, !tbaa !17
  %cmp.i.i.i.i.i.i = icmp eq i8* %68, %14
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i.i.i, label %if.else.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %if.then.i.i168
  %arraydecay.i.i.i.i.i.i = bitcast %union.anon* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(16) %arraydecay.i.i.i.i.i.i, i8* nonnull align 8 dereferenceable(16) %14, i64 16, i1 false) #37
  br label %invoke.cont50.thread

if.else.i.i.i.i.i:                                ; preds = %if.then.i.i168
  %_M_p.i23.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 0, i32 0
  store i8* %68, i8** %_M_p.i23.i.i.i.i.i, align 8, !tbaa !17
  %69 = load i64, i64* %_M_allocated_capacity.i.i.i.i.i.i146, align 8, !tbaa !21
  %_M_allocated_capacity.i.i.i.i.i.i170 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2, i32 0
  store i64 %69, i64* %_M_allocated_capacity.i.i.i.i.i.i170, align 8, !tbaa !21
  br label %invoke.cont50.thread

invoke.cont50.thread:                             ; preds = %if.else.i.i.i.i.i, %if.then.i.i.i.i.i
  %70 = load i64, i64* %_M_string_length.i.i.i.i.i.i.i152, align 8, !tbaa !19
  %_M_string_length.i.i.i.i.i.i171 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 1
  store i64 %70, i64* %_M_string_length.i.i.i.i.i.i171, align 8, !tbaa !19
  %71 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish.i.i, align 8, !tbaa !32
  %incdec.ptr.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %71, i64 1
  store %"class.std::__cxx11::basic_string"* %incdec.ptr.i.i, %"class.std::__cxx11::basic_string"** %_M_finish.i.i, align 8, !tbaa !32
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit178

if.else.i.i172:                                   ; preds = %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit167
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull dereferenceable(24) %tests, %"class.std::__cxx11::basic_string"* %64, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp46)
          to label %invoke.cont50 unwind label %lpad49

invoke.cont50:                                    ; preds = %if.else.i.i172
  %.pre231 = load i8*, i8** %_M_p.i13.i.i.i.i.i145, align 8, !tbaa !17
  %cmp.i.i.i176 = icmp eq i8* %.pre231, %14
  br i1 %cmp.i.i.i176, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit178, label %if.then.i.i177

if.then.i.i177:                                   ; preds = %invoke.cont50
  call void @_ZdlPv(i8* %.pre231) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit178

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit178: ; preds = %if.then.i.i177, %invoke.cont50, %invoke.cont50.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #37
  br label %while.cond.backedge

lpad49:                                           ; preds = %if.else.i.i172
  %72 = landingpad { i8*, i32 }
          cleanup
  %73 = load i8*, i8** %_M_p.i13.i.i.i.i.i145, align 8, !tbaa !17
  %cmp.i.i.i89 = icmp eq i8* %73, %14
  br i1 %cmp.i.i.i89, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i90

if.then.i.i90:                                    ; preds = %lpad49
  call void @_ZdlPv(i8* %73) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i90, %lpad49
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #37
  br label %ehcleanup57

while.cond.backedge:                              ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit178, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit138, %cleanup, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit100
  %call2 = call %struct.dirent* @readdir(%struct.__dirstream* nonnull %call)
  %cmp.not = icmp eq %struct.dirent* %call2, null
  br i1 %cmp.not, label %while.end, label %while.body, !llvm.loop !8

while.end:                                        ; preds = %while.cond.backedge, %while.cond.preheader
  %call55 = call i32 @closedir(%struct.__dirstream* nonnull %call)
  br label %cleanup56

cleanup56:                                        ; preds = %while.end, %entry
  ret void

ehcleanup57:                                      ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit110
  %.pn79.pn = phi { i8*, i32 } [ %.pn79, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit110 ], [ %72, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit ]
  resume { i8*, i32 } %.pn79.pn
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare dso_local noalias noundef %struct.__dirstream* @opendir(i8* nocapture noundef readonly) local_unnamed_addr #2

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare dso_local i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @snprintf(i8* noalias nocapture noundef writeonly, i64 noundef, i8* nocapture noundef readonly, ...) local_unnamed_addr #2

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32)) unnamed_addr #5 align 2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @closedir(%struct.__dirstream* nocapture noundef) local_unnamed_addr #2

; Function Attrs: nounwind uwtable mustprogress
define dso_local i64 @_Z15find_last_slashRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %filepath) local_unnamed_addr #6 {
entry:
  %call2.i = tail call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filepath, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 -1, i64 2) #37
  ret i64 %call2.i
}

; Function Attrs: uwtable
define dso_local void @_Z20filepath_to_basenameRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %filepath) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i.i33 = alloca i64, align 8
  %__dnew.i.i.i.i16 = alloca i64, align 8
  %__dnew.i.i.i.i.i = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %filename = alloca %"class.std::__cxx11::basic_string", align 8
  %call2.i.i = tail call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filepath, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 -1, i64 2) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %filename to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %cmp = icmp eq i64 %call2.i.i, -1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %filename to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %_M_p.i13.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filepath, i64 0, i32 0, i32 0
  %3 = load i8*, i8** %_M_p.i13.i, align 8, !tbaa !17
  %_M_string_length.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filepath, i64 0, i32 1
  %4 = load i64, i64* %_M_string_length.i.i, align 8, !tbaa !19
  %5 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #37
  store i64 %4, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %cmp3.i.i.i.i = icmp ugt i64 %4, 15
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end.if.end6_crit_edge.i.i.i.i

if.end.if.end6_crit_edge.i.i.i.i:                 ; preds = %cond.true
  %6 = bitcast %union.anon* %1 to i8*
  br label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %cond.true
  %call5.i.i.i12.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filename, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i12.i, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %7 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 2, i32 0
  store i64 %7, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  br label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.then4.i.i.i.i, %if.end.if.end6_crit_edge.i.i.i.i
  %8 = phi i8* [ %6, %if.end.if.end6_crit_edge.i.i.i.i ], [ %call5.i.i.i12.i, %if.then4.i.i.i.i ]
  switch i64 %4, label %if.end.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  ]

if.then.i.i.i.i.i.i:                              ; preds = %if.end6.i.i.i.i
  %9 = load i8, i8* %3, align 1, !tbaa !21
  store i8 %9, i8* %8, align 1, !tbaa !21
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end6.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %3, i64 %4, i1 false) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit: ; preds = %if.end.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i, %if.end6.i.i.i.i
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  %10 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 1
  store i64 %10, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %11 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %11, i64 %10
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #37
  br label %cond.end

cond.false:                                       ; preds = %entry
  %add = add nuw i64 %call2.i.i, 1
  tail call void @llvm.experimental.noalias.scope.decl(metadata !35)
  %_M_string_length.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filepath, i64 0, i32 1
  %12 = load i64, i64* %_M_string_length.i.i.i, align 8, !tbaa !19, !noalias !35
  %cmp.i.i.not = icmp ugt i64 %12, %call2.i.i
  br i1 %cmp.i.i.not, label %invoke.cont4.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %cond.false
  tail call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.109, i64 0, i64 0), i64 %add, i64 %12) #39
  unreachable

invoke.cont4.i.i:                                 ; preds = %cond.false
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 2
  %14 = bitcast %"class.std::__cxx11::basic_string"* %filename to %union.anon**
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !14, !alias.scope !35
  %15 = bitcast %union.anon* %13 to i8*
  %_M_p.i20.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filepath, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %_M_p.i20.i.i, align 8, !tbaa !17, !noalias !35
  %add.ptr.i.i = getelementptr inbounds i8, i8* %16, i64 %add
  %sub.i.i.i = sub i64 %12, %add
  %17 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #37, !noalias !35
  store i64 %sub.i.i.i, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !35
  %cmp3.i.i.i.i.i = icmp ugt i64 %sub.i.i.i, 15
  br i1 %cmp3.i.i.i.i.i, label %if.then4.i.i.i.i.i, label %if.end6.i.i.i.i.i

if.then4.i.i.i.i.i:                               ; preds = %invoke.cont4.i.i
  %call5.i.i.i16.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filename, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i.i, i64 0)
  %_M_p.i13.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i16.i.i, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !35
  %18 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !35
  %_M_allocated_capacity.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 2, i32 0
  store i64 %18, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !21, !alias.scope !35
  br label %if.end6.i.i.i.i.i

if.end6.i.i.i.i.i:                                ; preds = %if.then4.i.i.i.i.i, %invoke.cont4.i.i
  %19 = phi i8* [ %call5.i.i.i16.i.i, %if.then4.i.i.i.i.i ], [ %15, %invoke.cont4.i.i ]
  switch i64 %sub.i.i.i, label %if.end.i.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i.i
    i64 0, label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit
  ]

if.then.i.i.i.i.i.i.i:                            ; preds = %if.end6.i.i.i.i.i
  %20 = load i8, i8* %add.ptr.i.i, align 1, !tbaa !21
  store i8 %20, i8* %19, align 1, !tbaa !21
  br label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit

if.end.i.i.i.i.i.i.i.i:                           ; preds = %if.end6.i.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %add.ptr.i.i, i64 %sub.i.i.i, i1 false) #37
  br label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit

_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit: ; preds = %if.end.i.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i, %if.end6.i.i.i.i.i
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  %21 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !35
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 1
  store i64 %21, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19, !alias.scope !35
  %22 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !35
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %22, i64 %21
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #37, !noalias !35
  br label %cond.end

cond.end:                                         ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  %call.i = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filename, i8 signext 46, i64 -1) #37
  %cmp2 = icmp eq i64 %call.i, -1
  br i1 %cmp2, label %cond.true3, label %cond.false4

cond.true3:                                       ; preds = %cond.end
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %24 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %23, %union.anon** %24, align 8, !tbaa !14
  %_M_p.i13.i17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %_M_p.i13.i17, align 8, !tbaa !17
  %_M_string_length.i.i18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 1
  %26 = load i64, i64* %_M_string_length.i.i18, align 8, !tbaa !19
  %27 = bitcast i64* %__dnew.i.i.i.i16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #37
  store i64 %26, i64* %__dnew.i.i.i.i16, align 8, !tbaa !20
  %cmp3.i.i.i.i19 = icmp ugt i64 %26, 15
  br i1 %cmp3.i.i.i.i19, label %if.then4.i.i.i.i24, label %if.end.if.end6_crit_edge.i.i.i.i20

if.end.if.end6_crit_edge.i.i.i.i20:               ; preds = %cond.true3
  %28 = bitcast %union.anon* %23 to i8*
  br label %if.end6.i.i.i.i25

if.then4.i.i.i.i24:                               ; preds = %cond.true3
  %call5.i.i.i12.i2131 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i16, i64 0)
          to label %call5.i.i.i12.i21.noexc unwind label %lpad

call5.i.i.i12.i21.noexc:                          ; preds = %if.then4.i.i.i.i24
  %_M_p.i13.i.i.i.i22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i12.i2131, i8** %_M_p.i13.i.i.i.i22, align 8, !tbaa !17
  %29 = load i64, i64* %__dnew.i.i.i.i16, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2, i32 0
  store i64 %29, i64* %_M_allocated_capacity.i.i.i.i.i23, align 8, !tbaa !21
  br label %if.end6.i.i.i.i25

if.end6.i.i.i.i25:                                ; preds = %call5.i.i.i12.i21.noexc, %if.end.if.end6_crit_edge.i.i.i.i20
  %30 = phi i8* [ %28, %if.end.if.end6_crit_edge.i.i.i.i20 ], [ %call5.i.i.i12.i2131, %call5.i.i.i12.i21.noexc ]
  switch i64 %26, label %if.end.i.i.i.i.i.i.i27 [
    i64 1, label %if.then.i.i.i.i.i.i26
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit32
  ]

if.then.i.i.i.i.i.i26:                            ; preds = %if.end6.i.i.i.i25
  %31 = load i8, i8* %25, align 1, !tbaa !21
  store i8 %31, i8* %30, align 1, !tbaa !21
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit32

if.end.i.i.i.i.i.i.i27:                           ; preds = %if.end6.i.i.i.i25
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %25, i64 %26, i1 false) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit32

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit32: ; preds = %if.end.i.i.i.i.i.i.i27, %if.then.i.i.i.i.i.i26, %if.end6.i.i.i.i25
  %_M_p.i.i.i.i.i28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  %32 = load i64, i64* %__dnew.i.i.i.i16, align 8, !tbaa !20
  %_M_string_length.i.i.i.i.i.i29 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 %32, i64* %_M_string_length.i.i.i.i.i.i29, align 8, !tbaa !19
  %33 = load i8*, i8** %_M_p.i.i.i.i.i28, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i30 = getelementptr inbounds i8, i8* %33, i64 %32
  store i8 0, i8* %arrayidx.i.i.i.i.i30, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #37
  br label %nrvo.skipdtor

cond.false4:                                      ; preds = %cond.end
  call void @llvm.experimental.noalias.scope.decl(metadata !38)
  %_M_string_length.i.i.i34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 1
  %34 = load i64, i64* %_M_string_length.i.i.i34, align 8, !tbaa !19, !noalias !38
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %36 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %35, %union.anon** %36, align 8, !tbaa !14, !alias.scope !38
  %37 = bitcast %union.anon* %35 to i8*
  %_M_p.i20.i.i35 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  %38 = load i8*, i8** %_M_p.i20.i.i35, align 8, !tbaa !17, !noalias !38
  %cmp.i.i.i = icmp ugt i64 %34, %call.i
  %spec.select.i.i.i = select i1 %cmp.i.i.i, i64 %call.i, i64 %34
  %39 = bitcast i64* %__dnew.i.i.i.i.i33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #37, !noalias !38
  store i64 %spec.select.i.i.i, i64* %__dnew.i.i.i.i.i33, align 8, !tbaa !20, !noalias !38
  %cmp3.i.i.i.i.i36 = icmp ugt i64 %spec.select.i.i.i, 15
  br i1 %cmp3.i.i.i.i.i36, label %if.then4.i.i.i.i.i41, label %if.end6.i.i.i.i.i42

if.then4.i.i.i.i.i41:                             ; preds = %cond.false4
  %call5.i.i.i16.i.i3848 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i.i33, i64 0)
          to label %call5.i.i.i16.i.i38.noexc unwind label %lpad

call5.i.i.i16.i.i38.noexc:                        ; preds = %if.then4.i.i.i.i.i41
  %_M_p.i13.i.i.i.i.i39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i16.i.i3848, i8** %_M_p.i13.i.i.i.i.i39, align 8, !tbaa !17, !alias.scope !38
  %40 = load i64, i64* %__dnew.i.i.i.i.i33, align 8, !tbaa !20, !noalias !38
  %_M_allocated_capacity.i.i.i.i.i.i40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2, i32 0
  store i64 %40, i64* %_M_allocated_capacity.i.i.i.i.i.i40, align 8, !tbaa !21, !alias.scope !38
  br label %if.end6.i.i.i.i.i42

if.end6.i.i.i.i.i42:                              ; preds = %call5.i.i.i16.i.i38.noexc, %cond.false4
  %41 = phi i8* [ %call5.i.i.i16.i.i3848, %call5.i.i.i16.i.i38.noexc ], [ %37, %cond.false4 ]
  switch i64 %spec.select.i.i.i, label %if.end.i.i.i.i.i.i.i.i44 [
    i64 1, label %if.then.i.i.i.i.i.i.i43
    i64 0, label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit49
  ]

if.then.i.i.i.i.i.i.i43:                          ; preds = %if.end6.i.i.i.i.i42
  %42 = load i8, i8* %38, align 1, !tbaa !21
  store i8 %42, i8* %41, align 1, !tbaa !21
  br label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit49

if.end.i.i.i.i.i.i.i.i44:                         ; preds = %if.end6.i.i.i.i.i42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %38, i64 %spec.select.i.i.i, i1 false) #37
  br label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit49

_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit49: ; preds = %if.end.i.i.i.i.i.i.i.i44, %if.then.i.i.i.i.i.i.i43, %if.end6.i.i.i.i.i42
  %_M_p.i.i.i.i.i.i45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  %43 = load i64, i64* %__dnew.i.i.i.i.i33, align 8, !tbaa !20, !noalias !38
  %_M_string_length.i.i.i.i.i.i.i46 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 %43, i64* %_M_string_length.i.i.i.i.i.i.i46, align 8, !tbaa !19, !alias.scope !38
  %44 = load i8*, i8** %_M_p.i.i.i.i.i.i45, align 8, !tbaa !17, !alias.scope !38
  %arrayidx.i.i.i.i.i.i47 = getelementptr inbounds i8, i8* %44, i64 %43
  store i8 0, i8* %arrayidx.i.i.i.i.i.i47, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #37, !noalias !38
  br label %nrvo.skipdtor

lpad:                                             ; preds = %if.then4.i.i.i.i.i41, %if.then4.i.i.i.i24
  %45 = landingpad { i8*, i32 }
          cleanup
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  %46 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !17
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %47 to i8*
  %cmp.i.i.i50 = icmp eq i8* %46, %arraydecay.i.i.i.i
  br i1 %cmp.i.i.i50, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i51

if.then.i.i51:                                    ; preds = %lpad
  call void @_ZdlPv(i8* %46) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i51, %lpad
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  resume { i8*, i32 } %45

nrvo.skipdtor:                                    ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit49, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit32
  %_M_p.i.i.i.i52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %_M_p.i.i.i.i52, align 8, !tbaa !17
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 2
  %arraydecay.i.i.i.i53 = bitcast %union.anon* %49 to i8*
  %cmp.i.i.i54 = icmp eq i8* %48, %arraydecay.i.i.i.i53
  br i1 %cmp.i.i.i54, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit56, label %if.then.i.i55

if.then.i.i55:                                    ; preds = %nrvo.skipdtor
  call void @_ZdlPv(i8* %48) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit56

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit56: ; preds = %if.then.i.i55, %nrvo.skipdtor
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z19filepath_to_dirnameRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %filepath) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i.i = alloca i64, align 8
  %call2.i.i = tail call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filepath, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 -1, i64 2) #37
  %cmp = icmp eq i64 %call2.i.i, -1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !14
  %2 = bitcast %union.anon* %0 to i16*
  store i16 12078, i16* %2, align 8
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 2, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %.cast = bitcast %union.anon* %0 to i8*
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %.cast, i64 2
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 2, !tbaa !21
  br label %nrvo.skipdtor

cond.false:                                       ; preds = %entry
  %add = add nuw i64 %call2.i.i, 1
  tail call void @llvm.experimental.noalias.scope.decl(metadata !41)
  %_M_string_length.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filepath, i64 0, i32 1
  %3 = load i64, i64* %_M_string_length.i.i.i, align 8, !tbaa !19, !noalias !41
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !14, !alias.scope !41
  %6 = bitcast %union.anon* %4 to i8*
  %_M_p.i20.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filepath, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %_M_p.i20.i.i, align 8, !tbaa !17, !noalias !41
  %cmp.i.i.i = icmp ugt i64 %3, %add
  %spec.select.i.i.i = select i1 %cmp.i.i.i, i64 %add, i64 %3
  %8 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #37, !noalias !41
  store i64 %spec.select.i.i.i, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !41
  %cmp3.i.i.i.i.i = icmp ugt i64 %spec.select.i.i.i, 15
  br i1 %cmp3.i.i.i.i.i, label %if.then4.i.i.i.i.i, label %if.end6.i.i.i.i.i

if.then4.i.i.i.i.i:                               ; preds = %cond.false
  %call5.i.i.i16.i.i17 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i.i, i64 0)
  %_M_p.i13.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i16.i.i17, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !41
  %9 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !41
  %_M_allocated_capacity.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2, i32 0
  store i64 %9, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !21, !alias.scope !41
  br label %if.end6.i.i.i.i.i

if.end6.i.i.i.i.i:                                ; preds = %if.then4.i.i.i.i.i, %cond.false
  %10 = phi i8* [ %call5.i.i.i16.i.i17, %if.then4.i.i.i.i.i ], [ %6, %cond.false ]
  switch i64 %spec.select.i.i.i, label %if.end.i.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i.i
    i64 0, label %cond.end
  ]

if.then.i.i.i.i.i.i.i:                            ; preds = %if.end6.i.i.i.i.i
  %11 = load i8, i8* %7, align 1, !tbaa !21
  store i8 %11, i8* %10, align 1, !tbaa !21
  br label %cond.end

if.end.i.i.i.i.i.i.i.i:                           ; preds = %if.end6.i.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %7, i64 %spec.select.i.i.i, i1 false) #37
  br label %cond.end

cond.end:                                         ; preds = %if.end.i.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i, %if.end6.i.i.i.i.i
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  %12 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !41
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 %12, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19, !alias.scope !41
  %13 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !41
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %13, i64 %12
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #37, !noalias !41
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %cond.end, %cond.true
  ret void
}

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull dereferenceable(1)) unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull dereferenceable(1)) unnamed_addr #7

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readonly uwtable willreturn mustprogress
define dso_local float @_Z5tdiffP7timevalS0_(%struct.timeval* nocapture readonly %start, %struct.timeval* nocapture readonly %end) local_unnamed_addr #9 {
entry:
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %end, i64 0, i32 0
  %0 = load i64, i64* %tv_sec, align 8, !tbaa !44
  %tv_sec1 = getelementptr inbounds %struct.timeval, %struct.timeval* %start, i64 0, i32 0
  %1 = load i64, i64* %tv_sec1, align 8, !tbaa !44
  %sub = sub nsw i64 %0, %1
  %conv = sitofp i64 %sub to double
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %end, i64 0, i32 1
  %2 = load i64, i64* %tv_usec, align 8, !tbaa !46
  %tv_usec2 = getelementptr inbounds %struct.timeval, %struct.timeval* %start, i64 0, i32 1
  %3 = load i64, i64* %tv_usec2, align 8, !tbaa !46
  %sub3 = sub nsw i64 %2, %3
  %conv4 = sitofp i64 %sub3 to double
  %mul = fmul fast double %conv4, 0x3EB0C6F7A0B5ED8D
  %add = fadd fast double %mul, %conv
  %conv5 = fptrunc double %add to float
  ret float %conv5
}

; Function Attrs: uwtable mustprogress
define dso_local void @_Z18read_lstm_instanceRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiS7_S7_RSt6vectorIdSaIdEESB_SB_SB_(%"class.std::__cxx11::basic_string"* nocapture nonnull readonly align 8 dereferenceable(32) %fn, i32* %l, i32* %c, i32* %b, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %main_params, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %extra_params, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %state, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %sequence) local_unnamed_addr #10 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_p.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %fn, i64 0, i32 0, i32 0
  %0 = load i8*, i8** %_M_p.i.i, align 8, !tbaa !17
  %call1 = tail call %struct._IO_FILE* @fopen(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  %tobool.not = icmp eq %struct._IO_FILE* %call1, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %_M_p.i.i, align 8, !tbaa !17
  %call3 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i8* %1)
  tail call void @exit(i32 1) #40
  unreachable

if.end:                                           ; preds = %entry
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i32* %l, i32* %c, i32* %b)
  %2 = load i32, i32* %l, align 4, !tbaa !47
  %3 = load i32, i32* %c, align 4, !tbaa !47
  %4 = load i32, i32* %b, align 4, !tbaa !47
  %mul = shl nsw i32 %2, 1
  %mul5 = shl nsw i32 %2, 3
  %mul6 = mul nsw i32 %4, %mul5
  %mul7 = mul i32 %4, 3
  %mul9 = mul nsw i32 %4, %mul
  %mul10 = mul i32 %4, %3
  %conv = sext i32 %mul6 to i64
  %_M_finish.i.i119 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %main_params, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load double*, double** %_M_finish.i.i119, align 8, !tbaa !49
  %_M_start.i.i120 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %main_params, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load double*, double** %_M_start.i.i120, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i121 = ptrtoint double* %5 to i64
  %sub.ptr.rhs.cast.i.i122 = ptrtoint double* %6 to i64
  %sub.ptr.sub.i.i123 = sub i64 %sub.ptr.lhs.cast.i.i121, %sub.ptr.rhs.cast.i.i122
  %sub.ptr.div.i.i124 = ashr exact i64 %sub.ptr.sub.i.i123, 3
  %cmp.i125 = icmp ult i64 %sub.ptr.div.i.i124, %conv
  br i1 %cmp.i125, label %if.then.i127, label %if.else.i132

if.then.i127:                                     ; preds = %if.end
  %sub.i126 = sub nsw i64 %conv, %sub.ptr.div.i.i124
  tail call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.3"* nonnull dereferenceable(24) %main_params, i64 %sub.i126)
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit134

if.else.i132:                                     ; preds = %if.end
  %cmp4.i128 = icmp ule i64 %sub.ptr.div.i.i124, %conv
  %add.ptr.i129 = getelementptr inbounds double, double* %6, i64 %conv
  %tobool.not.i.i130 = icmp eq double* %5, %add.ptr.i129
  %or.cond.i131 = or i1 %tobool.not.i.i130, %cmp4.i128
  br i1 %or.cond.i131, label %_ZNSt6vectorIdSaIdEE6resizeEm.exit134, label %invoke.cont.i.i133

invoke.cont.i.i133:                               ; preds = %if.else.i132
  store double* %add.ptr.i129, double** %_M_finish.i.i119, align 8, !tbaa !49
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit134

_ZNSt6vectorIdSaIdEE6resizeEm.exit134:            ; preds = %invoke.cont.i.i133, %if.else.i132, %if.then.i127
  %conv11 = sext i32 %mul7 to i64
  %_M_finish.i.i135 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %extra_params, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load double*, double** %_M_finish.i.i135, align 8, !tbaa !49
  %_M_start.i.i136 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %extra_params, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load double*, double** %_M_start.i.i136, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i137 = ptrtoint double* %7 to i64
  %sub.ptr.rhs.cast.i.i138 = ptrtoint double* %8 to i64
  %sub.ptr.sub.i.i139 = sub i64 %sub.ptr.lhs.cast.i.i137, %sub.ptr.rhs.cast.i.i138
  %sub.ptr.div.i.i140 = ashr exact i64 %sub.ptr.sub.i.i139, 3
  %cmp.i141 = icmp ult i64 %sub.ptr.div.i.i140, %conv11
  br i1 %cmp.i141, label %if.then.i143, label %if.else.i148

if.then.i143:                                     ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit134
  %sub.i142 = sub nsw i64 %conv11, %sub.ptr.div.i.i140
  tail call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.3"* nonnull dereferenceable(24) %extra_params, i64 %sub.i142)
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit150

if.else.i148:                                     ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit134
  %cmp4.i144 = icmp ule i64 %sub.ptr.div.i.i140, %conv11
  %add.ptr.i145 = getelementptr inbounds double, double* %8, i64 %conv11
  %tobool.not.i.i146 = icmp eq double* %7, %add.ptr.i145
  %or.cond.i147 = or i1 %tobool.not.i.i146, %cmp4.i144
  br i1 %or.cond.i147, label %_ZNSt6vectorIdSaIdEE6resizeEm.exit150, label %invoke.cont.i.i149

invoke.cont.i.i149:                               ; preds = %if.else.i148
  store double* %add.ptr.i145, double** %_M_finish.i.i135, align 8, !tbaa !49
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit150

_ZNSt6vectorIdSaIdEE6resizeEm.exit150:            ; preds = %invoke.cont.i.i149, %if.else.i148, %if.then.i143
  %conv12 = sext i32 %mul9 to i64
  %_M_finish.i.i103 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %state, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load double*, double** %_M_finish.i.i103, align 8, !tbaa !49
  %_M_start.i.i104 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %state, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load double*, double** %_M_start.i.i104, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i105 = ptrtoint double* %9 to i64
  %sub.ptr.rhs.cast.i.i106 = ptrtoint double* %10 to i64
  %sub.ptr.sub.i.i107 = sub i64 %sub.ptr.lhs.cast.i.i105, %sub.ptr.rhs.cast.i.i106
  %sub.ptr.div.i.i108 = ashr exact i64 %sub.ptr.sub.i.i107, 3
  %cmp.i109 = icmp ult i64 %sub.ptr.div.i.i108, %conv12
  br i1 %cmp.i109, label %if.then.i111, label %if.else.i116

if.then.i111:                                     ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit150
  %sub.i110 = sub nsw i64 %conv12, %sub.ptr.div.i.i108
  tail call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.3"* nonnull dereferenceable(24) %state, i64 %sub.i110)
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit118

if.else.i116:                                     ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit150
  %cmp4.i112 = icmp ule i64 %sub.ptr.div.i.i108, %conv12
  %add.ptr.i113 = getelementptr inbounds double, double* %10, i64 %conv12
  %tobool.not.i.i114 = icmp eq double* %9, %add.ptr.i113
  %or.cond.i115 = or i1 %tobool.not.i.i114, %cmp4.i112
  br i1 %or.cond.i115, label %_ZNSt6vectorIdSaIdEE6resizeEm.exit118, label %invoke.cont.i.i117

invoke.cont.i.i117:                               ; preds = %if.else.i116
  store double* %add.ptr.i113, double** %_M_finish.i.i103, align 8, !tbaa !49
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit118

_ZNSt6vectorIdSaIdEE6resizeEm.exit118:            ; preds = %invoke.cont.i.i117, %if.else.i116, %if.then.i111
  %conv13 = sext i32 %mul10 to i64
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %sequence, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load double*, double** %_M_finish.i.i, align 8, !tbaa !49
  %_M_start.i.i = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %sequence, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load double*, double** %_M_start.i.i, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i = ptrtoint double* %11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint double* %12 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 3
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv13
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit118
  %sub.i = sub nsw i64 %conv13, %sub.ptr.div.i.i
  tail call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.3"* nonnull dereferenceable(24) %sequence, i64 %sub.i)
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit

if.else.i:                                        ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit118
  %cmp4.i = icmp ule i64 %sub.ptr.div.i.i, %conv13
  %add.ptr.i101 = getelementptr inbounds double, double* %12, i64 %conv13
  %tobool.not.i.i = icmp eq double* %11, %add.ptr.i101
  %or.cond.i = or i1 %tobool.not.i.i, %cmp4.i
  br i1 %or.cond.i, label %_ZNSt6vectorIdSaIdEE6resizeEm.exit, label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.else.i
  store double* %add.ptr.i101, double** %_M_finish.i.i, align 8, !tbaa !49
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit

_ZNSt6vectorIdSaIdEE6resizeEm.exit:               ; preds = %invoke.cont.i.i, %if.else.i, %if.then.i
  %cmp157 = icmp sgt i32 %mul6, 0
  br i1 %cmp157, label %for.body.preheader, label %for.cond18.preheader

for.body.preheader:                               ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit
  %13 = mul i32 %4, %2
  %14 = shl i32 %13, 3
  %wide.trip.count169 = zext i32 %14 to i64
  br label %for.body

for.cond18.preheader:                             ; preds = %for.body, %_ZNSt6vectorIdSaIdEE6resizeEm.exit
  %cmp19155 = icmp sgt i32 %4, 0
  br i1 %cmp19155, label %for.body21.preheader, label %for.cond29.preheader

for.body21.preheader:                             ; preds = %for.cond18.preheader
  %15 = icmp sgt i32 %mul7, 1
  %smax = select i1 %15, i32 %mul7, i32 1
  %wide.trip.count165 = zext i32 %smax to i64
  br label %for.body21

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv167 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next168, %for.body ]
  %16 = load double*, double** %_M_start.i.i120, align 8, !tbaa !51
  %add.ptr.i100 = getelementptr inbounds double, double* %16, i64 %indvars.iv167
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* nonnull %add.ptr.i100)
  %indvars.iv.next168 = add nuw nsw i64 %indvars.iv167, 1
  %exitcond170.not = icmp eq i64 %indvars.iv.next168, %wide.trip.count169
  br i1 %exitcond170.not, label %for.cond18.preheader, label %for.body, !llvm.loop !52

for.cond29.preheader:                             ; preds = %for.body21, %for.cond18.preheader
  %cmp30153 = icmp sgt i32 %mul9, 0
  br i1 %cmp30153, label %for.body32.preheader, label %for.cond40.preheader

for.body32.preheader:                             ; preds = %for.cond29.preheader
  %17 = mul i32 %4, %2
  %18 = shl i32 %17, 1
  %wide.trip.count161 = zext i32 %18 to i64
  br label %for.body32

for.body21:                                       ; preds = %for.body21, %for.body21.preheader
  %indvars.iv163 = phi i64 [ 0, %for.body21.preheader ], [ %indvars.iv.next164, %for.body21 ]
  %19 = load double*, double** %_M_start.i.i136, align 8, !tbaa !51
  %add.ptr.i98 = getelementptr inbounds double, double* %19, i64 %indvars.iv163
  %call24 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* nonnull %add.ptr.i98)
  %indvars.iv.next164 = add nuw nsw i64 %indvars.iv163, 1
  %exitcond166.not = icmp eq i64 %indvars.iv.next164, %wide.trip.count165
  br i1 %exitcond166.not, label %for.cond29.preheader, label %for.body21, !llvm.loop !53

for.cond40.preheader:                             ; preds = %for.body32, %for.cond29.preheader
  %cmp42151 = icmp sgt i32 %mul10, 0
  br i1 %cmp42151, label %for.body44.preheader, label %for.cond.cleanup43

for.body44.preheader:                             ; preds = %for.cond40.preheader
  %wide.trip.count = zext i32 %mul10 to i64
  br label %for.body44

for.body32:                                       ; preds = %for.body32, %for.body32.preheader
  %indvars.iv159 = phi i64 [ 0, %for.body32.preheader ], [ %indvars.iv.next160, %for.body32 ]
  %20 = load double*, double** %_M_start.i.i104, align 8, !tbaa !51
  %add.ptr.i96 = getelementptr inbounds double, double* %20, i64 %indvars.iv159
  %call35 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* nonnull %add.ptr.i96)
  %indvars.iv.next160 = add nuw nsw i64 %indvars.iv159, 1
  %exitcond162.not = icmp eq i64 %indvars.iv.next160, %wide.trip.count161
  br i1 %exitcond162.not, label %for.cond40.preheader, label %for.body32, !llvm.loop !54

for.cond.cleanup43:                               ; preds = %for.body44, %for.cond40.preheader
  %call51 = tail call i32 @fclose(%struct._IO_FILE* nonnull %call1)
  ret void

for.body44:                                       ; preds = %for.body44, %for.body44.preheader
  %indvars.iv = phi i64 [ 0, %for.body44.preheader ], [ %indvars.iv.next, %for.body44 ]
  %21 = load double*, double** %_M_start.i.i, align 8, !tbaa !51
  %add.ptr.i = getelementptr inbounds double, double* %21, i64 %indvars.iv
  %call47 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* nonnull %add.ptr.i)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup43, label %for.body44, !llvm.loop !55
}

; Function Attrs: nofree nounwind
declare dso_local noalias noundef %struct._IO_FILE* @fopen(i8* nocapture noundef readonly, i8* nocapture noundef readonly) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) local_unnamed_addr #11

declare dso_local i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fclose(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #2

; Function Attrs: norecurse uwtable
define dso_local i32 @main(i32 %argc, i8** nocapture readnone %argv) local_unnamed_addr #12 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %loss.i = alloca double, align 8
  %lossb.i612 = alloca double, align 8
  %lossb.i = alloca double, align 8
  %__dnew.i.i.i.i481 = alloca i64, align 8
  %__dnew.i.i.i.i395 = alloca i64, align 8
  %__dnew.i.i.i.i379 = alloca i64, align 8
  %__dnew.i.i.i.i363 = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca [4 x %"class.std::__cxx11::basic_string"], align 8
  %path = alloca %"class.std::__cxx11::basic_string", align 8
  %input = alloca %struct.LSTMInput, align 8
  %ref.tmp48 = alloca %"class.std::__cxx11::basic_string", align 8
  %start = alloca %struct.timeval, align 8
  %end = alloca %struct.timeval, align 8
  %input116 = alloca %struct.LSTMInput, align 8
  %ref.tmp124 = alloca %"class.std::__cxx11::basic_string", align 8
  %start163 = alloca %struct.timeval, align 8
  %end164 = alloca %struct.timeval, align 8
  %input206 = alloca %struct.LSTMInput, align 8
  %ref.tmp214 = alloca %"class.std::__cxx11::basic_string", align 8
  %start253 = alloca %struct.timeval, align 8
  %end254 = alloca %struct.timeval, align 8
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @str, i64 0, i64 0))
  %0 = bitcast [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %0) #37
  %arrayinit.begin = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 0
  %1 = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 0, i32 2
  %2 = bitcast [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #37
  store i64 17, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i362 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %arrayinit.begin, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %lpad

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i362, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %4 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 0, i32 2, i32 0
  store i64 %4, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(17) %call5.i.i.i9.i362, i8* nonnull align 1 dereferenceable(17) getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0), i64 17, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 0, i32 1
  store i64 %4, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %5 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %5, i64 %4
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #37
  %arrayinit.element.ptr = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 1
  %6 = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 1, i32 2
  %7 = bitcast %"class.std::__cxx11::basic_string"* %arrayinit.element.ptr to %union.anon**
  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !14
  %8 = bitcast i64* %__dnew.i.i.i.i363 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #37
  store i64 17, i64* %__dnew.i.i.i.i363, align 8, !tbaa !20
  %call5.i.i.i9.i377 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %arrayinit.element.ptr, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i363, i64 0)
          to label %call5.i.i.i9.i.noexc376 unwind label %lpad3

call5.i.i.i9.i.noexc376:                          ; preds = %call5.i.i.i9.i.noexc
  %_M_p.i13.i.i.i.i366 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %arrayinit.element.ptr, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i377, i8** %_M_p.i13.i.i.i.i366, align 8, !tbaa !17
  %9 = load i64, i64* %__dnew.i.i.i.i363, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i367 = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 1, i32 2, i32 0
  store i64 %9, i64* %_M_allocated_capacity.i.i.i.i.i367, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(17) %call5.i.i.i9.i377, i8* nonnull align 1 dereferenceable(17) getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i64 17, i1 false) #37
  %_M_string_length.i.i.i.i.i.i373 = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 1, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i.i.i.i373, align 8, !tbaa !19
  %10 = load i8*, i8** %_M_p.i13.i.i.i.i366, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i374 = getelementptr inbounds i8, i8* %10, i64 %9
  store i8 0, i8* %arrayidx.i.i.i.i.i374, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #37
  %arrayinit.element5.ptr = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 2
  %11 = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 2, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %arrayinit.element5.ptr to %union.anon**
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !14
  %13 = bitcast i64* %__dnew.i.i.i.i379 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #37
  store i64 17, i64* %__dnew.i.i.i.i379, align 8, !tbaa !20
  %call5.i.i.i9.i393 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %arrayinit.element5.ptr, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i379, i64 0)
          to label %call5.i.i.i9.i.noexc392 unwind label %lpad7

call5.i.i.i9.i.noexc392:                          ; preds = %call5.i.i.i9.i.noexc376
  %_M_p.i13.i.i.i.i382 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %arrayinit.element5.ptr, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i393, i8** %_M_p.i13.i.i.i.i382, align 8, !tbaa !17
  %14 = load i64, i64* %__dnew.i.i.i.i379, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i383 = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 2, i32 2, i32 0
  store i64 %14, i64* %_M_allocated_capacity.i.i.i.i.i383, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(17) %call5.i.i.i9.i393, i8* nonnull align 1 dereferenceable(17) getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i64 17, i1 false) #37
  %_M_string_length.i.i.i.i.i.i389 = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 2, i32 1
  store i64 %14, i64* %_M_string_length.i.i.i.i.i.i389, align 8, !tbaa !19
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i382, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i390 = getelementptr inbounds i8, i8* %15, i64 %14
  store i8 0, i8* %arrayidx.i.i.i.i.i390, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #37
  %arrayinit.element9.ptr = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 3
  %16 = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 3, i32 2
  %17 = bitcast %"class.std::__cxx11::basic_string"* %arrayinit.element9.ptr to %union.anon**
  store %union.anon* %16, %union.anon** %17, align 8, !tbaa !14
  %18 = bitcast i64* %__dnew.i.i.i.i395 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #37
  store i64 17, i64* %__dnew.i.i.i.i395, align 8, !tbaa !20
  %call5.i.i.i9.i409 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %arrayinit.element9.ptr, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i395, i64 0)
          to label %call5.i.i.i9.i.noexc408 unwind label %lpad11

call5.i.i.i9.i.noexc408:                          ; preds = %call5.i.i.i9.i.noexc392
  %_M_p.i13.i.i.i.i398 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %arrayinit.element9.ptr, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i409, i8** %_M_p.i13.i.i.i.i398, align 8, !tbaa !17
  %19 = load i64, i64* %__dnew.i.i.i.i395, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i399 = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 3, i32 2, i32 0
  store i64 %19, i64* %_M_allocated_capacity.i.i.i.i.i399, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(17) %call5.i.i.i9.i409, i8* nonnull align 1 dereferenceable(17) getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i64 17, i1 false) #37
  %_M_string_length.i.i.i.i.i.i405 = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 3, i32 1
  store i64 %19, i64* %_M_string_length.i.i.i.i.i.i405, align 8, !tbaa !19
  %20 = load i8*, i8** %_M_p.i13.i.i.i.i398, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i406 = getelementptr inbounds i8, i8* %20, i64 %19
  store i8 0, i8* %arrayidx.i.i.i.i.i406, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #37
  %call2.i.i.i.i7.i = invoke noalias nonnull i8* @_Znwm(i64 128) #41
          to label %call2.i.i.i.i.noexc.i unwind label %lpad.i.thread

lpad.i.thread:                                    ; preds = %call5.i.i.i9.i.noexc408
  %21 = landingpad { i8*, i32 }
          cleanup
  br label %lpad14.body

call2.i.i.i.i.noexc.i:                            ; preds = %call5.i.i.i9.i.noexc408
  %add.ptr.i.i = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 4
  %22 = bitcast i8* %call2.i.i.i.i7.i to %"class.std::__cxx11::basic_string"*
  %call.i.i.i8.i = invoke %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"* nonnull %arrayinit.begin, %"class.std::__cxx11::basic_string"* nonnull %add.ptr.i.i, %"class.std::__cxx11::basic_string"* nonnull %22)
          to label %arraydestroy.body unwind label %if.then.i.i.i413

if.then.i.i.i413:                                 ; preds = %call2.i.i.i.i.noexc.i
  %23 = landingpad { i8*, i32 }
          cleanup
  call void @_ZdlPv(i8* nonnull %call2.i.i.i.i7.i) #37
  br label %lpad14.body

arraydestroy.body:                                ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, %call2.i.i.i.i.noexc.i
  %arraydestroy.elementPast = phi %"class.std::__cxx11::basic_string"* [ %arraydestroy.element, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit ], [ %add.ptr.i.i, %call2.i.i.i.i.noexc.i ]
  %arraydestroy.element = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %arraydestroy.elementPast, i64 -1
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %arraydestroy.element, i64 0, i32 0, i32 0
  %24 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !17
  %25 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %arraydestroy.elementPast, i64 -1, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %25 to i8*
  %cmp.i.i.i = icmp eq i8* %24, %arraydecay.i.i.i.i
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %arraydestroy.body
  call void @_ZdlPv(i8* %24) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %arraydestroy.body
  %arraydestroy.done = icmp eq %"class.std::__cxx11::basic_string"* %arraydestroy.element, %arrayinit.begin
  br i1 %arraydestroy.done, label %arraydestroy.done16, label %arraydestroy.body

arraydestroy.done16:                              ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #37
  %cmp.i.not1221 = icmp eq %"class.std::__cxx11::basic_string"* %call.i.i.i8.i, %22
  br i1 %cmp.i.not1221, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit441, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %arraydestroy.done16
  %26 = bitcast %"class.std::__cxx11::basic_string"* %path to i8*
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %path, i64 0, i32 2
  %28 = bitcast %"class.std::__cxx11::basic_string"* %path to %union.anon**
  %29 = bitcast i64* %__dnew.i.i.i.i481 to i8*
  %30 = bitcast %union.anon* %27 to i8*
  %_M_p.i13.i.i.i.i483 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %path, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i484 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %path, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i490 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %path, i64 0, i32 1
  %31 = bitcast %struct.LSTMInput* %input to i8*
  %main_params.i = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input, i64 0, i32 3
  %32 = bitcast %"class.std::vector.3"* %main_params.i to i8*
  %33 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp48 to i8*
  %l = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input, i64 0, i32 0
  %c = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input, i64 0, i32 1
  %b = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input, i64 0, i32 2
  %extra_params = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input, i64 0, i32 4
  %state = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input, i64 0, i32 5
  %sequence = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input, i64 0, i32 6
  %_M_p.i.i.i.i498 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp48, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp48, i64 0, i32 2
  %arraydecay.i.i.i.i499 = bitcast %union.anon* %34 to i8*
  %_M_start.i522 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %state, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = bitcast %struct.timeval* %start to i8*
  %36 = bitcast %struct.timeval* %end to i8*
  %_M_finish.i.i541 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %_M_start.i26.i = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast double* %lossb.i to i8*
  %_M_start.i24.i = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_start.i23.i = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %_M_start.i22.i = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %tv_sec.i = getelementptr inbounds %struct.timeval, %struct.timeval* %end, i64 0, i32 0
  %tv_sec1.i = getelementptr inbounds %struct.timeval, %struct.timeval* %start, i64 0, i32 0
  %tv_usec.i = getelementptr inbounds %struct.timeval, %struct.timeval* %end, i64 0, i32 1
  %tv_usec2.i = getelementptr inbounds %struct.timeval, %struct.timeval* %start, i64 0, i32 1
  %38 = bitcast %struct.LSTMInput* %input116 to i8*
  %l117 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 0
  %c118 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 1
  %b119 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 2
  %main_params120 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 3
  %extra_params121 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 4
  %state122 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 5
  %sequence123 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 6
  %39 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp124 to i8*
  %_M_p.i.i.i.i631 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp124, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp124, i64 0, i32 2
  %arraydecay.i.i.i.i632 = bitcast %union.anon* %40 to i8*
  %_M_finish.i637 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %_M_start.i638 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %state122, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast %struct.timeval* %start163 to i8*
  %42 = bitcast %struct.timeval* %end164 to i8*
  %_M_finish.i.i723 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %_M_start.i26.i724 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %_M_start.i24.i728 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_start.i23.i729 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %_M_start.i22.i730 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input116, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %tv_sec.i741 = getelementptr inbounds %struct.timeval, %struct.timeval* %end164, i64 0, i32 0
  %tv_sec1.i742 = getelementptr inbounds %struct.timeval, %struct.timeval* %start163, i64 0, i32 0
  %tv_usec.i745 = getelementptr inbounds %struct.timeval, %struct.timeval* %end164, i64 0, i32 1
  %tv_usec2.i746 = getelementptr inbounds %struct.timeval, %struct.timeval* %start163, i64 0, i32 1
  %43 = bitcast %struct.LSTMInput* %input206 to i8*
  %l207 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 0
  %c208 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 1
  %b209 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 2
  %main_params210 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 3
  %extra_params211 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 4
  %state212 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 5
  %sequence213 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 6
  %44 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp214 to i8*
  %_M_p.i.i.i.i764 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp214, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp214, i64 0, i32 2
  %arraydecay.i.i.i.i765 = bitcast %union.anon* %45 to i8*
  %_M_finish.i758 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %_M_start.i759 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %state212, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = bitcast %struct.timeval* %start253 to i8*
  %47 = bitcast %struct.timeval* %end254 to i8*
  %_M_finish.i.i614 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %_M_start.i26.i615 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast double* %loss.i to i8*
  %49 = bitcast double* %lossb.i612 to i8*
  %_M_start.i24.i619 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_start.i23.i620 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %_M_start.i22.i621 = getelementptr inbounds %struct.LSTMInput, %struct.LSTMInput* %input206, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %tv_sec.i601 = getelementptr inbounds %struct.timeval, %struct.timeval* %end254, i64 0, i32 0
  %tv_sec1.i602 = getelementptr inbounds %struct.timeval, %struct.timeval* %start253, i64 0, i32 0
  %tv_usec.i605 = getelementptr inbounds %struct.timeval, %struct.timeval* %end254, i64 0, i32 1
  %tv_usec2.i606 = getelementptr inbounds %struct.timeval, %struct.timeval* %start253, i64 0, i32 1
  %50 = bitcast %"class.std::vector.3"* %main_params120 to i8*
  %51 = bitcast %"class.std::vector.3"* %main_params210 to i8*
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit510
  br i1 %cmp.i.not1221, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit441, label %for.body.i.i.i.i430

for.body.i.i.i.i430:                              ; preds = %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i434, %for.cond.cleanup
  %__first.addr.04.i.i.i.i426 = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr.i.i.i.i432, %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i434 ], [ %22, %for.cond.cleanup ]
  %_M_p.i.i.i.i.i.i.i.i.i427 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i.i.i426, i64 0, i32 0, i32 0
  %52 = load i8*, i8** %_M_p.i.i.i.i.i.i.i.i.i427, align 8, !tbaa !17
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i.i.i426, i64 0, i32 2
  %arraydecay.i.i.i.i.i.i.i.i.i428 = bitcast %union.anon* %53 to i8*
  %cmp.i.i.i.i.i.i.i.i429 = icmp eq i8* %52, %arraydecay.i.i.i.i.i.i.i.i.i428
  br i1 %cmp.i.i.i.i.i.i.i.i429, label %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i434, label %if.then.i.i.i.i.i.i.i431

if.then.i.i.i.i.i.i.i431:                         ; preds = %for.body.i.i.i.i430
  call void @_ZdlPv(i8* %52) #37
  br label %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i434

_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i434: ; preds = %if.then.i.i.i.i.i.i.i431, %for.body.i.i.i.i430
  %incdec.ptr.i.i.i.i432 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i.i.i426, i64 1
  %cmp.not.i.i.i.i433 = icmp eq %"class.std::__cxx11::basic_string"* %incdec.ptr.i.i.i.i432, %call.i.i.i8.i
  br i1 %cmp.not.i.i.i.i433, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit441, label %for.body.i.i.i.i430, !llvm.loop !56

_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit441: ; preds = %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i434, %for.cond.cleanup, %arraydestroy.done16
  call void @_ZdlPv(i8* nonnull %call2.i.i.i.i7.i) #37
  ret i32 0

lpad:                                             ; preds = %entry
  %54 = landingpad { i8*, i32 }
          cleanup
  br label %cleanup.done

lpad3:                                            ; preds = %call5.i.i.i9.i.noexc
  %55 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup28

lpad7:                                            ; preds = %call5.i.i.i9.i.noexc376
  %56 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup28

lpad11:                                           ; preds = %call5.i.i.i9.i.noexc392
  %57 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup28

lpad14.body:                                      ; preds = %if.then.i.i.i413, %lpad.i.thread
  %eh.lpad-body = phi { i8*, i32 } [ %21, %lpad.i.thread ], [ %23, %if.then.i.i.i413 ]
  %58 = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 4
  br label %arraydestroy.body18

arraydestroy.body18:                              ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit447, %lpad14.body
  %arraydestroy.elementPast19 = phi %"class.std::__cxx11::basic_string"* [ %58, %lpad14.body ], [ %arraydestroy.element20, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit447 ]
  %arraydestroy.element20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %arraydestroy.elementPast19, i64 -1
  %_M_p.i.i.i.i442 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %arraydestroy.element20, i64 0, i32 0, i32 0
  %59 = load i8*, i8** %_M_p.i.i.i.i442, align 8, !tbaa !17
  %60 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %arraydestroy.elementPast19, i64 -1, i32 2
  %arraydecay.i.i.i.i443 = bitcast %union.anon* %60 to i8*
  %cmp.i.i.i444 = icmp eq i8* %59, %arraydecay.i.i.i.i443
  br i1 %cmp.i.i.i444, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit447, label %if.then.i.i445

if.then.i.i445:                                   ; preds = %arraydestroy.body18
  call void @_ZdlPv(i8* %59) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit447

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit447: ; preds = %if.then.i.i445, %arraydestroy.body18
  %arraydestroy.done21 = icmp eq %"class.std::__cxx11::basic_string"* %arraydestroy.element20, %arrayinit.begin
  br i1 %arraydestroy.done21, label %cleanup.done, label %arraydestroy.body18

ehcleanup28:                                      ; preds = %lpad11, %lpad7, %lpad3
  %.pn.pn.pn.pn = phi { i8*, i32 } [ %55, %lpad3 ], [ %56, %lpad7 ], [ %57, %lpad11 ]
  %arrayinit.endOfInit.2.idx = phi i64 [ 1, %lpad3 ], [ 2, %lpad7 ], [ 3, %lpad11 ]
  %arrayinit.endOfInit.2.ptr = getelementptr inbounds [4 x %"class.std::__cxx11::basic_string"], [4 x %"class.std::__cxx11::basic_string"]* %ref.tmp, i64 0, i64 %arrayinit.endOfInit.2.idx
  br label %arraydestroy.body31

arraydestroy.body31:                              ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit480, %ehcleanup28
  %arraydestroy.elementPast32 = phi %"class.std::__cxx11::basic_string"* [ %arraydestroy.element33, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit480 ], [ %arrayinit.endOfInit.2.ptr, %ehcleanup28 ]
  %arraydestroy.element33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %arraydestroy.elementPast32, i64 -1
  %_M_p.i.i.i.i475 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %arraydestroy.element33, i64 0, i32 0, i32 0
  %61 = load i8*, i8** %_M_p.i.i.i.i475, align 8, !tbaa !17
  %62 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %arraydestroy.elementPast32, i64 -1, i32 2
  %arraydecay.i.i.i.i476 = bitcast %union.anon* %62 to i8*
  %cmp.i.i.i477 = icmp eq i8* %61, %arraydecay.i.i.i.i476
  br i1 %cmp.i.i.i477, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit480, label %if.then.i.i478

if.then.i.i478:                                   ; preds = %arraydestroy.body31
  call void @_ZdlPv(i8* %61) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit480

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit480: ; preds = %if.then.i.i478, %arraydestroy.body31
  %arraydestroy.done34 = icmp eq %"class.std::__cxx11::basic_string"* %arraydestroy.element33, %arrayinit.begin
  br i1 %arraydestroy.done34, label %cleanup.done, label %arraydestroy.body31

cleanup.done:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit480, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit447, %lpad
  %.pn.pn.pn.pn952 = phi { i8*, i32 } [ %54, %lpad ], [ %eh.lpad-body, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit447 ], [ %.pn.pn.pn.pn, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit480 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %0) #37
  br label %ehcleanup305

for.body:                                         ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit510, %for.body.lr.ph
  %__begin1.sroa.0.01222 = phi %"class.std::__cxx11::basic_string"* [ %22, %for.body.lr.ph ], [ %incdec.ptr.i, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit510 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #37
  store %union.anon* %27, %union.anon** %28, align 8, !tbaa !14
  %_M_p.i13.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__begin1.sroa.0.01222, i64 0, i32 0, i32 0
  %63 = load i8*, i8** %_M_p.i13.i, align 8, !tbaa !17
  %_M_string_length.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__begin1.sroa.0.01222, i64 0, i32 1
  %64 = load i64, i64* %_M_string_length.i.i, align 8, !tbaa !19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #37
  store i64 %64, i64* %__dnew.i.i.i.i481, align 8, !tbaa !20
  %cmp3.i.i.i.i482 = icmp ugt i64 %64, 15
  br i1 %cmp3.i.i.i.i482, label %if.then4.i.i.i.i485, label %if.end6.i.i.i.i486

if.then4.i.i.i.i485:                              ; preds = %for.body
  %call5.i.i.i12.i492 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %path, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i481, i64 0)
          to label %call5.i.i.i12.i.noexc unwind label %lpad42

call5.i.i.i12.i.noexc:                            ; preds = %if.then4.i.i.i.i485
  store i8* %call5.i.i.i12.i492, i8** %_M_p.i13.i.i.i.i483, align 8, !tbaa !17
  %65 = load i64, i64* %__dnew.i.i.i.i481, align 8, !tbaa !20
  store i64 %65, i64* %_M_allocated_capacity.i.i.i.i.i484, align 8, !tbaa !21
  br label %if.end6.i.i.i.i486

if.end6.i.i.i.i486:                               ; preds = %call5.i.i.i12.i.noexc, %for.body
  %66 = phi i8* [ %call5.i.i.i12.i492, %call5.i.i.i12.i.noexc ], [ %30, %for.body ]
  switch i64 %64, label %if.end.i.i.i.i.i.i.i488 [
    i64 1, label %if.then.i.i.i.i.i.i487
    i64 0, label %invoke.cont43
  ]

if.then.i.i.i.i.i.i487:                           ; preds = %if.end6.i.i.i.i486
  %67 = load i8, i8* %63, align 1, !tbaa !21
  store i8 %67, i8* %66, align 1, !tbaa !21
  br label %invoke.cont43

if.end.i.i.i.i.i.i.i488:                          ; preds = %if.end6.i.i.i.i486
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* align 1 %63, i64 %64, i1 false) #37
  br label %invoke.cont43

invoke.cont43:                                    ; preds = %if.end.i.i.i.i.i.i.i488, %if.then.i.i.i.i.i.i487, %if.end6.i.i.i.i486
  %68 = load i64, i64* %__dnew.i.i.i.i481, align 8, !tbaa !20
  store i64 %68, i64* %_M_string_length.i.i.i.i.i.i490, align 8, !tbaa !19
  %69 = load i8*, i8** %_M_p.i13.i.i.i.i483, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i491 = getelementptr inbounds i8, i8* %69, i64 %68
  store i8 0, i8* %arrayidx.i.i.i.i.i491, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #37
  %70 = load i8*, i8** %_M_p.i13.i.i.i.i483, align 8, !tbaa !17
  %call47 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* %70)
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %31) #37
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(96) %32, i8 0, i64 96, i1 false) #37
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #37
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp48, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path)
          to label %invoke.cont50 unwind label %lpad49

invoke.cont50:                                    ; preds = %invoke.cont43
  invoke void @_Z18read_lstm_instanceRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiS7_S7_RSt6vectorIdSaIdEESB_SB_SB_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp48, i32* nonnull %l, i32* nonnull %c, i32* nonnull %b, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %main_params.i, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %extra_params, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %state, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %sequence)
          to label %invoke.cont52 unwind label %lpad51

invoke.cont52:                                    ; preds = %invoke.cont50
  %71 = load i8*, i8** %_M_p.i.i.i.i498, align 8, !tbaa !17
  %cmp.i.i.i500 = icmp eq i8* %71, %arraydecay.i.i.i.i499
  br i1 %cmp.i.i.i500, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit503, label %if.then.i.i501

if.then.i.i501:                                   ; preds = %invoke.cont52
  call void @_ZdlPv(i8* %71) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit503

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit503: ; preds = %if.then.i.i501, %invoke.cont52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #37
  br label %for.body57

for.cond.cleanup56:                               ; preds = %for.body57
  %putchar = call i32 @putchar(i32 10)
  %72 = load i32, i32* %l, align 8, !tbaa !57
  %mul = shl nsw i32 %72, 3
  %73 = load i32, i32* %b, align 8, !tbaa !60
  %mul69338 = or i32 %mul, 3
  %add = mul i32 %mul69338, %73
  %conv72 = sext i32 %add to i64
  %cmp.i.i = icmp slt i32 %add, 0
  br i1 %cmp.i.i, label %if.then.i.i511, label %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i

if.then.i.i511:                                   ; preds = %for.cond.cleanup56
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.113, i64 0, i64 0)) #39
          to label %.noexc unwind label %lpad74.loopexit.split-lp

.noexc:                                           ; preds = %if.then.i.i511
  unreachable

_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i: ; preds = %for.cond.cleanup56
  %cmp.not.i.i.i.i512 = icmp eq i32 %add, 0
  br i1 %cmp.not.i.i.i.i512, label %invoke.cont75, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i: ; preds = %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv72, 3
  %call2.i.i.i.i3.i.i515 = invoke noalias nonnull i8* @_Znwm(i64 %mul.i.i.i.i.i.i) #41
          to label %for.body.i.i.preheader.i.i.i.i.i unwind label %lpad74.loopexit

for.body.i.i.preheader.i.i.i.i.i:                 ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i
  %74 = bitcast i8* %call2.i.i.i.i3.i.i515 to double*
  %add.ptr.i.i.i = getelementptr double, double* %74, i64 %conv72
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i3.i.i515, i8 0, i64 %mul.i.i.i.i.i.i, i1 false)
  br label %invoke.cont75

lpad42:                                           ; preds = %if.then4.i.i.i.i485
  %75 = landingpad { i8*, i32 }
          cleanup
  br label %for.body.i.i.i.i.preheader

lpad49:                                           ; preds = %invoke.cont43
  %76 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup54

lpad51:                                           ; preds = %invoke.cont50
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = load i8*, i8** %_M_p.i.i.i.i498, align 8, !tbaa !17
  %cmp.i.i.i518 = icmp eq i8* %78, %arraydecay.i.i.i.i499
  br i1 %cmp.i.i.i518, label %ehcleanup54, label %if.then.i.i519

if.then.i.i519:                                   ; preds = %lpad51
  call void @_ZdlPv(i8* %78) #37
  br label %ehcleanup54

ehcleanup54:                                      ; preds = %if.then.i.i519, %lpad51, %lpad49
  %.pn336 = phi { i8*, i32 } [ %76, %lpad49 ], [ %77, %lpad51 ], [ %77, %if.then.i.i519 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #37
  br label %ehcleanup114

for.body57:                                       ; preds = %for.body57, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit503
  %indvars.iv = phi i64 [ 0, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit503 ], [ %indvars.iv.next, %for.body57 ]
  %79 = load double*, double** %_M_start.i522, align 8, !tbaa !51
  %add.ptr.i523 = getelementptr inbounds double, double* %79, i64 %indvars.iv
  %80 = load double, double* %add.ptr.i523, align 8, !tbaa !61
  %call62 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), double %80)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 5
  br i1 %exitcond.not, label %for.cond.cleanup56, label %for.body57, !llvm.loop !63

invoke.cont75:                                    ; preds = %for.body.i.i.preheader.i.i.i.i.i, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i
  %cond.i.i.i.i955 = phi double* [ %74, %for.body.i.i.preheader.i.i.i.i.i ], [ null, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i ]
  %__first.addr.0.lcssa.i.i.i.i.i.i.i = phi double* [ %add.ptr.i.i.i, %for.body.i.i.preheader.i.i.i.i.i ], [ null, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #37
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #37
  %call78 = call i32 @gettimeofday(%struct.timeval* nonnull %start, i8* null) #37
  br label %for.body.i

for.body.i:                                       ; preds = %.noexc543, %invoke.cont75
  %i.027.i = phi i32 [ 0, %invoke.cont75 ], [ %inc.i, %.noexc543 ]
  %81 = load double*, double** %_M_finish.i.i541, align 8, !tbaa !49
  %82 = load double*, double** %_M_start.i26.i, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i = ptrtoint double* %81 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint double* %82 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 3
  %add.ptr.i542 = getelementptr inbounds double, double* %cond.i.i.i.i955, i64 %sub.ptr.div.i.i
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #37
  store double 1.000000e+00, double* %lossb.i, align 8, !tbaa !61
  %83 = load i32, i32* %l, align 8, !tbaa !57
  %84 = load i32, i32* %c, align 4, !tbaa !64
  %85 = load i32, i32* %b, align 8, !tbaa !60
  %86 = load double*, double** %_M_start.i24.i, align 8, !tbaa !51
  %87 = load double*, double** %_M_start.i23.i, align 8, !tbaa !51
  %88 = load double*, double** %_M_start.i22.i, align 8, !tbaa !51
  invoke void @lstm_objective_b(i32 %83, i32 %84, i32 %85, double* %82, double* %cond.i.i.i.i955, double* %86, double* %add.ptr.i542, double* %87, double* %88, double* undef, double* nonnull %lossb.i)
          to label %.noexc543 unwind label %lpad79

.noexc543:                                        ; preds = %for.body.i
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #37
  %inc.i = add nuw nsw i32 %i.027.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 100
  br i1 %exitcond.not.i, label %invoke.cont80, label %for.body.i, !llvm.loop !65

invoke.cont80:                                    ; preds = %.noexc543
  %call81 = call i32 @gettimeofday(%struct.timeval* nonnull %end, i8* null) #37
  %89 = load i64, i64* %tv_sec.i, align 8, !tbaa !44
  %90 = load i64, i64* %tv_sec1.i, align 8, !tbaa !44
  %sub.i = sub nsw i64 %89, %90
  %conv.i = sitofp i64 %sub.i to double
  %91 = load i64, i64* %tv_usec.i, align 8, !tbaa !46
  %92 = load i64, i64* %tv_usec2.i, align 8, !tbaa !46
  %sub3.i = sub nsw i64 %91, %92
  %conv4.i = sitofp i64 %sub3.i to double
  %mul.i = fmul fast double %conv4.i, 0x3EB0C6F7A0B5ED8D
  %add.i = fadd fast double %mul.i, %conv.i
  %conv5.i = fptrunc double %add.i to float
  %conv83 = fpext float %conv5.i to double
  %call85 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), double %conv83)
  %sub.ptr.lhs.cast.i = ptrtoint double* %__first.addr.0.lcssa.i.i.i.i.i.i.i to i64
  %sub.ptr.rhs.cast.i = ptrtoint double* %cond.i.i.i.i955 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 3
  %93 = trunc i64 %sub.ptr.div.i to i32
  %conv89 = add i32 %93, -5
  %conv911209 = zext i32 %conv89 to i64
  %cmp941210 = icmp ugt i64 %sub.ptr.div.i, %conv911209
  br i1 %cmp941210, label %for.body96, label %for.cond.cleanup95

for.cond.cleanup95:                               ; preds = %for.body96, %invoke.cont80
  %putchar342 = call i32 @putchar(i32 10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #37
  %tobool.not.i.i.i.i553 = icmp eq double* %cond.i.i.i.i955, null
  br i1 %tobool.not.i.i.i.i553, label %_ZN10LSTMOutputD2Ev.exit, label %if.then.i.i.i.i554

if.then.i.i.i.i554:                               ; preds = %for.cond.cleanup95
  %94 = bitcast double* %cond.i.i.i.i955 to i8*
  call void @_ZdlPv(i8* nonnull %94) #37
  br label %_ZN10LSTMOutputD2Ev.exit

_ZN10LSTMOutputD2Ev.exit:                         ; preds = %if.then.i.i.i.i554, %for.cond.cleanup95
  %95 = load double*, double** %_M_start.i22.i, align 8, !tbaa !51
  %tobool.not.i.i.i.i557 = icmp eq double* %95, null
  br i1 %tobool.not.i.i.i.i557, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i561, label %if.then.i.i.i.i558

if.then.i.i.i.i558:                               ; preds = %_ZN10LSTMOutputD2Ev.exit
  %96 = bitcast double* %95 to i8*
  call void @_ZdlPv(i8* nonnull %96) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i561

_ZNSt6vectorIdSaIdEED2Ev.exit.i561:               ; preds = %if.then.i.i.i.i558, %_ZN10LSTMOutputD2Ev.exit
  %97 = load double*, double** %_M_start.i23.i, align 8, !tbaa !51
  %tobool.not.i.i.i3.i560 = icmp eq double* %97, null
  br i1 %tobool.not.i.i.i3.i560, label %_ZNSt6vectorIdSaIdEED2Ev.exit5.i565, label %if.then.i.i.i4.i562

if.then.i.i.i4.i562:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i561
  %98 = bitcast double* %97 to i8*
  call void @_ZdlPv(i8* nonnull %98) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit5.i565

_ZNSt6vectorIdSaIdEED2Ev.exit5.i565:              ; preds = %if.then.i.i.i4.i562, %_ZNSt6vectorIdSaIdEED2Ev.exit.i561
  %99 = load double*, double** %_M_start.i24.i, align 8, !tbaa !51
  %tobool.not.i.i.i7.i564 = icmp eq double* %99, null
  br i1 %tobool.not.i.i.i7.i564, label %_ZNSt6vectorIdSaIdEED2Ev.exit9.i569, label %if.then.i.i.i8.i566

if.then.i.i.i8.i566:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit5.i565
  %100 = bitcast double* %99 to i8*
  call void @_ZdlPv(i8* nonnull %100) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit9.i569

_ZNSt6vectorIdSaIdEED2Ev.exit9.i569:              ; preds = %if.then.i.i.i8.i566, %_ZNSt6vectorIdSaIdEED2Ev.exit5.i565
  %101 = load double*, double** %_M_start.i26.i, align 8, !tbaa !51
  %tobool.not.i.i.i11.i568 = icmp eq double* %101, null
  br i1 %tobool.not.i.i.i11.i568, label %_ZN9LSTMInputD2Ev.exit571, label %if.then.i.i.i12.i570

if.then.i.i.i12.i570:                             ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit9.i569
  %102 = bitcast double* %101 to i8*
  call void @_ZdlPv(i8* nonnull %102) #37
  br label %_ZN9LSTMInputD2Ev.exit571

_ZN9LSTMInputD2Ev.exit571:                        ; preds = %if.then.i.i.i12.i570, %_ZNSt6vectorIdSaIdEED2Ev.exit9.i569
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %31) #37
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %38) #37
  store i32 0, i32* %l117, align 8, !tbaa !57
  store i32 0, i32* %c118, align 4, !tbaa !64
  store i32 0, i32* %b119, align 8, !tbaa !60
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(96) %50, i8 0, i64 96, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #37
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp124, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path)
          to label %invoke.cont126 unwind label %lpad125

lpad74.loopexit:                                  ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup114

lpad74.loopexit.split-lp:                         ; preds = %if.then.i.i511
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup114

lpad79:                                           ; preds = %for.body.i
  %103 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #37
  %tobool.not.i.i.i.i583 = icmp eq double* %cond.i.i.i.i955, null
  br i1 %tobool.not.i.i.i.i583, label %ehcleanup114, label %if.then.i.i.i.i584

if.then.i.i.i.i584:                               ; preds = %lpad79
  %104 = bitcast double* %cond.i.i.i.i955 to i8*
  call void @_ZdlPv(i8* nonnull %104) #37
  br label %ehcleanup114

for.body96:                                       ; preds = %for.body96, %invoke.cont80
  %conv911212 = phi i64 [ %conv91, %for.body96 ], [ %conv911209, %invoke.cont80 ]
  %i86.01211 = phi i32 [ %inc104, %for.body96 ], [ %conv89, %invoke.cont80 ]
  %add.ptr.i588 = getelementptr inbounds double, double* %cond.i.i.i.i955, i64 %conv911212
  %105 = load double, double* %add.ptr.i588, align 8, !tbaa !61
  %call102 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), double %105)
  %inc104 = add i32 %i86.01211, 1
  %conv91 = zext i32 %inc104 to i64
  %cmp94 = icmp ugt i64 %sub.ptr.div.i, %conv91
  br i1 %cmp94, label %for.body96, label %for.cond.cleanup95, !llvm.loop !66

invoke.cont126:                                   ; preds = %_ZN9LSTMInputD2Ev.exit571
  invoke void @_Z18read_lstm_instanceRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiS7_S7_RSt6vectorIdSaIdEESB_SB_SB_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp124, i32* nonnull %l117, i32* nonnull %c118, i32* nonnull %b119, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %main_params120, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %extra_params121, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %state122, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %sequence123)
          to label %invoke.cont135 unwind label %lpad134

invoke.cont135:                                   ; preds = %invoke.cont126
  %106 = load i8*, i8** %_M_p.i.i.i.i631, align 8, !tbaa !17
  %cmp.i.i.i633 = icmp eq i8* %106, %arraydecay.i.i.i.i632
  br i1 %cmp.i.i.i633, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit636, label %if.then.i.i634

if.then.i.i634:                                   ; preds = %invoke.cont135
  call void @_ZdlPv(i8* %106) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit636

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit636: ; preds = %if.then.i.i634, %invoke.cont135
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #37
  %107 = load double*, double** %_M_finish.i637, align 8, !tbaa !49
  %108 = load double*, double** %_M_start.i638, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i639 = ptrtoint double* %107 to i64
  %sub.ptr.rhs.cast.i640 = ptrtoint double* %108 to i64
  %sub.ptr.sub.i641 = sub i64 %sub.ptr.lhs.cast.i639, %sub.ptr.rhs.cast.i640
  %sub.ptr.div.i642 = ashr exact i64 %sub.ptr.sub.i641, 3
  %cmp.i.i663 = icmp ugt i64 %sub.ptr.div.i642, 1152921504606846975
  br i1 %cmp.i.i663, label %if.then.i.i664, label %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i666

if.then.i.i664:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit636
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.113, i64 0, i64 0)) #39
          to label %.noexc678 unwind label %lpad142.loopexit.split-lp

.noexc678:                                        ; preds = %if.then.i.i664
  unreachable

_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i666: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit636
  %cmp.not.i.i.i.i665 = icmp eq i64 %sub.ptr.sub.i641, 0
  br i1 %cmp.not.i.i.i.i665, label %invoke.cont143, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i667

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i667: ; preds = %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i666
  %call2.i.i.i.i3.i.i680 = invoke noalias nonnull i8* @_Znwm(i64 %sub.ptr.sub.i641) #41
          to label %for.body.i.i.preheader.i.i.i.i.i674 unwind label %lpad142.loopexit

for.body.i.i.preheader.i.i.i.i.i674:              ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i667
  %109 = bitcast i8* %call2.i.i.i.i3.i.i680 to double*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i3.i.i680, i8 0, i64 %sub.ptr.sub.i641, i1 false)
  br label %invoke.cont143

invoke.cont143:                                   ; preds = %for.body.i.i.preheader.i.i.i.i.i674, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i666
  %cond.i.i.i.i668960 = phi double* [ %109, %for.body.i.i.preheader.i.i.i.i.i674 ], [ null, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i666 ]
  %110 = load i32, i32* %l117, align 8, !tbaa !57
  %mul148 = shl nsw i32 %110, 3
  %111 = load i32, i32* %b119, align 8, !tbaa !60
  %mul150345 = or i32 %mul148, 3
  %add153 = mul i32 %mul150345, %111
  %conv157 = sext i32 %add153 to i64
  %cmp.i.i702 = icmp slt i32 %add153, 0
  br i1 %cmp.i.i702, label %if.then.i.i703, label %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i705

if.then.i.i703:                                   ; preds = %invoke.cont143
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.113, i64 0, i64 0)) #39
          to label %.noexc718 unwind label %lpad159.loopexit.split-lp

.noexc718:                                        ; preds = %if.then.i.i703
  unreachable

_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i705: ; preds = %invoke.cont143
  %cmp.not.i.i.i.i704 = icmp eq i32 %add153, 0
  br i1 %cmp.not.i.i.i.i704, label %invoke.cont160, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i707

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i707: ; preds = %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i705
  %mul.i.i.i.i.i.i706 = shl nuw nsw i64 %conv157, 3
  %call2.i.i.i.i3.i.i720 = invoke noalias nonnull i8* @_Znwm(i64 %mul.i.i.i.i.i.i706) #41
          to label %for.body.i.i.preheader.i.i.i.i.i714 unwind label %lpad159.loopexit

for.body.i.i.preheader.i.i.i.i.i714:              ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i707
  %112 = bitcast i8* %call2.i.i.i.i3.i.i720 to double*
  %add.ptr.i.i.i710 = getelementptr double, double* %112, i64 %conv157
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i3.i.i720, i8 0, i64 %mul.i.i.i.i.i.i706, i1 false)
  br label %invoke.cont160

invoke.cont160:                                   ; preds = %for.body.i.i.preheader.i.i.i.i.i714, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i705
  %cond.i.i.i.i708965 = phi double* [ %112, %for.body.i.i.preheader.i.i.i.i.i714 ], [ null, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i705 ]
  %__first.addr.0.lcssa.i.i.i.i.i.i.i715 = phi double* [ %add.ptr.i.i.i710, %for.body.i.i.preheader.i.i.i.i.i714 ], [ null, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i705 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #37
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #37
  %call165 = call i32 @gettimeofday(%struct.timeval* nonnull %start163, i8* null) #37
  br label %for.body.i739

for.body.i739:                                    ; preds = %.noexc740, %invoke.cont160
  %i.027.i731 = phi i32 [ 0, %invoke.cont160 ], [ %inc.i737, %.noexc740 ]
  %113 = load double*, double** %_M_finish.i.i723, align 8, !tbaa !49
  %114 = load double*, double** %_M_start.i26.i724, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i732 = ptrtoint double* %113 to i64
  %sub.ptr.rhs.cast.i.i733 = ptrtoint double* %114 to i64
  %sub.ptr.sub.i.i734 = sub i64 %sub.ptr.lhs.cast.i.i732, %sub.ptr.rhs.cast.i.i733
  %sub.ptr.div.i.i735 = ashr exact i64 %sub.ptr.sub.i.i734, 3
  %add.ptr.i736 = getelementptr inbounds double, double* %cond.i.i.i.i708965, i64 %sub.ptr.div.i.i735
  %115 = load i32, i32* %l117, align 8, !tbaa !57
  %116 = load i32, i32* %c118, align 4, !tbaa !64
  %117 = load i32, i32* %b119, align 8, !tbaa !60
  %118 = load double*, double** %_M_start.i24.i728, align 8, !tbaa !51
  %119 = load double*, double** %_M_start.i23.i729, align 8, !tbaa !51
  %120 = load double*, double** %_M_start.i22.i730, align 8, !tbaa !51
  invoke void @adept_dlstm_objective(i32 %115, i32 %116, i32 %117, double* %114, double* %cond.i.i.i.i708965, double* %118, double* %add.ptr.i736, double* %119, double* %120, double* undef, double* undef)
          to label %.noexc740 unwind label %lpad166

.noexc740:                                        ; preds = %for.body.i739
  %inc.i737 = add nuw nsw i32 %i.027.i731, 1
  %exitcond.not.i738 = icmp eq i32 %inc.i737, 100
  br i1 %exitcond.not.i738, label %invoke.cont167, label %for.body.i739, !llvm.loop !67

invoke.cont167:                                   ; preds = %.noexc740
  %call168 = call i32 @gettimeofday(%struct.timeval* nonnull %end164, i8* null) #37
  %121 = load i64, i64* %tv_sec.i741, align 8, !tbaa !44
  %122 = load i64, i64* %tv_sec1.i742, align 8, !tbaa !44
  %sub.i743 = sub nsw i64 %121, %122
  %conv.i744 = sitofp i64 %sub.i743 to double
  %123 = load i64, i64* %tv_usec.i745, align 8, !tbaa !46
  %124 = load i64, i64* %tv_usec2.i746, align 8, !tbaa !46
  %sub3.i747 = sub nsw i64 %123, %124
  %conv4.i748 = sitofp i64 %sub3.i747 to double
  %mul.i749 = fmul fast double %conv4.i748, 0x3EB0C6F7A0B5ED8D
  %add.i750 = fadd fast double %mul.i749, %conv.i744
  %conv5.i751 = fptrunc double %add.i750 to float
  %conv170 = fpext float %conv5.i751 to double
  %call172 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0), double %conv170)
  %sub.ptr.lhs.cast.i754 = ptrtoint double* %__first.addr.0.lcssa.i.i.i.i.i.i.i715 to i64
  %sub.ptr.rhs.cast.i755 = ptrtoint double* %cond.i.i.i.i708965 to i64
  %sub.ptr.sub.i756 = sub i64 %sub.ptr.lhs.cast.i754, %sub.ptr.rhs.cast.i755
  %sub.ptr.div.i757 = ashr exact i64 %sub.ptr.sub.i756, 3
  %125 = trunc i64 %sub.ptr.div.i757 to i32
  %conv177 = add i32 %125, -5
  %conv1791213 = zext i32 %conv177 to i64
  %cmp1821214 = icmp ugt i64 %sub.ptr.div.i757, %conv1791213
  br i1 %cmp1821214, label %for.body184, label %for.cond.cleanup183

for.cond.cleanup183:                              ; preds = %for.body184, %invoke.cont167
  %putchar350 = call i32 @putchar(i32 10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #37
  %tobool.not.i.i.i.i777 = icmp eq double* %cond.i.i.i.i708965, null
  br i1 %tobool.not.i.i.i.i777, label %_ZN10LSTMOutputD2Ev.exit780, label %if.then.i.i.i.i778

if.then.i.i.i.i778:                               ; preds = %for.cond.cleanup183
  %126 = bitcast double* %cond.i.i.i.i708965 to i8*
  call void @_ZdlPv(i8* nonnull %126) #37
  br label %_ZN10LSTMOutputD2Ev.exit780

_ZN10LSTMOutputD2Ev.exit780:                      ; preds = %if.then.i.i.i.i778, %for.cond.cleanup183
  %tobool.not.i.i.i782 = icmp eq double* %cond.i.i.i.i668960, null
  br i1 %tobool.not.i.i.i782, label %_ZNSt6vectorIdSaIdEED2Ev.exit785, label %if.then.i.i.i784

if.then.i.i.i784:                                 ; preds = %_ZN10LSTMOutputD2Ev.exit780
  %127 = bitcast double* %cond.i.i.i.i668960 to i8*
  call void @_ZdlPv(i8* nonnull %127) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit785

_ZNSt6vectorIdSaIdEED2Ev.exit785:                 ; preds = %if.then.i.i.i784, %_ZN10LSTMOutputD2Ev.exit780
  %128 = load double*, double** %_M_start.i22.i730, align 8, !tbaa !51
  %tobool.not.i.i.i.i787 = icmp eq double* %128, null
  br i1 %tobool.not.i.i.i.i787, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i791, label %if.then.i.i.i.i788

if.then.i.i.i.i788:                               ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit785
  %129 = bitcast double* %128 to i8*
  call void @_ZdlPv(i8* nonnull %129) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i791

_ZNSt6vectorIdSaIdEED2Ev.exit.i791:               ; preds = %if.then.i.i.i.i788, %_ZNSt6vectorIdSaIdEED2Ev.exit785
  %130 = load double*, double** %_M_start.i23.i729, align 8, !tbaa !51
  %tobool.not.i.i.i3.i790 = icmp eq double* %130, null
  br i1 %tobool.not.i.i.i3.i790, label %_ZNSt6vectorIdSaIdEED2Ev.exit5.i795, label %if.then.i.i.i4.i792

if.then.i.i.i4.i792:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i791
  %131 = bitcast double* %130 to i8*
  call void @_ZdlPv(i8* nonnull %131) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit5.i795

_ZNSt6vectorIdSaIdEED2Ev.exit5.i795:              ; preds = %if.then.i.i.i4.i792, %_ZNSt6vectorIdSaIdEED2Ev.exit.i791
  %132 = load double*, double** %_M_start.i24.i728, align 8, !tbaa !51
  %tobool.not.i.i.i7.i794 = icmp eq double* %132, null
  br i1 %tobool.not.i.i.i7.i794, label %_ZNSt6vectorIdSaIdEED2Ev.exit9.i799, label %if.then.i.i.i8.i796

if.then.i.i.i8.i796:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit5.i795
  %133 = bitcast double* %132 to i8*
  call void @_ZdlPv(i8* nonnull %133) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit9.i799

_ZNSt6vectorIdSaIdEED2Ev.exit9.i799:              ; preds = %if.then.i.i.i8.i796, %_ZNSt6vectorIdSaIdEED2Ev.exit5.i795
  %134 = load double*, double** %_M_start.i26.i724, align 8, !tbaa !51
  %tobool.not.i.i.i11.i798 = icmp eq double* %134, null
  br i1 %tobool.not.i.i.i11.i798, label %_ZN9LSTMInputD2Ev.exit801, label %if.then.i.i.i12.i800

if.then.i.i.i12.i800:                             ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit9.i799
  %135 = bitcast double* %134 to i8*
  call void @_ZdlPv(i8* nonnull %135) #37
  br label %_ZN9LSTMInputD2Ev.exit801

_ZN9LSTMInputD2Ev.exit801:                        ; preds = %if.then.i.i.i12.i800, %_ZNSt6vectorIdSaIdEED2Ev.exit9.i799
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %38) #37
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %43) #37
  store i32 0, i32* %l207, align 8, !tbaa !57
  store i32 0, i32* %c208, align 4, !tbaa !64
  store i32 0, i32* %b209, align 8, !tbaa !60
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(96) %51, i8 0, i64 96, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #37
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp214, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path)
          to label %invoke.cont216 unwind label %lpad215

ehcleanup114:                                     ; preds = %if.then.i.i.i.i584, %lpad79, %lpad74.loopexit.split-lp, %lpad74.loopexit, %ehcleanup54
  %.pn339.pn = phi { i8*, i32 } [ %.pn336, %ehcleanup54 ], [ %103, %lpad79 ], [ %103, %if.then.i.i.i.i584 ], [ %lpad.loopexit, %lpad74.loopexit ], [ %lpad.loopexit.split-lp, %lpad74.loopexit.split-lp ]
  %136 = load double*, double** %_M_start.i22.i, align 8, !tbaa !51
  %tobool.not.i.i.i.i810 = icmp eq double* %136, null
  br i1 %tobool.not.i.i.i.i810, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i814, label %if.then.i.i.i.i811

if.then.i.i.i.i811:                               ; preds = %ehcleanup114
  %137 = bitcast double* %136 to i8*
  call void @_ZdlPv(i8* nonnull %137) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i814

_ZNSt6vectorIdSaIdEED2Ev.exit.i814:               ; preds = %if.then.i.i.i.i811, %ehcleanup114
  %138 = load double*, double** %_M_start.i23.i, align 8, !tbaa !51
  %tobool.not.i.i.i3.i813 = icmp eq double* %138, null
  br i1 %tobool.not.i.i.i3.i813, label %_ZNSt6vectorIdSaIdEED2Ev.exit5.i818, label %if.then.i.i.i4.i815

if.then.i.i.i4.i815:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i814
  %139 = bitcast double* %138 to i8*
  call void @_ZdlPv(i8* nonnull %139) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit5.i818

_ZNSt6vectorIdSaIdEED2Ev.exit5.i818:              ; preds = %if.then.i.i.i4.i815, %_ZNSt6vectorIdSaIdEED2Ev.exit.i814
  %140 = load double*, double** %_M_start.i24.i, align 8, !tbaa !51
  %tobool.not.i.i.i7.i817 = icmp eq double* %140, null
  br i1 %tobool.not.i.i.i7.i817, label %_ZNSt6vectorIdSaIdEED2Ev.exit9.i822, label %if.then.i.i.i8.i819

if.then.i.i.i8.i819:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit5.i818
  %141 = bitcast double* %140 to i8*
  call void @_ZdlPv(i8* nonnull %141) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit9.i822

_ZNSt6vectorIdSaIdEED2Ev.exit9.i822:              ; preds = %if.then.i.i.i8.i819, %_ZNSt6vectorIdSaIdEED2Ev.exit5.i818
  %142 = load double*, double** %_M_start.i26.i, align 8, !tbaa !51
  %tobool.not.i.i.i11.i821 = icmp eq double* %142, null
  br i1 %tobool.not.i.i.i11.i821, label %_ZN9LSTMInputD2Ev.exit824, label %if.then.i.i.i12.i823

if.then.i.i.i12.i823:                             ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit9.i822
  %143 = bitcast double* %142 to i8*
  call void @_ZdlPv(i8* nonnull %143) #37
  br label %_ZN9LSTMInputD2Ev.exit824

_ZN9LSTMInputD2Ev.exit824:                        ; preds = %if.then.i.i.i12.i823, %_ZNSt6vectorIdSaIdEED2Ev.exit9.i822
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %31) #37
  br label %ehcleanup296

lpad125:                                          ; preds = %_ZN9LSTMInputD2Ev.exit571
  %144 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup137

lpad134:                                          ; preds = %invoke.cont126
  %145 = landingpad { i8*, i32 }
          cleanup
  %146 = load i8*, i8** %_M_p.i.i.i.i631, align 8, !tbaa !17
  %cmp.i.i.i827 = icmp eq i8* %146, %arraydecay.i.i.i.i632
  br i1 %cmp.i.i.i827, label %ehcleanup137, label %if.then.i.i828

if.then.i.i828:                                   ; preds = %lpad134
  call void @_ZdlPv(i8* %146) #37
  br label %ehcleanup137

ehcleanup137:                                     ; preds = %if.then.i.i828, %lpad134, %lpad125
  %.pn343 = phi { i8*, i32 } [ %144, %lpad125 ], [ %145, %lpad134 ], [ %145, %if.then.i.i828 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #37
  br label %ehcleanup204

lpad142.loopexit:                                 ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i667
  %lpad.loopexit981 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup204

lpad142.loopexit.split-lp:                        ; preds = %if.then.i.i664
  %lpad.loopexit.split-lp982 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup204

lpad159.loopexit:                                 ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i707
  %lpad.loopexit984 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup200

lpad159.loopexit.split-lp:                        ; preds = %if.then.i.i703
  %lpad.loopexit.split-lp985 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup200

lpad166:                                          ; preds = %for.body.i739
  %147 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #37
  %tobool.not.i.i.i.i805 = icmp eq double* %cond.i.i.i.i708965, null
  br i1 %tobool.not.i.i.i.i805, label %ehcleanup200, label %if.then.i.i.i.i806

if.then.i.i.i.i806:                               ; preds = %lpad166
  %148 = bitcast double* %cond.i.i.i.i708965 to i8*
  call void @_ZdlPv(i8* nonnull %148) #37
  br label %ehcleanup200

for.body184:                                      ; preds = %for.body184, %invoke.cont167
  %conv1791216 = phi i64 [ %conv179, %for.body184 ], [ %conv1791213, %invoke.cont167 ]
  %i173.01215 = phi i32 [ %inc192, %for.body184 ], [ %conv177, %invoke.cont167 ]
  %add.ptr.i803 = getelementptr inbounds double, double* %cond.i.i.i.i708965, i64 %conv1791216
  %149 = load double, double* %add.ptr.i803, align 8, !tbaa !61
  %call190 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), double %149)
  %inc192 = add i32 %i173.01215, 1
  %conv179 = zext i32 %inc192 to i64
  %cmp182 = icmp ugt i64 %sub.ptr.div.i757, %conv179
  br i1 %cmp182, label %for.body184, label %for.cond.cleanup183, !llvm.loop !68

invoke.cont216:                                   ; preds = %_ZN9LSTMInputD2Ev.exit801
  invoke void @_Z18read_lstm_instanceRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiS7_S7_RSt6vectorIdSaIdEESB_SB_SB_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp214, i32* nonnull %l207, i32* nonnull %c208, i32* nonnull %b209, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %main_params210, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %extra_params211, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %state212, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %sequence213)
          to label %invoke.cont225 unwind label %lpad224

invoke.cont225:                                   ; preds = %invoke.cont216
  %150 = load i8*, i8** %_M_p.i.i.i.i764, align 8, !tbaa !17
  %cmp.i.i.i766 = icmp eq i8* %150, %arraydecay.i.i.i.i765
  br i1 %cmp.i.i.i766, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit769, label %if.then.i.i767

if.then.i.i767:                                   ; preds = %invoke.cont225
  call void @_ZdlPv(i8* %150) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit769

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit769: ; preds = %if.then.i.i767, %invoke.cont225
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #37
  %151 = load double*, double** %_M_finish.i758, align 8, !tbaa !49
  %152 = load double*, double** %_M_start.i759, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i760 = ptrtoint double* %151 to i64
  %sub.ptr.rhs.cast.i761 = ptrtoint double* %152 to i64
  %sub.ptr.sub.i762 = sub i64 %sub.ptr.lhs.cast.i760, %sub.ptr.rhs.cast.i761
  %sub.ptr.div.i763 = ashr exact i64 %sub.ptr.sub.i762, 3
  %cmp.i.i682 = icmp ugt i64 %sub.ptr.div.i763, 1152921504606846975
  br i1 %cmp.i.i682, label %if.then.i.i683, label %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i685

if.then.i.i683:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit769
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.113, i64 0, i64 0)) #39
          to label %.noexc698 unwind label %lpad232.loopexit.split-lp

.noexc698:                                        ; preds = %if.then.i.i683
  unreachable

_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i685: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit769
  %cmp.not.i.i.i.i684 = icmp eq i64 %sub.ptr.sub.i762, 0
  br i1 %cmp.not.i.i.i.i684, label %invoke.cont233, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i687

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i687: ; preds = %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i685
  %call2.i.i.i.i3.i.i700 = invoke noalias nonnull i8* @_Znwm(i64 %sub.ptr.sub.i762) #41
          to label %for.body.i.i.preheader.i.i.i.i.i694 unwind label %lpad232.loopexit

for.body.i.i.preheader.i.i.i.i.i694:              ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i687
  %153 = bitcast i8* %call2.i.i.i.i3.i.i700 to double*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i3.i.i700, i8 0, i64 %sub.ptr.sub.i762, i1 false)
  br label %invoke.cont233

invoke.cont233:                                   ; preds = %for.body.i.i.preheader.i.i.i.i.i694, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i685
  %cond.i.i.i.i688970 = phi double* [ %153, %for.body.i.i.preheader.i.i.i.i.i694 ], [ null, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i685 ]
  %154 = load i32, i32* %l207, align 8, !tbaa !57
  %mul238 = shl nsw i32 %154, 3
  %155 = load i32, i32* %b209, align 8, !tbaa !60
  %mul240359 = or i32 %mul238, 3
  %add243 = mul i32 %mul240359, %155
  %conv247 = sext i32 %add243 to i64
  %cmp.i.i643 = icmp slt i32 %add243, 0
  br i1 %cmp.i.i643, label %if.then.i.i644, label %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i646

if.then.i.i644:                                   ; preds = %invoke.cont233
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.113, i64 0, i64 0)) #39
          to label %.noexc659 unwind label %lpad249.loopexit.split-lp

.noexc659:                                        ; preds = %if.then.i.i644
  unreachable

_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i646: ; preds = %invoke.cont233
  %cmp.not.i.i.i.i645 = icmp eq i32 %add243, 0
  br i1 %cmp.not.i.i.i.i645, label %invoke.cont250, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i648

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i648: ; preds = %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i646
  %mul.i.i.i.i.i.i647 = shl nuw nsw i64 %conv247, 3
  %call2.i.i.i.i3.i.i661 = invoke noalias nonnull i8* @_Znwm(i64 %mul.i.i.i.i.i.i647) #41
          to label %for.body.i.i.preheader.i.i.i.i.i655 unwind label %lpad249.loopexit

for.body.i.i.preheader.i.i.i.i.i655:              ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i648
  %156 = bitcast i8* %call2.i.i.i.i3.i.i661 to double*
  %add.ptr.i.i.i651 = getelementptr double, double* %156, i64 %conv247
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i3.i.i661, i8 0, i64 %mul.i.i.i.i.i.i647, i1 false)
  br label %invoke.cont250

invoke.cont250:                                   ; preds = %for.body.i.i.preheader.i.i.i.i.i655, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i646
  %cond.i.i.i.i649978 = phi double* [ %156, %for.body.i.i.preheader.i.i.i.i.i655 ], [ null, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i646 ]
  %__first.addr.0.lcssa.i.i.i.i.i.i.i656 = phi double* [ %add.ptr.i.i.i651, %for.body.i.i.preheader.i.i.i.i.i655 ], [ null, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i646 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #37
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #37
  %call255 = call i32 @gettimeofday(%struct.timeval* nonnull %start253, i8* null) #37
  br label %for.body.i630

for.body.i630:                                    ; preds = %for.body.i630, %invoke.cont250
  %i.027.i622 = phi i32 [ 0, %invoke.cont250 ], [ %inc.i628, %for.body.i630 ]
  %157 = load double*, double** %_M_finish.i.i614, align 8, !tbaa !49
  %158 = load double*, double** %_M_start.i26.i615, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i623 = ptrtoint double* %157 to i64
  %sub.ptr.rhs.cast.i.i624 = ptrtoint double* %158 to i64
  %sub.ptr.sub.i.i625 = sub i64 %sub.ptr.lhs.cast.i.i623, %sub.ptr.rhs.cast.i.i624
  %sub.ptr.div.i.i626 = ashr exact i64 %sub.ptr.sub.i.i625, 3
  %add.ptr.i627 = getelementptr inbounds double, double* %cond.i.i.i.i649978, i64 %sub.ptr.div.i.i626
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #37
  store double 0.000000e+00, double* %loss.i, align 8, !tbaa !61
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #37
  store double 1.000000e+00, double* %lossb.i612, align 8, !tbaa !61
  %159 = load i32, i32* %l207, align 8, !tbaa !57
  %160 = load i32, i32* %c208, align 4, !tbaa !64
  %161 = load i32, i32* %b209, align 8, !tbaa !60
  %162 = load double*, double** %_M_start.i24.i619, align 8, !tbaa !51
  %163 = load double*, double** %_M_start.i23.i620, align 8, !tbaa !51
  %164 = load double*, double** %_M_start.i22.i621, align 8, !tbaa !51
  %165 = load i32, i32* @enzyme_const, align 4, !tbaa !47
  %166 = load i32, i32* @enzyme_dup, align 4, !tbaa !47
  %167 = load i32, i32* @enzyme_dupnoneed, align 4, !tbaa !47
  call void @diffelstm_objective(i32 %159, i32 %160, i32 %161, double* %158, double* %cond.i.i.i.i649978, double* %162, double* %add.ptr.i627, double* %163, double* %164, double* %loss.i, double* %lossb.i612)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #37
  %inc.i628 = add nuw nsw i32 %i.027.i622, 1
  %exitcond.not.i629 = icmp eq i32 %inc.i628, 100
  br i1 %exitcond.not.i629, label %_Z18calculate_jacobianIXadL_Z15dlstm_objectiveEEEvR9LSTMInputR10LSTMOutput.exit, label %for.body.i630, !llvm.loop !69

_Z18calculate_jacobianIXadL_Z15dlstm_objectiveEEEvR9LSTMInputR10LSTMOutput.exit: ; preds = %for.body.i630
  %call258 = call i32 @gettimeofday(%struct.timeval* nonnull %end254, i8* null) #37
  %168 = load i64, i64* %tv_sec.i601, align 8, !tbaa !44
  %169 = load i64, i64* %tv_sec1.i602, align 8, !tbaa !44
  %sub.i603 = sub nsw i64 %168, %169
  %conv.i604 = sitofp i64 %sub.i603 to double
  %170 = load i64, i64* %tv_usec.i605, align 8, !tbaa !46
  %171 = load i64, i64* %tv_usec2.i606, align 8, !tbaa !46
  %sub3.i607 = sub nsw i64 %170, %171
  %conv4.i608 = sitofp i64 %sub3.i607 to double
  %mul.i609 = fmul fast double %conv4.i608, 0x3EB0C6F7A0B5ED8D
  %add.i610 = fadd fast double %mul.i609, %conv.i604
  %conv5.i611 = fptrunc double %add.i610 to float
  %conv260 = fpext float %conv5.i611 to double
  %call262 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0), double %conv260)
  %sub.ptr.lhs.cast.i597 = ptrtoint double* %__first.addr.0.lcssa.i.i.i.i.i.i.i656 to i64
  %sub.ptr.rhs.cast.i598 = ptrtoint double* %cond.i.i.i.i649978 to i64
  %sub.ptr.sub.i599 = sub i64 %sub.ptr.lhs.cast.i597, %sub.ptr.rhs.cast.i598
  %sub.ptr.div.i600 = ashr exact i64 %sub.ptr.sub.i599, 3
  %172 = trunc i64 %sub.ptr.div.i600 to i32
  %conv267 = add i32 %172, -5
  %conv2691217 = zext i32 %conv267 to i64
  %cmp2721218 = icmp ugt i64 %sub.ptr.div.i600, %conv2691217
  br i1 %cmp2721218, label %for.body274, label %for.cond.cleanup273

for.cond.cleanup273:                              ; preds = %for.body274, %_Z18calculate_jacobianIXadL_Z15dlstm_objectiveEEEvR9LSTMInputR10LSTMOutput.exit
  %putchar360 = call i32 @putchar(i32 10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #37
  %tobool.not.i.i.i.i578 = icmp eq double* %cond.i.i.i.i649978, null
  br i1 %tobool.not.i.i.i.i578, label %_ZN10LSTMOutputD2Ev.exit581, label %if.then.i.i.i.i579

if.then.i.i.i.i579:                               ; preds = %for.cond.cleanup273
  %173 = bitcast double* %cond.i.i.i.i649978 to i8*
  call void @_ZdlPv(i8* nonnull %173) #37
  br label %_ZN10LSTMOutputD2Ev.exit581

_ZN10LSTMOutputD2Ev.exit581:                      ; preds = %if.then.i.i.i.i579, %for.cond.cleanup273
  %tobool.not.i.i.i573 = icmp eq double* %cond.i.i.i.i688970, null
  br i1 %tobool.not.i.i.i573, label %_ZNSt6vectorIdSaIdEED2Ev.exit576, label %if.then.i.i.i575

if.then.i.i.i575:                                 ; preds = %_ZN10LSTMOutputD2Ev.exit581
  %174 = bitcast double* %cond.i.i.i.i688970 to i8*
  call void @_ZdlPv(i8* nonnull %174) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit576

_ZNSt6vectorIdSaIdEED2Ev.exit576:                 ; preds = %if.then.i.i.i575, %_ZN10LSTMOutputD2Ev.exit581
  %175 = load double*, double** %_M_start.i22.i621, align 8, !tbaa !51
  %tobool.not.i.i.i.i525 = icmp eq double* %175, null
  br i1 %tobool.not.i.i.i.i525, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i529, label %if.then.i.i.i.i526

if.then.i.i.i.i526:                               ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit576
  %176 = bitcast double* %175 to i8*
  call void @_ZdlPv(i8* nonnull %176) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i529

_ZNSt6vectorIdSaIdEED2Ev.exit.i529:               ; preds = %if.then.i.i.i.i526, %_ZNSt6vectorIdSaIdEED2Ev.exit576
  %177 = load double*, double** %_M_start.i23.i620, align 8, !tbaa !51
  %tobool.not.i.i.i3.i528 = icmp eq double* %177, null
  br i1 %tobool.not.i.i.i3.i528, label %_ZNSt6vectorIdSaIdEED2Ev.exit5.i533, label %if.then.i.i.i4.i530

if.then.i.i.i4.i530:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i529
  %178 = bitcast double* %177 to i8*
  call void @_ZdlPv(i8* nonnull %178) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit5.i533

_ZNSt6vectorIdSaIdEED2Ev.exit5.i533:              ; preds = %if.then.i.i.i4.i530, %_ZNSt6vectorIdSaIdEED2Ev.exit.i529
  %179 = load double*, double** %_M_start.i24.i619, align 8, !tbaa !51
  %tobool.not.i.i.i7.i532 = icmp eq double* %179, null
  br i1 %tobool.not.i.i.i7.i532, label %_ZNSt6vectorIdSaIdEED2Ev.exit9.i537, label %if.then.i.i.i8.i534

if.then.i.i.i8.i534:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit5.i533
  %180 = bitcast double* %179 to i8*
  call void @_ZdlPv(i8* nonnull %180) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit9.i537

_ZNSt6vectorIdSaIdEED2Ev.exit9.i537:              ; preds = %if.then.i.i.i8.i534, %_ZNSt6vectorIdSaIdEED2Ev.exit5.i533
  %181 = load double*, double** %_M_start.i26.i615, align 8, !tbaa !51
  %tobool.not.i.i.i11.i536 = icmp eq double* %181, null
  br i1 %tobool.not.i.i.i11.i536, label %_ZN9LSTMInputD2Ev.exit539, label %if.then.i.i.i12.i538

if.then.i.i.i12.i538:                             ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit9.i537
  %182 = bitcast double* %181 to i8*
  call void @_ZdlPv(i8* nonnull %182) #37
  br label %_ZN9LSTMInputD2Ev.exit539

_ZN9LSTMInputD2Ev.exit539:                        ; preds = %if.then.i.i.i12.i538, %_ZNSt6vectorIdSaIdEED2Ev.exit9.i537
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %43) #37
  %183 = load i8*, i8** %_M_p.i13.i.i.i.i483, align 8, !tbaa !17
  %cmp.i.i.i507 = icmp eq i8* %183, %30
  br i1 %cmp.i.i.i507, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit510, label %if.then.i.i508

if.then.i.i508:                                   ; preds = %_ZN9LSTMInputD2Ev.exit539
  call void @_ZdlPv(i8* %183) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit510

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit510: ; preds = %if.then.i.i508, %_ZN9LSTMInputD2Ev.exit539
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #37
  %incdec.ptr.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__begin1.sroa.0.01222, i64 1
  %cmp.i.not = icmp eq %"class.std::__cxx11::basic_string"* %incdec.ptr.i, %call.i.i.i8.i
  br i1 %cmp.i.not, label %for.cond.cleanup, label %for.body, !llvm.loop !70

ehcleanup200:                                     ; preds = %if.then.i.i.i.i806, %lpad166, %lpad159.loopexit.split-lp, %lpad159.loopexit
  %.pn346 = phi { i8*, i32 } [ %147, %lpad166 ], [ %147, %if.then.i.i.i.i806 ], [ %lpad.loopexit984, %lpad159.loopexit ], [ %lpad.loopexit.split-lp985, %lpad159.loopexit.split-lp ]
  %tobool.not.i.i.i494 = icmp eq double* %cond.i.i.i.i668960, null
  br i1 %tobool.not.i.i.i494, label %ehcleanup204, label %if.then.i.i.i496

if.then.i.i.i496:                                 ; preds = %ehcleanup200
  %184 = bitcast double* %cond.i.i.i.i668960 to i8*
  call void @_ZdlPv(i8* nonnull %184) #37
  br label %ehcleanup204

ehcleanup204:                                     ; preds = %if.then.i.i.i496, %ehcleanup200, %lpad142.loopexit.split-lp, %lpad142.loopexit, %ehcleanup137
  %.pn346.pn.pn = phi { i8*, i32 } [ %.pn343, %ehcleanup137 ], [ %.pn346, %ehcleanup200 ], [ %.pn346, %if.then.i.i.i496 ], [ %lpad.loopexit981, %lpad142.loopexit ], [ %lpad.loopexit.split-lp982, %lpad142.loopexit.split-lp ]
  %185 = load double*, double** %_M_start.i22.i730, align 8, !tbaa !51
  %tobool.not.i.i.i.i460 = icmp eq double* %185, null
  br i1 %tobool.not.i.i.i.i460, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i464, label %if.then.i.i.i.i461

if.then.i.i.i.i461:                               ; preds = %ehcleanup204
  %186 = bitcast double* %185 to i8*
  call void @_ZdlPv(i8* nonnull %186) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i464

_ZNSt6vectorIdSaIdEED2Ev.exit.i464:               ; preds = %if.then.i.i.i.i461, %ehcleanup204
  %187 = load double*, double** %_M_start.i23.i729, align 8, !tbaa !51
  %tobool.not.i.i.i3.i463 = icmp eq double* %187, null
  br i1 %tobool.not.i.i.i3.i463, label %_ZNSt6vectorIdSaIdEED2Ev.exit5.i468, label %if.then.i.i.i4.i465

if.then.i.i.i4.i465:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i464
  %188 = bitcast double* %187 to i8*
  call void @_ZdlPv(i8* nonnull %188) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit5.i468

_ZNSt6vectorIdSaIdEED2Ev.exit5.i468:              ; preds = %if.then.i.i.i4.i465, %_ZNSt6vectorIdSaIdEED2Ev.exit.i464
  %189 = load double*, double** %_M_start.i24.i728, align 8, !tbaa !51
  %tobool.not.i.i.i7.i467 = icmp eq double* %189, null
  br i1 %tobool.not.i.i.i7.i467, label %_ZNSt6vectorIdSaIdEED2Ev.exit9.i472, label %if.then.i.i.i8.i469

if.then.i.i.i8.i469:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit5.i468
  %190 = bitcast double* %189 to i8*
  call void @_ZdlPv(i8* nonnull %190) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit9.i472

_ZNSt6vectorIdSaIdEED2Ev.exit9.i472:              ; preds = %if.then.i.i.i8.i469, %_ZNSt6vectorIdSaIdEED2Ev.exit5.i468
  %191 = load double*, double** %_M_start.i26.i724, align 8, !tbaa !51
  %tobool.not.i.i.i11.i471 = icmp eq double* %191, null
  br i1 %tobool.not.i.i.i11.i471, label %_ZN9LSTMInputD2Ev.exit474, label %if.then.i.i.i12.i473

if.then.i.i.i12.i473:                             ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit9.i472
  %192 = bitcast double* %191 to i8*
  call void @_ZdlPv(i8* nonnull %192) #37
  br label %_ZN9LSTMInputD2Ev.exit474

_ZN9LSTMInputD2Ev.exit474:                        ; preds = %if.then.i.i.i12.i473, %_ZNSt6vectorIdSaIdEED2Ev.exit9.i472
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %38) #37
  br label %ehcleanup296

lpad215:                                          ; preds = %_ZN9LSTMInputD2Ev.exit801
  %193 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup227

lpad224:                                          ; preds = %invoke.cont216
  %194 = landingpad { i8*, i32 }
          cleanup
  %195 = load i8*, i8** %_M_p.i.i.i.i764, align 8, !tbaa !17
  %cmp.i.i.i455 = icmp eq i8* %195, %arraydecay.i.i.i.i765
  br i1 %cmp.i.i.i455, label %ehcleanup227, label %if.then.i.i456

if.then.i.i456:                                   ; preds = %lpad224
  call void @_ZdlPv(i8* %195) #37
  br label %ehcleanup227

ehcleanup227:                                     ; preds = %if.then.i.i456, %lpad224, %lpad215
  %.pn351 = phi { i8*, i32 } [ %193, %lpad215 ], [ %194, %lpad224 ], [ %194, %if.then.i.i456 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #37
  br label %ehcleanup294

lpad232.loopexit:                                 ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i687
  %lpad.loopexit987 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup294

lpad232.loopexit.split-lp:                        ; preds = %if.then.i.i683
  %lpad.loopexit.split-lp988 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup294

lpad249.loopexit:                                 ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i648
  %lpad.loopexit990 = landingpad { i8*, i32 }
          cleanup
  br label %lpad249

lpad249.loopexit.split-lp:                        ; preds = %if.then.i.i644
  %lpad.loopexit.split-lp991 = landingpad { i8*, i32 }
          cleanup
  br label %lpad249

lpad249:                                          ; preds = %lpad249.loopexit.split-lp, %lpad249.loopexit
  %lpad.phi992 = phi { i8*, i32 } [ %lpad.loopexit990, %lpad249.loopexit ], [ %lpad.loopexit.split-lp991, %lpad249.loopexit.split-lp ]
  %tobool.not.i.i.i450 = icmp eq double* %cond.i.i.i.i688970, null
  br i1 %tobool.not.i.i.i450, label %ehcleanup294, label %if.then.i.i.i452

if.then.i.i.i452:                                 ; preds = %lpad249
  %196 = bitcast double* %cond.i.i.i.i688970 to i8*
  call void @_ZdlPv(i8* nonnull %196) #37
  br label %ehcleanup294

for.body274:                                      ; preds = %for.body274, %_Z18calculate_jacobianIXadL_Z15dlstm_objectiveEEEvR9LSTMInputR10LSTMOutput.exit
  %conv2691220 = phi i64 [ %conv269, %for.body274 ], [ %conv2691217, %_Z18calculate_jacobianIXadL_Z15dlstm_objectiveEEEvR9LSTMInputR10LSTMOutput.exit ]
  %i263.01219 = phi i32 [ %inc282, %for.body274 ], [ %conv267, %_Z18calculate_jacobianIXadL_Z15dlstm_objectiveEEEvR9LSTMInputR10LSTMOutput.exit ]
  %add.ptr.i = getelementptr inbounds double, double* %cond.i.i.i.i649978, i64 %conv2691220
  %197 = load double, double* %add.ptr.i, align 8, !tbaa !61
  %call280 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), double %197)
  %inc282 = add i32 %i263.01219, 1
  %conv269 = zext i32 %inc282 to i64
  %cmp272 = icmp ugt i64 %sub.ptr.div.i600, %conv269
  br i1 %cmp272, label %for.body274, label %for.cond.cleanup273, !llvm.loop !71

ehcleanup294:                                     ; preds = %if.then.i.i.i452, %lpad249, %lpad232.loopexit.split-lp, %lpad232.loopexit, %ehcleanup227
  %.pn353.pn = phi { i8*, i32 } [ %.pn351, %ehcleanup227 ], [ %lpad.phi992, %lpad249 ], [ %lpad.phi992, %if.then.i.i.i452 ], [ %lpad.loopexit987, %lpad232.loopexit ], [ %lpad.loopexit.split-lp988, %lpad232.loopexit.split-lp ]
  %198 = load double*, double** %_M_start.i22.i621, align 8, !tbaa !51
  %tobool.not.i.i.i.i = icmp eq double* %198, null
  br i1 %tobool.not.i.i.i.i, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %ehcleanup294
  %199 = bitcast double* %198 to i8*
  call void @_ZdlPv(i8* nonnull %199) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i

_ZNSt6vectorIdSaIdEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i, %ehcleanup294
  %200 = load double*, double** %_M_start.i23.i620, align 8, !tbaa !51
  %tobool.not.i.i.i3.i = icmp eq double* %200, null
  br i1 %tobool.not.i.i.i3.i, label %_ZNSt6vectorIdSaIdEED2Ev.exit5.i, label %if.then.i.i.i4.i

if.then.i.i.i4.i:                                 ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i
  %201 = bitcast double* %200 to i8*
  call void @_ZdlPv(i8* nonnull %201) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit5.i

_ZNSt6vectorIdSaIdEED2Ev.exit5.i:                 ; preds = %if.then.i.i.i4.i, %_ZNSt6vectorIdSaIdEED2Ev.exit.i
  %202 = load double*, double** %_M_start.i24.i619, align 8, !tbaa !51
  %tobool.not.i.i.i7.i = icmp eq double* %202, null
  br i1 %tobool.not.i.i.i7.i, label %_ZNSt6vectorIdSaIdEED2Ev.exit9.i, label %if.then.i.i.i8.i

if.then.i.i.i8.i:                                 ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit5.i
  %203 = bitcast double* %202 to i8*
  call void @_ZdlPv(i8* nonnull %203) #37
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit9.i

_ZNSt6vectorIdSaIdEED2Ev.exit9.i:                 ; preds = %if.then.i.i.i8.i, %_ZNSt6vectorIdSaIdEED2Ev.exit5.i
  %204 = load double*, double** %_M_start.i26.i615, align 8, !tbaa !51
  %tobool.not.i.i.i11.i = icmp eq double* %204, null
  br i1 %tobool.not.i.i.i11.i, label %_ZN9LSTMInputD2Ev.exit, label %if.then.i.i.i12.i

if.then.i.i.i12.i:                                ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit9.i
  %205 = bitcast double* %204 to i8*
  call void @_ZdlPv(i8* nonnull %205) #37
  br label %_ZN9LSTMInputD2Ev.exit

_ZN9LSTMInputD2Ev.exit:                           ; preds = %if.then.i.i.i12.i, %_ZNSt6vectorIdSaIdEED2Ev.exit9.i
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %43) #37
  br label %ehcleanup296

ehcleanup296:                                     ; preds = %_ZN9LSTMInputD2Ev.exit, %_ZN9LSTMInputD2Ev.exit474, %_ZN9LSTMInputD2Ev.exit824
  %.pn339.pn.pn = phi { i8*, i32 } [ %.pn339.pn, %_ZN9LSTMInputD2Ev.exit824 ], [ %.pn346.pn.pn, %_ZN9LSTMInputD2Ev.exit474 ], [ %.pn353.pn, %_ZN9LSTMInputD2Ev.exit ]
  %206 = load i8*, i8** %_M_p.i13.i.i.i.i483, align 8, !tbaa !17
  %cmp.i.i.i417 = icmp eq i8* %206, %30
  br i1 %cmp.i.i.i417, label %for.body.i.i.i.i.preheader, label %if.then.i.i418

if.then.i.i418:                                   ; preds = %ehcleanup296
  call void @_ZdlPv(i8* %206) #37
  br label %for.body.i.i.i.i.preheader

for.body.i.i.i.i.preheader:                       ; preds = %if.then.i.i418, %ehcleanup296, %lpad42
  %.pn339.pn.pn.pn = phi { i8*, i32 } [ %75, %lpad42 ], [ %.pn339.pn.pn, %ehcleanup296 ], [ %.pn339.pn.pn, %if.then.i.i418 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #37
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i, %for.body.i.i.i.i.preheader
  %__first.addr.04.i.i.i.i = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr.i.i.i.i, %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i ], [ %22, %for.body.i.i.i.i.preheader ]
  %_M_p.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i.i.i, i64 0, i32 0, i32 0
  %207 = load i8*, i8** %_M_p.i.i.i.i.i.i.i.i.i, align 8, !tbaa !17
  %208 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i.i.i, i64 0, i32 2
  %arraydecay.i.i.i.i.i.i.i.i.i = bitcast %union.anon* %208 to i8*
  %cmp.i.i.i.i.i.i.i.i = icmp eq i8* %207, %arraydecay.i.i.i.i.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i.i, label %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i, label %if.then.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i:                            ; preds = %for.body.i.i.i.i
  call void @_ZdlPv(i8* %207) #37
  br label %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i

_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i: ; preds = %if.then.i.i.i.i.i.i.i, %for.body.i.i.i.i
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i.i.i, i64 1
  %cmp.not.i.i.i.i = icmp eq %"class.std::__cxx11::basic_string"* %incdec.ptr.i.i.i.i, %call.i.i.i8.i
  br i1 %cmp.not.i.i.i.i, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit, label %for.body.i.i.i.i, !llvm.loop !56

_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit: ; preds = %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i
  call void @_ZdlPv(i8* nonnull %call2.i.i.i.i7.i) #37
  br label %ehcleanup305

ehcleanup305:                                     ; preds = %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit, %cleanup.done
  %.pn339.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn339.pn.pn.pn, %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit ], [ %.pn.pn.pn.pn952, %cleanup.done ]
  resume { i8*, i32 } %.pn339.pn.pn.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, i8* %__lhs, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__rhs) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %call.i = tail call i64 @strlen(i8* nonnull dereferenceable(1) %__lhs) #37
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !14
  %_M_string_length.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 0, i64* %_M_string_length.i.i.i, align 8, !tbaa !19
  %.cast.i = bitcast %union.anon* %0 to i8*
  store i8 0, i8* %.cast.i, align 8, !tbaa !21
  %_M_string_length.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__rhs, i64 0, i32 1
  %2 = load i64, i64* %_M_string_length.i, align 8, !tbaa !19
  %add = add i64 %2, %call.i
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i64 %add)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %3 = load i64, i64* %_M_string_length.i.i.i, align 8, !tbaa !19
  %sub3.i.i = sub i64 4611686018427387903, %3
  %cmp.i.i = icmp ult i64 %sub3.i.i, %call.i
  br i1 %cmp.i.i, label %if.then.i.i14, label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i

if.then.i.i14:                                    ; preds = %invoke.cont
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.106, i64 0, i64 0)) #39
          to label %.noexc unwind label %lpad

.noexc:                                           ; preds = %if.then.i.i14
  unreachable

_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i: ; preds = %invoke.cont
  %call.i1516 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* %__lhs, i64 %call.i)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
  %_M_p.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__rhs, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %_M_p.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %_M_string_length.i, align 8, !tbaa !19
  %call3.i12 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* %4, i64 %5)
          to label %nrvo.skipdtor unwind label %lpad

lpad:                                             ; preds = %invoke.cont2, %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i, %if.then.i.i14, %entry
  %6 = landingpad { i8*, i32 }
          cleanup
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %7, %.cast.i
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %lpad
  tail call void @_ZdlPv(i8* %7) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %lpad
  resume { i8*, i32 } %6

nrvo.skipdtor:                                    ; preds = %invoke.cont2
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @gettimeofday(%struct.timeval* nocapture noundef, i8* nocapture noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #13

; Function Attrs: nounwind readnone uwtable willreturn mustprogress
define dso_local double @sigmoid(double %x) local_unnamed_addr #14 {
entry:
  %fneg = fneg fast double %x
  %0 = tail call fast double @llvm.exp.f64(double %fneg)
  %add = fadd fast double %0, 1.000000e+00
  %div = fdiv fast double 1.000000e+00, %add
  ret double %div
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.exp.f64(double) #15

; Function Attrs: nounwind readonly uwtable willreturn mustprogress
define dso_local double @logsumexp(double* nocapture readonly %vect, i32 %sz) local_unnamed_addr #16 {
entry:
  %cmp8 = icmp sgt i32 %sz, 0
  br i1 %cmp8, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %sz to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %sum.09 = phi double [ 0.000000e+00, %for.body.preheader ], [ %add, %for.body ]
  %arrayidx = getelementptr inbounds double, double* %vect, i64 %indvars.iv
  %0 = load double, double* %arrayidx, align 8, !tbaa !61
  %1 = tail call fast double @llvm.exp.f64(double %0)
  %add = fadd fast double %1, %sum.09
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end.loopexit, label %for.body, !llvm.loop !72

for.end.loopexit:                                 ; preds = %for.body
  %phi.bo = fadd fast double %add, 2.000000e+00
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %entry
  %sum.0.lcssa = phi double [ 2.000000e+00, %entry ], [ %phi.bo, %for.end.loopexit ]
  %2 = tail call fast double @llvm.log.f64(double %sum.0.lcssa)
  ret double %2
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.log.f64(double) #15

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @lstm_model(i32 %hsize, double* noalias nocapture readonly %weight, double* noalias nocapture readonly %bias, double* noalias nocapture %hidden, double* noalias nocapture %cell, double* noalias nocapture readonly %input) local_unnamed_addr #6 {
entry:
  %mul = shl nsw i32 %hsize, 2
  %conv = sext i32 %mul to i64
  %mul1 = shl nsw i64 %conv, 3
  %call = tail call noalias i8* @malloc(i64 %mul1) #37
  %0 = bitcast i8* %call to double*
  %idxprom = sext i32 %hsize to i64
  %arrayidx2 = getelementptr inbounds double, double* %0, i64 %idxprom
  %mul3 = shl nsw i32 %hsize, 1
  %idxprom4 = sext i32 %mul3 to i64
  %arrayidx5 = getelementptr inbounds double, double* %0, i64 %idxprom4
  %mul6 = mul nsw i32 %hsize, 3
  %idxprom7 = sext i32 %mul6 to i64
  %arrayidx8 = getelementptr inbounds double, double* %0, i64 %idxprom7
  %cmp171 = icmp sgt i32 %hsize, 0
  br i1 %cmp171, label %for.body.preheader, label %for.end94

for.body.preheader:                               ; preds = %entry
  %wide.trip.count182 = zext i32 %hsize to i64
  br label %for.body

for.cond62.preheader:                             ; preds = %for.body
  br i1 %cmp171, label %for.body64.preheader, label %for.end94

for.body64.preheader:                             ; preds = %for.cond62.preheader
  %wide.trip.count175 = zext i32 %hsize to i64
  br label %for.body64

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv177 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next178, %for.body ]
  %arrayidx10 = getelementptr inbounds double, double* %input, i64 %indvars.iv177
  %1 = load double, double* %arrayidx10, align 8, !tbaa !61
  %arrayidx12 = getelementptr inbounds double, double* %weight, i64 %indvars.iv177
  %2 = load double, double* %arrayidx12, align 8, !tbaa !61
  %mul13 = fmul fast double %2, %1
  %arrayidx15 = getelementptr inbounds double, double* %bias, i64 %indvars.iv177
  %3 = load double, double* %arrayidx15, align 8, !tbaa !61
  %add = fadd fast double %mul13, %3
  %fneg.i = fneg fast double %add
  %4 = tail call fast double @llvm.exp.f64(double %fneg.i) #37
  %add.i = fadd fast double %4, 1.000000e+00
  %div.i = fdiv fast double 1.000000e+00, %add.i
  %arrayidx18 = getelementptr inbounds double, double* %0, i64 %indvars.iv177
  store double %div.i, double* %arrayidx18, align 8, !tbaa !61
  %arrayidx20 = getelementptr inbounds double, double* %hidden, i64 %indvars.iv177
  %5 = load double, double* %arrayidx20, align 8, !tbaa !61
  %6 = add nsw i64 %indvars.iv177, %idxprom
  %arrayidx23 = getelementptr inbounds double, double* %weight, i64 %6
  %7 = load double, double* %arrayidx23, align 8, !tbaa !61
  %mul24 = fmul fast double %7, %5
  %arrayidx27 = getelementptr inbounds double, double* %bias, i64 %6
  %8 = load double, double* %arrayidx27, align 8, !tbaa !61
  %add28 = fadd fast double %mul24, %8
  %fneg.i164 = fneg fast double %add28
  %9 = tail call fast double @llvm.exp.f64(double %fneg.i164) #37
  %add.i165 = fadd fast double %9, 1.000000e+00
  %div.i166 = fdiv fast double 1.000000e+00, %add.i165
  %arrayidx31 = getelementptr inbounds double, double* %arrayidx2, i64 %indvars.iv177
  store double %div.i166, double* %arrayidx31, align 8, !tbaa !61
  %10 = add nsw i64 %indvars.iv177, %idxprom4
  %arrayidx37 = getelementptr inbounds double, double* %weight, i64 %10
  %11 = load double, double* %arrayidx37, align 8, !tbaa !61
  %mul38 = fmul fast double %11, %1
  %arrayidx42 = getelementptr inbounds double, double* %bias, i64 %10
  %12 = load double, double* %arrayidx42, align 8, !tbaa !61
  %add43 = fadd fast double %mul38, %12
  %fneg.i161 = fneg fast double %add43
  %13 = tail call fast double @llvm.exp.f64(double %fneg.i161) #37
  %add.i162 = fadd fast double %13, 1.000000e+00
  %div.i163 = fdiv fast double 1.000000e+00, %add.i162
  %arrayidx46 = getelementptr inbounds double, double* %arrayidx5, i64 %indvars.iv177
  store double %div.i163, double* %arrayidx46, align 8, !tbaa !61
  %14 = add nsw i64 %indvars.iv177, %idxprom7
  %arrayidx52 = getelementptr inbounds double, double* %weight, i64 %14
  %15 = load double, double* %arrayidx52, align 8, !tbaa !61
  %mul53 = fmul fast double %15, %5
  %arrayidx57 = getelementptr inbounds double, double* %bias, i64 %14
  %16 = load double, double* %arrayidx57, align 8, !tbaa !61
  %add58 = fadd fast double %mul53, %16
  %call59 = tail call fast double @tanh(double %add58) #42
  %arrayidx61 = getelementptr inbounds double, double* %arrayidx8, i64 %indvars.iv177
  store double %call59, double* %arrayidx61, align 8, !tbaa !61
  %indvars.iv.next178 = add nuw nsw i64 %indvars.iv177, 1
  %exitcond183.not = icmp eq i64 %indvars.iv.next178, %wide.trip.count182
  br i1 %exitcond183.not, label %for.cond62.preheader, label %for.body, !llvm.loop !73

for.cond81.preheader:                             ; preds = %for.body64
  br i1 %cmp171, label %for.body83.preheader, label %for.end94

for.body83.preheader:                             ; preds = %for.cond81.preheader
  %wide.trip.count = zext i32 %hsize to i64
  br label %for.body83

for.body64:                                       ; preds = %for.body64, %for.body64.preheader
  %indvars.iv173 = phi i64 [ 0, %for.body64.preheader ], [ %indvars.iv.next174, %for.body64 ]
  %arrayidx66 = getelementptr inbounds double, double* %cell, i64 %indvars.iv173
  %17 = load double, double* %arrayidx66, align 8, !tbaa !61
  %arrayidx68 = getelementptr inbounds double, double* %0, i64 %indvars.iv173
  %18 = load double, double* %arrayidx68, align 8, !tbaa !61
  %mul69 = fmul fast double %18, %17
  %arrayidx71 = getelementptr inbounds double, double* %arrayidx2, i64 %indvars.iv173
  %19 = load double, double* %arrayidx71, align 8, !tbaa !61
  %arrayidx73 = getelementptr inbounds double, double* %arrayidx8, i64 %indvars.iv173
  %20 = load double, double* %arrayidx73, align 8, !tbaa !61
  %mul74 = fmul fast double %20, %19
  %add75 = fadd fast double %mul74, %mul69
  store double %add75, double* %arrayidx66, align 8, !tbaa !61
  %indvars.iv.next174 = add nuw nsw i64 %indvars.iv173, 1
  %exitcond176.not = icmp eq i64 %indvars.iv.next174, %wide.trip.count175
  br i1 %exitcond176.not, label %for.cond81.preheader, label %for.body64, !llvm.loop !74

for.body83:                                       ; preds = %for.body83, %for.body83.preheader
  %indvars.iv = phi i64 [ 0, %for.body83.preheader ], [ %indvars.iv.next, %for.body83 ]
  %arrayidx85 = getelementptr inbounds double, double* %arrayidx5, i64 %indvars.iv
  %21 = load double, double* %arrayidx85, align 8, !tbaa !61
  %arrayidx87 = getelementptr inbounds double, double* %cell, i64 %indvars.iv
  %22 = load double, double* %arrayidx87, align 8, !tbaa !61
  %call88 = tail call fast double @tanh(double %22) #42
  %mul89 = fmul fast double %call88, %21
  %arrayidx91 = getelementptr inbounds double, double* %hidden, i64 %indvars.iv
  store double %mul89, double* %arrayidx91, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end94, label %for.body83, !llvm.loop !75

for.end94:                                        ; preds = %for.body83, %for.cond81.preheader, %for.cond62.preheader, %entry
  tail call void @free(i8* %call) #37
  ret void
}

; Function Attrs: inaccessiblememonly nofree nounwind willreturn
declare dso_local noalias noundef i8* @malloc(i64) local_unnamed_addr #17

; Function Attrs: nofree nounwind readnone willreturn
declare dso_local double @tanh(double) local_unnamed_addr #18

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare dso_local void @free(i8* nocapture noundef) local_unnamed_addr #19

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @lstm_predict(i32 %l, i32 %b, double* noalias nocapture readonly %w, double* noalias nocapture readonly %w2, double* noalias nocapture %s, double* noalias nocapture readonly %x, double* noalias nocapture %x2) local_unnamed_addr #6 {
entry:
  %cmp86 = icmp sgt i32 %b, 0
  br i1 %cmp86, label %for.body.preheader, label %for.cond5.preheader

for.body.preheader:                               ; preds = %entry
  %wide.trip.count95 = zext i32 %b to i64
  br label %for.body

for.cond5.preheader:                              ; preds = %for.body, %entry
  %mul6 = shl nsw i32 %l, 1
  %mul7 = mul nsw i32 %mul6, %b
  %cmp8.not.not83 = icmp sgt i32 %mul7, 0
  br i1 %cmp8.not.not83, label %for.body9.lr.ph, label %for.cond27.preheader

for.body9.lr.ph:                                  ; preds = %for.cond5.preheader
  %0 = shl i32 %b, 1
  %1 = sext i32 %0 to i64
  %2 = sext i32 %b to i64
  %3 = zext i32 %mul7 to i64
  br label %for.body9

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv93 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next94, %for.body ]
  %arrayidx = getelementptr inbounds double, double* %x, i64 %indvars.iv93
  %4 = load double, double* %arrayidx, align 8, !tbaa !61
  %arrayidx2 = getelementptr inbounds double, double* %w2, i64 %indvars.iv93
  %5 = load double, double* %arrayidx2, align 8, !tbaa !61
  %mul = fmul fast double %5, %4
  %arrayidx4 = getelementptr inbounds double, double* %x2, i64 %indvars.iv93
  store double %mul, double* %arrayidx4, align 8, !tbaa !61
  %indvars.iv.next94 = add nuw nsw i64 %indvars.iv93, 1
  %exitcond96.not = icmp eq i64 %indvars.iv.next94, %wide.trip.count95
  br i1 %exitcond96.not, label %for.cond5.preheader, label %for.body, !llvm.loop !76

for.cond27.preheader:                             ; preds = %for.body9, %for.cond5.preheader
  %xp.0.lcssa = phi double* [ %x2, %for.cond5.preheader ], [ %arrayidx17, %for.body9 ]
  br i1 %cmp86, label %for.body29.lr.ph, label %for.end45

for.body29.lr.ph:                                 ; preds = %for.cond27.preheader
  %mul36 = shl nuw nsw i32 %b, 1
  %6 = zext i32 %b to i64
  %7 = sext i32 %mul36 to i64
  %wide.trip.count = zext i32 %b to i64
  br label %for.body29

for.body9:                                        ; preds = %for.body9, %for.body9.lr.ph
  %indvars.iv90 = phi i64 [ 0, %for.body9.lr.ph ], [ %indvars.iv.next91, %for.body9 ]
  %xp.085 = phi double* [ %x2, %for.body9.lr.ph ], [ %arrayidx17, %for.body9 ]
  %8 = trunc i64 %indvars.iv90 to i32
  %mul10 = shl nsw i32 %8, 2
  %idxprom11 = sext i32 %mul10 to i64
  %arrayidx12 = getelementptr inbounds double, double* %w, i64 %idxprom11
  %9 = add nsw i64 %indvars.iv90, %2
  %10 = trunc i64 %9 to i32
  %mul13 = shl nsw i32 %10, 2
  %idxprom14 = sext i32 %mul13 to i64
  %arrayidx15 = getelementptr inbounds double, double* %w, i64 %idxprom14
  %arrayidx17 = getelementptr inbounds double, double* %s, i64 %indvars.iv90
  %arrayidx20 = getelementptr inbounds double, double* %s, i64 %9
  tail call void @lstm_model(i32 %b, double* %arrayidx12, double* %arrayidx15, double* %arrayidx17, double* %arrayidx20, double* %xp.085)
  %indvars.iv.next91 = add i64 %indvars.iv90, %1
  %cmp8.not.not = icmp slt i64 %indvars.iv.next91, %3
  br i1 %cmp8.not.not, label %for.body9, label %for.cond27.preheader, !llvm.loop !77

for.body29:                                       ; preds = %for.body29, %for.body29.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body29.lr.ph ], [ %indvars.iv.next, %for.body29 ]
  %arrayidx31 = getelementptr inbounds double, double* %xp.0.lcssa, i64 %indvars.iv
  %11 = load double, double* %arrayidx31, align 8, !tbaa !61
  %12 = add nuw nsw i64 %indvars.iv, %6
  %arrayidx34 = getelementptr inbounds double, double* %w2, i64 %12
  %13 = load double, double* %arrayidx34, align 8, !tbaa !61
  %mul35 = fmul fast double %13, %11
  %14 = add nsw i64 %indvars.iv, %7
  %arrayidx39 = getelementptr inbounds double, double* %w2, i64 %14
  %15 = load double, double* %arrayidx39, align 8, !tbaa !61
  %add40 = fadd fast double %mul35, %15
  %arrayidx42 = getelementptr inbounds double, double* %x2, i64 %indvars.iv
  store double %add40, double* %arrayidx42, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end45, label %for.body29, !llvm.loop !78

for.end45:                                        ; preds = %for.body29, %for.cond27.preheader
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @lstm_objective(i32 %l, i32 %c, i32 %b, double* noalias nocapture readonly %main_params, double* noalias nocapture readonly %extra_params, double* noalias nocapture %state, double* noalias nocapture readonly %sequence, double* noalias nocapture %loss) #6 {
entry:
  %conv = zext i32 %b to i64
  %mul = shl nuw nsw i64 %conv, 3
  %call = tail call noalias i8* @malloc(i64 %mul) #37
  %0 = bitcast i8* %call to double*
  %call3 = tail call noalias i8* @malloc(i64 %mul) #37
  %1 = bitcast i8* %call3 to double*
  %cmp = icmp sgt i32 %b, 0
  tail call void @llvm.assume(i1 %cmp)
  %sub = add nsw i32 %c, -1
  %mul4 = mul nsw i32 %sub, %b
  %cmp6.not.not83 = icmp sgt i32 %mul4, 0
  br i1 %cmp6.not.not83, label %for.body.preheader.i.lr.ph, label %for.end32

for.body.preheader.i.lr.ph:                       ; preds = %entry
  %mul6.i = shl nsw i32 %l, 1
  %mul7.i = mul nsw i32 %mul6.i, %b
  %cmp8.not.not83.i = icmp sgt i32 %mul7.i, 0
  %2 = shl nuw i32 %b, 1
  %3 = sext i32 %2 to i64
  %4 = zext i32 %mul7.i to i64
  %5 = zext i32 %2 to i64
  br label %for.body.preheader.i

for.body.preheader.i:                             ; preds = %for.end28, %for.body.preheader.i.lr.ph
  %indvars.iv94 = phi i64 [ 0, %for.body.preheader.i.lr.ph ], [ %indvars.iv.next95, %for.end28 ]
  %t.087 = phi i32 [ 0, %for.body.preheader.i.lr.ph ], [ %add, %for.end28 ]
  %total.086 = phi double [ 0.000000e+00, %for.body.preheader.i.lr.ph ], [ %add25, %for.end28 ]
  %input.084 = phi double* [ %sequence, %for.body.preheader.i.lr.ph ], [ %arrayidx16, %for.end28 ]
  tail call void @llvm.experimental.noalias.scope.decl(metadata !79)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !82)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !84)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !86)
  br label %for.body.i

for.cond5.preheader.i:                            ; preds = %for.body.i
  br i1 %cmp8.not.not83.i, label %for.body9.i, label %for.body29.lr.ph.i

for.body.i:                                       ; preds = %for.body.i, %for.body.preheader.i
  %indvars.iv93.i = phi i64 [ 0, %for.body.preheader.i ], [ %indvars.iv.next94.i, %for.body.i ]
  %arrayidx.i = getelementptr inbounds double, double* %input.084, i64 %indvars.iv93.i
  %6 = load double, double* %arrayidx.i, align 8, !tbaa !61, !alias.scope !84, !noalias !88
  %arrayidx2.i = getelementptr inbounds double, double* %extra_params, i64 %indvars.iv93.i
  %7 = load double, double* %arrayidx2.i, align 8, !tbaa !61, !alias.scope !79, !noalias !90
  %mul.i = fmul fast double %7, %6
  %arrayidx4.i = getelementptr inbounds double, double* %0, i64 %indvars.iv93.i
  store double %mul.i, double* %arrayidx4.i, align 8, !tbaa !61, !alias.scope !86, !noalias !91
  %indvars.iv.next94.i = add nuw nsw i64 %indvars.iv93.i, 1
  %exitcond96.not.i = icmp eq i64 %indvars.iv.next94.i, %conv
  br i1 %exitcond96.not.i, label %for.cond5.preheader.i, label %for.body.i, !llvm.loop !76

for.body29.lr.ph.i:                               ; preds = %for.body9.i, %for.cond5.preheader.i
  %xp.0.lcssa.i = phi double* [ %0, %for.cond5.preheader.i ], [ %arrayidx17.i, %for.body9.i ]
  br label %for.body29.i

for.body9.i:                                      ; preds = %for.body9.i, %for.cond5.preheader.i
  %indvars.iv90.i = phi i64 [ %indvars.iv.next91.i, %for.body9.i ], [ 0, %for.cond5.preheader.i ]
  %xp.085.i = phi double* [ %arrayidx17.i, %for.body9.i ], [ %0, %for.cond5.preheader.i ]
  %8 = trunc i64 %indvars.iv90.i to i32
  %mul10.i = shl nsw i32 %8, 2
  %idxprom11.i = sext i32 %mul10.i to i64
  %arrayidx12.i = getelementptr inbounds double, double* %main_params, i64 %idxprom11.i
  %9 = add nsw i64 %indvars.iv90.i, %conv
  %10 = trunc i64 %9 to i32
  %mul13.i = shl nsw i32 %10, 2
  %idxprom14.i = sext i32 %mul13.i to i64
  %arrayidx15.i = getelementptr inbounds double, double* %main_params, i64 %idxprom14.i
  %arrayidx17.i = getelementptr inbounds double, double* %state, i64 %indvars.iv90.i
  %arrayidx20.i = getelementptr inbounds double, double* %state, i64 %9
  tail call void @lstm_model(i32 %b, double* %arrayidx12.i, double* %arrayidx15.i, double* %arrayidx17.i, double* %arrayidx20.i, double* %xp.085.i) #37, !noalias !92
  %indvars.iv.next91.i = add i64 %indvars.iv90.i, %3
  %cmp8.not.not.i = icmp slt i64 %indvars.iv.next91.i, %4
  br i1 %cmp8.not.not.i, label %for.body9.i, label %for.body29.lr.ph.i, !llvm.loop !77

for.body29.i:                                     ; preds = %for.body29.i, %for.body29.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body29.lr.ph.i ], [ %indvars.iv.next.i, %for.body29.i ]
  %arrayidx31.i = getelementptr inbounds double, double* %xp.0.lcssa.i, i64 %indvars.iv.i
  %11 = load double, double* %arrayidx31.i, align 8, !tbaa !61, !alias.scope !93, !noalias !94
  %12 = add nuw nsw i64 %indvars.iv.i, %conv
  %arrayidx34.i = getelementptr inbounds double, double* %extra_params, i64 %12
  %13 = load double, double* %arrayidx34.i, align 8, !tbaa !61, !alias.scope !79, !noalias !90
  %mul35.i = fmul fast double %13, %11
  %14 = add nuw nsw i64 %indvars.iv.i, %5
  %arrayidx39.i = getelementptr inbounds double, double* %extra_params, i64 %14
  %15 = load double, double* %arrayidx39.i, align 8, !tbaa !61, !alias.scope !79, !noalias !90
  %add40.i = fadd fast double %mul35.i, %15
  %arrayidx42.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i
  store double %add40.i, double* %arrayidx42.i, align 8, !tbaa !61, !alias.scope !86, !noalias !91
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %conv
  br i1 %exitcond.not.i, label %for.body.i77, label %for.body29.i, !llvm.loop !78

for.body.i77:                                     ; preds = %for.body.i77, %for.body29.i
  %indvars.iv.i73 = phi i64 [ %indvars.iv.next.i75, %for.body.i77 ], [ 0, %for.body29.i ]
  %sum.09.i = phi double [ %add.i, %for.body.i77 ], [ 0.000000e+00, %for.body29.i ]
  %arrayidx.i74 = getelementptr inbounds double, double* %0, i64 %indvars.iv.i73
  %16 = load double, double* %arrayidx.i74, align 8, !tbaa !61
  %17 = tail call fast double @llvm.exp.f64(double %16) #37
  %add.i = fadd fast double %17, %sum.09.i
  %indvars.iv.next.i75 = add nuw nsw i64 %indvars.iv.i73, 1
  %exitcond.not.i76 = icmp eq i64 %indvars.iv.next.i75, %conv
  br i1 %exitcond.not.i76, label %for.body10.preheader, label %for.body.i77, !llvm.loop !72

for.body10.preheader:                             ; preds = %for.body.i77
  %phi.bo.i = fadd fast double %add.i, 2.000000e+00
  %18 = tail call fast double @llvm.log.f64(double %phi.bo.i) #37
  br label %for.body10

for.body10:                                       ; preds = %for.body10, %for.body10.preheader
  %indvars.iv = phi i64 [ 0, %for.body10.preheader ], [ %indvars.iv.next, %for.body10 ]
  %arrayidx11 = getelementptr inbounds double, double* %0, i64 %indvars.iv
  %19 = load double, double* %arrayidx11, align 8, !tbaa !61
  %sub12 = fsub fast double %19, %18
  %arrayidx14 = getelementptr inbounds double, double* %1, i64 %indvars.iv
  store double %sub12, double* %arrayidx14, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %conv
  br i1 %exitcond.not, label %for.body19.preheader, label %for.body10, !llvm.loop !95

for.body19.preheader:                             ; preds = %for.body10
  %indvars.iv.next95 = add i64 %indvars.iv94, %conv
  %add = add nuw nsw i32 %t.087, %b
  %arrayidx16 = getelementptr inbounds double, double* %sequence, i64 %indvars.iv.next95
  br label %for.body19

for.body19:                                       ; preds = %for.body19, %for.body19.preheader
  %indvars.iv90 = phi i64 [ 0, %for.body19.preheader ], [ %indvars.iv.next91, %for.body19 ]
  %total.181 = phi double [ %total.086, %for.body19.preheader ], [ %add25, %for.body19 ]
  %arrayidx21 = getelementptr inbounds double, double* %arrayidx16, i64 %indvars.iv90
  %20 = load double, double* %arrayidx21, align 8, !tbaa !61
  %arrayidx23 = getelementptr inbounds double, double* %1, i64 %indvars.iv90
  %21 = load double, double* %arrayidx23, align 8, !tbaa !61
  %mul24 = fmul fast double %21, %20
  %add25 = fadd fast double %mul24, %total.181
  %indvars.iv.next91 = add nuw nsw i64 %indvars.iv90, 1
  %exitcond93.not = icmp eq i64 %indvars.iv.next91, %conv
  br i1 %exitcond93.not, label %for.end28, label %for.body19, !llvm.loop !96

for.end28:                                        ; preds = %for.body19
  %22 = trunc i64 %indvars.iv.next95 to i32
  %cmp6.not.not = icmp sgt i32 %mul4, %22
  br i1 %cmp6.not.not, label %for.body.preheader.i, label %for.end32.loopexit, !llvm.loop !97

for.end32.loopexit:                               ; preds = %for.end28
  %phi.cast = sitofp i32 %add to double
  br label %for.end32

for.end32:                                        ; preds = %for.end32.loopexit, %entry
  %count.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %phi.cast, %for.end32.loopexit ]
  %total.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add25, %for.end32.loopexit ]
  %fneg = fneg fast double %total.0.lcssa
  %div = fdiv fast double %fneg, %count.0.lcssa
  store double %div, double* %loss, align 8, !tbaa !61
  tail call void @free(i8* %call) #37
  tail call void @free(i8* %call3) #37
  ret void
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #20

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @dlstm_objective(i32 %l, i32 %c, i32 %b, double* %main_params, double* %dmain_params, double* %extra_params, double* %dextra_params, double* %state, double* %sequence, double* %loss, double* %dloss) local_unnamed_addr #6 {
entry:
  %0 = load i32, i32* @enzyme_const, align 4, !tbaa !47
  %1 = load i32, i32* @enzyme_dup, align 4, !tbaa !47
  %2 = load i32, i32* @enzyme_dupnoneed, align 4, !tbaa !47
  call void @diffelstm_objective(i32 %l, i32 %c, i32 %b, double* %main_params, double* %dmain_params, double* %extra_params, double* %dextra_params, double* %state, double* %sequence, double* %loss, double* %dloss)
  ret void
}

; Function Attrs: nounwind
declare dso_local void @__enzyme_autodiff(...) local_unnamed_addr #7

; Function Attrs: nofree nounwind uwtable willreturn writeonly mustprogress
define dso_local void @sigmoid_b(double %x, double* nocapture %xb, double %sigmoidb) local_unnamed_addr #21 {
entry:
  %fneg = fneg fast double %x
  %0 = tail call fast double @llvm.exp.f64(double %fneg)
  %add = fadd fast double %0, 1.000000e+00
  %mul = fmul fast double %0, %sigmoidb
  %mul2 = fmul fast double %add, %add
  %div = fdiv fast double %mul, %mul2
  store double %div, double* %xb, align 8, !tbaa !61
  ret void
}

; Function Attrs: nounwind readnone uwtable willreturn mustprogress
define dso_local double @sigmoid_nodiff(double %x) local_unnamed_addr #14 {
entry:
  %fneg = fneg fast double %x
  %0 = tail call fast double @llvm.exp.f64(double %fneg)
  %add = fadd fast double %0, 1.000000e+00
  %div = fdiv fast double 1.000000e+00, %add
  ret double %div
}

; Function Attrs: nofree nounwind uwtable mustprogress
define dso_local void @logsumexp_b(double* nocapture readonly %vect, double* nocapture %vectb, i32 %sz, double %logsumexpb) local_unnamed_addr #22 {
entry:
  %cmp33 = icmp sgt i32 %sz, 0
  br i1 %cmp33, label %for.body.preheader, label %for.end13

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %sz to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv36 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next37, %for.body ]
  %sum.035 = phi double [ 0.000000e+00, %for.body.preheader ], [ %add, %for.body ]
  %arrayidx = getelementptr inbounds double, double* %vect, i64 %indvars.iv36
  %0 = load double, double* %arrayidx, align 8, !tbaa !61
  %1 = tail call fast double @llvm.exp.f64(double %0)
  %add = fadd fast double %1, %sum.035
  %indvars.iv.next37 = add nuw nsw i64 %indvars.iv36, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next37, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !98

for.end:                                          ; preds = %for.body
  br i1 %cmp33, label %for.body4.lr.ph, label %for.end13

for.body4.lr.ph:                                  ; preds = %for.end
  %phi.bo = fadd fast double %add, 2.000000e+00
  %2 = zext i32 %sz to i64
  br label %for.body4

for.body4:                                        ; preds = %for.body4, %for.body4.lr.ph
  %indvars.iv = phi i64 [ %2, %for.body4.lr.ph ], [ %indvars.iv.next, %for.body4 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx6 = getelementptr inbounds double, double* %vectb, i64 %indvars.iv.next
  %3 = load double, double* %arrayidx6, align 8, !tbaa !61
  %arrayidx8 = getelementptr inbounds double, double* %vect, i64 %indvars.iv.next
  %4 = load double, double* %arrayidx8, align 8, !tbaa !61
  %5 = tail call fast double @llvm.exp.f64(double %4)
  %6 = fmul fast double %5, %logsumexpb
  %7 = fdiv fast double %6, %phi.bo
  %add9 = fadd fast double %7, %3
  store double %add9, double* %arrayidx6, align 8, !tbaa !61
  %cmp3 = icmp sgt i64 %indvars.iv, 1
  br i1 %cmp3, label %for.body4, label %for.end13, !llvm.loop !99

for.end13:                                        ; preds = %for.body4, %for.end, %entry
  ret void
}

; Function Attrs: nounwind readonly uwtable willreturn mustprogress
define dso_local double @logsumexp_nodiff(double* nocapture readonly %vect, i32 %sz) local_unnamed_addr #16 {
entry:
  %cmp8 = icmp sgt i32 %sz, 0
  br i1 %cmp8, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %sz to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %sum.09 = phi double [ 0.000000e+00, %for.body.preheader ], [ %add, %for.body ]
  %arrayidx = getelementptr inbounds double, double* %vect, i64 %indvars.iv
  %0 = load double, double* %arrayidx, align 8, !tbaa !61
  %1 = tail call fast double @llvm.exp.f64(double %0)
  %add = fadd fast double %1, %sum.09
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end.loopexit, label %for.body, !llvm.loop !100

for.end.loopexit:                                 ; preds = %for.body
  %phi.bo = fadd fast double %add, 2.000000e+00
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %entry
  %sum.0.lcssa = phi double [ 2.000000e+00, %entry ], [ %phi.bo, %for.end.loopexit ]
  %2 = tail call fast double @llvm.log.f64(double %sum.0.lcssa)
  ret double %2
}

; Function Attrs: uwtable mustprogress
define dso_local void @lstm_model_b(i32 %hsize, double* nocapture readonly %weight, double* nocapture %weightb, double* nocapture readonly %bias, double* nocapture %biasb, double* nocapture readonly %hidden, double* nocapture %hiddenb, double* %cell, double* nocapture %cellb, double* nocapture readonly %input, double* nocapture %inputb) local_unnamed_addr #10 {
entry:
  %mul = shl i32 %hsize, 2
  %conv = sext i32 %mul to i64
  %mul1 = shl nsw i64 %conv, 3
  %call = tail call noalias i8* @malloc(i64 %mul1) #37
  %0 = bitcast i8* %call to double*
  %cmp679 = icmp sgt i32 %hsize, 0
  br i1 %cmp679, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %1 = icmp sgt i32 %mul, 1
  %smax = select i1 %1, i32 %mul, i32 1
  %2 = zext i32 %smax to i64
  %3 = shl nuw nsw i64 %2, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %call, i8 0, i64 %3, i1 false)
  br label %for.end

for.end:                                          ; preds = %for.body.preheader, %entry
  %call6 = tail call noalias i8* @malloc(i64 %mul1) #37
  %4 = bitcast i8* %call6 to double*
  %idxprom9 = sext i32 %hsize to i64
  %arrayidx10 = getelementptr inbounds double, double* %4, i64 %idxprom9
  %arrayidx12 = getelementptr inbounds double, double* %0, i64 %idxprom9
  %mul13 = shl nsw i32 %hsize, 1
  %idxprom14 = sext i32 %mul13 to i64
  %arrayidx15 = getelementptr inbounds double, double* %4, i64 %idxprom14
  %arrayidx18 = getelementptr inbounds double, double* %0, i64 %idxprom14
  %mul19 = mul nsw i32 %hsize, 3
  %idxprom20 = sext i32 %mul19 to i64
  %arrayidx21 = getelementptr inbounds double, double* %4, i64 %idxprom20
  %arrayidx24 = getelementptr inbounds double, double* %0, i64 %idxprom20
  br i1 %cmp679, label %for.body27.preheader, label %for.end370

for.body27.preheader:                             ; preds = %for.end
  %wide.trip.count693 = zext i32 %hsize to i64
  br label %for.body27

for.cond84.preheader:                             ; preds = %for.body27
  br i1 %cmp679, label %for.body86.preheader, label %for.end370

for.body86.preheader:                             ; preds = %for.cond84.preheader
  %wide.trip.count = zext i32 %hsize to i64
  br label %for.body86

for.body27:                                       ; preds = %for.body27, %for.body27.preheader
  %indvars.iv688 = phi i64 [ 0, %for.body27.preheader ], [ %indvars.iv.next689, %for.body27 ]
  %arrayidx29 = getelementptr inbounds double, double* %input, i64 %indvars.iv688
  %5 = load double, double* %arrayidx29, align 8, !tbaa !61
  %arrayidx31 = getelementptr inbounds double, double* %weight, i64 %indvars.iv688
  %6 = load double, double* %arrayidx31, align 8, !tbaa !61
  %mul32 = fmul fast double %6, %5
  %arrayidx34 = getelementptr inbounds double, double* %bias, i64 %indvars.iv688
  %7 = load double, double* %arrayidx34, align 8, !tbaa !61
  %add = fadd fast double %mul32, %7
  %fneg.i = fneg fast double %add
  %8 = tail call fast double @llvm.exp.f64(double %fneg.i) #37
  %add.i = fadd fast double %8, 1.000000e+00
  %div.i = fdiv fast double 1.000000e+00, %add.i
  %arrayidx37 = getelementptr inbounds double, double* %4, i64 %indvars.iv688
  store double %div.i, double* %arrayidx37, align 8, !tbaa !61
  %arrayidx39 = getelementptr inbounds double, double* %hidden, i64 %indvars.iv688
  %9 = load double, double* %arrayidx39, align 8, !tbaa !61
  %10 = add nsw i64 %indvars.iv688, %idxprom9
  %arrayidx42 = getelementptr inbounds double, double* %weight, i64 %10
  %11 = load double, double* %arrayidx42, align 8, !tbaa !61
  %mul43 = fmul fast double %11, %9
  %arrayidx46 = getelementptr inbounds double, double* %bias, i64 %10
  %12 = load double, double* %arrayidx46, align 8, !tbaa !61
  %add47 = fadd fast double %mul43, %12
  %fneg.i657 = fneg fast double %add47
  %13 = tail call fast double @llvm.exp.f64(double %fneg.i657) #37
  %add.i658 = fadd fast double %13, 1.000000e+00
  %div.i659 = fdiv fast double 1.000000e+00, %add.i658
  %arrayidx50 = getelementptr inbounds double, double* %arrayidx10, i64 %indvars.iv688
  store double %div.i659, double* %arrayidx50, align 8, !tbaa !61
  %14 = add nsw i64 %indvars.iv688, %idxprom14
  %arrayidx56 = getelementptr inbounds double, double* %weight, i64 %14
  %15 = load double, double* %arrayidx56, align 8, !tbaa !61
  %mul57 = fmul fast double %15, %5
  %arrayidx61 = getelementptr inbounds double, double* %bias, i64 %14
  %16 = load double, double* %arrayidx61, align 8, !tbaa !61
  %add62 = fadd fast double %mul57, %16
  %fneg.i654 = fneg fast double %add62
  %17 = tail call fast double @llvm.exp.f64(double %fneg.i654) #37
  %add.i655 = fadd fast double %17, 1.000000e+00
  %div.i656 = fdiv fast double 1.000000e+00, %add.i655
  %arrayidx65 = getelementptr inbounds double, double* %arrayidx15, i64 %indvars.iv688
  store double %div.i656, double* %arrayidx65, align 8, !tbaa !61
  %18 = add nsw i64 %indvars.iv688, %idxprom20
  %arrayidx71 = getelementptr inbounds double, double* %weight, i64 %18
  %19 = load double, double* %arrayidx71, align 8, !tbaa !61
  %mul72 = fmul fast double %19, %9
  %arrayidx76 = getelementptr inbounds double, double* %bias, i64 %18
  %20 = load double, double* %arrayidx76, align 8, !tbaa !61
  %add77 = fadd fast double %mul72, %20
  %call78 = tail call fast double @tanh(double %add77) #42
  %arrayidx80 = getelementptr inbounds double, double* %arrayidx21, i64 %indvars.iv688
  store double %call78, double* %arrayidx80, align 8, !tbaa !61
  %indvars.iv.next689 = add nuw nsw i64 %indvars.iv688, 1
  %exitcond694.not = icmp eq i64 %indvars.iv.next689, %wide.trip.count693
  br i1 %exitcond694.not, label %for.cond84.preheader, label %for.body27, !llvm.loop !101

for.body86:                                       ; preds = %for.body86, %for.body86.preheader
  %indvars.iv686 = phi i64 [ 0, %for.body86.preheader ], [ %indvars.iv.next687, %for.body86 ]
  %arrayidx88 = getelementptr inbounds double, double* %cell, i64 %indvars.iv686
  %21 = load double, double* %arrayidx88, align 8, !tbaa !61
  tail call void @pushReal8(double %21)
  %22 = load double, double* %arrayidx88, align 8, !tbaa !61
  %arrayidx92 = getelementptr inbounds double, double* %4, i64 %indvars.iv686
  %23 = load double, double* %arrayidx92, align 8, !tbaa !61
  %mul93 = fmul fast double %23, %22
  %arrayidx95 = getelementptr inbounds double, double* %arrayidx10, i64 %indvars.iv686
  %24 = load double, double* %arrayidx95, align 8, !tbaa !61
  %arrayidx97 = getelementptr inbounds double, double* %arrayidx21, i64 %indvars.iv686
  %25 = load double, double* %arrayidx97, align 8, !tbaa !61
  %mul98 = fmul fast double %25, %24
  %add99 = fadd fast double %mul98, %mul93
  store double %add99, double* %arrayidx88, align 8, !tbaa !61
  %indvars.iv.next687 = add nuw nsw i64 %indvars.iv686, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next687, %wide.trip.count
  br i1 %exitcond.not, label %for.end104, label %for.body86, !llvm.loop !102

for.end104:                                       ; preds = %for.body86
  %sub = add i32 %hsize, -1
  br i1 %cmp679, label %for.body107.preheader, label %for.end370

for.body107.preheader:                            ; preds = %for.end104
  %26 = zext i32 %sub to i64
  br label %for.body107

for.cond143.preheader:                            ; preds = %for.body107
  br i1 %cmp679, label %for.body145.preheader, label %for.end370

for.body145.preheader:                            ; preds = %for.cond143.preheader
  %27 = zext i32 %sub to i64
  br label %for.body145

for.body107:                                      ; preds = %for.body107, %for.body107.preheader
  %indvars.iv684 = phi i64 [ %26, %for.body107.preheader ], [ %indvars.iv.next685, %for.body107 ]
  %arrayidx109 = getelementptr inbounds double, double* %arrayidx18, i64 %indvars.iv684
  %28 = load double, double* %arrayidx109, align 8, !tbaa !61
  %arrayidx111 = getelementptr inbounds double, double* %cell, i64 %indvars.iv684
  %29 = load double, double* %arrayidx111, align 8, !tbaa !61
  %call112 = tail call fast double @tanh(double %29) #42
  %arrayidx114 = getelementptr inbounds double, double* %hiddenb, i64 %indvars.iv684
  %30 = load double, double* %arrayidx114, align 8, !tbaa !61
  %mul115 = fmul fast double %30, %call112
  %add116 = fadd fast double %mul115, %28
  store double %add116, double* %arrayidx109, align 8, !tbaa !61
  %arrayidx120 = getelementptr inbounds double, double* %cellb, i64 %indvars.iv684
  %31 = load double, double* %arrayidx120, align 8, !tbaa !61
  %arrayidx122 = getelementptr inbounds double, double* %arrayidx15, i64 %indvars.iv684
  %32 = load double, double* %arrayidx122, align 8, !tbaa !61
  %mul129 = fmul fast double %call112, %call112
  %sub130 = fsub fast double 1.000000e+00, %mul129
  %mul131 = fmul fast double %sub130, %30
  %mul134 = fmul fast double %mul131, %32
  %add135 = fadd fast double %mul134, %31
  store double %add135, double* %arrayidx120, align 8, !tbaa !61
  store double 0.000000e+00, double* %arrayidx114, align 8, !tbaa !61
  %cmp106 = icmp sgt i64 %indvars.iv684, 0
  %indvars.iv.next685 = add nsw i64 %indvars.iv684, -1
  br i1 %cmp106, label %for.body107, label %for.cond143.preheader, !llvm.loop !103

for.cond189.preheader:                            ; preds = %for.body145
  br i1 %cmp679, label %for.body191.preheader, label %for.end370

for.body191.preheader:                            ; preds = %for.cond189.preheader
  %33 = zext i32 %sub to i64
  br label %for.body191

for.body145:                                      ; preds = %for.body145, %for.body145.preheader
  %indvars.iv681 = phi i64 [ %27, %for.body145.preheader ], [ %indvars.iv.next682, %for.body145 ]
  %arrayidx147 = getelementptr inbounds double, double* %cell, i64 %indvars.iv681
  tail call void @popReal8(double* %arrayidx147)
  %arrayidx149 = getelementptr inbounds double, double* %0, i64 %indvars.iv681
  %34 = load double, double* %arrayidx149, align 8, !tbaa !61
  %35 = load double, double* %arrayidx147, align 8, !tbaa !61
  %arrayidx153 = getelementptr inbounds double, double* %cellb, i64 %indvars.iv681
  %36 = load double, double* %arrayidx153, align 8, !tbaa !61
  %mul154 = fmul fast double %36, %35
  %add155 = fadd fast double %mul154, %34
  store double %add155, double* %arrayidx149, align 8, !tbaa !61
  %arrayidx159 = getelementptr inbounds double, double* %arrayidx12, i64 %indvars.iv681
  %37 = load double, double* %arrayidx159, align 8, !tbaa !61
  %arrayidx161 = getelementptr inbounds double, double* %arrayidx21, i64 %indvars.iv681
  %38 = load double, double* %arrayidx161, align 8, !tbaa !61
  %mul164 = fmul fast double %38, %36
  %add165 = fadd fast double %mul164, %37
  store double %add165, double* %arrayidx159, align 8, !tbaa !61
  %arrayidx169 = getelementptr inbounds double, double* %arrayidx24, i64 %indvars.iv681
  %39 = load double, double* %arrayidx169, align 8, !tbaa !61
  %arrayidx171 = getelementptr inbounds double, double* %arrayidx10, i64 %indvars.iv681
  %40 = load double, double* %arrayidx171, align 8, !tbaa !61
  %mul174 = fmul fast double %40, %36
  %add175 = fadd fast double %mul174, %39
  store double %add175, double* %arrayidx169, align 8, !tbaa !61
  %arrayidx179 = getelementptr inbounds double, double* %4, i64 %indvars.iv681
  %41 = load double, double* %arrayidx179, align 8, !tbaa !61
  %mul182 = fmul fast double %41, %36
  store double %mul182, double* %arrayidx153, align 8, !tbaa !61
  %cmp144 = icmp sgt i64 %indvars.iv681, 0
  %indvars.iv.next682 = add nsw i64 %indvars.iv681, -1
  br i1 %cmp144, label %for.body145, label %for.cond189.preheader, !llvm.loop !104

for.body191:                                      ; preds = %for.body191, %for.body191.preheader
  %indvars.iv = phi i64 [ %33, %for.body191.preheader ], [ %indvars.iv.next, %for.body191 ]
  %i.4670 = phi i32 [ %sub, %for.body191.preheader ], [ %dec369, %for.body191 ]
  %add193 = add nsw i32 %i.4670, %mul19
  %idxprom194 = sext i32 %add193 to i64
  %arrayidx195 = getelementptr inbounds double, double* %weight, i64 %idxprom194
  %42 = load double, double* %arrayidx195, align 8, !tbaa !61
  %arrayidx197 = getelementptr inbounds double, double* %hidden, i64 %indvars.iv
  %43 = load double, double* %arrayidx197, align 8, !tbaa !61
  %mul198 = fmul fast double %43, %42
  %arrayidx202 = getelementptr inbounds double, double* %bias, i64 %idxprom194
  %44 = load double, double* %arrayidx202, align 8, !tbaa !61
  %add203 = fadd fast double %mul198, %44
  %call204 = tail call fast double @tanh(double %add203) #42
  %mul214 = fmul fast double %call204, %call204
  %sub215 = fsub fast double 1.000000e+00, %mul214
  %arrayidx217 = getelementptr inbounds double, double* %arrayidx24, i64 %indvars.iv
  %45 = load double, double* %arrayidx217, align 8, !tbaa !61
  %mul218 = fmul fast double %sub215, %45
  %arrayidx220 = getelementptr inbounds double, double* %hiddenb, i64 %indvars.iv
  %46 = load double, double* %arrayidx220, align 8, !tbaa !61
  %mul221 = fmul fast double %mul218, %42
  %add222 = fadd fast double %mul221, %46
  store double %add222, double* %arrayidx220, align 8, !tbaa !61
  %arrayidx228 = getelementptr inbounds double, double* %weightb, i64 %idxprom194
  %47 = load double, double* %arrayidx228, align 8, !tbaa !61
  %48 = load double, double* %arrayidx197, align 8, !tbaa !61
  %mul231 = fmul fast double %48, %mul218
  %add232 = fadd fast double %mul231, %47
  store double %add232, double* %arrayidx228, align 8, !tbaa !61
  %arrayidx240 = getelementptr inbounds double, double* %biasb, i64 %idxprom194
  %49 = load double, double* %arrayidx240, align 8, !tbaa !61
  %add241 = fadd fast double %49, %mul218
  store double %add241, double* %arrayidx240, align 8, !tbaa !61
  store double 0.000000e+00, double* %arrayidx217, align 8, !tbaa !61
  %arrayidx249 = getelementptr inbounds double, double* %input, i64 %indvars.iv
  %50 = load double, double* %arrayidx249, align 8, !tbaa !61
  %add251 = add nsw i32 %i.4670, %mul13
  %idxprom252 = sext i32 %add251 to i64
  %arrayidx253 = getelementptr inbounds double, double* %weight, i64 %idxprom252
  %51 = load double, double* %arrayidx253, align 8, !tbaa !61
  %mul254 = fmul fast double %51, %50
  %arrayidx258 = getelementptr inbounds double, double* %bias, i64 %idxprom252
  %52 = load double, double* %arrayidx258, align 8, !tbaa !61
  %add259 = fadd fast double %mul254, %52
  %arrayidx261 = getelementptr inbounds double, double* %arrayidx18, i64 %indvars.iv
  %53 = load double, double* %arrayidx261, align 8, !tbaa !61
  %fneg.i649 = fneg fast double %add259
  %54 = tail call fast double @llvm.exp.f64(double %fneg.i649) #37
  %add.i650 = fadd fast double %54, 1.000000e+00
  %mul.i651 = fmul fast double %54, %53
  %mul2.i652 = fmul fast double %add.i650, %add.i650
  %div.i653 = fdiv fast double %mul.i651, %mul2.i652
  store double 0.000000e+00, double* %arrayidx261, align 8, !tbaa !61
  %arrayidx265 = getelementptr inbounds double, double* %inputb, i64 %indvars.iv
  %55 = load double, double* %arrayidx265, align 8, !tbaa !61
  %mul270 = fmul fast double %div.i653, %51
  %add271 = fadd fast double %mul270, %55
  store double %add271, double* %arrayidx265, align 8, !tbaa !61
  %arrayidx277 = getelementptr inbounds double, double* %weightb, i64 %idxprom252
  %56 = load double, double* %arrayidx277, align 8, !tbaa !61
  %57 = load double, double* %arrayidx249, align 8, !tbaa !61
  %mul280 = fmul fast double %57, %div.i653
  %add281 = fadd fast double %mul280, %56
  store double %add281, double* %arrayidx277, align 8, !tbaa !61
  %arrayidx289 = getelementptr inbounds double, double* %biasb, i64 %idxprom252
  %58 = load double, double* %arrayidx289, align 8, !tbaa !61
  %add290 = fadd fast double %58, %div.i653
  store double %add290, double* %arrayidx289, align 8, !tbaa !61
  %59 = load double, double* %arrayidx197, align 8, !tbaa !61
  %add297 = add nsw i32 %i.4670, %hsize
  %idxprom298 = sext i32 %add297 to i64
  %arrayidx299 = getelementptr inbounds double, double* %weight, i64 %idxprom298
  %60 = load double, double* %arrayidx299, align 8, !tbaa !61
  %mul300 = fmul fast double %60, %59
  %arrayidx303 = getelementptr inbounds double, double* %bias, i64 %idxprom298
  %61 = load double, double* %arrayidx303, align 8, !tbaa !61
  %add304 = fadd fast double %mul300, %61
  %arrayidx306 = getelementptr inbounds double, double* %arrayidx12, i64 %indvars.iv
  %62 = load double, double* %arrayidx306, align 8, !tbaa !61
  %fneg.i644 = fneg fast double %add304
  %63 = tail call fast double @llvm.exp.f64(double %fneg.i644) #37
  %add.i645 = fadd fast double %63, 1.000000e+00
  %mul.i646 = fmul fast double %63, %62
  %mul2.i647 = fmul fast double %add.i645, %add.i645
  %div.i648 = fdiv fast double %mul.i646, %mul2.i647
  store double 0.000000e+00, double* %arrayidx306, align 8, !tbaa !61
  %64 = load double, double* %arrayidx220, align 8, !tbaa !61
  %mul314 = fmul fast double %div.i648, %60
  %add315 = fadd fast double %mul314, %64
  store double %add315, double* %arrayidx220, align 8, !tbaa !61
  %arrayidx320 = getelementptr inbounds double, double* %weightb, i64 %idxprom298
  %65 = load double, double* %arrayidx320, align 8, !tbaa !61
  %66 = load double, double* %arrayidx197, align 8, !tbaa !61
  %mul323 = fmul fast double %66, %div.i648
  %add324 = fadd fast double %mul323, %65
  store double %add324, double* %arrayidx320, align 8, !tbaa !61
  %arrayidx330 = getelementptr inbounds double, double* %biasb, i64 %idxprom298
  %67 = load double, double* %arrayidx330, align 8, !tbaa !61
  %add331 = fadd fast double %67, %div.i648
  store double %add331, double* %arrayidx330, align 8, !tbaa !61
  %68 = load double, double* %arrayidx249, align 8, !tbaa !61
  %arrayidx338 = getelementptr inbounds double, double* %weight, i64 %indvars.iv
  %69 = load double, double* %arrayidx338, align 8, !tbaa !61
  %mul339 = fmul fast double %69, %68
  %arrayidx341 = getelementptr inbounds double, double* %bias, i64 %indvars.iv
  %70 = load double, double* %arrayidx341, align 8, !tbaa !61
  %add342 = fadd fast double %mul339, %70
  %arrayidx344 = getelementptr inbounds double, double* %0, i64 %indvars.iv
  %71 = load double, double* %arrayidx344, align 8, !tbaa !61
  %fneg.i641 = fneg fast double %add342
  %72 = tail call fast double @llvm.exp.f64(double %fneg.i641) #37
  %add.i642 = fadd fast double %72, 1.000000e+00
  %mul.i = fmul fast double %72, %71
  %mul2.i = fmul fast double %add.i642, %add.i642
  %div.i643 = fdiv fast double %mul.i, %mul2.i
  store double 0.000000e+00, double* %arrayidx344, align 8, !tbaa !61
  %73 = load double, double* %arrayidx265, align 8, !tbaa !61
  %mul351 = fmul fast double %div.i643, %69
  %add352 = fadd fast double %mul351, %73
  store double %add352, double* %arrayidx265, align 8, !tbaa !61
  %arrayidx356 = getelementptr inbounds double, double* %weightb, i64 %indvars.iv
  %74 = load double, double* %arrayidx356, align 8, !tbaa !61
  %75 = load double, double* %arrayidx249, align 8, !tbaa !61
  %mul359 = fmul fast double %75, %div.i643
  %add360 = fadd fast double %mul359, %74
  store double %add360, double* %arrayidx356, align 8, !tbaa !61
  %arrayidx364 = getelementptr inbounds double, double* %biasb, i64 %indvars.iv
  %76 = load double, double* %arrayidx364, align 8, !tbaa !61
  %add365 = fadd fast double %76, %div.i643
  store double %add365, double* %arrayidx364, align 8, !tbaa !61
  %dec369 = add nsw i32 %i.4670, -1
  %cmp190 = icmp sgt i64 %indvars.iv, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  br i1 %cmp190, label %for.body191, label %for.end370, !llvm.loop !105

for.end370:                                       ; preds = %for.body191, %for.cond189.preheader, %for.cond143.preheader, %for.end104, %for.cond84.preheader, %for.end
  tail call void @free(i8* %call6) #37
  tail call void @free(i8* %call) #37
  ret void
}

declare dso_local void @pushReal8(double) local_unnamed_addr #3

declare dso_local void @popReal8(double*) local_unnamed_addr #3

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @lstm_model_nodiff(i32 %hsize, double* nocapture readonly %weight, double* nocapture readonly %bias, double* nocapture %hidden, double* nocapture %cell, double* nocapture readonly %input) local_unnamed_addr #6 {
entry:
  %mul = shl nsw i32 %hsize, 2
  %conv = sext i32 %mul to i64
  %mul1 = shl nsw i64 %conv, 3
  %call = tail call noalias i8* @malloc(i64 %mul1) #37
  %0 = bitcast i8* %call to double*
  %idxprom = sext i32 %hsize to i64
  %arrayidx2 = getelementptr inbounds double, double* %0, i64 %idxprom
  %mul3 = shl nsw i32 %hsize, 1
  %idxprom4 = sext i32 %mul3 to i64
  %arrayidx5 = getelementptr inbounds double, double* %0, i64 %idxprom4
  %mul6 = mul nsw i32 %hsize, 3
  %idxprom7 = sext i32 %mul6 to i64
  %arrayidx8 = getelementptr inbounds double, double* %0, i64 %idxprom7
  %cmp174 = icmp sgt i32 %hsize, 0
  br i1 %cmp174, label %for.body.preheader, label %for.end94

for.body.preheader:                               ; preds = %entry
  %wide.trip.count185 = zext i32 %hsize to i64
  br label %for.body

for.cond62.preheader:                             ; preds = %for.body
  br i1 %cmp174, label %for.body64.preheader, label %for.end94

for.body64.preheader:                             ; preds = %for.cond62.preheader
  %wide.trip.count178 = zext i32 %hsize to i64
  br label %for.body64

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv180 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next181, %for.body ]
  %arrayidx10 = getelementptr inbounds double, double* %input, i64 %indvars.iv180
  %1 = load double, double* %arrayidx10, align 8, !tbaa !61
  %arrayidx12 = getelementptr inbounds double, double* %weight, i64 %indvars.iv180
  %2 = load double, double* %arrayidx12, align 8, !tbaa !61
  %mul13 = fmul fast double %2, %1
  %arrayidx15 = getelementptr inbounds double, double* %bias, i64 %indvars.iv180
  %3 = load double, double* %arrayidx15, align 8, !tbaa !61
  %add = fadd fast double %mul13, %3
  %fneg.i = fneg fast double %add
  %4 = tail call fast double @llvm.exp.f64(double %fneg.i) #37
  %add.i = fadd fast double %4, 1.000000e+00
  %div.i = fdiv fast double 1.000000e+00, %add.i
  %arrayidx18 = getelementptr inbounds double, double* %0, i64 %indvars.iv180
  store double %div.i, double* %arrayidx18, align 8, !tbaa !61
  %arrayidx20 = getelementptr inbounds double, double* %hidden, i64 %indvars.iv180
  %5 = load double, double* %arrayidx20, align 8, !tbaa !61
  %6 = add nsw i64 %indvars.iv180, %idxprom
  %arrayidx23 = getelementptr inbounds double, double* %weight, i64 %6
  %7 = load double, double* %arrayidx23, align 8, !tbaa !61
  %mul24 = fmul fast double %7, %5
  %arrayidx27 = getelementptr inbounds double, double* %bias, i64 %6
  %8 = load double, double* %arrayidx27, align 8, !tbaa !61
  %add28 = fadd fast double %mul24, %8
  %fneg.i167 = fneg fast double %add28
  %9 = tail call fast double @llvm.exp.f64(double %fneg.i167) #37
  %add.i168 = fadd fast double %9, 1.000000e+00
  %div.i169 = fdiv fast double 1.000000e+00, %add.i168
  %arrayidx31 = getelementptr inbounds double, double* %arrayidx2, i64 %indvars.iv180
  store double %div.i169, double* %arrayidx31, align 8, !tbaa !61
  %10 = add nsw i64 %indvars.iv180, %idxprom4
  %arrayidx37 = getelementptr inbounds double, double* %weight, i64 %10
  %11 = load double, double* %arrayidx37, align 8, !tbaa !61
  %mul38 = fmul fast double %11, %1
  %arrayidx42 = getelementptr inbounds double, double* %bias, i64 %10
  %12 = load double, double* %arrayidx42, align 8, !tbaa !61
  %add43 = fadd fast double %mul38, %12
  %fneg.i164 = fneg fast double %add43
  %13 = tail call fast double @llvm.exp.f64(double %fneg.i164) #37
  %add.i165 = fadd fast double %13, 1.000000e+00
  %div.i166 = fdiv fast double 1.000000e+00, %add.i165
  %arrayidx46 = getelementptr inbounds double, double* %arrayidx5, i64 %indvars.iv180
  store double %div.i166, double* %arrayidx46, align 8, !tbaa !61
  %14 = add nsw i64 %indvars.iv180, %idxprom7
  %arrayidx52 = getelementptr inbounds double, double* %weight, i64 %14
  %15 = load double, double* %arrayidx52, align 8, !tbaa !61
  %mul53 = fmul fast double %15, %5
  %arrayidx57 = getelementptr inbounds double, double* %bias, i64 %14
  %16 = load double, double* %arrayidx57, align 8, !tbaa !61
  %add58 = fadd fast double %mul53, %16
  %call59 = tail call fast double @tanh(double %add58) #42
  %arrayidx61 = getelementptr inbounds double, double* %arrayidx8, i64 %indvars.iv180
  store double %call59, double* %arrayidx61, align 8, !tbaa !61
  %indvars.iv.next181 = add nuw nsw i64 %indvars.iv180, 1
  %exitcond186.not = icmp eq i64 %indvars.iv.next181, %wide.trip.count185
  br i1 %exitcond186.not, label %for.cond62.preheader, label %for.body, !llvm.loop !106

for.cond81.preheader:                             ; preds = %for.body64
  br i1 %cmp174, label %for.body83.preheader, label %for.end94

for.body83.preheader:                             ; preds = %for.cond81.preheader
  %wide.trip.count = zext i32 %hsize to i64
  br label %for.body83

for.body64:                                       ; preds = %for.body64, %for.body64.preheader
  %indvars.iv176 = phi i64 [ 0, %for.body64.preheader ], [ %indvars.iv.next177, %for.body64 ]
  %arrayidx66 = getelementptr inbounds double, double* %cell, i64 %indvars.iv176
  %17 = load double, double* %arrayidx66, align 8, !tbaa !61
  %arrayidx68 = getelementptr inbounds double, double* %0, i64 %indvars.iv176
  %18 = load double, double* %arrayidx68, align 8, !tbaa !61
  %mul69 = fmul fast double %18, %17
  %arrayidx71 = getelementptr inbounds double, double* %arrayidx2, i64 %indvars.iv176
  %19 = load double, double* %arrayidx71, align 8, !tbaa !61
  %arrayidx73 = getelementptr inbounds double, double* %arrayidx8, i64 %indvars.iv176
  %20 = load double, double* %arrayidx73, align 8, !tbaa !61
  %mul74 = fmul fast double %20, %19
  %add75 = fadd fast double %mul74, %mul69
  store double %add75, double* %arrayidx66, align 8, !tbaa !61
  %indvars.iv.next177 = add nuw nsw i64 %indvars.iv176, 1
  %exitcond179.not = icmp eq i64 %indvars.iv.next177, %wide.trip.count178
  br i1 %exitcond179.not, label %for.cond81.preheader, label %for.body64, !llvm.loop !107

for.body83:                                       ; preds = %for.body83, %for.body83.preheader
  %indvars.iv = phi i64 [ 0, %for.body83.preheader ], [ %indvars.iv.next, %for.body83 ]
  %arrayidx85 = getelementptr inbounds double, double* %arrayidx5, i64 %indvars.iv
  %21 = load double, double* %arrayidx85, align 8, !tbaa !61
  %arrayidx87 = getelementptr inbounds double, double* %cell, i64 %indvars.iv
  %22 = load double, double* %arrayidx87, align 8, !tbaa !61
  %call88 = tail call fast double @tanh(double %22) #42
  %mul89 = fmul fast double %call88, %21
  %arrayidx91 = getelementptr inbounds double, double* %hidden, i64 %indvars.iv
  store double %mul89, double* %arrayidx91, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end94, label %for.body83, !llvm.loop !108

for.end94:                                        ; preds = %for.body83, %for.cond81.preheader, %for.cond62.preheader, %entry
  tail call void @free(i8* %call) #37
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @lstm_predict_b(i32 %l, i32 %b, double* nocapture readonly %w, double* nocapture %wb, double* nocapture readonly %w2, double* nocapture %w2b, double* %s, double* %sb, double* nocapture readonly %x, double* %x2, double* %x2b) local_unnamed_addr #10 {
entry:
  %xp = alloca double*, align 8
  %xpb = alloca double*, align 8
  %cmp288 = icmp sgt i32 %b, 0
  br i1 %cmp288, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count301 = zext i32 %b to i64
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv299 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next300, %for.body ]
  %arrayidx = getelementptr inbounds double, double* %x2, i64 %indvars.iv299
  %0 = load double, double* %arrayidx, align 8, !tbaa !61
  tail call void @pushReal8(double %0)
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %indvars.iv299
  %1 = load double, double* %arrayidx2, align 8, !tbaa !61
  %arrayidx4 = getelementptr inbounds double, double* %w2, i64 %indvars.iv299
  %2 = load double, double* %arrayidx4, align 8, !tbaa !61
  %mul = fmul fast double %2, %1
  store double %mul, double* %arrayidx, align 8, !tbaa !61
  %indvars.iv.next300 = add nuw nsw i64 %indvars.iv299, 1
  %exitcond302.not = icmp eq i64 %indvars.iv.next300, %wide.trip.count301
  br i1 %exitcond302.not, label %for.end, label %for.body, !llvm.loop !109

for.end:                                          ; preds = %for.body, %entry
  %3 = bitcast double** %xp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #37
  store double* %x2, double** %xp, align 8, !tbaa !110
  %4 = bitcast double** %xpb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store double* %x2b, double** %xpb, align 8, !tbaa !110
  %mul8 = shl nsw i32 %l, 1
  %mul9 = mul nsw i32 %mul8, %b
  %sub = add nsw i32 %mul9, -1
  %cmp10.not.not285 = icmp sgt i32 %mul9, 0
  br i1 %cmp10.not.not285, label %for.body11.lr.ph, label %for.cond32.preheader

for.body11.lr.ph:                                 ; preds = %for.end
  %mul12 = shl i32 %b, 1
  %5 = sext i32 %mul12 to i64
  %6 = sext i32 %b to i64
  %7 = zext i32 %mul9 to i64
  br label %for.body11

for.cond32.preheader.loopexit:                    ; preds = %for.body11
  store double* %arrayidx25, double** %xpb, align 8, !tbaa !110
  store double* %add.ptr, double** %xp, align 8, !tbaa !110
  br label %for.cond32.preheader

for.cond32.preheader:                             ; preds = %for.cond32.preheader.loopexit, %for.end
  %8 = phi double* [ %x2b, %for.end ], [ %arrayidx25, %for.cond32.preheader.loopexit ]
  %9 = phi double* [ %x2, %for.end ], [ %add.ptr, %for.cond32.preheader.loopexit ]
  br i1 %cmp288, label %for.body34.lr.ph, label %for.end52.for.end92_crit_edge

for.body34.lr.ph:                                 ; preds = %for.cond32.preheader
  %mul41 = shl nuw nsw i32 %b, 1
  %10 = zext i32 %b to i64
  %11 = sext i32 %mul41 to i64
  %wide.trip.count = zext i32 %b to i64
  br label %for.body34

for.body11:                                       ; preds = %for.body11, %for.body11.lr.ph
  %.in = phi double* [ %x2b, %for.body11.lr.ph ], [ %arrayidx25, %for.body11 ]
  %12 = phi double* [ %x2, %for.body11.lr.ph ], [ %add.ptr, %for.body11 ]
  %indvars.iv296 = phi i64 [ 0, %for.body11.lr.ph ], [ %indvars.iv.next297, %for.body11 ]
  %13 = bitcast double* %.in to i8*
  %add.ptr = getelementptr inbounds double, double* %s, i64 %indvars.iv296
  tail call void @pushReal8Array(double* %add.ptr, i32 %mul12)
  %14 = trunc i64 %indvars.iv296 to i32
  %mul13 = shl nsw i32 %14, 2
  %idxprom14 = sext i32 %mul13 to i64
  %arrayidx15 = getelementptr inbounds double, double* %w, i64 %idxprom14
  %15 = add nsw i64 %indvars.iv296, %6
  %16 = trunc i64 %15 to i32
  %mul16 = shl nsw i32 %16, 2
  %idxprom17 = sext i32 %mul16 to i64
  %arrayidx18 = getelementptr inbounds double, double* %w, i64 %idxprom17
  %arrayidx23 = getelementptr inbounds double, double* %s, i64 %15
  tail call void @lstm_model_nodiff(i32 %b, double* %arrayidx15, double* %arrayidx18, double* %add.ptr, double* %arrayidx23, double* %12)
  tail call void @pushPointer8(i8* %13)
  %arrayidx25 = getelementptr inbounds double, double* %sb, i64 %indvars.iv296
  %.cast = bitcast double* %12 to i8*
  tail call void @pushPointer8(i8* %.cast)
  %indvars.iv.next297 = add i64 %indvars.iv296, %5
  %cmp10.not.not = icmp slt i64 %indvars.iv.next297, %7
  br i1 %cmp10.not.not, label %for.body11, label %for.cond32.preheader.loopexit, !llvm.loop !111

for.body34:                                       ; preds = %for.body34, %for.body34.lr.ph
  %indvars.iv292 = phi i64 [ 0, %for.body34.lr.ph ], [ %indvars.iv.next293, %for.body34 ]
  %arrayidx36 = getelementptr inbounds double, double* %9, i64 %indvars.iv292
  %17 = load double, double* %arrayidx36, align 8, !tbaa !61
  %18 = add nuw nsw i64 %indvars.iv292, %10
  %arrayidx39 = getelementptr inbounds double, double* %w2, i64 %18
  %19 = load double, double* %arrayidx39, align 8, !tbaa !61
  %mul40 = fmul fast double %19, %17
  %20 = add nsw i64 %indvars.iv292, %11
  %arrayidx44 = getelementptr inbounds double, double* %w2, i64 %20
  %21 = load double, double* %arrayidx44, align 8, !tbaa !61
  %add45 = fadd fast double %mul40, %21
  %arrayidx47 = getelementptr inbounds double, double* %x2, i64 %indvars.iv292
  %22 = load double, double* %arrayidx47, align 8, !tbaa !61
  tail call void @pushReal8(double %22)
  store double %add45, double* %arrayidx47, align 8, !tbaa !61
  %indvars.iv.next293 = add nuw nsw i64 %indvars.iv292, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next293, %wide.trip.count
  br i1 %exitcond.not, label %for.end52, label %for.body34, !llvm.loop !112

for.end52:                                        ; preds = %for.body34
  br i1 %cmp288, label %for.body56.lr.ph, label %for.end52.for.end92_crit_edge

for.end52.for.end92_crit_edge:                    ; preds = %for.end52, %for.cond32.preheader
  %.pre = shl nsw i32 %b, 1
  br label %for.end92

for.body56.lr.ph:                                 ; preds = %for.end52
  %mul82 = shl nuw nsw i32 %b, 1
  %23 = add nsw i32 %b, -1
  %24 = zext i32 %23 to i64
  br label %for.body56

for.body56:                                       ; preds = %for.body56, %for.body56.lr.ph
  %indvars.iv290 = phi i64 [ %24, %for.body56.lr.ph ], [ %indvars.iv.next291, %for.body56 ]
  %arrayidx58 = getelementptr inbounds double, double* %x2, i64 %indvars.iv290
  tail call void @popReal8(double* %arrayidx58)
  %arrayidx60 = getelementptr inbounds double, double* %x2b, i64 %indvars.iv290
  %25 = load double, double* %arrayidx60, align 8, !tbaa !61
  store double 0.000000e+00, double* %arrayidx60, align 8, !tbaa !61
  %arrayidx64 = getelementptr inbounds double, double* %8, i64 %indvars.iv290
  %26 = load double, double* %arrayidx64, align 8, !tbaa !61
  %27 = trunc i64 %indvars.iv290 to i32
  %add65 = add nsw i32 %27, %b
  %idxprom66 = sext i32 %add65 to i64
  %arrayidx67 = getelementptr inbounds double, double* %w2, i64 %idxprom66
  %28 = load double, double* %arrayidx67, align 8, !tbaa !61
  %mul68 = fmul fast double %28, %25
  %add69 = fadd fast double %mul68, %26
  store double %add69, double* %arrayidx64, align 8, !tbaa !61
  %arrayidx74 = getelementptr inbounds double, double* %w2b, i64 %idxprom66
  %29 = load double, double* %arrayidx74, align 8, !tbaa !61
  %arrayidx76 = getelementptr inbounds double, double* %9, i64 %indvars.iv290
  %30 = load double, double* %arrayidx76, align 8, !tbaa !61
  %mul77 = fmul fast double %30, %25
  %add78 = fadd fast double %mul77, %29
  store double %add78, double* %arrayidx74, align 8, !tbaa !61
  %add83 = add nsw i32 %mul82, %27
  %idxprom84 = sext i32 %add83 to i64
  %arrayidx85 = getelementptr inbounds double, double* %w2b, i64 %idxprom84
  %31 = load double, double* %arrayidx85, align 8, !tbaa !61
  %add86 = fadd fast double %31, %25
  store double %add86, double* %arrayidx85, align 8, !tbaa !61
  %cmp55 = icmp sgt i64 %indvars.iv290, 0
  %indvars.iv.next291 = add nsw i64 %indvars.iv290, -1
  br i1 %cmp55, label %for.body56, label %for.end92, !llvm.loop !113

for.end92:                                        ; preds = %for.body56, %for.end52.for.end92_crit_edge
  %mul98.pre-phi = phi i32 [ %.pre, %for.end52.for.end92_crit_edge ], [ %mul82, %for.body56 ]
  %rem = srem i32 %sub, %mul98.pre-phi
  %32 = xor i32 %rem, -1
  %sub100 = add i32 %mul9, %32
  %cmp102279 = icmp sgt i32 %sub100, -1
  br i1 %cmp102279, label %for.body103.lr.ph, label %for.cond137.preheader

for.body103.lr.ph:                                ; preds = %for.end92
  %33 = bitcast double** %xp to i8**
  %34 = bitcast double** %xpb to i8**
  br label %for.body103

for.cond137.preheader:                            ; preds = %for.body103, %for.end92
  br i1 %cmp288, label %for.body139.preheader, label %for.end156

for.body139.preheader:                            ; preds = %for.cond137.preheader
  %35 = add nsw i32 %b, -1
  %36 = zext i32 %35 to i64
  br label %for.body139

for.body103:                                      ; preds = %for.body103, %for.body103.lr.ph
  %i.4280 = phi i32 [ %sub100, %for.body103.lr.ph ], [ %add134, %for.body103 ]
  call void @popPointer8(i8** nonnull %33)
  call void @popPointer8(i8** nonnull %34)
  %idx.ext104275 = zext i32 %i.4280 to i64
  %add.ptr105 = getelementptr inbounds double, double* %s, i64 %idx.ext104275
  call void @popReal8Array(double* %add.ptr105, i32 %mul98.pre-phi)
  %mul107 = shl nsw i32 %i.4280, 2
  %idxprom108 = sext i32 %mul107 to i64
  %arrayidx109 = getelementptr inbounds double, double* %w, i64 %idxprom108
  %arrayidx112 = getelementptr inbounds double, double* %wb, i64 %idxprom108
  %add113 = add nsw i32 %i.4280, %b
  %mul114 = shl nsw i32 %add113, 2
  %idxprom115 = sext i32 %mul114 to i64
  %arrayidx116 = getelementptr inbounds double, double* %w, i64 %idxprom115
  %arrayidx120 = getelementptr inbounds double, double* %wb, i64 %idxprom115
  %arrayidx124 = getelementptr inbounds double, double* %sb, i64 %idx.ext104275
  %idxprom126 = sext i32 %add113 to i64
  %arrayidx127 = getelementptr inbounds double, double* %s, i64 %idxprom126
  %arrayidx130 = getelementptr inbounds double, double* %sb, i64 %idxprom126
  %37 = load double*, double** %xp, align 8, !tbaa !110
  %38 = load double*, double** %xpb, align 8, !tbaa !110
  call void @lstm_model_b(i32 %b, double* %arrayidx109, double* %arrayidx112, double* %arrayidx116, double* %arrayidx120, double* %add.ptr105, double* %arrayidx124, double* %arrayidx127, double* %arrayidx130, double* %37, double* %38)
  %add134 = sub i32 %i.4280, %mul98.pre-phi
  %cmp102 = icmp sgt i32 %add134, -1
  br i1 %cmp102, label %for.body103, label %for.cond137.preheader, !llvm.loop !114

for.body139:                                      ; preds = %for.body139, %for.body139.preheader
  %indvars.iv = phi i64 [ %36, %for.body139.preheader ], [ %indvars.iv.next, %for.body139 ]
  %arrayidx141 = getelementptr inbounds double, double* %x2, i64 %indvars.iv
  call void @popReal8(double* %arrayidx141)
  %arrayidx143 = getelementptr inbounds double, double* %w2b, i64 %indvars.iv
  %39 = load double, double* %arrayidx143, align 8, !tbaa !61
  %arrayidx145 = getelementptr inbounds double, double* %x, i64 %indvars.iv
  %40 = load double, double* %arrayidx145, align 8, !tbaa !61
  %arrayidx147 = getelementptr inbounds double, double* %x2b, i64 %indvars.iv
  %41 = load double, double* %arrayidx147, align 8, !tbaa !61
  %mul148 = fmul fast double %41, %40
  %add149 = fadd fast double %mul148, %39
  store double %add149, double* %arrayidx143, align 8, !tbaa !61
  store double 0.000000e+00, double* %arrayidx147, align 8, !tbaa !61
  %cmp138 = icmp sgt i64 %indvars.iv, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  br i1 %cmp138, label %for.body139, label %for.end156, !llvm.loop !115

for.end156:                                       ; preds = %for.body139, %for.cond137.preheader
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #37
  ret void
}

declare dso_local void @pushReal8Array(double*, i32) local_unnamed_addr #3

declare dso_local void @pushPointer8(i8*) local_unnamed_addr #3

declare dso_local void @popPointer8(i8**) local_unnamed_addr #3

declare dso_local void @popReal8Array(double*, i32) local_unnamed_addr #3

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @lstm_predict_nodiff(i32 %l, i32 %b, double* nocapture readonly %w, double* nocapture readonly %w2, double* nocapture %s, double* nocapture readonly %x, double* nocapture %x2) local_unnamed_addr #6 {
entry:
  %cmp86 = icmp sgt i32 %b, 0
  br i1 %cmp86, label %for.body.preheader, label %for.cond5.preheader

for.body.preheader:                               ; preds = %entry
  %wide.trip.count95 = zext i32 %b to i64
  br label %for.body

for.cond5.preheader:                              ; preds = %for.body, %entry
  %mul6 = shl nsw i32 %l, 1
  %mul7 = mul nsw i32 %mul6, %b
  %cmp8.not.not83 = icmp sgt i32 %mul7, 0
  br i1 %cmp8.not.not83, label %for.body9.lr.ph, label %for.cond27.preheader

for.body9.lr.ph:                                  ; preds = %for.cond5.preheader
  %0 = shl i32 %b, 1
  %1 = sext i32 %0 to i64
  %2 = sext i32 %b to i64
  %3 = zext i32 %mul7 to i64
  br label %for.body9

for.body:                                         ; preds = %for.body, %for.body.preheader
  %indvars.iv93 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next94, %for.body ]
  %arrayidx = getelementptr inbounds double, double* %x, i64 %indvars.iv93
  %4 = load double, double* %arrayidx, align 8, !tbaa !61
  %arrayidx2 = getelementptr inbounds double, double* %w2, i64 %indvars.iv93
  %5 = load double, double* %arrayidx2, align 8, !tbaa !61
  %mul = fmul fast double %5, %4
  %arrayidx4 = getelementptr inbounds double, double* %x2, i64 %indvars.iv93
  store double %mul, double* %arrayidx4, align 8, !tbaa !61
  %indvars.iv.next94 = add nuw nsw i64 %indvars.iv93, 1
  %exitcond96.not = icmp eq i64 %indvars.iv.next94, %wide.trip.count95
  br i1 %exitcond96.not, label %for.cond5.preheader, label %for.body, !llvm.loop !116

for.cond27.preheader:                             ; preds = %for.body9, %for.cond5.preheader
  %xp.0.lcssa = phi double* [ %x2, %for.cond5.preheader ], [ %arrayidx17, %for.body9 ]
  br i1 %cmp86, label %for.body29.lr.ph, label %for.end45

for.body29.lr.ph:                                 ; preds = %for.cond27.preheader
  %mul36 = shl nuw nsw i32 %b, 1
  %6 = zext i32 %b to i64
  %7 = sext i32 %mul36 to i64
  %wide.trip.count = zext i32 %b to i64
  br label %for.body29

for.body9:                                        ; preds = %for.body9, %for.body9.lr.ph
  %indvars.iv90 = phi i64 [ 0, %for.body9.lr.ph ], [ %indvars.iv.next91, %for.body9 ]
  %xp.085 = phi double* [ %x2, %for.body9.lr.ph ], [ %arrayidx17, %for.body9 ]
  %8 = trunc i64 %indvars.iv90 to i32
  %mul10 = shl nsw i32 %8, 2
  %idxprom11 = sext i32 %mul10 to i64
  %arrayidx12 = getelementptr inbounds double, double* %w, i64 %idxprom11
  %9 = add nsw i64 %indvars.iv90, %2
  %10 = trunc i64 %9 to i32
  %mul13 = shl nsw i32 %10, 2
  %idxprom14 = sext i32 %mul13 to i64
  %arrayidx15 = getelementptr inbounds double, double* %w, i64 %idxprom14
  %arrayidx17 = getelementptr inbounds double, double* %s, i64 %indvars.iv90
  %arrayidx20 = getelementptr inbounds double, double* %s, i64 %9
  tail call void @lstm_model_nodiff(i32 %b, double* %arrayidx12, double* %arrayidx15, double* %arrayidx17, double* %arrayidx20, double* %xp.085)
  %indvars.iv.next91 = add i64 %indvars.iv90, %1
  %cmp8.not.not = icmp slt i64 %indvars.iv.next91, %3
  br i1 %cmp8.not.not, label %for.body9, label %for.cond27.preheader, !llvm.loop !117

for.body29:                                       ; preds = %for.body29, %for.body29.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body29.lr.ph ], [ %indvars.iv.next, %for.body29 ]
  %arrayidx31 = getelementptr inbounds double, double* %xp.0.lcssa, i64 %indvars.iv
  %11 = load double, double* %arrayidx31, align 8, !tbaa !61
  %12 = add nuw nsw i64 %indvars.iv, %6
  %arrayidx34 = getelementptr inbounds double, double* %w2, i64 %12
  %13 = load double, double* %arrayidx34, align 8, !tbaa !61
  %mul35 = fmul fast double %13, %11
  %14 = add nsw i64 %indvars.iv, %7
  %arrayidx39 = getelementptr inbounds double, double* %w2, i64 %14
  %15 = load double, double* %arrayidx39, align 8, !tbaa !61
  %add40 = fadd fast double %mul35, %15
  %arrayidx42 = getelementptr inbounds double, double* %x2, i64 %indvars.iv
  store double %add40, double* %arrayidx42, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end45, label %for.body29, !llvm.loop !118

for.end45:                                        ; preds = %for.body29, %for.cond27.preheader
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @lstm_objective_b(i32 %l, i32 %c, i32 %b, double* nocapture readonly %main_params, double* nocapture %main_paramsb, double* nocapture readonly %extra_params, double* nocapture %extra_paramsb, double* %state, double* %sequence, double* nocapture readnone %loss, double* nocapture %lossb) local_unnamed_addr #10 {
entry:
  %extra_paramsb261 = bitcast double* %extra_paramsb to i8*
  %main_paramsb264 = bitcast double* %main_paramsb to i8*
  %input = alloca double*, align 8
  %branch = alloca i32, align 4
  %ygold = alloca double*, align 8
  %0 = bitcast double** %input to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #37
  store double* %sequence, double** %input, align 8, !tbaa !110
  %1 = bitcast i32* %branch to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #37
  %mul = shl i32 %l, 1
  %mul1 = mul i32 %mul, %b
  %conv = sext i32 %mul1 to i64
  %mul2 = shl nsw i64 %conv, 3
  %call = tail call noalias i8* @malloc(i64 %mul2) #37
  %2 = bitcast i8* %call to double*
  %conv3 = sext i32 %b to i64
  %mul4 = shl nsw i64 %conv3, 3
  %call5 = tail call noalias i8* @malloc(i64 %mul4) #37
  %3 = bitcast i8* %call5 to double*
  %cmp255 = icmp sgt i32 %b, 0
  %4 = bitcast double* %sequence to i8*
  br i1 %cmp255, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %5 = zext i32 %b to i64
  %6 = shl nuw nsw i64 %5, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %call5, i8 0, i64 %6, i1 false)
  br label %for.end

for.end:                                          ; preds = %for.body.preheader, %entry
  %call9 = tail call noalias i8* @malloc(i64 %mul4) #37
  %7 = bitcast i8* %call9 to double*
  %call12 = tail call noalias i8* @malloc(i64 %mul4) #37
  %8 = bitcast i8* %call12 to double*
  br i1 %cmp255, label %for.body15.preheader, label %for.end20

for.body15.preheader:                             ; preds = %for.end
  %9 = zext i32 %b to i64
  %10 = shl nuw nsw i64 %9, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %call12, i8 0, i64 %10, i1 false)
  br label %for.end20

for.end20:                                        ; preds = %for.body15.preheader, %for.end
  %11 = bitcast double** %ygold to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #37
  store double* null, double** %ygold, align 8, !tbaa !110
  %sub = add nsw i32 %c, -1
  %mul25 = mul nsw i32 %sub, %b
  %sub26 = add nsw i32 %mul25, -1
  %cmp27.not.not247 = icmp sgt i32 %mul25, 0
  br i1 %cmp27.not.not247, label %for.body28.lr.ph, label %for.end36

for.body28.lr.ph:                                 ; preds = %for.end20
  %tobool.not = icmp eq i8* %call9, null
  %mul29 = shl i32 %b, 1
  %mul30 = mul nsw i32 %mul29, %l
  %wide.trip.count95.i = zext i32 %b to i64
  %cmp8.not.not83.i = icmp sgt i32 %mul1, 0
  %12 = sext i32 %mul29 to i64
  %13 = zext i32 %mul1 to i64
  %14 = zext i32 %mul25 to i64
  br label %for.body28

for.body28:                                       ; preds = %lstm_predict_nodiff.exit, %for.body28.lr.ph
  %15 = phi i8* [ %4, %for.body28.lr.ph ], [ %28, %lstm_predict_nodiff.exit ]
  %16 = phi i8* [ null, %for.body28.lr.ph ], [ %28, %lstm_predict_nodiff.exit ]
  %17 = phi double* [ %sequence, %for.body28.lr.ph ], [ %arrayidx32, %lstm_predict_nodiff.exit ]
  %indvars.iv267 = phi i64 [ 0, %for.body28.lr.ph ], [ %indvars.iv.next268, %lstm_predict_nodiff.exit ]
  %t.0249 = phi i32 [ 0, %for.body28.lr.ph ], [ %add, %lstm_predict_nodiff.exit ]
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.body28
  tail call void @pushReal8Array(double* nonnull %7, i32 %b)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body28
  %.sink = phi i32 [ 1, %if.then ], [ 0, %for.body28 ]
  tail call void @pushControl1b(i32 %.sink)
  tail call void @pushReal8Array(double* %state, i32 %mul30)
  br i1 %cmp255, label %for.body.i, label %for.cond5.preheader.i

for.cond5.preheader.i:                            ; preds = %for.body.i, %if.end
  br i1 %cmp8.not.not83.i, label %for.body9.i, label %for.cond27.preheader.i

for.body.i:                                       ; preds = %for.body.i, %if.end
  %indvars.iv93.i = phi i64 [ %indvars.iv.next94.i, %for.body.i ], [ 0, %if.end ]
  %arrayidx.i = getelementptr inbounds double, double* %17, i64 %indvars.iv93.i
  %18 = load double, double* %arrayidx.i, align 8, !tbaa !61
  %arrayidx2.i = getelementptr inbounds double, double* %extra_params, i64 %indvars.iv93.i
  %19 = load double, double* %arrayidx2.i, align 8, !tbaa !61
  %mul.i = fmul fast double %19, %18
  %arrayidx4.i = getelementptr inbounds double, double* %7, i64 %indvars.iv93.i
  store double %mul.i, double* %arrayidx4.i, align 8, !tbaa !61
  %indvars.iv.next94.i = add nuw nsw i64 %indvars.iv93.i, 1
  %exitcond96.not.i = icmp eq i64 %indvars.iv.next94.i, %wide.trip.count95.i
  br i1 %exitcond96.not.i, label %for.cond5.preheader.i, label %for.body.i, !llvm.loop !116

for.cond27.preheader.i:                           ; preds = %for.body9.i, %for.cond5.preheader.i
  %xp.0.lcssa.i = phi double* [ %7, %for.cond5.preheader.i ], [ %arrayidx17.i, %for.body9.i ]
  br i1 %cmp255, label %for.body29.i, label %lstm_predict_nodiff.exit

for.body9.i:                                      ; preds = %for.body9.i, %for.cond5.preheader.i
  %indvars.iv90.i = phi i64 [ %indvars.iv.next91.i, %for.body9.i ], [ 0, %for.cond5.preheader.i ]
  %xp.085.i = phi double* [ %arrayidx17.i, %for.body9.i ], [ %7, %for.cond5.preheader.i ]
  %20 = trunc i64 %indvars.iv90.i to i32
  %mul10.i = shl nsw i32 %20, 2
  %idxprom11.i = sext i32 %mul10.i to i64
  %arrayidx12.i = getelementptr inbounds double, double* %main_params, i64 %idxprom11.i
  %21 = add nsw i64 %indvars.iv90.i, %conv3
  %22 = trunc i64 %21 to i32
  %mul13.i = shl nsw i32 %22, 2
  %idxprom14.i = sext i32 %mul13.i to i64
  %arrayidx15.i = getelementptr inbounds double, double* %main_params, i64 %idxprom14.i
  %arrayidx17.i = getelementptr inbounds double, double* %state, i64 %indvars.iv90.i
  %arrayidx20.i = getelementptr inbounds double, double* %state, i64 %21
  tail call void @lstm_model_nodiff(i32 %b, double* %arrayidx12.i, double* %arrayidx15.i, double* %arrayidx17.i, double* %arrayidx20.i, double* %xp.085.i) #37
  %indvars.iv.next91.i = add i64 %indvars.iv90.i, %12
  %cmp8.not.not.i = icmp slt i64 %indvars.iv.next91.i, %13
  br i1 %cmp8.not.not.i, label %for.body9.i, label %for.cond27.preheader.i, !llvm.loop !117

for.body29.i:                                     ; preds = %for.body29.i, %for.cond27.preheader.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body29.i ], [ 0, %for.cond27.preheader.i ]
  %arrayidx31.i = getelementptr inbounds double, double* %xp.0.lcssa.i, i64 %indvars.iv.i
  %23 = load double, double* %arrayidx31.i, align 8, !tbaa !61
  %24 = add nuw nsw i64 %indvars.iv.i, %wide.trip.count95.i
  %arrayidx34.i = getelementptr inbounds double, double* %extra_params, i64 %24
  %25 = load double, double* %arrayidx34.i, align 8, !tbaa !61
  %mul35.i = fmul fast double %25, %23
  %26 = add nsw i64 %indvars.iv.i, %12
  %arrayidx39.i = getelementptr inbounds double, double* %extra_params, i64 %26
  %27 = load double, double* %arrayidx39.i, align 8, !tbaa !61
  %add40.i = fadd fast double %mul35.i, %27
  %arrayidx42.i = getelementptr inbounds double, double* %7, i64 %indvars.iv.i
  store double %add40.i, double* %arrayidx42.i, align 8, !tbaa !61
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count95.i
  br i1 %exitcond.not.i, label %lstm_predict_nodiff.exit, label %for.body29.i, !llvm.loop !118

lstm_predict_nodiff.exit:                         ; preds = %for.body29.i, %for.cond27.preheader.i
  tail call void @pushPointer8(i8* %16)
  %indvars.iv.next268 = add i64 %indvars.iv267, %conv3
  %add = add nsw i32 %t.0249, %b
  %arrayidx32 = getelementptr inbounds double, double* %sequence, i64 %indvars.iv.next268
  tail call void @pushPointer8(i8* %15)
  %cmp27.not.not = icmp slt i64 %indvars.iv.next268, %14
  %28 = bitcast double* %arrayidx32 to i8*
  br i1 %cmp27.not.not, label %for.body28, label %for.end36.loopexit, !llvm.loop !119

for.end36.loopexit:                               ; preds = %lstm_predict_nodiff.exit
  store double* %arrayidx32, double** %ygold, align 8, !tbaa !110
  store double* %arrayidx32, double** %input, align 8, !tbaa !110
  %phi.cast = sitofp i32 %add to double
  br label %for.end36

for.end36:                                        ; preds = %for.end36.loopexit, %for.end20
  %count.0.lcssa = phi double [ 0.000000e+00, %for.end20 ], [ %phi.cast, %for.end36.loopexit ]
  %29 = load double, double* %lossb, align 8, !tbaa !61
  store double 0.000000e+00, double* %lossb, align 8, !tbaa !61
  %mul39 = shl nsw i32 %l, 3
  %mul40 = mul nsw i32 %mul39, %b
  %cmp41245 = icmp sgt i32 %mul40, 0
  br i1 %cmp41245, label %for.body42.preheader, label %for.cond48.preheader

for.body42.preheader:                             ; preds = %for.end36
  %30 = mul i32 %b, %l
  %31 = shl i32 %30, 3
  %32 = zext i32 %31 to i64
  %33 = shl nuw nsw i64 %32, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %main_paramsb264, i8 0, i64 %33, i1 false)
  br label %for.cond48.preheader

for.cond48.preheader:                             ; preds = %for.body42.preheader, %for.end36
  br i1 %cmp255, label %for.body51.preheader, label %for.cond57.preheader

for.body51.preheader:                             ; preds = %for.cond48.preheader
  %34 = mul i32 %b, 3
  %35 = icmp sgt i32 %34, 1
  %smax = select i1 %35, i32 %34, i32 1
  %36 = zext i32 %smax to i64
  %37 = shl nuw nsw i64 %36, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %extra_paramsb261, i8 0, i64 %37, i1 false)
  br label %for.cond57.preheader

for.cond57.preheader:                             ; preds = %for.body51.preheader, %for.cond48.preheader
  %cmp60241 = icmp sgt i32 %mul1, 0
  br i1 %cmp60241, label %for.body61.preheader, label %for.end66

for.body61.preheader:                             ; preds = %for.cond57.preheader
  %38 = mul i32 %b, %l
  %39 = shl i32 %38, 1
  %40 = zext i32 %39 to i64
  %41 = shl nuw nsw i64 %40, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %call, i8 0, i64 %41, i1 false)
  br label %for.end66

for.end66:                                        ; preds = %for.body61.preheader, %for.cond57.preheader
  %rem = srem i32 %sub26, %b
  %42 = xor i32 %rem, -1
  %sub73 = add i32 %mul25, %42
  %cmp75239 = icmp sgt i32 %sub73, -1
  br i1 %cmp75239, label %for.body76.lr.ph, label %for.end118

for.body76.lr.ph:                                 ; preds = %for.end66
  %43 = bitcast double** %input to i8**
  %44 = bitcast double** %ygold to i8**
  %wide.trip.count.i225 = zext i32 %b to i64
  %45 = add i32 %b, -1
  %46 = zext i32 %45 to i64
  br label %for.body76

for.body76:                                       ; preds = %if.end114, %for.body76.lr.ph
  %t.2240 = phi i32 [ %sub73, %for.body76.lr.ph ], [ %add117, %if.end114 ]
  call void @popPointer8(i8** nonnull %43)
  br i1 %cmp255, label %for.body80.lr.ph, label %for.end90.thread

for.end90.thread:                                 ; preds = %for.body76
  call void @popPointer8(i8** nonnull %44)
  br label %logsumexp_b.exit

for.body80.lr.ph:                                 ; preds = %for.body76
  %47 = load double*, double** %ygold, align 8, !tbaa !110
  br label %for.body80

for.body80:                                       ; preds = %for.body80, %for.body80.lr.ph
  %indvars.iv = phi i64 [ %46, %for.body80.lr.ph ], [ %indvars.iv.next, %for.body80 ]
  %arrayidx82 = getelementptr inbounds double, double* %8, i64 %indvars.iv
  %48 = load double, double* %arrayidx82, align 8, !tbaa !61
  %arrayidx84 = getelementptr inbounds double, double* %47, i64 %indvars.iv
  %49 = load double, double* %arrayidx84, align 8, !tbaa !61
  %50 = fmul fast double %29, %49
  %51 = fdiv fast double %50, %count.0.lcssa
  %52 = fsub fast double %48, %51
  store double %52, double* %arrayidx82, align 8, !tbaa !61
  %cmp79 = icmp sgt i64 %indvars.iv, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  br i1 %cmp79, label %for.body80, label %for.end90, !llvm.loop !120

for.end90:                                        ; preds = %for.body80
  call void @popPointer8(i8** nonnull %44)
  br i1 %cmp255, label %for.body94, label %logsumexp_b.exit

for.body94:                                       ; preds = %for.body94, %for.end90
  %indvars.iv257 = phi i64 [ %indvars.iv.next258, %for.body94 ], [ %46, %for.end90 ]
  %lseb.0238 = phi double [ %sub104, %for.body94 ], [ 0.000000e+00, %for.end90 ]
  %arrayidx96 = getelementptr inbounds double, double* %3, i64 %indvars.iv257
  %53 = load double, double* %arrayidx96, align 8, !tbaa !61
  %arrayidx98 = getelementptr inbounds double, double* %8, i64 %indvars.iv257
  %54 = load double, double* %arrayidx98, align 8, !tbaa !61
  %add99 = fadd fast double %54, %53
  store double %add99, double* %arrayidx96, align 8, !tbaa !61
  %sub104 = fsub fast double %lseb.0238, %54
  store double 0.000000e+00, double* %arrayidx98, align 8, !tbaa !61
  %cmp93 = icmp sgt i64 %indvars.iv257, 0
  %indvars.iv.next258 = add nsw i64 %indvars.iv257, -1
  br i1 %cmp93, label %for.body94, label %for.end109, !llvm.loop !121

for.end109:                                       ; preds = %for.body94
  br i1 %cmp255, label %for.body.i229, label %logsumexp_b.exit

for.body.i229:                                    ; preds = %for.body.i229, %for.end109
  %indvars.iv36.i = phi i64 [ %indvars.iv.next37.i, %for.body.i229 ], [ 0, %for.end109 ]
  %sum.035.i = phi double [ %add.i, %for.body.i229 ], [ 0.000000e+00, %for.end109 ]
  %arrayidx.i227 = getelementptr inbounds double, double* %7, i64 %indvars.iv36.i
  %55 = load double, double* %arrayidx.i227, align 8, !tbaa !61
  %56 = call fast double @llvm.exp.f64(double %55) #37
  %add.i = fadd fast double %56, %sum.035.i
  %indvars.iv.next37.i = add nuw nsw i64 %indvars.iv36.i, 1
  %exitcond.not.i228 = icmp eq i64 %indvars.iv.next37.i, %wide.trip.count.i225
  br i1 %exitcond.not.i228, label %for.body4.lr.ph.i, label %for.body.i229, !llvm.loop !98

for.body4.lr.ph.i:                                ; preds = %for.body.i229
  %phi.bo.i = fadd fast double %add.i, 2.000000e+00
  br label %for.body4.i

for.body4.i:                                      ; preds = %for.body4.i, %for.body4.lr.ph.i
  %indvars.iv.i230 = phi i64 [ %wide.trip.count.i225, %for.body4.lr.ph.i ], [ %indvars.iv.next.i231, %for.body4.i ]
  %indvars.iv.next.i231 = add nsw i64 %indvars.iv.i230, -1
  %arrayidx6.i = getelementptr inbounds double, double* %3, i64 %indvars.iv.next.i231
  %57 = load double, double* %arrayidx6.i, align 8, !tbaa !61
  %arrayidx8.i = getelementptr inbounds double, double* %7, i64 %indvars.iv.next.i231
  %58 = load double, double* %arrayidx8.i, align 8, !tbaa !61
  %59 = call fast double @llvm.exp.f64(double %58) #37
  %60 = fmul fast double %59, %sub104
  %61 = fdiv fast double %60, %phi.bo.i
  %add9.i = fadd fast double %61, %57
  store double %add9.i, double* %arrayidx6.i, align 8, !tbaa !61
  %cmp3.i = icmp sgt i64 %indvars.iv.i230, 1
  br i1 %cmp3.i, label %for.body4.i, label %logsumexp_b.exit, !llvm.loop !99

logsumexp_b.exit:                                 ; preds = %for.body4.i, %for.end109, %for.end90, %for.end90.thread
  call void @popReal8Array(double* %state, i32 %mul1)
  call void @popControl1b(i32* nonnull %branch)
  %62 = load i32, i32* %branch, align 4, !tbaa !47
  %cmp112 = icmp eq i32 %62, 1
  br i1 %cmp112, label %if.then113, label %if.end114

if.then113:                                       ; preds = %logsumexp_b.exit
  call void @popReal8Array(double* %7, i32 %b)
  br label %if.end114

if.end114:                                        ; preds = %if.then113, %logsumexp_b.exit
  %63 = load double*, double** %input, align 8, !tbaa !110
  call void @lstm_predict_b(i32 %l, i32 %b, double* %main_params, double* %main_paramsb, double* %extra_params, double* %extra_paramsb, double* %state, double* %2, double* %63, double* %7, double* %3)
  %add117 = sub i32 %t.2240, %b
  %cmp75 = icmp sgt i32 %add117, -1
  br i1 %cmp75, label %for.body76, label %for.end118, !llvm.loop !122

for.end118:                                       ; preds = %if.end114, %for.end66
  call void @free(i8* %call12) #37
  call void @free(i8* %call9) #37
  call void @free(i8* %call5) #37
  call void @free(i8* %call) #37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #37
  ret void
}

declare dso_local void @pushControl1b(i32) local_unnamed_addr #3

declare dso_local void @popControl1b(i32*) local_unnamed_addr #3

; Function Attrs: uwtable
define dso_local void @_ZN5adept21set_array_print_styleENS_15ArrayPrintStyleE(i32 %ps) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  switch i32 %ps, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb11
    i32 3, label %sw.bb23
    i32 2, label %sw.bb35
  ]

sw.bb:                                            ; preds = %entry
  %0 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i64 %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i64 1)
  %1 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i57 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i64 %1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %2 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i59 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i64 %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %3 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i61 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i64 %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %4 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i63 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i64 %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %5 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i65 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i64 %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i64 1)
  %6 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i67 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i64 %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1)
  %7 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i69 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i64 %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %8 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i71 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i64 %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %9 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i73 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i64 %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i64 0, i64 0), i64 12)
  %10 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i75 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i64 %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0), i64 7)
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  %11 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i77 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i64 %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i64 2)
  %12 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i79 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i64 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %13 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i81 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i64 %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %14 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i83 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i64 %14, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %15 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i85 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i64 %15, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %16 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i87 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i64 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i64 2)
  %17 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i89 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i64 %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1)
  %18 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i91 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i64 %18, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %19 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i93 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i64 %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %20 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i95 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i64 %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0), i64 5)
  %21 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i97 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i64 %21, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  br label %sw.epilog

sw.bb23:                                          ; preds = %entry
  %22 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i99 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i64 %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i64 1)
  %23 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i101 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i64 %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0), i64 1)
  %24 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i103 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i64 %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0), i64 1)
  %25 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i105 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i64 %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %26 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i107 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i64 %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.42, i64 0, i64 0), i64 0)
  %27 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i109 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i64 %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i64 1)
  %28 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i111 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i64 %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46, i64 0, i64 0), i64 2)
  %29 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i113 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i64 %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0), i64 1)
  %30 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i115 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i64 %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0), i64 1)
  %31 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i117 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i64 %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0), i64 1)
  %32 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i119 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i64 %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0), i64 1)
  br label %sw.epilog

sw.bb35:                                          ; preds = %entry
  %33 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i121 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i64 %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i64 2)
  %34 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i123 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i64 %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0), i64 1)
  %35 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i125 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i64 %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i64 1)
  %36 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i127 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i64 %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0), i64 1)
  %37 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i129 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i64 %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i64 1)
  %38 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i131 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i64 %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i64 2)
  %39 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i133 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i64 %39, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.33, i64 0, i64 0), i64 2)
  %40 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i135 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i64 %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i64 0, i64 0), i64 2)
  %41 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i137 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i64 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0), i64 1)
  %42 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i139 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i64 %42, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i64 0, i64 0), i64 12)
  %43 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i141 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i64 %43, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0), i64 7)
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %44 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #37
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %46 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %45, %union.anon** %46, align 8, !tbaa !14
  %47 = bitcast %union.anon* %45 to i8*
  %48 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #37
  store i64 32, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i142 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %sw.default
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i142, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %49 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %49, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(32) %call5.i.i.i9.i142, i8* nonnull align 1 dereferenceable(32) getelementptr inbounds ([33 x i8], [33 x i8]* @.str.47, i64 0, i64 0), i64 32, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %49, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %50 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %50, i64 %49
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #37
  %51 = bitcast i8* %exception to %"class.adept::invalid_operation"*
  invoke void @_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %51, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont49 unwind label %lpad48

invoke.cont49:                                    ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_operationE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad48

ehcleanup.thread:                                 ; preds = %sw.default
  %52 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #37
  br label %cleanup.action

lpad48:                                           ; preds = %invoke.cont49, %call5.i.i.i9.i.noexc
  %cleanup.isactive.0 = phi i1 [ false, %invoke.cont49 ], [ true, %call5.i.i.i9.i.noexc ]
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %54, %47
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i

if.then.i.i:                                      ; preds = %lpad48
  call void @_ZdlPv(i8* %54) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #37
  br i1 %cleanup.isactive.0, label %cleanup.action, label %eh.resume

ehcleanup:                                        ; preds = %lpad48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #37
  br i1 %cleanup.isactive.0, label %cleanup.action, label %eh.resume

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i, %ehcleanup.thread
  %.pn146 = phi { i8*, i32 } [ %52, %ehcleanup.thread ], [ %53, %ehcleanup ], [ %53, %if.then.i.i ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

sw.epilog:                                        ; preds = %sw.bb35, %sw.bb23, %sw.bb11, %sw.bb
  %.sink147 = phi i8 [ 1, %sw.bb35 ], [ 1, %sw.bb23 ], [ 0, %sw.bb11 ], [ 0, %sw.bb ]
  %.sink = phi i8 [ 1, %sw.bb35 ], [ 0, %sw.bb23 ], [ 0, %sw.bb11 ], [ 1, %sw.bb ]
  store i8 %.sink147, i8* @_ZN5adept8internal18array_print_indentE, align 1, !tbaa !123
  store i8 %.sink, i8* @_ZN5adept8internal22array_print_empty_rankE, align 1, !tbaa !123
  store i32 %ps, i32* @_ZN5adept8internal17array_print_styleE, align 4, !tbaa !125
  ret void

eh.resume:                                        ; preds = %cleanup.action, %ehcleanup, %if.then.i.i
  %.pn145 = phi { i8*, i32 } [ %53, %ehcleanup ], [ %.pn146, %cleanup.action ], [ %53, %if.then.i.i ]
  resume { i8*, i32 } %.pn145

unreachable:                                      ; preds = %invoke.cont49
  unreachable
}

declare dso_local i8* @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 27, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i15 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %lpad

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i15, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(27) %call5.i.i.i9.i15, i8* nonnull align 1 dereferenceable(27) getelementptr inbounds ([28 x i8], [28 x i8]* @.str.105, i64 0, i64 0), i64 27, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %6 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %6, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %7 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %message_.i.i = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %9 = bitcast %"class.std::__cxx11::basic_string"* %message_.i.i to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1, i32 1
  store i64 0, i64* %_M_string_length.i.i.i.i.i, align 8, !tbaa !19
  %.cast.i.i.i = bitcast %union.anon* %8 to i8*
  store i8 0, i8* %.cast.i.i.i, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept15array_exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_.i.i, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont4 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %10 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !127
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %11, %.cast.i.i.i
  br i1 %cmp.i.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %11) #37
  br label %_ZN5adept9exceptionD2Ev.exit.i

_ZN5adept9exceptionD2Ev.exit.i:                   ; preds = %if.then.i.i.i.i, %lpad.i
  %12 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %12) #37
  %13 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i18 = icmp eq i8* %13, %3
  br i1 %cmp.i.i.i18, label %ehcleanup, label %if.then.i.i19

invoke.cont4:                                     ; preds = %call5.i.i.i9.i.noexc
  %14 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %14, %3
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %invoke.cont4
  call void @_ZdlPv(i8* %14) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %invoke.cont4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept17invalid_operationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_.i.i, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  ret void

lpad:                                             ; preds = %entry
  %15 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

if.then.i.i19:                                    ; preds = %_ZN5adept9exceptionD2Ev.exit.i
  call void @_ZdlPv(i8* %13) #37
  br label %ehcleanup

ehcleanup:                                        ; preds = %if.then.i.i19, %lpad, %_ZN5adept9exceptionD2Ev.exit.i
  %.pn = phi { i8*, i32 } [ %15, %lpad ], [ %10, %_ZN5adept9exceptionD2Ev.exit.i ], [ %10, %if.then.i.i19 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

lpad7:                                            ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %16 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !127
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i.i = icmp eq i8* %17, %.cast.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lpad7
  call void @_ZdlPv(i8* %17) #37
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %if.then.i.i.i, %lpad7
  %18 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %18) #37
  br label %eh.resume

eh.resume:                                        ; preds = %_ZN5adept9exceptionD2Ev.exit, %ehcleanup
  %.pn12 = phi { i8*, i32 } [ %16, %_ZN5adept9exceptionD2Ev.exit ], [ %.pn, %ehcleanup ]
  resume { i8*, i32 } %.pn12
}

declare dso_local void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

declare dso_local void @__cxa_free_exception(i8*) local_unnamed_addr

; Function Attrs: nounwind uwtable
define dso_local void @_ZN5adept5StackD2Ev(%"class.adept::Stack"* nonnull readonly dereferenceable(149) %this) unnamed_addr #5 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %is_thread_unsafe_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 11
  %0 = load i8, i8* %is_thread_unsafe_, align 1, !tbaa !129, !range !134
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8, !tbaa !110
  %cmp = icmp eq %"class.adept::Stack"* %1, %this
  br i1 %cmp, label %if.then2, label %if.end6

if.then2:                                         ; preds = %if.then
  store %"class.adept::Stack"* null, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8, !tbaa !110
  br label %if.end6

if.else:                                          ; preds = %entry
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %cmp3 = icmp eq %"class.adept::Stack"* %2, %this
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.else
  store %"class.adept::Stack"* null, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.else, %if.then2, %if.then
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %3 = load double*, double** %gradient_, align 8, !tbaa !135
  %tobool7.not = icmp eq double* %3, null
  br i1 %tobool7.not, label %if.end10, label %delete.notnull

delete.notnull:                                   ; preds = %if.end6
  %4 = bitcast double* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #43
  br label %if.end10

if.end10:                                         ; preds = %delete.notnull, %if.end6
  %5 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0
  %6 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i64 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !136
  %cmp.not12.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %7, %6
  br i1 %cmp.not12.i.i, label %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit, label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %if.end10
  %__cur.013.i.i = phi %"struct.std::__detail::_List_node_base"* [ %8, %while.body.i.i ], [ %7, %if.end10 ]
  %_M_next4.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %__cur.013.i.i, i64 0, i32 0
  %8 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next4.i.i, align 8, !tbaa !136
  %9 = bitcast %"struct.std::__detail::_List_node_base"* %__cur.013.i.i to i8*
  tail call void @_ZdlPv(i8* %9) #37
  %cmp.not.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %8, %6
  br i1 %cmp.not.i.i, label %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit, label %while.body.i.i, !llvm.loop !138

_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit: ; preds = %while.body.i.i, %if.end10
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %tobool.not.i.i.i = icmp eq i32* %10, null
  br i1 %tobool.not.i.i.i, label %_ZNSt6vectorIiSaIiEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit
  %11 = bitcast i32* %10 to i8*
  tail call void @_ZdlPv(i8* nonnull %11) #37
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit

_ZNSt6vectorIiSaIiEED2Ev.exit:                    ; preds = %if.then.i.i.i, %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit
  %_M_start.i.i11 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %_M_start.i.i11, align 8, !tbaa !139
  %tobool.not.i.i.i12 = icmp eq i32* %12, null
  br i1 %tobool.not.i.i.i12, label %_ZNSt6vectorIiSaIiEED2Ev.exit14, label %if.then.i.i.i13

if.then.i.i.i13:                                  ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit
  %13 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #37
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit14

_ZNSt6vectorIiSaIiEED2Ev.exit14:                  ; preds = %if.then.i.i.i13, %_ZNSt6vectorIiSaIiEED2Ev.exit
  %statement_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %14 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.i, align 8, !tbaa !141
  %tobool.not.i = icmp eq %"struct.adept::internal::Statement"* %14, null
  br i1 %tobool.not.i, label %if.end.i, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit14
  %15 = bitcast %"struct.adept::internal::Statement"* %14 to i8*
  tail call void @_ZdaPv(i8* %15) #43
  br label %if.end.i

if.end.i:                                         ; preds = %delete.notnull.i, %_ZNSt6vectorIiSaIiEED2Ev.exit14
  %multiplier_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %16 = load double*, double** %multiplier_.i, align 8, !tbaa !143
  %tobool3.not.i = icmp eq double* %16, null
  br i1 %tobool3.not.i, label %if.end9.i, label %delete.notnull7.i

delete.notnull7.i:                                ; preds = %if.end.i
  %17 = bitcast double* %16 to i8*
  tail call void @_ZdaPv(i8* %17) #43
  br label %if.end9.i

if.end9.i:                                        ; preds = %delete.notnull7.i, %if.end.i
  %index_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %18 = load i32*, i32** %index_.i, align 8, !tbaa !144
  %tobool10.not.i = icmp eq i32* %18, null
  br i1 %tobool10.not.i, label %_ZN5adept8internal16StackStorageOrigD2Ev.exit, label %delete.notnull14.i

delete.notnull14.i:                               ; preds = %if.end9.i
  %19 = bitcast i32* %18 to i8*
  tail call void @_ZdaPv(i8* %19) #43
  br label %_ZN5adept8internal16StackStorageOrigD2Ev.exit

_ZN5adept8internal16StackStorageOrigD2Ev.exit:    ; preds = %delete.notnull14.i, %if.end9.i
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdaPv(i8*) local_unnamed_addr #23

; Function Attrs: nounwind uwtable
define dso_local void @_ZN5adept8internal16StackStorageOrigD2Ev(%"class.adept::internal::StackStorageOrig"* nocapture nonnull readonly dereferenceable(40) %this) unnamed_addr #5 align 2 {
entry:
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 0
  %0 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !141
  %tobool.not = icmp eq %"struct.adept::internal::Statement"* %0, null
  br i1 %tobool.not, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = bitcast %"struct.adept::internal::Statement"* %0 to i8*
  tail call void @_ZdaPv(i8* %1) #43
  br label %if.end

if.end:                                           ; preds = %delete.notnull, %entry
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 1
  %2 = load double*, double** %multiplier_, align 8, !tbaa !143
  %tobool3.not = icmp eq double* %2, null
  br i1 %tobool3.not, label %if.end9, label %delete.notnull7

delete.notnull7:                                  ; preds = %if.end
  %3 = bitcast double* %2 to i8*
  tail call void @_ZdaPv(i8* %3) #43
  br label %if.end9

if.end9:                                          ; preds = %delete.notnull7, %if.end
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 2
  %4 = load i32*, i32** %index_, align 8, !tbaa !144
  %tobool10.not = icmp eq i32* %4, null
  br i1 %tobool10.not, label %if.end16, label %delete.notnull14

delete.notnull14:                                 ; preds = %if.end9
  %5 = bitcast i32* %4 to i8*
  tail call void @_ZdaPv(i8* %5) #43
  br label %if.end16

if.end16:                                         ; preds = %delete.notnull14, %if.end9
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack8activateEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %is_thread_unsafe_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 11
  %0 = load i8, i8* %is_thread_unsafe_, align 1, !tbaa !129, !range !134
  %tobool = icmp ne i8 %0, 0
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8
  %tobool2 = icmp ne %"class.adept::Stack"* %1, null
  %or.cond = and i1 %tobool, %tobool2
  %cmp = icmp ne %"class.adept::Stack"* %1, %this
  %or.cond22 = and i1 %cmp, %or.cond
  br i1 %or.cond22, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tobool5.not = xor i1 %tobool, true
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8
  %tobool7 = icmp ne %"class.adept::Stack"* %2, null
  %or.cond23 = and i1 %tobool7, %tobool5.not
  %cmp9 = icmp ne %"class.adept::Stack"* %2, %this
  %or.cond24 = and i1 %cmp9, %or.cond23
  br i1 %or.cond24, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #37
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !14
  %6 = bitcast %union.anon* %4 to i8*
  %7 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #37
  store i64 77, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i26 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %if.then
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i26, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %8 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %8, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(77) %call5.i.i.i9.i26, i8* nonnull align 1 dereferenceable(77) getelementptr inbounds ([78 x i8], [78 x i8]* @.str.48, i64 0, i64 0), i64 77, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %8, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i26, i64 %8
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #37
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %9 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %10 = getelementptr inbounds i8, i8* %exception, i64 24
  %11 = bitcast i8* %message_.i.i.i to i8**
  store i8* %10, i8** %11, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i27 = getelementptr inbounds i8, i8* %exception, i64 16
  %12 = bitcast i8* %_M_string_length.i.i.i.i.i.i27 to i64*
  store i64 0, i64* %12, align 8, !tbaa !19
  store i8 0, i8* %10, align 1, !tbaa !21
  %13 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept20stack_already_activeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %9, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont12 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %14 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !127
  %15 = load i8*, i8** %11, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %15, %10
  br i1 %cmp.i.i.i.i.i, label %lpad11.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %15) #37
  br label %lpad11.body

invoke.cont12:                                    ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept20stack_already_activeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad11.body.thread

ehcleanup.thread:                                 ; preds = %if.then
  %16 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #37
  br label %cleanup.action

lpad11.body:                                      ; preds = %if.then.i.i.i.i, %lpad.i
  %17 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %17) #37
  %18 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %18, %6
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad11.body
  call void @_ZdlPv(i8* %18) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #37
  br label %cleanup.action

lpad11.body.thread:                               ; preds = %invoke.cont12
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i34 = icmp eq i8* %20, %6
  br i1 %cmp.i.i.i34, label %ehcleanup.thread39, label %if.then.i.i

ehcleanup.thread39:                               ; preds = %lpad11.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad11.body.thread
  call void @_ZdlPv(i8* %20) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad11.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn31 = phi { i8*, i32 } [ %16, %ehcleanup.thread ], [ %14, %ehcleanup ], [ %14, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

if.else:                                          ; preds = %lor.lhs.false
  %_ZN5adept21_stack_current_threadE.sink = select i1 %tobool, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %_ZN5adept21_stack_current_threadE.sink, align 8, !tbaa !110
  ret void

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread39
  %.pn30 = phi { i8*, i32 } [ %.pn31, %cleanup.action ], [ %19, %if.then.i.i ], [ %19, %ehcleanup.thread39 ]
  resume { i8*, i32 } %.pn30

unreachable:                                      ; preds = %invoke.cont12
  unreachable
}

; Function Attrs: norecurse nounwind readnone uwtable willreturn mustprogress
define dso_local i32 @_ZN5adept5Stack24set_max_jacobian_threadsEi(%"class.adept::Stack"* nocapture nonnull readnone dereferenceable(149) %this, i32 %n) local_unnamed_addr #24 align 2 {
entry:
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone uwtable willreturn mustprogress
define dso_local i32 @_ZNK5adept5Stack20max_jacobian_threadsEv(%"class.adept::Stack"* nocapture nonnull readnone dereferenceable(149) %this) local_unnamed_addr #24 align 2 {
entry:
  ret i32 1
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack15compute_adjointEv(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  %0 = load i8, i8* %gradients_initialized_.i, align 8, !tbaa !145, !range !134
  %tobool.i.not = icmp eq i8 %0, 0
  br i1 %tobool.i.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %1 = load i32, i32* %n_statements_, align 8, !tbaa !146
  %cmp59 = icmp sgt i32 %1, 1
  br i1 %cmp59, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %if.then
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %2 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !141
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %3 = load double*, double** %gradient_, align 8, !tbaa !135
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %4 = zext i32 %1 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end, %if.then
  ret void

for.body:                                         ; preds = %if.end, %for.body.lr.ph
  %indvars.iv62 = phi i64 [ %4, %for.body.lr.ph ], [ %indvars.iv.next63, %if.end ]
  %ist.0.in60 = phi i32 [ %1, %for.body.lr.ph ], [ %ist.061, %if.end ]
  %ist.061 = add nsw i32 %ist.0.in60, -1
  %idxprom = sext i32 %ist.061 to i64
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %2, i64 %idxprom, i32 0
  %5 = load i32, i32* %index, align 4, !tbaa !147
  %idxprom2 = sext i32 %5 to i64
  %arrayidx3 = getelementptr inbounds double, double* %3, i64 %idxprom2
  %6 = load double, double* %arrayidx3, align 8, !tbaa !61
  store double 0.000000e+00, double* %arrayidx3, align 8, !tbaa !61
  %cmp8 = fcmp fast une double %6, 0.000000e+00
  br i1 %cmp8, label %if.then9, label %if.end

if.then9:                                         ; preds = %for.body
  %sub11 = add nsw i32 %ist.0.in60, -2
  %7 = zext i32 %sub11 to i64
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %2, i64 %7, i32 1
  %8 = load i32, i32* %end_plus_one, align 4, !tbaa !149
  %end_plus_one15 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %2, i64 %idxprom, i32 1
  %9 = load i32, i32* %end_plus_one15, align 4, !tbaa !149
  %cmp1656 = icmp slt i32 %8, %9
  br i1 %cmp1656, label %for.body18.lr.ph, label %if.end

for.body18.lr.ph:                                 ; preds = %if.then9
  %10 = load double*, double** %multiplier_, align 8, !tbaa !143
  %11 = load i32*, i32** %index_, align 8, !tbaa !144
  %12 = sext i32 %8 to i64
  %13 = sext i32 %9 to i64
  br label %for.body18

for.body18:                                       ; preds = %for.body18, %for.body18.lr.ph
  %indvars.iv = phi i64 [ %12, %for.body18.lr.ph ], [ %indvars.iv.next, %for.body18 ]
  %arrayidx20 = getelementptr inbounds double, double* %10, i64 %indvars.iv
  %14 = load double, double* %arrayidx20, align 8, !tbaa !61
  %mul = fmul fast double %14, %6
  %arrayidx23 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv
  %15 = load i32, i32* %arrayidx23, align 4, !tbaa !47
  %idxprom24 = sext i32 %15 to i64
  %arrayidx25 = getelementptr inbounds double, double* %3, i64 %idxprom24
  %16 = load double, double* %arrayidx25, align 8, !tbaa !61
  %add = fadd fast double %16, %mul
  store double %add, double* %arrayidx25, align 8, !tbaa !61
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp16 = icmp slt i64 %indvars.iv.next, %13
  br i1 %cmp16, label %for.body18, label %if.end, !llvm.loop !150

if.end:                                           ; preds = %for.body18, %if.then9, %for.body
  %cmp = icmp sgt i64 %indvars.iv62, 2
  %indvars.iv.next63 = add nsw i64 %indvars.iv62, -1
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !151

if.else:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %17 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #37
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %19 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %18, %union.anon** %19, align 8, !tbaa !14
  %20 = bitcast %union.anon* %18 to i8*
  %21 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #37
  store i64 106, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i51 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %if.else
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i51, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %22 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %22, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(106) %call5.i.i.i9.i51, i8* nonnull align 1 dereferenceable(106) getelementptr inbounds ([107 x i8], [107 x i8]* @.str.49, i64 0, i64 0), i64 106, i1 false) #37
  %_M_string_length.i.i.i.i.i.i50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %22, i64* %_M_string_length.i.i.i.i.i.i50, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i51, i64 %22
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #37
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %23 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %24 = getelementptr inbounds i8, i8* %exception, i64 24
  %25 = bitcast i8* %message_.i.i.i to i8**
  store i8* %24, i8** %25, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %26 = bitcast i8* %_M_string_length.i.i.i.i.i.i to i64*
  store i64 0, i64* %26, align 8, !tbaa !19
  store i8 0, i8* %24, align 1, !tbaa !21
  %27 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept25gradients_not_initializedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %23, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont30 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %28 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8, !tbaa !127
  %29 = load i8*, i8** %25, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %29, %24
  br i1 %cmp.i.i.i.i.i, label %lpad29.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %29) #37
  br label %lpad29.body

invoke.cont30:                                    ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept25gradients_not_initializedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad29.body.thread

ehcleanup.thread:                                 ; preds = %if.else
  %30 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #37
  br label %cleanup.action

lpad29.body:                                      ; preds = %if.then.i.i.i.i, %lpad.i
  %31 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %31) #37
  %32 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %32, %20
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad29.body
  call void @_ZdlPv(i8* %32) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #37
  br label %cleanup.action

lpad29.body.thread:                               ; preds = %invoke.cont30
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i66 = icmp eq i8* %34, %20
  br i1 %cmp.i.i.i66, label %ehcleanup.thread71, label %if.then.i.i

ehcleanup.thread71:                               ; preds = %lpad29.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad29.body.thread
  call void @_ZdlPv(i8* %34) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad29.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn55 = phi { i8*, i32 } [ %30, %ehcleanup.thread ], [ %28, %ehcleanup ], [ %28, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread71
  %.pn54 = phi { i8*, i32 } [ %.pn55, %cleanup.action ], [ %33, %if.then.i.i ], [ %33, %ehcleanup.thread71 ]
  resume { i8*, i32 } %.pn54

unreachable:                                      ; preds = %invoke.cont30
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack22compute_tangent_linearEv(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  %0 = load i8, i8* %gradients_initialized_.i, align 8, !tbaa !145, !range !134
  %tobool.i.not = icmp eq i8 %0, 0
  br i1 %tobool.i.not, label %if.else, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %1 = load i32, i32* %n_statements_, align 8, !tbaa !146
  %cmp51 = icmp sgt i32 %1, 1
  br i1 %cmp51, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %2 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !141
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %3 = load double*, double** %gradient_, align 8, !tbaa !135
  %wide.trip.count = zext i32 %1 to i64
  %end_plus_one.phi.trans.insert = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %2, i64 0, i32 1
  %.pre = load i32, i32* %end_plus_one.phi.trans.insert, align 4, !tbaa !149
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup8, %for.cond.preheader
  ret void

for.body:                                         ; preds = %for.cond.cleanup8, %for.body.lr.ph
  %4 = phi i32 [ %.pre, %for.body.lr.ph ], [ %5, %for.cond.cleanup8 ]
  %indvars.iv53 = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next54, %for.cond.cleanup8 ]
  %end_plus_one6 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %2, i64 %indvars.iv53, i32 1
  %5 = load i32, i32* %end_plus_one6, align 4, !tbaa !149
  %cmp748 = icmp slt i32 %4, %5
  br i1 %cmp748, label %for.body9.lr.ph, label %for.cond.cleanup8

for.body9.lr.ph:                                  ; preds = %for.body
  %6 = load double*, double** %multiplier_, align 8, !tbaa !143
  %7 = load i32*, i32** %index_, align 8, !tbaa !144
  %8 = sext i32 %4 to i64
  %9 = sext i32 %5 to i64
  br label %for.body9

for.cond.cleanup8:                                ; preds = %for.body9, %for.body
  %a.0.lcssa = phi double [ 0.000000e+00, %for.body ], [ %add, %for.body9 ]
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %2, i64 %indvars.iv53, i32 0
  %10 = load i32, i32* %index, align 4, !tbaa !147
  %idxprom17 = sext i32 %10 to i64
  %arrayidx18 = getelementptr inbounds double, double* %3, i64 %idxprom17
  store double %a.0.lcssa, double* %arrayidx18, align 8, !tbaa !61
  %indvars.iv.next54 = add nuw nsw i64 %indvars.iv53, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next54, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !152

for.body9:                                        ; preds = %for.body9, %for.body9.lr.ph
  %indvars.iv = phi i64 [ %8, %for.body9.lr.ph ], [ %indvars.iv.next, %for.body9 ]
  %a.049 = phi double [ 0.000000e+00, %for.body9.lr.ph ], [ %add, %for.body9 ]
  %arrayidx11 = getelementptr inbounds double, double* %6, i64 %indvars.iv
  %11 = load double, double* %arrayidx11, align 8, !tbaa !61
  %arrayidx13 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv
  %12 = load i32, i32* %arrayidx13, align 4, !tbaa !47
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds double, double* %3, i64 %idxprom14
  %13 = load double, double* %arrayidx15, align 8, !tbaa !61
  %mul = fmul fast double %13, %11
  %add = fadd fast double %mul, %a.049
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp7 = icmp slt i64 %indvars.iv.next, %9
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8, !llvm.loop !153

if.else:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %14 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #37
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %16 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %15, %union.anon** %16, align 8, !tbaa !14
  %17 = bitcast %union.anon* %15 to i8*
  %18 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #37
  store i64 106, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i43 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %if.else
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i43, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %19 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %19, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(106) %call5.i.i.i9.i43, i8* nonnull align 1 dereferenceable(106) getelementptr inbounds ([107 x i8], [107 x i8]* @.str.49, i64 0, i64 0), i64 106, i1 false) #37
  %_M_string_length.i.i.i.i.i.i42 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %19, i64* %_M_string_length.i.i.i.i.i.i42, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i43, i64 %19
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #37
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %20 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %21 = getelementptr inbounds i8, i8* %exception, i64 24
  %22 = bitcast i8* %message_.i.i.i to i8**
  store i8* %21, i8** %22, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %23 = bitcast i8* %_M_string_length.i.i.i.i.i.i to i64*
  store i64 0, i64* %23, align 8, !tbaa !19
  store i8 0, i8* %21, align 1, !tbaa !21
  %24 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept25gradients_not_initializedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %20, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont24 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %25 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !tbaa !127
  %26 = load i8*, i8** %22, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %26, %21
  br i1 %cmp.i.i.i.i.i, label %lpad23.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %26) #37
  br label %lpad23.body

invoke.cont24:                                    ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept25gradients_not_initializedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad23.body.thread

ehcleanup.thread:                                 ; preds = %if.else
  %27 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #37
  br label %cleanup.action

lpad23.body:                                      ; preds = %if.then.i.i.i.i, %lpad.i
  %28 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %28) #37
  %29 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %29, %17
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad23.body
  call void @_ZdlPv(i8* %29) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #37
  br label %cleanup.action

lpad23.body.thread:                               ; preds = %invoke.cont24
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i58 = icmp eq i8* %31, %17
  br i1 %cmp.i.i.i58, label %ehcleanup.thread63, label %if.then.i.i

ehcleanup.thread63:                               ; preds = %lpad23.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad23.body.thread
  call void @_ZdlPv(i8* %31) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad23.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn47 = phi { i8*, i32 } [ %27, %ehcleanup.thread ], [ %25, %ehcleanup ], [ %25, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread63
  %.pn46 = phi { i8*, i32 } [ %.pn47, %cleanup.action ], [ %30, %if.then.i.i ], [ %30, %ehcleanup.thread63 ]
  resume { i8*, i32 } %.pn46

unreachable:                                      ; preds = %invoke.cont24
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local i32 @_ZN5adept5Stack21do_register_gradientsERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32* nocapture nonnull readonly align 4 dereferenceable(4) %n) local_unnamed_addr #5 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load i32, i32* %n, align 4, !tbaa !47
  %n_gradients_registered_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_, align 4, !tbaa !154
  %add = add nsw i32 %1, %0
  store i32 %add, i32* %n_gradients_registered_, align 4, !tbaa !154
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %2 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i, align 8, !tbaa !136
  %cmp.i = icmp eq %"struct.std::__detail::_List_node_base"* %3, %2
  %.pre = load i32, i32* %n, align 4, !tbaa !47
  br i1 %cmp.i, label %if.end49, label %for.body

for.body:                                         ; preds = %for.inc, %entry
  %it.sroa.0.0110 = phi %"struct.std::__detail::_List_node_base"* [ %10, %for.inc ], [ %3, %entry ]
  %_M_storage.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.0110, i64 1
  %4 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i to %"struct.adept::Gap"*
  %end = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %4, i64 0, i32 1
  %5 = load i32, i32* %end, align 4, !tbaa !155
  %add9 = add nsw i32 %5, 1
  %start = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i to i32*
  %6 = load i32, i32* %start, align 4, !tbaa !157
  %sub = sub i32 %add9, %6
  %cmp = icmp sgt i32 %sub, %.pre
  br i1 %cmp, label %if.then11, label %if.else

if.then11:                                        ; preds = %for.body
  %start.le = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i to i32*
  %add16 = add nsw i32 %.pre, %6
  store i32 %add16, i32* %start.le, align 4, !tbaa !157
  br label %return

if.else:                                          ; preds = %for.body
  %cmp17 = icmp eq i32 %sub, %.pre
  br i1 %cmp17, label %if.then18, label %for.inc

if.then18:                                        ; preds = %if.else
  %_M_node.i83 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i83, align 8, !tbaa !158
  %cmp.i85 = icmp eq %"struct.std::__detail::_List_node_base"* %7, %it.sroa.0.0110
  %_M_size.i.i.i77 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %_M_size.i.i.i77, align 8, !tbaa !159
  %sub.i.i.i78 = add i64 %8, -1
  store i64 %sub.i.i.i78, i64* %_M_size.i.i.i77, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %it.sroa.0.0110) #37
  %9 = bitcast %"struct.std::__detail::_List_node_base"* %it.sroa.0.0110 to i8*
  tail call void @_ZdlPv(i8* nonnull %9) #37
  br i1 %cmp.i85, label %if.then22, label %return

if.then22:                                        ; preds = %if.then18
  store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %_M_node.i83, align 8, !tbaa.struct !163
  br label %return

for.inc:                                          ; preds = %if.else
  %_M_next.i73 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.0110, i64 0, i32 0
  %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i73, align 8, !tbaa !136
  %cmp.i80.not = icmp eq %"struct.std::__detail::_List_node_base"* %10, %2
  br i1 %cmp.i80.not, label %if.end49, label %for.body, !llvm.loop !164

if.end49:                                         ; preds = %for.inc, %entry
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 6
  %11 = load i32, i32* %i_gradient_, align 8, !tbaa !165
  %add50 = add nsw i32 %11, %.pre
  store i32 %add50, i32* %i_gradient_, align 8, !tbaa !165
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %12 = load i32, i32* %max_gradient_, align 8, !tbaa !166
  %cmp52 = icmp sgt i32 %add50, %12
  br i1 %cmp52, label %if.then53, label %if.end56

if.then53:                                        ; preds = %if.end49
  store i32 %add50, i32* %max_gradient_, align 8, !tbaa !166
  br label %if.end56

if.end56:                                         ; preds = %if.then53, %if.end49
  %13 = load i32, i32* %n, align 4, !tbaa !47
  %sub58 = sub nsw i32 %add50, %13
  br label %return

return:                                           ; preds = %if.end56, %if.then22, %if.then18, %if.then11
  %retval.3 = phi i32 [ %sub58, %if.end56 ], [ %6, %if.then22 ], [ %6, %if.then11 ], [ %6, %if.then18 ]
  ret i32 %retval.3
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack27unregister_gradient_not_topERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32* nocapture nonnull readonly align 4 dereferenceable(4) %gradient_index) local_unnamed_addr #0 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %0 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i, align 8, !tbaa !136
  %cmp.i = icmp eq %"struct.std::__detail::_List_node_base"* %1, %0
  br i1 %cmp.i, label %if.then15.if.then62_crit_edge, label %land.rhs

land.rhs:                                         ; preds = %entry
  %_M_node.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %2 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i, align 8, !tbaa !158
  %cmp.i165.not = icmp eq %"struct.std::__detail::_List_node_base"* %2, %0
  %3 = bitcast %"struct.std::__detail::_List_node_base"* %2 to %"struct.std::_List_node"*
  br i1 %cmp.i165.not, label %for.body.lr.ph, label %if.then

if.then:                                          ; preds = %land.rhs
  %_M_storage.i.i177 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %2, i64 1
  %4 = load i32, i32* %gradient_index, align 4, !tbaa !47
  %start = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i177 to i32*
  %5 = load i32, i32* %start, align 4, !tbaa !157
  %sub = add nsw i32 %5, -1
  %cmp = icmp eq i32 %4, %sub
  br i1 %cmp, label %if.end75.thread248, label %if.else

if.end75.thread248:                               ; preds = %if.then
  store i32 %4, i32* %start, align 4, !tbaa !157
  br label %land.rhs77

if.else:                                          ; preds = %if.then
  %end = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %3, i64 0, i32 1, i32 0, i64 4
  %6 = bitcast i8* %end to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !155
  %add = add nsw i32 %7, 1
  %cmp9 = icmp eq i32 %4, %add
  br i1 %cmp9, label %if.then10, label %for.body.lr.ph

if.then10:                                        ; preds = %if.else
  store i32 %4, i32* %6, align 4, !tbaa !155
  br label %if.then113

if.then15.if.then62_crit_edge:                    ; preds = %entry
  %.pre = load i32, i32* %gradient_index, align 4, !tbaa !47
  br label %if.then62

for.body.lr.ph:                                   ; preds = %if.else, %land.rhs
  %8 = load i32, i32* %gradient_index, align 4, !tbaa !47
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %it.sroa.0.0263 = phi %"struct.std::__detail::_List_node_base"* [ %1, %for.body.lr.ph ], [ %20, %for.inc ]
  %_M_storage.i.i205 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.0263, i64 1
  %9 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i205 to %"struct.adept::Gap"*
  %end25 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %9, i64 0, i32 1
  %10 = load i32, i32* %end25, align 4, !tbaa !155
  %add26 = add nsw i32 %10, 1
  %cmp27.not = icmp sgt i32 %8, %add26
  br i1 %cmp27.not, label %for.inc, label %if.then28

if.then28:                                        ; preds = %for.body
  %11 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i205 to %"struct.adept::Gap"*
  %end25.le = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %11, i64 0, i32 1
  %start30 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i205 to i32*
  %12 = load i32, i32* %start30, align 4, !tbaa !157
  %sub31 = add nsw i32 %12, -1
  %cmp32 = icmp eq i32 %8, %sub31
  br i1 %cmp32, label %if.end75, label %if.else38

if.else38:                                        ; preds = %if.then28
  %cmp42 = icmp eq i32 %8, %add26
  br i1 %cmp42, label %if.then43, label %if.else48

if.then43:                                        ; preds = %if.else38
  store i32 %8, i32* %end25.le, align 4, !tbaa !155
  %most_recent_gap_47 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5
  %13 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_47 to i64*
  %14 = ptrtoint %"struct.std::__detail::_List_node_base"* %it.sroa.0.0263 to i64
  store i64 %14, i64* %13, align 8, !tbaa !110
  %15 = bitcast %"struct.std::__detail::_List_node_base"* %it.sroa.0.0263 to %"struct.std::_List_node"*
  br label %if.then113

if.else48:                                        ; preds = %if.else38
  %call2.i.i.i.i.i.i201 = tail call noalias nonnull i8* @_Znwm(i64 24) #41
  %_M_storage.i.i.i.i202 = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i201, i64 16
  %16 = bitcast i8* %_M_storage.i.i.i.i202 to i64*
  %ref.tmp51.sroa.4.0.insert.ext = zext i32 %8 to i64
  %ref.tmp51.sroa.4.0.insert.shift = shl nuw i64 %ref.tmp51.sroa.4.0.insert.ext, 32
  %ref.tmp51.sroa.0.0.insert.insert = or i64 %ref.tmp51.sroa.4.0.insert.shift, %ref.tmp51.sroa.4.0.insert.ext
  store i64 %ref.tmp51.sroa.0.0.insert.insert, i64* %16, align 4
  %17 = bitcast i8* %call2.i.i.i.i.i.i201 to %"struct.std::__detail::_List_node_base"*
  tail call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %17, %"struct.std::__detail::_List_node_base"* nonnull %it.sroa.0.0263) #37
  %_M_size.i.i.i203 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %_M_size.i.i.i203, align 8, !tbaa !159
  %add.i.i.i204 = add i64 %18, 1
  store i64 %add.i.i.i204, i64* %_M_size.i.i.i203, align 8, !tbaa !159
  %ref.tmp49.sroa.0.0..sroa_idx = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %19 = bitcast %"struct.std::__detail::_List_node_base"** %ref.tmp49.sroa.0.0..sroa_idx to i8**
  store i8* %call2.i.i.i.i.i.i201, i8** %19, align 8, !tbaa.struct !163
  br label %if.end147

for.inc:                                          ; preds = %for.body
  %_M_next.i200 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.0263, i64 0, i32 0
  %20 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i200, align 8, !tbaa !136
  %cmp.i197.not = icmp eq %"struct.std::__detail::_List_node_base"* %20, %0
  br i1 %cmp.i197.not, label %if.then62, label %for.body, !llvm.loop !167

if.then62:                                        ; preds = %for.inc, %if.then15.if.then62_crit_edge
  %21 = phi i32 [ %.pre, %if.then15.if.then62_crit_edge ], [ %8, %for.inc ]
  %call2.i.i.i.i.i.i = tail call noalias nonnull i8* @_Znwm(i64 24) #41
  %_M_storage.i.i.i.i = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i, i64 16
  %22 = bitcast i8* %_M_storage.i.i.i.i to i64*
  %ref.tmp64.sroa.4.0.insert.ext = zext i32 %21 to i64
  %ref.tmp64.sroa.4.0.insert.shift = shl nuw i64 %ref.tmp64.sroa.4.0.insert.ext, 32
  %ref.tmp64.sroa.0.0.insert.insert = or i64 %ref.tmp64.sroa.4.0.insert.shift, %ref.tmp64.sroa.4.0.insert.ext
  store i64 %ref.tmp64.sroa.0.0.insert.insert, i64* %22, align 4
  %23 = bitcast i8* %call2.i.i.i.i.i.i to %"struct.std::__detail::_List_node_base"*
  tail call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %23, %"struct.std::__detail::_List_node_base"* nonnull %0) #37
  %_M_size.i.i.i194 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %_M_size.i.i.i194, align 8, !tbaa !159
  %add.i.i.i = add i64 %24, 1
  store i64 %add.i.i.i, i64* %_M_size.i.i.i194, align 8, !tbaa !159
  %ref.tmp65.sroa.0.0..sroa_idx = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %_M_prev.i193 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_prev.i193, align 8, !tbaa !168
  store %"struct.std::__detail::_List_node_base"* %25, %"struct.std::__detail::_List_node_base"** %ref.tmp65.sroa.0.0..sroa_idx, align 8, !tbaa !158
  br label %if.end147

if.end75:                                         ; preds = %if.then28
  store i32 %8, i32* %start30, align 4, !tbaa !157
  %most_recent_gap_37 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5
  %26 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_37 to i64*
  %27 = ptrtoint %"struct.std::__detail::_List_node_base"* %it.sroa.0.0263 to i64
  store i64 %27, i64* %26, align 8, !tbaa !110
  %28 = bitcast %"struct.std::__detail::_List_node_base"* %it.sroa.0.0263 to %"struct.std::_List_node"*
  br label %land.rhs77

land.rhs77:                                       ; preds = %if.end75, %if.end75.thread248
  %29 = phi %"struct.std::_List_node"* [ %28, %if.end75 ], [ %3, %if.end75.thread248 ]
  %30 = phi %"struct.std::__detail::_List_node_base"* [ %it.sroa.0.0263, %if.end75 ], [ %2, %if.end75.thread248 ]
  %cmp.i189.not = icmp eq %"struct.std::__detail::_List_node_base"* %30, %1
  br i1 %cmp.i189.not, label %if.end147, label %if.then85

if.then85:                                        ; preds = %land.rhs77
  %_M_prev.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %30, i64 0, i32 1
  %31 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_prev.i, align 8, !tbaa !168
  %_M_storage.i.i184 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %31, i64 1
  %32 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i184 to %"struct.adept::Gap"*
  %end92 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %32, i64 0, i32 1
  %33 = load i32, i32* %end92, align 4, !tbaa !155
  %_M_storage.i.i183 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %29, i64 0, i32 1
  %start95 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %_M_storage.i.i183 to i32*
  %34 = load i32, i32* %start95, align 4, !tbaa !157
  %sub96 = add nsw i32 %34, -1
  %cmp97 = icmp eq i32 %33, %sub96
  br i1 %cmp97, label %if.then98, label %if.end147

if.then98:                                        ; preds = %if.then85
  %start100 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i184 to i32*
  %35 = load i32, i32* %start100, align 4, !tbaa !157
  store i32 %35, i32* %start95, align 4, !tbaa !157
  %_M_size.i.i.i175 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %_M_size.i.i.i175, align 8, !tbaa !159
  %sub.i.i.i176 = add i64 %36, -1
  store i64 %sub.i.i.i176, i64* %_M_size.i.i.i175, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %31) #37
  %37 = bitcast %"struct.std::__detail::_List_node_base"* %31 to i8*
  tail call void @_ZdlPv(i8* nonnull %37) #37
  br label %if.end147

if.then113:                                       ; preds = %if.then43, %if.then10
  %38 = phi %"struct.std::_List_node"* [ %3, %if.then10 ], [ %15, %if.then43 ]
  %.ptr = phi %"struct.std::__detail::_List_node_base"* [ %2, %if.then10 ], [ %it.sroa.0.0263, %if.then43 ]
  %_M_next.i173 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %.ptr, i64 0, i32 0
  %39 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i173, align 8, !tbaa !136
  %cmp.i172.not = icmp eq %"struct.std::__detail::_List_node_base"* %39, %0
  br i1 %cmp.i172.not, label %if.end147, label %land.rhs124

land.rhs124:                                      ; preds = %if.then113
  %_M_storage.i.i169 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %39, i64 1
  %start126 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i169 to i32*
  %40 = load i32, i32* %start126, align 4, !tbaa !157
  %end129 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %38, i64 0, i32 1, i32 0, i64 4
  %41 = bitcast i8* %end129 to i32*
  %42 = load i32, i32* %41, align 4, !tbaa !155
  %add130 = add nsw i32 %42, 1
  %cmp131 = icmp eq i32 %40, %add130
  br i1 %cmp131, label %if.then133, label %if.end147

if.then133:                                       ; preds = %land.rhs124
  %43 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i169 to %"struct.adept::Gap"*
  %end135 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %43, i64 0, i32 1
  %44 = load i32, i32* %end135, align 4, !tbaa !155
  store i32 %44, i32* %41, align 4, !tbaa !155
  %_M_size.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %_M_size.i.i.i, align 8, !tbaa !159
  %sub.i.i.i = add i64 %45, -1
  store i64 %sub.i.i.i, i64* %_M_size.i.i.i, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %39) #37
  %46 = bitcast %"struct.std::__detail::_List_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* nonnull %46) #37
  br label %if.end147

if.end147:                                        ; preds = %if.then133, %land.rhs124, %if.then113, %if.then98, %if.then85, %land.rhs77, %if.then62, %if.else48
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack20unregister_gradientsERKiS2_(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32* nocapture nonnull readonly align 4 dereferenceable(4) %gradient_index, i32* nocapture nonnull readonly align 4 dereferenceable(4) %n) local_unnamed_addr #0 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load i32, i32* %n, align 4, !tbaa !47
  %n_gradients_registered_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_, align 4, !tbaa !154
  %sub = sub nsw i32 %1, %0
  store i32 %sub, i32* %n_gradients_registered_, align 4, !tbaa !154
  %2 = load i32, i32* %gradient_index, align 4, !tbaa !47
  %3 = load i32, i32* %n, align 4, !tbaa !47
  %add = add nsw i32 %3, %2
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 6
  %4 = load i32, i32* %i_gradient_, align 8, !tbaa !165
  %cmp = icmp eq i32 %add, %4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 %2, i32* %i_gradient_, align 8, !tbaa !165
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i, align 8, !tbaa !136
  %cmp.i = icmp eq %"struct.std::__detail::_List_node_base"* %6, %5
  br i1 %cmp.i, label %if.end192, label %if.then4

if.then4:                                         ; preds = %if.then
  %_M_prev.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__detail::_List_node_base"** %_M_prev.i.i to %"struct.std::_List_node"**
  %8 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %7, align 8, !tbaa !168
  %end = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %8, i64 0, i32 1, i32 0, i64 4
  %9 = bitcast i8* %end to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !155
  %add8 = add nsw i32 %10, 1
  %cmp9 = icmp eq i32 %2, %add8
  %11 = getelementptr %"struct.std::_List_node", %"struct.std::_List_node"* %8, i64 0, i32 0
  br i1 %cmp9, label %if.then10, label %if.end192

if.then10:                                        ; preds = %if.then4
  %_M_storage.i.i.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %8, i64 0, i32 1
  %start = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %_M_storage.i.i.i to i32*
  %12 = load i32, i32* %start, align 4, !tbaa !157
  store i32 %12, i32* %i_gradient_, align 8, !tbaa !165
  %_M_node.i238 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %13 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i238, align 8, !tbaa !158
  %cmp.i240 = icmp eq %"struct.std::__detail::_List_node_base"* %13, %11
  br i1 %cmp.i240, label %if.then17, label %if.end

if.then17:                                        ; preds = %if.then10
  store %"struct.std::__detail::_List_node_base"* %5, %"struct.std::__detail::_List_node_base"** %_M_node.i238, align 8, !tbaa.struct !163
  br label %if.end

if.end:                                           ; preds = %if.then17, %if.then10
  %_M_size.i.i.i259 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %_M_size.i.i.i259, align 8, !tbaa !159
  %sub.i.i.i260 = add i64 %14, -1
  store i64 %sub.i.i.i260, i64* %_M_size.i.i.i259, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %11) #37
  %15 = bitcast %"struct.std::_List_node"* %8 to i8*
  tail call void @_ZdlPv(i8* nonnull %15) #37
  br label %if.end192

if.else:                                          ; preds = %entry
  %gap_list_25 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %16 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_25, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i261 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i261, align 8, !tbaa !136
  %cmp.i262 = icmp eq %"struct.std::__detail::_List_node_base"* %17, %16
  br i1 %cmp.i262, label %if.then104, label %land.rhs

land.rhs:                                         ; preds = %if.else
  %_M_node.i270 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %18 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i270, align 8, !tbaa !158
  %cmp.i272.not = icmp eq %"struct.std::__detail::_List_node_base"* %18, %16
  %19 = bitcast %"struct.std::__detail::_List_node_base"* %18 to %"struct.std::_List_node"*
  br i1 %cmp.i272.not, label %for.body.preheader, label %if.then33

if.then33:                                        ; preds = %land.rhs
  %_M_storage.i.i273 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %18, i64 1
  %start36 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i273 to i32*
  %20 = load i32, i32* %start36, align 4, !tbaa !157
  %sub37 = sub nsw i32 %20, %3
  %cmp38 = icmp eq i32 %2, %sub37
  br i1 %cmp38, label %if.end119.thread322, label %if.else42

if.end119.thread322:                              ; preds = %if.then33
  store i32 %2, i32* %start36, align 4, !tbaa !157
  br label %land.rhs121

if.else42:                                        ; preds = %if.then33
  %end43 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %19, i64 0, i32 1, i32 0, i64 4
  %21 = bitcast i8* %end43 to i32*
  %22 = load i32, i32* %21, align 4, !tbaa !155
  %add44 = add nsw i32 %22, 1
  %cmp45 = icmp eq i32 %2, %add44
  br i1 %cmp45, label %if.then46, label %for.body.preheader

for.body.preheader:                               ; preds = %if.else42, %land.rhs
  br label %for.body

if.then46:                                        ; preds = %if.else42
  %add48 = add nsw i32 %22, %3
  store i32 %add48, i32* %21, align 4, !tbaa !155
  br label %if.then157

for.body:                                         ; preds = %for.inc, %for.body.preheader
  %it54.sroa.0.0338 = phi %"struct.std::__detail::_List_node_base"* [ %34, %for.inc ], [ %17, %for.body.preheader ]
  %_M_storage.i.i282 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it54.sroa.0.0338, i64 1
  %23 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i282 to %"struct.adept::Gap"*
  %end64 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %23, i64 0, i32 1
  %24 = load i32, i32* %end64, align 4, !tbaa !155
  %add65 = add nsw i32 %24, 1
  %cmp66.not = icmp sgt i32 %2, %add65
  br i1 %cmp66.not, label %for.inc, label %if.then67

if.then67:                                        ; preds = %for.body
  %25 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i282 to %"struct.adept::Gap"*
  %end64.le = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %25, i64 0, i32 1
  %start69 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i282 to i32*
  %26 = load i32, i32* %start69, align 4, !tbaa !157
  %sub70 = sub nsw i32 %26, %3
  %cmp71 = icmp eq i32 %2, %sub70
  br i1 %cmp71, label %if.end119, label %if.else77

if.else77:                                        ; preds = %if.then67
  %cmp81 = icmp eq i32 %2, %add65
  br i1 %cmp81, label %if.then82, label %if.else87

if.then82:                                        ; preds = %if.else77
  %add85 = add nsw i32 %3, %24
  store i32 %add85, i32* %end64.le, align 4, !tbaa !155
  %most_recent_gap_86 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5
  %27 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_86 to i64*
  %28 = ptrtoint %"struct.std::__detail::_List_node_base"* %it54.sroa.0.0338 to i64
  store i64 %28, i64* %27, align 8, !tbaa !110
  %29 = bitcast %"struct.std::__detail::_List_node_base"* %it54.sroa.0.0338 to %"struct.std::_List_node"*
  br label %if.then157

if.else87:                                        ; preds = %if.else77
  %add91 = add i32 %2, -1
  %sub92 = add i32 %add91, %3
  %call2.i.i.i.i.i.i266 = tail call noalias nonnull i8* @_Znwm(i64 24) #41
  %_M_storage.i.i.i.i267 = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i266, i64 16
  %30 = bitcast i8* %_M_storage.i.i.i.i267 to i64*
  %ref.tmp90.sroa.4.0.insert.ext = zext i32 %sub92 to i64
  %ref.tmp90.sroa.4.0.insert.shift = shl nuw i64 %ref.tmp90.sroa.4.0.insert.ext, 32
  %ref.tmp90.sroa.0.0.insert.ext = zext i32 %2 to i64
  %ref.tmp90.sroa.0.0.insert.insert = or i64 %ref.tmp90.sroa.4.0.insert.shift, %ref.tmp90.sroa.0.0.insert.ext
  store i64 %ref.tmp90.sroa.0.0.insert.insert, i64* %30, align 4
  %31 = bitcast i8* %call2.i.i.i.i.i.i266 to %"struct.std::__detail::_List_node_base"*
  tail call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %31, %"struct.std::__detail::_List_node_base"* nonnull %it54.sroa.0.0338) #37
  %_M_size.i.i.i268 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %_M_size.i.i.i268, align 8, !tbaa !159
  %add.i.i.i269 = add i64 %32, 1
  store i64 %add.i.i.i269, i64* %_M_size.i.i.i268, align 8, !tbaa !159
  %ref.tmp88.sroa.0.0..sroa_idx = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %33 = bitcast %"struct.std::__detail::_List_node_base"** %ref.tmp88.sroa.0.0..sroa_idx to i8**
  store i8* %call2.i.i.i.i.i.i266, i8** %33, align 8, !tbaa.struct !163
  br label %if.end192

for.inc:                                          ; preds = %for.body
  %_M_next.i265 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it54.sroa.0.0338, i64 0, i32 0
  %34 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i265, align 8, !tbaa !136
  %cmp.i285.not = icmp eq %"struct.std::__detail::_List_node_base"* %34, %16
  br i1 %cmp.i285.not, label %if.then104, label %for.body, !llvm.loop !169

if.then104:                                       ; preds = %for.inc, %if.else
  %add107 = add i32 %2, -1
  %sub108 = add i32 %add107, %3
  %call2.i.i.i.i.i.i = tail call noalias nonnull i8* @_Znwm(i64 24) #41
  %_M_storage.i.i.i.i = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i, i64 16
  %35 = bitcast i8* %_M_storage.i.i.i.i to i64*
  %ref.tmp106.sroa.4.0.insert.ext = zext i32 %sub108 to i64
  %ref.tmp106.sroa.4.0.insert.shift = shl nuw i64 %ref.tmp106.sroa.4.0.insert.ext, 32
  %ref.tmp106.sroa.0.0.insert.ext = zext i32 %2 to i64
  %ref.tmp106.sroa.0.0.insert.insert = or i64 %ref.tmp106.sroa.4.0.insert.shift, %ref.tmp106.sroa.0.0.insert.ext
  store i64 %ref.tmp106.sroa.0.0.insert.insert, i64* %35, align 4
  %36 = bitcast i8* %call2.i.i.i.i.i.i to %"struct.std::__detail::_List_node_base"*
  tail call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %36, %"struct.std::__detail::_List_node_base"* nonnull %16) #37
  %_M_size.i.i.i257 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %_M_size.i.i.i257, align 8, !tbaa !159
  %add.i.i.i = add i64 %37, 1
  store i64 %add.i.i.i, i64* %_M_size.i.i.i257, align 8, !tbaa !159
  %ref.tmp109.sroa.0.0..sroa_idx = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %_M_prev.i256 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_prev.i256, align 8, !tbaa !168
  store %"struct.std::__detail::_List_node_base"* %38, %"struct.std::__detail::_List_node_base"** %ref.tmp109.sroa.0.0..sroa_idx, align 8, !tbaa !158
  br label %if.end192

if.end119:                                        ; preds = %if.then67
  store i32 %2, i32* %start69, align 4, !tbaa !157
  %most_recent_gap_76 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5
  %39 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_76 to i64*
  %40 = ptrtoint %"struct.std::__detail::_List_node_base"* %it54.sroa.0.0338 to i64
  store i64 %40, i64* %39, align 8, !tbaa !110
  %41 = bitcast %"struct.std::__detail::_List_node_base"* %it54.sroa.0.0338 to %"struct.std::_List_node"*
  br label %land.rhs121

land.rhs121:                                      ; preds = %if.end119, %if.end119.thread322
  %42 = phi %"struct.std::_List_node"* [ %41, %if.end119 ], [ %19, %if.end119.thread322 ]
  %43 = phi %"struct.std::__detail::_List_node_base"* [ %it54.sroa.0.0338, %if.end119 ], [ %18, %if.end119.thread322 ]
  %cmp.i252.not = icmp eq %"struct.std::__detail::_List_node_base"* %43, %17
  br i1 %cmp.i252.not, label %if.end192, label %if.then129

if.then129:                                       ; preds = %land.rhs121
  %_M_prev.i249 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %43, i64 0, i32 1
  %44 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_prev.i249, align 8, !tbaa !168
  %_M_storage.i.i246 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %44, i64 1
  %45 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i246 to %"struct.adept::Gap"*
  %end136 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %45, i64 0, i32 1
  %46 = load i32, i32* %end136, align 4, !tbaa !155
  %_M_storage.i.i245 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %42, i64 0, i32 1
  %start139 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %_M_storage.i.i245 to i32*
  %47 = load i32, i32* %start139, align 4, !tbaa !157
  %sub140 = add nsw i32 %47, -1
  %cmp141 = icmp eq i32 %46, %sub140
  br i1 %cmp141, label %if.then142, label %if.end192

if.then142:                                       ; preds = %if.then129
  %start144 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i246 to i32*
  %48 = load i32, i32* %start144, align 4, !tbaa !157
  store i32 %48, i32* %start139, align 4, !tbaa !157
  %_M_size.i.i.i234 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %_M_size.i.i.i234, align 8, !tbaa !159
  %sub.i.i.i235 = add i64 %49, -1
  store i64 %sub.i.i.i235, i64* %_M_size.i.i.i234, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %44) #37
  %50 = bitcast %"struct.std::__detail::_List_node_base"* %44 to i8*
  tail call void @_ZdlPv(i8* nonnull %50) #37
  br label %if.end192

if.then157:                                       ; preds = %if.then82, %if.then46
  %51 = phi %"struct.std::_List_node"* [ %19, %if.then46 ], [ %29, %if.then82 ]
  %.ptr = phi %"struct.std::__detail::_List_node_base"* [ %18, %if.then46 ], [ %it54.sroa.0.0338, %if.then82 ]
  %_M_next.i232 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %.ptr, i64 0, i32 0
  %52 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i232, align 8, !tbaa !136
  %cmp.i231.not = icmp eq %"struct.std::__detail::_List_node_base"* %52, %16
  br i1 %cmp.i231.not, label %if.end192, label %land.rhs168

land.rhs168:                                      ; preds = %if.then157
  %_M_storage.i.i229 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %52, i64 1
  %start170 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i229 to i32*
  %53 = load i32, i32* %start170, align 4, !tbaa !157
  %end173 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %51, i64 0, i32 1, i32 0, i64 4
  %54 = bitcast i8* %end173 to i32*
  %55 = load i32, i32* %54, align 4, !tbaa !155
  %add174 = add nsw i32 %55, 1
  %cmp175 = icmp eq i32 %53, %add174
  br i1 %cmp175, label %if.then177, label %if.end192

if.then177:                                       ; preds = %land.rhs168
  %56 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i229 to %"struct.adept::Gap"*
  %end179 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %56, i64 0, i32 1
  %57 = load i32, i32* %end179, align 4, !tbaa !155
  store i32 %57, i32* %54, align 4, !tbaa !155
  %_M_size.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %_M_size.i.i.i, align 8, !tbaa !159
  %sub.i.i.i = add i64 %58, -1
  store i64 %sub.i.i.i, i64* %_M_size.i.i.i, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %52) #37
  %59 = bitcast %"struct.std::__detail::_List_node_base"* %52 to i8*
  tail call void @_ZdlPv(i8* nonnull %59) #37
  br label %if.end192

if.end192:                                        ; preds = %if.then177, %land.rhs168, %if.then157, %if.then142, %if.then129, %land.rhs121, %if.then104, %if.else87, %if.end, %if.then4, %if.then
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZNK5adept5Stack16print_statementsERSo(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os) local_unnamed_addr #10 align 2 {
entry:
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %0 = load i32, i32* %n_statements_, align 8, !tbaa !146
  %cmp67 = icmp sgt i32 %0, 1
  br i1 %cmp67, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end, %entry
  ret void

for.body:                                         ; preds = %if.end, %for.body.lr.ph
  %indvars.iv69 = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next70, %if.end ]
  %1 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !141
  %2 = trunc i64 %indvars.iv69 to i32
  %call = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %2)
  %call1.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i64 4)
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 %indvars.iv69, i32 0
  %3 = load i32, i32* %index, align 4, !tbaa !147
  %call3 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call, i32 %3)
  %call1.i54 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call3, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i64 0, i64 0), i64 4)
  %4 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !141
  %5 = add nsw i64 %indvars.iv69, -1
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %4, i64 %5, i32 1
  %6 = load i32, i32* %end_plus_one, align 4, !tbaa !149
  %end_plus_one11 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %4, i64 %indvars.iv69, i32 1
  %7 = load i32, i32* %end_plus_one11, align 4, !tbaa !149
  %cmp12 = icmp eq i32 %6, %7
  br i1 %cmp12, label %if.then, label %for.cond19.preheader

for.cond19.preheader:                             ; preds = %for.body
  %end_plus_one20 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 %indvars.iv69, i32 1
  %8 = load i32, i32* %end_plus_one20, align 4, !tbaa !149
  %cmp2165 = icmp slt i32 %6, %8
  br i1 %cmp2165, label %for.body23.preheader, label %for.cond.cleanup22

for.body23.preheader:                             ; preds = %for.cond19.preheader
  %9 = sext i32 %6 to i64
  br label %for.body23

if.then:                                          ; preds = %for.body
  %call1.i56 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i64 0, i64 0), i64 2)
  br label %if.end

for.cond.cleanup22:                               ; preds = %for.body23, %for.cond19.preheader
  %call1.i58 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1)
  br label %if.end

for.body23:                                       ; preds = %for.body23, %for.body23.preheader
  %indvars.iv = phi i64 [ %9, %for.body23.preheader ], [ %indvars.iv.next, %for.body23 ]
  %call1.i60 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), i64 3)
  %10 = load double*, double** %multiplier_, align 8, !tbaa !143
  %arrayidx26 = getelementptr inbounds double, double* %10, i64 %indvars.iv
  %11 = load double, double* %arrayidx26, align 8, !tbaa !61
  %call.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, double %11)
  %call1.i62 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i64 3)
  %12 = load i32*, i32** %index_, align 8, !tbaa !144
  %arrayidx30 = getelementptr inbounds i32, i32* %12, i64 %indvars.iv
  %13 = load i32, i32* %arrayidx30, align 4, !tbaa !47
  %call31 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call.i, i32 %13)
  %call1.i64 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call31, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i64 0, i64 0), i64 1)
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %14 = load i32, i32* %end_plus_one20, align 4, !tbaa !149
  %15 = sext i32 %14 to i64
  %cmp21 = icmp slt i64 %indvars.iv.next, %15
  br i1 %cmp21, label %for.body23, label %for.cond.cleanup22, !llvm.loop !170

if.end:                                           ; preds = %for.cond.cleanup22, %if.then
  %indvars.iv.next70 = add nuw nsw i64 %indvars.iv69, 1
  %16 = load i32, i32* %n_statements_, align 8, !tbaa !146
  %17 = sext i32 %16 to i64
  %cmp = icmp slt i64 %indvars.iv.next70, %17
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !171
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: uwtable mustprogress
define dso_local zeroext i1 @_ZNK5adept5Stack15print_gradientsERSo(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os) local_unnamed_addr #10 align 2 {
entry:
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  %0 = load i8, i8* %gradients_initialized_.i, align 8, !tbaa !145, !range !134
  %tobool.i = icmp ne i8 %0, 0
  br i1 %tobool.i, label %for.cond.preheader, label %if.else

for.cond.preheader:                               ; preds = %entry
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %1 = load i32, i32* %max_gradient_, align 8, !tbaa !166
  %cmp32 = icmp sgt i32 %1, 0
  br i1 %cmp32, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end9, %for.cond.preheader
  %call1.i25 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1)
  br label %return

for.body:                                         ; preds = %if.end9, %for.body.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end9 ]
  %2 = trunc i64 %indvars.iv to i32
  %rem = urem i32 %2, 10
  %cmp2 = icmp eq i32 %rem, 0
  br i1 %cmp2, label %if.then3, label %if.end9

if.then3:                                         ; preds = %for.body
  %cmp4.not = icmp eq i64 %indvars.iv, 0
  br i1 %cmp4.not, label %if.end, label %if.then5

if.then5:                                         ; preds = %if.then3
  %call1.i27 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1)
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.then3
  %call7 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %2)
  %call1.i29 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call7, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0), i64 1)
  br label %if.end9

if.end9:                                          ; preds = %if.end, %for.body
  %call1.i31 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i64 1)
  %3 = load double*, double** %gradient_, align 8, !tbaa !135
  %arrayidx = getelementptr inbounds double, double* %3, i64 %indvars.iv
  %4 = load double, double* %arrayidx, align 8, !tbaa !61
  %call.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, double %4)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %max_gradient_, align 8, !tbaa !166
  %6 = sext i32 %5 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !172

if.else:                                          ; preds = %entry
  %call1.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([26 x i8], [26 x i8]* @.str.56, i64 0, i64 0), i64 25)
  br label %return

return:                                           ; preds = %if.else, %for.cond.cleanup
  ret i1 %tobool.i
}

; Function Attrs: uwtable
define dso_local void @_ZNK5adept5Stack10print_gapsERSo(%"class.adept::Stack"* nonnull dereferenceable(149) %this, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os) local_unnamed_addr #0 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %_M_next.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %it.sroa.0.022 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i, align 8, !tbaa !136
  %0 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0
  %cmp.i.not23 = icmp eq %"struct.std::__detail::_List_node_base"* %it.sroa.0.022, %0
  br i1 %cmp.i.not23, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body, %entry
  %it.sroa.0.024 = phi %"struct.std::__detail::_List_node_base"* [ %it.sroa.0.0, %for.body ], [ %it.sroa.0.022, %entry ]
  %_M_storage.i.i17 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.024, i64 1
  %1 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i17 to %"struct.adept::Gap"*
  %start = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i17 to i32*
  %2 = load i32, i32* %start, align 4, !tbaa !157
  %call7 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %2)
  %call1.i16 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call7, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.57, i64 0, i64 0), i64 1)
  %end = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %1, i64 0, i32 1
  %3 = load i32, i32* %end, align 4, !tbaa !155
  %call10 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call7, i32 %3)
  %call1.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call10, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i64 1)
  %_M_next.i14 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.024, i64 0, i32 0
  %it.sroa.0.0 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i14, align 8, !tbaa !136
  %cmp.i.not = icmp eq %"struct.std::__detail::_List_node_base"* %it.sroa.0.0, %0
  br i1 %cmp.i.not, label %for.cond.cleanup, label %for.body, !llvm.loop !173
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack20initialize_gradientsEv(%"class.adept::Stack"* nocapture nonnull dereferenceable(149) %this) local_unnamed_addr #10 align 2 {
entry:
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %0 = load i32, i32* %max_gradient_, align 8, !tbaa !166
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end15

if.then:                                          ; preds = %entry
  %n_allocated_gradients_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 7
  %1 = load i32, i32* %n_allocated_gradients_, align 4, !tbaa !174
  %cmp3 = icmp slt i32 %1, %0
  br i1 %cmp3, label %if.then4, label %for.body.lr.ph

if.then4:                                         ; preds = %if.then
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %2 = load double*, double** %gradient_, align 8, !tbaa !135
  %tobool.not = icmp eq double* %2, null
  br i1 %tobool.not, label %if.end11, label %delete.notnull

delete.notnull:                                   ; preds = %if.then4
  %3 = bitcast double* %2 to i8*
  tail call void @_ZdaPv(i8* %3) #43
  %.pre = load i32, i32* %max_gradient_, align 8, !tbaa !166
  br label %if.end11

if.end11:                                         ; preds = %delete.notnull, %if.then4
  %4 = phi i32 [ %.pre, %delete.notnull ], [ %0, %if.then4 ]
  %conv = sext i32 %4 to i64
  %5 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 8)
  %6 = extractvalue { i64, i1 } %5, 1
  %7 = extractvalue { i64, i1 } %5, 0
  %8 = select i1 %6, i64 -1, i64 %7
  %call = tail call noalias nonnull i8* @_Znam(i64 %8) #44
  %9 = bitcast double** %gradient_ to i8**
  store i8* %call, i8** %9, align 8, !tbaa !135
  store i32 %4, i32* %n_allocated_gradients_, align 4, !tbaa !174
  %cmp1320 = icmp sgt i32 %4, 0
  br i1 %cmp1320, label %for.body.lr.ph, label %if.end15

for.body.lr.ph:                                   ; preds = %if.end11, %if.then
  %10 = phi i32 [ %4, %if.end11 ], [ %0, %if.then ]
  %gradient_14 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %11 = bitcast double** %gradient_14 to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !135
  %13 = zext i32 %10 to i64
  %14 = shl nuw nsw i64 %13, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 %14, i1 false)
  br label %if.end15

if.end15:                                         ; preds = %for.body.lr.ph, %if.end11, %entry
  %gradients_initialized_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  store i8 1, i8* %gradients_initialized_, align 8, !tbaa !145
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #15

; Function Attrs: nobuiltin nofree allocsize(0)
declare dso_local nonnull i8* @_Znam(i64) local_unnamed_addr #25

; Function Attrs: uwtable
define dso_local void @_ZNK5adept5Stack12print_statusERSo(%"class.adept::Stack"* nonnull dereferenceable(149) %this, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os) local_unnamed_addr #0 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %call1.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([42 x i8], [42 x i8]* @.str.58, i64 0, i64 0), i64 41)
  %0 = bitcast %"class.adept::Stack"* %this to i8*
  %call.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIPKvEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i8* nonnull %0)
  %call1.i142 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.59, i64 0, i64 0), i64 3)
  %is_thread_unsafe_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 11
  %1 = load i8, i8* %is_thread_unsafe_, align 1, !tbaa !129, !range !134
  %tobool = icmp ne i8 %1, 0
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8
  %cmp = icmp ne %"class.adept::Stack"* %2, %this
  %3 = or i1 %tobool, %cmp
  br i1 %3, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call1.i144 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([37 x i8], [37 x i8]* @.str.60, i64 0, i64 0), i64 36)
  br label %if.end13

if.else:                                          ; preds = %entry
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8
  %cmp8 = icmp eq %"class.adept::Stack"* %4, %this
  %or.cond110 = and i1 %tobool, %cmp8
  br i1 %or.cond110, label %if.then9, label %if.else11

if.then9:                                         ; preds = %if.else
  %call1.i146 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([39 x i8], [39 x i8]* @.str.61, i64 0, i64 0), i64 38)
  br label %if.end13

if.else11:                                        ; preds = %if.else
  %call1.i148 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.62, i64 0, i64 0), i64 22)
  br label %if.end13

if.end13:                                         ; preds = %if.else11, %if.then9, %if.then
  %call1.i150 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([22 x i8], [22 x i8]* @.str.63, i64 0, i64 0), i64 21)
  %is_recording_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 12
  %5 = load i8, i8* %is_recording_, align 2, !tbaa !175, !range !134
  %tobool15.not = icmp eq i8 %5, 0
  br i1 %tobool15.not, label %if.else18, label %if.then16

if.then16:                                        ; preds = %if.end13
  %call1.i152 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.64, i64 0, i64 0), i64 22)
  br label %if.end20

if.else18:                                        ; preds = %if.end13
  %call1.i154 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0), i64 26)
  br label %if.end20

if.end20:                                         ; preds = %if.else18, %if.then16
  %call1.i156 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.66, i64 0, i64 0), i64 6)
  %n_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %6 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %sub = add nsw i32 %6, -1
  %call23 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %sub)
  %call1.i158 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call23, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.67, i64 0, i64 0), i64 13)
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 4
  %7 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %call26 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call23, i32 %7)
  %call1.i160 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call26, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i64 0, i64 0), i64 11)
  %call1.i162 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.69, i64 0, i64 0), i64 5)
  %n_operations_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 5
  %8 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %call30 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %8)
  %call1.i164 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call30, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.70, i64 0, i64 0), i64 13)
  %n_allocated_operations_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 6
  %9 = load i32, i32* %n_allocated_operations_.i, align 4, !tbaa !178
  %call33 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call30, i32 %9)
  %call1.i166 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call33, i8* nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.71, i64 0, i64 0), i64 12)
  %call1.i168 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.66, i64 0, i64 0), i64 6)
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 9
  %10 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %call37 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %10)
  %call1.i170 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call37, i8* nonnull getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0), i64 32)
  %call1.i172 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.73, i64 0, i64 0), i64 15)
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %11 = load i32, i32* %max_gradient_.i, align 8, !tbaa !166
  %call41 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %11)
  %call1.i174 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call41, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.74, i64 0, i64 0), i64 23)
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 6
  %12 = load i32, i32* %i_gradient_.i, align 8, !tbaa !165
  %call44 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call41, i32 %12)
  %call1.i176 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call44, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i64 0, i64 0), i64 2)
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %13 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i, align 8, !tbaa !136
  %cmp.i = icmp eq %"struct.std::__detail::_List_node_base"* %14, %13
  br i1 %cmp.i, label %if.then47, label %if.else49

if.then47:                                        ; preds = %if.end20
  %call1.i178 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([33 x i8], [33 x i8]* @.str.76, i64 0, i64 0), i64 32)
  br label %if.end56

if.else49:                                        ; preds = %if.end20
  %call1.i180 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([25 x i8], [25 x i8]* @.str.77, i64 0, i64 0), i64 24)
  %_M_size.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %_M_size.i.i.i, align 8, !tbaa !159
  %call.i181 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i64 %15)
  %call1.i183 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i181, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.78, i64 0, i64 0), i64 7)
  %it.sroa.0.022.i = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i, align 8, !tbaa !136
  %cmp.i.not23.i = icmp eq %"struct.std::__detail::_List_node_base"* %it.sroa.0.022.i, %13
  br i1 %cmp.i.not23.i, label %_ZNK5adept5Stack10print_gapsERSo.exit, label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %if.else49
  %it.sroa.0.024.i = phi %"struct.std::__detail::_List_node_base"* [ %it.sroa.0.0.i, %for.body.i ], [ %it.sroa.0.022.i, %if.else49 ]
  %_M_storage.i.i17.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.024.i, i64 1
  %16 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i17.i to %"struct.adept::Gap"*
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i17.i to i32*
  %17 = load i32, i32* %start.i, align 4, !tbaa !157
  %call7.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %17)
  %call1.i16.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call7.i, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.57, i64 0, i64 0), i64 1)
  %end.i = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %16, i64 0, i32 1
  %18 = load i32, i32* %end.i, align 4, !tbaa !155
  %call10.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call7.i, i32 %18)
  %call1.i.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call10.i, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i64 1)
  %_M_next.i14.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.024.i, i64 0, i32 0
  %it.sroa.0.0.i = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i14.i, align 8, !tbaa !136
  %cmp.i.not.i = icmp eq %"struct.std::__detail::_List_node_base"* %it.sroa.0.0.i, %13
  br i1 %cmp.i.not.i, label %_ZNK5adept5Stack10print_gapsERSo.exit, label %for.body.i, !llvm.loop !173

_ZNK5adept5Stack10print_gapsERSo.exit:            ; preds = %for.body.i, %if.else49
  %call1.i185 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.75, i64 0, i64 0), i64 2)
  br label %if.end56

if.end56:                                         ; preds = %_ZNK5adept5Stack10print_gapsERSo.exit, %if.then47
  %call1.i187 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.79, i64 0, i64 0), i64 23)
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  %19 = load i8, i8* %gradients_initialized_.i, align 8, !tbaa !145, !range !134
  %tobool.i.not = icmp eq i8 %19, 0
  br i1 %tobool.i.not, label %if.else67, label %if.then59

if.then59:                                        ; preds = %if.end56
  %call1.i189 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.66, i64 0, i64 0), i64 6)
  %20 = load i32, i32* %max_gradient_.i, align 8, !tbaa !166
  %call62 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %20)
  %call1.i192 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call62, i8* nonnull getelementptr inbounds ([22 x i8], [22 x i8]* @.str.80, i64 0, i64 0), i64 21)
  br label %if.end72

if.else67:                                        ; preds = %if.end56
  %call1.i196 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([29 x i8], [29 x i8]* @.str.81, i64 0, i64 0), i64 28)
  br label %if.end72

if.end72:                                         ; preds = %if.else67, %if.then59
  %os.sink = phi %"class.std::basic_ostream"* [ %os, %if.else67 ], [ %call62, %if.then59 ]
  %n_allocated_gradients_.i197 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 7
  %21 = load i32, i32* %n_allocated_gradients_.i197, align 4, !tbaa !174
  %call70 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os.sink, i32 %21)
  %call1.i199 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call70, i8* nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.71, i64 0, i64 0), i64 12)
  %call1.i201 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([22 x i8], [22 x i8]* @.str.82, i64 0, i64 0), i64 21)
  %_M_finish.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %22 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !179
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %22 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %23 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %24 = lshr exact i64 %sub.ptr.sub.i.i, 2
  %conv.i = trunc i64 %24 to i32
  %call75 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %conv.i)
  %call1.i203 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call75, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i64 0, i64 0), i64 1)
  %_M_finish.i.i204 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %25 = load i32*, i32** %_M_finish.i.i204, align 8, !tbaa !179
  %_M_start.i.i205 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %26 = load i32*, i32** %_M_start.i.i205, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i206 = ptrtoint i32* %25 to i64
  %sub.ptr.rhs.cast.i.i207 = ptrtoint i32* %26 to i64
  %sub.ptr.sub.i.i208 = sub i64 %sub.ptr.lhs.cast.i.i206, %sub.ptr.rhs.cast.i.i207
  %27 = lshr exact i64 %sub.ptr.sub.i.i208, 2
  %conv.i209 = trunc i64 %27 to i32
  %call78 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call75, i32 %conv.i209)
  %call1.i211 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call78, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1)
  %28 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !179
  %29 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i214 = ptrtoint i32* %28 to i64
  %sub.ptr.rhs.cast.i.i215 = ptrtoint i32* %29 to i64
  %sub.ptr.sub.i.i216 = sub i64 %sub.ptr.lhs.cast.i.i214, %sub.ptr.rhs.cast.i.i215
  %30 = lshr exact i64 %sub.ptr.sub.i.i216, 2
  %conv.i217 = trunc i64 %30 to i32
  %cmp81 = icmp slt i32 %conv.i217, 11
  br i1 %cmp81, label %land.lhs.true82, label %if.end108

land.lhs.true82:                                  ; preds = %if.end72
  %31 = load i32*, i32** %_M_finish.i.i204, align 8, !tbaa !179
  %32 = load i32*, i32** %_M_start.i.i205, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i220 = ptrtoint i32* %31 to i64
  %sub.ptr.rhs.cast.i.i221 = ptrtoint i32* %32 to i64
  %sub.ptr.sub.i.i222 = sub i64 %sub.ptr.lhs.cast.i.i220, %sub.ptr.rhs.cast.i.i221
  %33 = lshr exact i64 %sub.ptr.sub.i.i222, 2
  %conv.i223 = trunc i64 %33 to i32
  %cmp84 = icmp slt i32 %conv.i223, 11
  br i1 %cmp84, label %if.then85, label %if.end108

if.then85:                                        ; preds = %land.lhs.true82
  %call1.i225 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.84, i64 0, i64 0), i64 26)
  %34 = load i32*, i32** %_M_finish.i.i204, align 8, !tbaa !179
  %35 = load i32*, i32** %_M_start.i.i205, align 8, !tbaa !139
  %cmp88255.not = icmp eq i32* %34, %35
  br i1 %cmp88255.not, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.then85
  %call1.i227 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([28 x i8], [28 x i8]* @.str.85, i64 0, i64 0), i64 27)
  %36 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !179
  %37 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %cmp97249.not = icmp eq i32* %36, %37
  br i1 %cmp97249.not, label %for.cond.cleanup98, label %for.body99

for.body:                                         ; preds = %for.body, %if.then85
  %i.0256 = phi i64 [ %inc, %for.body ], [ 0, %if.then85 ]
  %call1.i229 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i64 1)
  %38 = load i32*, i32** %_M_start.i.i205, align 8, !tbaa !139
  %add.ptr.i = getelementptr inbounds i32, i32* %38, i64 %i.0256
  %39 = load i32, i32* %add.ptr.i, align 4, !tbaa !47
  %call92 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %39)
  %inc = add nuw i64 %i.0256, 1
  %40 = load i32*, i32** %_M_finish.i.i204, align 8, !tbaa !179
  %41 = load i32*, i32** %_M_start.i.i205, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i = ptrtoint i32* %40 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %41 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %cmp88 = icmp ult i64 %inc, %sub.ptr.div.i
  br i1 %cmp88, label %for.body, label %for.cond.cleanup, !llvm.loop !180

for.cond.cleanup98:                               ; preds = %for.body99, %for.cond.cleanup
  %call1.i238 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1)
  br label %if.end108

for.body99:                                       ; preds = %for.body99, %for.cond.cleanup
  %i94.0250 = phi i64 [ %inc105, %for.body99 ], [ 0, %for.cond.cleanup ]
  %call1.i240 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0), i64 1)
  %42 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %add.ptr.i242 = getelementptr inbounds i32, i32* %42, i64 %i94.0250
  %43 = load i32, i32* %add.ptr.i242, align 4, !tbaa !47
  %call103 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %43)
  %inc105 = add nuw i64 %i94.0250, 1
  %44 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !179
  %45 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i233 = ptrtoint i32* %44 to i64
  %sub.ptr.rhs.cast.i234 = ptrtoint i32* %45 to i64
  %sub.ptr.sub.i235 = sub i64 %sub.ptr.lhs.cast.i233, %sub.ptr.rhs.cast.i234
  %sub.ptr.div.i236 = ashr exact i64 %sub.ptr.sub.i235, 2
  %cmp97 = icmp ult i64 %inc105, %sub.ptr.div.i236
  br i1 %cmp97, label %for.body99, label %for.cond.cleanup98, !llvm.loop !181

if.end108:                                        ; preds = %for.cond.cleanup98, %land.lhs.true82, %if.end72
  %call1.i244 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([51 x i8], [51 x i8]* @.str.86, i64 0, i64 0), i64 50)
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nocapture nonnull dereferenceable(40) %this, i32 %min) local_unnamed_addr #10 align 2 {
entry:
  %n_allocated_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 6
  %0 = load i32, i32* %n_allocated_operations_, align 4, !tbaa !178
  %mul = shl nsw i32 %0, 1
  %cmp = icmp sgt i32 %min, 0
  %add = add nsw i32 %0, %min
  %cmp3 = icmp slt i32 %mul, %add
  %or.cond = and i1 %cmp, %cmp3
  %add4 = select i1 %or.cond, i32 %min, i32 0
  %new_size.0 = add nsw i32 %add4, %mul
  %conv = sext i32 %new_size.0 to i64
  %1 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 8)
  %2 = extractvalue { i64, i1 } %1, 1
  %3 = extractvalue { i64, i1 } %1, 0
  %4 = select i1 %2, i64 -1, i64 %3
  %call = tail call noalias nonnull i8* @_Znam(i64 %4) #44
  %5 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 4)
  %6 = extractvalue { i64, i1 } %5, 1
  %7 = extractvalue { i64, i1 } %5, 0
  %8 = select i1 %6, i64 -1, i64 %7
  %call6 = tail call noalias nonnull i8* @_Znam(i64 %8) #44
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 1
  %9 = bitcast double** %multiplier_ to i8**
  %10 = load i8*, i8** %9, align 8, !tbaa !143
  %n_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 5
  %11 = load i32, i32* %n_operations_, align 8, !tbaa !177
  %conv7 = sext i32 %11 to i64
  %mul8 = shl nsw i64 %conv7, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call, i8* align 8 %10, i64 %mul8, i1 false)
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 2
  %12 = bitcast i32** %index_ to i8**
  %13 = load i8*, i8** %12, align 8, !tbaa !144
  %mul11 = shl nsw i64 %conv7, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call6, i8* align 4 %13, i64 %mul11, i1 false)
  %isnull = icmp eq i8* %10, null
  %14 = bitcast i8* %13 to i32*
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  tail call void @_ZdaPv(i8* nonnull %10) #43
  %.pr = load i32*, i32** %index_, align 8, !tbaa !144
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  %15 = phi i32* [ %.pr, %delete.notnull ], [ %14, %entry ]
  %isnull14 = icmp eq i32* %15, null
  br i1 %isnull14, label %delete.end16, label %delete.notnull15

delete.notnull15:                                 ; preds = %delete.end
  %16 = bitcast i32* %15 to i8*
  tail call void @_ZdaPv(i8* %16) #43
  br label %delete.end16

delete.end16:                                     ; preds = %delete.notnull15, %delete.end
  store i8* %call, i8** %9, align 8, !tbaa !143
  store i8* %call6, i8** %12, align 8, !tbaa !144
  store i32 %new_size.0, i32* %n_allocated_operations_, align 4, !tbaa !178
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi(%"class.adept::internal::StackStorageOrig"* nocapture nonnull dereferenceable(40) %this, i32 %min) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %n_allocated_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 4
  %0 = load i32, i32* %n_allocated_statements_, align 4, !tbaa !176
  %mul = shl nsw i32 %0, 1
  %cmp = icmp sgt i32 %min, 0
  %add = add nsw i32 %0, %min
  %cmp3 = icmp slt i32 %mul, %add
  %or.cond = and i1 %cmp, %cmp3
  %add4 = select i1 %or.cond, i32 %min, i32 0
  %new_size.0 = add nsw i32 %add4, %mul
  %conv = sext i32 %new_size.0 to i64
  %1 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 8)
  %2 = extractvalue { i64, i1 } %1, 1
  %3 = extractvalue { i64, i1 } %1, 0
  %4 = select i1 %2, i64 -1, i64 %3
  %call = tail call noalias nonnull i8* @_Znam(i64 %4) #44
  %5 = bitcast %"class.adept::internal::StackStorageOrig"* %this to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !141
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 3
  %7 = load i32, i32* %n_statements_, align 8, !tbaa !146
  %conv5 = sext i32 %7 to i64
  %mul6 = shl nsw i64 %conv5, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call, i8* align 4 %6, i64 %mul6, i1 false)
  %isnull = icmp eq i8* %6, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  tail call void @_ZdaPv(i8* nonnull %6) #43
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  store i8* %call, i8** %5, align 8, !tbaa !141
  store i32 %new_size.0, i32* %n_allocated_statements_, align 4, !tbaa !176
  ret void
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_gemmEbcciiidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %TransA, i8 signext %TransB, i32 %M, i32 %N, i32 %K, double %alpha, double* nocapture readnone %A, i32 %lda, double* nocapture readnone %B, i32 %ldb, double %beta, double* nocapture readnone %C, i32 %ldc) local_unnamed_addr #26 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 73, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(73) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(73) getelementptr inbounds ([74 x i8], [74 x i8]* @.str.87, i64 0, i64 0), i64 73, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept9exceptionD2Ev(%"class.adept::exception"* nonnull dereferenceable(40) %this) unnamed_addr #5 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !127
  %_M_p.i.i.i.i = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 1, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %entry
  %3 = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #37
  ret void
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_gemmEbcciiifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %TransA, i8 signext %TransB, i32 %M, i32 %N, i32 %K, float %alpha, float* nocapture readnone %A, i32 %lda, float* nocapture readnone %B, i32 %ldb, float %beta, float* nocapture readnone %C, i32 %ldc) local_unnamed_addr #26 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 73, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(73) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(73) getelementptr inbounds ([74 x i8], [74 x i8]* @.str.87, i64 0, i64 0), i64 73, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_gemvEbciidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %TransA, i32 %M, i32 %N, double %alpha, double* nocapture readnone %A, i32 %lda, double* nocapture readnone %X, i32 %incX, double %beta, double* nocapture readnone %Y, i32 %incY) local_unnamed_addr #26 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 73, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(73) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(73) getelementptr inbounds ([74 x i8], [74 x i8]* @.str.88, i64 0, i64 0), i64 73, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_gemvEbciifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %TransA, i32 %M, i32 %N, float %alpha, float* nocapture readnone %A, i32 %lda, float* nocapture readnone %X, i32 %incX, float %beta, float* nocapture readnone %Y, i32 %incY) local_unnamed_addr #26 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 73, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(73) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(73) getelementptr inbounds ([74 x i8], [74 x i8]* @.str.88, i64 0, i64 0), i64 73, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_symmEbcciidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %Side, i8 signext %Uplo, i32 %M, i32 %N, double %alpha, double* nocapture readnone %A, i32 %lda, double* nocapture readnone %B, i32 %ldb, double %beta, double* nocapture readnone %C, i32 %ldc) local_unnamed_addr #26 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 83, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(83) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(83) getelementptr inbounds ([84 x i8], [84 x i8]* @.str.89, i64 0, i64 0), i64 83, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_symmEbcciifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %Side, i8 signext %Uplo, i32 %M, i32 %N, float %alpha, float* nocapture readnone %A, i32 %lda, float* nocapture readnone %B, i32 %ldb, float %beta, float* nocapture readnone %C, i32 %ldc) local_unnamed_addr #26 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 83, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(83) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(83) getelementptr inbounds ([84 x i8], [84 x i8]* @.str.89, i64 0, i64 0), i64 83, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_symvEbcidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %Uplo, i32 %N, double %alpha, double* nocapture readnone %A, i32 %lda, double* nocapture readnone %X, i32 %incX, double %beta, double* nocapture readnone %Y, i32 %incY) local_unnamed_addr #26 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 83, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(83) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(83) getelementptr inbounds ([84 x i8], [84 x i8]* @.str.90, i64 0, i64 0), i64 83, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_symvEbcifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %Uplo, i32 %N, float %alpha, float* nocapture readnone %A, i32 %lda, float* nocapture readnone %X, i32 %incX, float %beta, float* nocapture readnone %Y, i32 %incY) local_unnamed_addr #26 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 83, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(83) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(83) getelementptr inbounds ([84 x i8], [84 x i8]* @.str.90, i64 0, i64 0), i64 83, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_gbmvEbciiiidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %TransA, i32 %M, i32 %N, i32 %KL, i32 %KU, double %alpha, double* nocapture readnone %A, i32 %lda, double* nocapture readnone %X, i32 %incX, double %beta, double* nocapture readnone %Y, i32 %incY) local_unnamed_addr #26 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 78, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(78) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(78) getelementptr inbounds ([79 x i8], [79 x i8]* @.str.91, i64 0, i64 0), i64 78, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_gbmvEbciiiifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %TransA, i32 %M, i32 %N, i32 %KL, i32 %KU, float %alpha, float* nocapture readnone %A, i32 %lda, float* nocapture readnone %X, i32 %incX, float %beta, float* nocapture readnone %Y, i32 %incY) local_unnamed_addr #26 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 78, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(78) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(78) getelementptr inbounds ([79 x i8], [79 x i8]* @.str.91, i64 0, i64 0), i64 78, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept3invIfEENS_5ArrayILi2ET_Lb0EEERKS3_(%"class.adept::Array"* noalias sret(%"class.adept::Array") align 8 %agg.result, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %A) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 52, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(52) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(52) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.92, i64 0, i64 0), i64 52, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept3invIfLNS_8internal21SymmMatrixOrientationE0EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_(%"class.adept::SpecialMatrix"* noalias sret(%"class.adept::SpecialMatrix") align 8 %agg.result, %"class.adept::SpecialMatrix"* nonnull align 8 dereferenceable(24) %A) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 52, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(52) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(52) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.92, i64 0, i64 0), i64 52, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept3invIfLNS_8internal21SymmMatrixOrientationE1EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_(%"class.adept::SpecialMatrix.19"* noalias sret(%"class.adept::SpecialMatrix.19") align 8 %agg.result, %"class.adept::SpecialMatrix.19"* nonnull align 8 dereferenceable(24) %A) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 52, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(52) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(52) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.92, i64 0, i64 0), i64 52, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept3invIdEENS_5ArrayILi2ET_Lb0EEERKS3_(%"class.adept::Array.22"* noalias sret(%"class.adept::Array.22") align 8 %agg.result, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %A) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 52, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(52) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(52) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.92, i64 0, i64 0), i64 52, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept3invIdLNS_8internal21SymmMatrixOrientationE0EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_(%"class.adept::SpecialMatrix.25"* noalias sret(%"class.adept::SpecialMatrix.25") align 8 %agg.result, %"class.adept::SpecialMatrix.25"* nonnull align 8 dereferenceable(24) %A) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 52, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(52) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(52) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.92, i64 0, i64 0), i64 52, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept3invIdLNS_8internal21SymmMatrixOrientationE1EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_(%"class.adept::SpecialMatrix.27"* noalias sret(%"class.adept::SpecialMatrix.27") align 8 %agg.result, %"class.adept::SpecialMatrix.27"* nonnull align 8 dereferenceable(24) %A) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 52, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(52) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(52) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.92, i64 0, i64 0), i64 52, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_ZNK5adept5Stack23jacobian_forward_kernelEPd(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this, double* noalias nocapture %gradient_multipass_b) local_unnamed_addr #27 align 2 {
entry:
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %0 = load i32, i32* %n_statements_, align 8, !tbaa !146
  %cmp45 = icmp sgt i32 %0, 1
  br i1 %cmp45, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %1 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !141
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %wide.trip.count = zext i32 %0 to i64
  %end_plus_one.phi.trans.insert = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 0, i32 1
  %.pre = load i32, i32* %end_plus_one.phi.trans.insert, align 4, !tbaa !149
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup8, %entry
  ret void

for.body:                                         ; preds = %for.cond.cleanup8, %for.body.lr.ph
  %2 = phi i32 [ %.pre, %for.body.lr.ph ], [ %3, %for.cond.cleanup8 ]
  %indvars.iv47 = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next48, %for.cond.cleanup8 ]
  %end_plus_one6 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 %indvars.iv47, i32 1
  %3 = load i32, i32* %end_plus_one6, align 4, !tbaa !149
  %cmp742 = icmp slt i32 %2, %3
  br i1 %cmp742, label %for.body9.lr.ph, label %for.cond.cleanup8

for.body9.lr.ph:                                  ; preds = %for.body
  %4 = load i32*, i32** %index_, align 8, !tbaa !144
  %5 = load double*, double** %multiplier_, align 8, !tbaa !143
  %6 = sext i32 %2 to i64
  %7 = sext i32 %3 to i64
  br label %for.body9

for.cond.cleanup8:                                ; preds = %for.body9, %for.body
  %a.sroa.0.0.lcssa = phi <2 x double> [ zeroinitializer, %for.body ], [ %add.i.i, %for.body9 ]
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 %indvars.iv47, i32 0
  %8 = load i32, i32* %index, align 4, !tbaa !147
  %mul15 = shl nsw i32 %8, 1
  %idx.ext16 = sext i32 %mul15 to i64
  %add.ptr17 = getelementptr inbounds double, double* %gradient_multipass_b, i64 %idx.ext16
  %9 = bitcast double* %add.ptr17 to <2 x double>*
  store <2 x double> %a.sroa.0.0.lcssa, <2 x double>* %9, align 16, !tbaa !21, !alias.scope !182
  %indvars.iv.next48 = add nuw nsw i64 %indvars.iv47, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next48, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !185

for.body9:                                        ; preds = %for.body9, %for.body9.lr.ph
  %indvars.iv = phi i64 [ %6, %for.body9.lr.ph ], [ %indvars.iv.next, %for.body9 ]
  %a.sroa.0.043 = phi <2 x double> [ zeroinitializer, %for.body9.lr.ph ], [ %add.i.i, %for.body9 ]
  %arrayidx11 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv
  %10 = load i32, i32* %arrayidx11, align 4, !tbaa !47
  %mul = shl nsw i32 %10, 1
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds double, double* %gradient_multipass_b, i64 %idx.ext
  %11 = bitcast double* %add.ptr to <2 x double>*
  %12 = load <2 x double>, <2 x double>* %11, align 16, !tbaa !21
  %arrayidx13 = getelementptr inbounds double, double* %5, i64 %indvars.iv
  %13 = load double, double* %arrayidx13, align 8, !tbaa !61
  %vecinit.i.i = insertelement <2 x double> undef, double %13, i32 0
  %vecinit1.i.i = shufflevector <2 x double> %vecinit.i.i, <2 x double> undef, <2 x i32> zeroinitializer
  %mul.i.i = fmul fast <2 x double> %vecinit1.i.i, %12
  %add.i.i = fadd fast <2 x double> %mul.i.i, %a.sroa.0.043
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp7 = icmp slt i64 %indvars.iv.next, %7
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8, !llvm.loop !186
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this, double* noalias nocapture %gradient_multipass_b, i32 %n_extra) local_unnamed_addr #28 align 2 {
entry:
  %a = alloca %"struct.adept::Block", align 8
  %a76 = bitcast %"struct.adept::Block"* %a to i8*
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %0 = load i32, i32* %n_statements_, align 8, !tbaa !146
  %cmp70 = icmp sgt i32 %0, 1
  br i1 %cmp70, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %1 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !141
  %cmp1163 = icmp sgt i32 %n_extra, 0
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %2 = zext i32 %n_extra to i64
  %3 = shl nuw nsw i64 %2, 3
  %wide.trip.count83 = zext i32 %0 to i64
  %end_plus_one.phi.trans.insert = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 0, i32 1
  %.pre = load i32, i32* %end_plus_one.phi.trans.insert, align 4, !tbaa !149
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup28, %entry
  ret void

for.body:                                         ; preds = %for.cond.cleanup28, %for.body.lr.ph
  %4 = phi i32 [ %.pre, %for.body.lr.ph ], [ %5, %for.cond.cleanup28 ]
  %indvars.iv80 = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next81, %for.cond.cleanup28 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %a76) #37
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %a76, i8 0, i64 16, i1 false) #37
  %end_plus_one6 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 %indvars.iv80, i32 1
  %5 = load i32, i32* %end_plus_one6, align 4, !tbaa !149
  %cmp765 = icmp slt i32 %4, %5
  br i1 %cmp765, label %for.cond10.preheader.lr.ph, label %for.cond26.preheader

for.cond10.preheader.lr.ph:                       ; preds = %for.body
  %6 = sext i32 %4 to i64
  %7 = sext i32 %5 to i64
  br label %for.cond10.preheader

for.cond26.preheader:                             ; preds = %for.cond.cleanup12, %for.body
  br i1 %cmp1163, label %for.body29.lr.ph, label %for.cond.cleanup28

for.body29.lr.ph:                                 ; preds = %for.cond26.preheader
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 %indvars.iv80, i32 0
  %8 = load i32, i32* %index, align 4, !tbaa !147
  %9 = shl i32 %8, 1
  %10 = sext i32 %9 to i64
  %scevgep = getelementptr double, double* %gradient_multipass_b, i64 %10
  %scevgep75 = bitcast double* %scevgep to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %scevgep75, i8* nonnull align 8 %a76, i64 %3, i1 false)
  br label %for.cond.cleanup28

for.cond10.preheader:                             ; preds = %for.cond.cleanup12, %for.cond10.preheader.lr.ph
  %indvars.iv73 = phi i64 [ %6, %for.cond10.preheader.lr.ph ], [ %indvars.iv.next74, %for.cond.cleanup12 ]
  br i1 %cmp1163, label %for.body13.lr.ph, label %for.cond.cleanup12

for.body13.lr.ph:                                 ; preds = %for.cond10.preheader
  %11 = load double*, double** %multiplier_, align 8, !tbaa !143
  %arrayidx15 = getelementptr inbounds double, double* %11, i64 %indvars.iv73
  %12 = load double, double* %arrayidx15, align 8, !tbaa !61
  %13 = load i32*, i32** %index_, align 8, !tbaa !144
  %arrayidx17 = getelementptr inbounds i32, i32* %13, i64 %indvars.iv73
  %14 = load i32, i32* %arrayidx17, align 4, !tbaa !47
  %mul = shl nsw i32 %14, 1
  %15 = sext i32 %mul to i64
  br label %for.body13

for.cond.cleanup12:                               ; preds = %for.body13, %for.cond10.preheader
  %indvars.iv.next74 = add nsw i64 %indvars.iv73, 1
  %cmp7 = icmp slt i64 %indvars.iv.next74, %7
  br i1 %cmp7, label %for.cond10.preheader, label %for.cond26.preheader, !llvm.loop !187

for.body13:                                       ; preds = %for.body13, %for.body13.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body13.lr.ph ], [ %indvars.iv.next, %for.body13 ]
  %16 = add nsw i64 %indvars.iv, %15
  %arrayidx19 = getelementptr inbounds double, double* %gradient_multipass_b, i64 %16
  %17 = load double, double* %arrayidx19, align 8, !tbaa !61
  %mul20 = fmul fast double %17, %12
  %arrayidx.i62 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %a, i64 0, i32 0, i64 %indvars.iv
  %18 = load double, double* %arrayidx.i62, align 8, !tbaa !61
  %add21 = fadd fast double %18, %mul20
  store double %add21, double* %arrayidx.i62, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %2
  br i1 %exitcond.not, label %for.cond.cleanup12, label %for.body13, !llvm.loop !188

for.cond.cleanup28:                               ; preds = %for.body29.lr.ph, %for.cond26.preheader
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %a76) #37
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1
  %exitcond84.not = icmp eq i64 %indvars.iv.next81, %wide.trip.count83
  br i1 %exitcond84.not, label %for.cond.cleanup, label %for.body, !llvm.loop !189
}

; Function Attrs: uwtable
define dso_local void @_ZNK5adept5Stack23jacobian_forward_openmpEPd(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this, double* nocapture %jacobian_out) local_unnamed_addr #29 align 2 {
entry:
  %result.i = alloca double*, align 8
  %_M_finish.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !179
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %2 = lshr exact i64 %sub.ptr.sub.i.i, 2
  %conv.i = trunc i64 %2 to i32
  %sub = add nsw i32 %conv.i, 1
  %div = sdiv i32 %sub, 2
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %3 = load i32, i32* %max_gradient_, align 8, !tbaa !166
  %mul = shl i32 %3, 1
  %4 = bitcast double** %result.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  %5 = bitcast double** %result.i to i8**
  %conv1.i = sext i32 %mul to i64
  %mul.i111 = shl nsw i64 %conv1.i, 3
  %call2.i = call i32 @posix_memalign(i8** nonnull %5, i64 16, i64 %mul.i111) #37
  %cmp3.not.i = icmp eq i32 %call2.i, 0
  br i1 %cmp3.not.i, label %_ZN5adept8internal13alloc_alignedIdEEPT_i.exit, label %if.then4.i

if.then4.i:                                       ; preds = %entry
  %exception.i = call i8* @__cxa_allocate_exception(i64 8) #37
  %6 = bitcast i8* %exception.i to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  call void @__cxa_throw(i8* %exception.i, i8* bitcast (i8** @_ZTISt9bad_alloc to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD1Ev to i8*)) #39
  unreachable

_ZN5adept8internal13alloc_alignedIdEEPT_i.exit:   ; preds = %entry
  %7 = load double*, double** %result.i, align 8, !tbaa !110
  %8 = bitcast double* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %cmp123 = icmp sgt i32 %conv.i, 0
  br i1 %cmp123, label %for.body.lr.ph, label %for.end55

for.body.lr.ph:                                   ; preds = %_ZN5adept8internal13alloc_alignedIdEEPT_i.exit
  %sub5 = add nsw i32 %div, -1
  %9 = and i32 %conv.i, -2147483647
  %cmp7 = icmp eq i32 %9, 1
  %cmp9112 = icmp sgt i32 %3, 0
  %n_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %10 = load i32, i32* %n_statements_.i, align 8, !tbaa !146, !noalias !190
  %cmp45.i = icmp sgt i32 %10, 1
  %statement_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %index_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %multiplier_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %wide.trip.count.i = zext i32 %10 to i64
  %_M_finish.i.i102 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %_M_start.i.i103 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %11 = icmp sgt i32 %mul, 1
  %smax = select i1 %11, i32 %mul, i32 1
  %12 = zext i32 %smax to i64
  %13 = shl nuw nsw i64 %12, 3
  %14 = zext i32 %sub5 to i64
  %15 = icmp sgt i32 %div, 1
  %smax143 = select i1 %15, i32 %div, i32 1
  %wide.trip.count144 = zext i32 %smax143 to i64
  br label %for.body

for.body:                                         ; preds = %for.cond.cleanup28, %for.body.lr.ph
  %indvars.iv140 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next141, %for.cond.cleanup28 ]
  %16 = shl nuw nsw i64 %indvars.iv140, 1
  %cmp6 = icmp eq i64 %indvars.iv140, %14
  %or.cond = and i1 %cmp7, %cmp6
  %spec.select = select i1 %or.cond, i32 1, i32 2
  br i1 %cmp9112, label %for.body10.preheader, label %for.cond12.preheader

for.body10.preheader:                             ; preds = %for.body
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 %13, i1 false)
  br label %for.cond12.preheader

for.cond12.preheader:                             ; preds = %for.body10.preheader, %for.body
  %17 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %18 = icmp ugt i32 %spec.select, 1
  %umax = select i1 %18, i32 %spec.select, i32 1
  %wide.trip.count = zext i32 %umax to i64
  br label %for.body15

for.cond.cleanup14:                               ; preds = %for.body15
  call void @llvm.experimental.noalias.scope.decl(metadata !190)
  br i1 %cmp45.i, label %for.body.lr.ph.i, label %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit

for.body.lr.ph.i:                                 ; preds = %for.cond.cleanup14
  %19 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.i, align 8, !tbaa !141, !noalias !190
  %end_plus_one.phi.trans.insert.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %19, i64 0, i32 1
  %.pre.i = load i32, i32* %end_plus_one.phi.trans.insert.i, align 4, !tbaa !149, !noalias !190
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.cleanup8.i, %for.body.lr.ph.i
  %20 = phi i32 [ %.pre.i, %for.body.lr.ph.i ], [ %21, %for.cond.cleanup8.i ]
  %indvars.iv47.i = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next48.i, %for.cond.cleanup8.i ]
  %end_plus_one6.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %19, i64 %indvars.iv47.i, i32 1
  %21 = load i32, i32* %end_plus_one6.i, align 4, !tbaa !149, !noalias !190
  %cmp742.i = icmp slt i32 %20, %21
  br i1 %cmp742.i, label %for.body9.lr.ph.i, label %for.cond.cleanup8.i

for.body9.lr.ph.i:                                ; preds = %for.body.i
  %22 = load i32*, i32** %index_.i, align 8, !tbaa !144, !noalias !190
  %23 = load double*, double** %multiplier_.i, align 8, !tbaa !143, !noalias !190
  %24 = sext i32 %20 to i64
  %25 = sext i32 %21 to i64
  br label %for.body9.i

for.cond.cleanup8.i:                              ; preds = %for.body9.i, %for.body.i
  %a.sroa.0.0.lcssa.i = phi <2 x double> [ zeroinitializer, %for.body.i ], [ %add.i.i.i, %for.body9.i ]
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %19, i64 %indvars.iv47.i, i32 0
  %26 = load i32, i32* %index.i, align 4, !tbaa !147, !noalias !190
  %mul15.i = shl nsw i32 %26, 1
  %idx.ext16.i = sext i32 %mul15.i to i64
  %add.ptr17.i = getelementptr inbounds double, double* %7, i64 %idx.ext16.i
  %27 = bitcast double* %add.ptr17.i to <2 x double>*
  store <2 x double> %a.sroa.0.0.lcssa.i, <2 x double>* %27, align 16, !tbaa !21, !alias.scope !193
  %indvars.iv.next48.i = add nuw nsw i64 %indvars.iv47.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next48.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit, label %for.body.i, !llvm.loop !185

for.body9.i:                                      ; preds = %for.body9.i, %for.body9.lr.ph.i
  %indvars.iv.i = phi i64 [ %24, %for.body9.lr.ph.i ], [ %indvars.iv.next.i, %for.body9.i ]
  %a.sroa.0.043.i = phi <2 x double> [ zeroinitializer, %for.body9.lr.ph.i ], [ %add.i.i.i, %for.body9.i ]
  %arrayidx11.i = getelementptr inbounds i32, i32* %22, i64 %indvars.iv.i
  %28 = load i32, i32* %arrayidx11.i, align 4, !tbaa !47, !noalias !190
  %mul.i = shl nsw i32 %28, 1
  %idx.ext.i = sext i32 %mul.i to i64
  %add.ptr.i110 = getelementptr inbounds double, double* %7, i64 %idx.ext.i
  %29 = bitcast double* %add.ptr.i110 to <2 x double>*
  %30 = load <2 x double>, <2 x double>* %29, align 16, !tbaa !21, !alias.scope !190
  %arrayidx13.i = getelementptr inbounds double, double* %23, i64 %indvars.iv.i
  %31 = load double, double* %arrayidx13.i, align 8, !tbaa !61, !noalias !190
  %vecinit.i.i.i = insertelement <2 x double> undef, double %31, i32 0
  %vecinit1.i.i.i = shufflevector <2 x double> %vecinit.i.i.i, <2 x double> undef, <2 x i32> zeroinitializer
  %mul.i.i.i = fmul fast <2 x double> %vecinit1.i.i.i, %30
  %add.i.i.i = fadd fast <2 x double> %mul.i.i.i, %a.sroa.0.043.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %exitcond126.not = icmp eq i64 %indvars.iv.next.i, %25
  br i1 %exitcond126.not, label %for.cond.cleanup8.i, label %for.body9.i, !llvm.loop !186

_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit: ; preds = %for.cond.cleanup8.i, %for.cond.cleanup14
  %32 = load i32*, i32** %_M_finish.i.i102, align 8, !tbaa !179
  %33 = load i32*, i32** %_M_start.i.i103, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i104116 = ptrtoint i32* %32 to i64
  %sub.ptr.rhs.cast.i.i105117 = ptrtoint i32* %33 to i64
  %sub.ptr.sub.i.i106118 = sub i64 %sub.ptr.lhs.cast.i.i104116, %sub.ptr.rhs.cast.i.i105117
  %34 = lshr exact i64 %sub.ptr.sub.i.i106118, 2
  %conv.i107119 = trunc i64 %34 to i32
  %cmp27120 = icmp sgt i32 %conv.i107119, 0
  br i1 %cmp27120, label %for.cond31.preheader.lr.ph, label %for.cond.cleanup28

for.cond31.preheader.lr.ph:                       ; preds = %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit
  %wide.trip.count138 = and i64 %34, 4294967295
  %sext = shl i64 %sub.ptr.sub.i.i106118, 30
  %35 = ashr i64 %sext, 32
  br label %for.cond31.preheader

for.body15:                                       ; preds = %for.body15, %for.cond12.preheader
  %indvars.iv = phi i64 [ 0, %for.cond12.preheader ], [ %indvars.iv.next, %for.body15 ]
  %36 = add nuw nsw i64 %indvars.iv, %16
  %add.ptr.i109 = getelementptr inbounds i32, i32* %17, i64 %36
  %37 = load i32, i32* %add.ptr.i109, align 4, !tbaa !47
  %mul18 = shl nsw i32 %37, 1
  %38 = trunc i64 %indvars.iv to i32
  %add19 = add nsw i32 %mul18, %38
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds double, double* %7, i64 %idxprom20
  store double 1.000000e+00, double* %arrayidx21, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup14, label %for.body15, !llvm.loop !196

for.cond31.preheader:                             ; preds = %for.cond.cleanup33, %for.cond31.preheader.lr.ph
  %indvars.iv135 = phi i64 [ 0, %for.cond31.preheader.lr.ph ], [ %indvars.iv.next136, %for.cond.cleanup33 ]
  %add.ptr.i = getelementptr inbounds i32, i32* %33, i64 %indvars.iv135
  %39 = load i32, i32* %add.ptr.i, align 4, !tbaa !47
  %mul37 = shl nsw i32 %39, 1
  %40 = sext i32 %mul37 to i64
  br label %for.body34

for.cond.cleanup28:                               ; preds = %for.cond.cleanup33, %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit
  %indvars.iv.next141 = add nuw nsw i64 %indvars.iv140, 1
  %exitcond145.not = icmp eq i64 %indvars.iv.next141, %wide.trip.count144
  br i1 %exitcond145.not, label %for.end55, label %for.body, !llvm.loop !197

for.cond.cleanup33:                               ; preds = %for.body34
  %indvars.iv.next136 = add nuw nsw i64 %indvars.iv135, 1
  %exitcond139.not = icmp eq i64 %indvars.iv.next136, %wide.trip.count138
  br i1 %exitcond139.not, label %for.cond.cleanup28, label %for.cond31.preheader, !llvm.loop !198

for.body34:                                       ; preds = %for.body34, %for.cond31.preheader
  %indvars.iv127 = phi i64 [ 0, %for.cond31.preheader ], [ %indvars.iv.next128, %for.body34 ]
  %41 = add nsw i64 %indvars.iv127, %40
  %arrayidx40 = getelementptr inbounds double, double* %7, i64 %41
  %42 = load double, double* %arrayidx40, align 8, !tbaa !61
  %43 = add nuw nsw i64 %indvars.iv127, %16
  %44 = mul nsw i64 %43, %35
  %45 = add nsw i64 %44, %indvars.iv135
  %arrayidx46 = getelementptr inbounds double, double* %jacobian_out, i64 %45
  store double %42, double* %arrayidx46, align 8, !tbaa !61
  %indvars.iv.next128 = add nuw nsw i64 %indvars.iv127, 1
  %exitcond134.not = icmp eq i64 %indvars.iv.next128, %wide.trip.count
  br i1 %exitcond134.not, label %for.cond.cleanup33, label %for.body34, !llvm.loop !199

for.end55:                                        ; preds = %for.cond.cleanup28, %_ZN5adept8internal13alloc_alignedIdEEPT_i.exit
  call void @free(i8* %8) #37
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack16jacobian_forwardEPd(%"class.adept::Stack"* nonnull readonly dereferenceable(149) %this, double* nocapture %jacobian_out) local_unnamed_addr #29 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %result.i = alloca double*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %0 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !110
  %_M_finish.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %1 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !110
  %cmp.i.i = icmp eq i32* %0, %1
  br i1 %cmp.i.i, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %_M_start.i.i184 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %2 = load i32*, i32** %_M_start.i.i184, align 8, !tbaa !110
  %_M_finish.i.i185 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %3 = load i32*, i32** %_M_finish.i.i185, align 8, !tbaa !110
  %cmp.i.i186 = icmp eq i32* %2, %3
  br i1 %cmp.i.i186, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %4 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #37
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !14
  %7 = bitcast %union.anon* %5 to i8*
  %8 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #37
  store i64 79, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i230 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %if.then
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i230, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %9 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %9, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(79) %call5.i.i.i9.i230, i8* nonnull align 1 dereferenceable(79) getelementptr inbounds ([80 x i8], [80 x i8]* @.str.93, i64 0, i64 0), i64 79, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i230, i64 %9
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #37
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %10 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %11 = getelementptr inbounds i8, i8* %exception, i64 24
  %12 = bitcast i8* %message_.i.i.i to i8**
  store i8* %11, i8** %12, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i231 = getelementptr inbounds i8, i8* %exception, i64 16
  %13 = bitcast i8* %_M_string_length.i.i.i.i.i.i231 to i64*
  store i64 0, i64* %13, align 8, !tbaa !19
  store i8 0, i8* %11, align 1, !tbaa !21
  %14 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept41dependents_or_independents_not_identifiedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %10, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont5 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %15 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !127
  %16 = load i8*, i8** %12, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %16, %11
  br i1 %cmp.i.i.i.i.i, label %lpad4.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %16) #37
  br label %lpad4.body

invoke.cont5:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept41dependents_or_independents_not_identifiedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad4.body.thread

ehcleanup.thread:                                 ; preds = %if.then
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  br label %cleanup.action

lpad4.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %18 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %18) #37
  %19 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %19, %7
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad4.body
  call void @_ZdlPv(i8* %19) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  br label %cleanup.action

lpad4.body.thread:                                ; preds = %invoke.cont5
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i299 = icmp eq i8* %21, %7
  br i1 %cmp.i.i.i299, label %ehcleanup.thread304, label %if.then.i.i

ehcleanup.thread304:                              ; preds = %lpad4.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad4.body.thread
  call void @_ZdlPv(i8* %21) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad4.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn247 = phi { i8*, i32 } [ %17, %ehcleanup.thread ], [ %15, %ehcleanup ], [ %15, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

if.end:                                           ; preds = %lor.lhs.false
  %sub.ptr.lhs.cast.i.i234 = ptrtoint i32* %1 to i64
  %sub.ptr.rhs.cast.i.i235 = ptrtoint i32* %0 to i64
  %sub.ptr.sub.i.i236 = sub i64 %sub.ptr.lhs.cast.i.i234, %sub.ptr.rhs.cast.i.i235
  %22 = lshr exact i64 %sub.ptr.sub.i.i236, 2
  %conv.i237 = trunc i64 %22 to i32
  %div = sdiv i32 %conv.i237, 2
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %23 = load i32, i32* %max_gradient_, align 8, !tbaa !166
  %mul = shl i32 %23, 1
  %24 = bitcast double** %result.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #37
  %25 = bitcast double** %result.i to i8**
  %conv1.i = sext i32 %mul to i64
  %mul.i229 = shl nsw i64 %conv1.i, 3
  %call2.i = call i32 @posix_memalign(i8** nonnull %25, i64 16, i64 %mul.i229) #37
  %cmp3.not.i = icmp eq i32 %call2.i, 0
  br i1 %cmp3.not.i, label %_ZN5adept8internal13alloc_alignedIdEEPT_i.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.end
  %exception.i = call i8* @__cxa_allocate_exception(i64 8) #37
  %26 = bitcast i8* %exception.i to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8, !tbaa !127
  call void @__cxa_throw(i8* %exception.i, i8* bitcast (i8** @_ZTISt9bad_alloc to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD1Ev to i8*)) #39
  unreachable

_ZN5adept8internal13alloc_alignedIdEEPT_i.exit:   ; preds = %if.end
  %27 = load double*, double** %result.i, align 8, !tbaa !110
  %28 = bitcast double* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #37
  %cmp268 = icmp sgt i32 %conv.i237, 1
  br i1 %cmp268, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %_ZN5adept8internal13alloc_alignedIdEEPT_i.exit
  %cmp14257 = icmp sgt i32 %23, 0
  %n_statements_.i213 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %29 = load i32, i32* %n_statements_.i213, align 8, !tbaa !146, !noalias !200
  %cmp45.i = icmp sgt i32 %29, 1
  %statement_.i214 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %index_.i215 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %multiplier_.i216 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %wide.trip.count.i = zext i32 %29 to i64
  %30 = icmp sgt i32 %mul, 1
  %smax274 = select i1 %30, i32 %mul, i32 1
  %31 = zext i32 %smax274 to i64
  %32 = shl nuw nsw i64 %31, 3
  %wide.trip.count295 = zext i32 %div to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup34, %_ZN5adept8internal13alloc_alignedIdEEPT_i.exit
  %33 = and i32 %conv.i237, -2147483647
  %cmp64 = icmp eq i32 %33, 1
  br i1 %cmp64, label %if.then65, label %if.end124

for.body:                                         ; preds = %for.cond.cleanup34, %for.body.lr.ph
  %indvars.iv292 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next293, %for.cond.cleanup34 ]
  %34 = shl nuw nsw i64 %indvars.iv292, 1
  br i1 %cmp14257, label %for.body16.preheader, label %for.cond18.preheader

for.body16.preheader:                             ; preds = %for.body
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 %32, i1 false)
  br label %for.cond18.preheader

for.cond18.preheader:                             ; preds = %for.body16.preheader, %for.body
  %35 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %add.ptr.i212 = getelementptr inbounds i32, i32* %35, i64 %34
  %36 = load i32, i32* %add.ptr.i212, align 4, !tbaa !47
  %mul24 = shl nsw i32 %36, 1
  %idxprom26 = sext i32 %mul24 to i64
  %arrayidx27 = getelementptr inbounds double, double* %27, i64 %idxprom26
  store double 1.000000e+00, double* %arrayidx27, align 8, !tbaa !61
  %37 = or i64 %34, 1
  %add.ptr.i212.c = getelementptr inbounds i32, i32* %35, i64 %37
  %38 = load i32, i32* %add.ptr.i212.c, align 4, !tbaa !47
  %mul24.c = shl nsw i32 %38, 1
  %add25.c = or i32 %mul24.c, 1
  %idxprom26.c = sext i32 %add25.c to i64
  %arrayidx27.c = getelementptr inbounds double, double* %27, i64 %idxprom26.c
  store double 1.000000e+00, double* %arrayidx27.c, align 8, !tbaa !61
  call void @llvm.experimental.noalias.scope.decl(metadata !200)
  br i1 %cmp45.i, label %for.body.lr.ph.i219, label %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit

for.body.lr.ph.i219:                              ; preds = %for.cond18.preheader
  %39 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.i214, align 8, !tbaa !141, !noalias !200
  %end_plus_one.phi.trans.insert.i217 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %39, i64 0, i32 1
  %.pre.i218 = load i32, i32* %end_plus_one.phi.trans.insert.i217, align 4, !tbaa !149, !noalias !200
  br label %for.body.i221

for.body.i221:                                    ; preds = %for.cond.cleanup8.i, %for.body.lr.ph.i219
  %40 = phi i32 [ %.pre.i218, %for.body.lr.ph.i219 ], [ %41, %for.cond.cleanup8.i ]
  %indvars.iv47.i = phi i64 [ 1, %for.body.lr.ph.i219 ], [ %indvars.iv.next48.i, %for.cond.cleanup8.i ]
  %end_plus_one6.i220 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %39, i64 %indvars.iv47.i, i32 1
  %41 = load i32, i32* %end_plus_one6.i220, align 4, !tbaa !149, !noalias !200
  %cmp742.i = icmp slt i32 %40, %41
  br i1 %cmp742.i, label %for.body9.lr.ph.i, label %for.cond.cleanup8.i

for.body9.lr.ph.i:                                ; preds = %for.body.i221
  %42 = load i32*, i32** %index_.i215, align 8, !tbaa !144, !noalias !200
  %43 = load double*, double** %multiplier_.i216, align 8, !tbaa !143, !noalias !200
  %44 = sext i32 %40 to i64
  %45 = sext i32 %41 to i64
  br label %for.body9.i

for.cond.cleanup8.i:                              ; preds = %for.body9.i, %for.body.i221
  %a.sroa.0.0.lcssa.i = phi <2 x double> [ zeroinitializer, %for.body.i221 ], [ %add.i.i.i, %for.body9.i ]
  %index.i222 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %39, i64 %indvars.iv47.i, i32 0
  %46 = load i32, i32* %index.i222, align 4, !tbaa !147, !noalias !200
  %mul15.i = shl nsw i32 %46, 1
  %idx.ext16.i = sext i32 %mul15.i to i64
  %add.ptr17.i = getelementptr inbounds double, double* %27, i64 %idx.ext16.i
  %47 = bitcast double* %add.ptr17.i to <2 x double>*
  store <2 x double> %a.sroa.0.0.lcssa.i, <2 x double>* %47, align 16, !tbaa !21, !alias.scope !203
  %indvars.iv.next48.i = add nuw nsw i64 %indvars.iv47.i, 1
  %exitcond.not.i223 = icmp eq i64 %indvars.iv.next48.i, %wide.trip.count.i
  br i1 %exitcond.not.i223, label %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit, label %for.body.i221, !llvm.loop !185

for.body9.i:                                      ; preds = %for.body9.i, %for.body9.lr.ph.i
  %indvars.iv.i224 = phi i64 [ %44, %for.body9.lr.ph.i ], [ %indvars.iv.next.i227, %for.body9.i ]
  %a.sroa.0.043.i = phi <2 x double> [ zeroinitializer, %for.body9.lr.ph.i ], [ %add.i.i.i, %for.body9.i ]
  %arrayidx11.i = getelementptr inbounds i32, i32* %42, i64 %indvars.iv.i224
  %48 = load i32, i32* %arrayidx11.i, align 4, !tbaa !47, !noalias !200
  %mul.i225 = shl nsw i32 %48, 1
  %idx.ext.i = sext i32 %mul.i225 to i64
  %add.ptr.i226 = getelementptr inbounds double, double* %27, i64 %idx.ext.i
  %49 = bitcast double* %add.ptr.i226 to <2 x double>*
  %50 = load <2 x double>, <2 x double>* %49, align 16, !tbaa !21, !alias.scope !200
  %arrayidx13.i = getelementptr inbounds double, double* %43, i64 %indvars.iv.i224
  %51 = load double, double* %arrayidx13.i, align 8, !tbaa !61, !noalias !200
  %vecinit.i.i.i = insertelement <2 x double> undef, double %51, i32 0
  %vecinit1.i.i.i = shufflevector <2 x double> %vecinit.i.i.i, <2 x double> undef, <2 x i32> zeroinitializer
  %mul.i.i.i = fmul fast <2 x double> %vecinit1.i.i.i, %50
  %add.i.i.i = fadd fast <2 x double> %mul.i.i.i, %a.sroa.0.043.i
  %indvars.iv.next.i227 = add nsw i64 %indvars.iv.i224, 1
  %exitcond280.not = icmp eq i64 %indvars.iv.next.i227, %45
  br i1 %exitcond280.not, label %for.cond.cleanup8.i, label %for.body9.i, !llvm.loop !186

_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit: ; preds = %for.cond.cleanup8.i, %for.cond18.preheader
  %52 = load i32*, i32** %_M_finish.i.i185, align 8, !tbaa !179
  %53 = load i32*, i32** %_M_start.i.i184, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i207261 = ptrtoint i32* %52 to i64
  %sub.ptr.rhs.cast.i.i208262 = ptrtoint i32* %53 to i64
  %sub.ptr.sub.i.i209263 = sub i64 %sub.ptr.lhs.cast.i.i207261, %sub.ptr.rhs.cast.i.i208262
  %54 = lshr exact i64 %sub.ptr.sub.i.i209263, 2
  %conv.i210264 = trunc i64 %54 to i32
  %cmp33265 = icmp sgt i32 %conv.i210264, 0
  br i1 %cmp33265, label %for.cond37.preheader.lr.ph, label %for.cond.cleanup34

for.cond37.preheader.lr.ph:                       ; preds = %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit
  %wide.trip.count290 = and i64 %54, 4294967295
  %sext = shl i64 %sub.ptr.sub.i.i209263, 30
  %55 = ashr i64 %sext, 32
  br label %for.cond37.preheader

for.cond37.preheader:                             ; preds = %for.cond37.preheader, %for.cond37.preheader.lr.ph
  %indvars.iv287 = phi i64 [ 0, %for.cond37.preheader.lr.ph ], [ %indvars.iv.next288, %for.cond37.preheader ]
  %add.ptr.i204 = getelementptr inbounds i32, i32* %53, i64 %indvars.iv287
  %56 = load i32, i32* %add.ptr.i204, align 4, !tbaa !47
  %mul44 = shl nsw i32 %56, 1
  %57 = sext i32 %mul44 to i64
  %arrayidx47 = getelementptr inbounds double, double* %27, i64 %57
  %58 = load double, double* %arrayidx47, align 8, !tbaa !61
  %59 = mul nsw i64 %34, %55
  %60 = add nsw i64 %59, %indvars.iv287
  %arrayidx53 = getelementptr inbounds double, double* %jacobian_out, i64 %60
  store double %58, double* %arrayidx53, align 8, !tbaa !61
  %61 = or i64 %57, 1
  %arrayidx47.c = getelementptr inbounds double, double* %27, i64 %61
  %62 = load double, double* %arrayidx47.c, align 8, !tbaa !61
  %63 = or i64 %34, 1
  %64 = mul nsw i64 %63, %55
  %65 = add nsw i64 %64, %indvars.iv287
  %arrayidx53.c = getelementptr inbounds double, double* %jacobian_out, i64 %65
  store double %62, double* %arrayidx53.c, align 8, !tbaa !61
  %indvars.iv.next288 = add nuw nsw i64 %indvars.iv287, 1
  %exitcond291.not = icmp eq i64 %indvars.iv.next288, %wide.trip.count290
  br i1 %exitcond291.not, label %for.cond.cleanup34, label %for.cond37.preheader, !llvm.loop !206

for.cond.cleanup34:                               ; preds = %for.cond37.preheader, %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit
  %indvars.iv.next293 = add nuw nsw i64 %indvars.iv292, 1
  %exitcond296.not = icmp eq i64 %indvars.iv.next293, %wide.trip.count295
  br i1 %exitcond296.not, label %for.cond.cleanup, label %for.body, !llvm.loop !207

if.then65:                                        ; preds = %for.cond.cleanup
  %mul67 = shl nsw i32 %div, 1
  %cmp70255 = icmp sgt i32 %23, 0
  br i1 %cmp70255, label %for.body72.preheader, label %for.body82

for.body72.preheader:                             ; preds = %if.then65
  %66 = icmp sgt i32 %mul, 1
  %smax271 = select i1 %66, i32 %mul, i32 1
  %67 = zext i32 %smax271 to i64
  %68 = shl nuw nsw i64 %67, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 %68, i1 false)
  br label %for.body82

for.body82:                                       ; preds = %for.body72.preheader, %if.then65
  %conv85 = sext i32 %mul67 to i64
  %69 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %add.ptr.i196 = getelementptr inbounds i32, i32* %69, i64 %conv85
  %70 = load i32, i32* %add.ptr.i196, align 4, !tbaa !47
  %mul87 = shl nsw i32 %70, 1
  %idxprom89 = sext i32 %mul87 to i64
  %arrayidx90 = getelementptr inbounds double, double* %27, i64 %idxprom89
  store double 1.000000e+00, double* %arrayidx90, align 8, !tbaa !61
  call void @llvm.experimental.noalias.scope.decl(metadata !208)
  %n_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %71 = load i32, i32* %n_statements_.i, align 8, !tbaa !146, !noalias !208
  %cmp70.i = icmp sgt i32 %71, 1
  br i1 %cmp70.i, label %for.body.lr.ph.i, label %_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi.exit

for.body.lr.ph.i:                                 ; preds = %for.body82
  %statement_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %72 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.i, align 8, !tbaa !141, !noalias !208
  %multiplier_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %wide.trip.count83.i = zext i32 %71 to i64
  %end_plus_one.phi.trans.insert.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %72, i64 0, i32 1
  %.pre.i = load i32, i32* %end_plus_one.phi.trans.insert.i, align 4, !tbaa !149, !noalias !208
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond26.preheader.i, %for.body.lr.ph.i
  %73 = phi i32 [ %.pre.i, %for.body.lr.ph.i ], [ %74, %for.cond26.preheader.i ]
  %indvars.iv80.i = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next81.i, %for.cond26.preheader.i ]
  %end_plus_one6.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %72, i64 %indvars.iv80.i, i32 1
  %74 = load i32, i32* %end_plus_one6.i, align 4, !tbaa !149, !noalias !208
  %cmp765.i = icmp slt i32 %73, %74
  br i1 %cmp765.i, label %for.cond10.preheader.lr.ph.i, label %for.cond26.preheader.i

for.cond10.preheader.lr.ph.i:                     ; preds = %for.body.i
  %75 = sext i32 %73 to i64
  %76 = sext i32 %74 to i64
  %77 = load double*, double** %multiplier_.i, align 8, !tbaa !143, !noalias !208
  %78 = load i32*, i32** %index_.i, align 8, !tbaa !144, !noalias !208
  br label %for.cond.cleanup12.i

for.cond26.preheader.i.loopexit:                  ; preds = %for.cond.cleanup12.i
  %79 = bitcast double %add21.i to i64
  br label %for.cond26.preheader.i

for.cond26.preheader.i:                           ; preds = %for.cond26.preheader.i.loopexit, %for.body.i
  %80 = phi i64 [ 0, %for.body.i ], [ %79, %for.cond26.preheader.i.loopexit ]
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %72, i64 %indvars.iv80.i, i32 0
  %81 = load i32, i32* %index.i, align 4, !tbaa !147, !noalias !208
  %82 = shl i32 %81, 1
  %83 = sext i32 %82 to i64
  %scevgep.i = getelementptr double, double* %27, i64 %83
  %84 = bitcast double* %scevgep.i to i64*
  store i64 %80, i64* %84, align 8
  %indvars.iv.next81.i = add nuw nsw i64 %indvars.iv80.i, 1
  %exitcond84.not.i = icmp eq i64 %indvars.iv.next81.i, %wide.trip.count83.i
  br i1 %exitcond84.not.i, label %_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi.exit, label %for.body.i, !llvm.loop !189

for.cond.cleanup12.i:                             ; preds = %for.cond.cleanup12.i, %for.cond10.preheader.lr.ph.i
  %85 = phi double [ 0.000000e+00, %for.cond10.preheader.lr.ph.i ], [ %add21.i, %for.cond.cleanup12.i ]
  %indvars.iv73.i = phi i64 [ %75, %for.cond10.preheader.lr.ph.i ], [ %indvars.iv.next74.i, %for.cond.cleanup12.i ]
  %arrayidx15.i = getelementptr inbounds double, double* %77, i64 %indvars.iv73.i
  %86 = load double, double* %arrayidx15.i, align 8, !tbaa !61, !noalias !208
  %arrayidx17.i = getelementptr inbounds i32, i32* %78, i64 %indvars.iv73.i
  %87 = load i32, i32* %arrayidx17.i, align 4, !tbaa !47, !noalias !208
  %mul.i = shl nsw i32 %87, 1
  %88 = sext i32 %mul.i to i64
  %arrayidx19.i = getelementptr inbounds double, double* %27, i64 %88
  %89 = load double, double* %arrayidx19.i, align 8, !tbaa !61, !alias.scope !208
  %mul20.i = fmul fast double %89, %86
  %add21.i = fadd fast double %85, %mul20.i
  %indvars.iv.next74.i = add nsw i64 %indvars.iv73.i, 1
  %exitcond270.not = icmp eq i64 %indvars.iv.next74.i, %76
  br i1 %exitcond270.not, label %for.cond26.preheader.i.loopexit, label %for.cond.cleanup12.i, !llvm.loop !187

_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi.exit: ; preds = %for.cond26.preheader.i, %for.body82
  %90 = load i32*, i32** %_M_finish.i.i185, align 8, !tbaa !179
  %91 = load i32*, i32** %_M_start.i.i184, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i191248 = ptrtoint i32* %90 to i64
  %sub.ptr.rhs.cast.i.i192249 = ptrtoint i32* %91 to i64
  %sub.ptr.sub.i.i193250 = sub i64 %sub.ptr.lhs.cast.i.i191248, %sub.ptr.rhs.cast.i.i192249
  %92 = lshr exact i64 %sub.ptr.sub.i.i193250, 2
  %conv.i194251 = trunc i64 %92 to i32
  %cmp97252 = icmp sgt i32 %conv.i194251, 0
  br i1 %cmp97252, label %for.body104.lr.ph, label %if.end124

for.body104.lr.ph:                                ; preds = %_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi.exit
  %wide.trip.count = and i64 %92, 4294967295
  %mul114 = mul nsw i32 %mul67, %conv.i194251
  br label %for.body104

for.body104:                                      ; preds = %for.body104, %for.body104.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body104.lr.ph ], [ %indvars.iv.next, %for.body104 ]
  %add.ptr.i = getelementptr inbounds i32, i32* %91, i64 %indvars.iv
  %93 = load i32, i32* %add.ptr.i, align 4, !tbaa !47
  %mul108 = shl nsw i32 %93, 1
  %idxprom110 = sext i32 %mul108 to i64
  %arrayidx111 = getelementptr inbounds double, double* %27, i64 %idxprom110
  %94 = load double, double* %arrayidx111, align 8, !tbaa !61
  %95 = trunc i64 %indvars.iv to i32
  %add115 = add nsw i32 %mul114, %95
  %idxprom116 = sext i32 %add115 to i64
  %arrayidx117 = getelementptr inbounds double, double* %jacobian_out, i64 %idxprom116
  store double %94, double* %arrayidx117, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end124, label %for.body104, !llvm.loop !211

if.end124:                                        ; preds = %for.body104, %_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi.exit, %for.cond.cleanup
  call void @free(i8* %28) #37
  ret void

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread304
  %.pn246 = phi { i8*, i32 } [ %.pn247, %cleanup.action ], [ %20, %if.then.i.i ], [ %20, %ehcleanup.thread304 ]
  resume { i8*, i32 } %.pn246

unreachable:                                      ; preds = %invoke.cont5
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZNK5adept5Stack23jacobian_reverse_openmpEPd(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this, double* nocapture %jacobian_out) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %a = alloca [2 x double], align 16
  %_M_finish.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !179
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %2 = lshr exact i64 %sub.ptr.sub.i.i, 2
  %conv.i = trunc i64 %2 to i32
  %sub = add nsw i32 %conv.i, 1
  %div = sdiv i32 %sub, 2
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %3 = load i32, i32* %max_gradient_, align 8, !tbaa !166
  %conv = sext i32 %3 to i64
  %cmp.i.i = icmp slt i32 %3, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.113, i64 0, i64 0)) #39
  unreachable

_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i: ; preds = %entry
  %cmp.not.i.i.i.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i.i.i.i, label %invoke.cont.thread, label %invoke.cont

invoke.cont:                                      ; preds = %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv, 4
  %call2.i.i.i.i3.i.i243 = tail call noalias nonnull i8* @_Znwm(i64 %mul.i.i.i.i.i.i) #41
  %4 = bitcast i8* %call2.i.i.i.i3.i.i243 to %"struct.adept::Block"*
  %add.ptr.i.i.i = getelementptr %"struct.adept::Block", %"struct.adept::Block"* %4, i64 %conv
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i3.i.i243, i8 0, i64 %mul.i.i.i.i.i.i, i1 false)
  %phi.cast = ptrtoint %"struct.adept::Block"* %add.ptr.i.i.i to i64
  %cmp287 = icmp sgt i32 %conv.i, 0
  br i1 %cmp287, label %for.body.lr.ph, label %if.then.i.i.i

invoke.cont.thread:                               ; preds = %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i
  %cmp287329 = icmp sgt i32 %conv.i, 0
  br i1 %cmp287329, label %for.body.lr.ph, label %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev.exit

for.body.lr.ph:                                   ; preds = %invoke.cont.thread, %invoke.cont
  %cond.i.i.i.i267289333 = phi i8* [ null, %invoke.cont.thread ], [ %call2.i.i.i.i3.i.i243, %invoke.cont ]
  %__cur.0.lcssa.i.i.i.i.i332 = phi i64 [ 0, %invoke.cont.thread ], [ %phi.cast, %invoke.cont ]
  %cond.i.i.i.i267330 = phi %"struct.adept::Block"* [ null, %invoke.cont.thread ], [ %4, %invoke.cont ]
  %sub3 = add nsw i32 %div, -1
  %5 = and i32 %conv.i, -2147483647
  %cmp5 = icmp eq i32 %5, 1
  %sub.ptr.rhs.cast.i = ptrtoint %"struct.adept::Block"* %cond.i.i.i.i267330 to i64
  %sub.ptr.sub.i = sub i64 %__cur.0.lcssa.i.i.i.i.i332, %sub.ptr.rhs.cast.i
  %cmp8268.not = icmp eq i64 %sub.ptr.sub.i, 0
  %6 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %7 = load i32, i32* %n_statements_, align 8, !tbaa !146
  %cmp31277 = icmp sgt i32 %7, 1
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %8 = bitcast [2 x double]* %a to i8*
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %_M_finish.i.i217 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = load i32*, i32** %_M_finish.i.i217, align 8, !tbaa !179
  %_M_start.i.i218 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %_M_start.i.i218, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i219281 = ptrtoint i32* %9 to i64
  %sub.ptr.rhs.cast.i.i220282 = ptrtoint i32* %10 to i64
  %sub.ptr.sub.i.i221283 = sub i64 %sub.ptr.lhs.cast.i.i219281, %sub.ptr.rhs.cast.i.i220282
  %11 = lshr exact i64 %sub.ptr.sub.i.i221283, 2
  %conv.i222284 = trunc i64 %11 to i32
  %cmp105285 = icmp sgt i32 %conv.i222284, 0
  %12 = icmp sgt i64 %sub.ptr.sub.i, -1
  %smax = select i1 %12, i64 %sub.ptr.sub.i, i64 -1
  %13 = icmp slt i64 %smax, 1
  %smin = select i1 %13, i64 %smax, i64 1
  %14 = sub i64 %sub.ptr.rhs.cast.i, %__cur.0.lcssa.i.i.i.i.i332
  %15 = icmp sgt i64 %14, %sub.ptr.sub.i
  %smax290 = select i1 %15, i64 %14, i64 %sub.ptr.sub.i
  %16 = lshr i64 %smax290, 4
  %17 = mul nsw i64 %smin, %16
  %18 = icmp ugt i64 %17, 1
  %umax = select i1 %18, i64 %17, i64 1
  %19 = shl nuw i64 %umax, 4
  %20 = zext i32 %7 to i64
  %21 = zext i32 %sub3 to i64
  %22 = icmp sgt i32 %div, 1
  %smax322 = select i1 %22, i32 %div, i32 1
  %wide.trip.count323 = zext i32 %smax322 to i64
  %sub.ptr.rhs.cast.i.i212 = ptrtoint i32* %6 to i64
  %wide.trip.count317 = and i64 %11, 4294967295
  br label %for.body

for.body:                                         ; preds = %for.cond.cleanup106, %for.body.lr.ph
  %indvars.iv319 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next320, %for.cond.cleanup106 ]
  %23 = shl nuw nsw i64 %indvars.iv319, 1
  %cmp4 = icmp eq i64 %indvars.iv319, %21
  %or.cond = and i1 %cmp5, %cmp4
  %spec.select = select i1 %or.cond, i32 1, i32 2
  br i1 %cmp8268.not, label %for.cond14.preheader, label %for.body9.preheader

for.body9.preheader:                              ; preds = %for.body
  call void @llvm.memset.p0i8.i64(i8* align 8 %cond.i.i.i.i267289333, i8 0, i64 %19, i1 false)
  br label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body9.preheader, %for.body
  %24 = icmp ugt i32 %spec.select, 1
  %umax292 = select i1 %24, i32 %spec.select, i32 1
  %wide.trip.count = zext i32 %umax292 to i64
  br label %for.body17

for.cond.cleanup16:                               ; preds = %for.body17
  br i1 %cmp31277, label %for.body33.lr.ph, label %for.cond101.preheader

for.body33.lr.ph:                                 ; preds = %for.cond.cleanup16
  %25 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !141
  br label %for.body33

for.body17:                                       ; preds = %for.body17, %for.cond14.preheader
  %indvars.iv = phi i64 [ 0, %for.cond14.preheader ], [ %indvars.iv.next, %for.body17 ]
  %26 = add nuw nsw i64 %indvars.iv, %23
  %add.ptr.i239 = getelementptr inbounds i32, i32* %6, i64 %26
  %27 = load i32, i32* %add.ptr.i239, align 4, !tbaa !47
  %conv21 = sext i32 %27 to i64
  %arrayidx.i235 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i267330, i64 %conv21, i32 0, i64 %indvars.iv
  store double 1.000000e+00, double* %arrayidx.i235, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup16, label %for.body17, !llvm.loop !212

for.cond101.preheader:                            ; preds = %if.end95, %for.cond.cleanup16
  br i1 %cmp105285, label %for.cond109.preheader.lr.ph, label %for.cond.cleanup106

for.cond109.preheader.lr.ph:                      ; preds = %for.cond101.preheader
  %28 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !179
  %sub.ptr.lhs.cast.i.i211 = ptrtoint i32* %28 to i64
  %sub.ptr.sub.i.i213 = sub i64 %sub.ptr.lhs.cast.i.i211, %sub.ptr.rhs.cast.i.i212
  %29 = lshr exact i64 %sub.ptr.sub.i.i213, 2
  %30 = and i64 %29, 4294967295
  br label %for.cond109.preheader

for.body33:                                       ; preds = %if.end95, %for.body33.lr.ph
  %indvars.iv306 = phi i64 [ %20, %for.body33.lr.ph ], [ %indvars.iv.next307, %if.end95 ]
  %ist.0.in278 = phi i32 [ %7, %for.body33.lr.ph ], [ %ist.0279, %if.end95 ]
  %ist.0279 = add nsw i32 %ist.0.in278, -1
  %idxprom = sext i32 %ist.0279 to i64
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #37
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %25, i64 %idxprom, i32 0
  %31 = load i32, i32* %index, align 4, !tbaa !147
  %conv39 = sext i32 %31 to i64
  br label %for.body38

for.cond.cleanup37:                               ; preds = %for.body38
  %tobool.not = icmp eq i32 %n_non_zero.1, 0
  br i1 %tobool.not, label %if.end95, label %if.then59

for.body38:                                       ; preds = %for.body38, %for.body33
  %indvars.iv296 = phi i64 [ 0, %for.body33 ], [ %indvars.iv.next297, %for.body38 ]
  %n_non_zero.0271 = phi i32 [ 0, %for.body33 ], [ %n_non_zero.1, %for.body38 ]
  %arrayidx.i231 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i267330, i64 %conv39, i32 0, i64 %indvars.iv296
  %32 = load double, double* %arrayidx.i231, align 8, !tbaa !61
  %arrayidx45 = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 %indvars.iv296
  store double %32, double* %arrayidx45, align 8, !tbaa !61
  store double 0.000000e+00, double* %arrayidx.i231, align 8, !tbaa !61
  %cmp53 = fcmp fast une double %32, 0.000000e+00
  %n_non_zero.1 = select i1 %cmp53, i32 1, i32 %n_non_zero.0271
  %indvars.iv.next297 = add nuw nsw i64 %indvars.iv296, 1
  %exitcond299.not = icmp eq i64 %indvars.iv.next297, %wide.trip.count
  br i1 %exitcond299.not, label %for.cond.cleanup37, label %for.body38, !llvm.loop !213

if.then59:                                        ; preds = %for.cond.cleanup37
  %sub61 = add nsw i32 %ist.0.in278, -2
  %33 = zext i32 %sub61 to i64
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %25, i64 %33, i32 1
  %34 = load i32, i32* %end_plus_one, align 4, !tbaa !149
  %end_plus_one65 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %25, i64 %idxprom, i32 1
  %35 = load i32, i32* %end_plus_one65, align 4, !tbaa !149
  %cmp66274 = icmp slt i32 %34, %35
  br i1 %cmp66274, label %for.body68.lr.ph, label %if.end95

for.body68.lr.ph:                                 ; preds = %if.then59
  %36 = load double*, double** %multiplier_, align 8, !tbaa !143
  %37 = load i32*, i32** %index_, align 8, !tbaa !144
  %38 = sext i32 %34 to i64
  %39 = sext i32 %35 to i64
  br label %for.body68

for.body68:                                       ; preds = %for.cond.cleanup81, %for.body68.lr.ph
  %indvars.iv304 = phi i64 [ %38, %for.body68.lr.ph ], [ %indvars.iv.next305, %for.cond.cleanup81 ]
  %arrayidx70 = getelementptr inbounds double, double* %36, i64 %indvars.iv304
  %40 = load double, double* %arrayidx70, align 8, !tbaa !61
  %arrayidx72 = getelementptr inbounds i32, i32* %37, i64 %indvars.iv304
  %41 = load i32, i32* %arrayidx72, align 4, !tbaa !47
  %conv73 = sext i32 %41 to i64
  br label %for.body82

for.cond.cleanup81:                               ; preds = %for.body82
  %indvars.iv.next305 = add nsw i64 %indvars.iv304, 1
  %cmp66 = icmp slt i64 %indvars.iv.next305, %39
  br i1 %cmp66, label %for.body68, label %if.end95, !llvm.loop !214

for.body82:                                       ; preds = %for.body82, %for.body68
  %indvars.iv300 = phi i64 [ 0, %for.body68 ], [ %indvars.iv.next301, %for.body82 ]
  %arrayidx84 = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 %indvars.iv300
  %42 = load double, double* %arrayidx84, align 8, !tbaa !61
  %mul85 = fmul fast double %42, %40
  %arrayidx87 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i267330, i64 %conv73, i32 0, i64 %indvars.iv300
  %43 = load double, double* %arrayidx87, align 8, !tbaa !61
  %add88 = fadd fast double %43, %mul85
  store double %add88, double* %arrayidx87, align 8, !tbaa !61
  %indvars.iv.next301 = add nuw nsw i64 %indvars.iv300, 1
  %exitcond303.not = icmp eq i64 %indvars.iv.next301, %wide.trip.count
  br i1 %exitcond303.not, label %for.cond.cleanup81, label %for.body82, !llvm.loop !215

if.end95:                                         ; preds = %for.cond.cleanup81, %if.then59, %for.cond.cleanup37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #37
  %cmp31 = icmp sgt i64 %indvars.iv306, 2
  %indvars.iv.next307 = add nsw i64 %indvars.iv306, -1
  br i1 %cmp31, label %for.body33, label %for.cond101.preheader, !llvm.loop !216

for.cond109.preheader:                            ; preds = %for.cond.cleanup111, %for.cond109.preheader.lr.ph
  %indvars.iv313 = phi i64 [ 0, %for.cond109.preheader.lr.ph ], [ %indvars.iv.next314, %for.cond.cleanup111 ]
  %add.ptr.i216 = getelementptr inbounds i32, i32* %10, i64 %indvars.iv313
  %44 = load i32, i32* %add.ptr.i216, align 4, !tbaa !47
  %conv115 = sext i32 %44 to i64
  %45 = mul i64 %indvars.iv313, %30
  br label %for.body112

for.cond.cleanup106:                              ; preds = %for.cond.cleanup111, %for.cond101.preheader
  %indvars.iv.next320 = add nuw nsw i64 %indvars.iv319, 1
  %exitcond324.not = icmp eq i64 %indvars.iv.next320, %wide.trip.count323
  br i1 %exitcond324.not, label %if.then.i.i.i, label %for.body, !llvm.loop !217

for.cond.cleanup111:                              ; preds = %for.body112
  %indvars.iv.next314 = add nuw nsw i64 %indvars.iv313, 1
  %exitcond318.not = icmp eq i64 %indvars.iv.next314, %wide.trip.count317
  br i1 %exitcond318.not, label %for.cond.cleanup106, label %for.cond109.preheader, !llvm.loop !218

for.body112:                                      ; preds = %for.body112, %for.cond109.preheader
  %indvars.iv308 = phi i64 [ 0, %for.cond109.preheader ], [ %indvars.iv.next309, %for.body112 ]
  %arrayidx.i = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i267330, i64 %conv115, i32 0, i64 %indvars.iv308
  %46 = load double, double* %arrayidx.i, align 8, !tbaa !61
  %47 = add nuw nsw i64 %indvars.iv308, %23
  %add124 = add i64 %47, %45
  %sext = shl i64 %add124, 32
  %idxprom125 = ashr exact i64 %sext, 32
  %arrayidx126 = getelementptr inbounds double, double* %jacobian_out, i64 %idxprom125
  store double %46, double* %arrayidx126, align 8, !tbaa !61
  %indvars.iv.next309 = add nuw nsw i64 %indvars.iv308, 1
  %exitcond312.not = icmp eq i64 %indvars.iv.next309, %wide.trip.count
  br i1 %exitcond312.not, label %for.cond.cleanup111, label %for.body112, !llvm.loop !219

if.then.i.i.i:                                    ; preds = %for.cond.cleanup106, %invoke.cont
  %cond.i.i.i.i267289334 = phi i8* [ %call2.i.i.i.i3.i.i243, %invoke.cont ], [ %cond.i.i.i.i267289333, %for.cond.cleanup106 ]
  tail call void @_ZdlPv(i8* nonnull %cond.i.i.i.i267289334) #37
  br label %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev.exit

_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev.exit: ; preds = %if.then.i.i.i, %invoke.cont.thread
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack16jacobian_reverseEPd(%"class.adept::Stack"* nonnull readonly dereferenceable(149) %this, double* nocapture %jacobian_out) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %a = alloca [2 x double], align 16
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %0 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !110
  %_M_finish.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %1 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !110
  %cmp.i.i = icmp eq i32* %0, %1
  br i1 %cmp.i.i, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %_M_start.i.i426 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %2 = load i32*, i32** %_M_start.i.i426, align 8, !tbaa !110
  %_M_finish.i.i427 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %3 = load i32*, i32** %_M_finish.i.i427, align 8, !tbaa !110
  %cmp.i.i428 = icmp eq i32* %2, %3
  br i1 %cmp.i.i428, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %4 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #37
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !14
  %7 = bitcast %union.anon* %5 to i8*
  %8 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #37
  store i64 79, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i513 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %if.then
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i513, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %9 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %9, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(79) %call5.i.i.i9.i513, i8* nonnull align 1 dereferenceable(79) getelementptr inbounds ([80 x i8], [80 x i8]* @.str.93, i64 0, i64 0), i64 79, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i513, i64 %9
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #37
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %10 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %11 = getelementptr inbounds i8, i8* %exception, i64 24
  %12 = bitcast i8* %message_.i.i.i to i8**
  store i8* %11, i8** %12, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i514 = getelementptr inbounds i8, i8* %exception, i64 16
  %13 = bitcast i8* %_M_string_length.i.i.i.i.i.i514 to i64*
  store i64 0, i64* %13, align 8, !tbaa !19
  store i8 0, i8* %11, align 1, !tbaa !21
  %14 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept41dependents_or_independents_not_identifiedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %10, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont5 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %15 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !127
  %16 = load i8*, i8** %12, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %16, %11
  br i1 %cmp.i.i.i.i.i, label %lpad4.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %16) #37
  br label %lpad4.body

invoke.cont5:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept41dependents_or_independents_not_identifiedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad4.body.thread

ehcleanup.thread:                                 ; preds = %if.then
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  br label %cleanup.action

lpad4.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %18 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %18) #37
  %19 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %19, %7
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i515.thread

if.then.i.i515.thread:                            ; preds = %lpad4.body
  call void @_ZdlPv(i8* %19) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  br label %cleanup.action

lpad4.body.thread:                                ; preds = %invoke.cont5
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i640 = icmp eq i8* %21, %7
  br i1 %cmp.i.i.i640, label %ehcleanup.thread645, label %if.then.i.i515

ehcleanup.thread645:                              ; preds = %lpad4.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  br label %eh.resume

if.then.i.i515:                                   ; preds = %lpad4.body.thread
  call void @_ZdlPv(i8* %21) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad4.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i515.thread, %ehcleanup.thread
  %.pn549 = phi { i8*, i32 } [ %17, %ehcleanup.thread ], [ %15, %ehcleanup ], [ %15, %if.then.i.i515.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

if.end:                                           ; preds = %lor.lhs.false
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %22 = load i32, i32* %max_gradient_, align 8, !tbaa !166
  %conv = sext i32 %22 to i64
  %cmp.i.i511 = icmp slt i32 %22, 0
  br i1 %cmp.i.i511, label %if.then.i.i, label %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i

if.then.i.i:                                      ; preds = %if.end
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.113, i64 0, i64 0)) #39
  unreachable

_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i: ; preds = %if.end
  %cmp.not.i.i.i.i = icmp eq i32 %22, 0
  br i1 %cmp.not.i.i.i.i, label %invoke.cont11, label %_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i

_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i: ; preds = %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv, 4
  %call2.i.i.i.i3.i.i512 = tail call noalias nonnull i8* @_Znwm(i64 %mul.i.i.i.i.i.i) #41
  %23 = bitcast i8* %call2.i.i.i.i3.i.i512 to %"struct.adept::Block"*
  %add.ptr.i.i.i = getelementptr %"struct.adept::Block", %"struct.adept::Block"* %23, i64 %conv
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i3.i.i512, i8 0, i64 %mul.i.i.i.i.i.i, i1 false)
  %phi.cast = ptrtoint %"struct.adept::Block"* %add.ptr.i.i.i to i64
  %.pre = load i32*, i32** %_M_finish.i.i427, align 8, !tbaa !179
  %.pre636 = load i32*, i32** %_M_start.i.i426, align 8, !tbaa !139
  br label %invoke.cont11

invoke.cont11:                                    ; preds = %_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i, %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i
  %24 = phi i32* [ %.pre636, %_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i ], [ %2, %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i ]
  %25 = phi i32* [ %.pre, %_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i ], [ %3, %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i ]
  %cond.i.i.i.i552 = phi %"struct.adept::Block"* [ %23, %_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i ], [ null, %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i ]
  %__cur.0.lcssa.i.i.i.i.i = phi i64 [ %phi.cast, %_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i ], [ 0, %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i ]
  %cond.i.i.i.i552600 = bitcast %"struct.adept::Block"* %cond.i.i.i.i552 to i8*
  %sub.ptr.lhs.cast.i.i507 = ptrtoint i32* %25 to i64
  %sub.ptr.rhs.cast.i.i508 = ptrtoint i32* %24 to i64
  %sub.ptr.sub.i.i509 = sub i64 %sub.ptr.lhs.cast.i.i507, %sub.ptr.rhs.cast.i.i508
  %26 = lshr exact i64 %sub.ptr.sub.i.i509, 2
  %conv.i510 = trunc i64 %26 to i32
  %cmp591 = icmp sgt i32 %conv.i510, 1
  br i1 %cmp591, label %for.cond20.preheader.lr.ph, label %for.cond.cleanup

for.cond20.preheader.lr.ph:                       ; preds = %invoke.cont11
  %div651652 = lshr i64 %sub.ptr.sub.i.i509, 3
  %div651 = and i64 %div651652, 2147483647
  %sub.ptr.rhs.cast.i496 = ptrtoint %"struct.adept::Block"* %cond.i.i.i.i552 to i64
  %sub.ptr.sub.i497 = sub i64 %__cur.0.lcssa.i.i.i.i.i, %sub.ptr.rhs.cast.i496
  %cmp22572.not = icmp eq i64 %sub.ptr.sub.i497, 0
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %27 = load i32, i32* %n_statements_, align 8, !tbaa !146
  %cmp47581 = icmp sgt i32 %27, 1
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %28 = bitcast [2 x double]* %a to i8*
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %29 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !179
  %30 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i469585 = ptrtoint i32* %29 to i64
  %sub.ptr.rhs.cast.i.i470586 = ptrtoint i32* %30 to i64
  %sub.ptr.sub.i.i471587 = sub i64 %sub.ptr.lhs.cast.i.i469585, %sub.ptr.rhs.cast.i.i470586
  %31 = lshr exact i64 %sub.ptr.sub.i.i471587, 2
  %conv.i472588 = trunc i64 %31 to i32
  %cmp125589 = icmp sgt i32 %conv.i472588, 0
  %32 = icmp sgt i64 %sub.ptr.sub.i497, -1
  %smax603 = select i1 %32, i64 %sub.ptr.sub.i497, i64 -1
  %33 = icmp slt i64 %smax603, 1
  %smin604 = select i1 %33, i64 %smax603, i64 1
  %34 = sub i64 %sub.ptr.rhs.cast.i496, %__cur.0.lcssa.i.i.i.i.i
  %35 = icmp sgt i64 %34, %sub.ptr.sub.i497
  %smax605 = select i1 %35, i64 %34, i64 %sub.ptr.sub.i497
  %36 = lshr i64 %smax605, 4
  %37 = mul nsw i64 %smin604, %36
  %38 = icmp ugt i64 %37, 1
  %umax606 = select i1 %38, i64 %37, i64 1
  %39 = shl nuw i64 %umax606, 4
  %40 = zext i32 %27 to i64
  %sext637 = shl i64 %sub.ptr.sub.i.i509, 30
  %41 = ashr i64 %sext637, 32
  br label %for.cond20.preheader

for.cond20.preheader:                             ; preds = %for.cond.cleanup126, %for.cond20.preheader.lr.ph
  %indvars.iv632 = phi i64 [ 0, %for.cond20.preheader.lr.ph ], [ %indvars.iv.next633, %for.cond.cleanup126 ]
  %indvar = phi i64 [ 0, %for.cond20.preheader.lr.ph ], [ %indvar.next, %for.cond.cleanup126 ]
  %42 = shl nuw nsw i64 %indvar, 1
  br i1 %cmp22572.not, label %for.body33, label %for.body24.preheader

for.body24.preheader:                             ; preds = %for.cond20.preheader
  call void @llvm.memset.p0i8.i64(i8* align 8 %cond.i.i.i.i552600, i8 0, i64 %39, i1 false)
  br label %for.body33

for.cond.cleanup.loopexit:                        ; preds = %for.cond.cleanup126
  %43 = trunc i64 %indvars.iv.next633 to i32
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %invoke.cont11
  %i_dependent.0.lcssa = phi i32 [ 0, %invoke.cont11 ], [ %43, %for.cond.cleanup.loopexit ]
  %44 = and i32 %conv.i510, -2147483647
  %cmp161 = icmp eq i32 %44, 1
  br i1 %cmp161, label %for.cond164.preheader, label %if.end324

for.cond164.preheader:                            ; preds = %for.cond.cleanup
  %sub.ptr.rhs.cast.i = ptrtoint %"struct.adept::Block"* %cond.i.i.i.i552 to i64
  %sub.ptr.sub.i = sub i64 %__cur.0.lcssa.i.i.i.i.i, %sub.ptr.rhs.cast.i
  %cmp166570.not = icmp eq i64 %sub.ptr.sub.i, 0
  br i1 %cmp166570.not, label %for.body180, label %for.body168.preheader

for.body168.preheader:                            ; preds = %for.cond164.preheader
  %45 = icmp sgt i64 %sub.ptr.sub.i, -1
  %smax601 = select i1 %45, i64 %sub.ptr.sub.i, i64 -1
  %46 = icmp slt i64 %smax601, 1
  %smin = select i1 %46, i64 %smax601, i64 1
  %47 = sub i64 %sub.ptr.rhs.cast.i, %__cur.0.lcssa.i.i.i.i.i
  %48 = icmp sgt i64 %47, %sub.ptr.sub.i
  %smax602 = select i1 %48, i64 %47, i64 %sub.ptr.sub.i
  %49 = lshr i64 %smax602, 4
  %50 = mul nsw i64 %smin, %49
  %51 = icmp ugt i64 %50, 1
  %umax = select i1 %51, i64 %50, i64 1
  %52 = shl nuw i64 %umax, 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %cond.i.i.i.i552600, i8 0, i64 %52, i1 false)
  br label %for.body180

for.body49.lr.ph:                                 ; preds = %for.body33
  %53 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !141
  br label %for.body49

for.body33:                                       ; preds = %for.body24.preheader, %for.cond20.preheader
  %add.ptr.i489 = getelementptr inbounds i32, i32* %24, i64 %indvars.iv632
  %54 = load i32, i32* %add.ptr.i489, align 4, !tbaa !47
  %conv37 = sext i32 %54 to i64
  %arrayidx.i485 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i552, i64 %conv37, i32 0, i64 0
  store double 1.000000e+00, double* %arrayidx.i485, align 8, !tbaa !61
  %55 = or i64 %indvars.iv632, 1
  %add.ptr.i489.c = getelementptr inbounds i32, i32* %24, i64 %55
  %56 = load i32, i32* %add.ptr.i489.c, align 4, !tbaa !47
  %conv37.c = sext i32 %56 to i64
  %arrayidx.i485.c = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i552, i64 %conv37.c, i32 0, i64 1
  store double 1.000000e+00, double* %arrayidx.i485.c, align 8, !tbaa !61
  br i1 %cmp47581, label %for.body49.lr.ph, label %for.cond121.preheader

for.cond121.preheader:                            ; preds = %if.end114, %for.body33
  br i1 %cmp125589, label %for.cond129.preheader.lr.ph, label %for.cond.cleanup126

for.cond129.preheader.lr.ph:                      ; preds = %for.cond121.preheader
  %57 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %58 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !179
  %sub.ptr.lhs.cast.i.i469 = ptrtoint i32* %58 to i64
  %sub.ptr.rhs.cast.i.i470 = ptrtoint i32* %57 to i64
  %sub.ptr.sub.i.i471 = sub i64 %sub.ptr.lhs.cast.i.i469, %sub.ptr.rhs.cast.i.i470
  %59 = lshr exact i64 %sub.ptr.sub.i.i471, 2
  %conv.i472 = trunc i64 %59 to i32
  %60 = icmp sgt i32 %conv.i472, 1
  %.op = and i64 %59, 4294967295
  %wide.trip.count630 = select i1 %60, i64 %.op, i64 1
  br label %for.cond129.preheader

for.body49:                                       ; preds = %if.end114, %for.body49.lr.ph
  %indvars.iv619 = phi i64 [ %40, %for.body49.lr.ph ], [ %indvars.iv.next620, %if.end114 ]
  %ist.0.in582 = phi i32 [ %27, %for.body49.lr.ph ], [ %ist.0583, %if.end114 ]
  %ist.0583 = add nsw i32 %ist.0.in582, -1
  %idxprom = sext i32 %ist.0583 to i64
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #37
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %53, i64 %idxprom, i32 0
  %61 = load i32, i32* %index, align 4, !tbaa !147
  %conv55 = sext i32 %61 to i64
  br label %for.body54

for.cond.cleanup53:                               ; preds = %for.body54
  %tobool.not = icmp eq i32 %n_non_zero.1, 0
  br i1 %tobool.not, label %if.end114, label %if.then76

for.body54:                                       ; preds = %for.body54, %for.body49
  %cmp52 = phi i1 [ true, %for.body49 ], [ false, %for.body54 ]
  %indvars.iv613 = phi i64 [ 0, %for.body49 ], [ 1, %for.body54 ]
  %n_non_zero.0575 = phi i32 [ 0, %for.body49 ], [ %n_non_zero.1, %for.body54 ]
  %arrayidx.i481 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i552, i64 %conv55, i32 0, i64 %indvars.iv613
  %62 = load double, double* %arrayidx.i481, align 8, !tbaa !61
  %arrayidx61 = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 %indvars.iv613
  store double %62, double* %arrayidx61, align 8, !tbaa !61
  store double 0.000000e+00, double* %arrayidx.i481, align 8, !tbaa !61
  %cmp69 = fcmp fast une double %62, 0.000000e+00
  %n_non_zero.1 = select i1 %cmp69, i32 1, i32 %n_non_zero.0575
  br i1 %cmp52, label %for.body54, label %for.cond.cleanup53, !llvm.loop !220

if.then76:                                        ; preds = %for.cond.cleanup53
  %sub78 = add nsw i32 %ist.0.in582, -2
  %63 = zext i32 %sub78 to i64
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %53, i64 %63, i32 1
  %64 = load i32, i32* %end_plus_one, align 4, !tbaa !149
  %end_plus_one82 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %53, i64 %idxprom, i32 1
  %65 = load i32, i32* %end_plus_one82, align 4, !tbaa !149
  %cmp83578 = icmp slt i32 %64, %65
  br i1 %cmp83578, label %for.body85.lr.ph, label %if.end114

for.body85.lr.ph:                                 ; preds = %if.then76
  %66 = load double*, double** %multiplier_, align 8, !tbaa !143
  %67 = load i32*, i32** %index_, align 8, !tbaa !144
  %68 = sext i32 %64 to i64
  %69 = sext i32 %65 to i64
  br label %for.body85

for.body85:                                       ; preds = %for.body85, %for.body85.lr.ph
  %indvars.iv617 = phi i64 [ %68, %for.body85.lr.ph ], [ %indvars.iv.next618, %for.body85 ]
  %arrayidx87 = getelementptr inbounds double, double* %66, i64 %indvars.iv617
  %70 = load double, double* %arrayidx87, align 8, !tbaa !61
  %arrayidx89 = getelementptr inbounds i32, i32* %67, i64 %indvars.iv617
  %71 = load i32, i32* %arrayidx89, align 4, !tbaa !47
  %conv90 = sext i32 %71 to i64
  %arrayidx101 = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 0
  %72 = load double, double* %arrayidx101, align 16, !tbaa !61
  %mul = fmul fast double %72, %70
  %arrayidx103 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i552, i64 %conv90, i32 0, i64 0
  %73 = load double, double* %arrayidx103, align 8, !tbaa !61
  %add104 = fadd fast double %73, %mul
  store double %add104, double* %arrayidx103, align 8, !tbaa !61
  %arrayidx101.c = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 1
  %74 = load double, double* %arrayidx101.c, align 8, !tbaa !61
  %mul.c = fmul fast double %74, %70
  %arrayidx103.c = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i552, i64 %conv90, i32 0, i64 1
  %75 = load double, double* %arrayidx103.c, align 8, !tbaa !61
  %add104.c = fadd fast double %75, %mul.c
  store double %add104.c, double* %arrayidx103.c, align 8, !tbaa !61
  %indvars.iv.next618 = add nsw i64 %indvars.iv617, 1
  %cmp83 = icmp slt i64 %indvars.iv.next618, %69
  br i1 %cmp83, label %for.body85, label %if.end114, !llvm.loop !221

if.end114:                                        ; preds = %for.body85, %if.then76, %for.cond.cleanup53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #37
  %cmp47 = icmp sgt i64 %indvars.iv619, 2
  %indvars.iv.next620 = add nsw i64 %indvars.iv619, -1
  br i1 %cmp47, label %for.body49, label %for.cond121.preheader, !llvm.loop !222

for.cond129.preheader:                            ; preds = %for.cond129.preheader, %for.cond129.preheader.lr.ph
  %indvar621 = phi i64 [ 0, %for.cond129.preheader.lr.ph ], [ %indvar.next622, %for.cond129.preheader ]
  %76 = mul nsw i64 %41, %indvar621
  %77 = add nsw i64 %42, %76
  %scevgep = getelementptr double, double* %jacobian_out, i64 %77
  %scevgep623 = bitcast double* %scevgep to i8*
  %add.ptr.i466 = getelementptr inbounds i32, i32* %57, i64 %indvar621
  %78 = load i32, i32* %add.ptr.i466, align 4, !tbaa !47
  %conv136 = sext i32 %78 to i64
  %scevgep624 = getelementptr %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i552, i64 %conv136
  %scevgep624625 = bitcast %"struct.adept::Block"* %scevgep624 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %scevgep623, i8* nonnull align 8 dereferenceable(16) %scevgep624625, i64 16, i1 false)
  %indvar.next622 = add nuw nsw i64 %indvar621, 1
  %exitcond631.not = icmp eq i64 %indvar.next622, %wide.trip.count630
  br i1 %exitcond631.not, label %for.cond.cleanup126, label %for.cond129.preheader, !llvm.loop !223

for.cond.cleanup126:                              ; preds = %for.cond129.preheader, %for.cond121.preheader
  %indvars.iv.next633 = add nuw nsw i64 %indvars.iv632, 2
  %indvar.next = add nuw nsw i64 %indvar, 1
  %exitcond635.not = icmp eq i64 %indvar.next, %div651
  br i1 %exitcond635.not, label %for.cond.cleanup.loopexit, label %for.cond20.preheader, !llvm.loop !224

for.body180:                                      ; preds = %for.body168.preheader, %for.cond164.preheader
  %conv183 = zext i32 %i_dependent.0.lcssa to i64
  %79 = load i32*, i32** %_M_start.i.i426, align 8, !tbaa !139
  %add.ptr.i452 = getelementptr inbounds i32, i32* %79, i64 %conv183
  %80 = load i32, i32* %add.ptr.i452, align 4, !tbaa !47
  %conv185 = sext i32 %80 to i64
  %arrayidx.i448 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i552, i64 %conv185, i32 0, i64 0
  store double 1.000000e+00, double* %arrayidx.i448, align 8, !tbaa !61
  %n_statements_195 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %81 = load i32, i32* %n_statements_195, align 8, !tbaa !146
  %cmp198567 = icmp sgt i32 %81, 1
  br i1 %cmp198567, label %for.body200.lr.ph, label %for.cond289.preheader

for.body200.lr.ph:                                ; preds = %for.body180
  %statement_202 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %82 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_202, align 8, !tbaa !141
  %multiplier_248 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_252 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %83 = zext i32 %81 to i64
  br label %for.body200

for.cond289.preheader:                            ; preds = %if.end280, %for.body180
  %84 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !179
  %85 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i435557 = ptrtoint i32* %84 to i64
  %sub.ptr.rhs.cast.i.i436558 = ptrtoint i32* %85 to i64
  %sub.ptr.sub.i.i437559 = sub i64 %sub.ptr.lhs.cast.i.i435557, %sub.ptr.rhs.cast.i.i436558
  %86 = lshr exact i64 %sub.ptr.sub.i.i437559, 2
  %conv.i438560 = trunc i64 %86 to i32
  %cmp293561 = icmp sgt i32 %conv.i438560, 0
  br i1 %cmp293561, label %for.body300.lr.ph, label %if.then.i.i.i

for.body300.lr.ph:                                ; preds = %for.cond289.preheader
  %sext = shl i64 %sub.ptr.sub.i.i509, 30
  %87 = ashr i64 %sext, 32
  %88 = sext i32 %i_dependent.0.lcssa to i64
  %wide.trip.count = and i64 %86, 4294967295
  br label %for.body300

for.body200:                                      ; preds = %if.end280, %for.body200.lr.ph
  %indvars.iv598 = phi i64 [ %83, %for.body200.lr.ph ], [ %indvars.iv.next599, %if.end280 ]
  %ist194.0.in568 = phi i32 [ %81, %for.body200.lr.ph ], [ %ist194.0569, %if.end280 ]
  %ist194.0569 = add nsw i32 %ist194.0.in568, -1
  %idxprom203 = sext i32 %ist194.0569 to i64
  %index212 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %82, i64 %idxprom203, i32 0
  %89 = load i32, i32* %index212, align 4, !tbaa !147
  %conv213 = sext i32 %89 to i64
  %arrayidx.i445 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i552, i64 %conv213, i32 0, i64 0
  %arrayidx.i445.promoted = load double, double* %arrayidx.i445, align 8, !tbaa !61
  %cmp227 = fcmp fast oeq double %arrayidx.i445.promoted, 0.000000e+00
  store double 0.000000e+00, double* %arrayidx.i445, align 8, !tbaa !61
  br i1 %cmp227, label %if.end280, label %if.then235

if.then235:                                       ; preds = %for.body200
  %sub238 = add nsw i32 %ist194.0.in568, -2
  %90 = zext i32 %sub238 to i64
  %end_plus_one241 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %82, i64 %90, i32 1
  %91 = load i32, i32* %end_plus_one241, align 4, !tbaa !149
  %end_plus_one243 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %82, i64 %idxprom203, i32 1
  %92 = load i32, i32* %end_plus_one243, align 4, !tbaa !149
  %cmp244564 = icmp slt i32 %91, %92
  br i1 %cmp244564, label %for.body246.lr.ph, label %if.end280

for.body246.lr.ph:                                ; preds = %if.then235
  %93 = load double*, double** %multiplier_248, align 8, !tbaa !143
  %94 = load i32*, i32** %index_252, align 8, !tbaa !144
  %95 = sext i32 %91 to i64
  %96 = sext i32 %92 to i64
  br label %for.body246

for.body246:                                      ; preds = %for.body246, %for.body246.lr.ph
  %indvars.iv596 = phi i64 [ %95, %for.body246.lr.ph ], [ %indvars.iv.next597, %for.body246 ]
  %arrayidx250 = getelementptr inbounds double, double* %93, i64 %indvars.iv596
  %97 = load double, double* %arrayidx250, align 8, !tbaa !61
  %arrayidx254 = getelementptr inbounds i32, i32* %94, i64 %indvars.iv596
  %98 = load i32, i32* %arrayidx254, align 4, !tbaa !47
  %conv255 = sext i32 %98 to i64
  %arrayidx.i439 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i552, i64 %conv255, i32 0, i64 0
  %mul267 = fmul fast double %97, %arrayidx.i445.promoted
  %99 = load double, double* %arrayidx.i439, align 8, !tbaa !61
  %add270 = fadd fast double %99, %mul267
  store double %add270, double* %arrayidx.i439, align 8, !tbaa !61
  %indvars.iv.next597 = add nsw i64 %indvars.iv596, 1
  %cmp244 = icmp slt i64 %indvars.iv.next597, %96
  br i1 %cmp244, label %for.body246, label %if.end280, !llvm.loop !225

if.end280:                                        ; preds = %for.body246, %if.then235, %for.body200
  %cmp198 = icmp sgt i64 %indvars.iv598, 2
  %indvars.iv.next599 = add nsw i64 %indvars.iv598, -1
  br i1 %cmp198, label %for.body200, label %for.cond289.preheader, !llvm.loop !226

for.body300:                                      ; preds = %for.body300, %for.body300.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body300.lr.ph ], [ %indvars.iv.next, %for.body300 ]
  %add.ptr.i432 = getelementptr inbounds i32, i32* %85, i64 %indvars.iv
  %100 = load i32, i32* %add.ptr.i432, align 4, !tbaa !47
  %conv304 = sext i32 %100 to i64
  %arrayidx.i = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i552, i64 %conv304, i32 0, i64 0
  %101 = load double, double* %arrayidx.i, align 8, !tbaa !61
  %102 = mul nsw i64 %indvars.iv, %87
  %103 = add nsw i64 %102, %88
  %arrayidx315 = getelementptr inbounds double, double* %jacobian_out, i64 %103
  store double %101, double* %arrayidx315, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.then.i.i.i, label %for.body300, !llvm.loop !227

if.end324:                                        ; preds = %for.cond.cleanup
  %tobool.not.i.i.i = icmp eq %"struct.adept::Block"* %cond.i.i.i.i552, null
  br i1 %tobool.not.i.i.i, label %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end324, %for.body300, %for.cond289.preheader
  tail call void @_ZdlPv(i8* nonnull %cond.i.i.i.i552600) #37
  br label %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev.exit

_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev.exit: ; preds = %if.then.i.i.i, %if.end324
  ret void

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i515, %ehcleanup.thread645
  %.pn.pn = phi { i8*, i32 } [ %.pn549, %cleanup.action ], [ %20, %if.then.i.i515 ], [ %20, %ehcleanup.thread645 ]
  resume { i8*, i32 } %.pn.pn

unreachable:                                      ; preds = %invoke.cont5
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack8jacobianEPd(%"class.adept::Stack"* nonnull readonly dereferenceable(149) %this, double* nocapture %jacobian_out) local_unnamed_addr #10 align 2 {
entry:
  %_M_finish.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !179
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %2 = lshr exact i64 %sub.ptr.sub.i.i, 2
  %conv.i = trunc i64 %2 to i32
  %_M_finish.i.i4 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %3 = load i32*, i32** %_M_finish.i.i4, align 8, !tbaa !179
  %_M_start.i.i5 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %_M_start.i.i5, align 8, !tbaa !139
  %sub.ptr.lhs.cast.i.i6 = ptrtoint i32* %3 to i64
  %sub.ptr.rhs.cast.i.i7 = ptrtoint i32* %4 to i64
  %sub.ptr.sub.i.i8 = sub i64 %sub.ptr.lhs.cast.i.i6, %sub.ptr.rhs.cast.i.i7
  %5 = lshr exact i64 %sub.ptr.sub.i.i8, 2
  %conv.i9 = trunc i64 %5 to i32
  %cmp.not = icmp sgt i32 %conv.i, %conv.i9
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN5adept5Stack16jacobian_forwardEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this, double* %jacobian_out)
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void @_ZN5adept5Stack16jacobian_reverseEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this, double* %jacobian_out)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept7versionB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !14
  %2 = bitcast %union.anon* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(5) %2, i8* nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0), i64 5, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %2, i64 5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept16compiler_versionB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i:
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !14
  %2 = bitcast %union.anon* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(7) %2, i8* nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i64 0, i64 0), i64 7, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 7, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %2, i64 7
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  %call2.i.i7 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.96, i64 0, i64 0), i64 8)
          to label %nrvo.skipdtor unwind label %lpad1

lpad1:                                            ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
  %3 = landingpad { i8*, i32 }
          cleanup
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %4, %2
  br i1 %cmp.i.i.i, label %eh.resume, label %if.then.i.i

if.then.i.i:                                      ; preds = %lpad1
  tail call void @_ZdlPv(i8* %4) #37
  br label %eh.resume

nrvo.skipdtor:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
  ret void

eh.resume:                                        ; preds = %if.then.i.i, %lpad1
  resume { i8*, i32 } %3
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept14compiler_flagsB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !14
  %2 = bitcast %union.anon* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(7) %2, i8* nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i64 0, i64 0), i64 7, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 7, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %2, i64 7
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept13configurationB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %s = alloca %"class.std::__cxx11::basic_stringstream", align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp11 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp24 = alloca %"class.std::__cxx11::basic_string", align 8
  %0 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 392, i8* nonnull %0) #37
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %s)
  %add.ptr = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 1
  %1 = bitcast %"class.std::basic_ostream.base"* %add.ptr to %"class.std::basic_ostream"*
  %call1.i52 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i64 0, i64 0), i64 14)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %entry
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #37
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %4 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %3, %union.anon** %4, align 8, !tbaa !14, !alias.scope !228
  %5 = bitcast %union.anon* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(5) %5, i8* nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0), i64 5, i1 false) #37
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 5, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19, !alias.scope !228
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %5, i64 5
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !21, !alias.scope !228
  %_M_p.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %call2.i53 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull %5, i64 5)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont2
  %call1.i55 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call2.i53, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.98, i64 0, i64 0), i64 2)
          to label %invoke.cont6 unwind label %lpad3

invoke.cont6:                                     ; preds = %invoke.cont4
  %6 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %6, %5
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %invoke.cont6
  call void @_ZdlPv(i8* %6) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %invoke.cont6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #37
  %call1.i58 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull getelementptr inbounds ([17 x i8], [17 x i8]* @.str.99, i64 0, i64 0), i64 16)
          to label %invoke.cont9 unwind label %lpad

invoke.cont9:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %7 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #37
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp11, i64 0, i32 2
  %9 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp11 to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !14, !alias.scope !231
  %10 = bitcast %union.anon* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(7) %10, i8* nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i64 0, i64 0), i64 7, i1 false) #37
  %_M_string_length.i.i.i.i.i.i.i60 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp11, i64 0, i32 1
  store i64 7, i64* %_M_string_length.i.i.i.i.i.i.i60, align 8, !tbaa !19, !alias.scope !231
  %arrayidx.i.i.i.i.i.i61 = getelementptr inbounds i8, i8* %10, i64 7
  store i8 0, i8* %arrayidx.i.i.i.i.i.i61, align 1, !tbaa !21, !alias.scope !231
  %call2.i.i7.i = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.96, i64 0, i64 0), i64 8)
          to label %invoke.cont13 unwind label %lpad1.i

lpad1.i:                                          ; preds = %invoke.cont9
  %11 = landingpad { i8*, i32 }
          cleanup
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp11, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !231
  %cmp.i.i.i.i = icmp eq i8* %12, %10
  br i1 %cmp.i.i.i.i, label %ehcleanup20, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lpad1.i
  call void @_ZdlPv(i8* %12) #37
  br label %ehcleanup20

invoke.cont13:                                    ; preds = %invoke.cont9
  %_M_p.i.i.i62 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp11, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %_M_p.i.i.i62, align 8, !tbaa !17
  %14 = load i64, i64* %_M_string_length.i.i.i.i.i.i.i60, align 8, !tbaa !19
  %call2.i64 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* %13, i64 %14)
          to label %invoke.cont15 unwind label %lpad14

invoke.cont15:                                    ; preds = %invoke.cont13
  %call1.i67 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call2.i64, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1)
          to label %invoke.cont17 unwind label %lpad14

invoke.cont17:                                    ; preds = %invoke.cont15
  %15 = load i8*, i8** %_M_p.i.i.i62, align 8, !tbaa !17
  %cmp.i.i.i71 = icmp eq i8* %15, %10
  br i1 %cmp.i.i.i71, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit73, label %if.then.i.i72

if.then.i.i72:                                    ; preds = %invoke.cont17
  call void @_ZdlPv(i8* %15) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit73

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit73: ; preds = %if.then.i.i72, %invoke.cont17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #37
  %call1.i75 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull getelementptr inbounds ([19 x i8], [19 x i8]* @.str.100, i64 0, i64 0), i64 18)
          to label %invoke.cont26 unwind label %lpad

invoke.cont26:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit73
  %16 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #37
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 2
  %18 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to %union.anon**
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !14, !alias.scope !234
  %19 = bitcast %union.anon* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(7) %19, i8* nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i64 0, i64 0), i64 7, i1 false) #37
  %_M_string_length.i.i.i.i.i.i.i77 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 1
  store i64 7, i64* %_M_string_length.i.i.i.i.i.i.i77, align 8, !tbaa !19, !alias.scope !234
  %arrayidx.i.i.i.i.i.i78 = getelementptr inbounds i8, i8* %19, i64 7
  store i8 0, i8* %arrayidx.i.i.i.i.i.i78, align 1, !tbaa !21, !alias.scope !234
  %_M_p.i.i.i79 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 0, i32 0
  %call2.i81 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull %19, i64 7)
          to label %invoke.cont28 unwind label %lpad27

invoke.cont28:                                    ; preds = %invoke.cont26
  %call1.i84 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call2.i81, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.101, i64 0, i64 0), i64 2)
          to label %invoke.cont30 unwind label %lpad27

invoke.cont30:                                    ; preds = %invoke.cont28
  %20 = load i8*, i8** %_M_p.i.i.i79, align 8, !tbaa !17
  %cmp.i.i.i88 = icmp eq i8* %20, %19
  br i1 %cmp.i.i.i88, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit90, label %if.then.i.i89

if.then.i.i89:                                    ; preds = %invoke.cont30
  call void @_ZdlPv(i8* %20) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit90

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit90: ; preds = %if.then.i.i89, %invoke.cont30
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #37
  %call1.i92 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull getelementptr inbounds ([41 x i8], [41 x i8]* @.str.102, i64 0, i64 0), i64 40)
          to label %invoke.cont35 unwind label %lpad

invoke.cont35:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit90
  %call38 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %1, i32 4)
          to label %invoke.cont37 unwind label %lpad

invoke.cont37:                                    ; preds = %invoke.cont35
  %call1.i95 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call38, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1)
          to label %invoke.cont39 unwind label %lpad

invoke.cont39:                                    ; preds = %invoke.cont37
  %_M_stringbuf.i = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1
  invoke void @_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104) %_M_stringbuf.i)
          to label %invoke.cont41 unwind label %lpad

invoke.cont41:                                    ; preds = %invoke.cont39
  %21 = load i32 (...)**, i32 (...)*** bitcast ([10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE to i32 (...)***), align 8
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** %21, i32 (...)*** %22, align 8, !tbaa !127
  %23 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 8) to i32 (...)***), align 8
  %vbase.offset.ptr4.i.i = getelementptr i32 (...)*, i32 (...)** %21, i64 -3
  %24 = bitcast i32 (...)** %vbase.offset.ptr4.i.i to i64*
  %vbase.offset.i.i = load i64, i64* %24, align 8
  %add.ptr.i.i = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i
  %25 = bitcast i8* %add.ptr.i.i to i32 (...)***
  store i32 (...)** %23, i32 (...)*** %25, align 8, !tbaa !127
  %26 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 9) to i32 (...)***), align 8
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** %26, i32 (...)*** %27, align 8, !tbaa !127
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8, !tbaa !127
  %_M_p.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 0, i32 0
  %29 = load i8*, i8** %_M_p.i.i.i.i.i.i.i, align 8, !tbaa !17
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 2
  %arraydecay.i.i.i.i.i.i.i = bitcast %union.anon* %30 to i8*
  %cmp.i.i.i.i.i.i = icmp eq i8* %29, %arraydecay.i.i.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %invoke.cont41
  call void @_ZdlPv(i8* %29) #37
  br label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit

_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit: ; preds = %if.then.i.i.i.i.i, %invoke.cont41
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8, !tbaa !127
  %_M_buf_locale.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull dereferenceable(8) %_M_buf_locale.i.i.i.i) #37
  %31 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 2) to i32 (...)***), align 8
  store i32 (...)** %31, i32 (...)*** %22, align 8, !tbaa !127
  %32 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 3) to i32 (...)***), align 8
  %vbase.offset.ptr3.i.i.i.i = getelementptr i32 (...)*, i32 (...)** %31, i64 -3
  %33 = bitcast i32 (...)** %vbase.offset.ptr3.i.i.i.i to i64*
  %vbase.offset.i.i.i.i = load i64, i64* %33, align 8
  %add.ptr.i.i.i.i = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i.i.i
  %34 = bitcast i8* %add.ptr.i.i.i.i to i32 (...)***
  store i32 (...)** %32, i32 (...)*** %34, align 8, !tbaa !127
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %35, align 8, !tbaa !237
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull dereferenceable(216) %36) #37
  call void @llvm.lifetime.end.p0i8(i64 392, i8* nonnull %0) #37
  ret void

lpad:                                             ; preds = %invoke.cont39, %invoke.cont37, %invoke.cont35, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit90, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit73, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, %entry
  %37 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup42

lpad3:                                            ; preds = %invoke.cont4, %invoke.cont2
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i99 = icmp eq i8* %39, %5
  br i1 %cmp.i.i.i99, label %ehcleanup, label %if.then.i.i100

if.then.i.i100:                                   ; preds = %lpad3
  call void @_ZdlPv(i8* %39) #37
  br label %ehcleanup

ehcleanup:                                        ; preds = %if.then.i.i100, %lpad3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #37
  br label %ehcleanup42

lpad14:                                           ; preds = %invoke.cont15, %invoke.cont13
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = load i8*, i8** %_M_p.i.i.i62, align 8, !tbaa !17
  %cmp.i.i.i104 = icmp eq i8* %41, %10
  br i1 %cmp.i.i.i104, label %ehcleanup20, label %if.then.i.i105

if.then.i.i105:                                   ; preds = %lpad14
  call void @_ZdlPv(i8* %41) #37
  br label %ehcleanup20

ehcleanup20:                                      ; preds = %if.then.i.i105, %lpad14, %if.then.i.i.i, %lpad1.i
  %.pn46 = phi { i8*, i32 } [ %11, %if.then.i.i.i ], [ %11, %lpad1.i ], [ %40, %lpad14 ], [ %40, %if.then.i.i105 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #37
  br label %ehcleanup42

lpad27:                                           ; preds = %invoke.cont28, %invoke.cont26
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = load i8*, i8** %_M_p.i.i.i79, align 8, !tbaa !17
  %cmp.i.i.i109 = icmp eq i8* %43, %19
  br i1 %cmp.i.i.i109, label %ehcleanup33, label %if.then.i.i110

if.then.i.i110:                                   ; preds = %lpad27
  call void @_ZdlPv(i8* %43) #37
  br label %ehcleanup33

ehcleanup33:                                      ; preds = %if.then.i.i110, %lpad27
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #37
  br label %ehcleanup42

ehcleanup42:                                      ; preds = %ehcleanup33, %ehcleanup20, %ehcleanup, %lpad
  %.pn49 = phi { i8*, i32 } [ %37, %lpad ], [ %42, %ehcleanup33 ], [ %.pn46, %ehcleanup20 ], [ %38, %ehcleanup ]
  %44 = load i32 (...)**, i32 (...)*** bitcast ([10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE to i32 (...)***), align 8
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** %44, i32 (...)*** %45, align 8, !tbaa !127
  %46 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 8) to i32 (...)***), align 8
  %vbase.offset.ptr4.i.i112 = getelementptr i32 (...)*, i32 (...)** %44, i64 -3
  %47 = bitcast i32 (...)** %vbase.offset.ptr4.i.i112 to i64*
  %vbase.offset.i.i113 = load i64, i64* %47, align 8
  %add.ptr.i.i114 = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i113
  %48 = bitcast i8* %add.ptr.i.i114 to i32 (...)***
  store i32 (...)** %46, i32 (...)*** %48, align 8, !tbaa !127
  %49 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 9) to i32 (...)***), align 8
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** %49, i32 (...)*** %50, align 8, !tbaa !127
  %51 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8, !tbaa !127
  %_M_p.i.i.i.i.i.i.i115 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 0, i32 0
  %52 = load i8*, i8** %_M_p.i.i.i.i.i.i.i115, align 8, !tbaa !17
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 2
  %arraydecay.i.i.i.i.i.i.i116 = bitcast %union.anon* %53 to i8*
  %cmp.i.i.i.i.i.i117 = icmp eq i8* %52, %arraydecay.i.i.i.i.i.i.i116
  br i1 %cmp.i.i.i.i.i.i117, label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit123, label %if.then.i.i.i.i.i118

if.then.i.i.i.i.i118:                             ; preds = %ehcleanup42
  call void @_ZdlPv(i8* %52) #37
  br label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit123

_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit123: ; preds = %if.then.i.i.i.i.i118, %ehcleanup42
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8, !tbaa !127
  %_M_buf_locale.i.i.i.i119 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull dereferenceable(8) %_M_buf_locale.i.i.i.i119) #37
  %54 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 2) to i32 (...)***), align 8
  store i32 (...)** %54, i32 (...)*** %45, align 8, !tbaa !127
  %55 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 3) to i32 (...)***), align 8
  %vbase.offset.ptr3.i.i.i.i120 = getelementptr i32 (...)*, i32 (...)** %54, i64 -3
  %56 = bitcast i32 (...)** %vbase.offset.ptr3.i.i.i.i120 to i64*
  %vbase.offset.i.i.i.i121 = load i64, i64* %56, align 8
  %add.ptr.i.i.i.i122 = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i.i.i121
  %57 = bitcast i8* %add.ptr.i.i.i.i122 to i32 (...)***
  store i32 (...)** %55, i32 (...)*** %57, align 8, !tbaa !127
  %58 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %58, align 8, !tbaa !237
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull dereferenceable(216) %59) #37
  call void @llvm.lifetime.end.p0i8(i64 392, i8* nonnull %0) #37
  resume { i8*, i32 } %.pn49
}

; Function Attrs: uwtable
declare dso_local void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128)) unnamed_addr #0 align 2

; Function Attrs: norecurse nounwind readnone uwtable willreturn mustprogress
define dso_local i32 @_ZN5adept16max_blas_threadsEv() local_unnamed_addr #24 {
entry:
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone uwtable willreturn mustprogress
define dso_local i32 @_ZN5adept20set_max_blas_threadsEi(i32 %n) local_unnamed_addr #24 {
entry:
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone uwtable willreturn mustprogress
define dso_local zeroext i1 @_ZN5adept26have_matrix_multiplicationEv() local_unnamed_addr #24 {
entry:
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable willreturn mustprogress
define dso_local zeroext i1 @_ZN5adept19have_linear_algebraEv() local_unnamed_addr #24 {
entry:
  ret i1 false
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIfEENS_5ArrayILi1ET_Lb0EEERKNS1_ILi2ES2_Lb0EEERKS3_(%"class.adept::Array.35"* noalias sret(%"class.adept::Array.35") align 8 %agg.result, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %A, %"class.adept::Array.35"* nonnull align 8 dereferenceable(24) %b) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0), i64 61, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.35"* noalias sret(%"class.adept::Array.35") align 8 %agg.result, %"class.adept::SpecialMatrix"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.35"* nonnull align 8 dereferenceable(24) %b) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0), i64 61, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.35"* noalias sret(%"class.adept::Array.35") align 8 %agg.result, %"class.adept::SpecialMatrix.19"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.35"* nonnull align 8 dereferenceable(24) %b) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0), i64 61, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIfEENS_5ArrayILi2ET_Lb0EEERKS3_S5_(%"class.adept::Array"* noalias sret(%"class.adept::Array") align 8 %agg.result, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %A, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %B) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0), i64 61, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array"* noalias sret(%"class.adept::Array") align 8 %agg.result, %"class.adept::SpecialMatrix"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %B) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0), i64 61, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array"* noalias sret(%"class.adept::Array") align 8 %agg.result, %"class.adept::SpecialMatrix.19"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %B) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0), i64 61, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIdEENS_5ArrayILi1ET_Lb0EEERKNS1_ILi2ES2_Lb0EEERKS3_(%"class.adept::Array.38"* noalias sret(%"class.adept::Array.38") align 8 %agg.result, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %A, %"class.adept::Array.38"* nonnull align 8 dereferenceable(24) %b) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0), i64 61, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.38"* noalias sret(%"class.adept::Array.38") align 8 %agg.result, %"class.adept::SpecialMatrix.25"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.38"* nonnull align 8 dereferenceable(24) %b) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0), i64 61, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.38"* noalias sret(%"class.adept::Array.38") align 8 %agg.result, %"class.adept::SpecialMatrix.27"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.38"* nonnull align 8 dereferenceable(24) %b) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0), i64 61, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIdEENS_5ArrayILi2ET_Lb0EEERKS3_S5_(%"class.adept::Array.22"* noalias sret(%"class.adept::Array.22") align 8 %agg.result, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %A, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %B) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0), i64 61, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.22"* noalias sret(%"class.adept::Array.22") align 8 %agg.result, %"class.adept::SpecialMatrix.25"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %B) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0), i64 61, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.22"* noalias sret(%"class.adept::Array.22") align 8 %agg.result, %"class.adept::SpecialMatrix.27"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %B) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i9, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i9.i9, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.103, i64 0, i64 0), i64 61, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i9, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !127
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #37
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #37
  %15 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i16 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i16, label %ehcleanup.thread21, label %if.then.i.i

ehcleanup.thread21:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn13 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread21
  %.pn12 = phi { i8*, i32 } [ %.pn13, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread21 ]
  resume { i8*, i32 } %.pn12

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept8linspaceEddi(%"class.adept::Array.38"* noalias nonnull sret(%"class.adept::Array.38") align 8 %agg.result, double %x1, double %x2, i32 %n) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %dim.i.i = alloca [7 x i32], align 16
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %storage_.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %agg.result, i64 0, i32 1
  store %"class.adept::Storage.24"* null, %"class.adept::Storage.24"** %storage_.i, align 8, !tbaa !239
  %0 = bitcast [7 x i32]* %dim.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %0) #37
  %arrayinit.begin.i.i = getelementptr inbounds [7 x i32], [7 x i32]* %dim.i.i, i64 0, i64 0
  store i32 %n, i32* %arrayinit.begin.i.i, align 16, !tbaa !47
  %arrayinit.element.i.i = getelementptr inbounds [7 x i32], [7 x i32]* %dim.i.i, i64 0, i64 1
  %1 = bitcast i32* %arrayinit.element.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(24) %1, i8 -1, i64 24, i1 false)
  call void @_ZN5adept5ArrayILi1EdLb0EE6resizeEPKib(%"class.adept::Array.38"* nonnull dereferenceable(24) %agg.result, i32* nonnull %arrayinit.begin.i.i, i1 zeroext false)
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %0) #37
  %cmp = icmp sgt i32 %n, 1
  br i1 %cmp, label %invoke.cont.lr.ph, label %if.else

invoke.cont.lr.ph:                                ; preds = %entry
  %data_.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %agg.result, i64 0, i32 0
  %2 = load double*, double** %data_.i, align 8, !tbaa !242
  %arrayidx.i4.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %agg.result, i64 0, i32 3, i32 0, i64 0
  %3 = load i32, i32* %arrayidx.i4.i, align 4, !tbaa !47
  %sub = fsub fast double %x2, %x1
  %sub2 = add nsw i32 %n, -1
  %conv3 = sitofp i32 %sub2 to double
  %4 = sext i32 %3 to i64
  %wide.trip.count = zext i32 %n to i64
  br label %invoke.cont

invoke.cont:                                      ; preds = %invoke.cont, %invoke.cont.lr.ph
  %indvars.iv = phi i64 [ 0, %invoke.cont.lr.ph ], [ %indvars.iv.next, %invoke.cont ]
  %5 = mul nsw i64 %indvars.iv, %4
  %arrayidx.i = getelementptr inbounds double, double* %2, i64 %5
  %6 = trunc i64 %indvars.iv to i32
  %conv = sitofp i32 %6 to double
  %mul = fmul fast double %sub, %conv
  %7 = fdiv fast double %mul, %conv3
  %add = fadd fast double %7, %x1
  store double %add, double* %arrayidx.i, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %nrvo.skipdtor, label %invoke.cont, !llvm.loop !243

if.else:                                          ; preds = %entry
  %cmp4 = icmp eq i32 %n, 1
  %cmp5 = fcmp fast oeq double %x1, %x2
  %or.cond = and i1 %cmp5, %cmp4
  br i1 %or.cond, label %invoke.cont8, label %if.else10

invoke.cont8:                                     ; preds = %if.else
  %data_.i43 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %agg.result, i64 0, i32 0
  %8 = load double*, double** %data_.i43, align 8, !tbaa !242
  store double %x1, double* %8, align 8, !tbaa !61
  br label %nrvo.skipdtor

if.else10:                                        ; preds = %if.else
  br i1 %cmp4, label %if.then12, label %nrvo.skipdtor

if.then12:                                        ; preds = %if.else10
  %exception = call i8* @__cxa_allocate_exception(i64 40) #37
  %9 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #37
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %10, %union.anon** %11, align 8, !tbaa !14
  %12 = bitcast %union.anon* %10 to i8*
  %13 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #37
  store i64 46, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i45 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %if.then12
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i45, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %14 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %14, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(46) %call5.i.i.i9.i45, i8* nonnull align 1 dereferenceable(46) getelementptr inbounds ([47 x i8], [47 x i8]* @.str.104, i64 0, i64 0), i64 46, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %14, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i45, i64 %14
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #37
  %15 = bitcast i8* %exception to %"class.adept::invalid_operation"*
  invoke void @_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %15, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont17 unwind label %lpad16

invoke.cont17:                                    ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_operationE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad16

ehcleanup.thread:                                 ; preds = %if.then12
  %16 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #37
  br label %cleanup.action

lpad16:                                           ; preds = %invoke.cont17, %call5.i.i.i9.i.noexc
  %cleanup.isactive.0 = phi i1 [ false, %invoke.cont17 ], [ true, %call5.i.i.i9.i.noexc ]
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %18, %12
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i

if.then.i.i:                                      ; preds = %lpad16
  call void @_ZdlPv(i8* %18) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #37
  br i1 %cleanup.isactive.0, label %cleanup.action, label %ehcleanup23

ehcleanup:                                        ; preds = %lpad16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #37
  br i1 %cleanup.isactive.0, label %cleanup.action, label %ehcleanup23

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i, %ehcleanup.thread
  %.pn48 = phi { i8*, i32 } [ %16, %ehcleanup.thread ], [ %17, %ehcleanup ], [ %17, %if.then.i.i ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %ehcleanup23

nrvo.skipdtor:                                    ; preds = %if.else10, %invoke.cont8, %invoke.cont
  ret void

ehcleanup23:                                      ; preds = %cleanup.action, %ehcleanup, %if.then.i.i
  %.pn40 = phi { i8*, i32 } [ %.pn48, %cleanup.action ], [ %17, %ehcleanup ], [ %17, %if.then.i.i ]
  %19 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %storage_.i, align 8, !tbaa !239
  %tobool.not.i = icmp eq %"class.adept::Storage.24"* %19, null
  br i1 %tobool.not.i, label %_ZN5adept5ArrayILi1EdLb0EED2Ev.exit, label %if.then.i

if.then.i:                                        ; preds = %ehcleanup23
  invoke void @_ZN5adept7StorageIdE11remove_linkEv(%"class.adept::Storage.24"* nonnull dereferenceable(20) %19)
          to label %_ZN5adept5ArrayILi1EdLb0EED2Ev.exit unwind label %terminate.lpad.i

terminate.lpad.i:                                 ; preds = %if.then.i
  %20 = landingpad { i8*, i32 }
          catch i8* null
  %21 = extractvalue { i8*, i32 } %20, 0
  call void @__clang_call_terminate(i8* %21) #40
  unreachable

_ZN5adept5ArrayILi1EdLb0EED2Ev.exit:              ; preds = %if.then.i, %ehcleanup23
  resume { i8*, i32 } %.pn40

unreachable:                                      ; preds = %invoke.cont17
  unreachable
}

; Function Attrs: uwtable
define dso_local void @adept_dlstm_objective(i32 %l, i32 %c, i32 %b, double* nocapture readonly %main_params, double* %main_paramsb, double* nocapture readonly %extra_params, double* %extra_paramsb, double* nocapture readonly %state, double* nocapture readonly %sequence, double* nocapture readnone %loss, double* nocapture readnone %lossb) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %stack = alloca %"class.adept::Stack", align 8
  %aloss = alloca %"class.adept::Active", align 8
  %aerr = alloca %"class.adept::Active", align 8
  %ref.tmp = alloca double, align 8
  %mul = shl nsw i32 %l, 1
  %mul1 = shl nsw i32 %l, 3
  %mul2 = mul nsw i32 %mul1, %b
  %mul3 = mul nsw i32 %b, 3
  %mul5 = mul nsw i32 %mul, %b
  %mul6 = mul nsw i32 %b, %c
  %0 = bitcast %"class.adept::Stack"* %stack to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %0) #37
  call void @_ZN5adept5StackC2Eb(%"class.adept::Stack"* nonnull dereferenceable(149) %stack, i1 zeroext true)
  %conv = sext i32 %mul2 to i64
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 16)
  %2 = extractvalue { i64, i1 } %1, 1
  %3 = extractvalue { i64, i1 } %1, 0
  %4 = or i64 %3, 8
  %5 = select i1 %2, i64 -1, i64 %4
  %call = invoke noalias nonnull i8* @_Znam(i64 %5) #44
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %6 = bitcast i8* %call to i64*
  store i64 %conv, i64* %6, align 16
  %7 = getelementptr inbounds i8, i8* %call, i64 8
  %8 = bitcast i8* %7 to %"class.adept::Active"*
  %isempty = icmp eq i32 %mul2, 0
  br i1 %isempty, label %arrayctor.cont, label %new.ctorloop

new.ctorloop:                                     ; preds = %invoke.cont
  %arrayctor.end = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %8, i64 %conv
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %invoke.cont8, %new.ctorloop
  %arrayctor.cur = phi %"class.adept::Active"* [ %8, %new.ctorloop ], [ %arrayctor.next, %invoke.cont8 ]
  %val_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i, align 8, !tbaa !244
  %9 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %9, i64 0, i32 9
  %10 = load i32, i32* %n_gradients_registered_.i.i, align 4, !tbaa !154
  %inc.i.i = add nsw i32 %10, 1
  store i32 %inc.i.i, i32* %n_gradients_registered_.i.i, align 4, !tbaa !154
  %gap_list_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %9, i64 0, i32 4
  %11 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i, align 8, !tbaa !136
  %cmp.i.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %12, %11
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %arrayctor.loop
  %i_gradient_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %9, i64 0, i32 6
  %13 = load i32, i32* %i_gradient_.i.i, align 8, !tbaa !165
  %inc2.i.i = add nsw i32 %13, 1
  store i32 %inc2.i.i, i32* %i_gradient_.i.i, align 8, !tbaa !165
  %max_gradient_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %9, i64 0, i32 8
  %14 = load i32, i32* %max_gradient_.i.i, align 8, !tbaa !166
  %cmp.not.i.i = icmp slt i32 %13, %14
  br i1 %cmp.not.i.i, label %invoke.cont8, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.then.i.i
  store i32 %inc2.i.i, i32* %max_gradient_.i.i, align 8, !tbaa !166
  br label %invoke.cont8

if.else.i.i:                                      ; preds = %arrayctor.loop
  %15 = bitcast %"struct.std::__detail::_List_node_base"* %12 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %12, i64 1
  %start.i.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i to i32*
  %16 = load i32, i32* %start.i.i, align 4, !tbaa !157
  %inc11.i.i = add nsw i32 %16, 1
  store i32 %inc11.i.i, i32* %start.i.i, align 4, !tbaa !157
  %end.i.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %15, i64 0, i32 1, i32 0, i64 4
  %17 = bitcast i8* %end.i.i to i32*
  %18 = load i32, i32* %17, align 4, !tbaa !155
  %cmp13.not.i.i = icmp slt i32 %16, %18
  br i1 %cmp13.not.i.i, label %invoke.cont8, label %if.then14.i.i

if.then14.i.i:                                    ; preds = %if.else.i.i
  %_M_node.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %9, i64 0, i32 5, i32 0
  %19 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i, align 8, !tbaa !158
  %cmp.i35.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %19, %12
  br i1 %cmp.i35.i.i, label %if.then18.i.i, label %if.end24.i.i

if.then18.i.i:                                    ; preds = %if.then14.i.i
  store %"struct.std::__detail::_List_node_base"* %11, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i, align 8, !tbaa.struct !163
  br label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.then18.i.i, %if.then14.i.i
  %_M_size.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !159
  %sub.i.i.i.i.i = add i64 %20, -1
  store i64 %sub.i.i.i.i.i, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !159
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %12) #37
  %21 = bitcast %"struct.std::__detail::_List_node_base"* %12 to i8*
  call void @_ZdlPv(i8* nonnull %21) #37
  br label %invoke.cont8

invoke.cont8:                                     ; preds = %if.end24.i.i, %if.else.i.i, %if.then4.i.i, %if.then.i.i
  %return_val.0.i.i = phi i32 [ %16, %if.end24.i.i ], [ %16, %if.else.i.i ], [ %13, %if.then4.i.i ], [ %13, %if.then.i.i ]
  %gradient_index_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 0, i32 1
  store i32 %return_val.0.i.i, i32* %gradient_index_.i, align 8, !tbaa !246
  %arrayctor.next = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %"class.adept::Active"* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %invoke.cont8, %invoke.cont
  %conv10 = sext i32 %mul3 to i64
  %22 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv10, i64 16)
  %23 = extractvalue { i64, i1 } %22, 1
  %24 = extractvalue { i64, i1 } %22, 0
  %25 = or i64 %24, 8
  %26 = select i1 %23, i64 -1, i64 %25
  %call13 = invoke noalias nonnull i8* @_Znam(i64 %26) #44
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %arrayctor.cont
  %27 = bitcast i8* %call13 to i64*
  store i64 %conv10, i64* %27, align 16
  %28 = getelementptr inbounds i8, i8* %call13, i64 8
  %29 = bitcast i8* %28 to %"class.adept::Active"*
  %isempty14 = icmp eq i32 %b, 0
  br i1 %isempty14, label %arrayctor.cont29, label %new.ctorloop15

new.ctorloop15:                                   ; preds = %invoke.cont12
  %arrayctor.end16 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %29, i64 %conv10
  br label %arrayctor.loop17

arrayctor.loop17:                                 ; preds = %invoke.cont20, %new.ctorloop15
  %arrayctor.cur18 = phi %"class.adept::Active"* [ %29, %new.ctorloop15 ], [ %arrayctor.next27, %invoke.cont20 ]
  %val_.i144 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur18, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i144, align 8, !tbaa !244
  %30 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i.i145 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %30, i64 0, i32 9
  %31 = load i32, i32* %n_gradients_registered_.i.i145, align 4, !tbaa !154
  %inc.i.i146 = add nsw i32 %31, 1
  store i32 %inc.i.i146, i32* %n_gradients_registered_.i.i145, align 4, !tbaa !154
  %gap_list_.i.i147 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %30, i64 0, i32 4
  %32 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i147, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i148 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i148, align 8, !tbaa !136
  %cmp.i.i.i149 = icmp eq %"struct.std::__detail::_List_node_base"* %33, %32
  br i1 %cmp.i.i.i149, label %if.then.i.i154, label %if.else.i.i161

if.then.i.i154:                                   ; preds = %arrayctor.loop17
  %i_gradient_.i.i150 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %30, i64 0, i32 6
  %34 = load i32, i32* %i_gradient_.i.i150, align 8, !tbaa !165
  %inc2.i.i151 = add nsw i32 %34, 1
  store i32 %inc2.i.i151, i32* %i_gradient_.i.i150, align 8, !tbaa !165
  %max_gradient_.i.i152 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %30, i64 0, i32 8
  %35 = load i32, i32* %max_gradient_.i.i152, align 8, !tbaa !166
  %cmp.not.i.i153 = icmp slt i32 %34, %35
  br i1 %cmp.not.i.i153, label %invoke.cont20, label %if.then4.i.i155

if.then4.i.i155:                                  ; preds = %if.then.i.i154
  store i32 %inc2.i.i151, i32* %max_gradient_.i.i152, align 8, !tbaa !166
  br label %invoke.cont20

if.else.i.i161:                                   ; preds = %arrayctor.loop17
  %36 = bitcast %"struct.std::__detail::_List_node_base"* %33 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i156 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %33, i64 1
  %start.i.i157 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i156 to i32*
  %37 = load i32, i32* %start.i.i157, align 4, !tbaa !157
  %inc11.i.i158 = add nsw i32 %37, 1
  store i32 %inc11.i.i158, i32* %start.i.i157, align 4, !tbaa !157
  %end.i.i159 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %36, i64 0, i32 1, i32 0, i64 4
  %38 = bitcast i8* %end.i.i159 to i32*
  %39 = load i32, i32* %38, align 4, !tbaa !155
  %cmp13.not.i.i160 = icmp slt i32 %37, %39
  br i1 %cmp13.not.i.i160, label %invoke.cont20, label %if.then14.i.i164

if.then14.i.i164:                                 ; preds = %if.else.i.i161
  %_M_node.i.i.i162 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %30, i64 0, i32 5, i32 0
  %40 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i162, align 8, !tbaa !158
  %cmp.i35.i.i163 = icmp eq %"struct.std::__detail::_List_node_base"* %40, %33
  br i1 %cmp.i35.i.i163, label %if.then18.i.i165, label %if.end24.i.i168

if.then18.i.i165:                                 ; preds = %if.then14.i.i164
  store %"struct.std::__detail::_List_node_base"* %32, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i162, align 8, !tbaa.struct !163
  br label %if.end24.i.i168

if.end24.i.i168:                                  ; preds = %if.then18.i.i165, %if.then14.i.i164
  %_M_size.i.i.i.i.i166 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %30, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %_M_size.i.i.i.i.i166, align 8, !tbaa !159
  %sub.i.i.i.i.i167 = add i64 %41, -1
  store i64 %sub.i.i.i.i.i167, i64* %_M_size.i.i.i.i.i166, align 8, !tbaa !159
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %33) #37
  %42 = bitcast %"struct.std::__detail::_List_node_base"* %33 to i8*
  call void @_ZdlPv(i8* nonnull %42) #37
  br label %invoke.cont20

invoke.cont20:                                    ; preds = %if.end24.i.i168, %if.else.i.i161, %if.then4.i.i155, %if.then.i.i154
  %return_val.0.i.i169 = phi i32 [ %37, %if.end24.i.i168 ], [ %37, %if.else.i.i161 ], [ %34, %if.then4.i.i155 ], [ %34, %if.then.i.i154 ]
  %gradient_index_.i170 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur18, i64 0, i32 1
  store i32 %return_val.0.i.i169, i32* %gradient_index_.i170, align 8, !tbaa !246
  %arrayctor.next27 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur18, i64 1
  %arrayctor.done28 = icmp eq %"class.adept::Active"* %arrayctor.next27, %arrayctor.end16
  br i1 %arrayctor.done28, label %arrayctor.cont29, label %arrayctor.loop17

arrayctor.cont29:                                 ; preds = %invoke.cont20, %invoke.cont12
  %conv30 = sext i32 %mul5 to i64
  %43 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv30, i64 16)
  %44 = extractvalue { i64, i1 } %43, 1
  %45 = extractvalue { i64, i1 } %43, 0
  %46 = or i64 %45, 8
  %47 = select i1 %44, i64 -1, i64 %46
  %call33 = invoke noalias nonnull i8* @_Znam(i64 %47) #44
          to label %invoke.cont32 unwind label %lpad31

invoke.cont32:                                    ; preds = %arrayctor.cont29
  %48 = bitcast i8* %call33 to i64*
  store i64 %conv30, i64* %48, align 16
  %49 = getelementptr inbounds i8, i8* %call33, i64 8
  %50 = bitcast i8* %49 to %"class.adept::Active"*
  %isempty34 = icmp eq i32 %mul5, 0
  br i1 %isempty34, label %arrayctor.cont49, label %new.ctorloop35

new.ctorloop35:                                   ; preds = %invoke.cont32
  %arrayctor.end36 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %50, i64 %conv30
  br label %arrayctor.loop37

arrayctor.loop37:                                 ; preds = %invoke.cont40, %new.ctorloop35
  %arrayctor.cur38 = phi %"class.adept::Active"* [ %50, %new.ctorloop35 ], [ %arrayctor.next47, %invoke.cont40 ]
  %val_.i172 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur38, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i172, align 8, !tbaa !244
  %51 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i.i173 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %51, i64 0, i32 9
  %52 = load i32, i32* %n_gradients_registered_.i.i173, align 4, !tbaa !154
  %inc.i.i174 = add nsw i32 %52, 1
  store i32 %inc.i.i174, i32* %n_gradients_registered_.i.i173, align 4, !tbaa !154
  %gap_list_.i.i175 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %51, i64 0, i32 4
  %53 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i175, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i176 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i176, align 8, !tbaa !136
  %cmp.i.i.i177 = icmp eq %"struct.std::__detail::_List_node_base"* %54, %53
  br i1 %cmp.i.i.i177, label %if.then.i.i182, label %if.else.i.i189

if.then.i.i182:                                   ; preds = %arrayctor.loop37
  %i_gradient_.i.i178 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %51, i64 0, i32 6
  %55 = load i32, i32* %i_gradient_.i.i178, align 8, !tbaa !165
  %inc2.i.i179 = add nsw i32 %55, 1
  store i32 %inc2.i.i179, i32* %i_gradient_.i.i178, align 8, !tbaa !165
  %max_gradient_.i.i180 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %51, i64 0, i32 8
  %56 = load i32, i32* %max_gradient_.i.i180, align 8, !tbaa !166
  %cmp.not.i.i181 = icmp slt i32 %55, %56
  br i1 %cmp.not.i.i181, label %invoke.cont40, label %if.then4.i.i183

if.then4.i.i183:                                  ; preds = %if.then.i.i182
  store i32 %inc2.i.i179, i32* %max_gradient_.i.i180, align 8, !tbaa !166
  br label %invoke.cont40

if.else.i.i189:                                   ; preds = %arrayctor.loop37
  %57 = bitcast %"struct.std::__detail::_List_node_base"* %54 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i184 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %54, i64 1
  %start.i.i185 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i184 to i32*
  %58 = load i32, i32* %start.i.i185, align 4, !tbaa !157
  %inc11.i.i186 = add nsw i32 %58, 1
  store i32 %inc11.i.i186, i32* %start.i.i185, align 4, !tbaa !157
  %end.i.i187 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %57, i64 0, i32 1, i32 0, i64 4
  %59 = bitcast i8* %end.i.i187 to i32*
  %60 = load i32, i32* %59, align 4, !tbaa !155
  %cmp13.not.i.i188 = icmp slt i32 %58, %60
  br i1 %cmp13.not.i.i188, label %invoke.cont40, label %if.then14.i.i192

if.then14.i.i192:                                 ; preds = %if.else.i.i189
  %_M_node.i.i.i190 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %51, i64 0, i32 5, i32 0
  %61 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i190, align 8, !tbaa !158
  %cmp.i35.i.i191 = icmp eq %"struct.std::__detail::_List_node_base"* %61, %54
  br i1 %cmp.i35.i.i191, label %if.then18.i.i193, label %if.end24.i.i196

if.then18.i.i193:                                 ; preds = %if.then14.i.i192
  store %"struct.std::__detail::_List_node_base"* %53, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i190, align 8, !tbaa.struct !163
  br label %if.end24.i.i196

if.end24.i.i196:                                  ; preds = %if.then18.i.i193, %if.then14.i.i192
  %_M_size.i.i.i.i.i194 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %51, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %_M_size.i.i.i.i.i194, align 8, !tbaa !159
  %sub.i.i.i.i.i195 = add i64 %62, -1
  store i64 %sub.i.i.i.i.i195, i64* %_M_size.i.i.i.i.i194, align 8, !tbaa !159
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %54) #37
  %63 = bitcast %"struct.std::__detail::_List_node_base"* %54 to i8*
  call void @_ZdlPv(i8* nonnull %63) #37
  br label %invoke.cont40

invoke.cont40:                                    ; preds = %if.end24.i.i196, %if.else.i.i189, %if.then4.i.i183, %if.then.i.i182
  %return_val.0.i.i197 = phi i32 [ %58, %if.end24.i.i196 ], [ %58, %if.else.i.i189 ], [ %55, %if.then4.i.i183 ], [ %55, %if.then.i.i182 ]
  %gradient_index_.i198 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur38, i64 0, i32 1
  store i32 %return_val.0.i.i197, i32* %gradient_index_.i198, align 8, !tbaa !246
  %arrayctor.next47 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur38, i64 1
  %arrayctor.done48 = icmp eq %"class.adept::Active"* %arrayctor.next47, %arrayctor.end36
  br i1 %arrayctor.done48, label %arrayctor.cont49, label %arrayctor.loop37

arrayctor.cont49:                                 ; preds = %invoke.cont40, %invoke.cont32
  %conv50 = sext i32 %mul6 to i64
  %64 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv50, i64 16)
  %65 = extractvalue { i64, i1 } %64, 1
  %66 = extractvalue { i64, i1 } %64, 0
  %67 = or i64 %66, 8
  %68 = select i1 %65, i64 -1, i64 %67
  %call53 = invoke noalias nonnull i8* @_Znam(i64 %68) #44
          to label %invoke.cont52 unwind label %lpad51

invoke.cont52:                                    ; preds = %arrayctor.cont49
  %69 = bitcast i8* %call53 to i64*
  store i64 %conv50, i64* %69, align 16
  %70 = getelementptr inbounds i8, i8* %call53, i64 8
  %71 = bitcast i8* %70 to %"class.adept::Active"*
  %isempty54 = icmp eq i32 %mul6, 0
  br i1 %isempty54, label %arrayctor.cont69, label %new.ctorloop55

new.ctorloop55:                                   ; preds = %invoke.cont52
  %arrayctor.end56 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %71, i64 %conv50
  br label %arrayctor.loop57

arrayctor.loop57:                                 ; preds = %invoke.cont60, %new.ctorloop55
  %arrayctor.cur58 = phi %"class.adept::Active"* [ %71, %new.ctorloop55 ], [ %arrayctor.next67, %invoke.cont60 ]
  %val_.i200 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur58, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i200, align 8, !tbaa !244
  %72 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i.i201 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %72, i64 0, i32 9
  %73 = load i32, i32* %n_gradients_registered_.i.i201, align 4, !tbaa !154
  %inc.i.i202 = add nsw i32 %73, 1
  store i32 %inc.i.i202, i32* %n_gradients_registered_.i.i201, align 4, !tbaa !154
  %gap_list_.i.i203 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %72, i64 0, i32 4
  %74 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i203, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i204 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i203, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i204, align 8, !tbaa !136
  %cmp.i.i.i205 = icmp eq %"struct.std::__detail::_List_node_base"* %75, %74
  br i1 %cmp.i.i.i205, label %if.then.i.i210, label %if.else.i.i217

if.then.i.i210:                                   ; preds = %arrayctor.loop57
  %i_gradient_.i.i206 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %72, i64 0, i32 6
  %76 = load i32, i32* %i_gradient_.i.i206, align 8, !tbaa !165
  %inc2.i.i207 = add nsw i32 %76, 1
  store i32 %inc2.i.i207, i32* %i_gradient_.i.i206, align 8, !tbaa !165
  %max_gradient_.i.i208 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %72, i64 0, i32 8
  %77 = load i32, i32* %max_gradient_.i.i208, align 8, !tbaa !166
  %cmp.not.i.i209 = icmp slt i32 %76, %77
  br i1 %cmp.not.i.i209, label %invoke.cont60, label %if.then4.i.i211

if.then4.i.i211:                                  ; preds = %if.then.i.i210
  store i32 %inc2.i.i207, i32* %max_gradient_.i.i208, align 8, !tbaa !166
  br label %invoke.cont60

if.else.i.i217:                                   ; preds = %arrayctor.loop57
  %78 = bitcast %"struct.std::__detail::_List_node_base"* %75 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i212 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %75, i64 1
  %start.i.i213 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i212 to i32*
  %79 = load i32, i32* %start.i.i213, align 4, !tbaa !157
  %inc11.i.i214 = add nsw i32 %79, 1
  store i32 %inc11.i.i214, i32* %start.i.i213, align 4, !tbaa !157
  %end.i.i215 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %78, i64 0, i32 1, i32 0, i64 4
  %80 = bitcast i8* %end.i.i215 to i32*
  %81 = load i32, i32* %80, align 4, !tbaa !155
  %cmp13.not.i.i216 = icmp slt i32 %79, %81
  br i1 %cmp13.not.i.i216, label %invoke.cont60, label %if.then14.i.i220

if.then14.i.i220:                                 ; preds = %if.else.i.i217
  %_M_node.i.i.i218 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %72, i64 0, i32 5, i32 0
  %82 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i218, align 8, !tbaa !158
  %cmp.i35.i.i219 = icmp eq %"struct.std::__detail::_List_node_base"* %82, %75
  br i1 %cmp.i35.i.i219, label %if.then18.i.i221, label %if.end24.i.i224

if.then18.i.i221:                                 ; preds = %if.then14.i.i220
  store %"struct.std::__detail::_List_node_base"* %74, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i218, align 8, !tbaa.struct !163
  br label %if.end24.i.i224

if.end24.i.i224:                                  ; preds = %if.then18.i.i221, %if.then14.i.i220
  %_M_size.i.i.i.i.i222 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %72, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %83 = load i64, i64* %_M_size.i.i.i.i.i222, align 8, !tbaa !159
  %sub.i.i.i.i.i223 = add i64 %83, -1
  store i64 %sub.i.i.i.i.i223, i64* %_M_size.i.i.i.i.i222, align 8, !tbaa !159
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %75) #37
  %84 = bitcast %"struct.std::__detail::_List_node_base"* %75 to i8*
  call void @_ZdlPv(i8* nonnull %84) #37
  br label %invoke.cont60

invoke.cont60:                                    ; preds = %if.end24.i.i224, %if.else.i.i217, %if.then4.i.i211, %if.then.i.i210
  %return_val.0.i.i225 = phi i32 [ %79, %if.end24.i.i224 ], [ %79, %if.else.i.i217 ], [ %76, %if.then4.i.i211 ], [ %76, %if.then.i.i210 ]
  %gradient_index_.i226 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur58, i64 0, i32 1
  store i32 %return_val.0.i.i225, i32* %gradient_index_.i226, align 8, !tbaa !246
  %arrayctor.next67 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur58, i64 1
  %arrayctor.done68 = icmp eq %"class.adept::Active"* %arrayctor.next67, %arrayctor.end56
  br i1 %arrayctor.done68, label %arrayctor.cont69, label %arrayctor.loop57

arrayctor.cont69:                                 ; preds = %invoke.cont60, %invoke.cont52
  %cmp7.i = icmp sgt i32 %mul2, 0
  br i1 %cmp7.i, label %for.body.preheader.i, label %invoke.cont70

for.body.preheader.i:                             ; preds = %arrayctor.cont69
  %wide.trip.count.i = zext i32 %mul2 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.preheader.i
  %indvars.iv.i = phi i64 [ 0, %for.body.preheader.i ], [ %indvars.iv.next.i, %for.body.i ]
  %arrayidx2.i = getelementptr inbounds double, double* %main_params, i64 %indvars.iv.i
  %85 = load double, double* %arrayidx2.i, align 8, !tbaa !61
  %val_.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %8, i64 %indvars.iv.i, i32 0
  store double %85, double* %val_.i.i, align 8, !tbaa !244
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %invoke.cont70, label %for.body.i, !llvm.loop !247

invoke.cont70:                                    ; preds = %for.body.i, %arrayctor.cont69
  %cmp7.i228 = icmp sgt i32 %b, 0
  br i1 %cmp7.i228, label %for.body.preheader.i230, label %invoke.cont71

for.body.preheader.i230:                          ; preds = %invoke.cont70
  %wide.trip.count.i229 = zext i32 %mul3 to i64
  br label %for.body.i236

for.body.i236:                                    ; preds = %for.body.i236, %for.body.preheader.i230
  %indvars.iv.i231 = phi i64 [ 0, %for.body.preheader.i230 ], [ %indvars.iv.next.i234, %for.body.i236 ]
  %arrayidx2.i232 = getelementptr inbounds double, double* %extra_params, i64 %indvars.iv.i231
  %86 = load double, double* %arrayidx2.i232, align 8, !tbaa !61
  %val_.i.i233 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %29, i64 %indvars.iv.i231, i32 0
  store double %86, double* %val_.i.i233, align 8, !tbaa !244
  %indvars.iv.next.i234 = add nuw nsw i64 %indvars.iv.i231, 1
  %exitcond.not.i235 = icmp eq i64 %indvars.iv.next.i234, %wide.trip.count.i229
  br i1 %exitcond.not.i235, label %invoke.cont71, label %for.body.i236, !llvm.loop !247

invoke.cont71:                                    ; preds = %for.body.i236, %invoke.cont70
  %cmp7.i238 = icmp sgt i32 %mul5, 0
  br i1 %cmp7.i238, label %for.body.preheader.i240, label %invoke.cont72

for.body.preheader.i240:                          ; preds = %invoke.cont71
  %wide.trip.count.i239 = zext i32 %mul5 to i64
  br label %for.body.i246

for.body.i246:                                    ; preds = %for.body.i246, %for.body.preheader.i240
  %indvars.iv.i241 = phi i64 [ 0, %for.body.preheader.i240 ], [ %indvars.iv.next.i244, %for.body.i246 ]
  %arrayidx2.i242 = getelementptr inbounds double, double* %state, i64 %indvars.iv.i241
  %87 = load double, double* %arrayidx2.i242, align 8, !tbaa !61
  %val_.i.i243 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %50, i64 %indvars.iv.i241, i32 0
  store double %87, double* %val_.i.i243, align 8, !tbaa !244
  %indvars.iv.next.i244 = add nuw nsw i64 %indvars.iv.i241, 1
  %exitcond.not.i245 = icmp eq i64 %indvars.iv.next.i244, %wide.trip.count.i239
  br i1 %exitcond.not.i245, label %invoke.cont72, label %for.body.i246, !llvm.loop !247

invoke.cont72:                                    ; preds = %for.body.i246, %invoke.cont71
  %cmp7.i248 = icmp sgt i32 %mul6, 0
  br i1 %cmp7.i248, label %for.body.preheader.i250, label %invoke.cont73

for.body.preheader.i250:                          ; preds = %invoke.cont72
  %wide.trip.count.i249 = zext i32 %mul6 to i64
  br label %for.body.i256

for.body.i256:                                    ; preds = %for.body.i256, %for.body.preheader.i250
  %indvars.iv.i251 = phi i64 [ 0, %for.body.preheader.i250 ], [ %indvars.iv.next.i254, %for.body.i256 ]
  %arrayidx2.i252 = getelementptr inbounds double, double* %sequence, i64 %indvars.iv.i251
  %88 = load double, double* %arrayidx2.i252, align 8, !tbaa !61
  %val_.i.i253 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %71, i64 %indvars.iv.i251, i32 0
  store double %88, double* %val_.i.i253, align 8, !tbaa !244
  %indvars.iv.next.i254 = add nuw nsw i64 %indvars.iv.i251, 1
  %exitcond.not.i255 = icmp eq i64 %indvars.iv.next.i254, %wide.trip.count.i249
  br i1 %exitcond.not.i255, label %invoke.cont73, label %for.body.i256, !llvm.loop !247

invoke.cont73:                                    ; preds = %for.body.i256, %invoke.cont72
  %89 = bitcast %"class.adept::Active"* %aloss to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #37
  %val_.i258 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %aloss, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i258, align 8, !tbaa !244
  %90 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i.i259 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %90, i64 0, i32 9
  %91 = load i32, i32* %n_gradients_registered_.i.i259, align 4, !tbaa !154
  %inc.i.i260 = add nsw i32 %91, 1
  store i32 %inc.i.i260, i32* %n_gradients_registered_.i.i259, align 4, !tbaa !154
  %gap_list_.i.i261 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %90, i64 0, i32 4
  %92 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i261, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i262 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i262, align 8, !tbaa !136
  %cmp.i.i.i263 = icmp eq %"struct.std::__detail::_List_node_base"* %93, %92
  br i1 %cmp.i.i.i263, label %if.then.i.i268, label %if.else.i.i275

if.then.i.i268:                                   ; preds = %invoke.cont73
  %i_gradient_.i.i264 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %90, i64 0, i32 6
  %94 = load i32, i32* %i_gradient_.i.i264, align 8, !tbaa !165
  %inc2.i.i265 = add nsw i32 %94, 1
  store i32 %inc2.i.i265, i32* %i_gradient_.i.i264, align 8, !tbaa !165
  %max_gradient_.i.i266 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %90, i64 0, i32 8
  %95 = load i32, i32* %max_gradient_.i.i266, align 8, !tbaa !166
  %cmp.not.i.i267 = icmp slt i32 %94, %95
  br i1 %cmp.not.i.i267, label %invoke.cont75, label %if.then4.i.i269

if.then4.i.i269:                                  ; preds = %if.then.i.i268
  store i32 %inc2.i.i265, i32* %max_gradient_.i.i266, align 8, !tbaa !166
  br label %invoke.cont75

if.else.i.i275:                                   ; preds = %invoke.cont73
  %96 = bitcast %"struct.std::__detail::_List_node_base"* %93 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i270 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %93, i64 1
  %start.i.i271 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i270 to i32*
  %97 = load i32, i32* %start.i.i271, align 4, !tbaa !157
  %inc11.i.i272 = add nsw i32 %97, 1
  store i32 %inc11.i.i272, i32* %start.i.i271, align 4, !tbaa !157
  %end.i.i273 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %96, i64 0, i32 1, i32 0, i64 4
  %98 = bitcast i8* %end.i.i273 to i32*
  %99 = load i32, i32* %98, align 4, !tbaa !155
  %cmp13.not.i.i274 = icmp slt i32 %97, %99
  br i1 %cmp13.not.i.i274, label %invoke.cont75, label %if.then14.i.i278

if.then14.i.i278:                                 ; preds = %if.else.i.i275
  %_M_node.i.i.i276 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %90, i64 0, i32 5, i32 0
  %100 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i276, align 8, !tbaa !158
  %cmp.i35.i.i277 = icmp eq %"struct.std::__detail::_List_node_base"* %100, %93
  br i1 %cmp.i35.i.i277, label %if.then18.i.i279, label %if.end24.i.i282

if.then18.i.i279:                                 ; preds = %if.then14.i.i278
  store %"struct.std::__detail::_List_node_base"* %92, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i276, align 8, !tbaa.struct !163
  br label %if.end24.i.i282

if.end24.i.i282:                                  ; preds = %if.then18.i.i279, %if.then14.i.i278
  %_M_size.i.i.i.i.i280 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %90, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %_M_size.i.i.i.i.i280, align 8, !tbaa !159
  %sub.i.i.i.i.i281 = add i64 %101, -1
  store i64 %sub.i.i.i.i.i281, i64* %_M_size.i.i.i.i.i280, align 8, !tbaa !159
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %93) #37
  %102 = bitcast %"struct.std::__detail::_List_node_base"* %93 to i8*
  call void @_ZdlPv(i8* nonnull %102) #37
  br label %invoke.cont75

invoke.cont75:                                    ; preds = %if.end24.i.i282, %if.else.i.i275, %if.then4.i.i269, %if.then.i.i268
  %return_val.0.i.i283 = phi i32 [ %97, %if.end24.i.i282 ], [ %97, %if.else.i.i275 ], [ %94, %if.then4.i.i269 ], [ %94, %if.then.i.i268 ]
  %gradient_index_.i284 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %aloss, i64 0, i32 1
  store i32 %return_val.0.i.i283, i32* %gradient_index_.i284, align 8, !tbaa !246
  %n_operations_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 0, i32 5
  store i32 0, i32* %n_operations_.i.i, align 8, !tbaa !177
  %n_statements_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 0, i32 3
  store i32 0, i32* %n_statements_.i.i, align 8, !tbaa !146
  %_M_start.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %103 = load i32*, i32** %_M_start.i.i.i, align 8, !tbaa !139
  %_M_finish.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %104 = load i32*, i32** %_M_finish.i.i.i.i, align 8, !tbaa !179
  %tobool.not.i.i.i.i = icmp eq i32* %104, %103
  br i1 %tobool.not.i.i.i.i, label %_ZN5adept5Stack18clear_independentsEv.exit.i, label %invoke.cont.i.i.i.i

invoke.cont.i.i.i.i:                              ; preds = %invoke.cont75
  store i32* %103, i32** %_M_finish.i.i.i.i, align 8, !tbaa !179
  br label %_ZN5adept5Stack18clear_independentsEv.exit.i

_ZN5adept5Stack18clear_independentsEv.exit.i:     ; preds = %invoke.cont.i.i.i.i, %invoke.cont75
  %_M_start.i.i4.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %105 = load i32*, i32** %_M_start.i.i4.i, align 8, !tbaa !139
  %_M_finish.i.i.i5.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %106 = load i32*, i32** %_M_finish.i.i.i5.i, align 8, !tbaa !179
  %tobool.not.i.i.i6.i = icmp eq i32* %106, %105
  br i1 %tobool.not.i.i.i6.i, label %_ZN5adept5Stack16clear_dependentsEv.exit.i, label %invoke.cont.i.i.i7.i

invoke.cont.i.i.i7.i:                             ; preds = %_ZN5adept5Stack18clear_independentsEv.exit.i
  store i32* %105, i32** %_M_finish.i.i.i5.i, align 8, !tbaa !179
  br label %_ZN5adept5Stack16clear_dependentsEv.exit.i

_ZN5adept5Stack16clear_dependentsEv.exit.i:       ; preds = %invoke.cont.i.i.i7.i, %_ZN5adept5Stack18clear_independentsEv.exit.i
  %gradients_initialized_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 10
  store i8 0, i8* %gradients_initialized_.i.i, align 8, !tbaa !145
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 6
  %107 = load i32, i32* %i_gradient_.i, align 8, !tbaa !165
  %add.i = add nsw i32 %107, 1
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 8
  store i32 %add.i, i32* %max_gradient_.i, align 8, !tbaa !166
  %n_allocated_statements_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 0, i32 4
  %108 = load i32, i32* %n_allocated_statements_.i.i, align 4, !tbaa !176
  %cmp.not.i.i286 = icmp sgt i32 %108, 0
  br i1 %cmp.not.i.i286, label %entry.if.end_crit_edge.i.i, label %if.then.i.i287

entry.if.end_crit_edge.i.i:                       ; preds = %_ZN5adept5Stack16clear_dependentsEv.exit.i
  %statement_.phi.trans.insert.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 0, i32 0
  %.pre.i.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i.i, align 8, !tbaa !141
  br label %invoke.cont77

if.then.i.i287:                                   ; preds = %_ZN5adept5Stack16clear_dependentsEv.exit.i
  %mul.i.i.i = shl nsw i32 %108, 1
  %conv.i.i.i = sext i32 %mul.i.i.i to i64
  %109 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i.i, i64 8)
  %110 = extractvalue { i64, i1 } %109, 1
  %111 = extractvalue { i64, i1 } %109, 0
  %112 = select i1 %110, i64 -1, i64 %111
  %call.i.i.i289 = invoke noalias nonnull i8* @_Znam(i64 %112) #44
          to label %call.i.i.i.noexc unwind label %lpad76

call.i.i.i.noexc:                                 ; preds = %if.then.i.i287
  %113 = bitcast %"class.adept::Stack"* %stack to i8**
  %114 = load i8*, i8** %113, align 8, !tbaa !141
  %isnull.i.i.i = icmp eq i8* %114, null
  br i1 %isnull.i.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i, label %delete.notnull.i.i.i

delete.notnull.i.i.i:                             ; preds = %call.i.i.i.noexc
  call void @_ZdaPv(i8* nonnull %114) #43
  %.pre7.pre.i.i = load i32, i32* %n_statements_.i.i, align 8, !tbaa !146
  %.pre.pre.i = load i32, i32* %n_operations_.i.i, align 8, !tbaa !177
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i: ; preds = %delete.notnull.i.i.i, %call.i.i.i.noexc
  %.pre.i = phi i32 [ 0, %call.i.i.i.noexc ], [ %.pre.pre.i, %delete.notnull.i.i.i ]
  %.pre7.i.i = phi i32 [ 0, %call.i.i.i.noexc ], [ %.pre7.pre.i.i, %delete.notnull.i.i.i ]
  store i8* %call.i.i.i289, i8** %113, align 8, !tbaa !141
  store i32 %mul.i.i.i, i32* %n_allocated_statements_.i.i, align 4, !tbaa !176
  %115 = bitcast i8* %call.i.i.i289 to %"struct.adept::internal::Statement"*
  br label %invoke.cont77

invoke.cont77:                                    ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i, %entry.if.end_crit_edge.i.i
  %116 = phi i32 [ 0, %entry.if.end_crit_edge.i.i ], [ %.pre.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i ]
  %117 = phi i32 [ 0, %entry.if.end_crit_edge.i.i ], [ %.pre7.i.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i ]
  %118 = phi %"struct.adept::internal::Statement"* [ %.pre.i.i, %entry.if.end_crit_edge.i.i ], [ %115, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i ]
  %idxprom.i.i = sext i32 %117 to i64
  %index.i.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %118, i64 %idxprom.i.i, i32 0
  store i32 -1, i32* %index.i.i, align 4, !tbaa !147
  %inc.i.i288 = add nsw i32 %117, 1
  store i32 %inc.i.i288, i32* %n_statements_.i.i, align 8, !tbaa !146
  %end_plus_one.i.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %118, i64 %idxprom.i.i, i32 1
  store i32 %116, i32* %end_plus_one.i.i, align 4, !tbaa !149
  %119 = bitcast %"class.adept::Active"* %aerr to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #37
  %val_.i290 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %aerr, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i290, align 8, !tbaa !244
  %120 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i.i291 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %120, i64 0, i32 9
  %121 = load i32, i32* %n_gradients_registered_.i.i291, align 4, !tbaa !154
  %inc.i.i292 = add nsw i32 %121, 1
  store i32 %inc.i.i292, i32* %n_gradients_registered_.i.i291, align 4, !tbaa !154
  %gap_list_.i.i293 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %120, i64 0, i32 4
  %122 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i293, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i294 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i293, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i294, align 8, !tbaa !136
  %cmp.i.i.i295 = icmp eq %"struct.std::__detail::_List_node_base"* %123, %122
  br i1 %cmp.i.i.i295, label %if.then.i.i300, label %if.else.i.i307

if.then.i.i300:                                   ; preds = %invoke.cont77
  %i_gradient_.i.i296 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %120, i64 0, i32 6
  %124 = load i32, i32* %i_gradient_.i.i296, align 8, !tbaa !165
  %inc2.i.i297 = add nsw i32 %124, 1
  store i32 %inc2.i.i297, i32* %i_gradient_.i.i296, align 8, !tbaa !165
  %max_gradient_.i.i298 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %120, i64 0, i32 8
  %125 = load i32, i32* %max_gradient_.i.i298, align 8, !tbaa !166
  %cmp.not.i.i299 = icmp slt i32 %124, %125
  br i1 %cmp.not.i.i299, label %invoke.cont79, label %if.then4.i.i301

if.then4.i.i301:                                  ; preds = %if.then.i.i300
  store i32 %inc2.i.i297, i32* %max_gradient_.i.i298, align 8, !tbaa !166
  br label %invoke.cont79

if.else.i.i307:                                   ; preds = %invoke.cont77
  %126 = bitcast %"struct.std::__detail::_List_node_base"* %123 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i302 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %123, i64 1
  %start.i.i303 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i302 to i32*
  %127 = load i32, i32* %start.i.i303, align 4, !tbaa !157
  %inc11.i.i304 = add nsw i32 %127, 1
  store i32 %inc11.i.i304, i32* %start.i.i303, align 4, !tbaa !157
  %end.i.i305 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %126, i64 0, i32 1, i32 0, i64 4
  %128 = bitcast i8* %end.i.i305 to i32*
  %129 = load i32, i32* %128, align 4, !tbaa !155
  %cmp13.not.i.i306 = icmp slt i32 %127, %129
  br i1 %cmp13.not.i.i306, label %invoke.cont79, label %if.then14.i.i310

if.then14.i.i310:                                 ; preds = %if.else.i.i307
  %_M_node.i.i.i308 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %120, i64 0, i32 5, i32 0
  %130 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i308, align 8, !tbaa !158
  %cmp.i35.i.i309 = icmp eq %"struct.std::__detail::_List_node_base"* %130, %123
  br i1 %cmp.i35.i.i309, label %if.then18.i.i311, label %if.end24.i.i314

if.then18.i.i311:                                 ; preds = %if.then14.i.i310
  store %"struct.std::__detail::_List_node_base"* %122, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i308, align 8, !tbaa.struct !163
  br label %if.end24.i.i314

if.end24.i.i314:                                  ; preds = %if.then18.i.i311, %if.then14.i.i310
  %_M_size.i.i.i.i.i312 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %120, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %131 = load i64, i64* %_M_size.i.i.i.i.i312, align 8, !tbaa !159
  %sub.i.i.i.i.i313 = add i64 %131, -1
  store i64 %sub.i.i.i.i.i313, i64* %_M_size.i.i.i.i.i312, align 8, !tbaa !159
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %123) #37
  %132 = bitcast %"struct.std::__detail::_List_node_base"* %123 to i8*
  call void @_ZdlPv(i8* nonnull %132) #37
  br label %invoke.cont79

invoke.cont79:                                    ; preds = %if.end24.i.i314, %if.else.i.i307, %if.then4.i.i301, %if.then.i.i300
  %return_val.0.i.i315 = phi i32 [ %127, %if.end24.i.i314 ], [ %127, %if.else.i.i307 ], [ %124, %if.then4.i.i301 ], [ %124, %if.then.i.i300 ]
  %gradient_index_.i316 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %aerr, i64 0, i32 1
  store i32 %return_val.0.i.i315, i32* %gradient_index_.i316, align 8, !tbaa !246
  invoke void @_ZN9adeptTest14lstm_objectiveIN5adept6ActiveIdEEEEviiiPT_S5_S5_S5_S5_(i32 %l, i32 %c, i32 %b, %"class.adept::Active"* nonnull %8, %"class.adept::Active"* nonnull %29, %"class.adept::Active"* nonnull %50, %"class.adept::Active"* nonnull %71, %"class.adept::Active"* nonnull %aloss)
          to label %invoke.cont81 unwind label %lpad80.loopexit.split-lp.loopexit.split-lp

invoke.cont81:                                    ; preds = %invoke.cont79
  %133 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #37
  store double 1.000000e+00, double* %ref.tmp, align 8, !tbaa !61
  %134 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %135 = load i32, i32* %gradient_index_.i284, align 8, !tbaa !246
  %add.i319 = add nsw i32 %135, 1
  invoke void @_ZN5adept5Stack13set_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPKS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %134, i32 %135, i32 %add.i319, double* nonnull %ref.tmp)
          to label %invoke.cont83 unwind label %lpad82

invoke.cont83:                                    ; preds = %invoke.cont81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #37
  invoke void @_ZN5adept5Stack15compute_adjointEv(%"class.adept::Stack"* nonnull dereferenceable(149) %stack)
          to label %invoke.cont84 unwind label %lpad80.loopexit.split-lp.loopexit.split-lp

invoke.cont84:                                    ; preds = %invoke.cont83
  br i1 %cmp7.i, label %for.body.preheader.i322, label %invoke.cont85

for.body.preheader.i322:                          ; preds = %invoke.cont84
  %wide.trip.count.i321 = zext i32 %mul2 to i64
  br label %for.body.i327

for.body.i327:                                    ; preds = %.noexc, %for.body.preheader.i322
  %indvars.iv.i323 = phi i64 [ 0, %for.body.preheader.i322 ], [ %indvars.iv.next.i325, %.noexc ]
  %arrayidx2.i324 = getelementptr inbounds double, double* %main_paramsb, i64 %indvars.iv.i323
  %136 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %gradient_index_.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %8, i64 %indvars.iv.i323, i32 1
  %137 = load i32, i32* %gradient_index_.i.i, align 8, !tbaa !246
  %add.i.i = add nsw i32 %137, 1
  invoke void @_ZNK5adept5Stack13get_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %136, i32 %137, i32 %add.i.i, double* nonnull %arrayidx2.i324)
          to label %.noexc unwind label %lpad80.loopexit.split-lp.loopexit

.noexc:                                           ; preds = %for.body.i327
  %indvars.iv.next.i325 = add nuw nsw i64 %indvars.iv.i323, 1
  %exitcond.not.i326 = icmp eq i64 %indvars.iv.next.i325, %wide.trip.count.i321
  br i1 %exitcond.not.i326, label %invoke.cont85, label %for.body.i327, !llvm.loop !248

invoke.cont85:                                    ; preds = %.noexc, %invoke.cont84
  br i1 %cmp7.i228, label %for.body.preheader.i330, label %invoke.cont86

for.body.preheader.i330:                          ; preds = %invoke.cont85
  %wide.trip.count.i329 = zext i32 %mul3 to i64
  br label %for.body.i337

for.body.i337:                                    ; preds = %.noexc338, %for.body.preheader.i330
  %indvars.iv.i331 = phi i64 [ 0, %for.body.preheader.i330 ], [ %indvars.iv.next.i335, %.noexc338 ]
  %arrayidx2.i332 = getelementptr inbounds double, double* %extra_paramsb, i64 %indvars.iv.i331
  %138 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %gradient_index_.i.i333 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %29, i64 %indvars.iv.i331, i32 1
  %139 = load i32, i32* %gradient_index_.i.i333, align 8, !tbaa !246
  %add.i.i334 = add nsw i32 %139, 1
  invoke void @_ZNK5adept5Stack13get_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %138, i32 %139, i32 %add.i.i334, double* nonnull %arrayidx2.i332)
          to label %.noexc338 unwind label %lpad80.loopexit

.noexc338:                                        ; preds = %for.body.i337
  %indvars.iv.next.i335 = add nuw nsw i64 %indvars.iv.i331, 1
  %exitcond.not.i336 = icmp eq i64 %indvars.iv.next.i335, %wide.trip.count.i329
  br i1 %exitcond.not.i336, label %invoke.cont86, label %for.body.i337, !llvm.loop !248

invoke.cont86:                                    ; preds = %.noexc338, %invoke.cont85
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %aerr) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #37
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %aloss) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #37
  call void @_ZN5adept5StackD2Ev(%"class.adept::Stack"* nonnull dereferenceable(149) %stack) #37
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %0) #37
  ret void

lpad:                                             ; preds = %entry
  %140 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup93

lpad11:                                           ; preds = %arrayctor.cont
  %141 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup93

lpad31:                                           ; preds = %arrayctor.cont29
  %142 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup93

lpad51:                                           ; preds = %arrayctor.cont49
  %143 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup93

lpad76:                                           ; preds = %if.then.i.i287
  %144 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup88

lpad80.loopexit:                                  ; preds = %for.body.i337
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad80.loopexit.split-lp.loopexit:                ; preds = %for.body.i327
  %lpad.loopexit340 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad80.loopexit.split-lp.loopexit.split-lp:       ; preds = %invoke.cont83, %invoke.cont79
  %lpad.loopexit.split-lp341 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad82:                                           ; preds = %invoke.cont81
  %145 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #37
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad82, %lpad80.loopexit.split-lp.loopexit.split-lp, %lpad80.loopexit.split-lp.loopexit, %lpad80.loopexit
  %.pn = phi { i8*, i32 } [ %145, %lpad82 ], [ %lpad.loopexit, %lpad80.loopexit ], [ %lpad.loopexit340, %lpad80.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp341, %lpad80.loopexit.split-lp.loopexit.split-lp ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %aerr) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #37
  br label %ehcleanup88

ehcleanup88:                                      ; preds = %ehcleanup, %lpad76
  %.pn.pn.pn = phi { i8*, i32 } [ %.pn, %ehcleanup ], [ %144, %lpad76 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %aloss) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #37
  br label %ehcleanup93

ehcleanup93:                                      ; preds = %ehcleanup88, %lpad51, %lpad31, %lpad11, %lpad
  %.pn.pn.pn.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %140, %lpad ], [ %141, %lpad11 ], [ %142, %lpad31 ], [ %.pn.pn.pn, %ehcleanup88 ], [ %143, %lpad51 ]
  call void @_ZN5adept5StackD2Ev(%"class.adept::Stack"* nonnull dereferenceable(149) %stack) #37
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %0) #37
  resume { i8*, i32 } %.pn.pn.pn.pn.pn.pn.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept5StackC2Eb(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i1 zeroext %activate_immediately) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %0 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_prev.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %1 = bitcast %"class.adept::Stack"* %this to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(96) %1, i8 0, i64 96, i1 false)
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %_M_prev.i.i.i.i.i, align 8, !tbaa !168
  %_M_next.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i.i.i, align 8, !tbaa !136
  %_M_size.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !249
  %coerce.dive = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 6
  %is_recording_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 12
  %2 = bitcast i32* %i_gradient_ to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(18) %2, i8 0, i64 18, i1 false)
  store i8 1, i8* %is_recording_, align 2, !tbaa !175
  %have_openmp_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 13
  store i8 0, i8* %have_openmp_, align 1, !tbaa !250
  %openmp_manually_disabled_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 14
  store i8 0, i8* %openmp_manually_disabled_, align 4, !tbaa !251
  %call.i12 = invoke noalias nonnull dereferenceable(8388608) i8* @_Znam(i64 8388608) #44
          to label %call.i.noexc unwind label %lpad

call.i.noexc:                                     ; preds = %entry
  %multiplier_.i10 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %3 = bitcast double** %multiplier_.i10 to i8**
  store i8* %call.i12, i8** %3, align 8, !tbaa !143
  %call3.i13 = invoke noalias nonnull dereferenceable(4194304) i8* @_Znam(i64 4194304) #44
          to label %call3.i.noexc unwind label %lpad

call3.i.noexc:                                    ; preds = %call.i.noexc
  %index_.i11 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %4 = bitcast i32** %index_.i11 to i8**
  store i8* %call3.i13, i8** %4, align 8, !tbaa !144
  %n_allocated_operations_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 6
  store i32 1048576, i32* %n_allocated_operations_.i, align 4, !tbaa !178
  %call5.i14 = invoke noalias nonnull dereferenceable(8388608) i8* @_Znam(i64 8388608) #44
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %call3.i.noexc
  %5 = bitcast %"class.adept::Stack"* %this to i8**
  store i8* %call5.i14, i8** %5, align 8, !tbaa !141
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 4
  store i32 1048576, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  invoke void @_ZN5adept5Stack13new_recordingEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this)
          to label %invoke.cont3 unwind label %lpad

invoke.cont3:                                     ; preds = %invoke.cont
  br i1 %activate_immediately, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont3
  invoke void @_ZN5adept5Stack8activateEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this)
          to label %if.end unwind label %lpad

lpad:                                             ; preds = %if.then, %invoke.cont, %call3.i.noexc, %call.i.noexc, %entry
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i.i.i, align 8, !tbaa !136
  %cmp.not12.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %7, %0
  br i1 %cmp.not12.i.i, label %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit, label %while.body.i.i

while.body.i.i:                                   ; preds = %while.body.i.i, %lpad
  %__cur.013.i.i = phi %"struct.std::__detail::_List_node_base"* [ %8, %while.body.i.i ], [ %7, %lpad ]
  %_M_next4.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %__cur.013.i.i, i64 0, i32 0
  %8 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next4.i.i, align 8, !tbaa !136
  %9 = bitcast %"struct.std::__detail::_List_node_base"* %__cur.013.i.i to i8*
  tail call void @_ZdlPv(i8* %9) #37
  %cmp.not.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %8, %0
  br i1 %cmp.not.i.i, label %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit, label %while.body.i.i, !llvm.loop !138

_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit: ; preds = %while.body.i.i, %lpad
  %_M_start.i.i6 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %_M_start.i.i6, align 8, !tbaa !139
  %tobool.not.i.i.i7 = icmp eq i32* %10, null
  br i1 %tobool.not.i.i.i7, label %_ZNSt6vectorIiSaIiEED2Ev.exit9, label %if.then.i.i.i8

if.then.i.i.i8:                                   ; preds = %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit
  %11 = bitcast i32* %10 to i8*
  tail call void @_ZdlPv(i8* nonnull %11) #37
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit9

_ZNSt6vectorIiSaIiEED2Ev.exit9:                   ; preds = %if.then.i.i.i8, %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %tobool.not.i.i.i = icmp eq i32* %12, null
  br i1 %tobool.not.i.i.i, label %_ZNSt6vectorIiSaIiEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit9
  %13 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #37
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit

_ZNSt6vectorIiSaIiEED2Ev.exit:                    ; preds = %if.then.i.i.i, %_ZNSt6vectorIiSaIiEED2Ev.exit9
  %statement_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %14 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.i, align 8, !tbaa !141
  %tobool.not.i = icmp eq %"struct.adept::internal::Statement"* %14, null
  br i1 %tobool.not.i, label %if.end.i, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit
  %15 = bitcast %"struct.adept::internal::Statement"* %14 to i8*
  tail call void @_ZdaPv(i8* %15) #43
  br label %if.end.i

if.end.i:                                         ; preds = %delete.notnull.i, %_ZNSt6vectorIiSaIiEED2Ev.exit
  %multiplier_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %16 = load double*, double** %multiplier_.i, align 8, !tbaa !143
  %tobool3.not.i = icmp eq double* %16, null
  br i1 %tobool3.not.i, label %if.end9.i, label %delete.notnull7.i

delete.notnull7.i:                                ; preds = %if.end.i
  %17 = bitcast double* %16 to i8*
  tail call void @_ZdaPv(i8* %17) #43
  br label %if.end9.i

if.end9.i:                                        ; preds = %delete.notnull7.i, %if.end.i
  %index_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %18 = load i32*, i32** %index_.i, align 8, !tbaa !144
  %tobool10.not.i = icmp eq i32* %18, null
  br i1 %tobool10.not.i, label %_ZN5adept8internal16StackStorageOrigD2Ev.exit, label %delete.notnull14.i

delete.notnull14.i:                               ; preds = %if.end9.i
  %19 = bitcast i32* %18 to i8*
  tail call void @_ZdaPv(i8* %19) #43
  br label %_ZN5adept8internal16StackStorageOrigD2Ev.exit

_ZN5adept8internal16StackStorageOrigD2Ev.exit:    ; preds = %delete.notnull14.i, %if.end9.i
  resume { i8*, i32 } %6

if.end:                                           ; preds = %if.then, %invoke.cont3
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %dec.i = add nsw i32 %1, -1
  store i32 %dec.i, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %2 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %add.i = add nsw i32 %2, 1
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 6
  %3 = load i32, i32* %i_gradient_.i, align 8, !tbaa !165
  %cmp.i = icmp eq i32 %add.i, %3
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  store i32 %2, i32* %i_gradient_.i, align 8, !tbaa !165
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !136
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %5, %4
  br i1 %cmp.i.i, label %invoke.cont, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  %_M_prev.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__detail::_List_node_base"** %_M_prev.i.i.i to %"struct.std::_List_node"**
  %7 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %6, align 8, !tbaa !168
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 1, i32 0, i64 4
  %8 = bitcast i8* %end.i to i32*
  %9 = load i32, i32* %8, align 4, !tbaa !155
  %add8.i = add nsw i32 %9, 1
  %cmp9.i = icmp eq i32 %2, %add8.i
  %10 = getelementptr %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 0
  br i1 %cmp9.i, label %if.then10.i, label %invoke.cont

if.then10.i:                                      ; preds = %if.then4.i
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 1
  %start.i = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %_M_storage.i.i.i.i to i32*
  %11 = load i32, i32* %start.i, align 4, !tbaa !157
  store i32 %11, i32* %i_gradient_.i, align 8, !tbaa !165
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 5, i32 0
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !158
  %cmp.i31.i = icmp eq %"struct.std::__detail::_List_node_base"* %12, %10
  br i1 %cmp.i31.i, label %if.then17.i, label %if.end.i

if.then17.i:                                      ; preds = %if.then10.i
  store %"struct.std::__detail::_List_node_base"* %4, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !163
  br label %if.end.i

if.end.i:                                         ; preds = %if.then17.i, %if.then10.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !159
  %sub.i.i.i.i = add i64 %13, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %10) #37
  %14 = bitcast %"struct.std::_List_node"* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %14) #37
  br label %invoke.cont

if.else.i:                                        ; preds = %entry
  invoke void @_ZN5adept5Stack27unregister_gradient_not_topERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %0, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.else.i, %if.end.i, %if.then4.i, %if.then.i
  ret void

terminate.lpad:                                   ; preds = %if.else.i
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  tail call void @__clang_call_terminate(i8* %16) #40
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept5Stack13new_recordingEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %n_operations_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 5
  store i32 0, i32* %n_operations_.i, align 8, !tbaa !177
  %n_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  store i32 0, i32* %n_statements_.i, align 8, !tbaa !146
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %0 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !139
  %_M_finish.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %1 = load i32*, i32** %_M_finish.i.i.i, align 8, !tbaa !179
  %tobool.not.i.i.i = icmp eq i32* %1, %0
  br i1 %tobool.not.i.i.i, label %_ZN5adept5Stack18clear_independentsEv.exit, label %invoke.cont.i.i.i

invoke.cont.i.i.i:                                ; preds = %entry
  store i32* %0, i32** %_M_finish.i.i.i, align 8, !tbaa !179
  br label %_ZN5adept5Stack18clear_independentsEv.exit

_ZN5adept5Stack18clear_independentsEv.exit:       ; preds = %invoke.cont.i.i.i, %entry
  %_M_start.i.i4 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %2 = load i32*, i32** %_M_start.i.i4, align 8, !tbaa !139
  %_M_finish.i.i.i5 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %3 = load i32*, i32** %_M_finish.i.i.i5, align 8, !tbaa !179
  %tobool.not.i.i.i6 = icmp eq i32* %3, %2
  br i1 %tobool.not.i.i.i6, label %_ZN5adept5Stack16clear_dependentsEv.exit, label %invoke.cont.i.i.i7

invoke.cont.i.i.i7:                               ; preds = %_ZN5adept5Stack18clear_independentsEv.exit
  store i32* %2, i32** %_M_finish.i.i.i5, align 8, !tbaa !179
  br label %_ZN5adept5Stack16clear_dependentsEv.exit

_ZN5adept5Stack16clear_dependentsEv.exit:         ; preds = %invoke.cont.i.i.i7, %_ZN5adept5Stack18clear_independentsEv.exit
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  store i8 0, i8* %gradients_initialized_.i, align 8, !tbaa !145
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 6
  %4 = load i32, i32* %i_gradient_, align 8, !tbaa !165
  %add = add nsw i32 %4, 1
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  store i32 %add, i32* %max_gradient_, align 8, !tbaa !166
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 4
  %5 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i = icmp sgt i32 %5, 0
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept5Stack16clear_dependentsEv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept5Stack16clear_dependentsEv.exit
  %mul.i.i = shl nsw i32 %5, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %6 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %7 = extractvalue { i64, i1 } %6, 1
  %8 = extractvalue { i64, i1 } %6, 0
  %9 = select i1 %7, i64 -1, i64 %8
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %9) #44
  %10 = bitcast %"class.adept::Stack"* %this to i8**
  %11 = load i8*, i8** %10, align 8, !tbaa !141
  %isnull.i.i = icmp eq i8* %11, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %11) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %.pre.pre = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre = phi i32 [ 0, %if.then.i ], [ %.pre.pre, %delete.notnull.i.i ]
  %.pre7.i = phi i32 [ 0, %if.then.i ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %10, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %12 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %13 = phi i32 [ 0, %entry.if.end_crit_edge.i ], [ %.pre, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %14 = phi i32 [ 0, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %15 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %12, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %idxprom.i = sext i32 %14 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %15, i64 %idxprom.i, i32 0
  store i32 -1, i32* %index.i, align 4, !tbaa !147
  %inc.i = add nsw i32 %14, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %15, i64 %idxprom.i, i32 1
  store i32 %13, i32* %end_plus_one.i, align 4, !tbaa !149
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9adeptTest14lstm_objectiveIN5adept6ActiveIdEEEEviiiPT_S5_S5_S5_S5_(i32 %l, i32 %c, i32 %b, %"class.adept::Active"* noalias %main_params, %"class.adept::Active"* noalias %extra_params, %"class.adept::Active"* noalias %state, %"class.adept::Active"* noalias %sequence, %"class.adept::Active"* noalias %loss) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i = alloca %"struct.adept::internal::BinaryOperation.79", align 8
  %total = alloca %"class.adept::Active", align 8
  %ref.tmp = alloca double, align 8
  %count = alloca i32, align 4
  %lse = alloca %"class.adept::Active", align 8
  %ref.tmp30 = alloca %"class.adept::Active", align 8
  %ref.tmp39 = alloca %"struct.adept::internal::BinaryOperation", align 8
  %ref.tmp72 = alloca %"struct.adept::internal::BinaryOperation.48", align 8
  %ref.tmp77 = alloca %"class.adept::Active", align 8
  %0 = bitcast %"class.adept::Active"* %total to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #37
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #37
  store double 0.000000e+00, double* %ref.tmp, align 8, !tbaa !61
  call void @_ZN5adept6ActiveIdEC2IdEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %total, double* nonnull align 8 dereferenceable(8) %ref.tmp, i8* null)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #37
  %2 = bitcast i32* %count to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #37
  store i32 0, i32* %count, align 4, !tbaa !47
  %conv = sext i32 %b to i64
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 16)
  %4 = extractvalue { i64, i1 } %3, 1
  %5 = extractvalue { i64, i1 } %3, 0
  %6 = or i64 %5, 8
  %7 = select i1 %4, i64 -1, i64 %6
  %call = invoke noalias nonnull i8* @_Znam(i64 %7) #44
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %8 = bitcast i8* %call to i64*
  store i64 %conv, i64* %8, align 16
  %9 = getelementptr inbounds i8, i8* %call, i64 8
  %10 = bitcast i8* %9 to %"class.adept::Active"*
  %isempty = icmp eq i32 %b, 0
  br i1 %isempty, label %arrayctor.cont, label %new.ctorloop

new.ctorloop:                                     ; preds = %invoke.cont
  %arrayctor.end = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 %conv
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %invoke.cont2, %new.ctorloop
  %arrayctor.cur = phi %"class.adept::Active"* [ %10, %new.ctorloop ], [ %arrayctor.next, %invoke.cont2 ]
  %val_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i, align 8, !tbaa !244
  %11 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %11, i64 0, i32 9
  %12 = load i32, i32* %n_gradients_registered_.i.i, align 4, !tbaa !154
  %inc.i.i = add nsw i32 %12, 1
  store i32 %inc.i.i, i32* %n_gradients_registered_.i.i, align 4, !tbaa !154
  %gap_list_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %11, i64 0, i32 4
  %13 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i, align 8, !tbaa !136
  %cmp.i.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %14, %13
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %arrayctor.loop
  %i_gradient_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %11, i64 0, i32 6
  %15 = load i32, i32* %i_gradient_.i.i, align 8, !tbaa !165
  %inc2.i.i = add nsw i32 %15, 1
  store i32 %inc2.i.i, i32* %i_gradient_.i.i, align 8, !tbaa !165
  %max_gradient_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %11, i64 0, i32 8
  %16 = load i32, i32* %max_gradient_.i.i, align 8, !tbaa !166
  %cmp.not.i.i = icmp slt i32 %15, %16
  br i1 %cmp.not.i.i, label %invoke.cont2, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.then.i.i
  store i32 %inc2.i.i, i32* %max_gradient_.i.i, align 8, !tbaa !166
  br label %invoke.cont2

if.else.i.i:                                      ; preds = %arrayctor.loop
  %17 = bitcast %"struct.std::__detail::_List_node_base"* %14 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %14, i64 1
  %start.i.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i to i32*
  %18 = load i32, i32* %start.i.i, align 4, !tbaa !157
  %inc11.i.i = add nsw i32 %18, 1
  store i32 %inc11.i.i, i32* %start.i.i, align 4, !tbaa !157
  %end.i.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %17, i64 0, i32 1, i32 0, i64 4
  %19 = bitcast i8* %end.i.i to i32*
  %20 = load i32, i32* %19, align 4, !tbaa !155
  %cmp13.not.i.i = icmp slt i32 %18, %20
  br i1 %cmp13.not.i.i, label %invoke.cont2, label %if.then14.i.i

if.then14.i.i:                                    ; preds = %if.else.i.i
  %_M_node.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %11, i64 0, i32 5, i32 0
  %21 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i, align 8, !tbaa !158
  %cmp.i35.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %21, %14
  br i1 %cmp.i35.i.i, label %if.then18.i.i, label %if.end24.i.i

if.then18.i.i:                                    ; preds = %if.then14.i.i
  store %"struct.std::__detail::_List_node_base"* %13, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i, align 8, !tbaa.struct !163
  br label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.then18.i.i, %if.then14.i.i
  %_M_size.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %11, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !159
  %sub.i.i.i.i.i = add i64 %22, -1
  store i64 %sub.i.i.i.i.i, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !159
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %14) #37
  %23 = bitcast %"struct.std::__detail::_List_node_base"* %14 to i8*
  call void @_ZdlPv(i8* nonnull %23) #37
  br label %invoke.cont2

invoke.cont2:                                     ; preds = %if.end24.i.i, %if.else.i.i, %if.then4.i.i, %if.then.i.i
  %return_val.0.i.i = phi i32 [ %18, %if.end24.i.i ], [ %18, %if.else.i.i ], [ %15, %if.then4.i.i ], [ %15, %if.then.i.i ]
  %gradient_index_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 0, i32 1
  store i32 %return_val.0.i.i, i32* %gradient_index_.i, align 8, !tbaa !246
  %arrayctor.next = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %"class.adept::Active"* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %invoke.cont2, %invoke.cont
  %call7 = invoke noalias nonnull i8* @_Znam(i64 %7) #44
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %arrayctor.cont
  %24 = bitcast i8* %call7 to i64*
  store i64 %conv, i64* %24, align 16
  %25 = getelementptr inbounds i8, i8* %call7, i64 8
  %26 = bitcast i8* %25 to %"class.adept::Active"*
  br i1 %isempty, label %arrayctor.cont23, label %new.ctorloop9

new.ctorloop9:                                    ; preds = %invoke.cont6
  %arrayctor.end10 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %26, i64 %conv
  br label %arrayctor.loop11

arrayctor.loop11:                                 ; preds = %invoke.cont14, %new.ctorloop9
  %arrayctor.cur12 = phi %"class.adept::Active"* [ %26, %new.ctorloop9 ], [ %arrayctor.next21, %invoke.cont14 ]
  %val_.i165 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur12, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i165, align 8, !tbaa !244
  %27 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i.i166 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %27, i64 0, i32 9
  %28 = load i32, i32* %n_gradients_registered_.i.i166, align 4, !tbaa !154
  %inc.i.i167 = add nsw i32 %28, 1
  store i32 %inc.i.i167, i32* %n_gradients_registered_.i.i166, align 4, !tbaa !154
  %gap_list_.i.i168 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %27, i64 0, i32 4
  %29 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i168, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i169 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i169, align 8, !tbaa !136
  %cmp.i.i.i170 = icmp eq %"struct.std::__detail::_List_node_base"* %30, %29
  br i1 %cmp.i.i.i170, label %if.then.i.i175, label %if.else.i.i182

if.then.i.i175:                                   ; preds = %arrayctor.loop11
  %i_gradient_.i.i171 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %27, i64 0, i32 6
  %31 = load i32, i32* %i_gradient_.i.i171, align 8, !tbaa !165
  %inc2.i.i172 = add nsw i32 %31, 1
  store i32 %inc2.i.i172, i32* %i_gradient_.i.i171, align 8, !tbaa !165
  %max_gradient_.i.i173 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %27, i64 0, i32 8
  %32 = load i32, i32* %max_gradient_.i.i173, align 8, !tbaa !166
  %cmp.not.i.i174 = icmp slt i32 %31, %32
  br i1 %cmp.not.i.i174, label %invoke.cont14, label %if.then4.i.i176

if.then4.i.i176:                                  ; preds = %if.then.i.i175
  store i32 %inc2.i.i172, i32* %max_gradient_.i.i173, align 8, !tbaa !166
  br label %invoke.cont14

if.else.i.i182:                                   ; preds = %arrayctor.loop11
  %33 = bitcast %"struct.std::__detail::_List_node_base"* %30 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i177 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %30, i64 1
  %start.i.i178 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i177 to i32*
  %34 = load i32, i32* %start.i.i178, align 4, !tbaa !157
  %inc11.i.i179 = add nsw i32 %34, 1
  store i32 %inc11.i.i179, i32* %start.i.i178, align 4, !tbaa !157
  %end.i.i180 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %33, i64 0, i32 1, i32 0, i64 4
  %35 = bitcast i8* %end.i.i180 to i32*
  %36 = load i32, i32* %35, align 4, !tbaa !155
  %cmp13.not.i.i181 = icmp slt i32 %34, %36
  br i1 %cmp13.not.i.i181, label %invoke.cont14, label %if.then14.i.i185

if.then14.i.i185:                                 ; preds = %if.else.i.i182
  %_M_node.i.i.i183 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %27, i64 0, i32 5, i32 0
  %37 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i183, align 8, !tbaa !158
  %cmp.i35.i.i184 = icmp eq %"struct.std::__detail::_List_node_base"* %37, %30
  br i1 %cmp.i35.i.i184, label %if.then18.i.i186, label %if.end24.i.i189

if.then18.i.i186:                                 ; preds = %if.then14.i.i185
  store %"struct.std::__detail::_List_node_base"* %29, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i183, align 8, !tbaa.struct !163
  br label %if.end24.i.i189

if.end24.i.i189:                                  ; preds = %if.then18.i.i186, %if.then14.i.i185
  %_M_size.i.i.i.i.i187 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %27, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %_M_size.i.i.i.i.i187, align 8, !tbaa !159
  %sub.i.i.i.i.i188 = add i64 %38, -1
  store i64 %sub.i.i.i.i.i188, i64* %_M_size.i.i.i.i.i187, align 8, !tbaa !159
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %30) #37
  %39 = bitcast %"struct.std::__detail::_List_node_base"* %30 to i8*
  call void @_ZdlPv(i8* nonnull %39) #37
  br label %invoke.cont14

invoke.cont14:                                    ; preds = %if.end24.i.i189, %if.else.i.i182, %if.then4.i.i176, %if.then.i.i175
  %return_val.0.i.i190 = phi i32 [ %34, %if.end24.i.i189 ], [ %34, %if.else.i.i182 ], [ %31, %if.then4.i.i176 ], [ %31, %if.then.i.i175 ]
  %gradient_index_.i191 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur12, i64 0, i32 1
  store i32 %return_val.0.i.i190, i32* %gradient_index_.i191, align 8, !tbaa !246
  %arrayctor.next21 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur12, i64 1
  %arrayctor.done22 = icmp eq %"class.adept::Active"* %arrayctor.next21, %arrayctor.end10
  br i1 %arrayctor.done22, label %arrayctor.cont23, label %arrayctor.loop11

arrayctor.cont23:                                 ; preds = %invoke.cont14, %invoke.cont6
  %40 = bitcast %"class.adept::Active"* %lse to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #37
  %val_.i193 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %lse, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i193, align 8, !tbaa !244
  %41 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i.i194 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %41, i64 0, i32 9
  %42 = load i32, i32* %n_gradients_registered_.i.i194, align 4, !tbaa !154
  %inc.i.i195 = add nsw i32 %42, 1
  store i32 %inc.i.i195, i32* %n_gradients_registered_.i.i194, align 4, !tbaa !154
  %gap_list_.i.i196 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %41, i64 0, i32 4
  %43 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i196, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i197 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i197, align 8, !tbaa !136
  %cmp.i.i.i198 = icmp eq %"struct.std::__detail::_List_node_base"* %44, %43
  br i1 %cmp.i.i.i198, label %if.then.i.i203, label %if.else.i.i210

if.then.i.i203:                                   ; preds = %arrayctor.cont23
  %i_gradient_.i.i199 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %41, i64 0, i32 6
  %45 = load i32, i32* %i_gradient_.i.i199, align 8, !tbaa !165
  %inc2.i.i200 = add nsw i32 %45, 1
  store i32 %inc2.i.i200, i32* %i_gradient_.i.i199, align 8, !tbaa !165
  %max_gradient_.i.i201 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %41, i64 0, i32 8
  %46 = load i32, i32* %max_gradient_.i.i201, align 8, !tbaa !166
  %cmp.not.i.i202 = icmp slt i32 %45, %46
  br i1 %cmp.not.i.i202, label %invoke.cont25, label %if.then4.i.i204

if.then4.i.i204:                                  ; preds = %if.then.i.i203
  store i32 %inc2.i.i200, i32* %max_gradient_.i.i201, align 8, !tbaa !166
  br label %invoke.cont25

if.else.i.i210:                                   ; preds = %arrayctor.cont23
  %47 = bitcast %"struct.std::__detail::_List_node_base"* %44 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i205 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %44, i64 1
  %start.i.i206 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i205 to i32*
  %48 = load i32, i32* %start.i.i206, align 4, !tbaa !157
  %inc11.i.i207 = add nsw i32 %48, 1
  store i32 %inc11.i.i207, i32* %start.i.i206, align 4, !tbaa !157
  %end.i.i208 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %47, i64 0, i32 1, i32 0, i64 4
  %49 = bitcast i8* %end.i.i208 to i32*
  %50 = load i32, i32* %49, align 4, !tbaa !155
  %cmp13.not.i.i209 = icmp slt i32 %48, %50
  br i1 %cmp13.not.i.i209, label %invoke.cont25, label %if.then14.i.i213

if.then14.i.i213:                                 ; preds = %if.else.i.i210
  %_M_node.i.i.i211 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %41, i64 0, i32 5, i32 0
  %51 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i211, align 8, !tbaa !158
  %cmp.i35.i.i212 = icmp eq %"struct.std::__detail::_List_node_base"* %51, %44
  br i1 %cmp.i35.i.i212, label %if.then18.i.i214, label %if.end24.i.i217

if.then18.i.i214:                                 ; preds = %if.then14.i.i213
  store %"struct.std::__detail::_List_node_base"* %43, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i211, align 8, !tbaa.struct !163
  br label %if.end24.i.i217

if.end24.i.i217:                                  ; preds = %if.then18.i.i214, %if.then14.i.i213
  %_M_size.i.i.i.i.i215 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %41, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %_M_size.i.i.i.i.i215, align 8, !tbaa !159
  %sub.i.i.i.i.i216 = add i64 %52, -1
  store i64 %sub.i.i.i.i.i216, i64* %_M_size.i.i.i.i.i215, align 8, !tbaa !159
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %44) #37
  %53 = bitcast %"struct.std::__detail::_List_node_base"* %44 to i8*
  call void @_ZdlPv(i8* nonnull %53) #37
  br label %invoke.cont25

invoke.cont25:                                    ; preds = %if.end24.i.i217, %if.else.i.i210, %if.then4.i.i204, %if.then.i.i203
  %return_val.0.i.i218 = phi i32 [ %48, %if.end24.i.i217 ], [ %48, %if.else.i.i210 ], [ %45, %if.then4.i.i204 ], [ %45, %if.then.i.i203 ]
  %gradient_index_.i219 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %lse, i64 0, i32 1
  store i32 %return_val.0.i.i218, i32* %gradient_index_.i219, align 8, !tbaa !246
  %cmp = icmp sgt i32 %b, 0
  call void @llvm.assume(i1 %cmp)
  %sub = add nsw i32 %c, -1
  %mul = mul nsw i32 %sub, %b
  %cmp27.not.not241 = icmp sgt i32 %mul, 0
  br i1 %cmp27.not.not241, label %for.body.lr.ph, label %invoke.cont75

for.body.lr.ph:                                   ; preds = %invoke.cont25
  %54 = bitcast %"class.adept::Active"* %ref.tmp30 to i8*
  %55 = bitcast %"struct.adept::internal::BinaryOperation"* %ref.tmp39 to i8*
  %56 = getelementptr inbounds %"struct.adept::internal::BinaryOperation", %"struct.adept::internal::BinaryOperation"* %ref.tmp39, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.adept::internal::BinaryOperation", %"struct.adept::internal::BinaryOperation"* %ref.tmp39, i64 0, i32 1
  %58 = bitcast %"struct.adept::internal::BinaryOperation"* %ref.tmp39 to %"struct.adept::Expression.45"*
  %59 = bitcast %"struct.adept::internal::BinaryOperation.79"* %ref.tmp.i to i8*
  %60 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.79", %"struct.adept::internal::BinaryOperation.79"* %ref.tmp.i, i64 0, i32 0
  %ref.tmp54.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.adept::internal::BinaryOperation.79", %"struct.adept::internal::BinaryOperation.79"* %ref.tmp.i, i64 0, i32 1, i32 0
  %ref.tmp54.sroa.5.0..sroa_idx232 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.79", %"struct.adept::internal::BinaryOperation.79"* %ref.tmp.i, i64 0, i32 1, i32 1
  %61 = bitcast %"struct.adept::internal::BinaryOperation.79"* %ref.tmp.i to %"struct.adept::Expression.80"*
  %62 = zext i32 %b to i64
  br label %for.body

for.body:                                         ; preds = %for.end67, %for.body.lr.ph
  %indvars.iv248 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next249, %for.end67 ]
  %input.0242 = phi %"class.adept::Active"* [ %sequence, %for.body.lr.ph ], [ %arrayidx50, %for.end67 ]
  invoke void @_ZN9adeptTest12lstm_predictIN5adept6ActiveIdEEEEviiPT_S5_S5_S5_S5_(i32 %l, i32 %b, %"class.adept::Active"* %main_params, %"class.adept::Active"* %extra_params, %"class.adept::Active"* %state, %"class.adept::Active"* %input.0242, %"class.adept::Active"* nonnull %10)
          to label %invoke.cont29 unwind label %lpad28

invoke.cont29:                                    ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #37
  invoke void @_ZN9adeptTest9logsumexpIN5adept6ActiveIdEEEET_PKS4_i(%"class.adept::Active"* nonnull sret(%"class.adept::Active") align 8 %ref.tmp30, %"class.adept::Active"* nonnull %10, i32 %b)
          to label %invoke.cont32 unwind label %lpad31

invoke.cont32:                                    ; preds = %invoke.cont29
  %call35 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %lse, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %ref.tmp30)
          to label %invoke.cont42.preheader unwind label %lpad33

invoke.cont42.preheader:                          ; preds = %invoke.cont32
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp30) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #37
  br label %invoke.cont42

invoke.cont42:                                    ; preds = %invoke.cont46, %invoke.cont42.preheader
  %indvars.iv = phi i64 [ 0, %invoke.cont42.preheader ], [ %indvars.iv.next, %invoke.cont46 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #37
  %arrayidx40 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 %indvars.iv
  store %"class.adept::Active"* %arrayidx40, %"class.adept::Active"** %56, align 8
  store %"class.adept::Active"* %lse, %"class.adept::Active"** %57, align 8
  %arrayidx45 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %26, i64 %indvars.iv
  %call47 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8SubtractES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx45, %"struct.adept::Expression.45"* nonnull align 1 dereferenceable(1) %58)
          to label %invoke.cont46 unwind label %lpad41

invoke.cont46:                                    ; preds = %invoke.cont42
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %62
  br i1 %exitcond.not, label %invoke.cont60.preheader, label %invoke.cont42, !llvm.loop !252

lpad:                                             ; preds = %entry
  %63 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup110

lpad5:                                            ; preds = %arrayctor.cont
  %64 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup110

lpad28:                                           ; preds = %for.body
  %65 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup106

lpad31:                                           ; preds = %invoke.cont29
  %66 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad33:                                           ; preds = %invoke.cont32
  %67 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp30) #37
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad33, %lpad31
  %.pn158 = phi { i8*, i32 } [ %67, %lpad33 ], [ %66, %lpad31 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #37
  br label %ehcleanup106

lpad41:                                           ; preds = %invoke.cont42
  %68 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #37
  br label %ehcleanup106

invoke.cont60.preheader:                          ; preds = %invoke.cont46
  %indvars.iv.next249 = add i64 %indvars.iv248, %62
  %arrayidx50 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %sequence, i64 %indvars.iv.next249
  br label %invoke.cont60

invoke.cont60:                                    ; preds = %invoke.cont62, %invoke.cont60.preheader
  %indvars.iv244 = phi i64 [ 0, %invoke.cont60.preheader ], [ %indvars.iv.next245, %invoke.cont62 ]
  %arrayidx56 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx50, i64 %indvars.iv244
  %arrayidx58 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %26, i64 %indvars.iv244
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #37
  store %"class.adept::Active"* %total, %"class.adept::Active"** %60, align 8, !tbaa !110, !alias.scope !253
  store %"class.adept::Active"* %arrayidx56, %"class.adept::Active"** %ref.tmp54.sroa.0.0..sroa_idx, align 8
  store %"class.adept::Active"* %arrayidx58, %"class.adept::Active"** %ref.tmp54.sroa.5.0..sroa_idx232, align 8
  %call.i223 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE(%"class.adept::Active"* nonnull dereferenceable(12) %total, %"struct.adept::Expression.80"* nonnull align 1 dereferenceable(1) %61)
          to label %invoke.cont62 unwind label %lpad59

invoke.cont62:                                    ; preds = %invoke.cont60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #37
  %indvars.iv.next245 = add nuw nsw i64 %indvars.iv244, 1
  %exitcond247.not = icmp eq i64 %indvars.iv.next245, %62
  br i1 %exitcond247.not, label %for.end67, label %invoke.cont60, !llvm.loop !256

lpad59:                                           ; preds = %invoke.cont60
  %69 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup106

for.end67:                                        ; preds = %invoke.cont62
  %70 = load i32, i32* %count, align 4, !tbaa !47
  %add68 = add nsw i32 %70, %b
  store i32 %add68, i32* %count, align 4, !tbaa !47
  %71 = trunc i64 %indvars.iv.next249 to i32
  %cmp27.not.not = icmp sgt i32 %mul, %71
  br i1 %cmp27.not.not, label %for.body, label %invoke.cont75, !llvm.loop !257

invoke.cont75:                                    ; preds = %for.end67, %invoke.cont25
  %72 = bitcast %"struct.adept::internal::BinaryOperation.48"* %ref.tmp72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #37
  %73 = bitcast %"class.adept::Active"* %ref.tmp77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #37
  invoke void @_ZN5adept6ActiveIdEC2IiEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp77, i32* nonnull align 4 dereferenceable(4) %count, i8* null)
          to label %invoke.cont81 unwind label %lpad78

invoke.cont81:                                    ; preds = %invoke.cont75
  %74 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.48", %"struct.adept::internal::BinaryOperation.48"* %ref.tmp72, i64 0, i32 0, i32 0
  store %"class.adept::Active"* %total, %"class.adept::Active"** %74, align 8
  %75 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.48", %"struct.adept::internal::BinaryOperation.48"* %ref.tmp72, i64 0, i32 1
  store %"class.adept::Active"* %ref.tmp77, %"class.adept::Active"** %75, align 8
  %76 = bitcast %"struct.adept::internal::BinaryOperation.48"* %ref.tmp72 to %"struct.adept::Expression.49"*
  %call84 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS3_14UnaryOperationIdNS3_10UnaryMinusES1_EENS3_6DivideES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSB_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SB_EE(%"class.adept::Active"* nonnull dereferenceable(12) %loss, %"struct.adept::Expression.49"* nonnull align 1 dereferenceable(1) %76)
          to label %invoke.cont83 unwind label %lpad80

invoke.cont83:                                    ; preds = %invoke.cont81
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp77) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #37
  %77 = load i64, i64* %8, align 8
  %delete.end = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 %77
  %arraydestroy.isempty89 = icmp eq %"class.adept::Active"* %delete.end, %10
  br i1 %arraydestroy.isempty89, label %arraydestroy.done94, label %arraydestroy.body90

arraydestroy.body90:                              ; preds = %arraydestroy.body90, %invoke.cont83
  %arraydestroy.elementPast91 = phi %"class.adept::Active"* [ %arraydestroy.element92, %arraydestroy.body90 ], [ %delete.end, %invoke.cont83 ]
  %arraydestroy.element92 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arraydestroy.elementPast91, i64 -1
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arraydestroy.element92) #37
  %arraydestroy.done93 = icmp eq %"class.adept::Active"* %arraydestroy.element92, %10
  br i1 %arraydestroy.done93, label %arraydestroy.done94, label %arraydestroy.body90

arraydestroy.done94:                              ; preds = %arraydestroy.body90, %invoke.cont83
  call void @_ZdaPv(i8* nonnull %call) #43
  %78 = load i64, i64* %24, align 8
  %delete.end98 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %26, i64 %78
  %arraydestroy.isempty99 = icmp eq %"class.adept::Active"* %delete.end98, %26
  br i1 %arraydestroy.isempty99, label %arraydestroy.done104, label %arraydestroy.body100

arraydestroy.body100:                             ; preds = %arraydestroy.body100, %arraydestroy.done94
  %arraydestroy.elementPast101 = phi %"class.adept::Active"* [ %arraydestroy.element102, %arraydestroy.body100 ], [ %delete.end98, %arraydestroy.done94 ]
  %arraydestroy.element102 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arraydestroy.elementPast101, i64 -1
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arraydestroy.element102) #37
  %arraydestroy.done103 = icmp eq %"class.adept::Active"* %arraydestroy.element102, %26
  br i1 %arraydestroy.done103, label %arraydestroy.done104, label %arraydestroy.body100

arraydestroy.done104:                             ; preds = %arraydestroy.body100, %arraydestroy.done94
  call void @_ZdaPv(i8* nonnull %call7) #43
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %lse) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #37
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %total) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #37
  ret void

lpad78:                                           ; preds = %invoke.cont75
  %79 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup86

lpad80:                                           ; preds = %invoke.cont81
  %80 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp77) #37
  br label %ehcleanup86

ehcleanup86:                                      ; preds = %lpad80, %lpad78
  %.pn = phi { i8*, i32 } [ %80, %lpad80 ], [ %79, %lpad78 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #37
  br label %ehcleanup106

ehcleanup106:                                     ; preds = %ehcleanup86, %lpad59, %lpad41, %ehcleanup, %lpad28
  %.pn159 = phi { i8*, i32 } [ %68, %lpad41 ], [ %69, %lpad59 ], [ %.pn158, %ehcleanup ], [ %65, %lpad28 ], [ %.pn, %ehcleanup86 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %lse) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #37
  br label %ehcleanup110

ehcleanup110:                                     ; preds = %ehcleanup106, %lpad5, %lpad
  %.pn159.pn.pn.pn = phi { i8*, i32 } [ %63, %lpad ], [ %.pn159, %ehcleanup106 ], [ %64, %lpad5 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #37
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %total) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #37
  resume { i8*, i32 } %.pn159.pn.pn.pn
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #30 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #37
  tail call void @_ZSt9terminatev() #40
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept17invalid_operationD0Ev(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %this) unnamed_addr #31 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !127
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #37
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %if.then.i.i.i, %entry
  %3 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #37
  %4 = bitcast %"class.adept::invalid_operation"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: nounwind uwtable willreturn mustprogress
define linkonce_odr dso_local i8* @_ZNK5adept9exception4whatEv(%"class.adept::exception"* nonnull dereferenceable(40) %this) unnamed_addr #32 comdat align 2 {
entry:
  %_M_p.i.i = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 1, i32 0, i32 0
  %0 = load i8*, i8** %_M_p.i.i, align 8, !tbaa !17
  ret i8* %0
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept15array_exceptionD0Ev(%"class.adept::array_exception"* nonnull dereferenceable(40) %this) unnamed_addr #31 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::array_exception", %"class.adept::array_exception"* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !127
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::array_exception", %"class.adept::array_exception"* %this, i64 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::array_exception", %"class.adept::array_exception"* %this, i64 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #37
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %if.then.i.i.i, %entry
  %3 = getelementptr inbounds %"class.adept::array_exception", %"class.adept::array_exception"* %this, i64 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #37
  %4 = bitcast %"class.adept::array_exception"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept9exceptionD0Ev(%"class.adept::exception"* nonnull dereferenceable(40) %this) unnamed_addr #5 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !127
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #37
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %if.then.i.i.i, %entry
  %3 = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #37
  %4 = bitcast %"class.adept::exception"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #23

; Function Attrs: nounwind
declare dso_local void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8)) unnamed_addr #7

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept20stack_already_activeD0Ev(%"class.adept::stack_already_active"* nonnull dereferenceable(40) %this) unnamed_addr #31 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::stack_already_active", %"class.adept::stack_already_active"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !127
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::stack_already_active", %"class.adept::stack_already_active"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::stack_already_active", %"class.adept::stack_already_active"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #37
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %if.then.i.i.i, %entry
  %3 = getelementptr inbounds %"class.adept::stack_already_active", %"class.adept::stack_already_active"* %this, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #37
  %4 = bitcast %"class.adept::stack_already_active"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept25gradients_not_initializedD0Ev(%"class.adept::gradients_not_initialized"* nonnull dereferenceable(40) %this) unnamed_addr #31 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::gradients_not_initialized", %"class.adept::gradients_not_initialized"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !127
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::gradients_not_initialized", %"class.adept::gradients_not_initialized"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::gradients_not_initialized", %"class.adept::gradients_not_initialized"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #37
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %if.then.i.i.i, %entry
  %3 = getelementptr inbounds %"class.adept::gradients_not_initialized", %"class.adept::gradients_not_initialized"* %this, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #37
  %4 = bitcast %"class.adept::gradients_not_initialized"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept21feature_not_availableD0Ev(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %this) unnamed_addr #31 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::feature_not_available", %"class.adept::feature_not_available"* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !127
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::feature_not_available", %"class.adept::feature_not_available"* %this, i64 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::feature_not_available", %"class.adept::feature_not_available"* %this, i64 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #37
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %if.then.i.i.i, %entry
  %3 = getelementptr inbounds %"class.adept::feature_not_available", %"class.adept::feature_not_available"* %this, i64 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #37
  %4 = bitcast %"class.adept::feature_not_available"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept41dependents_or_independents_not_identifiedD0Ev(%"class.adept::dependents_or_independents_not_identified"* nonnull dereferenceable(40) %this) unnamed_addr #31 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::dependents_or_independents_not_identified", %"class.adept::dependents_or_independents_not_identified"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !127
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::dependents_or_independents_not_identified", %"class.adept::dependents_or_independents_not_identified"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::dependents_or_independents_not_identified", %"class.adept::dependents_or_independents_not_identified"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #37
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %if.then.i.i.i, %entry
  %3 = getelementptr inbounds %"class.adept::dependents_or_independents_not_identified", %"class.adept::dependents_or_independents_not_identified"* %this, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #37
  %4 = bitcast %"class.adept::dependents_or_independents_not_identified"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #33

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull dereferenceable(24) %this, %"class.std::__cxx11::basic_string"* %__position.coerce, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__args) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_finish.i26.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish.i26.i, align 8, !tbaa !32
  %_M_start.i27.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_start.i27.i, align 8, !tbaa !258
  %sub.ptr.lhs.cast.i28.i = ptrtoint %"class.std::__cxx11::basic_string"* %0 to i64
  %sub.ptr.rhs.cast.i29.i = ptrtoint %"class.std::__cxx11::basic_string"* %1 to i64
  %sub.ptr.sub.i30.i = sub i64 %sub.ptr.lhs.cast.i28.i, %sub.ptr.rhs.cast.i29.i
  %sub.ptr.div.i31.i = ashr exact i64 %sub.ptr.sub.i30.i, 5
  %cmp.i = icmp eq i64 %sub.ptr.sub.i30.i, 9223372036854775776
  br i1 %cmp.i, label %if.then.i, label %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit

if.then.i:                                        ; preds = %entry
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.108, i64 0, i64 0)) #39
  unreachable

_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit: ; preds = %entry
  %cmp.i.i = icmp eq i64 %sub.ptr.sub.i30.i, 0
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 1, i64 %sub.ptr.div.i31.i
  %add.i = add nsw i64 %.sroa.speculated.i, %sub.ptr.div.i31.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i31.i
  %cmp9.i = icmp ugt i64 %add.i, 288230376151711743
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i = select i1 %or.cond.i, i64 288230376151711743, i64 %add.i
  %sub.ptr.lhs.cast.i = ptrtoint %"class.std::__cxx11::basic_string"* %__position.coerce to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i29.i
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 5
  %cmp.not.i = icmp eq i64 %cond.i, 0
  br i1 %cmp.not.i, label %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit, label %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i

_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i: ; preds = %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl nuw nsw i64 %cond.i, 5
  %call2.i.i.i = tail call noalias nonnull i8* @_Znwm(i64 %mul.i.i.i) #41
  %2 = bitcast i8* %call2.i.i.i to %"class.std::__cxx11::basic_string"*
  br label %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit

_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit: ; preds = %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i, %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
  %cond.i62 = phi %"class.std::__cxx11::basic_string"* [ %2, %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i ], [ null, %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit ]
  %add.ptr = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %cond.i62, i64 %sub.ptr.div.i
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %cond.i62, i64 %sub.ptr.div.i, i32 2
  %4 = bitcast %"class.std::__cxx11::basic_string"* %add.ptr to %union.anon**
  store %union.anon* %3, %union.anon** %4, align 8, !tbaa !14
  %_M_p.i.i25.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__args, i64 0, i32 0, i32 0
  %5 = load i8*, i8** %_M_p.i.i25.i.i.i, align 8, !tbaa !17
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__args, i64 0, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %6 to i8*
  %cmp.i.i.i.i = icmp eq i8* %5, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit
  %arraydecay.i.i.i.i = bitcast %union.anon* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(16) %arraydecay.i.i.i.i, i8* nonnull align 8 dereferenceable(16) %5, i64 16, i1 false) #37
  br label %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit

if.else.i.i.i:                                    ; preds = %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit
  %_M_p.i23.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %add.ptr, i64 0, i32 0, i32 0
  store i8* %5, i8** %_M_p.i23.i.i.i, align 8, !tbaa !17
  %_M_allocated_capacity.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__args, i64 0, i32 2, i32 0
  %7 = load i64, i64* %_M_allocated_capacity.i.i.i, align 8, !tbaa !21
  %_M_allocated_capacity.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %cond.i62, i64 %sub.ptr.div.i, i32 2, i32 0
  store i64 %7, i64* %_M_allocated_capacity.i.i.i.i, align 8, !tbaa !21
  br label %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit

_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit: ; preds = %if.else.i.i.i, %if.then.i.i.i
  %_M_string_length.i22.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__args, i64 0, i32 1
  %8 = load i64, i64* %_M_string_length.i22.i.i.i, align 8, !tbaa !19
  %_M_string_length.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %cond.i62, i64 %sub.ptr.div.i, i32 1
  store i64 %8, i64* %_M_string_length.i.i.i.i, align 8, !tbaa !19
  %9 = bitcast %"class.std::__cxx11::basic_string"* %__args to %union.anon**
  store %union.anon* %6, %union.anon** %9, align 8, !tbaa !17
  store i64 0, i64* %_M_string_length.i22.i.i.i, align 8, !tbaa !19
  store i8 0, i8* %arraydecay.i.i.i.i.i, align 8, !tbaa !21
  %cmp.not8.i.i.i.i39 = icmp eq %"class.std::__cxx11::basic_string"* %1, %__position.coerce
  br i1 %cmp.not8.i.i.i.i39, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit59, label %for.body.i.i.i.i45

for.body.i.i.i.i45:                               ; preds = %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i57, %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit
  %__cur.011.i.i.i.i40 = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr2.i.i.i.i55, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i57 ], [ %cond.i62, %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit ]
  %__first.addr.09.i.i.i.i41 = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr.i.i.i.i54, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i57 ], [ %1, %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit ]
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.011.i.i.i.i40, i64 0, i32 2
  %11 = bitcast %"class.std::__cxx11::basic_string"* %__cur.011.i.i.i.i40 to %union.anon**
  store %union.anon* %10, %union.anon** %11, align 8, !tbaa !14
  %_M_p.i.i25.i.i.i.i.i.i.i.i42 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.09.i.i.i.i41, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %_M_p.i.i25.i.i.i.i.i.i.i.i42, align 8, !tbaa !17
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.09.i.i.i.i41, i64 0, i32 2
  %arraydecay.i.i.i.i.i.i.i.i.i.i43 = bitcast %union.anon* %13 to i8*
  %cmp.i.i.i.i.i.i.i.i.i44 = icmp eq i8* %12, %arraydecay.i.i.i.i.i.i.i.i.i.i43
  br i1 %cmp.i.i.i.i.i.i.i.i.i44, label %if.then.i.i.i.i.i.i.i.i47, label %if.else.i.i.i.i.i.i.i.i51

if.then.i.i.i.i.i.i.i.i47:                        ; preds = %for.body.i.i.i.i45
  %arraydecay.i.i.i.i.i.i.i.i.i46 = bitcast %union.anon* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(16) %arraydecay.i.i.i.i.i.i.i.i.i46, i8* nonnull align 8 dereferenceable(16) %12, i64 16, i1 false) #37
  br label %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i57

if.else.i.i.i.i.i.i.i.i51:                        ; preds = %for.body.i.i.i.i45
  %_M_p.i23.i.i.i.i.i.i.i.i48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.011.i.i.i.i40, i64 0, i32 0, i32 0
  store i8* %12, i8** %_M_p.i23.i.i.i.i.i.i.i.i48, align 8, !tbaa !17
  %_M_allocated_capacity.i.i.i.i.i.i.i.i49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.09.i.i.i.i41, i64 0, i32 2, i32 0
  %14 = load i64, i64* %_M_allocated_capacity.i.i.i.i.i.i.i.i49, align 8, !tbaa !21
  %_M_allocated_capacity.i.i.i.i.i.i.i.i.i50 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.011.i.i.i.i40, i64 0, i32 2, i32 0
  store i64 %14, i64* %_M_allocated_capacity.i.i.i.i.i.i.i.i.i50, align 8, !tbaa !21
  br label %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i57

_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i57: ; preds = %if.else.i.i.i.i.i.i.i.i51, %if.then.i.i.i.i.i.i.i.i47
  %_M_string_length.i22.i.i.i.i.i.i.i.i52 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.09.i.i.i.i41, i64 0, i32 1
  %15 = load i64, i64* %_M_string_length.i22.i.i.i.i.i.i.i.i52, align 8, !tbaa !19
  %_M_string_length.i.i.i.i.i.i.i.i.i53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.011.i.i.i.i40, i64 0, i32 1
  store i64 %15, i64* %_M_string_length.i.i.i.i.i.i.i.i.i53, align 8, !tbaa !19
  %16 = bitcast %"class.std::__cxx11::basic_string"* %__first.addr.09.i.i.i.i41 to %union.anon**
  store %union.anon* %13, %union.anon** %16, align 8, !tbaa !17
  store i64 0, i64* %_M_string_length.i22.i.i.i.i.i.i.i.i52, align 8, !tbaa !19
  store i8 0, i8* %arraydecay.i.i.i.i.i.i.i.i.i.i43, align 8, !tbaa !21
  %incdec.ptr.i.i.i.i54 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.09.i.i.i.i41, i64 1
  %incdec.ptr2.i.i.i.i55 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.011.i.i.i.i40, i64 1
  %cmp.not.i.i.i.i56 = icmp eq %"class.std::__cxx11::basic_string"* %incdec.ptr.i.i.i.i54, %__position.coerce
  br i1 %cmp.not.i.i.i.i56, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit59, label %for.body.i.i.i.i45, !llvm.loop !259

_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit59: ; preds = %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i57, %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit
  %__cur.0.lcssa.i.i.i.i58 = phi %"class.std::__cxx11::basic_string"* [ %cond.i62, %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit ], [ %incdec.ptr2.i.i.i.i55, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i57 ]
  %incdec.ptr = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.0.lcssa.i.i.i.i58, i64 1
  %cmp.not8.i.i.i.i = icmp eq %"class.std::__cxx11::basic_string"* %0, %__position.coerce
  br i1 %cmp.not8.i.i.i.i, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i, %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit59
  %__cur.011.i.i.i.i = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr2.i.i.i.i, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i ], [ %incdec.ptr, %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit59 ]
  %__first.addr.09.i.i.i.i = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr.i.i.i.i, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i ], [ %__position.coerce, %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit59 ]
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.011.i.i.i.i, i64 0, i32 2
  %18 = bitcast %"class.std::__cxx11::basic_string"* %__cur.011.i.i.i.i to %union.anon**
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !14
  %_M_p.i.i25.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.09.i.i.i.i, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %_M_p.i.i25.i.i.i.i.i.i.i.i, align 8, !tbaa !17
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.09.i.i.i.i, i64 0, i32 2
  %arraydecay.i.i.i.i.i.i.i.i.i.i = bitcast %union.anon* %20 to i8*
  %cmp.i.i.i.i.i.i.i.i.i = icmp eq i8* %19, %arraydecay.i.i.i.i.i.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i:                          ; preds = %for.body.i.i.i.i
  %arraydecay.i.i.i.i.i.i.i.i.i = bitcast %union.anon* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(16) %arraydecay.i.i.i.i.i.i.i.i.i, i8* nonnull align 8 dereferenceable(16) %19, i64 16, i1 false) #37
  br label %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i

if.else.i.i.i.i.i.i.i.i:                          ; preds = %for.body.i.i.i.i
  %_M_p.i23.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.011.i.i.i.i, i64 0, i32 0, i32 0
  store i8* %19, i8** %_M_p.i23.i.i.i.i.i.i.i.i, align 8, !tbaa !17
  %_M_allocated_capacity.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.09.i.i.i.i, i64 0, i32 2, i32 0
  %21 = load i64, i64* %_M_allocated_capacity.i.i.i.i.i.i.i.i, align 8, !tbaa !21
  %_M_allocated_capacity.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.011.i.i.i.i, i64 0, i32 2, i32 0
  store i64 %21, i64* %_M_allocated_capacity.i.i.i.i.i.i.i.i.i, align 8, !tbaa !21
  br label %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i

_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i: ; preds = %if.else.i.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i.i
  %_M_string_length.i22.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.09.i.i.i.i, i64 0, i32 1
  %22 = load i64, i64* %_M_string_length.i22.i.i.i.i.i.i.i.i, align 8, !tbaa !19
  %_M_string_length.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.011.i.i.i.i, i64 0, i32 1
  store i64 %22, i64* %_M_string_length.i.i.i.i.i.i.i.i.i, align 8, !tbaa !19
  %23 = bitcast %"class.std::__cxx11::basic_string"* %__first.addr.09.i.i.i.i to %union.anon**
  store %union.anon* %20, %union.anon** %23, align 8, !tbaa !17
  store i64 0, i64* %_M_string_length.i22.i.i.i.i.i.i.i.i, align 8, !tbaa !19
  store i8 0, i8* %arraydecay.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !21
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.09.i.i.i.i, i64 1
  %incdec.ptr2.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.011.i.i.i.i, i64 1
  %cmp.not.i.i.i.i = icmp eq %"class.std::__cxx11::basic_string"* %incdec.ptr.i.i.i.i, %0
  br i1 %cmp.not.i.i.i.i, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit, label %for.body.i.i.i.i, !llvm.loop !259

_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit: ; preds = %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i, %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit59
  %__cur.0.lcssa.i.i.i.i = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr, %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit59 ], [ %incdec.ptr2.i.i.i.i, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i ]
  %tobool.not.i = icmp eq %"class.std::__cxx11::basic_string"* %1, null
  br i1 %tobool.not.i, label %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit, label %if.then.i38

if.then.i38:                                      ; preds = %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
  %24 = bitcast %"class.std::__cxx11::basic_string"* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %24) #37
  br label %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit

_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit: ; preds = %if.then.i38, %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %cond.i62, %"class.std::__cxx11::basic_string"** %_M_start.i27.i, align 8, !tbaa !258
  store %"class.std::__cxx11::basic_string"* %__cur.0.lcssa.i.i.i.i, %"class.std::__cxx11::basic_string"** %_M_finish.i26.i, align 8, !tbaa !32
  %add.ptr20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %cond.i62, i64 %cond.i
  store %"class.std::__cxx11::basic_string"* %add.ptr20, %"class.std::__cxx11::basic_string"** %_M_end_of_storage, align 8, !tbaa !34
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #33

; Function Attrs: nobuiltin nofree allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #25

; Function Attrs: nounwind
declare dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i8*, i64, i64) local_unnamed_addr #7

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) local_unnamed_addr #33

; Function Attrs: nounwind
declare dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i8 signext, i64) local_unnamed_addr #7

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.3"* nonnull dereferenceable(24) %this, i64 %__n) local_unnamed_addr #10 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %cmp.not = icmp eq i64 %__n, 0
  br i1 %cmp.not, label %if.end48, label %if.then

if.then:                                          ; preds = %entry
  %_M_finish.i = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  %0 = load double*, double** %_M_finish.i, align 8, !tbaa !49
  %_M_start.i = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %1 = load double*, double** %_M_start.i, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i = ptrtoint double* %0 to i64
  %sub.ptr.rhs.cast.i = ptrtoint double* %1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %2 = lshr exact i64 %sub.ptr.sub.i, 3
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  %3 = load double*, double** %_M_end_of_storage, align 8, !tbaa !260
  %sub.ptr.lhs.cast = ptrtoint double* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.lhs.cast.i
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %cmp4 = icmp sgt i64 %sub.ptr.sub.i, -1
  tail call void @llvm.assume(i1 %cmp4)
  %sub = xor i64 %2, 1152921504606846975
  %cmp6 = icmp ule i64 %sub.ptr.div, %sub
  tail call void @llvm.assume(i1 %cmp6)
  %cmp8.not = icmp ult i64 %sub.ptr.div, %__n
  br i1 %cmp8.not, label %if.else, label %_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit83

_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit83: ; preds = %if.then
  %__first2.i.i.i79 = bitcast double* %0 to i8*
  %4 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first2.i.i.i79, i8 0, i64 %4, i1 false)
  %scevgep.i.i.i80 = getelementptr double, double* %0, i64 %__n
  br label %if.end48.sink.split

if.else:                                          ; preds = %if.then
  %cmp.i = icmp ult i64 %sub, %__n
  br i1 %cmp.i, label %if.then.i84, label %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit

if.then.i84:                                      ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.112, i64 0, i64 0)) #39
  unreachable

_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit:    ; preds = %if.else
  %cmp.i.i = icmp ult i64 %2, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %2
  %add.i = add i64 %.sroa.speculated.i, %2
  %cmp7.i = icmp ult i64 %add.i, %2
  %cmp9.i = icmp ugt i64 %add.i, 1152921504606846975
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i85 = select i1 %or.cond.i, i64 1152921504606846975, i64 %add.i
  %cmp.not.i = icmp eq i64 %cond.i85, 0
  br i1 %cmp.not.i, label %try.cont, label %cond.true.i

cond.true.i:                                      ; preds = %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit
  %cmp.i.i.i = icmp ugt i64 %cond.i85, 1152921504606846975
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i

if.then.i.i.i:                                    ; preds = %cond.true.i
  tail call void @_ZSt17__throw_bad_allocv() #39
  unreachable

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i: ; preds = %cond.true.i
  %mul.i.i.i = shl nuw nsw i64 %cond.i85, 3
  %call2.i.i.i = tail call noalias nonnull i8* @_Znwm(i64 %mul.i.i.i) #41
  %5 = bitcast i8* %call2.i.i.i to double*
  %.pre = load double*, double** %_M_start.i, align 8, !tbaa !51
  %.pre86 = load double*, double** %_M_finish.i, align 8, !tbaa !49
  %.pre87 = ptrtoint double* %.pre86 to i64
  %.pre88 = ptrtoint double* %.pre to i64
  %.pre89 = sub i64 %.pre87, %.pre88
  br label %try.cont

try.cont:                                         ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i, %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit
  %sub.ptr.sub.i.i.i.i.pre-phi = phi i64 [ %.pre89, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i ], [ %sub.ptr.sub.i, %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit ]
  %6 = phi double* [ %.pre, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i ], [ %1, %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit ]
  %cond.i = phi double* [ %5, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit ]
  %add.ptr = getelementptr inbounds double, double* %cond.i, i64 %2
  %__first2.i.i.i = bitcast double* %add.ptr to i8*
  %7 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first2.i.i.i, i8 0, i64 %7, i1 false)
  %cmp.i.i.i.i = icmp sgt i64 %sub.ptr.sub.i.i.i.i.pre-phi, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_.exit

if.then.i.i.i.i:                                  ; preds = %try.cont
  %8 = bitcast double* %cond.i to i8*
  %9 = bitcast double* %6 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 %sub.ptr.sub.i.i.i.i.pre-phi, i1 false) #37
  br label %_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_.exit

_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_.exit: ; preds = %if.then.i.i.i.i, %try.cont
  %tobool.not.i = icmp eq double* %6, null
  br i1 %tobool.not.i, label %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit, label %if.then.i

if.then.i:                                        ; preds = %_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_.exit
  %10 = bitcast double* %6 to i8*
  tail call void @_ZdlPv(i8* nonnull %10) #37
  br label %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit

_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit: ; preds = %if.then.i, %_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_.exit
  store double* %cond.i, double** %_M_start.i, align 8, !tbaa !51
  %add.ptr41 = getelementptr inbounds double, double* %add.ptr, i64 %__n
  store double* %add.ptr41, double** %_M_finish.i, align 8, !tbaa !49
  %add.ptr44 = getelementptr inbounds double, double* %cond.i, i64 %cond.i85
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit, %_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit83
  %_M_finish.i.sink = phi double** [ %_M_finish.i, %_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit83 ], [ %_M_end_of_storage, %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit ]
  %scevgep.i.i.i80.sink = phi double* [ %scevgep.i.i.i80, %_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit83 ], [ %add.ptr44, %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit ]
  store double* %scevgep.i.i.i80.sink, double** %_M_finish.i.sink, align 8, !tbaa !110
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  ret void
}

declare dso_local void @__cxa_rethrow() local_unnamed_addr

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: uwtable
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_EET0_T_SC_SB_(%"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"* %__last, %"class.std::__cxx11::basic_string"* %__result) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i.i = alloca i64, align 8
  %cmp.not17 = icmp eq %"class.std::__cxx11::basic_string"* %__first, %__last
  br i1 %cmp.not17, label %for.end, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %entry
  %0 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  br label %for.body

for.body:                                         ; preds = %for.inc, %for.body.lr.ph
  %__cur.019 = phi %"class.std::__cxx11::basic_string"* [ %__result, %for.body.lr.ph ], [ %incdec.ptr1, %for.inc ]
  %__first.addr.018 = phi %"class.std::__cxx11::basic_string"* [ %__first, %for.body.lr.ph ], [ %incdec.ptr, %for.inc ]
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.019, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %__cur.019 to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %_M_p.i13.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.018, i64 0, i32 0, i32 0
  %3 = load i8*, i8** %_M_p.i13.i.i, align 8, !tbaa !17
  %_M_string_length.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.018, i64 0, i32 1
  %4 = load i64, i64* %_M_string_length.i.i.i, align 8, !tbaa !19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #37
  store i64 %4, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20
  %cmp3.i.i.i.i.i = icmp ugt i64 %4, 15
  br i1 %cmp3.i.i.i.i.i, label %if.then4.i.i.i.i.i, label %if.end.if.end6_crit_edge.i.i.i.i.i

if.end.if.end6_crit_edge.i.i.i.i.i:               ; preds = %for.body
  %5 = bitcast %union.anon* %1 to i8*
  br label %if.end6.i.i.i.i.i

if.then4.i.i.i.i.i:                               ; preds = %for.body
  %call5.i.i.i12.i.i15 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %__cur.019, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i.i, i64 0)
          to label %call5.i.i.i12.i.i.noexc unwind label %lpad

call5.i.i.i12.i.i.noexc:                          ; preds = %if.then4.i.i.i.i.i
  %_M_p.i13.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.019, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i12.i.i15, i8** %_M_p.i13.i.i.i.i.i, align 8, !tbaa !17
  %6 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.019, i64 0, i32 2, i32 0
  store i64 %6, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !21
  br label %if.end6.i.i.i.i.i

if.end6.i.i.i.i.i:                                ; preds = %call5.i.i.i12.i.i.noexc, %if.end.if.end6_crit_edge.i.i.i.i.i
  %7 = phi i8* [ %5, %if.end.if.end6_crit_edge.i.i.i.i.i ], [ %call5.i.i.i12.i.i15, %call5.i.i.i12.i.i.noexc ]
  switch i64 %4, label %if.end.i.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i.i
    i64 0, label %for.inc
  ]

if.then.i.i.i.i.i.i.i:                            ; preds = %if.end6.i.i.i.i.i
  %8 = load i8, i8* %3, align 1, !tbaa !21
  store i8 %8, i8* %7, align 1, !tbaa !21
  br label %for.inc

if.end.i.i.i.i.i.i.i.i:                           ; preds = %if.end6.i.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 %3, i64 %4, i1 false) #37
  br label %for.inc

for.inc:                                          ; preds = %if.end.i.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i, %if.end6.i.i.i.i.i
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.019, i64 0, i32 0, i32 0
  %9 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.019, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19
  %10 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %10, i64 %9
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #37
  %incdec.ptr = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.018, i64 1
  %incdec.ptr1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.019, i64 1
  %cmp.not = icmp eq %"class.std::__cxx11::basic_string"* %incdec.ptr, %__last
  br i1 %cmp.not, label %for.end, label %for.body, !llvm.loop !261

lpad:                                             ; preds = %if.then4.i.i.i.i.i
  %11 = landingpad { i8*, i32 }
          catch i8* null
  %12 = extractvalue { i8*, i32 } %11, 0
  %13 = call i8* @__cxa_begin_catch(i8* %12) #37
  %cmp.not3.i.i = icmp eq %"class.std::__cxx11::basic_string"* %__cur.019, %__result
  br i1 %cmp.not3.i.i, label %invoke.cont3, label %for.body.i.i

for.body.i.i:                                     ; preds = %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i, %lpad
  %__first.addr.04.i.i = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr.i.i, %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i ], [ %__result, %lpad ]
  %_M_p.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %_M_p.i.i.i.i.i.i.i, align 8, !tbaa !17
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i, i64 0, i32 2
  %arraydecay.i.i.i.i.i.i.i = bitcast %union.anon* %15 to i8*
  %cmp.i.i.i.i.i.i = icmp eq i8* %14, %arraydecay.i.i.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %for.body.i.i
  call void @_ZdlPv(i8* %14) #37
  br label %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i

_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i: ; preds = %if.then.i.i.i.i.i, %for.body.i.i
  %incdec.ptr.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i, i64 1
  %cmp.not.i.i = icmp eq %"class.std::__cxx11::basic_string"* %incdec.ptr.i.i, %__cur.019
  br i1 %cmp.not.i.i, label %invoke.cont3, label %for.body.i.i, !llvm.loop !56

invoke.cont3:                                     ; preds = %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i, %lpad
  invoke void @__cxa_rethrow() #39
          to label %unreachable unwind label %lpad2

for.end:                                          ; preds = %for.inc, %entry
  %__cur.0.lcssa = phi %"class.std::__cxx11::basic_string"* [ %__result, %entry ], [ %incdec.ptr1, %for.inc ]
  ret %"class.std::__cxx11::basic_string"* %__cur.0.lcssa

lpad2:                                            ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  invoke void @__cxa_end_catch()
          to label %invoke.cont4 unwind label %terminate.lpad

invoke.cont4:                                     ; preds = %lpad2
  resume { i8*, i32 } %16

terminate.lpad:                                   ; preds = %lpad2
  %17 = landingpad { i8*, i32 }
          catch i8* null
  %18 = extractvalue { i8*, i32 } %17, 0
  call void @__clang_call_terminate(i8* %18) #40
  unreachable

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull dereferenceable(8)) unnamed_addr #7

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull dereferenceable(216)) unnamed_addr #7

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) local_unnamed_addr #3

declare dso_local void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* nonnull dereferenceable(264), i32) local_unnamed_addr #3

; Function Attrs: uwtable
declare dso_local void @_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8, %"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104)) local_unnamed_addr #0 align 2

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16)) local_unnamed_addr #7

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8), double) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16), %"struct.std::__detail::_List_node_base"*) local_unnamed_addr #7

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIPKvEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8), i8*) local_unnamed_addr #3

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare dso_local i32 @posix_memalign(i8**, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare dso_local void @_ZNSt9bad_allocD1Ev(%"class.std::bad_alloc"* nonnull dereferenceable(8)) unnamed_addr #7

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept5ArrayILi1EdLb0EE6resizeEPKib(%"class.adept::Array.38"* nonnull dereferenceable(24) %this, i32* %dim, i1 zeroext %force_contiguous) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.i.i = alloca double*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp6 = alloca %"class.std::__cxx11::basic_string", align 8
  %storage_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 1
  %0 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %storage_, align 8, !tbaa !239
  %tobool.not = icmp eq %"class.adept::Storage.24"* %0, null
  br i1 %tobool.not, label %for.body.critedge, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN5adept7StorageIdE11remove_linkEv(%"class.adept::Storage.24"* nonnull dereferenceable(20) %0)
  store %"class.adept::Storage.24"* null, %"class.adept::Storage.24"** %storage_, align 8, !tbaa !239
  br label %for.body.critedge

for.body.critedge:                                ; preds = %if.then, %entry
  %1 = load i32, i32* %dim, align 4, !tbaa !47
  %cmp4 = icmp slt i32 %1, 0
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %for.body.critedge
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %2 = bitcast i8* %exception to %"class.adept::invalid_dimension"*
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #37
  %4 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #37
  invoke void @_ZN5adept8internal18exception_locationB5cxx11EPKci(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp6, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.116, i64 0, i64 0), i32 1969)
          to label %invoke.cont unwind label %ehcleanup11.thread

invoke.cont:                                      ; preds = %if.then5
  %call3.i.i.i57 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp6, i64 0, i64 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i64 0, i64 0), i64 34)
          to label %call3.i.i.i.noexc unwind label %lpad7

call3.i.i.i.noexc:                                ; preds = %invoke.cont
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !14, !alias.scope !262
  %_M_p.i.i25.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i57, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %_M_p.i.i25.i.i, align 8, !tbaa !17
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i57, i64 0, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %8 to i8*
  %cmp.i.i.i = icmp eq i8* %7, %arraydecay.i.i.i.i
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %call3.i.i.i.noexc
  %arraydecay.i.i.i = bitcast %union.anon* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %arraydecay.i.i.i, i8* nonnull align 8 dereferenceable(16) %7, i64 16, i1 false) #37
  br label %invoke.cont8

if.else.i.i:                                      ; preds = %call3.i.i.i.noexc
  %_M_p.i23.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %7, i8** %_M_p.i23.i.i, align 8, !tbaa !17, !alias.scope !262
  %_M_allocated_capacity.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i57, i64 0, i32 2, i32 0
  %9 = load i64, i64* %_M_allocated_capacity.i.i, align 8, !tbaa !21
  %_M_allocated_capacity.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %9, i64* %_M_allocated_capacity.i.i.i, align 8, !tbaa !21, !alias.scope !262
  br label %invoke.cont8

invoke.cont8:                                     ; preds = %if.else.i.i, %if.then.i.i
  %_M_string_length.i22.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i57, i64 0, i32 1
  %10 = load i64, i64* %_M_string_length.i22.i.i, align 8, !tbaa !19
  %_M_string_length.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %10, i64* %_M_string_length.i.i.i, align 8, !tbaa !19, !alias.scope !262
  %11 = bitcast %"class.std::__cxx11::basic_string"* %call3.i.i.i57 to %union.anon**
  store %union.anon* %8, %union.anon** %11, align 8, !tbaa !17
  store i64 0, i64* %_M_string_length.i22.i.i, align 8, !tbaa !19
  store i8 0, i8* %arraydecay.i.i.i.i, align 8, !tbaa !21
  invoke void @_ZN5adept17invalid_dimensionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_dimension"* nonnull dereferenceable(40) %2, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont10 unwind label %lpad9

invoke.cont10:                                    ; preds = %invoke.cont8
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_dimensionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad9

ehcleanup11.thread:                               ; preds = %if.then5
  %12 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #37
  br label %cleanup.action

lpad7:                                            ; preds = %invoke.cont
  %13 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad9:                                            ; preds = %invoke.cont10, %invoke.cont8
  %cleanup.isactive.0 = phi i1 [ false, %invoke.cont10 ], [ true, %invoke.cont8 ]
  %14 = landingpad { i8*, i32 }
          cleanup
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !17
  %arraydecay.i.i.i.i58 = bitcast %union.anon* %5 to i8*
  %cmp.i.i.i59 = icmp eq i8* %15, %arraydecay.i.i.i.i58
  br i1 %cmp.i.i.i59, label %ehcleanup, label %if.then.i.i60

if.then.i.i60:                                    ; preds = %lpad9
  call void @_ZdlPv(i8* %15) #37
  br label %ehcleanup

ehcleanup:                                        ; preds = %if.then.i.i60, %lpad9, %lpad7
  %.pn = phi { i8*, i32 } [ %13, %lpad7 ], [ %14, %lpad9 ], [ %14, %if.then.i.i60 ]
  %cleanup.isactive.1 = phi i1 [ true, %lpad7 ], [ %cleanup.isactive.0, %lpad9 ], [ %cleanup.isactive.0, %if.then.i.i60 ]
  %_M_p.i.i.i.i61 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp6, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %_M_p.i.i.i.i61, align 8, !tbaa !17
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp6, i64 0, i32 2
  %arraydecay.i.i.i.i62 = bitcast %union.anon* %17 to i8*
  %cmp.i.i.i63 = icmp eq i8* %16, %arraydecay.i.i.i.i62
  br i1 %cmp.i.i.i63, label %ehcleanup11, label %if.then.i.i64

if.then.i.i64:                                    ; preds = %ehcleanup
  call void @_ZdlPv(i8* %16) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #37
  br i1 %cleanup.isactive.1, label %cleanup.action, label %eh.resume

ehcleanup11:                                      ; preds = %ehcleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #37
  br i1 %cleanup.isactive.1, label %cleanup.action, label %eh.resume

cleanup.action:                                   ; preds = %ehcleanup11, %if.then.i.i64, %ehcleanup11.thread
  %.pn.pn73 = phi { i8*, i32 } [ %12, %ehcleanup11.thread ], [ %.pn, %ehcleanup11 ], [ %.pn, %if.then.i.i64 ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

if.else:                                          ; preds = %for.body.critedge
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %_ZN5adept5ArrayILi1EdLb0EE5clearEv.exit, label %for.end, !llvm.loop !265

_ZN5adept5ArrayILi1EdLb0EE5clearEv.exit:          ; preds = %if.else
  %data_.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 0
  store double* null, double** %data_.i, align 8, !tbaa !242
  %arrayidx.i.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 2, i32 0, i64 0
  store i32 0, i32* %arrayidx.i.i, align 4, !tbaa !47
  %arrayidx.i4.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 3, i32 0, i64 0
  store i32 0, i32* %arrayidx.i4.i, align 4, !tbaa !47
  br label %return

for.end:                                          ; preds = %if.else
  %arrayidx3.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 2, i32 0, i64 0
  store i32 %1, i32* %arrayidx3.i, align 4, !tbaa !47
  %18 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 3, i32 0, i64 0
  store i32 1, i32* %18, align 4
  %call32 = tail call noalias nonnull dereferenceable(24) i8* @_Znwm(i64 24) #44
  %n_.i = getelementptr inbounds i8, i8* %call32, i64 8
  %19 = bitcast i8* %n_.i to i32*
  store i32 %1, i32* %19, align 8, !tbaa !266
  %n_links_.i = getelementptr inbounds i8, i8* %call32, i64 12
  %20 = bitcast i8* %n_links_.i to i32*
  store i32 1, i32* %20, align 4, !tbaa !268
  %gradient_index_.i = getelementptr inbounds i8, i8* %call32, i64 16
  %21 = bitcast i8* %gradient_index_.i to i32*
  store i32 -1, i32* %21, align 8, !tbaa !269
  %22 = bitcast double** %result.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #37
  %23 = bitcast double** %result.i.i to i8**
  %conv1.i.i74 = zext i32 %1 to i64
  %mul.i.i = shl nuw nsw i64 %conv1.i.i74, 3
  %call2.i.i = call i32 @posix_memalign(i8** nonnull %23, i64 16, i64 %mul.i.i) #37
  %cmp3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %cmp3.not.i.i, label %invoke.cont34, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %for.end
  %exception.i.i = call i8* @__cxa_allocate_exception(i64 8) #37
  %24 = bitcast i8* %exception.i.i to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !tbaa !127
  invoke void @__cxa_throw(i8* nonnull %exception.i.i, i8* bitcast (i8** @_ZTISt9bad_alloc to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD1Ev to i8*)) #39
          to label %.noexc unwind label %lpad33

.noexc:                                           ; preds = %if.then4.i.i
  unreachable

invoke.cont34:                                    ; preds = %for.end
  %25 = load double*, double** %result.i.i, align 8, !tbaa !110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #37
  %data_.i67 = bitcast i8* %call32 to double**
  store double* %25, double** %data_.i67, align 8, !tbaa !270
  %26 = load i32, i32* @_ZN5adept8internal26n_storage_objects_created_E, align 4, !tbaa !47
  %inc.i = add nsw i32 %26, 1
  store i32 %inc.i, i32* @_ZN5adept8internal26n_storage_objects_created_E, align 4, !tbaa !47
  %27 = bitcast %"class.adept::Storage.24"** %storage_ to i8**
  store i8* %call32, i8** %27, align 8, !tbaa !239
  %data_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 0
  store double* %25, double** %data_, align 8, !tbaa !242
  br label %return

return:                                           ; preds = %invoke.cont34, %_ZN5adept5ArrayILi1EdLb0EE5clearEv.exit
  ret void

lpad33:                                           ; preds = %if.then4.i.i
  %28 = landingpad { i8*, i32 }
          cleanup
  call void @_ZdlPv(i8* nonnull %call32) #43
  br label %eh.resume

eh.resume:                                        ; preds = %lpad33, %cleanup.action, %ehcleanup11, %if.then.i.i64
  %.pn.pn.pn = phi { i8*, i32 } [ %28, %lpad33 ], [ %.pn.pn73, %cleanup.action ], [ %.pn, %ehcleanup11 ], [ %.pn, %if.then.i.i64 ]
  resume { i8*, i32 } %.pn.pn.pn

unreachable:                                      ; preds = %invoke.cont10
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept7StorageIdE11remove_linkEv(%"class.adept::Storage.24"* nonnull dereferenceable(20) %this) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp2 = alloca %"class.std::__cxx11::basic_string", align 8
  %n_links_ = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this, i64 0, i32 2
  %0 = load i32, i32* %n_links_, align 4, !tbaa !268
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %1 = bitcast i8* %exception to %"class.adept::invalid_operation"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #37
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #37
  invoke void @_ZN5adept8internal18exception_locationB5cxx11EPKci(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp2, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.118, i64 0, i64 0), i32 112)
          to label %invoke.cont unwind label %ehcleanup7.thread

invoke.cont:                                      ; preds = %if.then
  %call3.i.i.i17 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp2, i64 0, i64 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i64 0, i64 0), i64 57)
          to label %call3.i.i.i.noexc unwind label %lpad3

call3.i.i.i.noexc:                                ; preds = %invoke.cont
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !14, !alias.scope !271
  %_M_p.i.i25.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i17, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %_M_p.i.i25.i.i, align 8, !tbaa !17
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i17, i64 0, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %7 to i8*
  %cmp.i.i.i = icmp eq i8* %6, %arraydecay.i.i.i.i
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %call3.i.i.i.noexc
  %arraydecay.i.i.i = bitcast %union.anon* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %arraydecay.i.i.i, i8* nonnull align 8 dereferenceable(16) %6, i64 16, i1 false) #37
  br label %invoke.cont4

if.else.i.i:                                      ; preds = %call3.i.i.i.noexc
  %_M_p.i23.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %6, i8** %_M_p.i23.i.i, align 8, !tbaa !17, !alias.scope !271
  %_M_allocated_capacity.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i17, i64 0, i32 2, i32 0
  %8 = load i64, i64* %_M_allocated_capacity.i.i, align 8, !tbaa !21
  %_M_allocated_capacity.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %8, i64* %_M_allocated_capacity.i.i.i, align 8, !tbaa !21, !alias.scope !271
  br label %invoke.cont4

invoke.cont4:                                     ; preds = %if.else.i.i, %if.then.i.i
  %_M_string_length.i22.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i17, i64 0, i32 1
  %9 = load i64, i64* %_M_string_length.i22.i.i, align 8, !tbaa !19
  %_M_string_length.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i, align 8, !tbaa !19, !alias.scope !271
  %10 = bitcast %"class.std::__cxx11::basic_string"* %call3.i.i.i17 to %union.anon**
  store %union.anon* %7, %union.anon** %10, align 8, !tbaa !17
  store i64 0, i64* %_M_string_length.i22.i.i, align 8, !tbaa !19
  store i8 0, i8* %arraydecay.i.i.i.i, align 8, !tbaa !21
  invoke void @_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %invoke.cont4
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_operationE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad5

ehcleanup7.thread:                                ; preds = %if.then
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #37
  br label %cleanup.action

lpad3:                                            ; preds = %invoke.cont
  %12 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad5:                                            ; preds = %invoke.cont6, %invoke.cont4
  %cleanup.isactive.0 = phi i1 [ false, %invoke.cont6 ], [ true, %invoke.cont4 ]
  %13 = landingpad { i8*, i32 }
          cleanup
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !17
  %arraydecay.i.i.i.i18 = bitcast %union.anon* %4 to i8*
  %cmp.i.i.i19 = icmp eq i8* %14, %arraydecay.i.i.i.i18
  br i1 %cmp.i.i.i19, label %ehcleanup, label %if.then.i.i20

if.then.i.i20:                                    ; preds = %lpad5
  call void @_ZdlPv(i8* %14) #37
  br label %ehcleanup

ehcleanup:                                        ; preds = %if.then.i.i20, %lpad5, %lpad3
  %.pn = phi { i8*, i32 } [ %12, %lpad3 ], [ %13, %lpad5 ], [ %13, %if.then.i.i20 ]
  %cleanup.isactive.1 = phi i1 [ true, %lpad3 ], [ %cleanup.isactive.0, %lpad5 ], [ %cleanup.isactive.0, %if.then.i.i20 ]
  %_M_p.i.i.i.i21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp2, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %_M_p.i.i.i.i21, align 8, !tbaa !17
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp2, i64 0, i32 2
  %arraydecay.i.i.i.i22 = bitcast %union.anon* %16 to i8*
  %cmp.i.i.i23 = icmp eq i8* %15, %arraydecay.i.i.i.i22
  br i1 %cmp.i.i.i23, label %ehcleanup7, label %if.then.i.i24

if.then.i.i24:                                    ; preds = %ehcleanup
  call void @_ZdlPv(i8* %15) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #37
  br i1 %cleanup.isactive.1, label %cleanup.action, label %eh.resume

ehcleanup7:                                       ; preds = %ehcleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #37
  br i1 %cleanup.isactive.1, label %cleanup.action, label %eh.resume

cleanup.action:                                   ; preds = %ehcleanup7, %if.then.i.i24, %ehcleanup7.thread
  %.pn.pn29 = phi { i8*, i32 } [ %11, %ehcleanup7.thread ], [ %.pn, %ehcleanup7 ], [ %.pn, %if.then.i.i24 ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

if.else:                                          ; preds = %entry
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* %n_links_, align 4, !tbaa !268
  %cmp11.not = icmp eq i32 %dec, 0
  br i1 %cmp11.not, label %delete.notnull, label %if.end13

delete.notnull:                                   ; preds = %if.else
  %17 = bitcast %"class.adept::Storage.24"* %this to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !270
  tail call void @free(i8* %18) #37
  %gradient_index_.i = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this, i64 0, i32 3
  %19 = load i32, i32* %gradient_index_.i, align 8, !tbaa !269
  %cmp.i = icmp sgt i32 %19, -1
  br i1 %cmp.i, label %if.then.i, label %_ZN5adept7StorageIdED2Ev.exit

if.then.i:                                        ; preds = %delete.notnull
  %20 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_.i = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this, i64 0, i32 1
  invoke void @_ZN5adept5Stack20unregister_gradientsERKiS2_(%"class.adept::Stack"* nonnull dereferenceable(149) %20, i32* nonnull align 4 dereferenceable(4) %gradient_index_.i, i32* nonnull align 4 dereferenceable(4) %n_.i)
          to label %_ZN5adept7StorageIdED2Ev.exit unwind label %terminate.lpad.i

terminate.lpad.i:                                 ; preds = %if.then.i
  %21 = landingpad { i8*, i32 }
          catch i8* null
  %22 = extractvalue { i8*, i32 } %21, 0
  tail call void @__clang_call_terminate(i8* %22) #40
  unreachable

_ZN5adept7StorageIdED2Ev.exit:                    ; preds = %if.then.i, %delete.notnull
  %23 = load i32, i32* @_ZN5adept8internal26n_storage_objects_deleted_E, align 4, !tbaa !47
  %inc.i = add nsw i32 %23, 1
  store i32 %inc.i, i32* @_ZN5adept8internal26n_storage_objects_deleted_E, align 4, !tbaa !47
  %24 = bitcast %"class.adept::Storage.24"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %24) #43
  br label %if.end13

if.end13:                                         ; preds = %_ZN5adept7StorageIdED2Ev.exit, %if.else
  ret void

eh.resume:                                        ; preds = %cleanup.action, %ehcleanup7, %if.then.i.i24
  %.pn.pn28 = phi { i8*, i32 } [ %.pn, %ehcleanup7 ], [ %.pn.pn29, %cleanup.action ], [ %.pn, %if.then.i.i24 ]
  resume { i8*, i32 } %.pn.pn28

unreachable:                                      ; preds = %invoke.cont6
  unreachable
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN5adept8internal18exception_locationB5cxx11EPKci(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, i8* %file, i32 %line) local_unnamed_addr #34 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %s = alloca %"class.std::__cxx11::basic_stringstream", align 8
  %0 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 392, i8* nonnull %0) #37
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %s)
  %add.ptr = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 1
  %1 = bitcast %"class.std::basic_ostream.base"* %add.ptr to %"class.std::basic_ostream"*
  %call1.i11 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.119, i64 0, i64 0), i64 5)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %tobool.not.i = icmp eq i8* %file, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %invoke.cont
  %2 = bitcast %"class.std::basic_ostream.base"* %add.ptr to i8**
  %vtable.i = load i8*, i8** %2, align 8, !tbaa !127
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %3 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %3, align 8
  %4 = bitcast %"class.std::basic_ostream.base"* %add.ptr to i8*
  %add.ptr.i = getelementptr inbounds i8, i8* %4, i64 %vbase.offset.i
  %5 = bitcast i8* %add.ptr.i to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 32
  %6 = bitcast i8* %_M_streambuf_state.i.i.i to i32*
  %7 = load i32, i32* %6, align 8, !tbaa !274
  %or.i.i.i = or i32 %7, 1
  invoke void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* nonnull dereferenceable(264) %5, i32 %or.i.i.i)
          to label %invoke.cont1 unwind label %lpad

if.else.i:                                        ; preds = %invoke.cont
  %call.i.i12 = call i64 @strlen(i8* nonnull dereferenceable(1) %file) #37
  %call1.i13 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull %file, i64 %call.i.i12)
          to label %invoke.cont1 unwind label %lpad

invoke.cont1:                                     ; preds = %if.else.i, %if.then.i
  %call1.i18 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0), i64 1)
          to label %invoke.cont3 unwind label %lpad

invoke.cont3:                                     ; preds = %invoke.cont1
  %call6 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %1, i32 %line)
          to label %invoke.cont5 unwind label %lpad

invoke.cont5:                                     ; preds = %invoke.cont3
  %call1.i23 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call6, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.120, i64 0, i64 0), i64 1)
          to label %invoke.cont7 unwind label %lpad

invoke.cont7:                                     ; preds = %invoke.cont5
  %_M_stringbuf.i = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1
  invoke void @_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104) %_M_stringbuf.i)
          to label %invoke.cont9 unwind label %lpad

invoke.cont9:                                     ; preds = %invoke.cont7
  %8 = load i32 (...)**, i32 (...)*** bitcast ([10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE to i32 (...)***), align 8
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** %8, i32 (...)*** %9, align 8, !tbaa !127
  %10 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 8) to i32 (...)***), align 8
  %vbase.offset.ptr4.i.i = getelementptr i32 (...)*, i32 (...)** %8, i64 -3
  %11 = bitcast i32 (...)** %vbase.offset.ptr4.i.i to i64*
  %vbase.offset.i.i = load i64, i64* %11, align 8
  %add.ptr.i.i = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i
  %12 = bitcast i8* %add.ptr.i.i to i32 (...)***
  store i32 (...)** %10, i32 (...)*** %12, align 8, !tbaa !127
  %13 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 9) to i32 (...)***), align 8
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** %13, i32 (...)*** %14, align 8, !tbaa !127
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8, !tbaa !127
  %_M_p.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 0, i32 0
  %16 = load i8*, i8** %_M_p.i.i.i.i.i.i.i, align 8, !tbaa !17
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 2
  %arraydecay.i.i.i.i.i.i.i = bitcast %union.anon* %17 to i8*
  %cmp.i.i.i.i.i.i = icmp eq i8* %16, %arraydecay.i.i.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %invoke.cont9
  call void @_ZdlPv(i8* %16) #37
  br label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit

_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit: ; preds = %if.then.i.i.i.i.i, %invoke.cont9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8, !tbaa !127
  %_M_buf_locale.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull dereferenceable(8) %_M_buf_locale.i.i.i.i) #37
  %18 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 2) to i32 (...)***), align 8
  store i32 (...)** %18, i32 (...)*** %9, align 8, !tbaa !127
  %19 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 3) to i32 (...)***), align 8
  %vbase.offset.ptr3.i.i.i.i = getelementptr i32 (...)*, i32 (...)** %18, i64 -3
  %20 = bitcast i32 (...)** %vbase.offset.ptr3.i.i.i.i to i64*
  %vbase.offset.i.i.i.i = load i64, i64* %20, align 8
  %add.ptr.i.i.i.i = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i.i.i
  %21 = bitcast i8* %add.ptr.i.i.i.i to i32 (...)***
  store i32 (...)** %19, i32 (...)*** %21, align 8, !tbaa !127
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8, !tbaa !237
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull dereferenceable(216) %23) #37
  call void @llvm.lifetime.end.p0i8(i64 392, i8* nonnull %0) #37
  ret void

lpad:                                             ; preds = %invoke.cont7, %invoke.cont5, %invoke.cont3, %invoke.cont1, %if.else.i, %if.then.i, %entry
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = load i32 (...)**, i32 (...)*** bitcast ([10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE to i32 (...)***), align 8
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** %25, i32 (...)*** %26, align 8, !tbaa !127
  %27 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 8) to i32 (...)***), align 8
  %vbase.offset.ptr4.i.i26 = getelementptr i32 (...)*, i32 (...)** %25, i64 -3
  %28 = bitcast i32 (...)** %vbase.offset.ptr4.i.i26 to i64*
  %vbase.offset.i.i27 = load i64, i64* %28, align 8
  %add.ptr.i.i28 = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i27
  %29 = bitcast i8* %add.ptr.i.i28 to i32 (...)***
  store i32 (...)** %27, i32 (...)*** %29, align 8, !tbaa !127
  %30 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 9) to i32 (...)***), align 8
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** %30, i32 (...)*** %31, align 8, !tbaa !127
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !tbaa !127
  %_M_p.i.i.i.i.i.i.i29 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 0, i32 0
  %33 = load i8*, i8** %_M_p.i.i.i.i.i.i.i29, align 8, !tbaa !17
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 2
  %arraydecay.i.i.i.i.i.i.i30 = bitcast %union.anon* %34 to i8*
  %cmp.i.i.i.i.i.i31 = icmp eq i8* %33, %arraydecay.i.i.i.i.i.i.i30
  br i1 %cmp.i.i.i.i.i.i31, label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit37, label %if.then.i.i.i.i.i32

if.then.i.i.i.i.i32:                              ; preds = %lpad
  call void @_ZdlPv(i8* %33) #37
  br label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit37

_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit37: ; preds = %if.then.i.i.i.i.i32, %lpad
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !tbaa !127
  %_M_buf_locale.i.i.i.i33 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull dereferenceable(8) %_M_buf_locale.i.i.i.i33) #37
  %35 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 2) to i32 (...)***), align 8
  store i32 (...)** %35, i32 (...)*** %26, align 8, !tbaa !127
  %36 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 3) to i32 (...)***), align 8
  %vbase.offset.ptr3.i.i.i.i34 = getelementptr i32 (...)*, i32 (...)** %35, i64 -3
  %37 = bitcast i32 (...)** %vbase.offset.ptr3.i.i.i.i34 to i64*
  %vbase.offset.i.i.i.i35 = load i64, i64* %37, align 8
  %add.ptr.i.i.i.i36 = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i.i.i35
  %38 = bitcast i8* %add.ptr.i.i.i.i36 to i32 (...)***
  store i32 (...)** %36, i32 (...)*** %38, align 8, !tbaa !127
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %39, align 8, !tbaa !237
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull dereferenceable(216) %40) #37
  call void @llvm.lifetime.end.p0i8(i64 392, i8* nonnull %0) #37
  resume { i8*, i32 } %24
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept17invalid_dimensionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_dimension"* nonnull dereferenceable(40) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #37
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #37
  store i64 27, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i15 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %lpad

call5.i.i.i9.i.noexc:                             ; preds = %entry
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i15, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(27) %call5.i.i.i9.i15, i8* nonnull align 1 dereferenceable(27) getelementptr inbounds ([28 x i8], [28 x i8]* @.str.105, i64 0, i64 0), i64 27, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %6 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %6, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #37
  %7 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %message_.i.i = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %9 = bitcast %"class.std::__cxx11::basic_string"* %message_.i.i to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1, i32 1
  store i64 0, i64* %_M_string_length.i.i.i.i.i, align 8, !tbaa !19
  %.cast.i.i.i = bitcast %union.anon* %8 to i8*
  store i8 0, i8* %.cast.i.i.i, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept15array_exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_.i.i, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont4 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %10 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !127
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %11, %.cast.i.i.i
  br i1 %cmp.i.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %11) #37
  br label %_ZN5adept9exceptionD2Ev.exit.i

_ZN5adept9exceptionD2Ev.exit.i:                   ; preds = %if.then.i.i.i.i, %lpad.i
  %12 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %12) #37
  %13 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i18 = icmp eq i8* %13, %3
  br i1 %cmp.i.i.i18, label %ehcleanup, label %if.then.i.i19

invoke.cont4:                                     ; preds = %call5.i.i.i9.i.noexc
  %14 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %14, %3
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %invoke.cont4
  call void @_ZdlPv(i8* %14) #37
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %if.then.i.i, %invoke.cont4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept17invalid_dimensionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_.i.i, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  ret void

lpad:                                             ; preds = %entry
  %15 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

if.then.i.i19:                                    ; preds = %_ZN5adept9exceptionD2Ev.exit.i
  call void @_ZdlPv(i8* %13) #37
  br label %ehcleanup

ehcleanup:                                        ; preds = %if.then.i.i19, %lpad, %_ZN5adept9exceptionD2Ev.exit.i
  %.pn = phi { i8*, i32 } [ %15, %lpad ], [ %10, %_ZN5adept9exceptionD2Ev.exit.i ], [ %10, %if.then.i.i19 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #37
  br label %eh.resume

lpad7:                                            ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %16 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !127
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i.i = icmp eq i8* %17, %.cast.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lpad7
  call void @_ZdlPv(i8* %17) #37
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %if.then.i.i.i, %lpad7
  %18 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %18) #37
  br label %eh.resume

eh.resume:                                        ; preds = %_ZN5adept9exceptionD2Ev.exit, %ehcleanup
  %.pn12 = phi { i8*, i32 } [ %16, %_ZN5adept9exceptionD2Ev.exit ], [ %.pn, %ehcleanup ]
  resume { i8*, i32 } %.pn12
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept17invalid_dimensionD0Ev(%"class.adept::invalid_dimension"* nonnull dereferenceable(40) %this) unnamed_addr #31 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !127
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #37
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %if.then.i.i.i, %entry
  %3 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #37
  %4 = bitcast %"class.adept::invalid_dimension"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, double* nonnull align 8 dereferenceable(8) %rhs, i8* %dummy) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  %0 = load double, double* %rhs, align 8, !tbaa !61
  store double %0, double* %val_, align 8, !tbaa !244
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 9
  %2 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %inc.i = add nsw i32 %2, 1
  store i32 %inc.i, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !136
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %4, %3
  %5 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 6
  %6 = load i32, i32* %i_gradient_.i, align 8, !tbaa !165
  %inc2.i = add nsw i32 %6, 1
  store i32 %inc2.i, i32* %i_gradient_.i, align 8, !tbaa !165
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 8
  %7 = load i32, i32* %max_gradient_.i, align 8, !tbaa !166
  %cmp.not.i = icmp slt i32 %6, %7
  br i1 %cmp.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  store i32 %inc2.i, i32* %max_gradient_.i, align 8, !tbaa !166
  br label %_ZN5adept5Stack17register_gradientEv.exit

if.else.i:                                        ; preds = %entry
  %8 = bitcast %"struct.std::__detail::_List_node_base"* %4 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %4, i64 1
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i to i32*
  %9 = load i32, i32* %start.i, align 4, !tbaa !157
  %inc11.i = add nsw i32 %9, 1
  store i32 %inc11.i, i32* %start.i, align 4, !tbaa !157
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %8, i64 0, i32 1, i32 0, i64 4
  %10 = bitcast i8* %end.i to i32*
  %11 = load i32, i32* %10, align 4, !tbaa !155
  %cmp13.not.i = icmp slt i32 %9, %11
  br i1 %cmp13.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.else.i
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 5, i32 0
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !158
  %cmp.i35.i = icmp eq %"struct.std::__detail::_List_node_base"* %12, %4
  br i1 %cmp.i35.i, label %if.then18.i, label %if.end24.i

if.then18.i:                                      ; preds = %if.then14.i
  store %"struct.std::__detail::_List_node_base"* %3, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !163
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then18.i, %if.then14.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !159
  %sub.i.i.i.i = add i64 %13, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %4) #37
  %14 = bitcast %"struct.std::__detail::_List_node_base"* %4 to i8*
  tail call void @_ZdlPv(i8* nonnull %14) #37
  %.pre = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  br label %_ZN5adept5Stack17register_gradientEv.exit

_ZN5adept5Stack17register_gradientEv.exit:        ; preds = %if.end24.i, %if.else.i, %if.then4.i, %if.then.i
  %15 = phi %"class.adept::internal::StackStorageOrig"* [ %.pre, %if.end24.i ], [ %5, %if.else.i ], [ %5, %if.then4.i ], [ %5, %if.then.i ]
  %return_val.0.i = phi i32 [ %9, %if.end24.i ], [ %9, %if.else.i ], [ %6, %if.then4.i ], [ %6, %if.then.i ]
  store i32 %return_val.0.i, i32* %gradient_index_, align 8, !tbaa !246
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 3
  %16 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 4
  %17 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i3 = icmp slt i32 %16, %17
  br i1 %cmp.not.i3, label %entry.if.end_crit_edge.i, label %if.then.i4

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i4:                                       ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  %mul.i.i = shl nsw i32 %17, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %18 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 -1, i64 %20
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %21) #44
  %22 = bitcast %"class.adept::internal::StackStorageOrig"* %15 to i8**
  %23 = load i8*, i8** %22, align 8, !tbaa !141
  %conv5.i.i = sext i32 %16 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %23, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %23, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i4
  tail call void @_ZdaPv(i8* nonnull %23) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i4
  %.pre7.i = phi i32 [ %16, %if.then.i4 ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %22, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %24 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  %.pre6 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %25 = phi i32 [ %return_val.0.i, %entry.if.end_crit_edge.i ], [ %.pre6, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %26 = phi i32 [ %16, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %27 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %24, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %idxprom.i = sext i32 %26 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %27, i64 %idxprom.i, i32 0
  store i32 %25, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 5
  %28 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i5 = add nsw i32 %26, 1
  store i32 %inc.i5, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %27, i64 %idxprom.i, i32 1
  store i32 %28, i32* %end_plus_one.i, align 4, !tbaa !149
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9adeptTest12lstm_predictIN5adept6ActiveIdEEEEviiPT_S5_S5_S5_S5_(i32 %l, i32 %b, %"class.adept::Active"* %w, %"class.adept::Active"* %w2, %"class.adept::Active"* %s, %"class.adept::Active"* %x, %"class.adept::Active"* %x2) local_unnamed_addr #0 comdat {
entry:
  %ref.tmp = alloca %"struct.adept::internal::BinaryOperation.46", align 8
  %ref.tmp30 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %cmp93 = icmp sgt i32 %b, 0
  br i1 %cmp93, label %for.body.lr.ph, label %for.cond6.preheader

for.body.lr.ph:                                   ; preds = %entry
  %0 = bitcast %"struct.adept::internal::BinaryOperation.46"* %ref.tmp to i8*
  %1 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.46", %"struct.adept::internal::BinaryOperation.46"* %ref.tmp, i64 0, i32 0
  %2 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.46", %"struct.adept::internal::BinaryOperation.46"* %ref.tmp, i64 0, i32 1
  %3 = bitcast %"struct.adept::internal::BinaryOperation.46"* %ref.tmp to %"struct.adept::Expression.47"*
  %wide.trip.count100 = zext i32 %b to i64
  br label %for.body

for.cond6.preheader:                              ; preds = %for.body, %entry
  %mul = shl nsw i32 %l, 1
  %mul7 = mul nsw i32 %mul, %b
  %cmp8.not.not90 = icmp sgt i32 %mul7, 0
  br i1 %cmp8.not.not90, label %for.body9.lr.ph, label %for.cond27.preheader

for.body9.lr.ph:                                  ; preds = %for.cond6.preheader
  %4 = shl i32 %b, 1
  %5 = sext i32 %4 to i64
  %6 = sext i32 %b to i64
  %7 = zext i32 %mul7 to i64
  br label %for.body9

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv98 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next99, %for.body ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #37
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %x, i64 %indvars.iv98
  %arrayidx2 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %w2, i64 %indvars.iv98
  store %"class.adept::Active"* %arrayidx, %"class.adept::Active"** %1, align 8
  store %"class.adept::Active"* %arrayidx2, %"class.adept::Active"** %2, align 8
  %arrayidx4 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %x2, i64 %indvars.iv98
  %call5 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx4, %"struct.adept::Expression.47"* nonnull align 1 dereferenceable(1) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #37
  %indvars.iv.next99 = add nuw nsw i64 %indvars.iv98, 1
  %exitcond101.not = icmp eq i64 %indvars.iv.next99, %wide.trip.count100
  br i1 %exitcond101.not, label %for.cond6.preheader, label %for.body, !llvm.loop !280

for.cond27.preheader:                             ; preds = %for.body9, %for.cond6.preheader
  %xp.0.lcssa = phi %"class.adept::Active"* [ %x2, %for.cond6.preheader ], [ %arrayidx17, %for.body9 ]
  br i1 %cmp93, label %for.body29.lr.ph, label %for.end47

for.body29.lr.ph:                                 ; preds = %for.cond27.preheader
  %8 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp30 to i8*
  %mul38 = shl nuw nsw i32 %b, 1
  %ref.tmp31.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp30, i64 0, i32 0, i32 0
  %ref.tmp31.sroa.4.0..sroa_idx87 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp30, i64 0, i32 0, i32 1
  %right.i.i = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp30, i64 0, i32 1
  %9 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp30 to %"struct.adept::Expression.52"*
  %wide.trip.count = zext i32 %b to i64
  br label %for.body29

for.body9:                                        ; preds = %for.body9, %for.body9.lr.ph
  %indvars.iv95 = phi i64 [ 0, %for.body9.lr.ph ], [ %indvars.iv.next96, %for.body9 ]
  %xp.092 = phi %"class.adept::Active"* [ %x2, %for.body9.lr.ph ], [ %arrayidx17, %for.body9 ]
  %10 = trunc i64 %indvars.iv95 to i32
  %mul10 = shl nsw i32 %10, 2
  %idxprom11 = sext i32 %mul10 to i64
  %arrayidx12 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %w, i64 %idxprom11
  %11 = add nsw i64 %indvars.iv95, %6
  %12 = trunc i64 %11 to i32
  %mul13 = shl nsw i32 %12, 2
  %idxprom14 = sext i32 %mul13 to i64
  %arrayidx15 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %w, i64 %idxprom14
  %arrayidx17 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %s, i64 %indvars.iv95
  %arrayidx20 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %s, i64 %11
  call void @_ZN9adeptTest10lstm_modelIN5adept6ActiveIdEEEEviPT_S5_S5_S5_S5_(i32 %b, %"class.adept::Active"* %arrayidx12, %"class.adept::Active"* %arrayidx15, %"class.adept::Active"* %arrayidx17, %"class.adept::Active"* %arrayidx20, %"class.adept::Active"* %xp.092)
  %indvars.iv.next96 = add i64 %indvars.iv95, %5
  %cmp8.not.not = icmp slt i64 %indvars.iv.next96, %7
  br i1 %cmp8.not.not, label %for.body9, label %for.cond27.preheader, !llvm.loop !281

for.body29:                                       ; preds = %for.body29, %for.body29.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body29.lr.ph ], [ %indvars.iv.next, %for.body29 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #37
  %arrayidx33 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %xp.0.lcssa, i64 %indvars.iv
  %13 = trunc i64 %indvars.iv to i32
  %add34 = add nsw i32 %13, %b
  %idxprom35 = sext i32 %add34 to i64
  %arrayidx36 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %w2, i64 %idxprom35
  %add39 = add nsw i32 %mul38, %13
  %idxprom40 = sext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %w2, i64 %idxprom40
  store %"class.adept::Active"* %arrayidx33, %"class.adept::Active"** %ref.tmp31.sroa.0.0..sroa_idx, align 8
  store %"class.adept::Active"* %arrayidx36, %"class.adept::Active"** %ref.tmp31.sroa.4.0..sroa_idx87, align 8
  store %"class.adept::Active"* %arrayidx41, %"class.adept::Active"** %right.i.i, align 8, !tbaa !110, !alias.scope !282
  %arrayidx43 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %x2, i64 %indvars.iv
  %call44 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx43, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end47, label %for.body29, !llvm.loop !285

for.end47:                                        ; preds = %for.body29, %for.cond27.preheader
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9adeptTest9logsumexpIN5adept6ActiveIdEEEET_PKS4_i(%"class.adept::Active"* noalias sret(%"class.adept::Active") align 8 %agg.result, %"class.adept::Active"* %vect, i32 %sz) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i30 = alloca %"struct.adept::internal::BinaryOperation.76", align 8
  %ref.tmp.i = alloca %"struct.adept::internal::BinaryOperation.74", align 8
  %sum = alloca %"class.adept::Active", align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp4 = alloca %"class.adept::Active", align 8
  %ref.tmp5 = alloca i32, align 4
  %ref.tmp12 = alloca %"struct.adept::internal::UnaryOperation.72", align 8
  %0 = bitcast %"class.adept::Active"* %sum to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #37
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #37
  store double 0.000000e+00, double* %ref.tmp, align 8, !tbaa !61
  call void @_ZN5adept6ActiveIdEC2IdEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %sum, double* nonnull align 8 dereferenceable(8) %ref.tmp, i8* null)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #37
  %cmp34 = icmp sgt i32 %sz, 0
  br i1 %cmp34, label %invoke.cont.lr.ph, label %for.cond.cleanup

invoke.cont.lr.ph:                                ; preds = %entry
  %2 = bitcast %"struct.adept::internal::BinaryOperation.74"* %ref.tmp.i to i8*
  %3 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %ref.tmp.i, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %ref.tmp.i, i64 0, i32 1, i32 0
  %5 = bitcast %"struct.adept::internal::BinaryOperation.74"* %ref.tmp.i to %"struct.adept::Expression.75"*
  %wide.trip.count = zext i32 %sz to i64
  br label %invoke.cont

for.cond.cleanup:                                 ; preds = %invoke.cont2, %entry
  %6 = bitcast %"class.adept::Active"* %ref.tmp4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #37
  %7 = bitcast i32* %ref.tmp5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #37
  store i32 2, i32* %ref.tmp5, align 4, !tbaa !47
  invoke void @_ZN5adept6ActiveIdEC2IiEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp4, i32* nonnull align 4 dereferenceable(4) %ref.tmp5, i8* null)
          to label %invoke.cont7 unwind label %lpad6

invoke.cont:                                      ; preds = %invoke.cont2, %invoke.cont.lr.ph
  %indvars.iv = phi i64 [ 0, %invoke.cont.lr.ph ], [ %indvars.iv.next, %invoke.cont2 ]
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %vect, i64 %indvars.iv
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #37
  store %"class.adept::Active"* %sum, %"class.adept::Active"** %3, align 8
  store %"class.adept::Active"* %arrayidx, %"class.adept::Active"** %4, align 8
  %call2.i29 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSB_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SB_EE(%"class.adept::Active"* nonnull dereferenceable(12) %sum, %"struct.adept::Expression.75"* nonnull align 1 dereferenceable(1) %5)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %invoke.cont
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %invoke.cont, !llvm.loop !286

lpad:                                             ; preds = %invoke.cont
  %8 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup19

invoke.cont7:                                     ; preds = %for.cond.cleanup
  %9 = bitcast %"struct.adept::internal::BinaryOperation.76"* %ref.tmp.i30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #37
  %10 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.76", %"struct.adept::internal::BinaryOperation.76"* %ref.tmp.i30, i64 0, i32 0
  store %"class.adept::Active"* %sum, %"class.adept::Active"** %10, align 8
  %11 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.76", %"struct.adept::internal::BinaryOperation.76"* %ref.tmp.i30, i64 0, i32 1
  store %"class.adept::Active"* %ref.tmp4, %"class.adept::Active"** %11, align 8
  %12 = bitcast %"struct.adept::internal::BinaryOperation.76"* %ref.tmp.i30 to %"struct.adept::Expression.77"*
  %call2.i31 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %sum, %"struct.adept::Expression.77"* nonnull align 1 dereferenceable(1) %12)
          to label %invoke.cont14 unwind label %lpad8

invoke.cont14:                                    ; preds = %invoke.cont7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #37
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp4) #37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #37
  %13 = bitcast %"struct.adept::internal::UnaryOperation.72"* %ref.tmp12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #37
  %coerce.dive16 = getelementptr inbounds %"struct.adept::internal::UnaryOperation.72", %"struct.adept::internal::UnaryOperation.72"* %ref.tmp12, i64 0, i32 0
  store %"class.adept::Active"* %sum, %"class.adept::Active"** %coerce.dive16, align 8
  %14 = bitcast %"struct.adept::internal::UnaryOperation.72"* %ref.tmp12 to %"struct.adept::Expression.73"*
  invoke void @_ZN5adept6ActiveIdEC2IdNS_8internal14UnaryOperationIdNS3_3LogES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result, %"struct.adept::Expression.73"* nonnull align 1 dereferenceable(1) %14, i8* null)
          to label %invoke.cont17 unwind label %lpad13

invoke.cont17:                                    ; preds = %invoke.cont14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #37
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %sum) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #37
  ret void

lpad6:                                            ; preds = %for.cond.cleanup
  %15 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad8:                                            ; preds = %invoke.cont7
  %16 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp4) #37
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad8, %lpad6
  %.pn = phi { i8*, i32 } [ %16, %lpad8 ], [ %15, %lpad6 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #37
  br label %ehcleanup19

lpad13:                                           ; preds = %invoke.cont14
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #37
  br label %ehcleanup19

ehcleanup19:                                      ; preds = %lpad13, %ehcleanup, %lpad
  %.pn27 = phi { i8*, i32 } [ %8, %lpad ], [ %17, %lpad13 ], [ %.pn, %ehcleanup ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %sum) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #37
  resume { i8*, i32 } %.pn27
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %n_allocated_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i, align 4, !tbaa !178
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %add.i = add nsw i32 %2, 1
  %cmp.not.i = icmp sgt i32 %1, %add.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i, label %_ZN5adept8internal16StackStorageOrig11check_spaceEi.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 1)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig11check_spaceEi.exit

_ZN5adept8internal16StackStorageOrig11check_spaceEi.exit: ; preds = %if.then.i, %entry
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i ]
  %val_.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %rhs, i64 0, i32 0
  %7 = load double, double* %val_.i.i, align 8, !tbaa !244
  %gradient_index_.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %rhs, i64 0, i32 1
  %multiplier_.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %8 = load double*, double** %multiplier_.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %9 = load i32, i32* %n_operations_.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i = sext i32 %9 to i64
  %arrayidx.i.i.i = getelementptr inbounds double, double* %8, i64 %idxprom.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i, align 8, !tbaa !61
  %10 = load i32, i32* %gradient_index_.i.i, align 8, !tbaa !47
  %index_.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %11 = load i32*, i32** %index_.i.i.i, align 8, !tbaa !144
  %inc.i.i.i = add nsw i32 %9, 1
  store i32 %inc.i.i.i, i32* %n_operations_.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i = getelementptr inbounds i32, i32* %11, i64 %idxprom.i.i.i
  store i32 %10, i32* %arrayidx4.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %7, double* %val_, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %12 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %13 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i2 = icmp slt i32 %12, %13
  br i1 %cmp.not.i2, label %entry.if.end_crit_edge.i, label %if.then.i3

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig11check_spaceEi.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i3:                                       ; preds = %_ZN5adept8internal16StackStorageOrig11check_spaceEi.exit
  %mul.i.i = shl nsw i32 %13, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %17) #44
  %18 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %19 = load i8*, i8** %18, align 8, !tbaa !141
  %conv5.i.i = sext i32 %12 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %19, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %19, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i3
  tail call void @_ZdaPv(i8* nonnull %19) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i3
  %.pre7.i = phi i32 [ %12, %if.then.i3 ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %18, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %20 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %21 = phi i32 [ %12, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %22 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %20, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %23 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %21 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %22, i64 %idxprom.i, i32 0
  store i32 %23, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i4 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %24 = load i32, i32* %n_operations_.i4, align 8, !tbaa !177
  %inc.i = add nsw i32 %21, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %22, i64 %idxprom.i, i32 1
  store i32 %24, i32* %end_plus_one.i, align 4, !tbaa !149
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8SubtractES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.45"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !178
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !177
  %add.i.i = add nsw i32 %2, 2
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 2)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit: ; preds = %if.then.i.i, %entry
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.45"* %rhs to %"class.adept::Active"**
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !287
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 0
  %8 = load double, double* %val_.i.i.i.i, align 8, !tbaa !244
  %right.i.i.i = getelementptr inbounds %"struct.adept::Expression.45", %"struct.adept::Expression.45"* %rhs, i64 8
  %9 = bitcast %"struct.adept::Expression.45"* %right.i.i.i to %"class.adept::Active"**
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %9, align 8, !tbaa !289
  %val_.i9.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 0
  %11 = load double, double* %val_.i9.i.i.i, align 8, !tbaa !244
  %sub.i.i.i.i = fsub fast double %8, %11
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %12 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %13 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i = sext i32 %13 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !61
  %14 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %15 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i.i.i = add nsw i32 %13, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i.i.i
  store i32 %14, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %gradient_index_.i.i.i5.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 1
  %16 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i8.i.i = sext i32 %16 to i64
  %arrayidx.i.i.i.i9.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i8.i.i
  store double -1.000000e+00, double* %arrayidx.i.i.i.i9.i.i, align 8, !tbaa !61
  %17 = load i32, i32* %gradient_index_.i.i.i5.i.i, align 8, !tbaa !47
  %inc.i.i.i.i11.i.i = add nsw i32 %16, 1
  store i32 %inc.i.i.i.i11.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i12.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i8.i.i
  store i32 %17, i32* %arrayidx4.i.i.i.i12.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %sub.i.i.i.i, double* %val_, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %18 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %19 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i = icmp slt i32 %18, %19
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %mul.i.i = shl nsw i32 %19, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %20 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %23) #44
  %24 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %25 = load i8*, i8** %24, align 8, !tbaa !141
  %conv5.i.i = sext i32 %18 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %25, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %25, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %25) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre7.i = phi i32 [ %18, %if.then.i ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %24, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %26 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %27 = phi i32 [ %18, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %28 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %26, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %29 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %27 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %28, i64 %idxprom.i, i32 0
  store i32 %29, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %30 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i = add nsw i32 %27, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %28, i64 %idxprom.i, i32 1
  store i32 %30, i32* %end_plus_one.i, align 4, !tbaa !149
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IiEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, i32* nonnull align 4 dereferenceable(4) %rhs, i8* %dummy) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  %0 = load i32, i32* %rhs, align 4, !tbaa !47
  %conv = sitofp i32 %0 to double
  store double %conv, double* %val_, align 8, !tbaa !244
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 9
  %2 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %inc.i = add nsw i32 %2, 1
  store i32 %inc.i, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !136
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %4, %3
  %5 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 6
  %6 = load i32, i32* %i_gradient_.i, align 8, !tbaa !165
  %inc2.i = add nsw i32 %6, 1
  store i32 %inc2.i, i32* %i_gradient_.i, align 8, !tbaa !165
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 8
  %7 = load i32, i32* %max_gradient_.i, align 8, !tbaa !166
  %cmp.not.i = icmp slt i32 %6, %7
  br i1 %cmp.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  store i32 %inc2.i, i32* %max_gradient_.i, align 8, !tbaa !166
  br label %_ZN5adept5Stack17register_gradientEv.exit

if.else.i:                                        ; preds = %entry
  %8 = bitcast %"struct.std::__detail::_List_node_base"* %4 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %4, i64 1
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i to i32*
  %9 = load i32, i32* %start.i, align 4, !tbaa !157
  %inc11.i = add nsw i32 %9, 1
  store i32 %inc11.i, i32* %start.i, align 4, !tbaa !157
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %8, i64 0, i32 1, i32 0, i64 4
  %10 = bitcast i8* %end.i to i32*
  %11 = load i32, i32* %10, align 4, !tbaa !155
  %cmp13.not.i = icmp slt i32 %9, %11
  br i1 %cmp13.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.else.i
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 5, i32 0
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !158
  %cmp.i35.i = icmp eq %"struct.std::__detail::_List_node_base"* %12, %4
  br i1 %cmp.i35.i, label %if.then18.i, label %if.end24.i

if.then18.i:                                      ; preds = %if.then14.i
  store %"struct.std::__detail::_List_node_base"* %3, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !163
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then18.i, %if.then14.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !159
  %sub.i.i.i.i = add i64 %13, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %4) #37
  %14 = bitcast %"struct.std::__detail::_List_node_base"* %4 to i8*
  tail call void @_ZdlPv(i8* nonnull %14) #37
  %.pre = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  br label %_ZN5adept5Stack17register_gradientEv.exit

_ZN5adept5Stack17register_gradientEv.exit:        ; preds = %if.end24.i, %if.else.i, %if.then4.i, %if.then.i
  %15 = phi %"class.adept::internal::StackStorageOrig"* [ %.pre, %if.end24.i ], [ %5, %if.else.i ], [ %5, %if.then4.i ], [ %5, %if.then.i ]
  %return_val.0.i = phi i32 [ %9, %if.end24.i ], [ %9, %if.else.i ], [ %6, %if.then4.i ], [ %6, %if.then.i ]
  store i32 %return_val.0.i, i32* %gradient_index_, align 8, !tbaa !246
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 3
  %16 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 4
  %17 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i3 = icmp slt i32 %16, %17
  br i1 %cmp.not.i3, label %entry.if.end_crit_edge.i, label %if.then.i4

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i4:                                       ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  %mul.i.i = shl nsw i32 %17, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %18 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 -1, i64 %20
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %21) #44
  %22 = bitcast %"class.adept::internal::StackStorageOrig"* %15 to i8**
  %23 = load i8*, i8** %22, align 8, !tbaa !141
  %conv5.i.i = sext i32 %16 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %23, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %23, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i4
  tail call void @_ZdaPv(i8* nonnull %23) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i4
  %.pre7.i = phi i32 [ %16, %if.then.i4 ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %22, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %24 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  %.pre6 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %25 = phi i32 [ %return_val.0.i, %entry.if.end_crit_edge.i ], [ %.pre6, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %26 = phi i32 [ %16, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %27 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %24, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %idxprom.i = sext i32 %26 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %27, i64 %idxprom.i, i32 0
  store i32 %25, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 5
  %28 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i5 = add nsw i32 %26, 1
  store i32 %inc.i5, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %27, i64 %idxprom.i, i32 1
  store i32 %28, i32* %end_plus_one.i, align 4, !tbaa !149
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS3_14UnaryOperationIdNS3_10UnaryMinusES1_EENS3_6DivideES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSB_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SB_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.49"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !178
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !177
  %add.i.i = add nsw i32 %2, 2
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 2)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit: ; preds = %if.then.i.i, %entry
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %arg.i.i.i.i = bitcast %"struct.adept::Expression.49"* %rhs to %"class.adept::Active"**
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %arg.i.i.i.i, align 8, !tbaa !290
  %val_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 0
  %8 = load double, double* %val_.i.i.i.i.i, align 8, !tbaa !244
  %fneg.i.i.i.i.i = fneg fast double %8
  %right.i.i.i = getelementptr inbounds %"struct.adept::Expression.49", %"struct.adept::Expression.49"* %rhs, i64 8
  %9 = bitcast %"struct.adept::Expression.49"* %right.i.i.i to %"class.adept::Active"**
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %9, align 8, !tbaa !292
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 0
  %11 = load double, double* %val_.i.i.i.i, align 8, !tbaa !244
  %div.i.i.i.i = fdiv fast double 1.000000e+00, %11
  %mul.i.i.i6.i = fmul fast double %div.i.i.i.i, %fneg.i.i.i.i.i
  %mul.i.i.i.i.i = fneg fast double %div.i.i.i.i
  %gradient_index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %12 = load double*, double** %multiplier_.i.i.i.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %13 = load i32, i32* %n_operations_.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i.i = sext i32 %13 to i64
  %arrayidx.i.i.i.i.i.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i.i.i.i
  store double %mul.i.i.i.i.i, double* %arrayidx.i.i.i.i.i.i.i, align 8, !tbaa !61
  %14 = load i32, i32* %gradient_index_.i.i.i.i.i.i, align 4, !tbaa !47
  %index_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %15 = load i32*, i32** %index_.i.i.i.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i.i.i.i = add nsw i32 %13, 1
  store i32 %inc.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i.i.i.i
  store i32 %14, i32* %arrayidx4.i.i.i.i.i.i.i, align 4, !tbaa !47
  %mul.i.i.i.i = fmul fast double %mul.i.i.i6.i, %mul.i.i.i.i.i
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 1
  %16 = load i32, i32* %n_operations_.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i = sext i32 %16 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i.i.i
  store double %mul.i.i.i.i, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !61
  %17 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i = add nsw i32 %16, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i.i.i
  store i32 %17, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %mul.i.i.i6.i, double* %val_, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %18 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %19 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i = icmp slt i32 %18, %19
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %mul.i.i = shl nsw i32 %19, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %20 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %23) #44
  %24 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %25 = load i8*, i8** %24, align 8, !tbaa !141
  %conv5.i.i = sext i32 %18 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %25, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %25, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %25) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre7.i = phi i32 [ %18, %if.then.i ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %24, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %26 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %27 = phi i32 [ %18, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %28 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %26, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %29 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %27 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %28, i64 %idxprom.i, i32 0
  store i32 %29, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %30 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i = add nsw i32 %27, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %28, i64 %idxprom.i, i32 1
  store i32 %30, i32* %end_plus_one.i, align 4, !tbaa !149
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.47"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !178
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !177
  %add.i.i = add nsw i32 %2, 2
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 2)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit: ; preds = %if.then.i.i, %entry
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.47"* %rhs to %"class.adept::Active"**
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !294
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 0
  %8 = load double, double* %val_.i.i.i.i, align 8, !tbaa !244
  %right.i.i5.i = getelementptr inbounds %"struct.adept::Expression.47", %"struct.adept::Expression.47"* %rhs, i64 8
  %9 = bitcast %"struct.adept::Expression.47"* %right.i.i5.i to %"class.adept::Active"**
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %9, align 8, !tbaa !296
  %val_.i9.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 0
  %11 = load double, double* %val_.i9.i.i.i, align 8, !tbaa !244
  %mul.i.i.i.i = fmul fast double %11, %8
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %12 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %13 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i = sext i32 %13 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i.i.i
  store double %11, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !61
  %14 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %15 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i.i.i = add nsw i32 %13, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i.i.i
  store i32 %14, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %16 = load double, double* %val_.i.i.i.i, align 8, !tbaa !244
  %gradient_index_.i.i.i6.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 1
  %17 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i9.i.i = sext i32 %17 to i64
  %arrayidx.i.i.i.i10.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i9.i.i
  store double %16, double* %arrayidx.i.i.i.i10.i.i, align 8, !tbaa !61
  %18 = load i32, i32* %gradient_index_.i.i.i6.i.i, align 8, !tbaa !47
  %inc.i.i.i.i12.i.i = add nsw i32 %17, 1
  store i32 %inc.i.i.i.i12.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i13.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i9.i.i
  store i32 %18, i32* %arrayidx4.i.i.i.i13.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %mul.i.i.i.i, double* %val_, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %19 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %20 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i = icmp slt i32 %19, %20
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %mul.i.i = shl nsw i32 %20, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %21 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %24) #44
  %25 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %26 = load i8*, i8** %25, align 8, !tbaa !141
  %conv5.i.i = sext i32 %19 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %26, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %26, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %26) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre7.i = phi i32 [ %19, %if.then.i ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %25, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %27 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %28 = phi i32 [ %19, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %29 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %27, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %30 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %28 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %29, i64 %idxprom.i, i32 0
  store i32 %30, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %31 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i = add nsw i32 %28, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %29, i64 %idxprom.i, i32 1
  store i32 %31, i32* %end_plus_one.i, align 4, !tbaa !149
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9adeptTest10lstm_modelIN5adept6ActiveIdEEEEviPT_S5_S5_S5_S5_(i32 %hsize, %"class.adept::Active"* %weight, %"class.adept::Active"* %bias, %"class.adept::Active"* %hidden, %"class.adept::Active"* %cell, %"class.adept::Active"* %input) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.adept::Active", align 8
  %agg.tmp = alloca %"class.adept::Active", align 8
  %ref.tmp9 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %ref.tmp28 = alloca %"class.adept::Active", align 8
  %agg.tmp29 = alloca %"class.adept::Active", align 8
  %ref.tmp30 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %ref.tmp52 = alloca %"class.adept::Active", align 8
  %agg.tmp53 = alloca %"class.adept::Active", align 8
  %ref.tmp54 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %ref.tmp121 = alloca %"struct.adept::internal::BinaryOperation.58", align 8
  %mul = shl nsw i32 %hsize, 2
  %conv = sext i32 %mul to i64
  %0 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 16)
  %1 = extractvalue { i64, i1 } %0, 1
  %2 = extractvalue { i64, i1 } %0, 0
  %3 = or i64 %2, 8
  %4 = select i1 %1, i64 -1, i64 %3
  %call = tail call noalias nonnull i8* @_Znam(i64 %4) #44
  %5 = bitcast i8* %call to i64*
  store i64 %conv, i64* %5, align 16
  %6 = getelementptr inbounds i8, i8* %call, i64 8
  %7 = bitcast i8* %6 to %"class.adept::Active"*
  %isempty = icmp eq i32 %hsize, 0
  br i1 %isempty, label %arrayctor.cont, label %new.ctorloop

new.ctorloop:                                     ; preds = %entry
  %arrayctor.end = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 %conv
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %invoke.cont, %new.ctorloop
  %arrayctor.cur = phi %"class.adept::Active"* [ %7, %new.ctorloop ], [ %arrayctor.next, %invoke.cont ]
  %val_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i, align 8, !tbaa !244
  %8 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %8, i64 0, i32 9
  %9 = load i32, i32* %n_gradients_registered_.i.i, align 4, !tbaa !154
  %inc.i.i = add nsw i32 %9, 1
  store i32 %inc.i.i, i32* %n_gradients_registered_.i.i, align 4, !tbaa !154
  %gap_list_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %8, i64 0, i32 4
  %10 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i, align 8, !tbaa !136
  %cmp.i.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %11, %10
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %arrayctor.loop
  %i_gradient_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %8, i64 0, i32 6
  %12 = load i32, i32* %i_gradient_.i.i, align 8, !tbaa !165
  %inc2.i.i = add nsw i32 %12, 1
  store i32 %inc2.i.i, i32* %i_gradient_.i.i, align 8, !tbaa !165
  %max_gradient_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %8, i64 0, i32 8
  %13 = load i32, i32* %max_gradient_.i.i, align 8, !tbaa !166
  %cmp.not.i.i = icmp slt i32 %12, %13
  br i1 %cmp.not.i.i, label %invoke.cont, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.then.i.i
  store i32 %inc2.i.i, i32* %max_gradient_.i.i, align 8, !tbaa !166
  br label %invoke.cont

if.else.i.i:                                      ; preds = %arrayctor.loop
  %14 = bitcast %"struct.std::__detail::_List_node_base"* %11 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %11, i64 1
  %start.i.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i to i32*
  %15 = load i32, i32* %start.i.i, align 4, !tbaa !157
  %inc11.i.i = add nsw i32 %15, 1
  store i32 %inc11.i.i, i32* %start.i.i, align 4, !tbaa !157
  %end.i.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %14, i64 0, i32 1, i32 0, i64 4
  %16 = bitcast i8* %end.i.i to i32*
  %17 = load i32, i32* %16, align 4, !tbaa !155
  %cmp13.not.i.i = icmp slt i32 %15, %17
  br i1 %cmp13.not.i.i, label %invoke.cont, label %if.then14.i.i

if.then14.i.i:                                    ; preds = %if.else.i.i
  %_M_node.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %8, i64 0, i32 5, i32 0
  %18 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i, align 8, !tbaa !158
  %cmp.i35.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %18, %11
  br i1 %cmp.i35.i.i, label %if.then18.i.i, label %if.end24.i.i

if.then18.i.i:                                    ; preds = %if.then14.i.i
  store %"struct.std::__detail::_List_node_base"* %10, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i, align 8, !tbaa.struct !163
  br label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.then18.i.i, %if.then14.i.i
  %_M_size.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %8, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !159
  %sub.i.i.i.i.i = add i64 %19, -1
  store i64 %sub.i.i.i.i.i, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %11) #37
  %20 = bitcast %"struct.std::__detail::_List_node_base"* %11 to i8*
  tail call void @_ZdlPv(i8* nonnull %20) #37
  br label %invoke.cont

invoke.cont:                                      ; preds = %if.end24.i.i, %if.else.i.i, %if.then4.i.i, %if.then.i.i
  %return_val.0.i.i = phi i32 [ %15, %if.end24.i.i ], [ %15, %if.else.i.i ], [ %12, %if.then4.i.i ], [ %12, %if.then.i.i ]
  %gradient_index_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 0, i32 1
  store i32 %return_val.0.i.i, i32* %gradient_index_.i, align 8, !tbaa !246
  %arrayctor.next = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %"class.adept::Active"* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %invoke.cont, %entry
  %idxprom = sext i32 %hsize to i64
  %arrayidx2 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 %idxprom
  %mul3 = shl nsw i32 %hsize, 1
  %idxprom4 = sext i32 %mul3 to i64
  %arrayidx5 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 %idxprom4
  %mul6 = mul nsw i32 %hsize, 3
  %idxprom7 = sext i32 %mul6 to i64
  %arrayidx8 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 %idxprom7
  %cmp343 = icmp sgt i32 %hsize, 0
  br i1 %cmp343, label %for.body.lr.ph, label %delete.notnull

for.body.lr.ph:                                   ; preds = %arrayctor.cont
  %21 = bitcast %"class.adept::Active"* %ref.tmp to i8*
  %22 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9 to i8*
  %ref.tmp10.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9, i64 0, i32 0, i32 0
  %ref.tmp10.sroa.5.0..sroa_idx315 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9, i64 0, i32 0, i32 1
  %right.i.i = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9, i64 0, i32 1
  %23 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9 to %"struct.adept::Expression.52"*
  %24 = bitcast %"class.adept::Active"* %ref.tmp28 to i8*
  %25 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp30 to i8*
  %ref.tmp31.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp30, i64 0, i32 0, i32 0
  %ref.tmp31.sroa.5.0..sroa_idx310 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp30, i64 0, i32 0, i32 1
  %right.i.i230 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp30, i64 0, i32 1
  %26 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp30 to %"struct.adept::Expression.52"*
  %27 = bitcast %"class.adept::Active"* %ref.tmp52 to i8*
  %28 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp54 to i8*
  %ref.tmp55.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp54, i64 0, i32 0, i32 0
  %ref.tmp55.sroa.5.0..sroa_idx305 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp54, i64 0, i32 0, i32 1
  %right.i.i238 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp54, i64 0, i32 1
  %29 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp54 to %"struct.adept::Expression.52"*
  %wide.trip.count351 = zext i32 %hsize to i64
  br label %for.body

for.cond96.preheader:                             ; preds = %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit277
  br i1 %cmp343, label %for.body98.preheader, label %delete.notnull

for.body98.preheader:                             ; preds = %for.cond96.preheader
  %wide.trip.count347 = zext i32 %hsize to i64
  br label %for.body98

for.body:                                         ; preds = %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit277, %for.body.lr.ph
  %indvars.iv349 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next350, %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit277 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #37
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #37
  %arrayidx12 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %input, i64 %indvars.iv349
  %arrayidx14 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %weight, i64 %indvars.iv349
  %arrayidx17 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %bias, i64 %indvars.iv349
  store %"class.adept::Active"* %arrayidx12, %"class.adept::Active"** %ref.tmp10.sroa.0.0..sroa_idx, align 8
  store %"class.adept::Active"* %arrayidx14, %"class.adept::Active"** %ref.tmp10.sroa.5.0..sroa_idx315, align 8
  store %"class.adept::Active"* %arrayidx17, %"class.adept::Active"** %right.i.i, align 8, !tbaa !110, !alias.scope !297
  call void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSB_4rankLi0EsrSB_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %agg.tmp, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %23, i8* null)
  invoke void @_ZN9adeptTest7sigmoidIN5adept6ActiveIdEEEET_S4_(%"class.adept::Active"* nonnull sret(%"class.adept::Active") align 8 %ref.tmp, %"class.adept::Active"* nonnull %agg.tmp)
          to label %invoke.cont19 unwind label %lpad18

invoke.cont19:                                    ; preds = %for.body
  %arrayidx21 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 %indvars.iv349
  %call24 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx21, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %ref.tmp)
          to label %invoke.cont23 unwind label %lpad22

invoke.cont23:                                    ; preds = %invoke.cont19
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp) #37
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %agg.tmp) #37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #37
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #37
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #37
  %arrayidx33 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %hidden, i64 %indvars.iv349
  %30 = trunc i64 %indvars.iv349 to i32
  %add = add nsw i32 %30, %hsize
  %idxprom34 = sext i32 %add to i64
  %arrayidx35 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %weight, i64 %idxprom34
  %arrayidx39 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %bias, i64 %idxprom34
  store %"class.adept::Active"* %arrayidx33, %"class.adept::Active"** %ref.tmp31.sroa.0.0..sroa_idx, align 8
  store %"class.adept::Active"* %arrayidx35, %"class.adept::Active"** %ref.tmp31.sroa.5.0..sroa_idx310, align 8
  store %"class.adept::Active"* %arrayidx39, %"class.adept::Active"** %right.i.i230, align 8, !tbaa !110, !alias.scope !300
  call void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSB_4rankLi0EsrSB_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %agg.tmp29, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %26, i8* null)
  invoke void @_ZN9adeptTest7sigmoidIN5adept6ActiveIdEEEET_S4_(%"class.adept::Active"* nonnull sret(%"class.adept::Active") align 8 %ref.tmp28, %"class.adept::Active"* nonnull %agg.tmp29)
          to label %invoke.cont41 unwind label %lpad40

invoke.cont41:                                    ; preds = %invoke.cont23
  %arrayidx43 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx2, i64 %indvars.iv349
  %call46 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx43, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %ref.tmp28)
          to label %invoke.cont45 unwind label %lpad44

invoke.cont45:                                    ; preds = %invoke.cont41
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp28) #37
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %agg.tmp29) #37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #37
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #37
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #37
  %add59 = add nsw i32 %mul3, %30
  %idxprom60 = sext i32 %add59 to i64
  %arrayidx61 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %weight, i64 %idxprom60
  %arrayidx66 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %bias, i64 %idxprom60
  store %"class.adept::Active"* %arrayidx12, %"class.adept::Active"** %ref.tmp55.sroa.0.0..sroa_idx, align 8
  store %"class.adept::Active"* %arrayidx61, %"class.adept::Active"** %ref.tmp55.sroa.5.0..sroa_idx305, align 8
  store %"class.adept::Active"* %arrayidx66, %"class.adept::Active"** %right.i.i238, align 8, !tbaa !110, !alias.scope !303
  call void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSB_4rankLi0EsrSB_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %agg.tmp53, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %29, i8* null)
  invoke void @_ZN9adeptTest7sigmoidIN5adept6ActiveIdEEEET_S4_(%"class.adept::Active"* nonnull sret(%"class.adept::Active") align 8 %ref.tmp52, %"class.adept::Active"* nonnull %agg.tmp53)
          to label %invoke.cont68 unwind label %lpad67

invoke.cont68:                                    ; preds = %invoke.cont45
  %arrayidx70 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx5, i64 %indvars.iv349
  %call73 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx70, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %ref.tmp52)
          to label %invoke.cont72 unwind label %lpad71

invoke.cont72:                                    ; preds = %invoke.cont68
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp52) #37
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %agg.tmp53) #37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #37
  %add85 = add nsw i32 %mul6, %30
  %idxprom86 = sext i32 %add85 to i64
  %arrayidx94 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx8, i64 %indvars.iv349
  %31 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %n_allocated_operations_.i.i.i247 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %31, i64 0, i32 6
  %32 = load i32, i32* %n_allocated_operations_.i.i.i247, align 4, !tbaa !178
  %n_operations_.i.i.i248 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %31, i64 0, i32 5
  %33 = load i32, i32* %n_operations_.i.i.i248, align 8, !tbaa !177
  %add.i.i.i249 = add nsw i32 %33, 3
  %cmp.not.i.i.i250 = icmp sgt i32 %32, %add.i.i.i249
  %34 = bitcast %"class.adept::internal::StackStorageOrig"* %31 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i.i250, label %_ZN5adept6ActiveIdEaSIdNS_8internal14UnaryOperationIdNS3_4TanhENS3_15BinaryOperationIdNS6_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE.exit, label %if.then.i.i.i252

if.then.i.i.i252:                                 ; preds = %invoke.cont72
  call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %31, i32 3)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %35 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept6ActiveIdEaSIdNS_8internal14UnaryOperationIdNS3_4TanhENS3_15BinaryOperationIdNS6_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE.exit

_ZN5adept6ActiveIdEaSIdNS_8internal14UnaryOperationIdNS3_4TanhENS3_15BinaryOperationIdNS6_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE.exit: ; preds = %if.then.i.i.i252, %invoke.cont72
  %36 = phi %"class.adept::internal::StackStorageOrig"* [ %31, %invoke.cont72 ], [ %35, %if.then.i.i.i252 ]
  %37 = phi %"class.adept::Stack"* [ %34, %invoke.cont72 ], [ %.pre, %if.then.i.i.i252 ]
  %val_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx33, i64 0, i32 0
  %38 = load double, double* %val_.i.i.i.i.i.i.i, align 8, !tbaa !244
  %val_.i9.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %weight, i64 %idxprom86, i32 0
  %39 = load double, double* %val_.i9.i.i.i.i.i.i, align 8, !tbaa !244
  %mul.i.i.i.i.i.i.i = fmul fast double %39, %38
  %val_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %bias, i64 %idxprom86, i32 0
  %40 = load double, double* %val_.i.i.i.i.i, align 8, !tbaa !244
  %add.i.i.i.i.i = fadd fast double %40, %mul.i.i.i.i.i.i.i
  %call.i.i.i = call fast double @tanh(double %add.i.i.i.i.i) #42
  %mul.i.i.i = fmul fast double %call.i.i.i, %call.i.i.i
  %sub.i.i.i = fsub fast double 1.000000e+00, %mul.i.i.i
  %mul.i.i.i.i.i.i.i.i = fmul fast double %sub.i.i.i, %39
  %gradient_index_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %hidden, i64 %indvars.iv349, i32 1
  %multiplier_.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %37, i64 0, i32 0, i32 1
  %41 = load double*, double** %multiplier_.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %37, i64 0, i32 0, i32 5
  %42 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i.i.i.i.i = sext i32 %42 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %41, i64 %idxprom.i.i.i.i.i.i.i.i.i.i
  store double %mul.i.i.i.i.i.i.i.i, double* %arrayidx.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !61
  %43 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %37, i64 0, i32 0, i32 2
  %44 = load i32*, i32** %index_.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i.i.i.i.i.i.i = add nsw i32 %42, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %44, i64 %idxprom.i.i.i.i.i.i.i.i.i.i
  store i32 %43, i32* %arrayidx4.i.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %45 = load double, double* %val_.i.i.i.i.i.i.i, align 8, !tbaa !244
  %mul.i.i7.i.i.i.i.i.i = fmul fast double %45, %sub.i.i.i
  %gradient_index_.i.i.i8.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %weight, i64 %idxprom86, i32 1
  %46 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i11.i.i.i.i.i.i = sext i32 %46 to i64
  %arrayidx.i.i.i.i12.i.i.i.i.i.i = getelementptr inbounds double, double* %41, i64 %idxprom.i.i.i.i11.i.i.i.i.i.i
  store double %mul.i.i7.i.i.i.i.i.i, double* %arrayidx.i.i.i.i12.i.i.i.i.i.i, align 8, !tbaa !61
  %47 = load i32, i32* %gradient_index_.i.i.i8.i.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i14.i.i.i.i.i.i = add nsw i32 %46, 1
  store i32 %inc.i.i.i.i14.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i15.i.i.i.i.i.i = getelementptr inbounds i32, i32* %44, i64 %idxprom.i.i.i.i11.i.i.i.i.i.i
  store i32 %47, i32* %arrayidx4.i.i.i.i15.i.i.i.i.i.i, align 4, !tbaa !47
  %gradient_index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %bias, i64 %idxprom86, i32 1
  %48 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i.i = sext i32 %48 to i64
  %arrayidx.i.i.i.i.i.i.i = getelementptr inbounds double, double* %41, i64 %idxprom.i.i.i.i.i.i.i
  store double %sub.i.i.i, double* %arrayidx.i.i.i.i.i.i.i, align 8, !tbaa !61
  %49 = load i32, i32* %gradient_index_.i.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i.i = add nsw i32 %48, 1
  store i32 %inc.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %44, i64 %idxprom.i.i.i.i.i.i.i
  store i32 %49, i32* %arrayidx4.i.i.i.i.i.i.i, align 4, !tbaa !47
  %val_.i253 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx94, i64 0, i32 0
  store double %call.i.i.i, double* %val_.i253, align 8, !tbaa !244
  %gradient_index_.i254 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx94, i64 0, i32 1
  %n_statements_.i255 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %36, i64 0, i32 3
  %50 = load i32, i32* %n_statements_.i255, align 8, !tbaa !146
  %n_allocated_statements_.i256 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %36, i64 0, i32 4
  %51 = load i32, i32* %n_allocated_statements_.i256, align 4, !tbaa !176
  %cmp.not.i257 = icmp slt i32 %50, %51
  br i1 %cmp.not.i257, label %entry.if.end_crit_edge.i260, label %if.then.i267

entry.if.end_crit_edge.i260:                      ; preds = %_ZN5adept6ActiveIdEaSIdNS_8internal14UnaryOperationIdNS3_4TanhENS3_15BinaryOperationIdNS6_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE.exit
  %statement_.phi.trans.insert.i258 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %36, i64 0, i32 0
  %.pre.i259 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i258, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit277

if.then.i267:                                     ; preds = %_ZN5adept6ActiveIdEaSIdNS_8internal14UnaryOperationIdNS3_4TanhENS3_15BinaryOperationIdNS6_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE.exit
  %mul.i.i261 = shl nsw i32 %51, 1
  %conv.i.i262 = sext i32 %mul.i.i261 to i64
  %52 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i262, i64 8)
  %53 = extractvalue { i64, i1 } %52, 1
  %54 = extractvalue { i64, i1 } %52, 0
  %55 = select i1 %53, i64 -1, i64 %54
  %call.i.i263 = call noalias nonnull i8* @_Znam(i64 %55) #44
  %56 = bitcast %"class.adept::internal::StackStorageOrig"* %36 to i8**
  %57 = load i8*, i8** %56, align 8, !tbaa !141
  %conv5.i.i264 = sext i32 %50 to i64
  %mul6.i.i265 = shl nsw i64 %conv5.i.i264, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i263, i8* align 4 %57, i64 %mul6.i.i265, i1 false)
  %isnull.i.i266 = icmp eq i8* %57, null
  br i1 %isnull.i.i266, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i271, label %delete.notnull.i.i269

delete.notnull.i.i269:                            ; preds = %if.then.i267
  call void @_ZdaPv(i8* nonnull %57) #43
  %.pre7.pre.i268 = load i32, i32* %n_statements_.i255, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i271

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i271: ; preds = %delete.notnull.i.i269, %if.then.i267
  %.pre7.i270 = phi i32 [ %50, %if.then.i267 ], [ %.pre7.pre.i268, %delete.notnull.i.i269 ]
  store i8* %call.i.i263, i8** %56, align 8, !tbaa !141
  store i32 %mul.i.i261, i32* %n_allocated_statements_.i256, align 4, !tbaa !176
  %58 = bitcast i8* %call.i.i263 to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit277

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit277: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i271, %entry.if.end_crit_edge.i260
  %59 = phi i32 [ %50, %entry.if.end_crit_edge.i260 ], [ %.pre7.i270, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i271 ]
  %60 = phi %"struct.adept::internal::Statement"* [ %.pre.i259, %entry.if.end_crit_edge.i260 ], [ %58, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i271 ]
  %61 = load i32, i32* %gradient_index_.i254, align 4, !tbaa !47
  %idxprom.i272 = sext i32 %59 to i64
  %index.i273 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %60, i64 %idxprom.i272, i32 0
  store i32 %61, i32* %index.i273, align 4, !tbaa !147
  %n_operations_.i274 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %36, i64 0, i32 5
  %62 = load i32, i32* %n_operations_.i274, align 8, !tbaa !177
  %inc.i275 = add nsw i32 %59, 1
  store i32 %inc.i275, i32* %n_statements_.i255, align 8, !tbaa !146
  %end_plus_one.i276 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %60, i64 %idxprom.i272, i32 1
  store i32 %62, i32* %end_plus_one.i276, align 4, !tbaa !149
  %indvars.iv.next350 = add nuw nsw i64 %indvars.iv349, 1
  %exitcond352.not = icmp eq i64 %indvars.iv.next350, %wide.trip.count351
  br i1 %exitcond352.not, label %for.cond96.preheader, label %for.body, !llvm.loop !306

lpad18:                                           ; preds = %for.body
  %63 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad22:                                           ; preds = %invoke.cont19
  %64 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp) #37
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad22, %lpad18
  %.pn = phi { i8*, i32 } [ %64, %lpad22 ], [ %63, %lpad18 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %agg.tmp) #37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #37
  br label %ehcleanup147

lpad40:                                           ; preds = %invoke.cont23
  %65 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup48

lpad44:                                           ; preds = %invoke.cont41
  %66 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp28) #37
  br label %ehcleanup48

ehcleanup48:                                      ; preds = %lpad44, %lpad40
  %.pn222 = phi { i8*, i32 } [ %66, %lpad44 ], [ %65, %lpad40 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %agg.tmp29) #37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #37
  br label %ehcleanup147

lpad67:                                           ; preds = %invoke.cont45
  %67 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup75

lpad71:                                           ; preds = %invoke.cont68
  %68 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp52) #37
  br label %ehcleanup75

ehcleanup75:                                      ; preds = %lpad71, %lpad67
  %.pn224 = phi { i8*, i32 } [ %68, %lpad71 ], [ %67, %lpad67 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %agg.tmp53) #37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #37
  br label %ehcleanup147

for.cond118.preheader:                            ; preds = %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit
  br i1 %cmp343, label %for.body120.lr.ph, label %delete.notnull

for.body120.lr.ph:                                ; preds = %for.cond118.preheader
  %69 = bitcast %"struct.adept::internal::BinaryOperation.58"* %ref.tmp121 to i8*
  %70 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.58", %"struct.adept::internal::BinaryOperation.58"* %ref.tmp121, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.58", %"struct.adept::internal::BinaryOperation.58"* %ref.tmp121, i64 0, i32 1, i32 0
  %72 = bitcast %"struct.adept::internal::BinaryOperation.58"* %ref.tmp121 to %"struct.adept::Expression.59"*
  %wide.trip.count = zext i32 %hsize to i64
  br label %for.body120

for.body98:                                       ; preds = %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit, %for.body98.preheader
  %indvars.iv345 = phi i64 [ 0, %for.body98.preheader ], [ %indvars.iv.next346, %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit ]
  %arrayidx108 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx2, i64 %indvars.iv345
  %arrayidx110 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx8, i64 %indvars.iv345
  %73 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %n_allocated_operations_.i.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %73, i64 0, i32 6
  %74 = load i32, i32* %n_allocated_operations_.i.i.i, align 4, !tbaa !178
  %n_operations_.i.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %73, i64 0, i32 5
  %75 = load i32, i32* %n_operations_.i.i.i, align 8, !tbaa !177
  %add.i.i.i = add nsw i32 %75, 4
  %cmp.not.i.i.i = icmp sgt i32 %74, %add.i.i.i
  %76 = bitcast %"class.adept::internal::StackStorageOrig"* %73 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i.i, label %_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES6_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %for.body98
  call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %73, i32 4)
  %.pre353 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %77 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre353, i64 0, i32 0
  br label %_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES6_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE.exit

_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES6_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE.exit: ; preds = %if.then.i.i.i, %for.body98
  %78 = phi %"class.adept::internal::StackStorageOrig"* [ %73, %for.body98 ], [ %77, %if.then.i.i.i ]
  %79 = phi %"class.adept::Stack"* [ %76, %for.body98 ], [ %.pre353, %if.then.i.i.i ]
  %val_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %cell, i64 %indvars.iv345, i32 0
  %80 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !244
  %val_.i9.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 %indvars.iv345, i32 0
  %81 = load double, double* %val_.i9.i.i.i.i.i, align 8, !tbaa !244
  %mul.i.i.i.i.i.i = fmul fast double %81, %80
  %val_.i.i.i8.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx108, i64 0, i32 0
  %82 = load double, double* %val_.i.i.i8.i.i.i, align 8, !tbaa !244
  %val_.i9.i.i10.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx110, i64 0, i32 0
  %83 = load double, double* %val_.i9.i.i10.i.i.i, align 8, !tbaa !244
  %mul.i.i.i11.i.i.i = fmul fast double %83, %82
  %add.i.i.i.i = fadd fast double %mul.i.i.i11.i.i.i, %mul.i.i.i.i.i.i
  %gradient_index_.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %cell, i64 %indvars.iv345, i32 1
  %multiplier_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %79, i64 0, i32 0, i32 1
  %84 = load double*, double** %multiplier_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %79, i64 0, i32 0, i32 5
  %85 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i.i.i.i = sext i32 %85 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %84, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store double %81, double* %arrayidx.i.i.i.i.i.i.i.i.i, align 8, !tbaa !61
  %86 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %79, i64 0, i32 0, i32 2
  %87 = load i32*, i32** %index_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i.i.i.i.i.i = add nsw i32 %85, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %87, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store i32 %86, i32* %arrayidx4.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %88 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !244
  %gradient_index_.i.i.i6.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 %indvars.iv345, i32 1
  %89 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i9.i.i.i.i.i = sext i32 %89 to i64
  %arrayidx.i.i.i.i10.i.i.i.i.i = getelementptr inbounds double, double* %84, i64 %idxprom.i.i.i.i9.i.i.i.i.i
  store double %88, double* %arrayidx.i.i.i.i10.i.i.i.i.i, align 8, !tbaa !61
  %90 = load i32, i32* %gradient_index_.i.i.i6.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i12.i.i.i.i.i = add nsw i32 %89, 1
  store i32 %inc.i.i.i.i12.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i13.i.i.i.i.i = getelementptr inbounds i32, i32* %87, i64 %idxprom.i.i.i.i9.i.i.i.i.i
  store i32 %90, i32* %arrayidx4.i.i.i.i13.i.i.i.i.i, align 4, !tbaa !47
  %91 = load double, double* %val_.i9.i.i10.i.i.i, align 8, !tbaa !244
  %gradient_index_.i.i.i.i.i.i8.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx108, i64 0, i32 1
  %92 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i.i11.i.i = sext i32 %92 to i64
  %arrayidx.i.i.i.i.i.i.i12.i.i = getelementptr inbounds double, double* %84, i64 %idxprom.i.i.i.i.i.i.i11.i.i
  store double %91, double* %arrayidx.i.i.i.i.i.i.i12.i.i, align 8, !tbaa !61
  %93 = load i32, i32* %gradient_index_.i.i.i.i.i.i8.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i.i14.i.i = add nsw i32 %92, 1
  store i32 %inc.i.i.i.i.i.i.i14.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i.i15.i.i = getelementptr inbounds i32, i32* %87, i64 %idxprom.i.i.i.i.i.i.i11.i.i
  store i32 %93, i32* %arrayidx4.i.i.i.i.i.i.i15.i.i, align 4, !tbaa !47
  %94 = load double, double* %val_.i.i.i8.i.i.i, align 8, !tbaa !244
  %gradient_index_.i.i.i6.i.i.i17.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx110, i64 0, i32 1
  %95 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i9.i.i.i18.i.i = sext i32 %95 to i64
  %arrayidx.i.i.i.i10.i.i.i19.i.i = getelementptr inbounds double, double* %84, i64 %idxprom.i.i.i.i9.i.i.i18.i.i
  store double %94, double* %arrayidx.i.i.i.i10.i.i.i19.i.i, align 8, !tbaa !61
  %96 = load i32, i32* %gradient_index_.i.i.i6.i.i.i17.i.i, align 8, !tbaa !47
  %inc.i.i.i.i12.i.i.i20.i.i = add nsw i32 %95, 1
  store i32 %inc.i.i.i.i12.i.i.i20.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i13.i.i.i21.i.i = getelementptr inbounds i32, i32* %87, i64 %idxprom.i.i.i.i9.i.i.i18.i.i
  store i32 %96, i32* %arrayidx4.i.i.i.i13.i.i.i21.i.i, align 4, !tbaa !47
  store double %add.i.i.i.i, double* %val_.i.i.i.i.i.i, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %78, i64 0, i32 3
  %97 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %78, i64 0, i32 4
  %98 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i = icmp slt i32 %97, %98
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES6_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %78, i64 0, i32 0
  %.pre.i235 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES6_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE.exit
  %mul.i.i = shl nsw i32 %98, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %99 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %100 = extractvalue { i64, i1 } %99, 1
  %101 = extractvalue { i64, i1 } %99, 0
  %102 = select i1 %100, i64 -1, i64 %101
  %call.i.i = call noalias nonnull i8* @_Znam(i64 %102) #44
  %103 = bitcast %"class.adept::internal::StackStorageOrig"* %78 to i8**
  %104 = load i8*, i8** %103, align 8, !tbaa !141
  %conv5.i.i = sext i32 %97 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %104, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %104, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  call void @_ZdaPv(i8* nonnull %104) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre7.i = phi i32 [ %97, %if.then.i ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %103, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %105 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %106 = phi i32 [ %97, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %107 = phi %"struct.adept::internal::Statement"* [ %.pre.i235, %entry.if.end_crit_edge.i ], [ %105, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %108 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %idxprom.i = sext i32 %106 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %107, i64 %idxprom.i, i32 0
  store i32 %108, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %78, i64 0, i32 5
  %109 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i = add nsw i32 %106, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %107, i64 %idxprom.i, i32 1
  store i32 %109, i32* %end_plus_one.i, align 4, !tbaa !149
  %indvars.iv.next346 = add nuw nsw i64 %indvars.iv345, 1
  %exitcond348.not = icmp eq i64 %indvars.iv.next346, %wide.trip.count347
  br i1 %exitcond348.not, label %for.cond118.preheader, label %for.body98, !llvm.loop !307

for.body120:                                      ; preds = %for.body120, %for.body120.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body120.lr.ph ], [ %indvars.iv.next, %for.body120 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #37
  %arrayidx123 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx5, i64 %indvars.iv
  %arrayidx126 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %cell, i64 %indvars.iv
  store %"class.adept::Active"* %arrayidx123, %"class.adept::Active"** %70, align 8
  store %"class.adept::Active"* %arrayidx126, %"class.adept::Active"** %71, align 8
  %arrayidx130 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %hidden, i64 %indvars.iv
  %call131 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyENS3_14UnaryOperationIdNS3_4TanhES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSB_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SB_EE(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx130, %"struct.adept::Expression.59"* nonnull align 1 dereferenceable(1) %72)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %delete.notnull, label %for.body120, !llvm.loop !308

delete.notnull:                                   ; preds = %for.body120, %for.cond118.preheader, %for.cond96.preheader, %arrayctor.cont
  %110 = load i64, i64* %5, align 8
  %delete.end = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 %110
  %arraydestroy.isempty135 = icmp eq %"class.adept::Active"* %delete.end, %7
  br i1 %arraydestroy.isempty135, label %arraydestroy.done140, label %arraydestroy.body136

arraydestroy.body136:                             ; preds = %arraydestroy.body136, %delete.notnull
  %arraydestroy.elementPast137 = phi %"class.adept::Active"* [ %arraydestroy.element138, %arraydestroy.body136 ], [ %delete.end, %delete.notnull ]
  %arraydestroy.element138 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arraydestroy.elementPast137, i64 -1
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arraydestroy.element138) #37
  %arraydestroy.done139 = icmp eq %"class.adept::Active"* %arraydestroy.element138, %7
  br i1 %arraydestroy.done139, label %arraydestroy.done140, label %arraydestroy.body136

arraydestroy.done140:                             ; preds = %arraydestroy.body136, %delete.notnull
  call void @_ZdaPv(i8* nonnull %call) #43
  ret void

ehcleanup147:                                     ; preds = %ehcleanup75, %ehcleanup48, %ehcleanup
  %.pn224.pn.pn = phi { i8*, i32 } [ %.pn224, %ehcleanup75 ], [ %.pn222, %ehcleanup48 ], [ %.pn, %ehcleanup ]
  resume { i8*, i32 } %.pn224.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !178
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !177
  %add.i.i = add nsw i32 %2, 3
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 3)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit: ; preds = %if.then.i.i, %entry
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %left.i.i.i.i5.i = bitcast %"struct.adept::Expression.52"* %rhs to %"class.adept::Active"**
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i.i5.i, align 8, !tbaa !294
  %val_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 0
  %8 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !244
  %right.i.i.i.i.i = getelementptr inbounds %"struct.adept::Expression.52", %"struct.adept::Expression.52"* %rhs, i64 8
  %9 = bitcast %"struct.adept::Expression.52"* %right.i.i.i.i.i to %"class.adept::Active"**
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %9, align 8, !tbaa !296
  %val_.i9.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 0
  %11 = load double, double* %val_.i9.i.i.i.i.i, align 8, !tbaa !244
  %mul.i.i.i.i.i.i = fmul fast double %11, %8
  %right.i.i.i = getelementptr inbounds %"struct.adept::Expression.52", %"struct.adept::Expression.52"* %rhs, i64 16
  %12 = bitcast %"struct.adept::Expression.52"* %right.i.i.i to %"class.adept::Active"**
  %13 = load %"class.adept::Active"*, %"class.adept::Active"** %12, align 8, !tbaa !309
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %13, i64 0, i32 0
  %14 = load double, double* %val_.i.i.i.i, align 8, !tbaa !244
  %add.i.i.i.i = fadd fast double %14, %mul.i.i.i.i.i.i
  %gradient_index_.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %15 = load double*, double** %multiplier_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %16 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i.i.i.i = sext i32 %16 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %15, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store double %11, double* %arrayidx.i.i.i.i.i.i.i.i.i, align 8, !tbaa !61
  %17 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %18 = load i32*, i32** %index_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i.i.i.i.i.i = add nsw i32 %16, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %18, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store i32 %17, i32* %arrayidx4.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %19 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !244
  %gradient_index_.i.i.i6.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 1
  %20 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i9.i.i.i.i.i = sext i32 %20 to i64
  %arrayidx.i.i.i.i10.i.i.i.i.i = getelementptr inbounds double, double* %15, i64 %idxprom.i.i.i.i9.i.i.i.i.i
  store double %19, double* %arrayidx.i.i.i.i10.i.i.i.i.i, align 8, !tbaa !61
  %21 = load i32, i32* %gradient_index_.i.i.i6.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i12.i.i.i.i.i = add nsw i32 %20, 1
  store i32 %inc.i.i.i.i12.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i13.i.i.i.i.i = getelementptr inbounds i32, i32* %18, i64 %idxprom.i.i.i.i9.i.i.i.i.i
  store i32 %21, i32* %arrayidx4.i.i.i.i13.i.i.i.i.i, align 4, !tbaa !47
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %13, i64 0, i32 1
  %22 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i = sext i32 %22 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %15, i64 %idxprom.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !61
  %23 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i = add nsw i32 %22, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %18, i64 %idxprom.i.i.i.i.i.i
  store i32 %23, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %add.i.i.i.i, double* %val_, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %24 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %25 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i = icmp slt i32 %24, %25
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit
  %mul.i.i = shl nsw i32 %25, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %26 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = select i1 %27, i64 -1, i64 %28
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %29) #44
  %30 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %31 = load i8*, i8** %30, align 8, !tbaa !141
  %conv5.i.i = sext i32 %24 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %31, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %31, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %31) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre7.i = phi i32 [ %24, %if.then.i ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %30, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %32 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %33 = phi i32 [ %24, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %34 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %32, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %35 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %33 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %34, i64 %idxprom.i, i32 0
  store i32 %35, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %36 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i = add nsw i32 %33, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %34, i64 %idxprom.i, i32 1
  store i32 %36, i32* %end_plus_one.i, align 4, !tbaa !149
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9adeptTest7sigmoidIN5adept6ActiveIdEEEET_S4_(%"class.adept::Active"* noalias sret(%"class.adept::Active") align 8 %agg.result, %"class.adept::Active"* %x) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"struct.adept::internal::BinaryOperation.62", align 8
  %ref.tmp1 = alloca %"class.adept::Active", align 8
  %ref.tmp2 = alloca i32, align 4
  %ref.tmp4 = alloca %"class.adept::Active", align 8
  %ref.tmp5 = alloca i32, align 4
  %0 = bitcast %"struct.adept::internal::BinaryOperation.62"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #37
  %1 = bitcast %"class.adept::Active"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #37
  %2 = bitcast i32* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #37
  store i32 1, i32* %ref.tmp2, align 4, !tbaa !47
  call void @_ZN5adept6ActiveIdEC2IiEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp1, i32* nonnull align 4 dereferenceable(4) %ref.tmp2, i8* null)
  %3 = bitcast %"class.adept::Active"* %ref.tmp4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #37
  %4 = bitcast i32* %ref.tmp5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #37
  store i32 1, i32* %ref.tmp5, align 4, !tbaa !47
  invoke void @_ZN5adept6ActiveIdEC2IiEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp4, i32* nonnull align 4 dereferenceable(4) %ref.tmp5, i8* null)
          to label %invoke.cont16 unwind label %lpad

invoke.cont16:                                    ; preds = %entry
  %5 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.62", %"struct.adept::internal::BinaryOperation.62"* %ref.tmp, i64 0, i32 0
  store %"class.adept::Active"* %ref.tmp1, %"class.adept::Active"** %5, align 8, !tbaa !110, !alias.scope !311
  %ref.tmp3.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.adept::internal::BinaryOperation.62", %"struct.adept::internal::BinaryOperation.62"* %ref.tmp, i64 0, i32 1, i32 0
  store %"class.adept::Active"* %ref.tmp4, %"class.adept::Active"** %ref.tmp3.sroa.0.0..sroa_idx, align 8
  %ref.tmp3.sroa.5.0..sroa_idx34 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.62", %"struct.adept::internal::BinaryOperation.62"* %ref.tmp, i64 0, i32 1, i32 1, i32 0, i32 0
  store %"class.adept::Active"* %x, %"class.adept::Active"** %ref.tmp3.sroa.5.0..sroa_idx34, align 8
  %6 = bitcast %"struct.adept::internal::BinaryOperation.62"* %ref.tmp to %"struct.adept::Expression.63"*
  invoke void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_6DivideENS4_IdS1_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpENS7_IdNS3_10UnaryMinusES1_EEEEEEEEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSG_4rankLi0EsrSG_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result, %"struct.adept::Expression.63"* nonnull align 1 dereferenceable(1) %6, i8* null)
          to label %invoke.cont17 unwind label %lpad8

invoke.cont17:                                    ; preds = %invoke.cont16
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp4) #37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #37
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp1) #37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #37
  ret void

lpad:                                             ; preds = %entry
  %7 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad8:                                            ; preds = %invoke.cont16
  %8 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp4) #37
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad8, %lpad
  %.pn = phi { i8*, i32 } [ %8, %lpad8 ], [ %7, %lpad ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #37
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp1) #37
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #37
  resume { i8*, i32 } %.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_8MultiplyES1_EENS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSB_4rankLi0EsrSB_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %rhs, i8* %dummy) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %inc.i = add nsw i32 %1, 1
  store i32 %inc.i, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4
  %2 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !136
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %3, %2
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 6
  %5 = load i32, i32* %i_gradient_.i, align 8, !tbaa !165
  %inc2.i = add nsw i32 %5, 1
  store i32 %inc2.i, i32* %i_gradient_.i, align 8, !tbaa !165
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 8
  %6 = load i32, i32* %max_gradient_.i, align 8, !tbaa !166
  %cmp.not.i = icmp slt i32 %5, %6
  br i1 %cmp.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  store i32 %inc2.i, i32* %max_gradient_.i, align 8, !tbaa !166
  br label %_ZN5adept5Stack17register_gradientEv.exit

if.else.i:                                        ; preds = %entry
  %7 = bitcast %"struct.std::__detail::_List_node_base"* %3 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %3, i64 1
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i to i32*
  %8 = load i32, i32* %start.i, align 4, !tbaa !157
  %inc11.i = add nsw i32 %8, 1
  store i32 %inc11.i, i32* %start.i, align 4, !tbaa !157
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 1, i32 0, i64 4
  %9 = bitcast i8* %end.i to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !155
  %cmp13.not.i = icmp slt i32 %8, %10
  br i1 %cmp13.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.else.i
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 5, i32 0
  %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !158
  %cmp.i35.i = icmp eq %"struct.std::__detail::_List_node_base"* %11, %3
  br i1 %cmp.i35.i, label %if.then18.i, label %if.end24.i

if.then18.i:                                      ; preds = %if.then14.i
  store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !163
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then18.i, %if.then14.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !159
  %sub.i.i.i.i = add i64 %12, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %3) #37
  %13 = bitcast %"struct.std::__detail::_List_node_base"* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #37
  %.pre = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %14 = bitcast %"class.adept::internal::StackStorageOrig"* %.pre to %"class.adept::Stack"*
  br label %_ZN5adept5Stack17register_gradientEv.exit

_ZN5adept5Stack17register_gradientEv.exit:        ; preds = %if.end24.i, %if.else.i, %if.then4.i, %if.then.i
  %15 = phi %"class.adept::Stack"* [ %14, %if.end24.i ], [ %0, %if.else.i ], [ %0, %if.then4.i ], [ %0, %if.then.i ]
  %16 = phi %"class.adept::internal::StackStorageOrig"* [ %.pre, %if.end24.i ], [ %4, %if.else.i ], [ %4, %if.then4.i ], [ %4, %if.then.i ]
  %return_val.0.i = phi i32 [ %8, %if.end24.i ], [ %8, %if.else.i ], [ %5, %if.then4.i ], [ %5, %if.then.i ]
  store i32 %return_val.0.i, i32* %gradient_index_, align 8, !tbaa !246
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 6
  %17 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !178
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 5
  %18 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !177
  %add.i.i = add nsw i32 %18, 3
  %cmp.not.i.i = icmp sgt i32 %17, %add.i.i
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %16, i32 3)
  %.pre7 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %19 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre7, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit: ; preds = %if.then.i.i, %_ZN5adept5Stack17register_gradientEv.exit
  %20 = phi %"class.adept::internal::StackStorageOrig"* [ %16, %_ZN5adept5Stack17register_gradientEv.exit ], [ %19, %if.then.i.i ]
  %21 = phi %"class.adept::Stack"* [ %15, %_ZN5adept5Stack17register_gradientEv.exit ], [ %.pre7, %if.then.i.i ]
  %left.i.i.i.i5.i = bitcast %"struct.adept::Expression.52"* %rhs to %"class.adept::Active"**
  %22 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i.i5.i, align 8, !tbaa !294
  %val_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 0
  %23 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !244
  %right.i.i.i.i.i = getelementptr inbounds %"struct.adept::Expression.52", %"struct.adept::Expression.52"* %rhs, i64 8
  %24 = bitcast %"struct.adept::Expression.52"* %right.i.i.i.i.i to %"class.adept::Active"**
  %25 = load %"class.adept::Active"*, %"class.adept::Active"** %24, align 8, !tbaa !296
  %val_.i9.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %25, i64 0, i32 0
  %26 = load double, double* %val_.i9.i.i.i.i.i, align 8, !tbaa !244
  %mul.i.i.i.i.i.i = fmul fast double %26, %23
  %right.i.i.i = getelementptr inbounds %"struct.adept::Expression.52", %"struct.adept::Expression.52"* %rhs, i64 16
  %27 = bitcast %"struct.adept::Expression.52"* %right.i.i.i to %"class.adept::Active"**
  %28 = load %"class.adept::Active"*, %"class.adept::Active"** %27, align 8, !tbaa !309
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %28, i64 0, i32 0
  %29 = load double, double* %val_.i.i.i.i, align 8, !tbaa !244
  %add.i.i.i.i = fadd fast double %29, %mul.i.i.i.i.i.i
  %gradient_index_.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 1
  %30 = load double*, double** %multiplier_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 5
  %31 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i.i.i.i = sext i32 %31 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %30, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store double %26, double* %arrayidx.i.i.i.i.i.i.i.i.i, align 8, !tbaa !61
  %32 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 2
  %33 = load i32*, i32** %index_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i.i.i.i.i.i = add nsw i32 %31, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %33, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store i32 %32, i32* %arrayidx4.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %34 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !244
  %gradient_index_.i.i.i6.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %25, i64 0, i32 1
  %35 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i9.i.i.i.i.i = sext i32 %35 to i64
  %arrayidx.i.i.i.i10.i.i.i.i.i = getelementptr inbounds double, double* %30, i64 %idxprom.i.i.i.i9.i.i.i.i.i
  store double %34, double* %arrayidx.i.i.i.i10.i.i.i.i.i, align 8, !tbaa !61
  %36 = load i32, i32* %gradient_index_.i.i.i6.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i12.i.i.i.i.i = add nsw i32 %35, 1
  store i32 %inc.i.i.i.i12.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i13.i.i.i.i.i = getelementptr inbounds i32, i32* %33, i64 %idxprom.i.i.i.i9.i.i.i.i.i
  store i32 %36, i32* %arrayidx4.i.i.i.i13.i.i.i.i.i, align 4, !tbaa !47
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %28, i64 0, i32 1
  %37 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i = sext i32 %37 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %30, i64 %idxprom.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !61
  %38 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i = add nsw i32 %37, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %33, i64 %idxprom.i.i.i.i.i.i
  store i32 %38, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %add.i.i.i.i, double* %val_, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 3
  %39 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 4
  %40 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i4 = icmp slt i32 %39, %40
  br i1 %cmp.not.i4, label %entry.if.end_crit_edge.i, label %if.then.i5

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i5:                                       ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit
  %mul.i.i = shl nsw i32 %40, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %41 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %42 = extractvalue { i64, i1 } %41, 1
  %43 = extractvalue { i64, i1 } %41, 0
  %44 = select i1 %42, i64 -1, i64 %43
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %44) #44
  %45 = bitcast %"class.adept::internal::StackStorageOrig"* %20 to i8**
  %46 = load i8*, i8** %45, align 8, !tbaa !141
  %conv5.i.i = sext i32 %39 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %46, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %46, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i5
  tail call void @_ZdaPv(i8* nonnull %46) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i5
  %.pre7.i = phi i32 [ %39, %if.then.i5 ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %45, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %47 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %48 = phi i32 [ %39, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %49 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %47, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %50 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %48 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %49, i64 %idxprom.i, i32 0
  store i32 %50, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 5
  %51 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i6 = add nsw i32 %48, 1
  store i32 %inc.i6, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %49, i64 %idxprom.i, i32 1
  store i32 %51, i32* %end_plus_one.i, align 4, !tbaa !149
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyENS3_14UnaryOperationIdNS3_4TanhES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSB_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SB_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.59"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !178
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !177
  %add.i.i = add nsw i32 %2, 2
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 2)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit: ; preds = %if.then.i.i, %entry
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.59"* %rhs to %"class.adept::Active"**
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !314
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 0
  %8 = load double, double* %val_.i.i.i.i, align 8, !tbaa !244
  %arg.i.i.i.i = getelementptr inbounds %"struct.adept::Expression.59", %"struct.adept::Expression.59"* %rhs, i64 8
  %9 = bitcast %"struct.adept::Expression.59"* %arg.i.i.i.i to %"class.adept::Active"**
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %9, align 8, !tbaa !317
  %val_.i.i.i.i5.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 0
  %11 = load double, double* %val_.i.i.i.i5.i, align 8, !tbaa !244
  %call.i.i.i.i.i = tail call fast double @tanh(double %11) #42
  %mul.i.i.i.i = fmul fast double %call.i.i.i.i.i, %8
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %12 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %13 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i = sext i32 %13 to i64
  %arrayidx.i.i3.i.i.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i.i.i
  store double %call.i.i.i.i.i, double* %arrayidx.i.i3.i.i.i.i, align 8, !tbaa !61
  %14 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %15 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i.i.i = add nsw i32 %13, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i.i.i
  store i32 %14, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %16 = load double, double* %val_.i.i.i.i, align 8, !tbaa !244
  %mul.i.i.i.i.i.i = fmul fast double %call.i.i.i.i.i, %call.i.i.i.i.i
  %sub.i.i.i.i.i.i = fsub fast double 1.000000e+00, %mul.i.i.i.i.i.i
  %mul.i.i.i.i.i = fmul fast double %16, %sub.i.i.i.i.i.i
  %gradient_index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 1
  %17 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i.i = sext i32 %17 to i64
  %arrayidx.i.i.i.i.i.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i.i.i.i
  store double %mul.i.i.i.i.i, double* %arrayidx.i.i.i.i.i.i.i, align 8, !tbaa !61
  %18 = load i32, i32* %gradient_index_.i.i.i.i.i.i, align 4, !tbaa !47
  %inc.i.i.i.i.i.i.i = add nsw i32 %17, 1
  store i32 %inc.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i.i.i.i
  store i32 %18, i32* %arrayidx4.i.i.i.i.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %mul.i.i.i.i, double* %val_, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %19 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %20 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i = icmp slt i32 %19, %20
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %mul.i.i = shl nsw i32 %20, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %21 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %24) #44
  %25 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %26 = load i8*, i8** %25, align 8, !tbaa !141
  %conv5.i.i = sext i32 %19 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %26, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %26, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %26) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre7.i = phi i32 [ %19, %if.then.i ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %25, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %27 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %28 = phi i32 [ %19, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %29 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %27, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %30 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %28 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %29, i64 %idxprom.i, i32 0
  store i32 %30, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %31 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i = add nsw i32 %28, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %29, i64 %idxprom.i, i32 1
  store i32 %31, i32* %end_plus_one.i, align 4, !tbaa !149
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_6DivideENS4_IdS1_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpENS7_IdNS3_10UnaryMinusES1_EEEEEEEEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSG_4rankLi0EsrSG_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.63"* nonnull align 1 dereferenceable(1) %rhs, i8* %dummy) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %inc.i = add nsw i32 %1, 1
  store i32 %inc.i, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4
  %2 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !136
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %3, %2
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 6
  %5 = load i32, i32* %i_gradient_.i, align 8, !tbaa !165
  %inc2.i = add nsw i32 %5, 1
  store i32 %inc2.i, i32* %i_gradient_.i, align 8, !tbaa !165
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 8
  %6 = load i32, i32* %max_gradient_.i, align 8, !tbaa !166
  %cmp.not.i = icmp slt i32 %5, %6
  br i1 %cmp.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  store i32 %inc2.i, i32* %max_gradient_.i, align 8, !tbaa !166
  br label %_ZN5adept5Stack17register_gradientEv.exit

if.else.i:                                        ; preds = %entry
  %7 = bitcast %"struct.std::__detail::_List_node_base"* %3 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %3, i64 1
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i to i32*
  %8 = load i32, i32* %start.i, align 4, !tbaa !157
  %inc11.i = add nsw i32 %8, 1
  store i32 %inc11.i, i32* %start.i, align 4, !tbaa !157
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 1, i32 0, i64 4
  %9 = bitcast i8* %end.i to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !155
  %cmp13.not.i = icmp slt i32 %8, %10
  br i1 %cmp13.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.else.i
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 5, i32 0
  %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !158
  %cmp.i35.i = icmp eq %"struct.std::__detail::_List_node_base"* %11, %3
  br i1 %cmp.i35.i, label %if.then18.i, label %if.end24.i

if.then18.i:                                      ; preds = %if.then14.i
  store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !163
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then18.i, %if.then14.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !159
  %sub.i.i.i.i = add i64 %12, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %3) #37
  %13 = bitcast %"struct.std::__detail::_List_node_base"* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #37
  %.pre = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %14 = bitcast %"class.adept::internal::StackStorageOrig"* %.pre to %"class.adept::Stack"*
  br label %_ZN5adept5Stack17register_gradientEv.exit

_ZN5adept5Stack17register_gradientEv.exit:        ; preds = %if.end24.i, %if.else.i, %if.then4.i, %if.then.i
  %15 = phi %"class.adept::Stack"* [ %14, %if.end24.i ], [ %0, %if.else.i ], [ %0, %if.then4.i ], [ %0, %if.then.i ]
  %16 = phi %"class.adept::internal::StackStorageOrig"* [ %.pre, %if.end24.i ], [ %4, %if.else.i ], [ %4, %if.then4.i ], [ %4, %if.then.i ]
  %return_val.0.i = phi i32 [ %8, %if.end24.i ], [ %8, %if.else.i ], [ %5, %if.then4.i ], [ %5, %if.then.i ]
  store i32 %return_val.0.i, i32* %gradient_index_, align 8, !tbaa !246
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 6
  %17 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !178
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 5
  %18 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !177
  %add.i.i = add nsw i32 %18, 3
  %cmp.not.i.i = icmp sgt i32 %17, %add.i.i
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %16, i32 3)
  %.pre7 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %19 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre7, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit: ; preds = %if.then.i.i, %_ZN5adept5Stack17register_gradientEv.exit
  %20 = phi %"class.adept::internal::StackStorageOrig"* [ %16, %_ZN5adept5Stack17register_gradientEv.exit ], [ %19, %if.then.i.i ]
  %21 = phi %"class.adept::Stack"* [ %15, %_ZN5adept5Stack17register_gradientEv.exit ], [ %.pre7, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.63"* %rhs to %"class.adept::Active"**
  %22 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !318
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 0
  %23 = load double, double* %val_.i.i.i.i, align 8, !tbaa !244
  %left.i.i.i.i5.i = getelementptr inbounds %"struct.adept::Expression.63", %"struct.adept::Expression.63"* %rhs, i64 8
  %24 = bitcast %"struct.adept::Expression.63"* %left.i.i.i.i5.i to %"class.adept::Active"**
  %25 = load %"class.adept::Active"*, %"class.adept::Active"** %24, align 8, !tbaa !322
  %val_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %25, i64 0, i32 0
  %26 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !244
  %arg.i.i.i.i.i.i.i = getelementptr inbounds %"struct.adept::Expression.63", %"struct.adept::Expression.63"* %rhs, i64 16
  %27 = bitcast %"struct.adept::Expression.63"* %arg.i.i.i.i.i.i.i to %"class.adept::Active"**
  %28 = load %"class.adept::Active"*, %"class.adept::Active"** %27, align 8, !tbaa !290
  %val_.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %28, i64 0, i32 0
  %29 = load double, double* %val_.i.i.i.i.i.i.i.i, align 8, !tbaa !244
  %fneg.i.i.i.i.i.i.i.i = fneg fast double %29
  %30 = tail call fast double @llvm.exp.f64(double %fneg.i.i.i.i.i.i.i.i) #37
  %add.i.i.i.i.i.i = fadd fast double %30, %26
  %div.i.i.i.i = fdiv fast double 1.000000e+00, %add.i.i.i.i.i.i
  %mul.i.i.i6.i = fmul fast double %div.i.i.i.i, %23
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 1
  %31 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 5
  %32 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i = sext i32 %32 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %31, i64 %idxprom.i.i.i.i.i.i
  store double %div.i.i.i.i, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !61
  %33 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 2
  %34 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i.i.i = add nsw i32 %32, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %34, i64 %idxprom.i.i.i.i.i.i
  store i32 %33, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %fneg.i.i.i.i = fneg fast double %div.i.i.i.i
  %mul.i.i.i.i = fmul fast double %mul.i.i.i6.i, %fneg.i.i.i.i
  %gradient_index_.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %25, i64 0, i32 1
  %35 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i.i.i.i = sext i32 %35 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %31, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store double %mul.i.i.i.i, double* %arrayidx.i.i.i.i.i.i.i.i.i, align 8, !tbaa !61
  %36 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i.i.i.i = add nsw i32 %35, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %34, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store i32 %36, i32* %arrayidx4.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %37 = fneg fast double %30
  %mul.i.i.i.i.i.i.i.i.i = fmul fast double %mul.i.i.i.i, %37
  %gradient_index_.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %28, i64 0, i32 1
  %38 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i.i.i.i.i.i = sext i32 %38 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %31, i64 %idxprom.i.i.i.i.i.i.i.i.i.i.i
  store double %mul.i.i.i.i.i.i.i.i.i, double* %arrayidx.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !61
  %39 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %inc.i.i.i.i.i.i.i.i.i.i.i = add nsw i32 %38, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %34, i64 %idxprom.i.i.i.i.i.i.i.i.i.i.i
  store i32 %39, i32* %arrayidx4.i.i.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %mul.i.i.i6.i, double* %val_, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 3
  %40 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 4
  %41 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i4 = icmp slt i32 %40, %41
  br i1 %cmp.not.i4, label %entry.if.end_crit_edge.i, label %if.then.i5

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i5:                                       ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit
  %mul.i.i = shl nsw i32 %41, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %42 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %43 = extractvalue { i64, i1 } %42, 1
  %44 = extractvalue { i64, i1 } %42, 0
  %45 = select i1 %43, i64 -1, i64 %44
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %45) #44
  %46 = bitcast %"class.adept::internal::StackStorageOrig"* %20 to i8**
  %47 = load i8*, i8** %46, align 8, !tbaa !141
  %conv5.i.i = sext i32 %40 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %47, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %47, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i5
  tail call void @_ZdaPv(i8* nonnull %47) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i5
  %.pre7.i = phi i32 [ %40, %if.then.i5 ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %46, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %48 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %49 = phi i32 [ %40, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %50 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %48, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %51 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %49 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %50, i64 %idxprom.i, i32 0
  store i32 %51, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 5
  %52 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i6 = add nsw i32 %49, 1
  store i32 %inc.i6, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %50, i64 %idxprom.i, i32 1
  store i32 %52, i32* %end_plus_one.i, align 4, !tbaa !149
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdNS_8internal14UnaryOperationIdNS3_3LogES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.73"* nonnull align 1 dereferenceable(1) %rhs, i8* %dummy) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %inc.i = add nsw i32 %1, 1
  store i32 %inc.i, i32* %n_gradients_registered_.i, align 4, !tbaa !154
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4
  %2 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !136
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %3, %2
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 6
  %5 = load i32, i32* %i_gradient_.i, align 8, !tbaa !165
  %inc2.i = add nsw i32 %5, 1
  store i32 %inc2.i, i32* %i_gradient_.i, align 8, !tbaa !165
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 8
  %6 = load i32, i32* %max_gradient_.i, align 8, !tbaa !166
  %cmp.not.i = icmp slt i32 %5, %6
  br i1 %cmp.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  store i32 %inc2.i, i32* %max_gradient_.i, align 8, !tbaa !166
  br label %_ZN5adept5Stack17register_gradientEv.exit

if.else.i:                                        ; preds = %entry
  %7 = bitcast %"struct.std::__detail::_List_node_base"* %3 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %3, i64 1
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i to i32*
  %8 = load i32, i32* %start.i, align 4, !tbaa !157
  %inc11.i = add nsw i32 %8, 1
  store i32 %inc11.i, i32* %start.i, align 4, !tbaa !157
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 1, i32 0, i64 4
  %9 = bitcast i8* %end.i to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !155
  %cmp13.not.i = icmp slt i32 %8, %10
  br i1 %cmp13.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.else.i
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 5, i32 0
  %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !158
  %cmp.i35.i = icmp eq %"struct.std::__detail::_List_node_base"* %11, %3
  br i1 %cmp.i35.i, label %if.then18.i, label %if.end24.i

if.then18.i:                                      ; preds = %if.then14.i
  store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !163
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then18.i, %if.then14.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !159
  %sub.i.i.i.i = add i64 %12, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !159
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %3) #37
  %13 = bitcast %"struct.std::__detail::_List_node_base"* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #37
  %.pre = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %14 = bitcast %"class.adept::internal::StackStorageOrig"* %.pre to %"class.adept::Stack"*
  br label %_ZN5adept5Stack17register_gradientEv.exit

_ZN5adept5Stack17register_gradientEv.exit:        ; preds = %if.end24.i, %if.else.i, %if.then4.i, %if.then.i
  %15 = phi %"class.adept::Stack"* [ %14, %if.end24.i ], [ %0, %if.else.i ], [ %0, %if.then4.i ], [ %0, %if.then.i ]
  %16 = phi %"class.adept::internal::StackStorageOrig"* [ %.pre, %if.end24.i ], [ %4, %if.else.i ], [ %4, %if.then4.i ], [ %4, %if.then.i ]
  %return_val.0.i = phi i32 [ %8, %if.end24.i ], [ %8, %if.else.i ], [ %5, %if.then4.i ], [ %5, %if.then.i ]
  store i32 %return_val.0.i, i32* %gradient_index_, align 8, !tbaa !246
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 6
  %17 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !178
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 5
  %18 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !177
  %add.i.i = add nsw i32 %18, 1
  %cmp.not.i.i = icmp sgt i32 %17, %add.i.i
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %16, i32 1)
  %.pre7 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %19 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre7, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit: ; preds = %if.then.i.i, %_ZN5adept5Stack17register_gradientEv.exit
  %20 = phi %"class.adept::internal::StackStorageOrig"* [ %16, %_ZN5adept5Stack17register_gradientEv.exit ], [ %19, %if.then.i.i ]
  %21 = phi %"class.adept::Stack"* [ %15, %_ZN5adept5Stack17register_gradientEv.exit ], [ %.pre7, %if.then.i.i ]
  %arg.i5.i = bitcast %"struct.adept::Expression.73"* %rhs to %"class.adept::Active"**
  %22 = load %"class.adept::Active"*, %"class.adept::Active"** %arg.i5.i, align 8, !tbaa !323
  %val_.i.i6.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 0
  %23 = load double, double* %val_.i.i6.i, align 8, !tbaa !244
  %24 = tail call fast double @llvm.log.f64(double %23) #37
  %div.i.i.i = fdiv fast double 1.000000e+00, %23
  %gradient_index_.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 1
  %multiplier_.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 1
  %25 = load double*, double** %multiplier_.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 5
  %26 = load i32, i32* %n_operations_.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i = sext i32 %26 to i64
  %arrayidx.i.i.i.i = getelementptr inbounds double, double* %25, i64 %idxprom.i.i.i.i
  store double %div.i.i.i, double* %arrayidx.i.i.i.i, align 8, !tbaa !61
  %27 = load i32, i32* %gradient_index_.i.i.i, align 4, !tbaa !47
  %index_.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 2
  %28 = load i32*, i32** %index_.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i = add nsw i32 %26, 1
  store i32 %inc.i.i.i.i, i32* %n_operations_.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i = getelementptr inbounds i32, i32* %28, i64 %idxprom.i.i.i.i
  store i32 %27, i32* %arrayidx4.i.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %24, double* %val_, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 3
  %29 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 4
  %30 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i4 = icmp slt i32 %29, %30
  br i1 %cmp.not.i4, label %entry.if.end_crit_edge.i, label %if.then.i5

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i5:                                       ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit
  %mul.i.i = shl nsw i32 %30, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %31 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %32 = extractvalue { i64, i1 } %31, 1
  %33 = extractvalue { i64, i1 } %31, 0
  %34 = select i1 %32, i64 -1, i64 %33
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %34) #44
  %35 = bitcast %"class.adept::internal::StackStorageOrig"* %20 to i8**
  %36 = load i8*, i8** %35, align 8, !tbaa !141
  %conv5.i.i = sext i32 %29 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %36, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %36, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i5
  tail call void @_ZdaPv(i8* nonnull %36) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i5
  %.pre7.i = phi i32 [ %29, %if.then.i5 ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %35, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %37 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %38 = phi i32 [ %29, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %39 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %37, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %40 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %38 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %39, i64 %idxprom.i, i32 0
  store i32 %40, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 5
  %41 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i6 = add nsw i32 %38, 1
  store i32 %inc.i6, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %39, i64 %idxprom.i, i32 1
  store i32 %41, i32* %end_plus_one.i, align 4, !tbaa !149
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSB_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SB_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.75"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !178
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !177
  %add.i.i = add nsw i32 %2, 2
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 2)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit: ; preds = %if.then.i.i, %entry
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.75"* %rhs to %"class.adept::Active"**
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !325
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 0
  %8 = load double, double* %val_.i.i.i.i, align 8, !tbaa !244
  %arg.i.i.i.i = getelementptr inbounds %"struct.adept::Expression.75", %"struct.adept::Expression.75"* %rhs, i64 8
  %9 = bitcast %"struct.adept::Expression.75"* %arg.i.i.i.i to %"class.adept::Active"**
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %9, align 8, !tbaa !328
  %val_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 0
  %11 = load double, double* %val_.i.i.i.i.i, align 8, !tbaa !244
  %12 = tail call fast double @llvm.exp.f64(double %11) #37
  %add.i.i.i.i = fadd fast double %12, %8
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %13 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %14 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i = sext i32 %14 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %13, i64 %idxprom.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !61
  %15 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %16 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i.i.i = add nsw i32 %14, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %16, i64 %idxprom.i.i.i.i.i.i
  store i32 %15, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %gradient_index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 1
  %17 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i.i = sext i32 %17 to i64
  %arrayidx.i.i.i.i.i.i.i = getelementptr inbounds double, double* %13, i64 %idxprom.i.i.i.i.i.i.i
  store double %12, double* %arrayidx.i.i.i.i.i.i.i, align 8, !tbaa !61
  %18 = load i32, i32* %gradient_index_.i.i.i.i.i.i, align 4, !tbaa !47
  %inc.i.i.i.i.i.i.i = add nsw i32 %17, 1
  store i32 %inc.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %16, i64 %idxprom.i.i.i.i.i.i.i
  store i32 %18, i32* %arrayidx4.i.i.i.i.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %add.i.i.i.i, double* %val_, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %19 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %20 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i = icmp slt i32 %19, %20
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %mul.i.i = shl nsw i32 %20, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %21 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %24) #44
  %25 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %26 = load i8*, i8** %25, align 8, !tbaa !141
  %conv5.i.i = sext i32 %19 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %26, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %26, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %26) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre7.i = phi i32 [ %19, %if.then.i ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %25, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %27 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %28 = phi i32 [ %19, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %29 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %27, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %30 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %28 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %29, i64 %idxprom.i, i32 0
  store i32 %30, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %31 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i = add nsw i32 %28, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %29, i64 %idxprom.i, i32 1
  store i32 %31, i32* %end_plus_one.i, align 4, !tbaa !149
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.77"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !178
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !177
  %add.i.i = add nsw i32 %2, 2
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 2)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit: ; preds = %if.then.i.i, %entry
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.77"* %rhs to %"class.adept::Active"**
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !329
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 0
  %8 = load double, double* %val_.i.i.i.i, align 8, !tbaa !244
  %right.i.i.i = getelementptr inbounds %"struct.adept::Expression.77", %"struct.adept::Expression.77"* %rhs, i64 8
  %9 = bitcast %"struct.adept::Expression.77"* %right.i.i.i to %"class.adept::Active"**
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %9, align 8, !tbaa !331
  %val_.i7.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 0
  %11 = load double, double* %val_.i7.i.i.i, align 8, !tbaa !244
  %add.i.i.i.i = fadd fast double %11, %8
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %12 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %13 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i = sext i32 %13 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !61
  %14 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %15 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i.i.i = add nsw i32 %13, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i.i.i
  store i32 %14, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %gradient_index_.i.i.i5.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 1
  %16 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i8.i.i = sext i32 %16 to i64
  %arrayidx.i.i.i.i9.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i8.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i9.i.i, align 8, !tbaa !61
  %17 = load i32, i32* %gradient_index_.i.i.i5.i.i, align 8, !tbaa !47
  %inc.i.i.i.i11.i.i = add nsw i32 %16, 1
  store i32 %inc.i.i.i.i11.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i12.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i8.i.i
  store i32 %17, i32* %arrayidx4.i.i.i.i12.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %add.i.i.i.i, double* %val_, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %18 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %19 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i = icmp slt i32 %18, %19
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %mul.i.i = shl nsw i32 %19, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %20 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %23) #44
  %24 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %25 = load i8*, i8** %24, align 8, !tbaa !141
  %conv5.i.i = sext i32 %18 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %25, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %25, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %25) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre7.i = phi i32 [ %18, %if.then.i ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %24, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %26 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %27 = phi i32 [ %18, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %28 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %26, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %29 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %27 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %28, i64 %idxprom.i, i32 0
  store i32 %29, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %30 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i = add nsw i32 %27, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %28, i64 %idxprom.i, i32 1
  store i32 %30, i32* %end_plus_one.i, align 4, !tbaa !149
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.80"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !110
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !178
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !177
  %add.i.i = add nsw i32 %2, 3
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 3)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !110
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit: ; preds = %if.then.i.i, %entry
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.80"* %rhs to %"class.adept::Active"**
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !332
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 0
  %8 = load double, double* %val_.i.i.i.i, align 8, !tbaa !244
  %left.i.i.i.i5.i = getelementptr inbounds %"struct.adept::Expression.80", %"struct.adept::Expression.80"* %rhs, i64 8
  %9 = bitcast %"struct.adept::Expression.80"* %left.i.i.i.i5.i to %"class.adept::Active"**
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %9, align 8, !tbaa !294
  %val_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 0
  %11 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !244
  %right.i.i.i.i.i = getelementptr inbounds %"struct.adept::Expression.80", %"struct.adept::Expression.80"* %rhs, i64 16
  %12 = bitcast %"struct.adept::Expression.80"* %right.i.i.i.i.i to %"class.adept::Active"**
  %13 = load %"class.adept::Active"*, %"class.adept::Active"** %12, align 8, !tbaa !296
  %val_.i9.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %13, i64 0, i32 0
  %14 = load double, double* %val_.i9.i.i.i.i.i, align 8, !tbaa !244
  %mul.i.i.i.i.i.i = fmul fast double %14, %11
  %add.i.i.i.i = fadd fast double %mul.i.i.i.i.i.i, %8
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %15 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !143
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %16 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i = sext i32 %16 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %15, i64 %idxprom.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !61
  %17 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %18 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !144
  %inc.i.i.i.i.i.i = add nsw i32 %16, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %18, i64 %idxprom.i.i.i.i.i.i
  store i32 %17, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %19 = load double, double* %val_.i9.i.i.i.i.i, align 8, !tbaa !244
  %gradient_index_.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 1
  %20 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i.i.i.i.i.i = sext i32 %20 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %15, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store double %19, double* %arrayidx.i.i.i.i.i.i.i.i.i, align 8, !tbaa !61
  %21 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i.i.i.i = add nsw i32 %20, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %18, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store i32 %21, i32* %arrayidx4.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %22 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !244
  %gradient_index_.i.i.i6.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %13, i64 0, i32 1
  %23 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %idxprom.i.i.i.i9.i.i.i.i.i = sext i32 %23 to i64
  %arrayidx.i.i.i.i10.i.i.i.i.i = getelementptr inbounds double, double* %15, i64 %idxprom.i.i.i.i9.i.i.i.i.i
  store double %22, double* %arrayidx.i.i.i.i10.i.i.i.i.i, align 8, !tbaa !61
  %24 = load i32, i32* %gradient_index_.i.i.i6.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i12.i.i.i.i.i = add nsw i32 %23, 1
  store i32 %inc.i.i.i.i12.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !177
  %arrayidx4.i.i.i.i13.i.i.i.i.i = getelementptr inbounds i32, i32* %18, i64 %idxprom.i.i.i.i9.i.i.i.i.i
  store i32 %24, i32* %arrayidx4.i.i.i.i13.i.i.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %add.i.i.i.i, double* %val_, align 8, !tbaa !244
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %25 = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %26 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %cmp.not.i = icmp slt i32 %25, %26
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !141
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit
  %mul.i.i = shl nsw i32 %26, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %27 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %28 = extractvalue { i64, i1 } %27, 1
  %29 = extractvalue { i64, i1 } %27, 0
  %30 = select i1 %28, i64 -1, i64 %29
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %30) #44
  %31 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %32 = load i8*, i8** %31, align 8, !tbaa !141
  %conv5.i.i = sext i32 %25 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %32, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %32, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %32) #43
  %.pre7.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !146
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre7.i = phi i32 [ %25, %if.then.i ], [ %.pre7.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %31, align 8, !tbaa !141
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !176
  %33 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, %entry.if.end_crit_edge.i
  %34 = phi i32 [ %25, %entry.if.end_crit_edge.i ], [ %.pre7.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %35 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %33, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %36 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %34 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %35, i64 %idxprom.i, i32 0
  store i32 %36, i32* %index.i, align 4, !tbaa !147
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %37 = load i32, i32* %n_operations_.i, align 8, !tbaa !177
  %inc.i = add nsw i32 %34, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !146
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %35, i64 %idxprom.i, i32 1
  store i32 %37, i32* %end_plus_one.i, align 4, !tbaa !149
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept5Stack13set_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPKS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32 %start, i32 %end_plus_one, double* %gradient) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  %0 = load i8, i8* %gradients_initialized_.i, align 8, !tbaa !145, !range !134
  %tobool.i.not = icmp eq i8 %0, 0
  br i1 %tobool.i.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %1 = load i32, i32* %max_gradient_.i, align 8, !tbaa !166
  %cmp.i = icmp sgt i32 %1, 0
  br i1 %cmp.i, label %if.then.i, label %_ZN5adept5Stack20initialize_gradientsEv.exit

if.then.i:                                        ; preds = %if.then
  %n_allocated_gradients_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 7
  %2 = load i32, i32* %n_allocated_gradients_.i, align 4, !tbaa !174
  %cmp3.i = icmp slt i32 %2, %1
  %gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  br i1 %cmp3.i, label %if.then4.i, label %if.then.i.for.body.lr.ph.i_crit_edge

if.then.i.for.body.lr.ph.i_crit_edge:             ; preds = %if.then.i
  %.phi.trans.insert = bitcast double** %gradient_.i to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !135
  br label %for.body.lr.ph.i

if.then4.i:                                       ; preds = %if.then.i
  %3 = load double*, double** %gradient_.i, align 8, !tbaa !135
  %tobool.not.i = icmp eq double* %3, null
  br i1 %tobool.not.i, label %if.end11.i, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %if.then4.i
  %4 = bitcast double* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #43
  %.pre.i = load i32, i32* %max_gradient_.i, align 8, !tbaa !166
  br label %if.end11.i

if.end11.i:                                       ; preds = %delete.notnull.i, %if.then4.i
  %5 = phi i32 [ %.pre.i, %delete.notnull.i ], [ %1, %if.then4.i ]
  %conv.i = sext i32 %5 to i64
  %6 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i, i64 8)
  %7 = extractvalue { i64, i1 } %6, 1
  %8 = extractvalue { i64, i1 } %6, 0
  %9 = select i1 %7, i64 -1, i64 %8
  %call.i = tail call noalias nonnull i8* @_Znam(i64 %9) #44
  %10 = bitcast double** %gradient_.i to i8**
  store i8* %call.i, i8** %10, align 8, !tbaa !135
  store i32 %5, i32* %n_allocated_gradients_.i, align 4, !tbaa !174
  %cmp1320.i = icmp sgt i32 %5, 0
  br i1 %cmp1320.i, label %for.body.lr.ph.i, label %_ZN5adept5Stack20initialize_gradientsEv.exit

for.body.lr.ph.i:                                 ; preds = %if.end11.i, %if.then.i.for.body.lr.ph.i_crit_edge
  %11 = phi i8* [ %call.i, %if.end11.i ], [ %.pre, %if.then.i.for.body.lr.ph.i_crit_edge ]
  %12 = phi i32 [ %5, %if.end11.i ], [ %1, %if.then.i.for.body.lr.ph.i_crit_edge ]
  %13 = zext i32 %12 to i64
  %14 = shl nuw nsw i64 %13, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 %14, i1 false)
  br label %_ZN5adept5Stack20initialize_gradientsEv.exit

_ZN5adept5Stack20initialize_gradientsEv.exit:     ; preds = %for.body.lr.ph.i, %if.end11.i, %if.then
  store i8 1, i8* %gradients_initialized_.i, align 8, !tbaa !145
  br label %if.end

if.end:                                           ; preds = %_ZN5adept5Stack20initialize_gradientsEv.exit, %entry
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %15 = load i32, i32* %max_gradient_, align 8, !tbaa !166
  %cmp = icmp slt i32 %15, %end_plus_one
  br i1 %cmp, label %if.then2, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end
  %cmp1029 = icmp sgt i32 %end_plus_one, %start
  br i1 %cmp1029, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %16 = load double*, double** %gradient_, align 8, !tbaa !135
  %17 = sext i32 %start to i64
  %18 = sub i32 %end_plus_one, %start
  %wide.trip.count = zext i32 %18 to i64
  br label %for.body

if.then2:                                         ; preds = %if.end
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %19 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #37
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %21 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %20, %union.anon** %21, align 8, !tbaa !14
  %22 = bitcast %union.anon* %20 to i8*
  %23 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #37
  store i64 98, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i23 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %if.then2
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i23, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %24 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %24, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(98) %call5.i.i.i9.i23, i8* nonnull align 1 dereferenceable(98) getelementptr inbounds ([99 x i8], [99 x i8]* @.str.121, i64 0, i64 0), i64 98, i1 false) #37
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %24, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i23, i64 %24
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #37
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %25 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %26 = getelementptr inbounds i8, i8* %exception, i64 24
  %27 = bitcast i8* %message_.i.i.i to i8**
  store i8* %26, i8** %27, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i24 = getelementptr inbounds i8, i8* %exception, i64 16
  %28 = bitcast i8* %_M_string_length.i.i.i.i.i.i24 to i64*
  store i64 0, i64* %28, align 8, !tbaa !19
  store i8 0, i8* %26, align 1, !tbaa !21
  %29 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21gradient_out_of_rangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %25, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont5 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc
  %30 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8, !tbaa !127
  %31 = load i8*, i8** %27, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %31, %26
  br i1 %cmp.i.i.i.i.i, label %lpad4.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %31) #37
  br label %lpad4.body

invoke.cont5:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21gradient_out_of_rangeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad4.body.thread

ehcleanup.thread:                                 ; preds = %if.then2
  %32 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #37
  br label %cleanup.action

lpad4.body:                                       ; preds = %if.then.i.i.i.i, %lpad.i
  %33 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %33) #37
  %34 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %34, %22
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad4.body
  call void @_ZdlPv(i8* %34) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #37
  br label %cleanup.action

lpad4.body.thread:                                ; preds = %invoke.cont5
  %35 = landingpad { i8*, i32 }
          cleanup
  %36 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i37 = icmp eq i8* %36, %22
  br i1 %cmp.i.i.i37, label %ehcleanup.thread42, label %if.then.i.i

ehcleanup.thread42:                               ; preds = %lpad4.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad4.body.thread
  call void @_ZdlPv(i8* %36) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad4.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i.thread, %ehcleanup.thread
  %.pn28 = phi { i8*, i32 } [ %32, %ehcleanup.thread ], [ %30, %ehcleanup ], [ %30, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

for.cond.cleanup:                                 ; preds = %for.body, %for.cond.preheader
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv33 = phi i64 [ %17, %for.body.lr.ph ], [ %indvars.iv.next34, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds double, double* %gradient, i64 %indvars.iv
  %37 = load double, double* %arrayidx, align 8, !tbaa !61
  %arrayidx12 = getelementptr inbounds double, double* %16, i64 %indvars.iv33
  store double %37, double* %arrayidx12, align 8, !tbaa !61
  %indvars.iv.next34 = add nsw i64 %indvars.iv33, 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !334

eh.resume:                                        ; preds = %cleanup.action, %if.then.i.i, %ehcleanup.thread42
  %.pn27 = phi { i8*, i32 } [ %.pn28, %cleanup.action ], [ %35, %if.then.i.i ], [ %35, %ehcleanup.thread42 ]
  resume { i8*, i32 } %.pn27

unreachable:                                      ; preds = %invoke.cont5
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept21gradient_out_of_rangeD0Ev(%"class.adept::gradient_out_of_range"* nonnull dereferenceable(40) %this) unnamed_addr #31 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::gradient_out_of_range", %"class.adept::gradient_out_of_range"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !127
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::gradient_out_of_range", %"class.adept::gradient_out_of_range"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::gradient_out_of_range", %"class.adept::gradient_out_of_range"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #37
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %if.then.i.i.i, %entry
  %3 = getelementptr inbounds %"class.adept::gradient_out_of_range", %"class.adept::gradient_out_of_range"* %this, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #37
  %4 = bitcast %"class.adept::gradient_out_of_range"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK5adept5Stack13get_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32 %start, i32 %end_plus_one, double* %gradient) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i57 = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp10 = alloca %"class.std::__cxx11::basic_string", align 8
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  %0 = load i8, i8* %gradients_initialized_.i, align 8, !tbaa !145, !range !134
  %tobool.i.not = icmp eq i8 %0, 0
  br i1 %tobool.i.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #37
  %2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %2, %union.anon** %3, align 8, !tbaa !14
  %4 = bitcast %union.anon* %2 to i8*
  %5 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #37
  store i64 106, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i9.i42 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i9.i.noexc unwind label %ehcleanup.thread

call5.i.i.i9.i.noexc:                             ; preds = %if.then
  %_M_p.i13.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i42, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %6 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %6, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(106) %call5.i.i.i9.i42, i8* nonnull align 1 dereferenceable(106) getelementptr inbounds ([107 x i8], [107 x i8]* @.str.49, i64 0, i64 0), i64 106, i1 false) #37
  %_M_string_length.i.i.i.i.i.i41 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %6, i64* %_M_string_length.i.i.i.i.i.i41, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i9.i42, i64 %6
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #37
  %message_.i.i.i43 = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i.i43 to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i.i43 to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i44 = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i.i44 to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  %11 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept25gradients_not_initializedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont4 unwind label %lpad.i48

lpad.i48:                                         ; preds = %call5.i.i.i9.i.noexc
  %12 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !127
  %13 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i47 = icmp eq i8* %13, %8
  br i1 %cmp.i.i.i.i.i47, label %lpad3.body, label %if.then.i.i.i.i49

if.then.i.i.i.i49:                                ; preds = %lpad.i48
  call void @_ZdlPv(i8* %13) #37
  br label %lpad3.body

invoke.cont4:                                     ; preds = %call5.i.i.i9.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept25gradients_not_initializedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad3.body.thread

ehcleanup.thread:                                 ; preds = %if.then
  %14 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #37
  br label %cleanup.action

lpad3.body:                                       ; preds = %if.then.i.i.i.i49, %lpad.i48
  %15 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %15) #37
  %16 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i54 = icmp eq i8* %16, %4
  br i1 %cmp.i.i.i54, label %ehcleanup, label %if.then.i.i55.thread

if.then.i.i55.thread:                             ; preds = %lpad3.body
  call void @_ZdlPv(i8* %16) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #37
  br label %cleanup.action

lpad3.body.thread:                                ; preds = %invoke.cont4
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = load i8*, i8** %_M_p.i13.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i5486 = icmp eq i8* %18, %4
  br i1 %cmp.i.i.i5486, label %ehcleanup.thread91, label %if.then.i.i55

ehcleanup.thread91:                               ; preds = %lpad3.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #37
  br label %eh.resume

if.then.i.i55:                                    ; preds = %lpad3.body.thread
  call void @_ZdlPv(i8* %18) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #37
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad3.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #37
  br label %cleanup.action

cleanup.action:                                   ; preds = %ehcleanup, %if.then.i.i55.thread, %ehcleanup.thread
  %.pn74 = phi { i8*, i32 } [ %14, %ehcleanup.thread ], [ %12, %ehcleanup ], [ %12, %if.then.i.i55.thread ]
  call void @__cxa_free_exception(i8* %exception) #37
  br label %eh.resume

if.end:                                           ; preds = %entry
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %19 = load i32, i32* %max_gradient_, align 8, !tbaa !166
  %cmp = icmp slt i32 %19, %end_plus_one
  br i1 %cmp, label %if.then8, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end
  %cmp2678 = icmp sgt i32 %end_plus_one, %start
  br i1 %cmp2678, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %20 = load double*, double** %gradient_, align 8, !tbaa !135
  %21 = sext i32 %start to i64
  %22 = sub i32 %end_plus_one, %start
  %wide.trip.count = zext i32 %22 to i64
  br label %for.body

if.then8:                                         ; preds = %if.end
  %exception9 = tail call i8* @__cxa_allocate_exception(i64 40) #37
  %23 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #37
  %24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp10, i64 0, i32 2
  %25 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp10 to %union.anon**
  store %union.anon* %24, %union.anon** %25, align 8, !tbaa !14
  %26 = bitcast %union.anon* %24 to i8*
  %27 = bitcast i64* %__dnew.i.i.i.i57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #37
  store i64 98, i64* %__dnew.i.i.i.i57, align 8, !tbaa !20
  %call5.i.i.i9.i70 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp10, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i57, i64 0)
          to label %call5.i.i.i9.i.noexc69 unwind label %ehcleanup18.thread

call5.i.i.i9.i.noexc69:                           ; preds = %if.then8
  %_M_p.i13.i.i.i.i60 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp10, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i9.i70, i8** %_M_p.i13.i.i.i.i60, align 8, !tbaa !17
  %28 = load i64, i64* %__dnew.i.i.i.i57, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i61 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp10, i64 0, i32 2, i32 0
  store i64 %28, i64* %_M_allocated_capacity.i.i.i.i.i61, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(98) %call5.i.i.i9.i70, i8* nonnull align 1 dereferenceable(98) getelementptr inbounds ([99 x i8], [99 x i8]* @.str.121, i64 0, i64 0), i64 98, i1 false) #37
  %_M_string_length.i.i.i.i.i.i67 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp10, i64 0, i32 1
  store i64 %28, i64* %_M_string_length.i.i.i.i.i.i67, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i68 = getelementptr inbounds i8, i8* %call5.i.i.i9.i70, i64 %28
  store i8 0, i8* %arrayidx.i.i.i.i.i68, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #37
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception9, i64 8
  %29 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %30 = getelementptr inbounds i8, i8* %exception9, i64 24
  %31 = bitcast i8* %message_.i.i.i to i8**
  store i8* %30, i8** %31, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds i8, i8* %exception9, i64 16
  %32 = bitcast i8* %_M_string_length.i.i.i.i.i.i to i64*
  store i64 0, i64* %32, align 8, !tbaa !19
  store i8 0, i8* %30, align 1, !tbaa !21
  %33 = bitcast i8* %exception9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21gradient_out_of_rangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8, !tbaa !127
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %29, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp10)
          to label %invoke.cont15 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i9.i.noexc69
  %34 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8, !tbaa !127
  %35 = load i8*, i8** %31, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %35, %30
  br i1 %cmp.i.i.i.i.i, label %lpad14.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %35) #37
  br label %lpad14.body

invoke.cont15:                                    ; preds = %call5.i.i.i9.i.noexc69
  invoke void @__cxa_throw(i8* nonnull %exception9, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21gradient_out_of_rangeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #39
          to label %unreachable unwind label %lpad14.body.thread

ehcleanup18.thread:                               ; preds = %if.then8
  %36 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #37
  br label %cleanup.action23

lpad14.body:                                      ; preds = %if.then.i.i.i.i, %lpad.i
  %37 = bitcast i8* %exception9 to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %37) #37
  %38 = load i8*, i8** %_M_p.i13.i.i.i.i60, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %38, %26
  br i1 %cmp.i.i.i, label %ehcleanup18, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad14.body
  call void @_ZdlPv(i8* %38) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #37
  br label %cleanup.action23

lpad14.body.thread:                               ; preds = %invoke.cont15
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = load i8*, i8** %_M_p.i13.i.i.i.i60, align 8, !tbaa !17
  %cmp.i.i.i96 = icmp eq i8* %40, %26
  br i1 %cmp.i.i.i96, label %ehcleanup18.thread101, label %if.then.i.i

ehcleanup18.thread101:                            ; preds = %lpad14.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #37
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad14.body.thread
  call void @_ZdlPv(i8* %40) #37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #37
  br label %eh.resume

ehcleanup18:                                      ; preds = %lpad14.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #37
  br label %cleanup.action23

cleanup.action23:                                 ; preds = %ehcleanup18, %if.then.i.i.thread, %ehcleanup18.thread
  %.pn3877 = phi { i8*, i32 } [ %36, %ehcleanup18.thread ], [ %34, %ehcleanup18 ], [ %34, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception9) #37
  br label %eh.resume

for.cond.cleanup:                                 ; preds = %for.body, %for.cond.preheader
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph
  %indvars.iv82 = phi i64 [ %21, %for.body.lr.ph ], [ %indvars.iv.next83, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds double, double* %20, i64 %indvars.iv82
  %41 = load double, double* %arrayidx, align 8, !tbaa !61
  %arrayidx28 = getelementptr inbounds double, double* %gradient, i64 %indvars.iv
  store double %41, double* %arrayidx28, align 8, !tbaa !61
  %indvars.iv.next83 = add nsw i64 %indvars.iv82, 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !335

eh.resume:                                        ; preds = %cleanup.action23, %if.then.i.i, %ehcleanup18.thread101, %cleanup.action, %if.then.i.i55, %ehcleanup.thread91
  %.pn38.pn = phi { i8*, i32 } [ %.pn3877, %cleanup.action23 ], [ %.pn74, %cleanup.action ], [ %17, %if.then.i.i55 ], [ %39, %if.then.i.i ], [ %17, %ehcleanup.thread91 ], [ %39, %ehcleanup18.thread101 ]
  resume { i8*, i32 } %.pn38.pn

unreachable:                                      ; preds = %invoke.cont15, %invoke.cont4
  unreachable
}

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_lstm.cpp() #0 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull dereferenceable(1) @_ZStL8__ioinit)
  %0 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #37
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i16 8236, i16* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 2) to i16*), align 8
  store i64 2, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 2) to i8*), i64 2), align 2, !tbaa !21
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E to i8*), i8* nonnull @__dso_handle) #37
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i8 123, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !21
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !21
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E to i8*), i8* nonnull @__dso_handle) #37
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i8 125, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !21
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !21
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E to i8*), i8* nonnull @__dso_handle) #37
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i8 123, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !21
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !21
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E to i8*), i8* nonnull @__dso_handle) #37
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i8 125, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !21
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !21
  %5 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E to i8*), i8* nonnull @__dso_handle) #37
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i16 8236, i16* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 2) to i16*), align 8
  store i64 2, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 2) to i8*), i64 2), align 2, !tbaa !21
  %6 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E to i8*), i8* nonnull @__dso_handle) #37
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i16 2604, i16* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 2) to i16*), align 8
  store i64 2, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 2) to i8*), i64 2), align 2, !tbaa !21
  %7 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E to i8*), i8* nonnull @__dso_handle) #37
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i16 31498, i16* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 2) to i16*), align 8
  store i64 2, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 2) to i8*), i64 2), align 2, !tbaa !21
  %8 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E to i8*), i8* nonnull @__dso_handle) #37
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i8 125, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !21
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !21
  %9 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E to i8*), i8* nonnull @__dso_handle) #37
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E to %union.anon**), align 8, !tbaa !14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(12) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(12) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i64 0, i64 0), i64 12, i1 false) #37
  store i64 12, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 2, i32 1, i64 4), align 4, !tbaa !21
  %10 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E to i8*), i8* nonnull @__dso_handle) #37
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E to %union.anon**), align 8, !tbaa !14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(7) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0), i64 7, i1 false) #37
  store i64 7, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 2) to i8*), i64 7), align 1, !tbaa !21
  %11 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E to i8*), i8* nonnull @__dso_handle) #37
  ret void
}

; Function Attrs: uwtable willreturn
define weak_odr hidden %"class.adept::Stack"** @_ZTWN5adept21_stack_current_threadE() local_unnamed_addr #35 comdat {
  ret %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE
}

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #8

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #36

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @preprocess_lstm_objective(i32 %l, i32 %c, i32 %b, double* noalias nocapture readonly %main_params, double* noalias nocapture readonly %extra_params, double* noalias nocapture %state, double* noalias nocapture readonly %sequence, double* noalias nocapture %loss) #6 {
entry:
  %conv = zext i32 %b to i64
  %mul = shl nuw nsw i64 %conv, 3
  %call = tail call noalias i8* @malloc(i64 %mul) #37
  %0 = bitcast i8* %call to double*
  %call3 = tail call noalias i8* @malloc(i64 %mul) #37
  %1 = bitcast i8* %call3 to double*
  %cmp = icmp sgt i32 %b, 0
  tail call void @llvm.assume(i1 %cmp)
  %sub = add nsw i32 %c, -1
  %mul4 = mul nsw i32 %sub, %b
  %cmp6.not.not83 = icmp sgt i32 %mul4, 0
  br i1 %cmp6.not.not83, label %for.body.preheader.i.lr.ph, label %for.end32

for.body.preheader.i.lr.ph:                       ; preds = %entry
  %mul6.i = shl nsw i32 %l, 1
  %mul7.i = mul nsw i32 %mul6.i, %b
  %cmp8.not.not83.i = icmp sgt i32 %mul7.i, 0
  %2 = shl nuw i32 %b, 1
  %3 = sext i32 %2 to i64
  %4 = zext i32 %mul7.i to i64
  %5 = zext i32 %2 to i64
  br label %for.body.preheader.i

for.body.preheader.i:                             ; preds = %for.end28, %for.body.preheader.i.lr.ph
  %tiv = phi i64 [ %tiv.next, %for.end28 ], [ 0, %for.body.preheader.i.lr.ph ]
  %total.086 = phi double [ 0.000000e+00, %for.body.preheader.i.lr.ph ], [ %add25, %for.end28 ]
  %6 = mul i64 %conv, %tiv
  %scevgep = getelementptr double, double* %sequence, i64 %6
  %7 = mul i64 %conv, %tiv
  %8 = trunc i64 %7 to i32
  %9 = mul i64 %conv, %tiv
  %tiv.next = add nuw nsw i64 %tiv, 1
  tail call void @llvm.experimental.noalias.scope.decl(metadata !79)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !82)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !84)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !86)
  br label %for.body.i

for.cond5.preheader.i:                            ; preds = %for.body.i
  br i1 %cmp8.not.not83.i, label %for.body9.i.preheader, label %for.body29.lr.ph.i

for.body9.i.preheader:                            ; preds = %for.cond5.preheader.i
  br label %for.body9.i

for.body.i:                                       ; preds = %for.body.i, %for.body.preheader.i
  %indvars.iv93.i = phi i64 [ 0, %for.body.preheader.i ], [ %indvars.iv.next94.i, %for.body.i ]
  %arrayidx.i = getelementptr inbounds double, double* %scevgep, i64 %indvars.iv93.i
  %10 = load double, double* %arrayidx.i, align 8, !tbaa !61, !alias.scope !84, !noalias !88
  %arrayidx2.i = getelementptr inbounds double, double* %extra_params, i64 %indvars.iv93.i
  %11 = load double, double* %arrayidx2.i, align 8, !tbaa !61, !alias.scope !79, !noalias !90
  %mul.i = fmul fast double %11, %10
  %arrayidx4.i = getelementptr inbounds double, double* %0, i64 %indvars.iv93.i
  store double %mul.i, double* %arrayidx4.i, align 8, !tbaa !61, !alias.scope !86, !noalias !91
  %indvars.iv.next94.i = add nuw nsw i64 %indvars.iv93.i, 1
  %exitcond96.not.i = icmp eq i64 %indvars.iv.next94.i, %conv
  br i1 %exitcond96.not.i, label %for.cond5.preheader.i, label %for.body.i, !llvm.loop !76

for.body29.lr.ph.i.loopexit:                      ; preds = %for.body9.i
  br label %for.body29.lr.ph.i

for.body29.lr.ph.i:                               ; preds = %for.body29.lr.ph.i.loopexit, %for.cond5.preheader.i
  %xp.0.lcssa.i = phi double* [ %0, %for.cond5.preheader.i ], [ %arrayidx17.i, %for.body29.lr.ph.i.loopexit ]
  br label %for.body29.i

for.body9.i:                                      ; preds = %for.body9.i, %for.body9.i.preheader
  %indvars.iv90.i = phi i64 [ %indvars.iv.next91.i, %for.body9.i ], [ 0, %for.body9.i.preheader ]
  %xp.085.i = phi double* [ %arrayidx17.i, %for.body9.i ], [ %0, %for.body9.i.preheader ]
  %12 = trunc i64 %indvars.iv90.i to i32
  %mul10.i = shl nsw i32 %12, 2
  %idxprom11.i = sext i32 %mul10.i to i64
  %arrayidx12.i = getelementptr inbounds double, double* %main_params, i64 %idxprom11.i
  %13 = add nsw i64 %indvars.iv90.i, %conv
  %14 = trunc i64 %13 to i32
  %mul13.i = shl nsw i32 %14, 2
  %idxprom14.i = sext i32 %mul13.i to i64
  %arrayidx15.i = getelementptr inbounds double, double* %main_params, i64 %idxprom14.i
  %arrayidx17.i = getelementptr inbounds double, double* %state, i64 %indvars.iv90.i
  %arrayidx20.i = getelementptr inbounds double, double* %state, i64 %13
  tail call void @lstm_model(i32 %b, double* %arrayidx12.i, double* %arrayidx15.i, double* %arrayidx17.i, double* %arrayidx20.i, double* %xp.085.i) #37, !noalias !92
  %indvars.iv.next91.i = add i64 %indvars.iv90.i, %3
  %cmp8.not.not.i = icmp slt i64 %indvars.iv.next91.i, %4
  br i1 %cmp8.not.not.i, label %for.body9.i, label %for.body29.lr.ph.i.loopexit, !llvm.loop !77

for.body29.i:                                     ; preds = %for.body29.i, %for.body29.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body29.lr.ph.i ], [ %indvars.iv.next.i, %for.body29.i ]
  %arrayidx31.i = getelementptr inbounds double, double* %xp.0.lcssa.i, i64 %indvars.iv.i
  %15 = load double, double* %arrayidx31.i, align 8, !tbaa !61, !alias.scope !93, !noalias !94
  %16 = add nuw nsw i64 %indvars.iv.i, %conv
  %arrayidx34.i = getelementptr inbounds double, double* %extra_params, i64 %16
  %17 = load double, double* %arrayidx34.i, align 8, !tbaa !61, !alias.scope !79, !noalias !90
  %mul35.i = fmul fast double %17, %15
  %18 = add nuw nsw i64 %indvars.iv.i, %5
  %arrayidx39.i = getelementptr inbounds double, double* %extra_params, i64 %18
  %19 = load double, double* %arrayidx39.i, align 8, !tbaa !61, !alias.scope !79, !noalias !90
  %add40.i = fadd fast double %mul35.i, %19
  %arrayidx42.i = getelementptr inbounds double, double* %0, i64 %indvars.iv.i
  store double %add40.i, double* %arrayidx42.i, align 8, !tbaa !61, !alias.scope !86, !noalias !91
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %conv
  br i1 %exitcond.not.i, label %for.body.i77.preheader, label %for.body29.i, !llvm.loop !78

for.body.i77.preheader:                           ; preds = %for.body29.i
  br label %for.body.i77

for.body.i77:                                     ; preds = %for.body.i77, %for.body.i77.preheader
  %indvars.iv.i73 = phi i64 [ %indvars.iv.next.i75, %for.body.i77 ], [ 0, %for.body.i77.preheader ]
  %sum.09.i = phi double [ %add.i, %for.body.i77 ], [ 0.000000e+00, %for.body.i77.preheader ]
  %arrayidx.i74 = getelementptr inbounds double, double* %0, i64 %indvars.iv.i73
  %20 = load double, double* %arrayidx.i74, align 8, !tbaa !61
  %21 = tail call fast double @llvm.exp.f64(double %20) #37
  %add.i = fadd fast double %21, %sum.09.i
  %indvars.iv.next.i75 = add nuw nsw i64 %indvars.iv.i73, 1
  %exitcond.not.i76 = icmp eq i64 %indvars.iv.next.i75, %conv
  br i1 %exitcond.not.i76, label %for.body10.preheader, label %for.body.i77, !llvm.loop !72

for.body10.preheader:                             ; preds = %for.body.i77
  %phi.bo.i = fadd fast double %add.i, 2.000000e+00
  %22 = tail call fast double @llvm.log.f64(double %phi.bo.i) #37
  br label %for.body10

for.body10:                                       ; preds = %for.body10, %for.body10.preheader
  %indvars.iv = phi i64 [ 0, %for.body10.preheader ], [ %indvars.iv.next, %for.body10 ]
  %arrayidx11 = getelementptr inbounds double, double* %0, i64 %indvars.iv
  %23 = load double, double* %arrayidx11, align 8, !tbaa !61
  %sub12 = fsub fast double %23, %22
  %arrayidx14 = getelementptr inbounds double, double* %1, i64 %indvars.iv
  store double %sub12, double* %arrayidx14, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %conv
  br i1 %exitcond.not, label %for.body19.preheader, label %for.body10, !llvm.loop !95

for.body19.preheader:                             ; preds = %for.body10
  %indvars.iv.next95 = add i64 %9, %conv
  %add = add nuw nsw i32 %8, %b
  %arrayidx16 = getelementptr inbounds double, double* %sequence, i64 %indvars.iv.next95
  br label %for.body19

for.body19:                                       ; preds = %for.body19, %for.body19.preheader
  %indvars.iv90 = phi i64 [ 0, %for.body19.preheader ], [ %indvars.iv.next91, %for.body19 ]
  %total.181 = phi double [ %total.086, %for.body19.preheader ], [ %add25, %for.body19 ]
  %arrayidx21 = getelementptr inbounds double, double* %arrayidx16, i64 %indvars.iv90
  %24 = load double, double* %arrayidx21, align 8, !tbaa !61
  %arrayidx23 = getelementptr inbounds double, double* %1, i64 %indvars.iv90
  %25 = load double, double* %arrayidx23, align 8, !tbaa !61
  %mul24 = fmul fast double %25, %24
  %add25 = fadd fast double %mul24, %total.181
  %indvars.iv.next91 = add nuw nsw i64 %indvars.iv90, 1
  %exitcond93.not = icmp eq i64 %indvars.iv.next91, %conv
  br i1 %exitcond93.not, label %for.end28, label %for.body19, !llvm.loop !96

for.end28:                                        ; preds = %for.body19
  %26 = trunc i64 %indvars.iv.next95 to i32
  %cmp6.not.not = icmp sgt i32 %mul4, %26
  br i1 %cmp6.not.not, label %for.body.preheader.i, label %for.end32.loopexit, !llvm.loop !97

for.end32.loopexit:                               ; preds = %for.end28
  %phi.cast = sitofp i32 %add to double
  br label %for.end32

for.end32:                                        ; preds = %for.end32.loopexit, %entry
  %count.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %phi.cast, %for.end32.loopexit ]
  %total.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add25, %for.end32.loopexit ]
  %fneg = fneg fast double %total.0.lcssa
  %div = fdiv fast double %fneg, %count.0.lcssa
  store double %div, double* %loss, align 8, !tbaa !61
  tail call void @free(i8* %call) #37
  tail call void @free(i8* %call3) #37
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define internal void @diffelstm_objective(i32 %l, i32 %c, i32 %b, double* noalias nocapture readonly %main_params, double* nocapture %"main_params'", double* noalias nocapture readonly %extra_params, double* nocapture %"extra_params'", double* noalias nocapture %state, double* noalias nocapture readonly %sequence, double* noalias nocapture %loss, double* nocapture %"loss'") #6 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"iv1'ac" = alloca i64, align 8
  %"iv3'ac" = alloca i64, align 8
  %"iv5'ac" = alloca i64, align 8
  %"iv7'ac" = alloca i64, align 8
  %"iv9'ac" = alloca i64, align 8
  %"iv11'ac" = alloca i64, align 8
  %"total.086'de" = alloca double, align 8
  store double 0.000000e+00, double* %"total.086'de", align 8
  %"add25'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add25'de", align 8
  %"mul.i'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul.i'de", align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %xp.085.i_cache = alloca double**, align 8
  %_cache = alloca double**, align 8
  %_augmented_cache = alloca { i8*, i8*, double*, double*, double*, double* }*, align 8
  %"add40.i'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add40.i'de", align 8
  %"mul35.i'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul35.i'de", align 8
  %"'de47" = alloca double, align 8
  store double 0.000000e+00, double* %"'de47", align 8
  %_cache51 = alloca double*, align 8
  %"'de66" = alloca double, align 8
  store double 0.000000e+00, double* %"'de66", align 8
  %"'de67" = alloca double, align 8
  store double 0.000000e+00, double* %"'de67", align 8
  %"add.i'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add.i'de", align 8
  %"'de83" = alloca double, align 8
  store double 0.000000e+00, double* %"'de83", align 8
  %"sum.09.i'de" = alloca double, align 8
  store double 0.000000e+00, double* %"sum.09.i'de", align 8
  %_cache86 = alloca double*, align 8
  %"'de99" = alloca double, align 8
  store double 0.000000e+00, double* %"'de99", align 8
  %"'de100" = alloca double, align 8
  store double 0.000000e+00, double* %"'de100", align 8
  %"add.i!manual_lcssa_cache" = alloca double*, align 8
  %"phi.bo.i'de" = alloca double, align 8
  store double 0.000000e+00, double* %"phi.bo.i'de", align 8
  %"sub12'de" = alloca double, align 8
  store double 0.000000e+00, double* %"sub12'de", align 8
  %"'de112" = alloca double, align 8
  store double 0.000000e+00, double* %"'de112", align 8
  %"mul24'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul24'de", align 8
  %"total.181'de" = alloca double, align 8
  store double 0.000000e+00, double* %"total.181'de", align 8
  %"'de117" = alloca double, align 8
  store double 0.000000e+00, double* %"'de117", align 8
  %"div'de" = alloca double, align 8
  store double 0.000000e+00, double* %"div'de", align 8
  %"fneg'de" = alloca double, align 8
  store double 0.000000e+00, double* %"fneg'de", align 8
  %"total.0.lcssa'de" = alloca double, align 8
  store double 0.000000e+00, double* %"total.0.lcssa'de", align 8
  %conv = zext i32 %b to i64
  %mul = shl nuw nsw i64 %conv, 3
  %call = tail call noalias i8* @malloc(i64 %mul) #37
  %call84 = bitcast i8* %call to double*
  %"call'mi" = tail call noalias nonnull i8* @malloc(i64 %mul) #37
  call void @llvm.memset.p0i8.i64(i8* nonnull %"call'mi", i8 0, i64 %mul, i1 false)
  %"'ipc" = bitcast i8* %"call'mi" to double*
  %0 = bitcast i8* %call to double*
  %call3 = tail call noalias i8* @malloc(i64 %mul) #37
  %"call3'mi" = tail call noalias nonnull i8* @malloc(i64 %mul) #37
  call void @llvm.memset.p0i8.i64(i8* nonnull %"call3'mi", i8 0, i64 %mul, i1 false)
  %"'ipc111" = bitcast i8* %"call3'mi" to double*
  %1 = bitcast i8* %call3 to double*
  %cmp = icmp sgt i32 %b, 0
  tail call void @llvm.assume(i1 %cmp)
  %sub = add nsw i32 %c, -1
  %mul4 = mul nsw i32 %sub, %b
  %cmp6.not.not83 = icmp sgt i32 %mul4, 0
  br i1 %cmp6.not.not83, label %for.body.preheader.i.lr.ph, label %for.end32

for.body.preheader.i.lr.ph:                       ; preds = %entry
  %mul6.i = shl nsw i32 %l, 1, !node !336
  %2 = bitcast [6 x i8]* @ResultFormatStrIR to i8*
  %3 = call i32 (i8*, ...) @printf(i8* %2)
  %mul7.i = mul nsw i32 %mul6.i, %b, !node !336
  %4 = bitcast [6 x i8]* @ResultFormatStrIR to i8*
  %5 = call i32 (i8*, ...) @printf(i8* %4)
  %cmp8.not.not83.i = icmp sgt i32 %mul7.i, 0
  %6 = shl nuw i32 %b, 1
  %7 = sext i32 %6 to i64
  %8 = zext i32 %mul7.i to i64
  %9 = zext i32 %6 to i64
  %10 = add i32 %c, -1
  %11 = mul i32 %b, %10
  %12 = add i32 %11, -1
  %13 = zext i32 %12 to i64
  %14 = udiv i64 %13, %conv
  %15 = add nsw i64 %conv, -1
  %16 = add nsw i64 %8, -1
  %17 = add nsw i64 %conv, -1
  %18 = add nsw i64 %conv, -1
  %19 = add nsw i64 %conv, -1
  %20 = add nsw i64 %conv, -1
  %21 = add nuw i64 %14, 1
  %_unwrap28 = udiv i64 %16, %7
  %22 = add nuw i64 %_unwrap28, 1
  %23 = mul nuw nsw i64 %22, %21
  %mallocsize = mul nuw nsw i64 %23, 8
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %mallocsize)
  %xp.085.i_malloccache = bitcast i8* %malloccall to double**
  store double** %xp.085.i_malloccache, double*** %xp.085.i_cache, align 8, !invariant.group !337
  %mallocsize41 = mul nuw nsw i64 %23, 8
  %malloccall42 = tail call noalias nonnull i8* @malloc(i64 %mallocsize41)
  %_malloccache = bitcast i8* %malloccall42 to double**
  store double** %_malloccache, double*** %_cache, align 8, !invariant.group !338
  %mallocsize44 = mul nuw nsw i64 %23, 48
  %malloccall45 = tail call noalias nonnull i8* @malloc(i64 %mallocsize44)
  %_augmented_malloccache = bitcast i8* %malloccall45 to { i8*, i8*, double*, double*, double*, double* }*
  store { i8*, i8*, double*, double*, double*, double* }* %_augmented_malloccache, { i8*, i8*, double*, double*, double*, double* }** %_augmented_cache, align 8, !invariant.group !339
  %24 = add nuw i64 %17, 1
  %25 = mul nuw nsw i64 %24, %21
  %mallocsize52 = mul nuw nsw i64 %25, 8
  %malloccall53 = tail call noalias nonnull i8* @malloc(i64 %mallocsize52)
  %_malloccache54 = bitcast i8* %malloccall53 to double*
  store double* %_malloccache54, double** %_cache51, align 8, !invariant.group !340
  %_unwrap85 = add nuw nsw i64 %18, 1
  %26 = mul nuw nsw i64 1, %21
  %27 = mul nuw nsw i64 %26, %_unwrap85
  %mallocsize87 = mul nuw nsw i64 %27, 8
  %malloccall88 = tail call noalias nonnull i8* @malloc(i64 %mallocsize87)
  %_malloccache89 = bitcast i8* %malloccall88 to double*
  store double* %_malloccache89, double** %_cache86, align 8, !invariant.group !341
  %mallocsize101 = mul nuw nsw i64 %21, 8
  %malloccall102 = tail call noalias nonnull i8* @malloc(i64 %mallocsize101)
  %"add.i!manual_lcssa_malloccache" = bitcast i8* %malloccall102 to double*
  store double* %"add.i!manual_lcssa_malloccache", double** %"add.i!manual_lcssa_cache", align 8, !invariant.group !342
  br label %for.body.preheader.i

for.body.preheader.i:                             ; preds = %for.end28, %for.body.preheader.i.lr.ph
  %iv = phi i64 [ %iv.next, %for.end28 ], [ 0, %for.body.preheader.i.lr.ph ]
  %total.086 = phi double [ 0.000000e+00, %for.body.preheader.i.lr.ph ], [ %add25, %for.end28 ]
  %iv.next = add nuw nsw i64 %iv, 1
  %28 = mul i64 %conv, %iv
  %scevgep = getelementptr double, double* %sequence, i64 %28
  %29 = mul i64 %conv, %iv
  %30 = trunc i64 %29 to i32
  %31 = mul i64 %conv, %iv
  tail call void @llvm.experimental.noalias.scope.decl(metadata !79)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !82)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !84)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !86)
  br label %for.body.i

for.cond5.preheader.i:                            ; preds = %for.body.i
  br i1 %cmp8.not.not83.i, label %for.body9.i.preheader, label %for.body29.lr.ph.i

for.body9.i.preheader:                            ; preds = %for.cond5.preheader.i
  %32 = udiv i64 %16, %7
  br label %for.body9.i

for.body.i:                                       ; preds = %for.body.i, %for.body.preheader.i
  %iv1 = phi i64 [ %iv.next2, %for.body.i ], [ 0, %for.body.preheader.i ]
  %iv.next2 = add nuw nsw i64 %iv1, 1
  %arrayidx.i = getelementptr inbounds double, double* %scevgep, i64 %iv1
  %33 = load double, double* %arrayidx.i, align 8, !tbaa !61, !alias.scope !84, !noalias !88, !invariant.group !343
  %"arrayidx2.i'ipg" = getelementptr inbounds double, double* %"extra_params'", i64 %iv1
  %arrayidx2.i = getelementptr inbounds double, double* %extra_params, i64 %iv1
  %34 = load double, double* %arrayidx2.i, align 8, !tbaa !61, !alias.scope !79, !noalias !90
  %mul.i = fmul fast double %34, %33
  %"arrayidx4.i'ipg" = getelementptr inbounds double, double* %"'ipc", i64 %iv1
  %arrayidx4.i = getelementptr inbounds double, double* %0, i64 %iv1
  store double %mul.i, double* %arrayidx4.i, align 8, !tbaa !61, !alias.scope !86, !noalias !91
  %exitcond96.not.i = icmp eq i64 %iv.next2, %conv
  br i1 %exitcond96.not.i, label %for.cond5.preheader.i, label %for.body.i, !llvm.loop !76

for.body29.lr.ph.i.loopexit:                      ; preds = %for.body9.i
  %"arrayidx17.i!manual_lcssa" = phi double* [ %arrayidx17.i, %for.body9.i ]
  br label %for.body29.lr.ph.i

for.body29.lr.ph.i:                               ; preds = %for.body29.lr.ph.i.loopexit, %for.cond5.preheader.i
  %"!manual_lcssa73" = phi i64 [ %48, %for.body29.lr.ph.i.loopexit ], [ undef, %for.cond5.preheader.i ]
  %"arrayidx17.i!manual_lcssa72" = phi double* [ %arrayidx17.i, %for.body29.lr.ph.i.loopexit ], [ undef, %for.cond5.preheader.i ]
  %35 = phi double* [ %"'ipc", %for.cond5.preheader.i ], [ %arrayidx17.i, %for.body29.lr.ph.i.loopexit ]
  %xp.0.lcssa.i = phi double* [ %0, %for.cond5.preheader.i ], [ %arrayidx17.i, %for.body29.lr.ph.i.loopexit ]
  %36 = add nuw nsw i64 %17, 1
  br label %for.body29.i

for.body9.i:                                      ; preds = %for.body9.i, %for.body9.i.preheader
  %iv3 = phi i64 [ %iv.next4, %for.body9.i ], [ 0, %for.body9.i.preheader ]
  %37 = phi double* [ %arrayidx17.i, %for.body9.i ], [ %"'ipc", %for.body9.i.preheader ]
  %xp.085.i = phi double* [ %arrayidx17.i, %for.body9.i ], [ %0, %for.body9.i.preheader ]
  %38 = load double**, double*** %xp.085.i_cache, align 8, !dereferenceable !344, !invariant.group !337
  %39 = mul nuw nsw i64 %22, %21
  %40 = mul nuw nsw i64 %iv, %22
  %41 = add nuw nsw i64 %iv3, %40
  %42 = getelementptr inbounds double*, double** %38, i64 %41
  store double* %xp.085.i, double** %42, align 8, !invariant.group !345
  %43 = load double**, double*** %_cache, align 8, !dereferenceable !344, !invariant.group !338
  %44 = mul nuw nsw i64 %22, %21
  %45 = mul nuw nsw i64 %iv, %22
  %46 = add nuw nsw i64 %iv3, %45
  %47 = getelementptr inbounds double*, double** %43, i64 %46
  store double* %37, double** %47, align 8, !invariant.group !346
  %48 = mul i64 %7, %iv3
  %iv.next4 = add nuw nsw i64 %iv3, 1
  %49 = trunc i64 %48 to i32
  %mul10.i = shl nsw i32 %49, 2
  %idxprom11.i = sext i32 %mul10.i to i64
  %"arrayidx12.i'ipg" = getelementptr inbounds double, double* %"main_params'", i64 %idxprom11.i
  %arrayidx12.i = getelementptr inbounds double, double* %main_params, i64 %idxprom11.i
  %50 = add nsw i64 %48, %conv
  %51 = trunc i64 %50 to i32
  %mul13.i = shl nsw i32 %51, 2
  %idxprom14.i = sext i32 %mul13.i to i64
  %"arrayidx15.i'ipg" = getelementptr inbounds double, double* %"main_params'", i64 %idxprom14.i
  %arrayidx15.i = getelementptr inbounds double, double* %main_params, i64 %idxprom14.i
  %arrayidx17.i = getelementptr inbounds double, double* %state, i64 %48
  %arrayidx20.i = getelementptr inbounds double, double* %state, i64 %50
  %_augmented = call { i8*, i8*, double*, double*, double*, double* } @augmented_lstm_model(i32 %b, double* %arrayidx12.i, double* %"arrayidx12.i'ipg", double* %arrayidx15.i, double* %"arrayidx15.i'ipg", double* %arrayidx17.i, double* %arrayidx20.i, double* %xp.085.i, double* %37)
  %52 = load { i8*, i8*, double*, double*, double*, double* }*, { i8*, i8*, double*, double*, double*, double* }** %_augmented_cache, align 8, !dereferenceable !344, !invariant.group !339
  %53 = mul nuw nsw i64 %22, %21
  %54 = mul nuw nsw i64 %iv, %22
  %55 = add nuw nsw i64 %iv3, %54
  %56 = getelementptr inbounds { i8*, i8*, double*, double*, double*, double* }, { i8*, i8*, double*, double*, double*, double* }* %52, i64 %55
  store { i8*, i8*, double*, double*, double*, double* } %_augmented, { i8*, i8*, double*, double*, double*, double* }* %56, align 8, !invariant.group !347
  %indvars.iv.next91.i = add i64 %48, %7
  %cmp8.not.not.i = icmp slt i64 %indvars.iv.next91.i, %8
  br i1 %cmp8.not.not.i, label %for.body9.i, label %for.body29.lr.ph.i.loopexit, !llvm.loop !77

for.body29.i:                                     ; preds = %for.body29.i, %for.body29.lr.ph.i
  %"!manual_lcssa" = phi i64 [ %"!manual_lcssa", %for.body29.i ], [ %"!manual_lcssa73", %for.body29.lr.ph.i ]
  %"arrayidx17.i!manual_lcssa71" = phi double* [ %"arrayidx17.i!manual_lcssa71", %for.body29.i ], [ %"arrayidx17.i!manual_lcssa72", %for.body29.lr.ph.i ]
  %iv5 = phi i64 [ %iv.next6, %for.body29.i ], [ 0, %for.body29.lr.ph.i ]
  %iv.next6 = add nuw nsw i64 %iv5, 1
  %"arrayidx31.i'ipg" = getelementptr inbounds double, double* %35, i64 %iv5
  %arrayidx31.i = getelementptr inbounds double, double* %xp.0.lcssa.i, i64 %iv5
  %57 = load double, double* %arrayidx31.i, align 8, !tbaa !61, !alias.scope !93, !noalias !94
  %58 = add nuw nsw i64 %iv5, %conv
  %"arrayidx34.i'ipg" = getelementptr inbounds double, double* %"extra_params'", i64 %58
  %arrayidx34.i = getelementptr inbounds double, double* %extra_params, i64 %58
  %59 = load double, double* %arrayidx34.i, align 8, !tbaa !61, !alias.scope !79, !noalias !90, !invariant.group !348
  %mul35.i = fmul fast double %59, %57
  %60 = add nuw nsw i64 %iv5, %9
  %"arrayidx39.i'ipg" = getelementptr inbounds double, double* %"extra_params'", i64 %60
  %arrayidx39.i = getelementptr inbounds double, double* %extra_params, i64 %60
  %61 = load double, double* %arrayidx39.i, align 8, !tbaa !61, !alias.scope !79, !noalias !90
  %add40.i = fadd fast double %mul35.i, %61
  %"arrayidx42.i'ipg" = getelementptr inbounds double, double* %"'ipc", i64 %iv5
  %arrayidx42.i = getelementptr inbounds double, double* %0, i64 %iv5
  store double %add40.i, double* %arrayidx42.i, align 8, !tbaa !61, !alias.scope !86, !noalias !91
  %62 = load double*, double** %_cache51, align 8, !dereferenceable !344, !invariant.group !340
  %63 = mul nuw nsw i64 %24, %21
  %64 = mul nuw nsw i64 %iv, %24
  %65 = add nuw nsw i64 %iv5, %64
  %66 = getelementptr inbounds double, double* %62, i64 %65
  store double %57, double* %66, align 8, !invariant.group !349
  %exitcond.not.i = icmp eq i64 %iv.next6, %conv
  br i1 %exitcond.not.i, label %for.body.i77.preheader, label %for.body29.i, !llvm.loop !78

for.body.i77.preheader:                           ; preds = %for.body29.i
  %67 = add nuw nsw i64 %18, 1
  %68 = load double*, double** %_cache86, align 8, !dereferenceable !344, !invariant.group !341
  %69 = mul nuw nsw i64 1, %21
  %70 = mul nuw nsw i64 %iv, 1
  %71 = add nuw nsw i64 0, %70
  %72 = mul nuw nsw i64 %71, %67
  %73 = getelementptr inbounds double, double* %68, i64 %72
  %74 = bitcast double* %73 to i8*
  %75 = bitcast double* %call84 to i8*
  %76 = mul nuw nsw i64 8, %67
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* nonnull align 8 %75, i64 %76, i1 false)
  br label %for.body.i77

for.body.i77:                                     ; preds = %for.body.i77, %for.body.i77.preheader
  %iv7 = phi i64 [ %iv.next8, %for.body.i77 ], [ 0, %for.body.i77.preheader ]
  %sum.09.i = phi double [ %add.i, %for.body.i77 ], [ 0.000000e+00, %for.body.i77.preheader ]
  %iv.next8 = add nuw nsw i64 %iv7, 1
  %"arrayidx.i74'ipg" = getelementptr inbounds double, double* %"'ipc", i64 %iv7
  %arrayidx.i74 = getelementptr inbounds double, double* %0, i64 %iv7
  %77 = load double, double* %arrayidx.i74, align 8, !tbaa !61
  %78 = tail call fast double @llvm.exp.f64(double %77) #37
  %add.i = fadd fast double %78, %sum.09.i
  %exitcond.not.i76 = icmp eq i64 %iv.next8, %conv
  br i1 %exitcond.not.i76, label %for.body10.preheader, label %for.body.i77, !llvm.loop !72

for.body10.preheader:                             ; preds = %for.body.i77
  %"add.i!manual_lcssa" = phi double [ %add.i, %for.body.i77 ]
  %79 = load double*, double** %"add.i!manual_lcssa_cache", align 8, !dereferenceable !344, !invariant.group !342
  %80 = getelementptr inbounds double, double* %79, i64 %iv
  store double %"add.i!manual_lcssa", double* %80, align 8, !invariant.group !350
  %phi.bo.i = fadd fast double %add.i, 2.000000e+00
  %81 = tail call fast double @llvm.log.f64(double %phi.bo.i) #37
  br label %for.body10

for.body10:                                       ; preds = %for.body10, %for.body10.preheader
  %iv9 = phi i64 [ %iv.next10, %for.body10 ], [ 0, %for.body10.preheader ]
  %iv.next10 = add nuw nsw i64 %iv9, 1
  %"arrayidx11'ipg" = getelementptr inbounds double, double* %"'ipc", i64 %iv9
  %arrayidx11 = getelementptr inbounds double, double* %0, i64 %iv9
  %82 = load double, double* %arrayidx11, align 8, !tbaa !61
  %sub12 = fsub fast double %82, %81
  %"arrayidx14'ipg" = getelementptr inbounds double, double* %"'ipc111", i64 %iv9
  %arrayidx14 = getelementptr inbounds double, double* %1, i64 %iv9
  store double %sub12, double* %arrayidx14, align 8, !tbaa !61
  %exitcond.not = icmp eq i64 %iv.next10, %conv
  br i1 %exitcond.not, label %for.body19.preheader, label %for.body10, !llvm.loop !95

for.body19.preheader:                             ; preds = %for.body10
  %indvars.iv.next95 = add i64 %31, %conv
  %add = add nuw nsw i32 %30, %b
  %arrayidx16 = getelementptr inbounds double, double* %sequence, i64 %indvars.iv.next95
  br label %for.body19

for.body19:                                       ; preds = %for.body19, %for.body19.preheader
  %iv11 = phi i64 [ %iv.next12, %for.body19 ], [ 0, %for.body19.preheader ]
  %total.181 = phi double [ %total.086, %for.body19.preheader ], [ %add25, %for.body19 ]
  %iv.next12 = add nuw nsw i64 %iv11, 1
  %arrayidx21 = getelementptr inbounds double, double* %arrayidx16, i64 %iv11
  %83 = load double, double* %arrayidx21, align 8, !tbaa !61, !invariant.group !351
  %"arrayidx23'ipg" = getelementptr inbounds double, double* %"'ipc111", i64 %iv11
  %arrayidx23 = getelementptr inbounds double, double* %1, i64 %iv11
  %84 = load double, double* %arrayidx23, align 8, !tbaa !61
  %mul24 = fmul fast double %84, %83
  %add25 = fadd fast double %mul24, %total.181
  %exitcond93.not = icmp eq i64 %iv.next12, %conv
  br i1 %exitcond93.not, label %for.end28, label %for.body19, !llvm.loop !96

for.end28:                                        ; preds = %for.body19
  %85 = trunc i64 %indvars.iv.next95 to i32
  %cmp6.not.not = icmp sgt i32 %mul4, %85
  br i1 %cmp6.not.not, label %for.body.preheader.i, label %for.end32.loopexit, !llvm.loop !97

for.end32.loopexit:                               ; preds = %for.end28
  %phi.cast = sitofp i32 %add to double
  br label %for.end32

for.end32:                                        ; preds = %for.end32.loopexit, %entry
  %count.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %phi.cast, %for.end32.loopexit ]
  %total.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %add25, %for.end32.loopexit ]
  br label %invertfor.end32

invertentry:                                      ; preds = %invertfor.end32, %invertfor.body.preheader.i.lr.ph
  tail call void @free(i8* nonnull %"call3'mi")
  tail call void @free(i8* nonnull %"call'mi")
  tail call void @free(i8* %call)
  ret void

invertfor.body.preheader.i.lr.ph:                 ; preds = %invertfor.body.preheader.i
  %86 = load i64, i64* %"iv'ac", align 8
  %87 = load i64, i64* %"iv3'ac", align 8
  %forfree = load double**, double*** %xp.085.i_cache, align 8, !dereferenceable !344, !invariant.group !337
  %88 = bitcast double** %forfree to i8*
  tail call void @free(i8* nonnull %88)
  %89 = load i64, i64* %"iv'ac", align 8
  %90 = load i64, i64* %"iv3'ac", align 8
  %forfree43 = load double**, double*** %_cache, align 8, !dereferenceable !344, !invariant.group !338
  %91 = bitcast double** %forfree43 to i8*
  tail call void @free(i8* nonnull %91)
  %92 = load i64, i64* %"iv'ac", align 8
  %93 = load i64, i64* %"iv3'ac", align 8
  %forfree46 = load { i8*, i8*, double*, double*, double*, double* }*, { i8*, i8*, double*, double*, double*, double* }** %_augmented_cache, align 8, !dereferenceable !352, !invariant.group !339
  %94 = bitcast { i8*, i8*, double*, double*, double*, double* }* %forfree46 to i8*
  tail call void @free(i8* nonnull %94)
  %95 = load i64, i64* %"iv'ac", align 8
  %96 = load i64, i64* %"iv5'ac", align 8
  %forfree55 = load double*, double** %_cache51, align 8, !dereferenceable !344, !invariant.group !340
  %97 = bitcast double* %forfree55 to i8*
  tail call void @free(i8* nonnull %97)
  %98 = load i64, i64* %"iv'ac", align 8
  %forfree90 = load double*, double** %_cache86, align 8, !dereferenceable !344, !invariant.group !341
  %99 = bitcast double* %forfree90 to i8*
  tail call void @free(i8* nonnull %99)
  %100 = load i64, i64* %"iv'ac", align 8
  %forfree103 = load double*, double** %"add.i!manual_lcssa_cache", align 8, !dereferenceable !344, !invariant.group !342
  %101 = bitcast double* %forfree103 to i8*
  tail call void @free(i8* nonnull %101)
  br label %invertentry

invertfor.body.preheader.i:                       ; preds = %invertfor.body.i
  %102 = load double, double* %"total.086'de", align 8
  store double 0.000000e+00, double* %"total.086'de", align 8
  %103 = load i64, i64* %"iv'ac", align 8
  %104 = icmp eq i64 %103, 0
  %105 = xor i1 %104, true
  %106 = select fast i1 %105, double %102, double 0.000000e+00
  %107 = load double, double* %"add25'de", align 8
  %108 = fadd fast double %107, %102
  %109 = select fast i1 %104, double %107, double %108
  store double %109, double* %"add25'de", align 8
  br i1 %104, label %invertfor.body.preheader.i.lr.ph, label %incinvertfor.body.preheader.i

incinvertfor.body.preheader.i:                    ; preds = %invertfor.body.preheader.i
  %110 = load i64, i64* %"iv'ac", align 8
  %111 = add nsw i64 %110, -1
  store i64 %111, i64* %"iv'ac", align 8
  br label %invertfor.end28

invertfor.cond5.preheader.i:                      ; preds = %invertfor.body29.lr.ph.i, %invertfor.body9.i.preheader
  %112 = load i64, i64* %"iv'ac", align 8
  %_unwrap = add nsw i64 %conv, -1
  br label %mergeinvertfor.body.i_for.cond5.preheader.i

mergeinvertfor.body.i_for.cond5.preheader.i:      ; preds = %invertfor.cond5.preheader.i
  store i64 %_unwrap, i64* %"iv1'ac", align 8
  br label %invertfor.body.i

invertfor.body9.i.preheader:                      ; preds = %invertfor.body9.i
  br label %invertfor.cond5.preheader.i

invertfor.body.i:                                 ; preds = %incinvertfor.body.i, %mergeinvertfor.body.i_for.cond5.preheader.i
  %113 = load i64, i64* %"iv1'ac", align 8
  %114 = load i64, i64* %"iv'ac", align 8
  %"arrayidx4.i'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc", i64 %113
  %115 = load double, double* %"arrayidx4.i'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx4.i'ipg_unwrap", align 8
  %116 = load double, double* %"mul.i'de", align 8
  %117 = fadd fast double %116, %115
  store double %117, double* %"mul.i'de", align 8
  %118 = load double, double* %"mul.i'de", align 8
  %119 = load i64, i64* %"iv1'ac", align 8
  %120 = load i64, i64* %"iv'ac", align 8
  %_unwrap13 = mul i64 %conv, %120
  %scevgep_unwrap = getelementptr double, double* %sequence, i64 %_unwrap13
  %arrayidx.i_unwrap = getelementptr inbounds double, double* %scevgep_unwrap, i64 %119
  %_unwrap14 = load double, double* %arrayidx.i_unwrap, align 8, !tbaa !61, !invariant.group !343
  %m0diffe = fmul fast double %118, %_unwrap14
  store double 0.000000e+00, double* %"mul.i'de", align 8
  %121 = load double, double* %"'de", align 8
  %122 = fadd fast double %121, %m0diffe
  store double %122, double* %"'de", align 8
  %123 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %124 = load i64, i64* %"iv1'ac", align 8
  %125 = load i64, i64* %"iv'ac", align 8
  %"arrayidx2.i'ipg_unwrap" = getelementptr inbounds double, double* %"extra_params'", i64 %124
  %126 = load double, double* %"arrayidx2.i'ipg_unwrap", align 8
  %127 = fadd fast double %126, %123
  store double %127, double* %"arrayidx2.i'ipg_unwrap", align 8
  %128 = load i64, i64* %"iv1'ac", align 8
  %129 = icmp eq i64 %128, 0
  %130 = xor i1 %129, true
  br i1 %129, label %invertfor.body.preheader.i, label %incinvertfor.body.i

incinvertfor.body.i:                              ; preds = %invertfor.body.i
  %131 = load i64, i64* %"iv1'ac", align 8
  %132 = add nsw i64 %131, -1
  store i64 %132, i64* %"iv1'ac", align 8
  br label %invertfor.body.i

invertfor.body29.lr.ph.i.loopexit:                ; preds = %invertfor.body29.lr.ph.i
  %133 = load i64, i64* %"iv'ac", align 8
  %mul6.i_unwrap = shl nsw i32 %l, 1
  %mul7.i_unwrap = mul nsw i32 %mul6.i_unwrap, %b
  %_unwrap15 = zext i32 %mul7.i_unwrap to i64
  %_unwrap16 = add nsw i64 %_unwrap15, -1
  %_unwrap17 = shl nuw i32 %b, 1
  %_unwrap18 = sext i32 %_unwrap17 to i64
  %_unwrap19 = udiv i64 %_unwrap16, %_unwrap18
  br label %mergeinvertfor.body9.i_for.body29.lr.ph.i.loopexit

mergeinvertfor.body9.i_for.body29.lr.ph.i.loopexit: ; preds = %invertfor.body29.lr.ph.i.loopexit
  store i64 %_unwrap19, i64* %"iv3'ac", align 8
  br label %invertfor.body9.i

invertfor.body29.lr.ph.i:                         ; preds = %invertfor.body29.i
  %134 = load i64, i64* %"iv'ac", align 8
  %mul6.i_unwrap20 = shl nsw i32 %l, 1
  %mul7.i_unwrap21 = mul nsw i32 %mul6.i_unwrap20, %b
  %cmp8.not.not83.i_unwrap = icmp sgt i32 %mul7.i_unwrap21, 0
  br i1 %cmp8.not.not83.i_unwrap, label %invertfor.body29.lr.ph.i.loopexit, label %invertfor.cond5.preheader.i

invertfor.body9.i:                                ; preds = %incinvertfor.body9.i, %mergeinvertfor.body9.i_for.body29.lr.ph.i.loopexit
  %135 = load i64, i64* %"iv3'ac", align 8
  %136 = load i64, i64* %"iv'ac", align 8
  %_unwrap22 = shl nuw i32 %b, 1
  %_unwrap23 = sext i32 %_unwrap22 to i64
  %_unwrap24 = mul i64 %_unwrap23, %135
  %_unwrap25 = trunc i64 %_unwrap24 to i32
  %mul10.i_unwrap = shl nsw i32 %_unwrap25, 2
  %idxprom11.i_unwrap = sext i32 %mul10.i_unwrap to i64
  %arrayidx12.i_unwrap = getelementptr inbounds double, double* %main_params, i64 %idxprom11.i_unwrap
  %137 = load i64, i64* %"iv3'ac", align 8
  %138 = load i64, i64* %"iv'ac", align 8
  %"arrayidx12.i'ipg_unwrap" = getelementptr inbounds double, double* %"main_params'", i64 %idxprom11.i_unwrap
  %139 = load i64, i64* %"iv3'ac", align 8
  %140 = load i64, i64* %"iv'ac", align 8
  %_unwrap26 = add nsw i64 %_unwrap24, %conv
  %_unwrap27 = trunc i64 %_unwrap26 to i32
  %mul13.i_unwrap = shl nsw i32 %_unwrap27, 2
  %idxprom14.i_unwrap = sext i32 %mul13.i_unwrap to i64
  %arrayidx15.i_unwrap = getelementptr inbounds double, double* %main_params, i64 %idxprom14.i_unwrap
  %141 = load i64, i64* %"iv3'ac", align 8
  %142 = load i64, i64* %"iv'ac", align 8
  %"arrayidx15.i'ipg_unwrap" = getelementptr inbounds double, double* %"main_params'", i64 %idxprom14.i_unwrap
  %143 = load i64, i64* %"iv3'ac", align 8
  %144 = load i64, i64* %"iv'ac", align 8
  %arrayidx17.i_unwrap = getelementptr inbounds double, double* %state, i64 %_unwrap24
  %145 = load i64, i64* %"iv3'ac", align 8
  %146 = load i64, i64* %"iv'ac", align 8
  %arrayidx20.i_unwrap = getelementptr inbounds double, double* %state, i64 %_unwrap26
  %147 = load i64, i64* %"iv3'ac", align 8
  %148 = load i64, i64* %"iv'ac", align 8
  %_unwrap29 = add i32 %c, -1
  %_unwrap30 = mul i32 %b, %_unwrap29
  %_unwrap31 = add i32 %_unwrap30, -1
  %_unwrap32 = zext i32 %_unwrap31 to i64
  %conv_unwrap = zext i32 %b to i64
  %_unwrap33 = udiv i64 %_unwrap32, %conv_unwrap
  %149 = add nuw i64 %_unwrap33, 1
  %mul6.i_unwrap34 = shl nsw i32 %l, 1
  %mul7.i_unwrap35 = mul nsw i32 %mul6.i_unwrap34, %b
  %_unwrap36 = zext i32 %mul7.i_unwrap35 to i64
  %_unwrap37 = add nsw i64 %_unwrap36, -1
  %_unwrap38 = shl nuw i32 %b, 1
  %_unwrap39 = sext i32 %_unwrap38 to i64
  %_unwrap40 = udiv i64 %_unwrap37, %_unwrap39
  %150 = add nuw i64 %_unwrap40, 1
  %151 = mul nuw nsw i64 %150, %149
  %152 = load double**, double*** %xp.085.i_cache, align 8, !dereferenceable !344, !invariant.group !337
  %153 = load i64, i64* %"iv3'ac", align 8
  %154 = load i64, i64* %"iv'ac", align 8
  %155 = mul nuw nsw i64 %150, %149
  %156 = mul nuw nsw i64 %154, %150
  %157 = add nuw nsw i64 %153, %156
  %158 = getelementptr inbounds double*, double** %152, i64 %157
  %159 = load double*, double** %158, align 8, !invariant.group !345
  %160 = load i64, i64* %"iv3'ac", align 8
  %161 = load i64, i64* %"iv'ac", align 8
  %162 = add nuw i64 %_unwrap33, 1
  %163 = add nuw i64 %_unwrap40, 1
  %164 = mul nuw nsw i64 %163, %162
  %165 = load double**, double*** %_cache, align 8, !dereferenceable !344, !invariant.group !338
  %166 = load i64, i64* %"iv3'ac", align 8
  %167 = load i64, i64* %"iv'ac", align 8
  %168 = mul nuw nsw i64 %163, %162
  %169 = mul nuw nsw i64 %167, %163
  %170 = add nuw nsw i64 %166, %169
  %171 = getelementptr inbounds double*, double** %165, i64 %170
  %172 = load double*, double** %171, align 8, !invariant.group !346
  %173 = load i64, i64* %"iv3'ac", align 8
  %174 = load i64, i64* %"iv'ac", align 8
  %175 = add nuw i64 %_unwrap33, 1
  %176 = add nuw i64 %_unwrap40, 1
  %177 = mul nuw nsw i64 %176, %175
  %178 = load { i8*, i8*, double*, double*, double*, double* }*, { i8*, i8*, double*, double*, double*, double* }** %_augmented_cache, align 8, !dereferenceable !344, !invariant.group !339
  %179 = load i64, i64* %"iv3'ac", align 8
  %180 = load i64, i64* %"iv'ac", align 8
  %181 = mul nuw nsw i64 %176, %175
  %182 = mul nuw nsw i64 %180, %176
  %183 = add nuw nsw i64 %179, %182
  %184 = getelementptr inbounds { i8*, i8*, double*, double*, double*, double* }, { i8*, i8*, double*, double*, double*, double* }* %178, i64 %183
  %185 = load { i8*, i8*, double*, double*, double*, double* }, { i8*, i8*, double*, double*, double*, double* }* %184, align 8, !invariant.group !347
  call void @diffelstm_model(i32 %b, double* %arrayidx12.i_unwrap, double* %"arrayidx12.i'ipg_unwrap", double* %arrayidx15.i_unwrap, double* %"arrayidx15.i'ipg_unwrap", double* %arrayidx17.i_unwrap, double* %arrayidx20.i_unwrap, double* %159, double* %172, { i8*, i8*, double*, double*, double*, double* } %185)
  %186 = load i64, i64* %"iv3'ac", align 8
  %187 = icmp eq i64 %186, 0
  %188 = xor i1 %187, true
  br i1 %187, label %invertfor.body9.i.preheader, label %incinvertfor.body9.i

incinvertfor.body9.i:                             ; preds = %invertfor.body9.i
  %189 = load i64, i64* %"iv3'ac", align 8
  %190 = add nsw i64 %189, -1
  store i64 %190, i64* %"iv3'ac", align 8
  br label %invertfor.body9.i

invertfor.body29.i:                               ; preds = %mergeinvertfor.body29.i_for.body.i77.preheader, %incinvertfor.body29.i
  %191 = load i64, i64* %"iv5'ac", align 8
  %192 = load i64, i64* %"iv'ac", align 8
  %"arrayidx42.i'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc", i64 %191
  %193 = load double, double* %"arrayidx42.i'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx42.i'ipg_unwrap", align 8
  %194 = load double, double* %"add40.i'de", align 8
  %195 = fadd fast double %194, %193
  store double %195, double* %"add40.i'de", align 8
  %196 = load double, double* %"add40.i'de", align 8
  store double 0.000000e+00, double* %"add40.i'de", align 8
  %197 = load double, double* %"mul35.i'de", align 8
  %198 = fadd fast double %197, %196
  store double %198, double* %"mul35.i'de", align 8
  %199 = load double, double* %"'de47", align 8
  %200 = fadd fast double %199, %196
  store double %200, double* %"'de47", align 8
  %201 = load double, double* %"'de47", align 8
  store double 0.000000e+00, double* %"'de47", align 8
  %202 = load i64, i64* %"iv5'ac", align 8
  %203 = load i64, i64* %"iv'ac", align 8
  %_unwrap48 = shl nuw i32 %b, 1
  %_unwrap49 = zext i32 %_unwrap48 to i64
  %_unwrap50 = add nuw nsw i64 %202, %_unwrap49
  %"arrayidx39.i'ipg_unwrap" = getelementptr inbounds double, double* %"extra_params'", i64 %_unwrap50
  %204 = load double, double* %"arrayidx39.i'ipg_unwrap", align 8
  %205 = fadd fast double %204, %201
  store double %205, double* %"arrayidx39.i'ipg_unwrap", align 8
  %206 = load double, double* %"mul35.i'de", align 8
  %207 = load i64, i64* %"iv5'ac", align 8
  %208 = load i64, i64* %"iv'ac", align 8
  %_unwrap56 = add i32 %c, -1
  %_unwrap57 = mul i32 %b, %_unwrap56
  %_unwrap58 = add i32 %_unwrap57, -1
  %_unwrap59 = zext i32 %_unwrap58 to i64
  %conv_unwrap60 = zext i32 %b to i64
  %_unwrap61 = udiv i64 %_unwrap59, %conv_unwrap60
  %209 = add nuw i64 %_unwrap61, 1
  %_unwrap62 = add nsw i64 %conv_unwrap60, -1
  %210 = add nuw i64 %_unwrap62, 1
  %211 = mul nuw nsw i64 %210, %209
  %212 = load double*, double** %_cache51, align 8, !dereferenceable !344, !invariant.group !340
  %213 = load i64, i64* %"iv5'ac", align 8
  %214 = load i64, i64* %"iv'ac", align 8
  %215 = mul nuw nsw i64 %210, %209
  %216 = mul nuw nsw i64 %214, %210
  %217 = add nuw nsw i64 %213, %216
  %218 = getelementptr inbounds double, double* %212, i64 %217
  %219 = load double, double* %218, align 8, !invariant.group !349
  %m0diffe63 = fmul fast double %206, %219
  %220 = load i64, i64* %"iv5'ac", align 8
  %221 = load i64, i64* %"iv'ac", align 8
  %_unwrap64 = add nuw nsw i64 %220, %conv
  %arrayidx34.i_unwrap = getelementptr inbounds double, double* %extra_params, i64 %_unwrap64
  %_unwrap65 = load double, double* %arrayidx34.i_unwrap, align 8, !tbaa !61, !invariant.group !348
  %m1diffe = fmul fast double %206, %_unwrap65
  store double 0.000000e+00, double* %"mul35.i'de", align 8
  %222 = load double, double* %"'de66", align 8
  %223 = fadd fast double %222, %m0diffe63
  store double %223, double* %"'de66", align 8
  %224 = load double, double* %"'de67", align 8
  %225 = fadd fast double %224, %m1diffe
  store double %225, double* %"'de67", align 8
  %226 = load double, double* %"'de66", align 8
  store double 0.000000e+00, double* %"'de66", align 8
  %227 = load i64, i64* %"iv5'ac", align 8
  %228 = load i64, i64* %"iv'ac", align 8
  %"arrayidx34.i'ipg_unwrap" = getelementptr inbounds double, double* %"extra_params'", i64 %_unwrap64
  %229 = load double, double* %"arrayidx34.i'ipg_unwrap", align 8
  %230 = fadd fast double %229, %226
  store double %230, double* %"arrayidx34.i'ipg_unwrap", align 8
  %231 = load double, double* %"'de67", align 8
  store double 0.000000e+00, double* %"'de67", align 8
  %232 = load i64, i64* %"iv5'ac", align 8
  %233 = load i64, i64* %"iv'ac", align 8
  %mul6.i_unwrap68 = shl nsw i32 %l, 1
  %mul7.i_unwrap69 = mul nsw i32 %mul6.i_unwrap68, %b
  %cmp8.not.not83.i_unwrap70 = icmp sgt i32 %mul7.i_unwrap69, 0
  %_unwrap74 = sext i32 %_unwrap48 to i64
  %234 = load i64, i64* %"iv5'ac", align 8
  %235 = load i64, i64* %"iv'ac", align 8
  %_unwrap75 = zext i32 %mul7.i_unwrap69 to i64
  %_unwrap76 = add nsw i64 %_unwrap75, -1
  %_unwrap77 = udiv i64 %_unwrap76, %_unwrap74
  %_unwrap78 = mul i64 %_unwrap74, %_unwrap77
  %arrayidx17.i_unwrap79 = getelementptr inbounds double, double* %state, i64 %_unwrap78
  %_unwrap81 = select i1 %cmp8.not.not83.i_unwrap70, double* %arrayidx17.i_unwrap79, double* %"'ipc"
  %"arrayidx31.i'ipg_unwrap" = getelementptr inbounds double, double* %_unwrap81, i64 %232
  %236 = load double, double* %"arrayidx31.i'ipg_unwrap", align 8
  %237 = fadd fast double %236, %231
  store double %237, double* %"arrayidx31.i'ipg_unwrap", align 8
  %238 = load i64, i64* %"iv5'ac", align 8
  %239 = icmp eq i64 %238, 0
  %240 = xor i1 %239, true
  br i1 %239, label %invertfor.body29.lr.ph.i, label %incinvertfor.body29.i

incinvertfor.body29.i:                            ; preds = %invertfor.body29.i
  %241 = load i64, i64* %"iv5'ac", align 8
  %242 = add nsw i64 %241, -1
  store i64 %242, i64* %"iv5'ac", align 8
  br label %invertfor.body29.i

invertfor.body.i77.preheader:                     ; preds = %invertfor.body.i77
  %243 = load i64, i64* %"iv'ac", align 8
  %_unwrap82 = add nsw i64 %conv, -1
  br label %mergeinvertfor.body29.i_for.body.i77.preheader

mergeinvertfor.body29.i_for.body.i77.preheader:   ; preds = %invertfor.body.i77.preheader
  store i64 %_unwrap82, i64* %"iv5'ac", align 8
  br label %invertfor.body29.i

invertfor.body.i77:                               ; preds = %mergeinvertfor.body.i77_for.body10.preheader, %incinvertfor.body.i77
  %244 = load double, double* %"add.i'de", align 8
  store double 0.000000e+00, double* %"add.i'de", align 8
  %245 = load double, double* %"'de83", align 8
  %246 = fadd fast double %245, %244
  store double %246, double* %"'de83", align 8
  %247 = load double, double* %"sum.09.i'de", align 8
  %248 = fadd fast double %247, %244
  store double %248, double* %"sum.09.i'de", align 8
  %249 = load double, double* %"'de83", align 8
  store double 0.000000e+00, double* %"'de83", align 8
  %250 = load i64, i64* %"iv7'ac", align 8
  %251 = load i64, i64* %"iv'ac", align 8
  %_unwrap91 = add i32 %c, -1
  %_unwrap92 = mul i32 %b, %_unwrap91
  %_unwrap93 = add i32 %_unwrap92, -1
  %_unwrap94 = zext i32 %_unwrap93 to i64
  %conv_unwrap95 = zext i32 %b to i64
  %_unwrap96 = udiv i64 %_unwrap94, %conv_unwrap95
  %252 = add nuw i64 %_unwrap96, 1
  %253 = mul nuw nsw i64 1, %252
  %254 = load double*, double** %_cache86, align 8, !dereferenceable !344, !invariant.group !341
  %255 = load i64, i64* %"iv'ac", align 8
  %256 = mul nuw nsw i64 1, %252
  %257 = mul nuw nsw i64 %255, 1
  %258 = add nuw nsw i64 0, %257
  %259 = load i64, i64* %"iv7'ac", align 8
  %260 = load i64, i64* %"iv'ac", align 8
  %_unwrap97 = add nsw i64 %conv, -1
  %_unwrap98 = add nuw nsw i64 %_unwrap97, 1
  %261 = mul nuw nsw i64 %258, %_unwrap98
  %262 = getelementptr inbounds double, double* %254, i64 %261
  %263 = getelementptr inbounds double, double* %262, i64 %250
  %264 = load double, double* %263, align 8, !invariant.group !353
  %265 = call fast double @llvm.exp.f64(double %264)
  %266 = fmul fast double %249, %265
  %267 = load double, double* %"'de99", align 8
  %268 = fadd fast double %267, %266
  store double %268, double* %"'de99", align 8
  %269 = load double, double* %"'de99", align 8
  store double 0.000000e+00, double* %"'de99", align 8
  %270 = load i64, i64* %"iv7'ac", align 8
  %271 = load i64, i64* %"iv'ac", align 8
  %"arrayidx.i74'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc", i64 %270
  %272 = load double, double* %"arrayidx.i74'ipg_unwrap", align 8
  %273 = fadd fast double %272, %269
  store double %273, double* %"arrayidx.i74'ipg_unwrap", align 8
  %274 = load double, double* %"sum.09.i'de", align 8
  store double 0.000000e+00, double* %"sum.09.i'de", align 8
  %275 = load i64, i64* %"iv7'ac", align 8
  %276 = icmp eq i64 %275, 0
  %277 = xor i1 %276, true
  %278 = select fast i1 %277, double %274, double 0.000000e+00
  %279 = load double, double* %"add.i'de", align 8
  %280 = fadd fast double %279, %274
  %281 = select fast i1 %276, double %279, double %280
  store double %281, double* %"add.i'de", align 8
  br i1 %276, label %invertfor.body.i77.preheader, label %incinvertfor.body.i77

incinvertfor.body.i77:                            ; preds = %invertfor.body.i77
  %282 = load i64, i64* %"iv7'ac", align 8
  %283 = add nsw i64 %282, -1
  store i64 %283, i64* %"iv7'ac", align 8
  br label %invertfor.body.i77

invertfor.body10.preheader:                       ; preds = %invertfor.body10
  %284 = load double, double* %"'de100", align 8
  store double 0.000000e+00, double* %"'de100", align 8
  %285 = load i64, i64* %"iv'ac", align 8
  %_unwrap104 = add i32 %c, -1
  %_unwrap105 = mul i32 %b, %_unwrap104
  %_unwrap106 = add i32 %_unwrap105, -1
  %_unwrap107 = zext i32 %_unwrap106 to i64
  %conv_unwrap108 = zext i32 %b to i64
  %_unwrap109 = udiv i64 %_unwrap107, %conv_unwrap108
  %286 = add nuw i64 %_unwrap109, 1
  %287 = load double*, double** %"add.i!manual_lcssa_cache", align 8, !dereferenceable !344, !invariant.group !342
  %288 = load i64, i64* %"iv'ac", align 8
  %289 = getelementptr inbounds double, double* %287, i64 %288
  %290 = load double, double* %289, align 8, !invariant.group !350
  %phi.bo.i_unwrap = fadd fast double %290, 2.000000e+00
  %291 = fdiv fast double %284, %phi.bo.i_unwrap
  %292 = load double, double* %"phi.bo.i'de", align 8
  %293 = fadd fast double %292, %291
  store double %293, double* %"phi.bo.i'de", align 8
  %294 = load double, double* %"phi.bo.i'de", align 8
  store double 0.000000e+00, double* %"phi.bo.i'de", align 8
  %295 = load double, double* %"add.i'de", align 8
  %296 = fadd fast double %295, %294
  store double %296, double* %"add.i'de", align 8
  %297 = load i64, i64* %"iv'ac", align 8
  %_unwrap110 = add nsw i64 %conv, -1
  br label %mergeinvertfor.body.i77_for.body10.preheader

mergeinvertfor.body.i77_for.body10.preheader:     ; preds = %invertfor.body10.preheader
  store i64 %_unwrap110, i64* %"iv7'ac", align 8
  br label %invertfor.body.i77

invertfor.body10:                                 ; preds = %mergeinvertfor.body10_for.body19.preheader, %incinvertfor.body10
  %298 = load i64, i64* %"iv9'ac", align 8
  %299 = load i64, i64* %"iv'ac", align 8
  %"arrayidx14'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc111", i64 %298
  %300 = load double, double* %"arrayidx14'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx14'ipg_unwrap", align 8
  %301 = load double, double* %"sub12'de", align 8
  %302 = fadd fast double %301, %300
  store double %302, double* %"sub12'de", align 8
  %303 = load double, double* %"sub12'de", align 8
  %304 = fneg fast double %303
  store double 0.000000e+00, double* %"sub12'de", align 8
  %305 = load double, double* %"'de112", align 8
  %306 = fadd fast double %305, %303
  store double %306, double* %"'de112", align 8
  %307 = load double, double* %"'de100", align 8
  %308 = fadd fast double %307, %304
  store double %308, double* %"'de100", align 8
  %309 = load double, double* %"'de112", align 8
  store double 0.000000e+00, double* %"'de112", align 8
  %310 = load i64, i64* %"iv9'ac", align 8
  %311 = load i64, i64* %"iv'ac", align 8
  %"arrayidx11'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc", i64 %310
  %312 = load double, double* %"arrayidx11'ipg_unwrap", align 8
  %313 = fadd fast double %312, %309
  store double %313, double* %"arrayidx11'ipg_unwrap", align 8
  %314 = load i64, i64* %"iv9'ac", align 8
  %315 = icmp eq i64 %314, 0
  %316 = xor i1 %315, true
  br i1 %315, label %invertfor.body10.preheader, label %incinvertfor.body10

incinvertfor.body10:                              ; preds = %invertfor.body10
  %317 = load i64, i64* %"iv9'ac", align 8
  %318 = add nsw i64 %317, -1
  store i64 %318, i64* %"iv9'ac", align 8
  br label %invertfor.body10

invertfor.body19.preheader:                       ; preds = %invertfor.body19
  %319 = load i64, i64* %"iv'ac", align 8
  %_unwrap113 = add nsw i64 %conv, -1
  br label %mergeinvertfor.body10_for.body19.preheader

mergeinvertfor.body10_for.body19.preheader:       ; preds = %invertfor.body19.preheader
  store i64 %_unwrap113, i64* %"iv9'ac", align 8
  br label %invertfor.body10

invertfor.body19:                                 ; preds = %mergeinvertfor.body19_for.end28, %incinvertfor.body19
  %320 = load double, double* %"add25'de", align 8
  store double 0.000000e+00, double* %"add25'de", align 8
  %321 = load double, double* %"mul24'de", align 8
  %322 = fadd fast double %321, %320
  store double %322, double* %"mul24'de", align 8
  %323 = load double, double* %"total.181'de", align 8
  %324 = fadd fast double %323, %320
  store double %324, double* %"total.181'de", align 8
  %325 = load double, double* %"mul24'de", align 8
  %326 = load i64, i64* %"iv11'ac", align 8
  %327 = load i64, i64* %"iv'ac", align 8
  %_unwrap114 = mul i64 %conv, %327
  %indvars.iv.next95_unwrap = add i64 %_unwrap114, %conv
  %arrayidx16_unwrap = getelementptr inbounds double, double* %sequence, i64 %indvars.iv.next95_unwrap
  %arrayidx21_unwrap = getelementptr inbounds double, double* %arrayidx16_unwrap, i64 %326
  %_unwrap115 = load double, double* %arrayidx21_unwrap, align 8, !tbaa !61, !invariant.group !351
  %m0diffe116 = fmul fast double %325, %_unwrap115
  store double 0.000000e+00, double* %"mul24'de", align 8
  %328 = load double, double* %"'de117", align 8
  %329 = fadd fast double %328, %m0diffe116
  store double %329, double* %"'de117", align 8
  %330 = load double, double* %"'de117", align 8
  store double 0.000000e+00, double* %"'de117", align 8
  %331 = load i64, i64* %"iv11'ac", align 8
  %332 = load i64, i64* %"iv'ac", align 8
  %"arrayidx23'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc111", i64 %331
  %333 = load double, double* %"arrayidx23'ipg_unwrap", align 8
  %334 = fadd fast double %333, %330
  store double %334, double* %"arrayidx23'ipg_unwrap", align 8
  %335 = load double, double* %"total.181'de", align 8
  store double 0.000000e+00, double* %"total.181'de", align 8
  %336 = load i64, i64* %"iv11'ac", align 8
  %337 = icmp eq i64 %336, 0
  %338 = xor i1 %337, true
  %339 = select fast i1 %338, double %335, double 0.000000e+00
  %340 = load double, double* %"add25'de", align 8
  %341 = fadd fast double %340, %335
  %342 = select fast i1 %337, double %340, double %341
  store double %342, double* %"add25'de", align 8
  %343 = select fast i1 %337, double %335, double 0.000000e+00
  %344 = load double, double* %"total.086'de", align 8
  %345 = fadd fast double %344, %335
  %346 = select fast i1 %337, double %345, double %344
  store double %346, double* %"total.086'de", align 8
  br i1 %337, label %invertfor.body19.preheader, label %incinvertfor.body19

incinvertfor.body19:                              ; preds = %invertfor.body19
  %347 = load i64, i64* %"iv11'ac", align 8
  %348 = add nsw i64 %347, -1
  store i64 %348, i64* %"iv11'ac", align 8
  br label %invertfor.body19

invertfor.end28:                                  ; preds = %mergeinvertfor.body.preheader.i_for.end32.loopexit, %incinvertfor.body.preheader.i
  %349 = load i64, i64* %"iv'ac", align 8
  %_unwrap119 = add nsw i64 %conv, -1
  br label %mergeinvertfor.body19_for.end28

mergeinvertfor.body19_for.end28:                  ; preds = %invertfor.end28
  store i64 %_unwrap119, i64* %"iv11'ac", align 8
  br label %invertfor.body19

invertfor.end32.loopexit:                         ; preds = %invertfor.end32
  %_unwrap120 = add i32 %c, -1
  %_unwrap121 = mul i32 %b, %_unwrap120
  %_unwrap122 = add i32 %_unwrap121, -1
  %_unwrap123 = zext i32 %_unwrap122 to i64
  %_unwrap124 = udiv i64 %_unwrap123, %conv
  br label %mergeinvertfor.body.preheader.i_for.end32.loopexit

mergeinvertfor.body.preheader.i_for.end32.loopexit: ; preds = %invertfor.end32.loopexit
  store i64 %_unwrap124, i64* %"iv'ac", align 8
  br label %invertfor.end28

invertfor.end32:                                  ; preds = %for.end32
  %350 = load double, double* %"loss'", align 8
  store double 0.000000e+00, double* %"loss'", align 8
  %351 = load double, double* %"div'de", align 8
  %352 = fadd fast double %351, %350
  store double %352, double* %"div'de", align 8
  %353 = load double, double* %"div'de", align 8
  %d0diffefneg = fdiv fast double %353, %count.0.lcssa
  store double 0.000000e+00, double* %"div'de", align 8
  %354 = load double, double* %"fneg'de", align 8
  %355 = fadd fast double %354, %d0diffefneg
  store double %355, double* %"fneg'de", align 8
  %356 = load double, double* %"fneg'de", align 8
  %357 = fneg fast double %356
  store double 0.000000e+00, double* %"fneg'de", align 8
  %358 = load double, double* %"total.0.lcssa'de", align 8
  %359 = fadd fast double %358, %357
  store double %359, double* %"total.0.lcssa'de", align 8
  %360 = load double, double* %"total.0.lcssa'de", align 8
  store double 0.000000e+00, double* %"total.0.lcssa'de", align 8
  %361 = select fast i1 %cmp6.not.not83, double %360, double 0.000000e+00
  %362 = load double, double* %"add25'de", align 8
  %363 = fadd fast double %362, %360
  %364 = select fast i1 %cmp6.not.not83, double %363, double %362
  store double %364, double* %"add25'de", align 8
  br i1 %cmp6.not.not83, label %invertfor.end32.loopexit, label %invertentry
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @preprocess_lstm_model(i32 %hsize, double* noalias nocapture readonly %weight, double* noalias nocapture readonly %bias, double* noalias nocapture %hidden, double* noalias nocapture %cell, double* noalias nocapture readonly %input) local_unnamed_addr #6 {
entry:
  %mul = shl nsw i32 %hsize, 2
  %conv = sext i32 %mul to i64
  %mul1 = shl nsw i64 %conv, 3
  %call = tail call noalias i8* @malloc(i64 %mul1) #37
  %0 = bitcast i8* %call to double*
  %idxprom = sext i32 %hsize to i64
  %arrayidx2 = getelementptr inbounds double, double* %0, i64 %idxprom
  %mul3 = shl nsw i32 %hsize, 1
  %idxprom4 = sext i32 %mul3 to i64
  %arrayidx5 = getelementptr inbounds double, double* %0, i64 %idxprom4
  %mul6 = mul nsw i32 %hsize, 3
  %idxprom7 = sext i32 %mul6 to i64
  %arrayidx8 = getelementptr inbounds double, double* %0, i64 %idxprom7
  %cmp171 = icmp sgt i32 %hsize, 0
  br i1 %cmp171, label %for.body.preheader, label %for.end94

for.body.preheader:                               ; preds = %entry
  %wide.trip.count182 = zext i32 %hsize to i64
  br label %for.body

for.cond62.preheader:                             ; preds = %for.body
  br i1 %cmp171, label %for.body64.preheader, label %for.end94

for.body64.preheader:                             ; preds = %for.cond62.preheader
  %wide.trip.count175 = zext i32 %hsize to i64
  br label %for.body64

for.body:                                         ; preds = %for.body, %for.body.preheader
  %tiv3 = phi i64 [ %tiv.next4, %for.body ], [ 0, %for.body.preheader ]
  %tiv.next4 = add nuw nsw i64 %tiv3, 1
  %arrayidx10 = getelementptr inbounds double, double* %input, i64 %tiv3
  %1 = load double, double* %arrayidx10, align 8, !tbaa !61
  %arrayidx12 = getelementptr inbounds double, double* %weight, i64 %tiv3
  %2 = load double, double* %arrayidx12, align 8, !tbaa !61
  %mul13 = fmul fast double %2, %1
  %arrayidx15 = getelementptr inbounds double, double* %bias, i64 %tiv3
  %3 = load double, double* %arrayidx15, align 8, !tbaa !61
  %add = fadd fast double %mul13, %3
  %fneg.i = fneg fast double %add
  %4 = tail call fast double @llvm.exp.f64(double %fneg.i) #37
  %add.i = fadd fast double %4, 1.000000e+00
  %div.i = fdiv fast double 1.000000e+00, %add.i
  %arrayidx18 = getelementptr inbounds double, double* %0, i64 %tiv3
  store double %div.i, double* %arrayidx18, align 8, !tbaa !61
  %arrayidx20 = getelementptr inbounds double, double* %hidden, i64 %tiv3
  %5 = load double, double* %arrayidx20, align 8, !tbaa !61
  %6 = add nsw i64 %tiv3, %idxprom
  %arrayidx23 = getelementptr inbounds double, double* %weight, i64 %6
  %7 = load double, double* %arrayidx23, align 8, !tbaa !61
  %mul24 = fmul fast double %7, %5
  %arrayidx27 = getelementptr inbounds double, double* %bias, i64 %6
  %8 = load double, double* %arrayidx27, align 8, !tbaa !61
  %add28 = fadd fast double %mul24, %8
  %fneg.i164 = fneg fast double %add28
  %9 = tail call fast double @llvm.exp.f64(double %fneg.i164) #37
  %add.i165 = fadd fast double %9, 1.000000e+00
  %div.i166 = fdiv fast double 1.000000e+00, %add.i165
  %arrayidx31 = getelementptr inbounds double, double* %arrayidx2, i64 %tiv3
  store double %div.i166, double* %arrayidx31, align 8, !tbaa !61
  %10 = add nsw i64 %tiv3, %idxprom4
  %arrayidx37 = getelementptr inbounds double, double* %weight, i64 %10
  %11 = load double, double* %arrayidx37, align 8, !tbaa !61
  %mul38 = fmul fast double %11, %1
  %arrayidx42 = getelementptr inbounds double, double* %bias, i64 %10
  %12 = load double, double* %arrayidx42, align 8, !tbaa !61
  %add43 = fadd fast double %mul38, %12
  %fneg.i161 = fneg fast double %add43
  %13 = tail call fast double @llvm.exp.f64(double %fneg.i161) #37
  %add.i162 = fadd fast double %13, 1.000000e+00
  %div.i163 = fdiv fast double 1.000000e+00, %add.i162
  %arrayidx46 = getelementptr inbounds double, double* %arrayidx5, i64 %tiv3
  store double %div.i163, double* %arrayidx46, align 8, !tbaa !61
  %14 = add nsw i64 %tiv3, %idxprom7
  %arrayidx52 = getelementptr inbounds double, double* %weight, i64 %14
  %15 = load double, double* %arrayidx52, align 8, !tbaa !61
  %mul53 = fmul fast double %15, %5
  %arrayidx57 = getelementptr inbounds double, double* %bias, i64 %14
  %16 = load double, double* %arrayidx57, align 8, !tbaa !61
  %add58 = fadd fast double %mul53, %16
  %call59 = tail call fast double @tanh(double %add58) #42
  %arrayidx61 = getelementptr inbounds double, double* %arrayidx8, i64 %tiv3
  store double %call59, double* %arrayidx61, align 8, !tbaa !61
  %indvars.iv.next178 = add nuw nsw i64 %tiv3, 1
  %exitcond183.not = icmp eq i64 %indvars.iv.next178, %wide.trip.count182
  br i1 %exitcond183.not, label %for.cond62.preheader, label %for.body, !llvm.loop !73

for.cond81.preheader:                             ; preds = %for.body64
  br i1 %cmp171, label %for.body83.preheader, label %for.end94

for.body83.preheader:                             ; preds = %for.cond81.preheader
  %wide.trip.count = zext i32 %hsize to i64
  br label %for.body83

for.body64:                                       ; preds = %for.body64, %for.body64.preheader
  %tiv1 = phi i64 [ %tiv.next2, %for.body64 ], [ 0, %for.body64.preheader ]
  %tiv.next2 = add nuw nsw i64 %tiv1, 1
  %arrayidx66 = getelementptr inbounds double, double* %cell, i64 %tiv1
  %17 = load double, double* %arrayidx66, align 8, !tbaa !61
  %arrayidx68 = getelementptr inbounds double, double* %0, i64 %tiv1
  %18 = load double, double* %arrayidx68, align 8, !tbaa !61
  %mul69 = fmul fast double %18, %17
  %arrayidx71 = getelementptr inbounds double, double* %arrayidx2, i64 %tiv1
  %19 = load double, double* %arrayidx71, align 8, !tbaa !61
  %arrayidx73 = getelementptr inbounds double, double* %arrayidx8, i64 %tiv1
  %20 = load double, double* %arrayidx73, align 8, !tbaa !61
  %mul74 = fmul fast double %20, %19
  %add75 = fadd fast double %mul74, %mul69
  store double %add75, double* %arrayidx66, align 8, !tbaa !61
  %indvars.iv.next174 = add nuw nsw i64 %tiv1, 1
  %exitcond176.not = icmp eq i64 %indvars.iv.next174, %wide.trip.count175
  br i1 %exitcond176.not, label %for.cond81.preheader, label %for.body64, !llvm.loop !74

for.body83:                                       ; preds = %for.body83, %for.body83.preheader
  %tiv = phi i64 [ %tiv.next, %for.body83 ], [ 0, %for.body83.preheader ]
  %tiv.next = add nuw nsw i64 %tiv, 1
  %arrayidx85 = getelementptr inbounds double, double* %arrayidx5, i64 %tiv
  %21 = load double, double* %arrayidx85, align 8, !tbaa !61
  %arrayidx87 = getelementptr inbounds double, double* %cell, i64 %tiv
  %22 = load double, double* %arrayidx87, align 8, !tbaa !61
  %call88 = tail call fast double @tanh(double %22) #42
  %mul89 = fmul fast double %call88, %21
  %arrayidx91 = getelementptr inbounds double, double* %hidden, i64 %tiv
  store double %mul89, double* %arrayidx91, align 8, !tbaa !61
  %indvars.iv.next = add nuw nsw i64 %tiv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end94.loopexit, label %for.body83, !llvm.loop !75

for.end94.loopexit:                               ; preds = %for.body83
  br label %for.end94

for.end94:                                        ; preds = %for.end94.loopexit, %for.cond81.preheader, %for.cond62.preheader, %entry
  tail call void @free(i8* %call) #37
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define internal { i8*, i8*, double*, double*, double*, double* } @augmented_lstm_model(i32 %hsize, double* noalias nocapture readonly %weight, double* nocapture %"weight'", double* noalias nocapture readonly %bias, double* nocapture %"bias'", double* noalias nocapture %hidden, double* noalias nocapture %cell, double* noalias nocapture readonly %input, double* nocapture %"input'") local_unnamed_addr #6 {
entry:
  %0 = alloca { i8*, i8*, double*, double*, double*, double* }, align 8
  %"iv'ac" = alloca i64, align 8
  %"iv1'ac" = alloca i64, align 8
  %"iv3'ac" = alloca i64, align 8
  %call88_cache = alloca double*, align 8
  %_cache = alloca double*, align 8
  %_cache7 = alloca double*, align 8
  %_cache11 = alloca double*, align 8
  %mul = shl nsw i32 %hsize, 2
  %conv = sext i32 %mul to i64
  %mul1 = shl nsw i64 %conv, 3
  %call = tail call noalias i8* @malloc(i64 %mul1) #37
  %1 = getelementptr inbounds { i8*, i8*, double*, double*, double*, double* }, { i8*, i8*, double*, double*, double*, double* }* %0, i32 0, i32 1
  store i8* %call, i8** %1, align 8
  %"call'mi" = tail call noalias nonnull i8* @malloc(i64 %mul1) #37
  %2 = getelementptr inbounds { i8*, i8*, double*, double*, double*, double* }, { i8*, i8*, double*, double*, double*, double* }* %0, i32 0, i32 0
  store i8* %"call'mi", i8** %2, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull %"call'mi", i8 0, i64 %mul1, i1 false)
  %3 = bitcast i8* %call to double*
  %idxprom = sext i32 %hsize to i64
  %arrayidx2 = getelementptr inbounds double, double* %3, i64 %idxprom
  %mul3 = shl nsw i32 %hsize, 1
  %idxprom4 = sext i32 %mul3 to i64
  %arrayidx5 = getelementptr inbounds double, double* %3, i64 %idxprom4
  %mul6 = mul nsw i32 %hsize, 3
  %idxprom7 = sext i32 %mul6 to i64
  %arrayidx8 = getelementptr inbounds double, double* %3, i64 %idxprom7
  %cmp171 = icmp sgt i32 %hsize, 0
  br i1 %cmp171, label %for.body.preheader, label %for.end94

for.body.preheader:                               ; preds = %entry
  %wide.trip.count182 = zext i32 %hsize to i64
  %4 = add nsw i64 %wide.trip.count182, -1
  %5 = add nuw i64 %4, 1
  %mallocsize5 = mul nuw nsw i64 %5, 8
  %malloccall6 = tail call noalias nonnull i8* @malloc(i64 %mallocsize5)
  %_malloccache = bitcast i8* %malloccall6 to double*
  %6 = getelementptr inbounds { i8*, i8*, double*, double*, double*, double* }, { i8*, i8*, double*, double*, double*, double* }* %0, i32 0, i32 3
  store double* %_malloccache, double** %6, align 8
  store double* %_malloccache, double** %_cache, align 8, !invariant.group !354
  %mallocsize8 = mul nuw nsw i64 %5, 8
  %malloccall9 = tail call noalias nonnull i8* @malloc(i64 %mallocsize8)
  %_malloccache10 = bitcast i8* %malloccall9 to double*
  %7 = getelementptr inbounds { i8*, i8*, double*, double*, double*, double* }, { i8*, i8*, double*, double*, double*, double* }* %0, i32 0, i32 4
  store double* %_malloccache10, double** %7, align 8
  store double* %_malloccache10, double** %_cache7, align 8, !invariant.group !355
  br label %for.body

for.cond62.preheader:                             ; preds = %for.body
  br i1 %cmp171, label %for.body64.preheader, label %for.end94

for.body64.preheader:                             ; preds = %for.cond62.preheader
  %wide.trip.count175 = zext i32 %hsize to i64
  %8 = add nsw i64 %wide.trip.count182, -1
  %9 = add nuw i64 %8, 1
  %mallocsize12 = mul nuw nsw i64 %9, 8
  %malloccall13 = tail call noalias nonnull i8* @malloc(i64 %mallocsize12)
  %_malloccache14 = bitcast i8* %malloccall13 to double*
  %10 = getelementptr inbounds { i8*, i8*, double*, double*, double*, double* }, { i8*, i8*, double*, double*, double*, double* }* %0, i32 0, i32 5
  store double* %_malloccache14, double** %10, align 8
  store double* %_malloccache14, double** %_cache11, align 8, !invariant.group !356
  br label %for.body64

for.body:                                         ; preds = %for.body, %for.body.preheader
  %iv = phi i64 [ %iv.next, %for.body ], [ 0, %for.body.preheader ]
  %iv.next = add nuw nsw i64 %iv, 1
  %arrayidx10 = getelementptr inbounds double, double* %input, i64 %iv
  %11 = load double, double* %arrayidx10, align 8, !tbaa !61
  %arrayidx12 = getelementptr inbounds double, double* %weight, i64 %iv
  %12 = load double, double* %arrayidx12, align 8, !tbaa !61
  %mul13 = fmul fast double %12, %11
  %arrayidx15 = getelementptr inbounds double, double* %bias, i64 %iv
  %13 = load double, double* %arrayidx15, align 8, !tbaa !61
  %add = fadd fast double %mul13, %13
  %fneg.i = fneg fast double %add
  %14 = tail call fast double @llvm.exp.f64(double %fneg.i) #37
  %add.i = fadd fast double %14, 1.000000e+00
  %div.i = fdiv fast double 1.000000e+00, %add.i
  %arrayidx18 = getelementptr inbounds double, double* %3, i64 %iv
  store double %div.i, double* %arrayidx18, align 8, !tbaa !61
  %15 = load double*, double** %_cache, align 8, !dereferenceable !344, !invariant.group !354
  %16 = getelementptr inbounds double, double* %15, i64 %iv
  store double %11, double* %16, align 8, !invariant.group !357
  %arrayidx20 = getelementptr inbounds double, double* %hidden, i64 %iv
  %17 = load double, double* %arrayidx20, align 8, !tbaa !61
  %18 = add nsw i64 %iv, %idxprom
  %arrayidx23 = getelementptr inbounds double, double* %weight, i64 %18
  %19 = load double, double* %arrayidx23, align 8, !tbaa !61
  %mul24 = fmul fast double %19, %17
  %arrayidx27 = getelementptr inbounds double, double* %bias, i64 %18
  %20 = load double, double* %arrayidx27, align 8, !tbaa !61
  %add28 = fadd fast double %mul24, %20
  %fneg.i164 = fneg fast double %add28
  %21 = tail call fast double @llvm.exp.f64(double %fneg.i164) #37
  %add.i165 = fadd fast double %21, 1.000000e+00
  %div.i166 = fdiv fast double 1.000000e+00, %add.i165
  %arrayidx31 = getelementptr inbounds double, double* %arrayidx2, i64 %iv
  store double %div.i166, double* %arrayidx31, align 8, !tbaa !61
  %22 = load double*, double** %_cache7, align 8, !dereferenceable !344, !invariant.group !355
  %23 = getelementptr inbounds double, double* %22, i64 %iv
  store double %17, double* %23, align 8, !invariant.group !358
  %24 = add nsw i64 %iv, %idxprom4
  %arrayidx37 = getelementptr inbounds double, double* %weight, i64 %24
  %25 = load double, double* %arrayidx37, align 8, !tbaa !61
  %mul38 = fmul fast double %25, %11
  %arrayidx42 = getelementptr inbounds double, double* %bias, i64 %24
  %26 = load double, double* %arrayidx42, align 8, !tbaa !61
  %add43 = fadd fast double %mul38, %26
  %fneg.i161 = fneg fast double %add43
  %27 = tail call fast double @llvm.exp.f64(double %fneg.i161) #37
  %add.i162 = fadd fast double %27, 1.000000e+00
  %div.i163 = fdiv fast double 1.000000e+00, %add.i162
  %arrayidx46 = getelementptr inbounds double, double* %arrayidx5, i64 %iv
  store double %div.i163, double* %arrayidx46, align 8, !tbaa !61
  %28 = add nsw i64 %iv, %idxprom7
  %arrayidx52 = getelementptr inbounds double, double* %weight, i64 %28
  %29 = load double, double* %arrayidx52, align 8, !tbaa !61
  %mul53 = fmul fast double %29, %17
  %arrayidx57 = getelementptr inbounds double, double* %bias, i64 %28
  %30 = load double, double* %arrayidx57, align 8, !tbaa !61
  %add58 = fadd fast double %mul53, %30
  %call59 = tail call fast double @tanh(double %add58) #42
  %arrayidx61 = getelementptr inbounds double, double* %arrayidx8, i64 %iv
  store double %call59, double* %arrayidx61, align 8, !tbaa !61
  %exitcond183.not = icmp eq i64 %iv.next, %wide.trip.count182
  br i1 %exitcond183.not, label %for.cond62.preheader, label %for.body, !llvm.loop !73

for.cond81.preheader:                             ; preds = %for.body64
  br i1 %cmp171, label %for.body83.preheader, label %for.end94

for.body83.preheader:                             ; preds = %for.cond81.preheader
  %wide.trip.count = zext i32 %hsize to i64
  %31 = add nsw i64 %wide.trip.count182, -1
  %32 = add nuw i64 %31, 1
  %mallocsize = mul nuw nsw i64 %32, 8
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %mallocsize)
  %call88_malloccache = bitcast i8* %malloccall to double*
  %33 = getelementptr inbounds { i8*, i8*, double*, double*, double*, double* }, { i8*, i8*, double*, double*, double*, double* }* %0, i32 0, i32 2
  store double* %call88_malloccache, double** %33, align 8
  store double* %call88_malloccache, double** %call88_cache, align 8, !invariant.group !359
  br label %for.body83

for.body64:                                       ; preds = %for.body64, %for.body64.preheader
  %iv1 = phi i64 [ %iv.next2, %for.body64 ], [ 0, %for.body64.preheader ]
  %iv.next2 = add nuw nsw i64 %iv1, 1
  %arrayidx66 = getelementptr inbounds double, double* %cell, i64 %iv1
  %34 = load double, double* %arrayidx66, align 8, !tbaa !61
  %arrayidx68 = getelementptr inbounds double, double* %3, i64 %iv1
  %35 = load double, double* %arrayidx68, align 8, !tbaa !61
  %mul69 = fmul fast double %35, %34
  %arrayidx71 = getelementptr inbounds double, double* %arrayidx2, i64 %iv1
  %36 = load double, double* %arrayidx71, align 8, !tbaa !61
  %arrayidx73 = getelementptr inbounds double, double* %arrayidx8, i64 %iv1
  %37 = load double, double* %arrayidx73, align 8, !tbaa !61
  %mul74 = fmul fast double %37, %36
  %add75 = fadd fast double %mul74, %mul69
  store double %add75, double* %arrayidx66, align 8, !tbaa !61
  %38 = load double*, double** %_cache11, align 8, !dereferenceable !344, !invariant.group !356
  %39 = getelementptr inbounds double, double* %38, i64 %iv1
  store double %34, double* %39, align 8, !invariant.group !360
  %exitcond176.not = icmp eq i64 %iv.next2, %wide.trip.count175
  br i1 %exitcond176.not, label %for.cond81.preheader, label %for.body64, !llvm.loop !74

for.body83:                                       ; preds = %for.body83, %for.body83.preheader
  %iv3 = phi i64 [ %iv.next4, %for.body83 ], [ 0, %for.body83.preheader ]
  %iv.next4 = add nuw nsw i64 %iv3, 1
  %arrayidx85 = getelementptr inbounds double, double* %arrayidx5, i64 %iv3
  %40 = load double, double* %arrayidx85, align 8, !tbaa !61
  %arrayidx87 = getelementptr inbounds double, double* %cell, i64 %iv3
  %41 = load double, double* %arrayidx87, align 8, !tbaa !61
  %call88 = tail call fast double @tanh(double %41) #42
  %mul89 = fmul fast double %call88, %40
  %arrayidx91 = getelementptr inbounds double, double* %hidden, i64 %iv3
  store double %mul89, double* %arrayidx91, align 8, !tbaa !61
  %42 = load double*, double** %call88_cache, align 8, !dereferenceable !344, !invariant.group !359
  %43 = getelementptr inbounds double, double* %42, i64 %iv3
  store double %call88, double* %43, align 8, !invariant.group !361
  %exitcond.not = icmp eq i64 %iv.next4, %wide.trip.count
  br i1 %exitcond.not, label %for.end94.loopexit, label %for.body83, !llvm.loop !75

for.end94.loopexit:                               ; preds = %for.body83
  br label %for.end94

for.end94:                                        ; preds = %for.end94.loopexit, %for.cond81.preheader, %for.cond62.preheader, %entry
  %44 = load { i8*, i8*, double*, double*, double*, double* }, { i8*, i8*, double*, double*, double*, double* }* %0, align 8
  ret { i8*, i8*, double*, double*, double*, double* } %44
}

; Function Attrs: nounwind uwtable mustprogress
define internal void @diffelstm_model(i32 %hsize, double* noalias nocapture readonly %weight, double* nocapture %"weight'", double* noalias nocapture readonly %bias, double* nocapture %"bias'", double* noalias nocapture %hidden, double* noalias nocapture %cell, double* noalias nocapture readonly %input, double* nocapture %"input'", { i8*, i8*, double*, double*, double*, double* } %tapeArg) local_unnamed_addr #6 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"iv1'ac" = alloca i64, align 8
  %"iv3'ac" = alloca i64, align 8
  %"call59'de" = alloca double, align 8
  store double 0.000000e+00, double* %"call59'de", align 8
  %_cache = alloca double*, align 8
  %"add58'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add58'de", align 8
  %"mul53'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul53'de", align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %"'de10" = alloca double, align 8
  store double 0.000000e+00, double* %"'de10", align 8
  %"div.i163'de" = alloca double, align 8
  store double 0.000000e+00, double* %"div.i163'de", align 8
  %_cache13 = alloca double*, align 8
  %"add.i162'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add.i162'de", align 8
  %"'de19" = alloca double, align 8
  store double 0.000000e+00, double* %"'de19", align 8
  %"fneg.i161'de" = alloca double, align 8
  store double 0.000000e+00, double* %"fneg.i161'de", align 8
  %"add43'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add43'de", align 8
  %"mul38'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul38'de", align 8
  %"'de20" = alloca double, align 8
  store double 0.000000e+00, double* %"'de20", align 8
  %"'de22" = alloca double, align 8
  store double 0.000000e+00, double* %"'de22", align 8
  %"'de23" = alloca double, align 8
  store double 0.000000e+00, double* %"'de23", align 8
  %"div.i166'de" = alloca double, align 8
  store double 0.000000e+00, double* %"div.i166'de", align 8
  %"add.i165'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add.i165'de", align 8
  %"'de27" = alloca double, align 8
  store double 0.000000e+00, double* %"'de27", align 8
  %"fneg.i164'de" = alloca double, align 8
  store double 0.000000e+00, double* %"fneg.i164'de", align 8
  %"add28'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add28'de", align 8
  %"mul24'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul24'de", align 8
  %"'de28" = alloca double, align 8
  store double 0.000000e+00, double* %"'de28", align 8
  %"'de30" = alloca double, align 8
  store double 0.000000e+00, double* %"'de30", align 8
  %"div.i'de" = alloca double, align 8
  store double 0.000000e+00, double* %"div.i'de", align 8
  %"add.i'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add.i'de", align 8
  %"'de33" = alloca double, align 8
  store double 0.000000e+00, double* %"'de33", align 8
  %"fneg.i'de" = alloca double, align 8
  store double 0.000000e+00, double* %"fneg.i'de", align 8
  %"add'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add'de", align 8
  %"mul13'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul13'de", align 8
  %"'de34" = alloca double, align 8
  store double 0.000000e+00, double* %"'de34", align 8
  %"'de37" = alloca double, align 8
  store double 0.000000e+00, double* %"'de37", align 8
  %"add75'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add75'de", align 8
  %"mul74'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul74'de", align 8
  %"mul69'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul69'de", align 8
  %"'de44" = alloca double, align 8
  store double 0.000000e+00, double* %"'de44", align 8
  %"'de45" = alloca double, align 8
  store double 0.000000e+00, double* %"'de45", align 8
  %_cache46 = alloca double*, align 8
  %"'de54" = alloca double, align 8
  store double 0.000000e+00, double* %"'de54", align 8
  %"mul89'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul89'de", align 8
  %"'de61" = alloca double, align 8
  store double 0.000000e+00, double* %"'de61", align 8
  %0 = extractvalue { i8*, i8*, double*, double*, double*, double* } %tapeArg, 2
  %mdyncache_fromtape_cache = alloca double*, align 8
  store double* %0, double** %mdyncache_fromtape_cache, align 8
  %_cache67 = alloca i8, align 1
  %1 = extractvalue { i8*, i8*, double*, double*, double*, double* } %tapeArg, 3
  %mdyncache_fromtape_cache68 = alloca double*, align 8
  store double* %1, double** %mdyncache_fromtape_cache68, align 8
  %2 = extractvalue { i8*, i8*, double*, double*, double*, double* } %tapeArg, 4
  %mdyncache_fromtape_cache70 = alloca double*, align 8
  store double* %2, double** %mdyncache_fromtape_cache70, align 8
  %3 = extractvalue { i8*, i8*, double*, double*, double*, double* } %tapeArg, 5
  %mdyncache_fromtape_cache72 = alloca double*, align 8
  store double* %3, double** %mdyncache_fromtape_cache72, align 8
  %mul = shl nsw i32 %hsize, 2, !node !336
  %4 = bitcast [6 x i8]* @ResultFormatStrIR to i8*
  %5 = call i32 (i8*, ...) @printf(i8* %4)
  %conv = sext i32 %mul to i64
  %mul1 = shl nsw i64 %conv, 3
  %call = extractvalue { i8*, i8*, double*, double*, double*, double* } %tapeArg, 1
  %"call'mi" = extractvalue { i8*, i8*, double*, double*, double*, double* } %tapeArg, 0
  %"'ipc" = bitcast i8* %"call'mi" to double*
  %6 = bitcast i8* %call to double*
  %idxprom = sext i32 %hsize to i64
  %"arrayidx2'ipg" = getelementptr inbounds double, double* %"'ipc", i64 %idxprom
  %arrayidx2 = getelementptr inbounds double, double* %6, i64 %idxprom
  %mul3 = shl nsw i32 %hsize, 1, !node !336
  %7 = bitcast [6 x i8]* @ResultFormatStrIR to i8*
  %8 = call i32 (i8*, ...) @printf(i8* %7)
  %idxprom4 = sext i32 %mul3 to i64
  %"arrayidx5'ipg" = getelementptr inbounds double, double* %"'ipc", i64 %idxprom4
  %mul6 = mul nsw i32 %hsize, 3, !node !336
  %9 = bitcast [6 x i8]* @ResultFormatStrIR to i8*
  %10 = call i32 (i8*, ...) @printf(i8* %9)
  %idxprom7 = sext i32 %mul6 to i64
  %"arrayidx8'ipg" = getelementptr inbounds double, double* %"'ipc", i64 %idxprom7
  %arrayidx8 = getelementptr inbounds double, double* %6, i64 %idxprom7
  %cmp171 = icmp sgt i32 %hsize, 0
  store i8 2, i8* %_cache67, align 1, !invariant.group !362
  br i1 %cmp171, label %for.body.preheader, label %for.end94

for.body.preheader:                               ; preds = %entry
  %wide.trip.count182 = zext i32 %hsize to i64
  %11 = add nsw i64 %wide.trip.count182, -1
  %12 = add nuw i64 %11, 1
  %mallocsize = mul nuw nsw i64 %12, 8
  %mallocsize14 = mul nuw nsw i64 %12, 8
  br label %for.body

for.cond62.preheader:                             ; preds = %for.body
  store i8 0, i8* %_cache67, align 1, !invariant.group !362
  br i1 %cmp171, label %for.body64.preheader, label %for.end94

for.body64.preheader:                             ; preds = %for.cond62.preheader
  %wide.trip.count175 = zext i32 %hsize to i64
  %13 = add nsw i64 %wide.trip.count182, -1
  %14 = add nuw i64 %13, 1
  %mallocsize47 = mul nuw nsw i64 %14, 8
  br label %for.body64

for.body:                                         ; preds = %for.body, %for.body.preheader
  %iv = phi i64 [ %iv.next, %for.body ], [ 0, %for.body.preheader ]
  %iv.next = add nuw nsw i64 %iv, 1
  %"arrayidx10'ipg" = getelementptr inbounds double, double* %"input'", i64 %iv
  %15 = load double*, double** %mdyncache_fromtape_cache68, align 8, !dereferenceable !344, !invariant.group !363
  %16 = getelementptr inbounds double, double* %15, i64 %iv
  %17 = load double, double* %16, align 8, !invariant.group !364
  %"arrayidx12'ipg" = getelementptr inbounds double, double* %"weight'", i64 %iv
  %arrayidx12 = getelementptr inbounds double, double* %weight, i64 %iv
  %18 = load double, double* %arrayidx12, align 8, !tbaa !61, !invariant.group !365
  %mul13 = fmul fast double %18, %17
  %"arrayidx15'ipg" = getelementptr inbounds double, double* %"bias'", i64 %iv
  %arrayidx15 = getelementptr inbounds double, double* %bias, i64 %iv
  %19 = load double, double* %arrayidx15, align 8, !tbaa !61, !invariant.group !366
  %add = fadd fast double %mul13, %19
  %fneg.i = fneg fast double %add
  %20 = tail call fast double @llvm.exp.f64(double %fneg.i) #37
  %add.i = fadd fast double %20, 1.000000e+00
  %div.i = fdiv fast double 1.000000e+00, %add.i
  %"arrayidx18'ipg" = getelementptr inbounds double, double* %"'ipc", i64 %iv
  %21 = load double*, double** %mdyncache_fromtape_cache70, align 8, !dereferenceable !344, !invariant.group !367
  %22 = getelementptr inbounds double, double* %21, i64 %iv
  %23 = load double, double* %22, align 8, !invariant.group !368
  %24 = add nsw i64 %iv, %idxprom
  %"arrayidx23'ipg" = getelementptr inbounds double, double* %"weight'", i64 %24
  %arrayidx23 = getelementptr inbounds double, double* %weight, i64 %24
  %25 = load double, double* %arrayidx23, align 8, !tbaa !61, !invariant.group !369
  %mul24 = fmul fast double %25, %23
  %"arrayidx27'ipg" = getelementptr inbounds double, double* %"bias'", i64 %24
  %arrayidx27 = getelementptr inbounds double, double* %bias, i64 %24
  %26 = load double, double* %arrayidx27, align 8, !tbaa !61, !invariant.group !370
  %add28 = fadd fast double %mul24, %26
  %fneg.i164 = fneg fast double %add28
  %27 = tail call fast double @llvm.exp.f64(double %fneg.i164) #37
  %add.i165 = fadd fast double %27, 1.000000e+00
  %div.i166 = fdiv fast double 1.000000e+00, %add.i165
  %"arrayidx31'ipg" = getelementptr inbounds double, double* %"arrayidx2'ipg", i64 %iv
  %28 = add nsw i64 %iv, %idxprom4
  %"arrayidx37'ipg" = getelementptr inbounds double, double* %"weight'", i64 %28
  %arrayidx37 = getelementptr inbounds double, double* %weight, i64 %28
  %29 = load double, double* %arrayidx37, align 8, !tbaa !61, !invariant.group !371
  %mul38 = fmul fast double %29, %17
  %"arrayidx42'ipg" = getelementptr inbounds double, double* %"bias'", i64 %28
  %arrayidx42 = getelementptr inbounds double, double* %bias, i64 %28
  %30 = load double, double* %arrayidx42, align 8, !tbaa !61, !invariant.group !372
  %add43 = fadd fast double %mul38, %30
  %fneg.i161 = fneg fast double %add43
  %31 = tail call fast double @llvm.exp.f64(double %fneg.i161) #37
  %add.i162 = fadd fast double %31, 1.000000e+00
  %div.i163 = fdiv fast double 1.000000e+00, %add.i162
  %"arrayidx46'ipg" = getelementptr inbounds double, double* %"arrayidx5'ipg", i64 %iv
  %32 = add nsw i64 %iv, %idxprom7
  %"arrayidx52'ipg" = getelementptr inbounds double, double* %"weight'", i64 %32
  %arrayidx52 = getelementptr inbounds double, double* %weight, i64 %32
  %33 = load double, double* %arrayidx52, align 8, !tbaa !61, !invariant.group !373
  %mul53 = fmul fast double %33, %23
  %"arrayidx57'ipg" = getelementptr inbounds double, double* %"bias'", i64 %32
  %arrayidx57 = getelementptr inbounds double, double* %bias, i64 %32
  %34 = load double, double* %arrayidx57, align 8, !tbaa !61, !invariant.group !374
  %add58 = fadd fast double %mul53, %34
  %"arrayidx61'ipg" = getelementptr inbounds double, double* %"arrayidx8'ipg", i64 %iv
  %exitcond183.not = icmp eq i64 %iv.next, %wide.trip.count182
  br i1 %exitcond183.not, label %for.cond62.preheader, label %for.body, !llvm.loop !73

for.cond81.preheader:                             ; preds = %for.body64
  store i8 3, i8* %_cache67, align 1, !invariant.group !362
  br i1 %cmp171, label %for.body83.preheader, label %for.end94

for.body83.preheader:                             ; preds = %for.cond81.preheader
  %wide.trip.count = zext i32 %hsize to i64
  %35 = add nsw i64 %wide.trip.count182, -1
  %36 = add nuw i64 %35, 1
  %mallocsize55 = mul nuw nsw i64 %36, 8
  br label %for.body83

for.body64:                                       ; preds = %for.body64, %for.body64.preheader
  %iv1 = phi i64 [ %iv.next2, %for.body64 ], [ 0, %for.body64.preheader ]
  %iv.next2 = add nuw nsw i64 %iv1, 1
  %37 = load double*, double** %mdyncache_fromtape_cache72, align 8, !dereferenceable !344, !invariant.group !375
  %38 = getelementptr inbounds double, double* %37, i64 %iv1
  %39 = load double, double* %38, align 8, !invariant.group !376
  %"arrayidx68'ipg" = getelementptr inbounds double, double* %"'ipc", i64 %iv1
  %"arrayidx71'ipg" = getelementptr inbounds double, double* %"arrayidx2'ipg", i64 %iv1
  %arrayidx71 = getelementptr inbounds double, double* %arrayidx2, i64 %iv1
  %40 = load double, double* %arrayidx71, align 8, !tbaa !61, !invariant.group !377
  %"arrayidx73'ipg" = getelementptr inbounds double, double* %"arrayidx8'ipg", i64 %iv1
  %arrayidx73 = getelementptr inbounds double, double* %arrayidx8, i64 %iv1
  %41 = load double, double* %arrayidx73, align 8, !tbaa !61, !invariant.group !378
  %exitcond176.not = icmp eq i64 %iv.next2, %wide.trip.count175
  br i1 %exitcond176.not, label %for.cond81.preheader, label %for.body64, !llvm.loop !74

for.body83:                                       ; preds = %for.body83, %for.body83.preheader
  %iv3 = phi i64 [ %iv.next4, %for.body83 ], [ 0, %for.body83.preheader ]
  %iv.next4 = add nuw nsw i64 %iv3, 1
  %"arrayidx85'ipg" = getelementptr inbounds double, double* %"arrayidx5'ipg", i64 %iv3
  %42 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !344, !invariant.group !379
  %43 = getelementptr inbounds double, double* %42, i64 %iv3
  %call88 = load double, double* %43, align 8, !invariant.group !380
  %exitcond.not = icmp eq i64 %iv.next4, %wide.trip.count
  br i1 %exitcond.not, label %for.end94.loopexit, label %for.body83, !llvm.loop !75

for.end94.loopexit:                               ; preds = %for.body83
  store i8 1, i8* %_cache67, align 1, !invariant.group !362
  br label %for.end94

for.end94:                                        ; preds = %for.end94.loopexit, %for.cond81.preheader, %for.cond62.preheader, %entry
  br label %invertfor.end94

invertentry:                                      ; preds = %invertfor.end94, %invertfor.body.preheader
  tail call void @free(i8* nonnull %"call'mi")
  tail call void @free(i8* %call)
  ret void

invertfor.body.preheader:                         ; preds = %invertfor.body
  %44 = load i64, i64* %"iv'ac", align 8
  %45 = load i64, i64* %"iv'ac", align 8
  %46 = load i64, i64* %"iv'ac", align 8
  %forfree69 = load double*, double** %mdyncache_fromtape_cache68, align 8, !dereferenceable !344, !invariant.group !363
  %47 = bitcast double* %forfree69 to i8*
  tail call void @free(i8* nonnull %47)
  %48 = load i64, i64* %"iv'ac", align 8
  %forfree71 = load double*, double** %mdyncache_fromtape_cache70, align 8, !dereferenceable !344, !invariant.group !367
  %49 = bitcast double* %forfree71 to i8*
  tail call void @free(i8* nonnull %49)
  br label %invertentry

invertfor.cond62.preheader:                       ; preds = %invertfor.end94, %invertfor.body64.preheader
  %wide.trip.count182_unwrap = zext i32 %hsize to i64
  %_unwrap = add nsw i64 %wide.trip.count182_unwrap, -1
  br label %mergeinvertfor.body_for.cond62.preheader

mergeinvertfor.body_for.cond62.preheader:         ; preds = %invertfor.cond62.preheader
  store i64 %_unwrap, i64* %"iv'ac", align 8
  br label %invertfor.body

invertfor.body64.preheader:                       ; preds = %invertfor.body64
  %50 = load i64, i64* %"iv1'ac", align 8
  %51 = load i64, i64* %"iv1'ac", align 8
  %forfree = load double*, double** %mdyncache_fromtape_cache72, align 8, !dereferenceable !344, !invariant.group !375
  %52 = bitcast double* %forfree to i8*
  tail call void @free(i8* nonnull %52)
  br label %invertfor.cond62.preheader

invertfor.body:                                   ; preds = %incinvertfor.body, %mergeinvertfor.body_for.cond62.preheader
  %53 = load i64, i64* %"iv'ac", align 8
  %"arrayidx61'ipg_unwrap" = getelementptr inbounds double, double* %"arrayidx8'ipg", i64 %53
  %54 = load double, double* %"arrayidx61'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx61'ipg_unwrap", align 8
  %55 = load double, double* %"call59'de", align 8
  %56 = fadd fast double %55, %54
  store double %56, double* %"call59'de", align 8
  %57 = load i64, i64* %"iv'ac", align 8
  %_unwrap5 = add nsw i64 %57, %idxprom7
  %arrayidx52_unwrap = getelementptr inbounds double, double* %weight, i64 %_unwrap5
  %_unwrap6 = load double, double* %arrayidx52_unwrap, align 8, !tbaa !61, !invariant.group !373
  %wide.trip.count182_unwrap7 = zext i32 %hsize to i64
  %_unwrap8 = add nsw i64 %wide.trip.count182_unwrap7, -1
  %58 = add nuw i64 %_unwrap8, 1
  %59 = extractvalue { i8*, i8*, double*, double*, double*, double* } %tapeArg, 4
  %60 = load i64, i64* %"iv'ac", align 8
  %61 = getelementptr inbounds double, double* %59, i64 %60
  %62 = load double, double* %61, align 8, !invariant.group !381
  %mul53_unwrap = fmul fast double %_unwrap6, %62
  %arrayidx57_unwrap = getelementptr inbounds double, double* %bias, i64 %_unwrap5
  %_unwrap9 = load double, double* %arrayidx57_unwrap, align 8, !tbaa !61, !invariant.group !374
  %add58_unwrap = fadd fast double %mul53_unwrap, %_unwrap9
  %63 = call fast double @cosh(double %add58_unwrap)
  %64 = fmul fast double %63, %63
  %65 = load double, double* %"call59'de", align 8
  %66 = fdiv fast double %65, %64
  store double 0.000000e+00, double* %"call59'de", align 8
  %67 = load double, double* %"add58'de", align 8
  %68 = fadd fast double %67, %66
  store double %68, double* %"add58'de", align 8
  %69 = load double, double* %"add58'de", align 8
  store double 0.000000e+00, double* %"add58'de", align 8
  %70 = load double, double* %"mul53'de", align 8
  %71 = fadd fast double %70, %69
  store double %71, double* %"mul53'de", align 8
  %72 = load double, double* %"'de", align 8
  %73 = fadd fast double %72, %69
  store double %73, double* %"'de", align 8
  %74 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %75 = load i64, i64* %"iv'ac", align 8
  %"arrayidx57'ipg_unwrap" = getelementptr inbounds double, double* %"bias'", i64 %_unwrap5
  %76 = load double, double* %"arrayidx57'ipg_unwrap", align 8
  %77 = fadd fast double %76, %74
  store double %77, double* %"arrayidx57'ipg_unwrap", align 8
  %78 = load double, double* %"mul53'de", align 8
  %m0diffe = fmul fast double %78, %62
  store double 0.000000e+00, double* %"mul53'de", align 8
  %79 = load double, double* %"'de10", align 8
  %80 = fadd fast double %79, %m0diffe
  store double %80, double* %"'de10", align 8
  %81 = load double, double* %"'de10", align 8
  store double 0.000000e+00, double* %"'de10", align 8
  %82 = load i64, i64* %"iv'ac", align 8
  %"arrayidx52'ipg_unwrap" = getelementptr inbounds double, double* %"weight'", i64 %_unwrap5
  %83 = load double, double* %"arrayidx52'ipg_unwrap", align 8
  %84 = fadd fast double %83, %81
  store double %84, double* %"arrayidx52'ipg_unwrap", align 8
  %85 = load i64, i64* %"iv'ac", align 8
  %"arrayidx46'ipg_unwrap" = getelementptr inbounds double, double* %"arrayidx5'ipg", i64 %85
  %86 = load double, double* %"arrayidx46'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx46'ipg_unwrap", align 8
  %87 = load double, double* %"div.i163'de", align 8
  %88 = fadd fast double %87, %86
  store double %88, double* %"div.i163'de", align 8
  %89 = load double, double* %"div.i163'de", align 8
  %90 = load i64, i64* %"iv'ac", align 8
  %_unwrap11 = add nsw i64 %90, %idxprom4
  %arrayidx37_unwrap = getelementptr inbounds double, double* %weight, i64 %_unwrap11
  %_unwrap12 = load double, double* %arrayidx37_unwrap, align 8, !tbaa !61, !invariant.group !371
  %91 = add nuw i64 %_unwrap8, 1
  %92 = extractvalue { i8*, i8*, double*, double*, double*, double* } %tapeArg, 3
  %93 = load i64, i64* %"iv'ac", align 8
  %94 = getelementptr inbounds double, double* %92, i64 %93
  %95 = load double, double* %94, align 8, !invariant.group !382
  %mul38_unwrap = fmul fast double %_unwrap12, %95
  %arrayidx42_unwrap = getelementptr inbounds double, double* %bias, i64 %_unwrap11
  %_unwrap18 = load double, double* %arrayidx42_unwrap, align 8, !tbaa !61, !invariant.group !372
  %add43_unwrap = fadd fast double %mul38_unwrap, %_unwrap18
  %fneg.i161_unwrap = fneg fast double %add43_unwrap
  %96 = tail call fast double @llvm.exp.f64(double %fneg.i161_unwrap) #37
  %add.i162_unwrap = fadd fast double %96, 1.000000e+00
  %97 = load i64, i64* %"iv'ac", align 8
  %div.i163_unwrap = fdiv fast double 1.000000e+00, %add.i162_unwrap
  %98 = fdiv fast double %89, %add.i162_unwrap
  %99 = fmul fast double %div.i163_unwrap, %98
  %100 = fneg fast double %99
  store double 0.000000e+00, double* %"div.i163'de", align 8
  %101 = load double, double* %"add.i162'de", align 8
  %102 = fadd fast double %101, %100
  store double %102, double* %"add.i162'de", align 8
  %103 = load double, double* %"add.i162'de", align 8
  store double 0.000000e+00, double* %"add.i162'de", align 8
  %104 = load double, double* %"'de19", align 8
  %105 = fadd fast double %104, %103
  store double %105, double* %"'de19", align 8
  %106 = load double, double* %"'de19", align 8
  store double 0.000000e+00, double* %"'de19", align 8
  %107 = call fast double @llvm.exp.f64(double %fneg.i161_unwrap)
  %108 = fmul fast double %106, %107
  %109 = load double, double* %"fneg.i161'de", align 8
  %110 = fadd fast double %109, %108
  store double %110, double* %"fneg.i161'de", align 8
  %111 = load double, double* %"fneg.i161'de", align 8
  %112 = fneg fast double %111
  store double 0.000000e+00, double* %"fneg.i161'de", align 8
  %113 = load double, double* %"add43'de", align 8
  %114 = fadd fast double %113, %112
  store double %114, double* %"add43'de", align 8
  %115 = load double, double* %"add43'de", align 8
  store double 0.000000e+00, double* %"add43'de", align 8
  %116 = load double, double* %"mul38'de", align 8
  %117 = fadd fast double %116, %115
  store double %117, double* %"mul38'de", align 8
  %118 = load double, double* %"'de20", align 8
  %119 = fadd fast double %118, %115
  store double %119, double* %"'de20", align 8
  %120 = load double, double* %"'de20", align 8
  store double 0.000000e+00, double* %"'de20", align 8
  %121 = load i64, i64* %"iv'ac", align 8
  %"arrayidx42'ipg_unwrap" = getelementptr inbounds double, double* %"bias'", i64 %_unwrap11
  %122 = load double, double* %"arrayidx42'ipg_unwrap", align 8
  %123 = fadd fast double %122, %120
  store double %123, double* %"arrayidx42'ipg_unwrap", align 8
  %124 = load double, double* %"mul38'de", align 8
  %m0diffe21 = fmul fast double %124, %95
  %m1diffe = fmul fast double %124, %_unwrap12
  store double 0.000000e+00, double* %"mul38'de", align 8
  %125 = load double, double* %"'de22", align 8
  %126 = fadd fast double %125, %m0diffe21
  store double %126, double* %"'de22", align 8
  %127 = load double, double* %"'de23", align 8
  %128 = fadd fast double %127, %m1diffe
  store double %128, double* %"'de23", align 8
  %129 = load double, double* %"'de22", align 8
  store double 0.000000e+00, double* %"'de22", align 8
  %130 = load i64, i64* %"iv'ac", align 8
  %"arrayidx37'ipg_unwrap" = getelementptr inbounds double, double* %"weight'", i64 %_unwrap11
  %131 = load double, double* %"arrayidx37'ipg_unwrap", align 8
  %132 = fadd fast double %131, %129
  store double %132, double* %"arrayidx37'ipg_unwrap", align 8
  %133 = load i64, i64* %"iv'ac", align 8
  %"arrayidx31'ipg_unwrap" = getelementptr inbounds double, double* %"arrayidx2'ipg", i64 %133
  %134 = load double, double* %"arrayidx31'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx31'ipg_unwrap", align 8
  %135 = load double, double* %"div.i166'de", align 8
  %136 = fadd fast double %135, %134
  store double %136, double* %"div.i166'de", align 8
  %137 = load double, double* %"div.i166'de", align 8
  %138 = load i64, i64* %"iv'ac", align 8
  %_unwrap24 = add nsw i64 %138, %idxprom
  %arrayidx23_unwrap = getelementptr inbounds double, double* %weight, i64 %_unwrap24
  %_unwrap25 = load double, double* %arrayidx23_unwrap, align 8, !tbaa !61, !invariant.group !369
  %mul24_unwrap = fmul fast double %_unwrap25, %62
  %arrayidx27_unwrap = getelementptr inbounds double, double* %bias, i64 %_unwrap24
  %_unwrap26 = load double, double* %arrayidx27_unwrap, align 8, !tbaa !61, !invariant.group !370
  %add28_unwrap = fadd fast double %mul24_unwrap, %_unwrap26
  %fneg.i164_unwrap = fneg fast double %add28_unwrap
  %139 = tail call fast double @llvm.exp.f64(double %fneg.i164_unwrap) #37
  %add.i165_unwrap = fadd fast double %139, 1.000000e+00
  %140 = load i64, i64* %"iv'ac", align 8
  %div.i166_unwrap = fdiv fast double 1.000000e+00, %add.i165_unwrap
  %141 = fdiv fast double %137, %add.i165_unwrap
  %142 = fmul fast double %div.i166_unwrap, %141
  %143 = fneg fast double %142
  store double 0.000000e+00, double* %"div.i166'de", align 8
  %144 = load double, double* %"add.i165'de", align 8
  %145 = fadd fast double %144, %143
  store double %145, double* %"add.i165'de", align 8
  %146 = load double, double* %"add.i165'de", align 8
  store double 0.000000e+00, double* %"add.i165'de", align 8
  %147 = load double, double* %"'de27", align 8
  %148 = fadd fast double %147, %146
  store double %148, double* %"'de27", align 8
  %149 = load double, double* %"'de27", align 8
  store double 0.000000e+00, double* %"'de27", align 8
  %150 = call fast double @llvm.exp.f64(double %fneg.i164_unwrap)
  %151 = fmul fast double %149, %150
  %152 = load double, double* %"fneg.i164'de", align 8
  %153 = fadd fast double %152, %151
  store double %153, double* %"fneg.i164'de", align 8
  %154 = load double, double* %"fneg.i164'de", align 8
  %155 = fneg fast double %154
  store double 0.000000e+00, double* %"fneg.i164'de", align 8
  %156 = load double, double* %"add28'de", align 8
  %157 = fadd fast double %156, %155
  store double %157, double* %"add28'de", align 8
  %158 = load double, double* %"add28'de", align 8
  store double 0.000000e+00, double* %"add28'de", align 8
  %159 = load double, double* %"mul24'de", align 8
  %160 = fadd fast double %159, %158
  store double %160, double* %"mul24'de", align 8
  %161 = load double, double* %"'de28", align 8
  %162 = fadd fast double %161, %158
  store double %162, double* %"'de28", align 8
  %163 = load double, double* %"'de28", align 8
  store double 0.000000e+00, double* %"'de28", align 8
  %164 = load i64, i64* %"iv'ac", align 8
  %"arrayidx27'ipg_unwrap" = getelementptr inbounds double, double* %"bias'", i64 %_unwrap24
  %165 = load double, double* %"arrayidx27'ipg_unwrap", align 8
  %166 = fadd fast double %165, %163
  store double %166, double* %"arrayidx27'ipg_unwrap", align 8
  %167 = load double, double* %"mul24'de", align 8
  %m0diffe29 = fmul fast double %167, %62
  store double 0.000000e+00, double* %"mul24'de", align 8
  %168 = load double, double* %"'de30", align 8
  %169 = fadd fast double %168, %m0diffe29
  store double %169, double* %"'de30", align 8
  %170 = load double, double* %"'de30", align 8
  store double 0.000000e+00, double* %"'de30", align 8
  %171 = load i64, i64* %"iv'ac", align 8
  %"arrayidx23'ipg_unwrap" = getelementptr inbounds double, double* %"weight'", i64 %_unwrap24
  %172 = load double, double* %"arrayidx23'ipg_unwrap", align 8
  %173 = fadd fast double %172, %170
  store double %173, double* %"arrayidx23'ipg_unwrap", align 8
  %174 = load i64, i64* %"iv'ac", align 8
  %"arrayidx18'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc", i64 %174
  %175 = load double, double* %"arrayidx18'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx18'ipg_unwrap", align 8
  %176 = load double, double* %"div.i'de", align 8
  %177 = fadd fast double %176, %175
  store double %177, double* %"div.i'de", align 8
  %178 = load double, double* %"div.i'de", align 8
  %179 = load i64, i64* %"iv'ac", align 8
  %arrayidx12_unwrap = getelementptr inbounds double, double* %weight, i64 %179
  %_unwrap31 = load double, double* %arrayidx12_unwrap, align 8, !tbaa !61, !invariant.group !365
  %mul13_unwrap = fmul fast double %_unwrap31, %95
  %arrayidx15_unwrap = getelementptr inbounds double, double* %bias, i64 %179
  %_unwrap32 = load double, double* %arrayidx15_unwrap, align 8, !tbaa !61, !invariant.group !366
  %add_unwrap = fadd fast double %mul13_unwrap, %_unwrap32
  %fneg.i_unwrap = fneg fast double %add_unwrap
  %180 = tail call fast double @llvm.exp.f64(double %fneg.i_unwrap) #37
  %add.i_unwrap = fadd fast double %180, 1.000000e+00
  %181 = load i64, i64* %"iv'ac", align 8
  %div.i_unwrap = fdiv fast double 1.000000e+00, %add.i_unwrap
  %182 = fdiv fast double %178, %add.i_unwrap
  %183 = fmul fast double %div.i_unwrap, %182
  %184 = fneg fast double %183
  store double 0.000000e+00, double* %"div.i'de", align 8
  %185 = load double, double* %"add.i'de", align 8
  %186 = fadd fast double %185, %184
  store double %186, double* %"add.i'de", align 8
  %187 = load double, double* %"add.i'de", align 8
  store double 0.000000e+00, double* %"add.i'de", align 8
  %188 = load double, double* %"'de33", align 8
  %189 = fadd fast double %188, %187
  store double %189, double* %"'de33", align 8
  %190 = load double, double* %"'de33", align 8
  store double 0.000000e+00, double* %"'de33", align 8
  %191 = call fast double @llvm.exp.f64(double %fneg.i_unwrap)
  %192 = fmul fast double %190, %191
  %193 = load double, double* %"fneg.i'de", align 8
  %194 = fadd fast double %193, %192
  store double %194, double* %"fneg.i'de", align 8
  %195 = load double, double* %"fneg.i'de", align 8
  %196 = fneg fast double %195
  store double 0.000000e+00, double* %"fneg.i'de", align 8
  %197 = load double, double* %"add'de", align 8
  %198 = fadd fast double %197, %196
  store double %198, double* %"add'de", align 8
  %199 = load double, double* %"add'de", align 8
  store double 0.000000e+00, double* %"add'de", align 8
  %200 = load double, double* %"mul13'de", align 8
  %201 = fadd fast double %200, %199
  store double %201, double* %"mul13'de", align 8
  %202 = load double, double* %"'de34", align 8
  %203 = fadd fast double %202, %199
  store double %203, double* %"'de34", align 8
  %204 = load double, double* %"'de34", align 8
  store double 0.000000e+00, double* %"'de34", align 8
  %205 = load i64, i64* %"iv'ac", align 8
  %"arrayidx15'ipg_unwrap" = getelementptr inbounds double, double* %"bias'", i64 %205
  %206 = load double, double* %"arrayidx15'ipg_unwrap", align 8
  %207 = fadd fast double %206, %204
  store double %207, double* %"arrayidx15'ipg_unwrap", align 8
  %208 = load double, double* %"mul13'de", align 8
  %m0diffe35 = fmul fast double %208, %95
  %m1diffe36 = fmul fast double %208, %_unwrap31
  store double 0.000000e+00, double* %"mul13'de", align 8
  %209 = load double, double* %"'de37", align 8
  %210 = fadd fast double %209, %m0diffe35
  store double %210, double* %"'de37", align 8
  %211 = load double, double* %"'de23", align 8
  %212 = fadd fast double %211, %m1diffe36
  store double %212, double* %"'de23", align 8
  %213 = load double, double* %"'de37", align 8
  store double 0.000000e+00, double* %"'de37", align 8
  %214 = load i64, i64* %"iv'ac", align 8
  %"arrayidx12'ipg_unwrap" = getelementptr inbounds double, double* %"weight'", i64 %214
  %215 = load double, double* %"arrayidx12'ipg_unwrap", align 8
  %216 = fadd fast double %215, %213
  store double %216, double* %"arrayidx12'ipg_unwrap", align 8
  %217 = load double, double* %"'de23", align 8
  store double 0.000000e+00, double* %"'de23", align 8
  %218 = load i64, i64* %"iv'ac", align 8
  %"arrayidx10'ipg_unwrap" = getelementptr inbounds double, double* %"input'", i64 %218
  %219 = load double, double* %"arrayidx10'ipg_unwrap", align 8
  %220 = fadd fast double %219, %217
  store double %220, double* %"arrayidx10'ipg_unwrap", align 8
  %221 = load i64, i64* %"iv'ac", align 8
  %222 = icmp eq i64 %221, 0
  %223 = xor i1 %222, true
  br i1 %222, label %invertfor.body.preheader, label %incinvertfor.body

incinvertfor.body:                                ; preds = %invertfor.body
  %224 = load i64, i64* %"iv'ac", align 8
  %225 = add nsw i64 %224, -1
  store i64 %225, i64* %"iv'ac", align 8
  br label %invertfor.body

invertfor.cond81.preheader:                       ; preds = %invertfor.end94, %invertfor.body83.preheader
  %wide.trip.count182_unwrap38 = zext i32 %hsize to i64
  %_unwrap39 = add nsw i64 %wide.trip.count182_unwrap38, -1
  br label %mergeinvertfor.body64_for.cond81.preheader

mergeinvertfor.body64_for.cond81.preheader:       ; preds = %invertfor.cond81.preheader
  store i64 %_unwrap39, i64* %"iv1'ac", align 8
  br label %invertfor.body64

invertfor.body83.preheader:                       ; preds = %invertfor.body83
  %226 = load i64, i64* %"iv3'ac", align 8
  %227 = load i64, i64* %"iv3'ac", align 8
  %forfree62 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !344, !invariant.group !379
  %228 = bitcast double* %forfree62 to i8*
  tail call void @free(i8* nonnull %228)
  br label %invertfor.cond81.preheader

invertfor.body64:                                 ; preds = %incinvertfor.body64, %mergeinvertfor.body64_for.cond81.preheader
  %229 = load double, double* %"add75'de", align 8
  store double 0.000000e+00, double* %"add75'de", align 8
  %230 = load double, double* %"mul74'de", align 8
  %231 = fadd fast double %230, %229
  store double %231, double* %"mul74'de", align 8
  %232 = load double, double* %"mul69'de", align 8
  %233 = fadd fast double %232, %229
  store double %233, double* %"mul69'de", align 8
  %234 = load double, double* %"mul74'de", align 8
  %235 = load i64, i64* %"iv1'ac", align 8
  %arrayidx71_unwrap = getelementptr inbounds double, double* %arrayidx2, i64 %235
  %_unwrap40 = load double, double* %arrayidx71_unwrap, align 8, !tbaa !61, !invariant.group !377
  %m0diffe41 = fmul fast double %234, %_unwrap40
  %236 = load i64, i64* %"iv1'ac", align 8
  %arrayidx73_unwrap = getelementptr inbounds double, double* %arrayidx8, i64 %236
  %_unwrap42 = load double, double* %arrayidx73_unwrap, align 8, !tbaa !61, !invariant.group !378
  %m1diffe43 = fmul fast double %234, %_unwrap42
  store double 0.000000e+00, double* %"mul74'de", align 8
  %237 = load double, double* %"'de44", align 8
  %238 = fadd fast double %237, %m0diffe41
  store double %238, double* %"'de44", align 8
  %239 = load double, double* %"'de45", align 8
  %240 = fadd fast double %239, %m1diffe43
  store double %240, double* %"'de45", align 8
  %241 = load double, double* %"'de44", align 8
  store double 0.000000e+00, double* %"'de44", align 8
  %242 = load i64, i64* %"iv1'ac", align 8
  %"arrayidx73'ipg_unwrap" = getelementptr inbounds double, double* %"arrayidx8'ipg", i64 %242
  %243 = load double, double* %"arrayidx73'ipg_unwrap", align 8
  %244 = fadd fast double %243, %241
  store double %244, double* %"arrayidx73'ipg_unwrap", align 8
  %245 = load double, double* %"'de45", align 8
  store double 0.000000e+00, double* %"'de45", align 8
  %246 = load i64, i64* %"iv1'ac", align 8
  %"arrayidx71'ipg_unwrap" = getelementptr inbounds double, double* %"arrayidx2'ipg", i64 %246
  %247 = load double, double* %"arrayidx71'ipg_unwrap", align 8
  %248 = fadd fast double %247, %245
  store double %248, double* %"arrayidx71'ipg_unwrap", align 8
  %249 = load double, double* %"mul69'de", align 8
  %250 = load i64, i64* %"iv1'ac", align 8
  %wide.trip.count182_unwrap51 = zext i32 %hsize to i64
  %_unwrap52 = add nsw i64 %wide.trip.count182_unwrap51, -1
  %251 = add nuw i64 %_unwrap52, 1
  %252 = extractvalue { i8*, i8*, double*, double*, double*, double* } %tapeArg, 5
  %253 = load i64, i64* %"iv1'ac", align 8
  %254 = getelementptr inbounds double, double* %252, i64 %253
  %255 = load double, double* %254, align 8, !invariant.group !383
  %m0diffe53 = fmul fast double %249, %255
  store double 0.000000e+00, double* %"mul69'de", align 8
  %256 = load double, double* %"'de54", align 8
  %257 = fadd fast double %256, %m0diffe53
  store double %257, double* %"'de54", align 8
  %258 = load double, double* %"'de54", align 8
  store double 0.000000e+00, double* %"'de54", align 8
  %259 = load i64, i64* %"iv1'ac", align 8
  %"arrayidx68'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc", i64 %259
  %260 = load double, double* %"arrayidx68'ipg_unwrap", align 8
  %261 = fadd fast double %260, %258
  store double %261, double* %"arrayidx68'ipg_unwrap", align 8
  %262 = load i64, i64* %"iv1'ac", align 8
  %263 = icmp eq i64 %262, 0
  %264 = xor i1 %263, true
  br i1 %263, label %invertfor.body64.preheader, label %incinvertfor.body64

incinvertfor.body64:                              ; preds = %invertfor.body64
  %265 = load i64, i64* %"iv1'ac", align 8
  %266 = add nsw i64 %265, -1
  store i64 %266, i64* %"iv1'ac", align 8
  br label %invertfor.body64

invertfor.body83:                                 ; preds = %mergeinvertfor.body83_for.end94.loopexit, %incinvertfor.body83
  %267 = load double, double* %"mul89'de", align 8
  %268 = load i64, i64* %"iv3'ac", align 8
  %wide.trip.count182_unwrap58 = zext i32 %hsize to i64
  %_unwrap59 = add nsw i64 %wide.trip.count182_unwrap58, -1
  %269 = add nuw i64 %_unwrap59, 1
  %270 = extractvalue { i8*, i8*, double*, double*, double*, double* } %tapeArg, 2
  %271 = load i64, i64* %"iv3'ac", align 8
  %272 = getelementptr inbounds double, double* %270, i64 %271
  %273 = load double, double* %272, align 8, !invariant.group !384
  %m1diffe60 = fmul fast double %267, %273
  store double 0.000000e+00, double* %"mul89'de", align 8
  %274 = load double, double* %"'de61", align 8
  %275 = fadd fast double %274, %m1diffe60
  store double %275, double* %"'de61", align 8
  %276 = load double, double* %"'de61", align 8
  store double 0.000000e+00, double* %"'de61", align 8
  %277 = load i64, i64* %"iv3'ac", align 8
  %"arrayidx85'ipg_unwrap" = getelementptr inbounds double, double* %"arrayidx5'ipg", i64 %277
  %278 = load double, double* %"arrayidx85'ipg_unwrap", align 8
  %279 = fadd fast double %278, %276
  store double %279, double* %"arrayidx85'ipg_unwrap", align 8
  %280 = load i64, i64* %"iv3'ac", align 8
  %281 = icmp eq i64 %280, 0
  %282 = xor i1 %281, true
  br i1 %281, label %invertfor.body83.preheader, label %incinvertfor.body83

incinvertfor.body83:                              ; preds = %invertfor.body83
  %283 = load i64, i64* %"iv3'ac", align 8
  %284 = add nsw i64 %283, -1
  store i64 %284, i64* %"iv3'ac", align 8
  br label %invertfor.body83

invertfor.end94.loopexit:                         ; preds = %invertfor.end94
  %wide.trip.count182_unwrap65 = zext i32 %hsize to i64
  %_unwrap66 = add nsw i64 %wide.trip.count182_unwrap65, -1
  br label %mergeinvertfor.body83_for.end94.loopexit

mergeinvertfor.body83_for.end94.loopexit:         ; preds = %invertfor.end94.loopexit
  store i64 %_unwrap66, i64* %"iv3'ac", align 8
  br label %invertfor.body83

invertfor.end94:                                  ; preds = %for.end94
  %285 = load i8, i8* %_cache67, align 1, !invariant.group !362
  switch i8 %285, label %invertfor.cond81.preheader [
    i8 0, label %invertfor.cond62.preheader
    i8 1, label %invertfor.end94.loopexit
    i8 2, label %invertentry
  ]
}

; Function Attrs: nofree nounwind readnone willreturn
declare double @cosh(double) #18

attributes #0 = { uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #3 = { "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly willreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #5 = { nounwind uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #6 = { nounwind uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #7 = { nounwind "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { norecurse nounwind readonly uwtable willreturn mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #10 = { uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #12 = { norecurse uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #13 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #14 = { nounwind readnone uwtable willreturn mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #15 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #16 = { nounwind readonly uwtable willreturn mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #17 = { inaccessiblememonly nofree nounwind willreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #18 = { nofree nounwind readnone willreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #19 = { inaccessiblemem_or_argmemonly nounwind willreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #20 = { nofree nosync nounwind willreturn }
attributes #21 = { nofree nounwind uwtable willreturn writeonly mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #22 = { nofree nounwind uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #23 = { nobuiltin nounwind "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #24 = { norecurse nounwind readnone uwtable willreturn mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #25 = { nobuiltin nofree allocsize(0) "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #26 = { noreturn uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #27 = { nofree nounwind uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #28 = { nofree nounwind uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #29 = { uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #30 = { noinline noreturn nounwind }
attributes #31 = { inlinehint nounwind uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #32 = { nounwind uwtable willreturn mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #33 = { noreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #34 = { inlinehint uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #35 = { uwtable willreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #36 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #37 = { nounwind }
attributes #38 = { nounwind readonly willreturn }
attributes #39 = { noreturn }
attributes #40 = { noreturn nounwind }
attributes #41 = { allocsize(0) }
attributes #42 = { nounwind readnone willreturn }
attributes #43 = { builtin nounwind }
attributes #44 = { builtin allocsize(0) }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)"}
!2 = !{!3, !5, i64 18}
!3 = !{!"_ZTS6dirent", !4, i64 0, !4, i64 8, !7, i64 16, !5, i64 18, !5, i64 19}
!4 = !{!"long", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!"short", !5, i64 0}
!8 = distinct !{!8, !9, !10}
!9 = !{!"llvm.loop.mustprogress"}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: %agg.result"}
!13 = distinct !{!13, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!14 = !{!15, !16, i64 0}
!15 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !16, i64 0}
!16 = !{!"any pointer", !5, i64 0}
!17 = !{!18, !16, i64 0}
!18 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !15, i64 0, !4, i64 8, !5, i64 16}
!19 = !{!18, !4, i64 8}
!20 = !{!4, !4, i64 0}
!21 = !{!5, !5, i64 0}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_: %agg.result"}
!24 = distinct !{!24, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv: %agg.result"}
!27 = distinct !{!27, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"}
!28 = distinct !{!28, !9, !10}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: %agg.result"}
!31 = distinct !{!31, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!32 = !{!33, !16, i64 8}
!33 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !16, i64 0, !16, i64 8, !16, i64 16}
!34 = !{!33, !16, i64 16}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: %agg.result"}
!37 = distinct !{!37, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: %agg.result"}
!40 = distinct !{!40, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: %agg.result"}
!43 = distinct !{!43, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!44 = !{!45, !4, i64 0}
!45 = !{!"_ZTS7timeval", !4, i64 0, !4, i64 8}
!46 = !{!45, !4, i64 8}
!47 = !{!48, !48, i64 0}
!48 = !{!"int", !5, i64 0}
!49 = !{!50, !16, i64 8}
!50 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !16, i64 0, !16, i64 8, !16, i64 16}
!51 = !{!50, !16, i64 0}
!52 = distinct !{!52, !9, !10}
!53 = distinct !{!53, !9, !10}
!54 = distinct !{!54, !9, !10}
!55 = distinct !{!55, !9, !10}
!56 = distinct !{!56, !9, !10}
!57 = !{!58, !48, i64 0}
!58 = !{!"_ZTS9LSTMInput", !48, i64 0, !48, i64 4, !48, i64 8, !59, i64 16, !59, i64 40, !59, i64 64, !59, i64 88}
!59 = !{!"_ZTSSt6vectorIdSaIdEE"}
!60 = !{!58, !48, i64 8}
!61 = !{!62, !62, i64 0}
!62 = !{!"double", !5, i64 0}
!63 = distinct !{!63, !9, !10}
!64 = !{!58, !48, i64 4}
!65 = distinct !{!65, !9, !10}
!66 = distinct !{!66, !9, !10}
!67 = distinct !{!67, !9, !10}
!68 = distinct !{!68, !9, !10}
!69 = distinct !{!69, !9, !10}
!70 = distinct !{!70, !10}
!71 = distinct !{!71, !9, !10}
!72 = distinct !{!72, !9, !10}
!73 = distinct !{!73, !9, !10}
!74 = distinct !{!74, !9, !10}
!75 = distinct !{!75, !9, !10}
!76 = distinct !{!76, !9, !10}
!77 = distinct !{!77, !9, !10}
!78 = distinct !{!78, !9, !10}
!79 = !{!80}
!80 = distinct !{!80, !81, !"lstm_predict: %w2"}
!81 = distinct !{!81, !"lstm_predict"}
!82 = !{!83}
!83 = distinct !{!83, !81, !"lstm_predict: %s"}
!84 = !{!85}
!85 = distinct !{!85, !81, !"lstm_predict: %x"}
!86 = !{!87}
!87 = distinct !{!87, !81, !"lstm_predict: %x2"}
!88 = !{!89, !80, !83, !87}
!89 = distinct !{!89, !81, !"lstm_predict: %w"}
!90 = !{!89, !83, !85, !87}
!91 = !{!89, !80, !83, !85}
!92 = !{!80, !85}
!93 = !{!83, !87}
!94 = !{!89, !80, !85}
!95 = distinct !{!95, !9, !10}
!96 = distinct !{!96, !9, !10}
!97 = distinct !{!97, !9, !10}
!98 = distinct !{!98, !9, !10}
!99 = distinct !{!99, !9, !10}
!100 = distinct !{!100, !9, !10}
!101 = distinct !{!101, !9, !10}
!102 = distinct !{!102, !9, !10}
!103 = distinct !{!103, !9, !10}
!104 = distinct !{!104, !9, !10}
!105 = distinct !{!105, !9, !10}
!106 = distinct !{!106, !9, !10}
!107 = distinct !{!107, !9, !10}
!108 = distinct !{!108, !9, !10}
!109 = distinct !{!109, !9, !10}
!110 = !{!16, !16, i64 0}
!111 = distinct !{!111, !9, !10}
!112 = distinct !{!112, !9, !10}
!113 = distinct !{!113, !9, !10}
!114 = distinct !{!114, !9, !10}
!115 = distinct !{!115, !9, !10}
!116 = distinct !{!116, !9, !10}
!117 = distinct !{!117, !9, !10}
!118 = distinct !{!118, !9, !10}
!119 = distinct !{!119, !9, !10}
!120 = distinct !{!120, !9, !10}
!121 = distinct !{!121, !9, !10}
!122 = distinct !{!122, !9, !10}
!123 = !{!124, !124, i64 0}
!124 = !{!"bool", !5, i64 0}
!125 = !{!126, !126, i64 0}
!126 = !{!"_ZTSN5adept15ArrayPrintStyleE", !5, i64 0}
!127 = !{!128, !128, i64 0}
!128 = !{!"vtable pointer", !6, i64 0}
!129 = !{!130, !124, i64 145}
!130 = !{!"_ZTSN5adept5StackE", !16, i64 40, !131, i64 48, !131, i64 72, !132, i64 96, !133, i64 120, !48, i64 128, !48, i64 132, !48, i64 136, !48, i64 140, !124, i64 144, !124, i64 145, !124, i64 146, !124, i64 147, !124, i64 148}
!131 = !{!"_ZTSSt6vectorIiSaIiEE"}
!132 = !{!"_ZTSNSt7__cxx114listIN5adept3GapESaIS2_EEE"}
!133 = !{!"_ZTSSt14_List_iteratorIN5adept3GapEE", !16, i64 0}
!134 = !{i8 0, i8 2}
!135 = !{!130, !16, i64 40}
!136 = !{!137, !16, i64 0}
!137 = !{!"_ZTSNSt8__detail15_List_node_baseE", !16, i64 0, !16, i64 8}
!138 = distinct !{!138, !9, !10}
!139 = !{!140, !16, i64 0}
!140 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !16, i64 0, !16, i64 8, !16, i64 16}
!141 = !{!142, !16, i64 0}
!142 = !{!"_ZTSN5adept8internal16StackStorageOrigE", !16, i64 0, !16, i64 8, !16, i64 16, !48, i64 24, !48, i64 28, !48, i64 32, !48, i64 36}
!143 = !{!142, !16, i64 8}
!144 = !{!142, !16, i64 16}
!145 = !{!130, !124, i64 144}
!146 = !{!142, !48, i64 24}
!147 = !{!148, !48, i64 0}
!148 = !{!"_ZTSN5adept8internal9StatementE", !48, i64 0, !48, i64 4}
!149 = !{!148, !48, i64 4}
!150 = distinct !{!150, !9, !10}
!151 = distinct !{!151, !9, !10}
!152 = distinct !{!152, !9, !10}
!153 = distinct !{!153, !9, !10}
!154 = !{!130, !48, i64 140}
!155 = !{!156, !48, i64 4}
!156 = !{!"_ZTSN5adept3GapE", !48, i64 0, !48, i64 4}
!157 = !{!156, !48, i64 0}
!158 = !{!133, !16, i64 0}
!159 = !{!160, !4, i64 16}
!160 = !{!"_ZTSNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EEE", !161, i64 0}
!161 = !{!"_ZTSNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE10_List_implE", !162, i64 0}
!162 = !{!"_ZTSNSt8__detail17_List_node_headerE", !4, i64 16}
!163 = !{i64 0, i64 8, !110}
!164 = distinct !{!164, !9, !10}
!165 = !{!130, !48, i64 128}
!166 = !{!130, !48, i64 136}
!167 = distinct !{!167, !9, !10}
!168 = !{!137, !16, i64 8}
!169 = distinct !{!169, !9, !10}
!170 = distinct !{!170, !9, !10}
!171 = distinct !{!171, !9, !10}
!172 = distinct !{!172, !9, !10}
!173 = distinct !{!173, !9, !10}
!174 = !{!130, !48, i64 132}
!175 = !{!130, !124, i64 146}
!176 = !{!142, !48, i64 28}
!177 = !{!142, !48, i64 32}
!178 = !{!142, !48, i64 36}
!179 = !{!140, !16, i64 8}
!180 = distinct !{!180, !9, !10}
!181 = distinct !{!181, !9, !10}
!182 = !{!183}
!183 = distinct !{!183, !184, !"_ZNK5adept8internal6PacketIdE3putEPd: %d"}
!184 = distinct !{!184, !"_ZNK5adept8internal6PacketIdE3putEPd"}
!185 = distinct !{!185, !9, !10}
!186 = distinct !{!186, !9, !10}
!187 = distinct !{!187, !9, !10}
!188 = distinct !{!188, !9, !10}
!189 = distinct !{!189, !9, !10}
!190 = !{!191}
!191 = distinct !{!191, !192, !"_ZNK5adept5Stack23jacobian_forward_kernelEPd: %gradient_multipass_b"}
!192 = distinct !{!192, !"_ZNK5adept5Stack23jacobian_forward_kernelEPd"}
!193 = !{!194, !191}
!194 = distinct !{!194, !195, !"_ZNK5adept8internal6PacketIdE3putEPd: %d"}
!195 = distinct !{!195, !"_ZNK5adept8internal6PacketIdE3putEPd"}
!196 = distinct !{!196, !9, !10}
!197 = distinct !{!197, !9, !10}
!198 = distinct !{!198, !9, !10}
!199 = distinct !{!199, !9, !10}
!200 = !{!201}
!201 = distinct !{!201, !202, !"_ZNK5adept5Stack23jacobian_forward_kernelEPd: %gradient_multipass_b"}
!202 = distinct !{!202, !"_ZNK5adept5Stack23jacobian_forward_kernelEPd"}
!203 = !{!204, !201}
!204 = distinct !{!204, !205, !"_ZNK5adept8internal6PacketIdE3putEPd: %d"}
!205 = distinct !{!205, !"_ZNK5adept8internal6PacketIdE3putEPd"}
!206 = distinct !{!206, !9, !10}
!207 = distinct !{!207, !9, !10}
!208 = !{!209}
!209 = distinct !{!209, !210, !"_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi: %gradient_multipass_b"}
!210 = distinct !{!210, !"_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi"}
!211 = distinct !{!211, !9, !10}
!212 = distinct !{!212, !9, !10}
!213 = distinct !{!213, !9, !10}
!214 = distinct !{!214, !9, !10}
!215 = distinct !{!215, !9, !10}
!216 = distinct !{!216, !9, !10}
!217 = distinct !{!217, !9, !10}
!218 = distinct !{!218, !9, !10}
!219 = distinct !{!219, !9, !10}
!220 = distinct !{!220, !9, !10}
!221 = distinct !{!221, !9, !10}
!222 = distinct !{!222, !9, !10}
!223 = distinct !{!223, !9, !10}
!224 = distinct !{!224, !9, !10}
!225 = distinct !{!225, !9, !10}
!226 = distinct !{!226, !9, !10}
!227 = distinct !{!227, !9, !10}
!228 = !{!229}
!229 = distinct !{!229, !230, !"_ZN5adept7versionB5cxx11Ev: %agg.result"}
!230 = distinct !{!230, !"_ZN5adept7versionB5cxx11Ev"}
!231 = !{!232}
!232 = distinct !{!232, !233, !"_ZN5adept16compiler_versionB5cxx11Ev: %agg.result"}
!233 = distinct !{!233, !"_ZN5adept16compiler_versionB5cxx11Ev"}
!234 = !{!235}
!235 = distinct !{!235, !236, !"_ZN5adept14compiler_flagsB5cxx11Ev: %agg.result"}
!236 = distinct !{!236, !"_ZN5adept14compiler_flagsB5cxx11Ev"}
!237 = !{!238, !4, i64 8}
!238 = !{!"_ZTSSi", !4, i64 8}
!239 = !{!240, !16, i64 8}
!240 = !{!"_ZTSN5adept5ArrayILi1EdLb0EEE", !16, i64 0, !16, i64 8, !241, i64 16, !241, i64 20}
!241 = !{!"_ZTSN5adept14ExpressionSizeILi1EEE", !5, i64 0}
!242 = !{!240, !16, i64 0}
!243 = distinct !{!243, !9, !10}
!244 = !{!245, !62, i64 0}
!245 = !{!"_ZTSN5adept6ActiveIdEE", !62, i64 0, !48, i64 8}
!246 = !{!245, !48, i64 8}
!247 = distinct !{!247, !9, !10}
!248 = distinct !{!248, !9, !10}
!249 = !{!162, !4, i64 16}
!250 = !{!130, !124, i64 147}
!251 = !{!130, !124, i64 148}
!252 = distinct !{!252, !9, !10}
!253 = !{!254}
!254 = distinct !{!254, !255, !"_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE: %agg.result"}
!255 = distinct !{!255, !"_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE"}
!256 = distinct !{!256, !9, !10}
!257 = distinct !{!257, !9, !10}
!258 = !{!33, !16, i64 0}
!259 = distinct !{!259, !9, !10}
!260 = !{!50, !16, i64 16}
!261 = distinct !{!261, !9, !10}
!262 = !{!263}
!263 = distinct !{!263, !264, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_: %agg.result"}
!264 = distinct !{!264, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"}
!265 = distinct !{!265, !9, !10}
!266 = !{!267, !48, i64 8}
!267 = !{!"_ZTSN5adept7StorageIdEE", !16, i64 0, !48, i64 8, !48, i64 12, !48, i64 16}
!268 = !{!267, !48, i64 12}
!269 = !{!267, !48, i64 16}
!270 = !{!267, !16, i64 0}
!271 = !{!272}
!272 = distinct !{!272, !273, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_: %agg.result"}
!273 = distinct !{!273, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"}
!274 = !{!275, !277, i64 32}
!275 = !{!"_ZTSSt8ios_base", !4, i64 8, !4, i64 16, !276, i64 24, !277, i64 28, !277, i64 32, !16, i64 40, !278, i64 48, !5, i64 64, !48, i64 192, !16, i64 200, !279, i64 208}
!276 = !{!"_ZTSSt13_Ios_Fmtflags", !5, i64 0}
!277 = !{!"_ZTSSt12_Ios_Iostate", !5, i64 0}
!278 = !{!"_ZTSNSt8ios_base6_WordsE", !16, i64 0, !4, i64 8}
!279 = !{!"_ZTSSt6locale", !16, i64 0}
!280 = distinct !{!280, !9, !10}
!281 = distinct !{!281, !9, !10}
!282 = !{!283}
!283 = distinct !{!283, !284, !"_ZN5adeptplINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EES4_EENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINS8_4typeENS9_4typeEE4typeES8_NS1_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE: %agg.result"}
!284 = distinct !{!284, !"_ZN5adeptplINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EES4_EENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINS8_4typeENS9_4typeEE4typeES8_NS1_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE"}
!285 = distinct !{!285, !9, !10}
!286 = distinct !{!286, !9, !10}
!287 = !{!288, !16, i64 0}
!288 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_EE", !16, i64 0, !16, i64 8}
!289 = !{!288, !16, i64 8}
!290 = !{!291, !16, i64 0}
!291 = !{!"_ZTSN5adept8internal14UnaryOperationIdNS0_10UnaryMinusENS_6ActiveIdEEEE", !16, i64 0}
!292 = !{!293, !16, i64 8}
!293 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_10UnaryMinusENS_6ActiveIdEEEENS0_6DivideES5_EE", !291, i64 0, !16, i64 8}
!294 = !{!295, !16, i64 0}
!295 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_EE", !16, i64 0, !16, i64 8}
!296 = !{!295, !16, i64 8}
!297 = !{!298}
!298 = distinct !{!298, !299, !"_ZN5adeptplINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EES4_EENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINS8_4typeENS9_4typeEE4typeES8_NS1_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE: %agg.result"}
!299 = distinct !{!299, !"_ZN5adeptplINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EES4_EENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINS8_4typeENS9_4typeEE4typeES8_NS1_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE"}
!300 = !{!301}
!301 = distinct !{!301, !302, !"_ZN5adeptplINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EES4_EENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINS8_4typeENS9_4typeEE4typeES8_NS1_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE: %agg.result"}
!302 = distinct !{!302, !"_ZN5adeptplINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EES4_EENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINS8_4typeENS9_4typeEE4typeES8_NS1_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE"}
!303 = !{!304}
!304 = distinct !{!304, !305, !"_ZN5adeptplINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EES4_EENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINS8_4typeENS9_4typeEE4typeES8_NS1_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE: %agg.result"}
!305 = distinct !{!305, !"_ZN5adeptplINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EES4_EENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINS8_4typeENS9_4typeEE4typeES8_NS1_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE"}
!306 = distinct !{!306, !9, !10}
!307 = distinct !{!307, !9, !10}
!308 = distinct !{!308, !9, !10}
!309 = !{!310, !16, i64 16}
!310 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_8MultiplyES3_EENS0_3AddES3_EE", !295, i64 0, !16, i64 16}
!311 = !{!312}
!312 = distinct !{!312, !313, !"_ZN5adeptdvINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpENS6_IdNS3_10UnaryMinusES2_EEEEEEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINSD_4typeENSE_4typeEE4typeESD_NS3_6DivideESE_EEE4typeERKNS_10ExpressionISG_SD_EERKNSO_ISH_SE_EE: %agg.result"}
!313 = distinct !{!313, !"_ZN5adeptdvINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpENS6_IdNS3_10UnaryMinusES2_EEEEEEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINSD_4typeENSE_4typeEE4typeESD_NS3_6DivideESE_EEE4typeERKNS_10ExpressionISG_SD_EERKNSO_ISH_SE_EE"}
!314 = !{!315, !16, i64 0}
!315 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyENS0_14UnaryOperationIdNS0_4TanhES3_EEEE", !16, i64 0, !316, i64 8}
!316 = !{!"_ZTSN5adept8internal14UnaryOperationIdNS0_4TanhENS_6ActiveIdEEEE", !16, i64 0}
!317 = !{!316, !16, i64 0}
!318 = !{!319, !16, i64 0}
!319 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_6DivideENS1_IdS3_NS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS6_IdNS0_10UnaryMinusES3_EEEEEEEE", !16, i64 0, !320, i64 8}
!320 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS5_IdNS0_10UnaryMinusES3_EEEEEE", !16, i64 0, !321, i64 8}
!321 = !{!"_ZTSN5adept8internal14UnaryOperationIdNS0_3ExpENS1_IdNS0_10UnaryMinusENS_6ActiveIdEEEEEE", !291, i64 0}
!322 = !{!320, !16, i64 0}
!323 = !{!324, !16, i64 0}
!324 = !{!"_ZTSN5adept8internal14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEE", !16, i64 0}
!325 = !{!326, !16, i64 0}
!326 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpES3_EEEE", !16, i64 0, !327, i64 8}
!327 = !{!"_ZTSN5adept8internal14UnaryOperationIdNS0_3ExpENS_6ActiveIdEEEE", !16, i64 0}
!328 = !{!327, !16, i64 0}
!329 = !{!330, !16, i64 0}
!330 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_EE", !16, i64 0, !16, i64 8}
!331 = !{!330, !16, i64 8}
!332 = !{!333, !16, i64 0}
!333 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEEE", !16, i64 0, !295, i64 8}
!334 = distinct !{!334, !9, !10}
!335 = distinct !{!335, !9, !10}
!336 = !{!"true"}
!337 = distinct !{}
!338 = distinct !{}
!339 = distinct !{}
!340 = distinct !{}
!341 = distinct !{}
!342 = distinct !{}
!343 = distinct !{}
!344 = !{i64 8}
!345 = distinct !{}
!346 = distinct !{}
!347 = distinct !{}
!348 = distinct !{}
!349 = distinct !{}
!350 = distinct !{}
!351 = distinct !{}
!352 = !{i64 48}
!353 = distinct !{}
!354 = distinct !{}
!355 = distinct !{}
!356 = distinct !{}
!357 = distinct !{}
!358 = distinct !{}
!359 = distinct !{}
!360 = distinct !{}
!361 = distinct !{}
!362 = distinct !{}
!363 = distinct !{}
!364 = distinct !{}
!365 = distinct !{}
!366 = distinct !{}
!367 = distinct !{}
!368 = distinct !{}
!369 = distinct !{}
!370 = distinct !{}
!371 = distinct !{}
!372 = distinct !{}
!373 = distinct !{}
!374 = distinct !{}
!375 = distinct !{}
!376 = distinct !{}
!377 = distinct !{}
!378 = distinct !{}
!379 = distinct !{}
!380 = distinct !{}
!381 = distinct !{}
!382 = distinct !{}
!383 = distinct !{}
!384 = distinct !{}
