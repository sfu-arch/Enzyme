; ModuleID = 'gmm-raw.ll'
source_filename = "gmm.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.adept::Stack" = type <{ %"class.adept::internal::StackStorageOrig", double*, %"class.std::vector.8", %"class.std::vector.8", %"class.std::__cxx11::list", %"struct.std::_List_iterator", i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.adept::internal::StackStorageOrig" = type { %"struct.adept::internal::Statement"*, double*, i32*, i32, i32, i32, i32 }
%"struct.adept::internal::Statement" = type { i32, i32 }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::__cxx11::list" = type { %"class.std::__cxx11::_List_base" }
%"class.std::__cxx11::_List_base" = type { %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl" }
%"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl" = type { %"struct.std::__detail::_List_node_header" }
%"struct.std::__detail::_List_node_header" = type { %"struct.std::__detail::_List_node_base", i64 }
%"struct.std::__detail::_List_node_base" = type { %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"* }
%"struct.std::_List_iterator" = type { %"struct.std::__detail::_List_node_base"* }
%"struct.adept::internal::EndIndex" = type { i8 }
%"class.adept::internal::AllIndex" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.timeval = type { i64, i64 }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" = type { double*, double*, double* }
%struct.Wishart = type { double, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.GMMInput = type { i32, i32, i32, %"class.std::vector.3", %"class.std::vector.3", %"class.std::vector.3", %"class.std::vector.3", %struct.Wishart }
%"class.std::bad_alloc" = type { %"class.std::exception" }
%"class.std::exception" = type { i32 (...)** }
%"class.adept::invalid_operation" = type { %"class.adept::array_exception" }
%"class.adept::array_exception" = type { %"class.adept::exception" }
%"class.adept::exception" = type { %"class.std::exception", %"class.std::__cxx11::basic_string" }
%"struct.adept::Gap" = type { i32, i32 }
%"struct.std::_List_node" = type { %"struct.std::__detail::_List_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [8 x i8] }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.adept::Array" = type { float*, %"class.adept::Storage"*, %"class.adept::ExpressionSize", %"class.adept::ExpressionSize" }
%"class.adept::Storage" = type opaque
%"class.adept::ExpressionSize" = type { [2 x i32] }
%"class.adept::SpecialMatrix" = type { float*, %"class.adept::Storage"*, i32, i32 }
%"class.adept::SpecialMatrix.19" = type { float*, %"class.adept::Storage"*, i32, i32 }
%"class.adept::Array.22" = type { double*, %"class.adept::Storage.24"*, %"class.adept::ExpressionSize", %"class.adept::ExpressionSize" }
%"class.adept::Storage.24" = type <{ double*, i32, i32, i32, [4 x i8] }>
%"class.adept::SpecialMatrix.25" = type { double*, %"class.adept::Storage.24"*, i32, i32 }
%"class.adept::SpecialMatrix.27" = type { double*, %"class.adept::Storage.24"*, i32, i32 }
%"struct.adept::Block" = type { [2 x double] }
%"class.std::__cxx11::basic_stringstream" = type { %"class.std::basic_iostream.base", %"class.std::__cxx11::basic_stringbuf", %"class.std::basic_ios" }
%"class.std::basic_iostream.base" = type { %"class.std::basic_istream.base", %"class.std::basic_ostream.base" }
%"class.std::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::__cxx11::basic_stringbuf" = type { %"class.std::basic_streambuf", i32, %"class.std::__cxx11::basic_string" }
%"class.adept::Array.35" = type { float*, %"class.adept::Storage"*, %"class.adept::ExpressionSize.37", %"class.adept::ExpressionSize.37" }
%"class.adept::ExpressionSize.37" = type { [1 x i32] }
%"class.adept::Array.38" = type { double*, %"class.adept::Storage.24"*, %"class.adept::ExpressionSize.37", %"class.adept::ExpressionSize.37" }
%"class.adept::Active" = type <{ double, i32, [4 x i8] }>
%"struct.adept::internal::BinaryOperation.69" = type { %"class.adept::Active"*, %"class.adept::Active"* }
%"struct.adept::internal::BinaryOperation.71" = type { %"class.adept::Active"*, %"struct.adept::internal::BinaryOperation.69" }
%"class.std::vector.45" = type { %"struct.std::_Vector_base.46" }
%"struct.std::_Vector_base.46" = type { %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl" }
%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl" = type { %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data" = type { %"class.adept::Active"*, %"class.adept::Active"*, %"class.adept::Active"* }
%"class.std::allocator.47" = type { i8 }
%"struct.adept::internal::BinaryOperation.51" = type { %"class.adept::Active"*, %"class.adept::Active"* }
%"struct.adept::internal::BinaryOperation.54" = type { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* }
%"struct.adept::internal::BinaryOpScalarLeft.56" = type <{ %"struct.adept::internal::Packet", %"class.adept::Active"*, [8 x i8] }>
%"struct.adept::internal::Packet" = type { %union.anon.29 }
%union.anon.29 = type { <2 x double> }
%"struct.adept::internal::BinaryOpScalarLeft.59" = type { %"struct.adept::internal::Packet.61", %"class.adept::Active"* }
%"struct.adept::internal::Packet.61" = type { i32 }
%"struct.adept::Expression.70" = type { i8 }
%"struct.adept::Expression.72" = type { i8 }
%"struct.adept::Expression.52" = type { i8 }
%"struct.adept::Expression.55" = type { i8 }
%"class.adept::stack_already_active" = type { %"class.adept::autodiff_exception" }
%"class.adept::autodiff_exception" = type { %"class.adept::exception" }
%"class.adept::gradients_not_initialized" = type { %"class.adept::autodiff_exception" }
%"class.adept::feature_not_available" = type { %"class.adept::exception" }
%"class.adept::dependents_or_independents_not_identified" = type { %"class.adept::autodiff_exception" }
%"class.adept::invalid_dimension" = type { %"class.adept::array_exception" }
%"struct.adept::internal::BinaryOperation.74" = type { %"class.adept::Active"*, %"struct.adept::internal::UnaryOperation.76" }
%"struct.adept::internal::UnaryOperation.76" = type { %"struct.adept::internal::BinaryOperation.78" }
%"struct.adept::internal::BinaryOperation.78" = type { %"class.adept::Active"*, %"class.adept::Active"* }
%"struct.adept::internal::BinaryOperation.80" = type { %"struct.adept::internal::UnaryOperation.82", %"class.adept::Active"* }
%"struct.adept::internal::UnaryOperation.82" = type { %"class.adept::Active"* }
%"struct.adept::Expression.75" = type { i8 }
%"struct.adept::Expression.81" = type { i8 }
%"struct.adept::internal::BinaryOpScalarRight" = type { %"class.adept::Active"*, %"struct.adept::internal::Packet" }
%"struct.adept::Expression.90" = type { i8 }
%"class.adept::gradient_out_of_range" = type { %"class.adept::autodiff_exception" }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ = comdat any

$__clang_call_terminate = comdat any

$_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZN5adept9exceptionD2Ev = comdat any

$_ZN5adept3invIfEENS_5ArrayILi2ET_Lb0EEERKS3_ = comdat any

$_ZN5adept3invIfLNS_8internal21SymmMatrixOrientationE0EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_ = comdat any

$_ZN5adept3invIfLNS_8internal21SymmMatrixOrientationE1EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_ = comdat any

$_ZN5adept3invIdEENS_5ArrayILi2ET_Lb0EEERKS3_ = comdat any

$_ZN5adept3invIdLNS_8internal21SymmMatrixOrientationE0EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_ = comdat any

$_ZN5adept3invIdLNS_8internal21SymmMatrixOrientationE1EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_ = comdat any

$_ZN5adept5solveIfEENS_5ArrayILi1ET_Lb0EEERKNS1_ILi2ES2_Lb0EEERKS3_ = comdat any

$_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIfEENS_5ArrayILi2ET_Lb0EEERKS3_S5_ = comdat any

$_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIdEENS_5ArrayILi1ET_Lb0EEERKNS1_ILi2ES2_Lb0EEERKS3_ = comdat any

$_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIdEENS_5ArrayILi2ET_Lb0EEERKS3_S5_ = comdat any

$_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5StackC2Eb = comdat any

$_ZN5adept6ActiveIdED2Ev = comdat any

$_ZN5adept5Stack13new_recordingEv = comdat any

$_ZN9adeptTest13gmm_objectiveIN5adept6ActiveIdEEEEviiiPKT_S6_S6_PKd7WishartPS4_ = comdat any

$_ZN5adept17invalid_operationD0Ev = comdat any

$_ZNK5adept9exception4whatEv = comdat any

$_ZN5adept15array_exceptionD0Ev = comdat any

$_ZN5adept9exceptionD0Ev = comdat any

$_ZN5adept20stack_already_activeD0Ev = comdat any

$_ZN5adept25gradients_not_initializedD0Ev = comdat any

$_ZN5adept21feature_not_availableD0Ev = comdat any

$_ZN5adept41dependents_or_independents_not_identifiedD0Ev = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ = comdat any

$_ZNSt6vectorIdSaIdEE17_M_default_appendEm = comdat any

$_ZN5adept5ArrayILi1EdLb0EE6resizeEPKib = comdat any

$_ZN5adept7StorageIdE11remove_linkEv = comdat any

$_ZN5adept8internal18exception_locationB5cxx11EPKci = comdat any

$_ZN5adept17invalid_dimensionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZN5adept17invalid_dimensionD0Ev = comdat any

$_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_ = comdat any

$_ZN9adeptTest13preprocess_qsIN5adept6ActiveIdEEEEviiPKT_PS4_S7_ = comdat any

$_ZN5adept6ActiveIdEC2IdEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE = comdat any

$_ZN9adeptTest8subtractIdN5adept6ActiveIdEES3_EEviPKT_PKT0_PT1_ = comdat any

$_ZN9adeptTest9logsumexpIN5adept6ActiveIdEEEET_iPKS4_ = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS3_18BinaryOpScalarLeftIddNS3_3AddES1_EENS3_8SubtractENS5_IdiNS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE = comdat any

$_ZN9adeptTest17log_wishart_priorIN5adept6ActiveIdEEEET_ii7WishartPKS4_S7_S7_ = comdat any

$_ZN5adept6ActiveIdEaSERKS1_ = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE = comdat any

$_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpENS4_IdS1_NS3_8SubtractES1_EEEEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE = comdat any

$_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdNS3_14UnaryOperationIdNS3_3LogES1_EENS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSC_4rankLi0EsrSC_9is_activeEvE4typeE = comdat any

$_ZN5adept6ActiveIdEC2IiEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE = comdat any

$_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE = comdat any

$_ZN5adept6ActiveIdEC2IdNS_8internal19BinaryOpScalarRightIdS1_NS3_8SubtractEdEEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE = comdat any

$_ZN5adept5Stack13set_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPKS4_ = comdat any

$_ZN5adept21gradient_out_of_rangeD0Ev = comdat any

$_ZNK5adept5Stack13get_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPS4_ = comdat any

$_ZTWN5adept21_stack_current_threadE = comdat any

$_ZTSN5adept17invalid_operationE = comdat any

$_ZTSN5adept15array_exceptionE = comdat any

$_ZTSN5adept9exceptionE = comdat any

$_ZTIN5adept9exceptionE = comdat any

$_ZTIN5adept15array_exceptionE = comdat any

$_ZTIN5adept17invalid_operationE = comdat any

$_ZTSN5adept20stack_already_activeE = comdat any

$_ZTSN5adept18autodiff_exceptionE = comdat any

$_ZTIN5adept18autodiff_exceptionE = comdat any

$_ZTIN5adept20stack_already_activeE = comdat any

$_ZTSN5adept25gradients_not_initializedE = comdat any

$_ZTIN5adept25gradients_not_initializedE = comdat any

$_ZTSN5adept21feature_not_availableE = comdat any

$_ZTIN5adept21feature_not_availableE = comdat any

$_ZTSN5adept41dependents_or_independents_not_identifiedE = comdat any

$_ZTIN5adept41dependents_or_independents_not_identifiedE = comdat any

$_ZTVN5adept17invalid_operationE = comdat any

$_ZTVN5adept15array_exceptionE = comdat any

$_ZTVN5adept9exceptionE = comdat any

$_ZTVN5adept20stack_already_activeE = comdat any

$_ZTVN5adept25gradients_not_initializedE = comdat any

$_ZTVN5adept21feature_not_availableE = comdat any

$_ZTVN5adept41dependents_or_independents_not_identifiedE = comdat any

$_ZTSN5adept17invalid_dimensionE = comdat any

$_ZTIN5adept17invalid_dimensionE = comdat any

$_ZTVN5adept17invalid_dimensionE = comdat any

$_ZTSN5adept21gradient_out_of_rangeE = comdat any

$_ZTIN5adept21gradient_out_of_rangeE = comdat any

$_ZTVN5adept21gradient_out_of_rangeE = comdat any

@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"/\\\00", align 1
@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@.str.7 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"could not open file: %s\0A\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"%i %i %i\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"%lf %i\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"-rep\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"data/1k\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"1k/\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"data/2.5k\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"2.5k/\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"data/10k\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"10k/gmm_d128_K200.txt\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"10k/gmm_d128_K100.txt\00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"10k/gmm_d64_K200.txt\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"10k/gmm_d128_K50.txt\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"10k/gmm_d64_K100.txt\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"starting path %s\0A\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"data/\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"Tapenade combined %0.6f\0A\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"%f \00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZTISt9bad_alloc = external dso_local constant i8*
@.str.30 = private unnamed_addr constant [22 x i8] c"Adept combined %0.6f\0A\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"Enzyme combined %0.6f\0A\00", align 1
@_ZN5adept8internal21array_row_major_orderE = dso_local local_unnamed_addr global i8 1, align 1
@_ZN5adept8internal17array_print_styleE = dso_local local_unnamed_addr global i32 2, align 4
@_ZN5adept8internal16vector_separatorB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.34 = private unnamed_addr constant [3 x i8] c", \00", align 1
@_ZN5adept8internal19vector_print_beforeB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.36 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@_ZN5adept8internal18vector_print_afterB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.38 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZN5adept8internal21array_opening_bracketB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZN5adept8internal21array_closing_bracketB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZN5adept8internal26array_contiguous_separatorB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.43 = private unnamed_addr constant [3 x i8] c",\0A\00", align 1
@_ZN5adept8internal18array_print_beforeB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.45 = private unnamed_addr constant [3 x i8] c"\0A{\00", align 1
@_ZN5adept8internal17array_print_afterB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZN5adept8internal24array_print_empty_beforeB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.48 = private unnamed_addr constant [13 x i8] c"(empty rank-\00", align 1
@_ZN5adept8internal23array_print_empty_afterB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.50 = private unnamed_addr constant [8 x i8] c" array)\00", align 1
@_ZN5adept8internal18array_print_indentE = dso_local local_unnamed_addr global i8 1, align 1
@_ZN5adept8internal22array_print_empty_rankE = dso_local local_unnamed_addr global i8 1, align 1
@.str.51 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.52 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"empty\00", align 1
@.str.54 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@.str.57 = private unnamed_addr constant [33 x i8] c"Array print style not understood\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN5adept17invalid_operationE = linkonce_odr dso_local constant [28 x i8] c"N5adept17invalid_operationE\00", comdat, align 1
@_ZTSN5adept15array_exceptionE = linkonce_odr dso_local constant [26 x i8] c"N5adept15array_exceptionE\00", comdat, align 1
@_ZTSN5adept9exceptionE = linkonce_odr dso_local constant [19 x i8] c"N5adept9exceptionE\00", comdat, align 1
@_ZTISt9exception = external dso_local constant i8*
@_ZTIN5adept9exceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTSN5adept9exceptionE, i32 0, i32 0), i8* bitcast (i8** @_ZTISt9exception to i8*) }, comdat, align 8
@_ZTIN5adept15array_exceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN5adept15array_exceptionE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept9exceptionE to i8*) }, comdat, align 8
@_ZTIN5adept17invalid_operationE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN5adept17invalid_operationE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept15array_exceptionE to i8*) }, comdat, align 8
@_ZN5adept21_stack_current_threadE = dso_local thread_local global %"class.adept::Stack"* null, align 8
@_ZN5adept28_stack_current_thread_unsafeE = dso_local local_unnamed_addr global %"class.adept::Stack"* null, align 8
@.str.58 = private unnamed_addr constant [78 x i8] c"Attempt to activate an adept::Stack when one is already active in this thread\00", align 1
@_ZTSN5adept20stack_already_activeE = linkonce_odr dso_local constant [31 x i8] c"N5adept20stack_already_activeE\00", comdat, align 1
@_ZTSN5adept18autodiff_exceptionE = linkonce_odr dso_local constant [29 x i8] c"N5adept18autodiff_exceptionE\00", comdat, align 1
@_ZTIN5adept18autodiff_exceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN5adept18autodiff_exceptionE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept9exceptionE to i8*) }, comdat, align 8
@_ZTIN5adept20stack_already_activeE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @_ZTSN5adept20stack_already_activeE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*) }, comdat, align 8
@.str.59 = private unnamed_addr constant [107 x i8] c"Gradients not initialized: at least one call to set_gradient(s) is needed before a forward or reverse pass\00", align 1
@_ZTSN5adept25gradients_not_initializedE = linkonce_odr dso_local constant [36 x i8] c"N5adept25gradients_not_initializedE\00", comdat, align 1
@_ZTIN5adept25gradients_not_initializedE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTSN5adept25gradients_not_initializedE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*) }, comdat, align 8
@.str.60 = private unnamed_addr constant [5 x i8] c": d[\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"] = \00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"0\0A\00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c" + \00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"*d[\00", align 1
@.str.65 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.66 = private unnamed_addr constant [26 x i8] c"No gradients initialized\0A\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.68 = private unnamed_addr constant [42 x i8] c"Automatic Differentiation Stack (address \00", align 1
@.str.69 = private unnamed_addr constant [4 x i8] c"):\0A\00", align 1
@.str.70 = private unnamed_addr constant [37 x i8] c"   Currently attached - thread safe\0A\00", align 1
@.str.71 = private unnamed_addr constant [39 x i8] c"   Currently attached - thread unsafe\0A\00", align 1
@.str.72 = private unnamed_addr constant [23 x i8] c"   Currently detached\0A\00", align 1
@.str.73 = private unnamed_addr constant [22 x i8] c"   Recording status:\0A\00", align 1
@.str.74 = private unnamed_addr constant [23 x i8] c"      Recording is ON\0A\00", align 1
@.str.75 = private unnamed_addr constant [27 x i8] c"      Recording is PAUSED\0A\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"      \00", align 1
@.str.77 = private unnamed_addr constant [14 x i8] c" statements (\00", align 1
@.str.78 = private unnamed_addr constant [12 x i8] c" allocated)\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c" and \00", align 1
@.str.80 = private unnamed_addr constant [14 x i8] c" operations (\00", align 1
@.str.81 = private unnamed_addr constant [13 x i8] c" allocated)\0A\00", align 1
@.str.82 = private unnamed_addr constant [33 x i8] c" gradients currently registered \00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"and a total of \00", align 1
@.str.84 = private unnamed_addr constant [24 x i8] c" needed (current index \00", align 1
@.str.85 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.86 = private unnamed_addr constant [33 x i8] c"      Gradient list has no gaps\0A\00", align 1
@.str.87 = private unnamed_addr constant [25 x i8] c"      Gradient list has \00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c" gaps (\00", align 1
@.str.89 = private unnamed_addr constant [24 x i8] c"   Computation status:\0A\00", align 1
@.str.90 = private unnamed_addr constant [22 x i8] c" gradients assigned (\00", align 1
@.str.91 = private unnamed_addr constant [29 x i8] c"      0 gradients assigned (\00", align 1
@.str.92 = private unnamed_addr constant [22 x i8] c"      Jacobian size: \00", align 1
@.str.93 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"      Independent indices:\00", align 1
@.str.95 = private unnamed_addr constant [28 x i8] c"\0A      Dependent indices:  \00", align 1
@.str.96 = private unnamed_addr constant [51 x i8] c"      Parallel Jacobian calculation not available\0A\00", align 1
@_ZN5adept8internal26n_storage_objects_created_E = dso_local local_unnamed_addr global i32 0, align 4
@_ZN5adept8internal26n_storage_objects_deleted_E = dso_local local_unnamed_addr global i32 0, align 4
@.str.97 = private unnamed_addr constant [74 x i8] c"Cannot perform matrix-matrix multiplication because compiled without BLAS\00", align 1
@_ZTSN5adept21feature_not_availableE = linkonce_odr dso_local constant [32 x i8] c"N5adept21feature_not_availableE\00", comdat, align 1
@_ZTIN5adept21feature_not_availableE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZTSN5adept21feature_not_availableE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept9exceptionE to i8*) }, comdat, align 8
@.str.98 = private unnamed_addr constant [74 x i8] c"Cannot perform matrix-vector multiplication because compiled without BLAS\00", align 1
@.str.99 = private unnamed_addr constant [84 x i8] c"Cannot perform symmetric matrix-matrix multiplication because compiled without BLAS\00", align 1
@.str.100 = private unnamed_addr constant [84 x i8] c"Cannot perform symmetric matrix-vector multiplication because compiled without BLAS\00", align 1
@.str.101 = private unnamed_addr constant [79 x i8] c"Cannot perform band matrix-vector multiplication because compiled without BLAS\00", align 1
@_ZN5adept3endE = dso_local local_unnamed_addr global %"struct.adept::internal::EndIndex" zeroinitializer, align 1
@_ZN5adept2__E = dso_local local_unnamed_addr global %"class.adept::internal::AllIndex" zeroinitializer, align 1
@.str.102 = private unnamed_addr constant [53 x i8] c"Cannot invert matrix because compiled without LAPACK\00", align 1
@.str.103 = private unnamed_addr constant [80 x i8] c"Dependent or independent variables not identified before a Jacobian computation\00", align 1
@_ZTSN5adept41dependents_or_independents_not_identifiedE = linkonce_odr dso_local constant [52 x i8] c"N5adept41dependents_or_independents_not_identifiedE\00", comdat, align 1
@_ZTIN5adept41dependents_or_independents_not_identifiedE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @_ZTSN5adept41dependents_or_independents_not_identifiedE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*) }, comdat, align 8
@.str.104 = private unnamed_addr constant [6 x i8] c"2.0.6\00", align 1
@.str.105 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.106 = private unnamed_addr constant [9 x i8] c" [4.2.1]\00", align 1
@.str.107 = private unnamed_addr constant [15 x i8] c"Adept version \00", align 1
@.str.108 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@.str.109 = private unnamed_addr constant [17 x i8] c"  Compiled with \00", align 1
@.str.110 = private unnamed_addr constant [19 x i8] c"  Compiler flags \22\00", align 1
@.str.111 = private unnamed_addr constant [3 x i8] c"\22\0A\00", align 1
@.str.112 = private unnamed_addr constant [41 x i8] c"  Jacobians processed in blocks of size \00", align 1
@.str.113 = private unnamed_addr constant [62 x i8] c"Cannot solve linear equations because compiled without LAPACK\00", align 1
@.str.114 = private unnamed_addr constant [47 x i8] c"linspace(x1,x2,n) with n=1 only valid if x1=x2\00", align 1
@_ZTVSt9bad_alloc = external dso_local unnamed_addr constant { [5 x i8*] }, align 8
@.str.115 = private unnamed_addr constant [28 x i8] c"A misuse of arrays occurred\00", align 1
@_ZTVN5adept17invalid_operationE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_operationE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::invalid_operation"*)* @_ZN5adept17invalid_operationD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept15array_exceptionE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept15array_exceptionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::array_exception"*)* @_ZN5adept15array_exceptionD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept9exceptionE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept9exceptionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept20stack_already_activeE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept20stack_already_activeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::stack_already_active"*)* @_ZN5adept20stack_already_activeD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept25gradients_not_initializedE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept25gradients_not_initializedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::gradients_not_initialized"*)* @_ZN5adept25gradients_not_initializedD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept21feature_not_availableE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::feature_not_available"*)* @_ZN5adept21feature_not_availableD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept41dependents_or_independents_not_identifiedE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept41dependents_or_independents_not_identifiedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::dependents_or_independents_not_identified"*)* @_ZN5adept41dependents_or_independents_not_identifiedD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@.str.116 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@.str.117 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.118 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@.str.119 = private unnamed_addr constant [21 x i8] c"basic_string::substr\00", align 1
@.str.120 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1
@.str.122 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.123 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE = external dso_local unnamed_addr constant { [16 x i8*] }, align 8
@_ZTVSt15basic_streambufIcSt11char_traitsIcEE = external dso_local unnamed_addr constant { [16 x i8*] }, align 8
@.str.125 = private unnamed_addr constant [35 x i8] c"Negative array dimension requested\00", align 1
@.str.126 = private unnamed_addr constant [89 x i8] c"/localhome/mha157/Enzyme/enzyme/build/benchmarks/adept2/src/adept2/include/adept/Array.h\00", align 1
@_ZTSN5adept17invalid_dimensionE = linkonce_odr dso_local constant [28 x i8] c"N5adept17invalid_dimensionE\00", comdat, align 1
@_ZTIN5adept17invalid_dimensionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN5adept17invalid_dimensionE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept15array_exceptionE to i8*) }, comdat, align 8
@.str.127 = private unnamed_addr constant [58 x i8] c"Attempt to remove more links to a storage object than set\00", align 1
@.str.128 = private unnamed_addr constant [91 x i8] c"/localhome/mha157/Enzyme/enzyme/build/benchmarks/adept2/src/adept2/include/adept/Storage.h\00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c" (in \00", align 1
@.str.130 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZTVN5adept17invalid_dimensionE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_dimensionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::invalid_dimension"*)* @_ZN5adept17invalid_dimensionD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@.str.131 = private unnamed_addr constant [99 x i8] c"Gradient index out of range: probably aReal objects have been created after a set_gradient(s) call\00", align 1
@_ZTSN5adept21gradient_out_of_rangeE = linkonce_odr dso_local constant [32 x i8] c"N5adept21gradient_out_of_rangeE\00", comdat, align 1
@_ZTIN5adept21gradient_out_of_rangeE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZTSN5adept21gradient_out_of_rangeE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*) }, comdat, align 8
@_ZTVN5adept21gradient_out_of_rangeE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21gradient_out_of_rangeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::gradient_out_of_range"*)* @_ZN5adept21gradient_out_of_rangeD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_gmm.cpp, i8* null }]
@str = private unnamed_addr constant [14 x i8] c"starting main\00", align 1
@str.1 = private unnamed_addr constant [29 x i8] c"Adept combined 88888888 ooms\00", align 1

@_ZN5adept5StackD1Ev = dso_local unnamed_addr alias void (%"class.adept::Stack"*), void (%"class.adept::Stack"*)* @_ZN5adept5StackD2Ev
@_ZN5adept8internal16StackStorageOrigD1Ev = dso_local unnamed_addr alias void (%"class.adept::internal::StackStorageOrig"*), void (%"class.adept::internal::StackStorageOrig"*)* @_ZN5adept8internal16StackStorageOrigD2Ev

; Function Attrs: uwtable
define dso_local void @_Z8getTestsRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEPKcS5_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %tests, i8* %name, %"class.std::__cxx11::basic_string"* nocapture readonly %indent) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i.i77 = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %__dnew.i.i.i.i.i = alloca i64, align 8
  %path = alloca [1024 x i8], align 16
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp24 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp30 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp46 = alloca %"class.std::__cxx11::basic_string", align 8
  %call = tail call %struct.__dirstream* @opendir(i8* %name)
  %tobool.not = icmp eq %struct.__dirstream* %call, null
  br i1 %tobool.not, label %cleanup56, label %while.cond.preheader

while.cond.preheader:                             ; preds = %entry
  %call2166 = call %struct.dirent* @readdir(%struct.__dirstream* nonnull %call)
  %cmp.not167 = icmp eq %struct.dirent* %call2166, null
  br i1 %cmp.not167, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %while.cond.preheader
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to i8*
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to %union.anon**
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 1
  %5 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp30 to i8*
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp30, i64 0, i32 2
  %7 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp30 to %union.anon**
  %8 = bitcast %union.anon* %6 to i8*
  %9 = bitcast %union.anon* %6 to i32*
  %_M_string_length.i.i.i.i.i.i60 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp30, i64 0, i32 1
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp46 to i8*
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp46, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp46 to %union.anon**
  %_M_p.i5.i.i78 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %indent, i64 0, i32 0, i32 0
  %_M_string_length.i.i.i79 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %indent, i64 0, i32 1
  %13 = bitcast i64* %__dnew.i.i.i.i.i77 to i8*
  %14 = bitcast %union.anon* %11 to i8*
  %_M_p.i6.i.i.i.i.i83 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp46, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i.i84 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp46, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i.i90 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp46, i64 0, i32 1
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %tests, i64 0, i32 0, i32 0, i32 0, i32 1
  %_M_end_of_storage.i.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %tests, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0
  %16 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %18 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  %19 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  %20 = bitcast %union.anon* %17 to i8*
  %_M_p.i6.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  %21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %22 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  %_M_p.i11.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2, i32 0
  %arraydecay.i.i.i = bitcast %union.anon* %21 to i8*
  %_M_string_length.i.i.i24 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  %arrayidx.i.i.i.i.i61 = getelementptr inbounds i8, i8* %8, i64 4
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.cond.backedge
  %call2168 = phi %struct.dirent* [ %call2166, %while.body.lr.ph ], [ %call2, %while.cond.backedge ]
  %d_type = getelementptr inbounds %struct.dirent, %struct.dirent* %call2168, i64 0, i32 3
  %23 = load i8, i8* %d_type, align 2, !tbaa !2
  %cmp3 = icmp eq i8 %23, 4
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %while.body
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %15) #38
  %arraydecay = getelementptr inbounds %struct.dirent, %struct.dirent* %call2168, i64 0, i32 4, i64 0
  %call5 = call i32 @strcmp(i8* nonnull %arraydecay, i8* nonnull dereferenceable(2) getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #39
  %cmp6 = icmp eq i32 %call5, 0
  br i1 %cmp6, label %cleanup, label %lor.lhs.false, !llvm.loop !8

lor.lhs.false:                                    ; preds = %if.then4
  %call9 = call i32 @strcmp(i8* nonnull %arraydecay, i8* nonnull dereferenceable(3) getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #39
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %cleanup, label %if.end12, !llvm.loop !8

if.end12:                                         ; preds = %lor.lhs.false
  %call16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %15, i64 1024, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8* %name, i8* nonnull %arraydecay) #38
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #38
  call void @llvm.experimental.noalias.scope.decl(metadata !11)
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !14, !alias.scope !11
  %24 = load i8*, i8** %_M_p.i5.i.i78, align 8, !tbaa !17, !noalias !11
  %25 = load i64, i64* %_M_string_length.i.i.i79, align 8, !tbaa !19, !noalias !11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #38, !noalias !11
  store i64 %25, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !11
  %cmp3.i.i.i.i.i = icmp ugt i64 %25, 15
  br i1 %cmp3.i.i.i.i.i, label %if.then4.i.i.i.i.i, label %if.end6.i.i.i.i.i

if.then4.i.i.i.i.i:                               ; preds = %if.end12
  %call5.i.i.i4.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i.i, i64 0)
  store i8* %call5.i.i.i4.i.i, i8** %_M_p.i6.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !11
  %26 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !11
  store i64 %26, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !21, !alias.scope !11
  br label %if.end6.i.i.i.i.i

if.end6.i.i.i.i.i:                                ; preds = %if.end12, %if.then4.i.i.i.i.i
  %27 = phi i8* [ %call5.i.i.i4.i.i, %if.then4.i.i.i.i.i ], [ %20, %if.end12 ]
  switch i64 %25, label %if.end.i.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i.i
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
  ]

if.then.i.i.i.i.i.i.i:                            ; preds = %if.end6.i.i.i.i.i
  %28 = load i8, i8* %24, align 1, !tbaa !21
  store i8 %28, i8* %27, align 1, !tbaa !21
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i

if.end.i.i.i.i.i.i.i.i:                           ; preds = %if.end6.i.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %24, i64 %25, i1 false) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i: ; preds = %if.end.i.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i, %if.end6.i.i.i.i.i
  %29 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !11
  store i64 %29, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19, !alias.scope !11
  %30 = load i8*, i8** %_M_p.i6.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !11
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %30, i64 %29
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #38, !noalias !11
  %call.i.i.i = call i64 @strlen(i8* nonnull dereferenceable(1) %arraydecay) #38, !noalias !11
  %31 = load i64, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19, !alias.scope !11
  %sub3.i.i.i = sub i64 4611686018427387903, %31
  %cmp.i.i.i = icmp ult i64 %sub3.i.i.i, %call.i.i.i
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i

if.then.i.i.i:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i64 0, i64 0)) #40
          to label %.noexc.i unwind label %lpad.i.loopexit.split-lp

.noexc.i:                                         ; preds = %if.then.i.i.i
  unreachable

_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i
  %call2.i1.i = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* nonnull %arraydecay, i64 %call.i.i.i)
          to label %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit unwind label %lpad.i.loopexit

lpad.i.loopexit:                                  ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
  %lpad.loopexit127 = landingpad { i8*, i32 }
          cleanup
  br label %lpad.i

lpad.i.loopexit.split-lp:                         ; preds = %if.then.i.i.i
  %lpad.loopexit.split-lp128 = landingpad { i8*, i32 }
          cleanup
  br label %lpad.i

lpad.i:                                           ; preds = %lpad.i.loopexit.split-lp, %lpad.i.loopexit
  %lpad.phi129 = phi { i8*, i32 } [ %lpad.loopexit127, %lpad.i.loopexit ], [ %lpad.loopexit.split-lp128, %lpad.i.loopexit.split-lp ]
  %32 = load i8*, i8** %_M_p.i6.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !11
  %cmp.i.i.i.i = icmp eq i8* %32, %20
  br i1 %cmp.i.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i, label %if.then.i.i2.i

if.then.i.i2.i:                                   ; preds = %lpad.i
  call void @_ZdlPv(i8* %32) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i: ; preds = %if.then.i.i2.i, %lpad.i
  resume { i8*, i32 } %lpad.phi129

_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit: ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i
  call void @llvm.experimental.noalias.scope.decl(metadata !22)
  %33 = load i64, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19, !noalias !22
  %cmp.i.i.i22 = icmp eq i64 %33, 4611686018427387903
  br i1 %cmp.i.i.i22, label %if.then.i.i.i23, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i

if.then.i.i.i23:                                  ; preds = %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i64 0, i64 0)) #40
          to label %.noexc unwind label %lpad.loopexit.split-lp131

.noexc:                                           ; preds = %if.then.i.i.i23
  unreachable

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i: ; preds = %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit
  %call2.i.i25 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1)
          to label %call2.i.i.noexc unwind label %lpad.loopexit130

call2.i.i.noexc:                                  ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
  store %union.anon* %21, %union.anon** %22, align 8, !tbaa !14, !alias.scope !22
  %_M_p.i.i13.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call2.i.i25, i64 0, i32 0, i32 0
  %34 = load i8*, i8** %_M_p.i.i13.i.i, align 8, !tbaa !17
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call2.i.i25, i64 0, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %35 to i8*
  %cmp.i.i1.i = icmp eq i8* %34, %arraydecay.i.i.i.i
  br i1 %cmp.i.i1.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %call2.i.i.noexc
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %arraydecay.i.i.i, i8* nonnull align 8 dereferenceable(16) %34, i64 16, i1 false) #38
  br label %invoke.cont

if.else.i.i:                                      ; preds = %call2.i.i.noexc
  store i8* %34, i8** %_M_p.i11.i.i, align 8, !tbaa !17, !alias.scope !22
  %_M_allocated_capacity.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call2.i.i25, i64 0, i32 2, i32 0
  %36 = load i64, i64* %_M_allocated_capacity.i.i, align 8, !tbaa !21
  store i64 %36, i64* %_M_allocated_capacity.i.i.i, align 8, !tbaa !21, !alias.scope !22
  br label %invoke.cont

invoke.cont:                                      ; preds = %if.else.i.i, %if.then.i.i
  %_M_string_length.i10.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call2.i.i25, i64 0, i32 1
  %37 = load i64, i64* %_M_string_length.i10.i.i, align 8, !tbaa !19
  store i64 %37, i64* %_M_string_length.i.i.i24, align 8, !tbaa !19, !alias.scope !22
  %38 = bitcast %"class.std::__cxx11::basic_string"* %call2.i.i25 to %union.anon**
  store %union.anon* %35, %union.anon** %38, align 8, !tbaa !17
  store i64 0, i64* %_M_string_length.i10.i.i, align 8, !tbaa !19
  store i8 0, i8* %arraydecay.i.i.i.i, align 8, !tbaa !21
  invoke void @_Z8getTestsRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEPKcS5_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %tests, i8* nonnull %15, %"class.std::__cxx11::basic_string"* nonnull %agg.tmp)
          to label %invoke.cont21 unwind label %lpad20

invoke.cont21:                                    ; preds = %invoke.cont
  %39 = load i8*, i8** %_M_p.i11.i.i, align 8, !tbaa !17
  %cmp.i.i.i31 = icmp eq i8* %39, %arraydecay.i.i.i
  br i1 %cmp.i.i.i31, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit33, label %if.then.i.i32

if.then.i.i32:                                    ; preds = %invoke.cont21
  call void @_ZdlPv(i8* %39) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit33

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit33: ; preds = %invoke.cont21, %if.then.i.i32
  %40 = load i8*, i8** %_M_p.i6.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i36 = icmp eq i8* %40, %20
  br i1 %cmp.i.i.i36, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38, label %if.then.i.i37

if.then.i.i37:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit33
  call void @_ZdlPv(i8* %40) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit33, %if.then.i.i37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #38
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %15) #38
  br label %while.cond.backedge

cleanup:                                          ; preds = %if.then4, %lor.lhs.false
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %15) #38
  br label %while.cond.backedge

lpad.loopexit130:                                 ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
  %lpad.loopexit132 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad.loopexit.split-lp131:                        ; preds = %if.then.i.i.i23
  %lpad.loopexit.split-lp133 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad20:                                           ; preds = %invoke.cont
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = load i8*, i8** %_M_p.i11.i.i, align 8, !tbaa !17
  %cmp.i.i.i41 = icmp eq i8* %42, %arraydecay.i.i.i
  br i1 %cmp.i.i.i41, label %ehcleanup, label %if.then.i.i42

if.then.i.i42:                                    ; preds = %lpad20
  call void @_ZdlPv(i8* %42) #38
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad.loopexit130, %lpad.loopexit.split-lp131, %if.then.i.i42, %lpad20
  %.pn17 = phi { i8*, i32 } [ %41, %lpad20 ], [ %41, %if.then.i.i42 ], [ %lpad.loopexit132, %lpad.loopexit130 ], [ %lpad.loopexit.split-lp133, %lpad.loopexit.split-lp131 ]
  %43 = load i8*, i8** %_M_p.i6.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i46 = icmp eq i8* %43, %20
  br i1 %cmp.i.i.i46, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48, label %if.then.i.i47

if.then.i.i47:                                    ; preds = %ehcleanup
  call void @_ZdlPv(i8* %43) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48: ; preds = %ehcleanup, %if.then.i.i47
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #38
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %15) #38
  br label %ehcleanup57

if.else:                                          ; preds = %while.body
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %arraydecay26 = getelementptr inbounds %struct.dirent, %struct.dirent* %call2168, i64 0, i32 4, i64 0
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %call.i.i = call i64 @strlen(i8* nonnull dereferenceable(1) %arraydecay26) #38
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 %call.i.i, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %cmp3.i.i.i.i = icmp ugt i64 %call.i.i, 15
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.else
  %call5.i.i.i5.i49 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp24, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
  store i8* %call5.i.i.i5.i49, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %44 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  store i64 %44, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  br label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.then4.i.i.i.i, %if.else
  %45 = phi i8* [ %call5.i.i.i5.i49, %if.then4.i.i.i.i ], [ %3, %if.else ]
  switch i64 %call.i.i, label %if.end.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i
    i64 0, label %invoke.cont29
  ]

if.then.i.i.i.i.i.i:                              ; preds = %if.end6.i.i.i.i
  %46 = load i8, i8* %arraydecay26, align 1, !tbaa !21
  store i8 %46, i8* %45, align 1, !tbaa !21
  br label %invoke.cont29

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end6.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* nonnull align 1 %arraydecay26, i64 %call.i.i, i1 false) #38
  br label %invoke.cont29

invoke.cont29:                                    ; preds = %if.end.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i, %if.end6.i.i.i.i
  %47 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  store i64 %47, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %48 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %48, i64 %47
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #38
  store %union.anon* %6, %union.anon** %7, align 8, !tbaa !14
  store i32 1954051118, i32* %9, align 8
  store i64 4, i64* %_M_string_length.i.i.i.i.i.i60, align 8, !tbaa !19
  store i8 0, i8* %arrayidx.i.i.i.i.i61, align 4, !tbaa !21
  %49 = load i64, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %cmp.i = icmp ult i64 %49, 4
  br i1 %cmp.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit71, label %for.body.i.i.preheader.i.i

for.body.i.i.preheader.i.i:                       ; preds = %invoke.cont29
  %50 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17, !noalias !25
  %add.ptr.i.i.i = getelementptr inbounds i8, i8* %50, i64 %49
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.i.i.preheader.i.i
  %agg.tmp2.sroa.0.0.i.i.i = phi i8* [ %add.ptr.i.i.i, %for.body.i.i.preheader.i.i ], [ %incdec.ptr.i4.i.i.i.i, %for.body.i.i.i.i ]
  %51 = phi i8* [ %arrayidx.i.i.i.i.i61, %for.body.i.i.preheader.i.i ], [ %incdec.ptr.i6.i.i.i.i, %for.body.i.i.i.i ]
  %incdec.ptr.i6.i.i.i.i = getelementptr inbounds i8, i8* %51, i64 -1
  %52 = load i8, i8* %incdec.ptr.i6.i.i.i.i, align 1, !tbaa !21
  %incdec.ptr.i4.i.i.i.i = getelementptr inbounds i8, i8* %agg.tmp2.sroa.0.0.i.i.i, i64 -1
  %53 = load i8, i8* %incdec.ptr.i4.i.i.i.i, align 1, !tbaa !21
  %cmp.i.i.i.i66 = icmp eq i8 %52, %53
  %cmp.i.i.not.i.i.i.i = icmp ne i8* %incdec.ptr.i6.i.i.i.i, %8
  %54 = and i1 %cmp.i.i.i.i66, %cmp.i.i.not.i.i.i.i
  br i1 %54, label %for.body.i.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit71, !llvm.loop !28

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit71: ; preds = %for.body.i.i.i.i, %invoke.cont29
  %retval.0.i = phi i1 [ false, %invoke.cont29 ], [ %cmp.i.i.i.i66, %for.body.i.i.i.i ]
  %.pre = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #38
  %cmp.i.i.i74 = icmp eq i8* %.pre, %3
  br i1 %cmp.i.i.i74, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit76, label %if.then.i.i75

if.then.i.i75:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit71
  call void @_ZdlPv(i8* %.pre) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit76

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit76: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit71, %if.then.i.i75
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br i1 %retval.0.i, label %if.then45, label %while.cond.backedge

if.then45:                                        ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit76
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #38
  call void @llvm.experimental.noalias.scope.decl(metadata !29)
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !14, !alias.scope !29
  %55 = load i8*, i8** %_M_p.i5.i.i78, align 8, !tbaa !17, !noalias !29
  %56 = load i64, i64* %_M_string_length.i.i.i79, align 8, !tbaa !19, !noalias !29
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #38, !noalias !29
  store i64 %56, i64* %__dnew.i.i.i.i.i77, align 8, !tbaa !20, !noalias !29
  %cmp3.i.i.i.i.i80 = icmp ugt i64 %56, 15
  br i1 %cmp3.i.i.i.i.i80, label %if.then4.i.i.i.i.i85, label %if.end6.i.i.i.i.i86

if.then4.i.i.i.i.i85:                             ; preds = %if.then45
  %call5.i.i.i4.i.i82 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp46, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i.i77, i64 0)
  store i8* %call5.i.i.i4.i.i82, i8** %_M_p.i6.i.i.i.i.i83, align 8, !tbaa !17, !alias.scope !29
  %57 = load i64, i64* %__dnew.i.i.i.i.i77, align 8, !tbaa !20, !noalias !29
  store i64 %57, i64* %_M_allocated_capacity.i.i.i.i.i.i84, align 8, !tbaa !21, !alias.scope !29
  br label %if.end6.i.i.i.i.i86

if.end6.i.i.i.i.i86:                              ; preds = %if.then45, %if.then4.i.i.i.i.i85
  %58 = phi i8* [ %call5.i.i.i4.i.i82, %if.then4.i.i.i.i.i85 ], [ %14, %if.then45 ]
  switch i64 %56, label %if.end.i.i.i.i.i.i.i.i88 [
    i64 1, label %if.then.i.i.i.i.i.i.i87
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i95
  ]

if.then.i.i.i.i.i.i.i87:                          ; preds = %if.end6.i.i.i.i.i86
  %59 = load i8, i8* %55, align 1, !tbaa !21
  store i8 %59, i8* %58, align 1, !tbaa !21
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i95

if.end.i.i.i.i.i.i.i.i88:                         ; preds = %if.end6.i.i.i.i.i86
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %55, i64 %56, i1 false) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i95

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i95: ; preds = %if.end.i.i.i.i.i.i.i.i88, %if.then.i.i.i.i.i.i.i87, %if.end6.i.i.i.i.i86
  %60 = load i64, i64* %__dnew.i.i.i.i.i77, align 8, !tbaa !20, !noalias !29
  store i64 %60, i64* %_M_string_length.i.i.i.i.i.i.i90, align 8, !tbaa !19, !alias.scope !29
  %61 = load i8*, i8** %_M_p.i6.i.i.i.i.i83, align 8, !tbaa !17, !alias.scope !29
  %arrayidx.i.i.i.i.i.i91 = getelementptr inbounds i8, i8* %61, i64 %60
  store i8 0, i8* %arrayidx.i.i.i.i.i.i91, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #38, !noalias !29
  %call.i.i.i92 = call i64 @strlen(i8* nonnull dereferenceable(1) %arraydecay26) #38, !noalias !29
  %62 = load i64, i64* %_M_string_length.i.i.i.i.i.i.i90, align 8, !tbaa !19, !alias.scope !29
  %sub3.i.i.i93 = sub i64 4611686018427387903, %62
  %cmp.i.i.i94 = icmp ult i64 %sub3.i.i.i93, %call.i.i.i92
  br i1 %cmp.i.i.i94, label %if.then.i.i.i96, label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i99

if.then.i.i.i96:                                  ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i95
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i64 0, i64 0)) #40
          to label %.noexc.i97 unwind label %lpad.i102.loopexit.split-lp

.noexc.i97:                                       ; preds = %if.then.i.i.i96
  unreachable

_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i99: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit.i95
  %call2.i1.i98 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp46, i8* nonnull %arraydecay26, i64 %call.i.i.i92)
          to label %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit105 unwind label %lpad.i102.loopexit

lpad.i102.loopexit:                               ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i99
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %lpad.i102

lpad.i102.loopexit.split-lp:                      ; preds = %if.then.i.i.i96
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %lpad.i102

lpad.i102:                                        ; preds = %lpad.i102.loopexit.split-lp, %lpad.i102.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %lpad.i102.loopexit ], [ %lpad.loopexit.split-lp, %lpad.i102.loopexit.split-lp ]
  %63 = load i8*, i8** %_M_p.i6.i.i.i.i.i83, align 8, !tbaa !17, !alias.scope !29
  %cmp.i.i.i.i101 = icmp eq i8* %63, %14
  br i1 %cmp.i.i.i.i101, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i104, label %if.then.i.i2.i103

if.then.i.i2.i103:                                ; preds = %lpad.i102
  call void @_ZdlPv(i8* %63) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i104

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit.i104: ; preds = %if.then.i.i2.i103, %lpad.i102
  resume { i8*, i32 } %lpad.phi

_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit105: ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i.i99
  %64 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish.i.i, align 8, !tbaa !32
  %65 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_end_of_storage.i.i, align 8, !tbaa !34
  %cmp.not.i.i = icmp eq %"class.std::__cxx11::basic_string"* %64, %65
  br i1 %cmp.not.i.i, label %if.else.i.i110, label %if.then.i.i106

if.then.i.i106:                                   ; preds = %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit105
  %66 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2
  %67 = bitcast %"class.std::__cxx11::basic_string"* %64 to %union.anon**
  store %union.anon* %66, %union.anon** %67, align 8, !tbaa !14
  %68 = load i8*, i8** %_M_p.i6.i.i.i.i.i83, align 8, !tbaa !17
  %cmp.i.i.i.i.i.i = icmp eq i8* %68, %14
  br i1 %cmp.i.i.i.i.i.i, label %if.then.i.i.i.i.i, label %if.else.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %if.then.i.i106
  %arraydecay.i.i.i.i.i.i = bitcast %union.anon* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(16) %arraydecay.i.i.i.i.i.i, i8* nonnull align 8 dereferenceable(16) %14, i64 16, i1 false) #38
  br label %invoke.cont50.thread

if.else.i.i.i.i.i:                                ; preds = %if.then.i.i106
  %_M_p.i11.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 0, i32 0
  store i8* %68, i8** %_M_p.i11.i.i.i.i.i, align 8, !tbaa !17
  %69 = load i64, i64* %_M_allocated_capacity.i.i.i.i.i.i84, align 8, !tbaa !21
  %_M_allocated_capacity.i.i.i.i.i.i108 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 2, i32 0
  store i64 %69, i64* %_M_allocated_capacity.i.i.i.i.i.i108, align 8, !tbaa !21
  br label %invoke.cont50.thread

invoke.cont50.thread:                             ; preds = %if.then.i.i.i.i.i, %if.else.i.i.i.i.i
  %70 = load i64, i64* %_M_string_length.i.i.i.i.i.i.i90, align 8, !tbaa !19
  %_M_string_length.i.i.i.i.i.i109 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %64, i64 0, i32 1
  store i64 %70, i64* %_M_string_length.i.i.i.i.i.i109, align 8, !tbaa !19
  %71 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish.i.i, align 8, !tbaa !32
  %incdec.ptr.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %71, i64 1
  store %"class.std::__cxx11::basic_string"* %incdec.ptr.i.i, %"class.std::__cxx11::basic_string"** %_M_finish.i.i, align 8, !tbaa !32
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit116

if.else.i.i110:                                   ; preds = %_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_.exit105
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull dereferenceable(24) %tests, %"class.std::__cxx11::basic_string"* %64, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp46)
          to label %invoke.cont50 unwind label %lpad49

invoke.cont50:                                    ; preds = %if.else.i.i110
  %.pre169 = load i8*, i8** %_M_p.i6.i.i.i.i.i83, align 8, !tbaa !17
  %cmp.i.i.i114 = icmp eq i8* %.pre169, %14
  br i1 %cmp.i.i.i114, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit116, label %if.then.i.i115

if.then.i.i115:                                   ; preds = %invoke.cont50
  call void @_ZdlPv(i8* %.pre169) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit116

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit116: ; preds = %invoke.cont50.thread, %invoke.cont50, %if.then.i.i115
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #38
  br label %while.cond.backedge

lpad49:                                           ; preds = %if.else.i.i110
  %72 = landingpad { i8*, i32 }
          cleanup
  %73 = load i8*, i8** %_M_p.i6.i.i.i.i.i83, align 8, !tbaa !17
  %cmp.i.i.i27 = icmp eq i8* %73, %14
  br i1 %cmp.i.i.i27, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i28

if.then.i.i28:                                    ; preds = %lpad49
  call void @_ZdlPv(i8* %73) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %lpad49, %if.then.i.i28
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #38
  br label %ehcleanup57

while.cond.backedge:                              ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit116, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit76, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit38, %cleanup
  %call2 = call %struct.dirent* @readdir(%struct.__dirstream* nonnull %call)
  %cmp.not = icmp eq %struct.dirent* %call2, null
  br i1 %cmp.not, label %while.end, label %while.body, !llvm.loop !8

while.end:                                        ; preds = %while.cond.backedge, %while.cond.preheader
  %call55 = call i32 @closedir(%struct.__dirstream* nonnull %call)
  br label %cleanup56

cleanup56:                                        ; preds = %entry, %while.end
  ret void

ehcleanup57:                                      ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48
  %.pn17.pn = phi { i8*, i32 } [ %.pn17, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit48 ], [ %72, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit ]
  resume { i8*, i32 } %.pn17.pn
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare dso_local noalias noundef %struct.__dirstream* @opendir(i8* nocapture noundef readonly) local_unnamed_addr #2

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare dso_local i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @snprintf(i8* noalias nocapture noundef writeonly, i64 noundef, i8* nocapture noundef readonly, ...) local_unnamed_addr #2

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind uwtable
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32)) unnamed_addr #5 align 2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @closedir(%struct.__dirstream* nocapture noundef) local_unnamed_addr #2

; Function Attrs: nounwind uwtable mustprogress
define dso_local i64 @_Z15find_last_slashRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %filepath) local_unnamed_addr #6 {
entry:
  %call2.i = tail call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filepath, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 -1, i64 2) #38
  ret i64 %call2.i
}

; Function Attrs: uwtable
define dso_local void @_Z20filepath_to_basenameRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %filepath) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i.i26 = alloca i64, align 8
  %__dnew.i.i.i.i9 = alloca i64, align 8
  %__dnew.i.i.i.i.i = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %filename = alloca %"class.std::__cxx11::basic_string", align 8
  %call2.i.i = tail call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filepath, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 -1, i64 2) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %filename to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %cmp = icmp eq i64 %call2.i.i, -1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %filename to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %_M_p.i5.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filepath, i64 0, i32 0, i32 0
  %3 = load i8*, i8** %_M_p.i5.i, align 8, !tbaa !17
  %_M_string_length.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filepath, i64 0, i32 1
  %4 = load i64, i64* %_M_string_length.i.i, align 8, !tbaa !19
  %5 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #38
  store i64 %4, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %cmp3.i.i.i.i = icmp ugt i64 %4, 15
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end.if.end6_crit_edge.i.i.i.i

if.end.if.end6_crit_edge.i.i.i.i:                 ; preds = %cond.true
  %6 = bitcast %union.anon* %1 to i8*
  br label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %cond.true
  %call5.i.i.i4.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filename, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i4.i, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %7 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 2, i32 0
  store i64 %7, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  br label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.then4.i.i.i.i, %if.end.if.end6_crit_edge.i.i.i.i
  %8 = phi i8* [ %6, %if.end.if.end6_crit_edge.i.i.i.i ], [ %call5.i.i.i4.i, %if.then4.i.i.i.i ]
  switch i64 %4, label %if.end.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  ]

if.then.i.i.i.i.i.i:                              ; preds = %if.end6.i.i.i.i
  %9 = load i8, i8* %3, align 1, !tbaa !21
  store i8 %9, i8* %8, align 1, !tbaa !21
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end6.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %3, i64 %4, i1 false) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit: ; preds = %if.end6.i.i.i.i, %if.then.i.i.i.i.i.i, %if.end.i.i.i.i.i.i.i
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  %10 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 1
  store i64 %10, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %11 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %11, i64 %10
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #38
  br label %cond.end

cond.false:                                       ; preds = %entry
  %add = add nuw i64 %call2.i.i, 1
  tail call void @llvm.experimental.noalias.scope.decl(metadata !35)
  %_M_string_length.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filepath, i64 0, i32 1
  %12 = load i64, i64* %_M_string_length.i.i.i, align 8, !tbaa !19, !noalias !35
  %cmp.i.i.not = icmp ugt i64 %12, %call2.i.i
  br i1 %cmp.i.i.not, label %invoke.cont4.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %cond.false
  tail call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.119, i64 0, i64 0), i64 %add, i64 %12) #40
  unreachable

invoke.cont4.i.i:                                 ; preds = %cond.false
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 2
  %14 = bitcast %"class.std::__cxx11::basic_string"* %filename to %union.anon**
  store %union.anon* %13, %union.anon** %14, align 8, !tbaa !14, !alias.scope !35
  %15 = bitcast %union.anon* %13 to i8*
  %_M_p.i11.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filepath, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %_M_p.i11.i.i, align 8, !tbaa !17, !noalias !35
  %add.ptr.i.i = getelementptr inbounds i8, i8* %16, i64 %add
  %sub.i.i.i = sub i64 %12, %add
  %17 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #38, !noalias !35
  store i64 %sub.i.i.i, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !35
  %cmp3.i.i.i.i.i = icmp ugt i64 %sub.i.i.i, 15
  br i1 %cmp3.i.i.i.i.i, label %if.then4.i.i.i.i.i, label %if.end6.i.i.i.i.i

if.then4.i.i.i.i.i:                               ; preds = %invoke.cont4.i.i
  %call5.i.i.i7.i.i = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filename, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i.i, i64 0)
  %_M_p.i6.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i7.i.i, i8** %_M_p.i6.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !35
  %18 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !35
  %_M_allocated_capacity.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 2, i32 0
  store i64 %18, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !21, !alias.scope !35
  br label %if.end6.i.i.i.i.i

if.end6.i.i.i.i.i:                                ; preds = %if.then4.i.i.i.i.i, %invoke.cont4.i.i
  %19 = phi i8* [ %call5.i.i.i7.i.i, %if.then4.i.i.i.i.i ], [ %15, %invoke.cont4.i.i ]
  switch i64 %sub.i.i.i, label %if.end.i.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i.i
    i64 0, label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit
  ]

if.then.i.i.i.i.i.i.i:                            ; preds = %if.end6.i.i.i.i.i
  %20 = load i8, i8* %add.ptr.i.i, align 1, !tbaa !21
  store i8 %20, i8* %19, align 1, !tbaa !21
  br label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit

if.end.i.i.i.i.i.i.i.i:                           ; preds = %if.end6.i.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %19, i8* align 1 %add.ptr.i.i, i64 %sub.i.i.i, i1 false) #38
  br label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit

_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit: ; preds = %if.end6.i.i.i.i.i, %if.then.i.i.i.i.i.i.i, %if.end.i.i.i.i.i.i.i.i
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  %21 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !35
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 1
  store i64 %21, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19, !alias.scope !35
  %22 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !35
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %22, i64 %21
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #38, !noalias !35
  br label %cond.end

cond.end:                                         ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit
  %call.i = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filename, i8 signext 46, i64 -1) #38
  %cmp2 = icmp eq i64 %call.i, -1
  br i1 %cmp2, label %cond.true3, label %cond.false4

cond.true3:                                       ; preds = %cond.end
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %24 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %23, %union.anon** %24, align 8, !tbaa !14
  %_M_p.i5.i10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  %25 = load i8*, i8** %_M_p.i5.i10, align 8, !tbaa !17
  %_M_string_length.i.i11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 1
  %26 = load i64, i64* %_M_string_length.i.i11, align 8, !tbaa !19
  %27 = bitcast i64* %__dnew.i.i.i.i9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #38
  store i64 %26, i64* %__dnew.i.i.i.i9, align 8, !tbaa !20
  %cmp3.i.i.i.i12 = icmp ugt i64 %26, 15
  br i1 %cmp3.i.i.i.i12, label %if.then4.i.i.i.i17, label %if.end.if.end6_crit_edge.i.i.i.i13

if.end.if.end6_crit_edge.i.i.i.i13:               ; preds = %cond.true3
  %28 = bitcast %union.anon* %23 to i8*
  br label %if.end6.i.i.i.i18

if.then4.i.i.i.i17:                               ; preds = %cond.true3
  %call5.i.i.i4.i1424 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i9, i64 0)
          to label %call5.i.i.i4.i14.noexc unwind label %lpad

call5.i.i.i4.i14.noexc:                           ; preds = %if.then4.i.i.i.i17
  %_M_p.i6.i.i.i.i15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i4.i1424, i8** %_M_p.i6.i.i.i.i15, align 8, !tbaa !17
  %29 = load i64, i64* %__dnew.i.i.i.i9, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2, i32 0
  store i64 %29, i64* %_M_allocated_capacity.i.i.i.i.i16, align 8, !tbaa !21
  br label %if.end6.i.i.i.i18

if.end6.i.i.i.i18:                                ; preds = %call5.i.i.i4.i14.noexc, %if.end.if.end6_crit_edge.i.i.i.i13
  %30 = phi i8* [ %28, %if.end.if.end6_crit_edge.i.i.i.i13 ], [ %call5.i.i.i4.i1424, %call5.i.i.i4.i14.noexc ]
  switch i64 %26, label %if.end.i.i.i.i.i.i.i20 [
    i64 1, label %if.then.i.i.i.i.i.i19
    i64 0, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit25
  ]

if.then.i.i.i.i.i.i19:                            ; preds = %if.end6.i.i.i.i18
  %31 = load i8, i8* %25, align 1, !tbaa !21
  store i8 %31, i8* %30, align 1, !tbaa !21
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit25

if.end.i.i.i.i.i.i.i20:                           ; preds = %if.end6.i.i.i.i18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %25, i64 %26, i1 false) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit25

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit25: ; preds = %if.end6.i.i.i.i18, %if.then.i.i.i.i.i.i19, %if.end.i.i.i.i.i.i.i20
  %_M_p.i.i.i.i.i21 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  %32 = load i64, i64* %__dnew.i.i.i.i9, align 8, !tbaa !20
  %_M_string_length.i.i.i.i.i.i22 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 %32, i64* %_M_string_length.i.i.i.i.i.i22, align 8, !tbaa !19
  %33 = load i8*, i8** %_M_p.i.i.i.i.i21, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i23 = getelementptr inbounds i8, i8* %33, i64 %32
  store i8 0, i8* %arrayidx.i.i.i.i.i23, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #38
  br label %nrvo.skipdtor

cond.false4:                                      ; preds = %cond.end
  call void @llvm.experimental.noalias.scope.decl(metadata !38)
  %_M_string_length.i.i.i27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 1
  %34 = load i64, i64* %_M_string_length.i.i.i27, align 8, !tbaa !19, !noalias !38
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %36 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %35, %union.anon** %36, align 8, !tbaa !14, !alias.scope !38
  %37 = bitcast %union.anon* %35 to i8*
  %_M_p.i11.i.i28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  %38 = load i8*, i8** %_M_p.i11.i.i28, align 8, !tbaa !17, !noalias !38
  %cmp.i.i.i = icmp ugt i64 %34, %call.i
  %spec.select.i.i.i = select i1 %cmp.i.i.i, i64 %call.i, i64 %34
  %39 = bitcast i64* %__dnew.i.i.i.i.i26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #38, !noalias !38
  store i64 %spec.select.i.i.i, i64* %__dnew.i.i.i.i.i26, align 8, !tbaa !20, !noalias !38
  %cmp3.i.i.i.i.i29 = icmp ugt i64 %spec.select.i.i.i, 15
  br i1 %cmp3.i.i.i.i.i29, label %if.then4.i.i.i.i.i34, label %if.end6.i.i.i.i.i35

if.then4.i.i.i.i.i34:                             ; preds = %cond.false4
  %call5.i.i.i7.i.i3141 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i.i26, i64 0)
          to label %call5.i.i.i7.i.i31.noexc unwind label %lpad

call5.i.i.i7.i.i31.noexc:                         ; preds = %if.then4.i.i.i.i.i34
  %_M_p.i6.i.i.i.i.i32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i7.i.i3141, i8** %_M_p.i6.i.i.i.i.i32, align 8, !tbaa !17, !alias.scope !38
  %40 = load i64, i64* %__dnew.i.i.i.i.i26, align 8, !tbaa !20, !noalias !38
  %_M_allocated_capacity.i.i.i.i.i.i33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2, i32 0
  store i64 %40, i64* %_M_allocated_capacity.i.i.i.i.i.i33, align 8, !tbaa !21, !alias.scope !38
  br label %if.end6.i.i.i.i.i35

if.end6.i.i.i.i.i35:                              ; preds = %call5.i.i.i7.i.i31.noexc, %cond.false4
  %41 = phi i8* [ %call5.i.i.i7.i.i3141, %call5.i.i.i7.i.i31.noexc ], [ %37, %cond.false4 ]
  switch i64 %spec.select.i.i.i, label %if.end.i.i.i.i.i.i.i.i37 [
    i64 1, label %if.then.i.i.i.i.i.i.i36
    i64 0, label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit42
  ]

if.then.i.i.i.i.i.i.i36:                          ; preds = %if.end6.i.i.i.i.i35
  %42 = load i8, i8* %38, align 1, !tbaa !21
  store i8 %42, i8* %41, align 1, !tbaa !21
  br label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit42

if.end.i.i.i.i.i.i.i.i37:                         ; preds = %if.end6.i.i.i.i.i35
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %38, i64 %spec.select.i.i.i, i1 false) #38
  br label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit42

_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit42: ; preds = %if.end6.i.i.i.i.i35, %if.then.i.i.i.i.i.i.i36, %if.end.i.i.i.i.i.i.i.i37
  %_M_p.i.i.i.i.i.i38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  %43 = load i64, i64* %__dnew.i.i.i.i.i26, align 8, !tbaa !20, !noalias !38
  %_M_string_length.i.i.i.i.i.i.i39 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 %43, i64* %_M_string_length.i.i.i.i.i.i.i39, align 8, !tbaa !19, !alias.scope !38
  %44 = load i8*, i8** %_M_p.i.i.i.i.i.i38, align 8, !tbaa !17, !alias.scope !38
  %arrayidx.i.i.i.i.i.i40 = getelementptr inbounds i8, i8* %44, i64 %43
  store i8 0, i8* %arrayidx.i.i.i.i.i.i40, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #38, !noalias !38
  br label %nrvo.skipdtor

lpad:                                             ; preds = %if.then4.i.i.i.i.i34, %if.then4.i.i.i.i17
  %45 = landingpad { i8*, i32 }
          cleanup
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  %46 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !17
  %47 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %47 to i8*
  %cmp.i.i.i43 = icmp eq i8* %46, %arraydecay.i.i.i.i
  br i1 %cmp.i.i.i43, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i44

if.then.i.i44:                                    ; preds = %lpad
  call void @_ZdlPv(i8* %46) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %lpad, %if.then.i.i44
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  resume { i8*, i32 } %45

nrvo.skipdtor:                                    ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm.exit42, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_.exit25
  %_M_p.i.i.i.i45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %_M_p.i.i.i.i45, align 8, !tbaa !17
  %49 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filename, i64 0, i32 2
  %arraydecay.i.i.i.i46 = bitcast %union.anon* %49 to i8*
  %cmp.i.i.i47 = icmp eq i8* %48, %arraydecay.i.i.i.i46
  br i1 %cmp.i.i.i47, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit49, label %if.then.i.i48

if.then.i.i48:                                    ; preds = %nrvo.skipdtor
  call void @_ZdlPv(i8* %48) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit49

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit49: ; preds = %nrvo.skipdtor, %if.then.i.i48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_Z19filepath_to_dirnameRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %filepath) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i.i = alloca i64, align 8
  %call2.i.i = tail call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filepath, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 -1, i64 2) #38
  %cmp = icmp eq i64 %call2.i.i, -1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !14
  %2 = bitcast %union.anon* %0 to i16*
  store i16 12078, i16* %2, align 8
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 2, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %.cast = bitcast %union.anon* %0 to i8*
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %.cast, i64 2
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 2, !tbaa !21
  br label %nrvo.skipdtor

cond.false:                                       ; preds = %entry
  %add = add nuw i64 %call2.i.i, 1
  tail call void @llvm.experimental.noalias.scope.decl(metadata !41)
  %_M_string_length.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filepath, i64 0, i32 1
  %3 = load i64, i64* %_M_string_length.i.i.i, align 8, !tbaa !19, !noalias !41
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !14, !alias.scope !41
  %6 = bitcast %union.anon* %4 to i8*
  %_M_p.i11.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %filepath, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %_M_p.i11.i.i, align 8, !tbaa !17, !noalias !41
  %cmp.i.i.i = icmp ugt i64 %3, %add
  %spec.select.i.i.i = select i1 %cmp.i.i.i, i64 %add, i64 %3
  %8 = bitcast i64* %__dnew.i.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #38, !noalias !41
  store i64 %spec.select.i.i.i, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !41
  %cmp3.i.i.i.i.i = icmp ugt i64 %spec.select.i.i.i, 15
  br i1 %cmp3.i.i.i.i.i, label %if.then4.i.i.i.i.i, label %if.end6.i.i.i.i.i

if.then4.i.i.i.i.i:                               ; preds = %cond.false
  %call5.i.i.i7.i.i5 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i.i, i64 0)
  %_M_p.i6.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i7.i.i5, i8** %_M_p.i6.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !41
  %9 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !41
  %_M_allocated_capacity.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2, i32 0
  store i64 %9, i64* %_M_allocated_capacity.i.i.i.i.i.i, align 8, !tbaa !21, !alias.scope !41
  br label %if.end6.i.i.i.i.i

if.end6.i.i.i.i.i:                                ; preds = %if.then4.i.i.i.i.i, %cond.false
  %10 = phi i8* [ %call5.i.i.i7.i.i5, %if.then4.i.i.i.i.i ], [ %6, %cond.false ]
  switch i64 %spec.select.i.i.i, label %if.end.i.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i.i
    i64 0, label %cond.end
  ]

if.then.i.i.i.i.i.i.i:                            ; preds = %if.end6.i.i.i.i.i
  %11 = load i8, i8* %7, align 1, !tbaa !21
  store i8 %11, i8* %10, align 1, !tbaa !21
  br label %cond.end

if.end.i.i.i.i.i.i.i.i:                           ; preds = %if.end6.i.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 %7, i64 %spec.select.i.i.i, i1 false) #38
  br label %cond.end

cond.end:                                         ; preds = %if.end.i.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i, %if.end6.i.i.i.i.i
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  %12 = load i64, i64* %__dnew.i.i.i.i.i, align 8, !tbaa !20, !noalias !41
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 %12, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19, !alias.scope !41
  %13 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !41
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %13, i64 %12
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #38, !noalias !41
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %cond.end, %cond.true
  ret void
}

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull dereferenceable(1)) unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull dereferenceable(1)) unnamed_addr #7

; Function Attrs: nofree nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readonly uwtable willreturn mustprogress
define dso_local float @_Z5tdiffP7timevalS0_(%struct.timeval* nocapture readonly %start, %struct.timeval* nocapture readonly %end) local_unnamed_addr #9 {
entry:
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %end, i64 0, i32 0
  %0 = load i64, i64* %tv_sec, align 8, !tbaa !44
  %tv_sec1 = getelementptr inbounds %struct.timeval, %struct.timeval* %start, i64 0, i32 0
  %1 = load i64, i64* %tv_sec1, align 8, !tbaa !44
  %sub = sub nsw i64 %0, %1
  %conv = sitofp i64 %sub to double
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %end, i64 0, i32 1
  %2 = load i64, i64* %tv_usec, align 8, !tbaa !46
  %tv_usec2 = getelementptr inbounds %struct.timeval, %struct.timeval* %start, i64 0, i32 1
  %3 = load i64, i64* %tv_usec2, align 8, !tbaa !46
  %sub3 = sub nsw i64 %2, %3
  %conv4 = sitofp i64 %sub3 to double
  %mul = fmul fast double %conv4, 0x3EB0C6F7A0B5ED8D
  %add = fadd fast double %mul, %conv
  %conv5 = fptrunc double %add to float
  ret float %conv5
}

; Function Attrs: uwtable mustprogress
define dso_local void @_Z17read_gmm_instanceRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiS7_S7_RSt6vectorIdSaIdEESB_SB_SB_R7Wishartb(%"class.std::__cxx11::basic_string"* nocapture nonnull readonly align 8 dereferenceable(32) %fn, i32* %d, i32* %k, i32* %n, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %alphas, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %means, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %icf, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %x, %struct.Wishart* nonnull align 8 dereferenceable(16) %wishart, i1 zeroext %replicate_point) local_unnamed_addr #10 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_p.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %fn, i64 0, i32 0, i32 0
  %0 = load i8*, i8** %_M_p.i.i, align 8, !tbaa !17
  %call1 = tail call %struct._IO_FILE* @fopen(i8* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  %tobool.not = icmp eq %struct._IO_FILE* %call1, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %_M_p.i.i, align 8, !tbaa !17
  %call3 = tail call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i8* %1)
  tail call void @exit(i32 1) #41
  unreachable

if.end:                                           ; preds = %entry
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i32* %d, i32* %k, i32* %n)
  %2 = load i32, i32* %d, align 4, !tbaa !47
  %3 = load i32, i32* %k, align 4, !tbaa !47
  %4 = load i32, i32* %n, align 4, !tbaa !47
  %add = add nsw i32 %2, 1
  %mul = mul nsw i32 %add, %2
  %div = sdiv i32 %mul, 2
  %conv = sext i32 %3 to i64
  %_M_finish.i.i102 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %alphas, i64 0, i32 0, i32 0, i32 0, i32 1
  %5 = load double*, double** %_M_finish.i.i102, align 8, !tbaa !49
  %_M_start.i.i103 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %alphas, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load double*, double** %_M_start.i.i103, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i104 = ptrtoint double* %5 to i64
  %sub.ptr.rhs.cast.i.i105 = ptrtoint double* %6 to i64
  %sub.ptr.sub.i.i106 = sub i64 %sub.ptr.lhs.cast.i.i104, %sub.ptr.rhs.cast.i.i105
  %sub.ptr.div.i.i107 = ashr exact i64 %sub.ptr.sub.i.i106, 3
  %cmp.i108 = icmp ult i64 %sub.ptr.div.i.i107, %conv
  br i1 %cmp.i108, label %if.then.i110, label %if.else.i115

if.then.i110:                                     ; preds = %if.end
  %sub.i109 = sub nsw i64 %conv, %sub.ptr.div.i.i107
  tail call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.3"* nonnull dereferenceable(24) %alphas, i64 %sub.i109)
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit117

if.else.i115:                                     ; preds = %if.end
  %cmp4.i111 = icmp ule i64 %sub.ptr.div.i.i107, %conv
  %add.ptr.i112 = getelementptr inbounds double, double* %6, i64 %conv
  %tobool.not.i.i113 = icmp eq double* %5, %add.ptr.i112
  %or.cond.i114 = or i1 %tobool.not.i.i113, %cmp4.i111
  br i1 %or.cond.i114, label %_ZNSt6vectorIdSaIdEE6resizeEm.exit117, label %invoke.cont.i.i116

invoke.cont.i.i116:                               ; preds = %if.else.i115
  store double* %add.ptr.i112, double** %_M_finish.i.i102, align 8, !tbaa !49
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit117

_ZNSt6vectorIdSaIdEE6resizeEm.exit117:            ; preds = %if.then.i110, %if.else.i115, %invoke.cont.i.i116
  %mul5 = mul nsw i32 %3, %2
  %conv6 = sext i32 %mul5 to i64
  %_M_finish.i.i118 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %means, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load double*, double** %_M_finish.i.i118, align 8, !tbaa !49
  %_M_start.i.i119 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %means, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load double*, double** %_M_start.i.i119, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i120 = ptrtoint double* %7 to i64
  %sub.ptr.rhs.cast.i.i121 = ptrtoint double* %8 to i64
  %sub.ptr.sub.i.i122 = sub i64 %sub.ptr.lhs.cast.i.i120, %sub.ptr.rhs.cast.i.i121
  %sub.ptr.div.i.i123 = ashr exact i64 %sub.ptr.sub.i.i122, 3
  %cmp.i124 = icmp ult i64 %sub.ptr.div.i.i123, %conv6
  br i1 %cmp.i124, label %if.then.i126, label %if.else.i131

if.then.i126:                                     ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit117
  %sub.i125 = sub nsw i64 %conv6, %sub.ptr.div.i.i123
  tail call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.3"* nonnull dereferenceable(24) %means, i64 %sub.i125)
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit133

if.else.i131:                                     ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit117
  %cmp4.i127 = icmp ule i64 %sub.ptr.div.i.i123, %conv6
  %add.ptr.i128 = getelementptr inbounds double, double* %8, i64 %conv6
  %tobool.not.i.i129 = icmp eq double* %7, %add.ptr.i128
  %or.cond.i130 = or i1 %tobool.not.i.i129, %cmp4.i127
  br i1 %or.cond.i130, label %_ZNSt6vectorIdSaIdEE6resizeEm.exit133, label %invoke.cont.i.i132

invoke.cont.i.i132:                               ; preds = %if.else.i131
  store double* %add.ptr.i128, double** %_M_finish.i.i118, align 8, !tbaa !49
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit133

_ZNSt6vectorIdSaIdEE6resizeEm.exit133:            ; preds = %if.then.i126, %if.else.i131, %invoke.cont.i.i132
  %mul7 = mul nsw i32 %div, %3
  %conv8 = sext i32 %mul7 to i64
  %_M_finish.i.i86 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %icf, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load double*, double** %_M_finish.i.i86, align 8, !tbaa !49
  %_M_start.i.i87 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %icf, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load double*, double** %_M_start.i.i87, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i88 = ptrtoint double* %9 to i64
  %sub.ptr.rhs.cast.i.i89 = ptrtoint double* %10 to i64
  %sub.ptr.sub.i.i90 = sub i64 %sub.ptr.lhs.cast.i.i88, %sub.ptr.rhs.cast.i.i89
  %sub.ptr.div.i.i91 = ashr exact i64 %sub.ptr.sub.i.i90, 3
  %cmp.i92 = icmp ult i64 %sub.ptr.div.i.i91, %conv8
  br i1 %cmp.i92, label %if.then.i94, label %if.else.i99

if.then.i94:                                      ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit133
  %sub.i93 = sub nsw i64 %conv8, %sub.ptr.div.i.i91
  tail call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.3"* nonnull dereferenceable(24) %icf, i64 %sub.i93)
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit101

if.else.i99:                                      ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit133
  %cmp4.i95 = icmp ule i64 %sub.ptr.div.i.i91, %conv8
  %add.ptr.i96 = getelementptr inbounds double, double* %10, i64 %conv8
  %tobool.not.i.i97 = icmp eq double* %9, %add.ptr.i96
  %or.cond.i98 = or i1 %tobool.not.i.i97, %cmp4.i95
  br i1 %or.cond.i98, label %_ZNSt6vectorIdSaIdEE6resizeEm.exit101, label %invoke.cont.i.i100

invoke.cont.i.i100:                               ; preds = %if.else.i99
  store double* %add.ptr.i96, double** %_M_finish.i.i86, align 8, !tbaa !49
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit101

_ZNSt6vectorIdSaIdEE6resizeEm.exit101:            ; preds = %if.then.i94, %if.else.i99, %invoke.cont.i.i100
  %mul9 = mul nsw i32 %4, %2
  %conv10 = sext i32 %mul9 to i64
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %x, i64 0, i32 0, i32 0, i32 0, i32 1
  %11 = load double*, double** %_M_finish.i.i, align 8, !tbaa !49
  %_M_start.i.i = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %x, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load double*, double** %_M_start.i.i, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i = ptrtoint double* %11 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint double* %12 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 3
  %cmp.i = icmp ult i64 %sub.ptr.div.i.i, %conv10
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit101
  %sub.i = sub nsw i64 %conv10, %sub.ptr.div.i.i
  tail call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.3"* nonnull dereferenceable(24) %x, i64 %sub.i)
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit

if.else.i:                                        ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit101
  %cmp4.i = icmp ule i64 %sub.ptr.div.i.i, %conv10
  %add.ptr.i84 = getelementptr inbounds double, double* %12, i64 %conv10
  %tobool.not.i.i = icmp eq double* %11, %add.ptr.i84
  %or.cond.i = or i1 %tobool.not.i.i, %cmp4.i
  br i1 %or.cond.i, label %_ZNSt6vectorIdSaIdEE6resizeEm.exit, label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %if.else.i
  store double* %add.ptr.i84, double** %_M_finish.i.i, align 8, !tbaa !49
  br label %_ZNSt6vectorIdSaIdEE6resizeEm.exit

_ZNSt6vectorIdSaIdEE6resizeEm.exit:               ; preds = %if.then.i, %if.else.i, %invoke.cont.i.i
  %cmp154 = icmp sgt i32 %3, 0
  br i1 %cmp154, label %for.body.preheader, label %for.cond.cleanup37

for.body.preheader:                               ; preds = %_ZNSt6vectorIdSaIdEE6resizeEm.exit
  %wide.trip.count194 = zext i32 %3 to i64
  br label %for.body

for.cond15.preheader:                             ; preds = %for.body
  br i1 %cmp154, label %for.cond19.preheader.lr.ph, label %for.cond.cleanup37

for.cond19.preheader.lr.ph:                       ; preds = %for.cond15.preheader
  %cmp20149 = icmp sgt i32 %2, 0
  %13 = sext i32 %2 to i64
  %wide.trip.count190 = zext i32 %3 to i64
  %wide.trip.count185 = zext i32 %2 to i64
  br label %for.cond19.preheader

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv192 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next193, %for.body ]
  %14 = load double*, double** %_M_start.i.i103, align 8, !tbaa !51
  %add.ptr.i83 = getelementptr inbounds double, double* %14, i64 %indvars.iv192
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* nonnull %add.ptr.i83)
  %indvars.iv.next193 = add nuw nsw i64 %indvars.iv192, 1
  %exitcond195.not = icmp eq i64 %indvars.iv.next193, %wide.trip.count194
  br i1 %exitcond195.not, label %for.cond15.preheader, label %for.body, !llvm.loop !52

for.cond19.preheader:                             ; preds = %for.cond19.preheader.lr.ph, %for.cond.cleanup21
  %indvars.iv187 = phi i64 [ 0, %for.cond19.preheader.lr.ph ], [ %indvars.iv.next188, %for.cond.cleanup21 ]
  br i1 %cmp20149, label %for.body22.lr.ph, label %for.cond.cleanup21

for.body22.lr.ph:                                 ; preds = %for.cond19.preheader
  %15 = mul nsw i64 %indvars.iv187, %13
  br label %for.body22

for.cond35.preheader:                             ; preds = %for.cond.cleanup21
  br i1 %cmp154, label %for.cond40.preheader.lr.ph, label %for.cond.cleanup37

for.cond40.preheader.lr.ph:                       ; preds = %for.cond35.preheader
  %cmp41144 = icmp sgt i32 %mul, 1
  %16 = sext i32 %div to i64
  %wide.trip.count180 = zext i32 %3 to i64
  %wide.trip.count175 = zext i32 %div to i64
  br label %for.cond40.preheader

for.cond.cleanup21:                               ; preds = %for.body22, %for.cond19.preheader
  %indvars.iv.next188 = add nuw nsw i64 %indvars.iv187, 1
  %exitcond191.not = icmp eq i64 %indvars.iv.next188, %wide.trip.count190
  br i1 %exitcond191.not, label %for.cond35.preheader, label %for.cond19.preheader, !llvm.loop !53

for.body22:                                       ; preds = %for.body22.lr.ph, %for.body22
  %indvars.iv182 = phi i64 [ 0, %for.body22.lr.ph ], [ %indvars.iv.next183, %for.body22 ]
  %17 = add nsw i64 %indvars.iv182, %15
  %18 = load double*, double** %_M_start.i.i119, align 8, !tbaa !51
  %add.ptr.i81 = getelementptr inbounds double, double* %18, i64 %17
  %call27 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* nonnull %add.ptr.i81)
  %indvars.iv.next183 = add nuw nsw i64 %indvars.iv182, 1
  %exitcond186.not = icmp eq i64 %indvars.iv.next183, %wide.trip.count185
  br i1 %exitcond186.not, label %for.cond.cleanup21, label %for.body22, !llvm.loop !54

for.cond40.preheader:                             ; preds = %for.cond40.preheader.lr.ph, %for.cond.cleanup42
  %indvars.iv177 = phi i64 [ 0, %for.cond40.preheader.lr.ph ], [ %indvars.iv.next178, %for.cond.cleanup42 ]
  br i1 %cmp41144, label %for.body43.lr.ph, label %for.cond.cleanup42

for.body43.lr.ph:                                 ; preds = %for.cond40.preheader
  %19 = mul nsw i64 %indvars.iv177, %16
  br label %for.body43

for.cond.cleanup37:                               ; preds = %for.cond.cleanup42, %_ZNSt6vectorIdSaIdEE6resizeEm.exit, %for.cond15.preheader, %for.cond35.preheader
  br i1 %replicate_point, label %for.cond58.preheader, label %for.cond83.preheader

for.cond83.preheader:                             ; preds = %for.cond.cleanup37
  %cmp84141 = icmp sgt i32 %4, 0
  br i1 %cmp84141, label %for.cond88.preheader.lr.ph, label %if.end103

for.cond88.preheader.lr.ph:                       ; preds = %for.cond83.preheader
  %cmp89139 = icmp sgt i32 %2, 0
  %20 = sext i32 %2 to i64
  %wide.trip.count170 = zext i32 %4 to i64
  %wide.trip.count165 = zext i32 %2 to i64
  br label %for.cond88.preheader

for.cond58.preheader:                             ; preds = %for.cond.cleanup37
  %cmp59137 = icmp sgt i32 %2, 0
  br i1 %cmp59137, label %for.body61.preheader, label %for.cond69.preheader

for.body61.preheader:                             ; preds = %for.cond58.preheader
  %wide.trip.count160 = zext i32 %2 to i64
  br label %for.body61

for.cond.cleanup42:                               ; preds = %for.body43, %for.cond40.preheader
  %indvars.iv.next178 = add nuw nsw i64 %indvars.iv177, 1
  %exitcond181.not = icmp eq i64 %indvars.iv.next178, %wide.trip.count180
  br i1 %exitcond181.not, label %for.cond.cleanup37, label %for.cond40.preheader, !llvm.loop !55

for.body43:                                       ; preds = %for.body43.lr.ph, %for.body43
  %indvars.iv172 = phi i64 [ 0, %for.body43.lr.ph ], [ %indvars.iv.next173, %for.body43 ]
  %21 = add nsw i64 %indvars.iv172, %19
  %22 = load double*, double** %_M_start.i.i87, align 8, !tbaa !51
  %add.ptr.i79 = getelementptr inbounds double, double* %22, i64 %21
  %call48 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* nonnull %add.ptr.i79)
  %indvars.iv.next173 = add nuw nsw i64 %indvars.iv172, 1
  %exitcond176.not = icmp eq i64 %indvars.iv.next173, %wide.trip.count175
  br i1 %exitcond176.not, label %for.cond.cleanup42, label %for.body43, !llvm.loop !56

for.cond69.preheader:                             ; preds = %for.body61, %for.cond58.preheader
  %cmp70135 = icmp sgt i32 %4, 0
  br i1 %cmp70135, label %for.body72.lr.ph, label %if.end103

for.body72.lr.ph:                                 ; preds = %for.cond69.preheader
  %conv77 = sext i32 %2 to i64
  %mul78 = shl nsw i64 %conv77, 3
  %wide.trip.count = zext i32 %4 to i64
  br label %for.body72

for.body61:                                       ; preds = %for.body61.preheader, %for.body61
  %indvars.iv158 = phi i64 [ 0, %for.body61.preheader ], [ %indvars.iv.next159, %for.body61 ]
  %23 = load double*, double** %_M_start.i.i, align 8, !tbaa !51
  %add.ptr.i77 = getelementptr inbounds double, double* %23, i64 %indvars.iv158
  %call64 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* nonnull %add.ptr.i77)
  %indvars.iv.next159 = add nuw nsw i64 %indvars.iv158, 1
  %exitcond161.not = icmp eq i64 %indvars.iv.next159, %wide.trip.count160
  br i1 %exitcond161.not, label %for.cond69.preheader, label %for.body61, !llvm.loop !57

for.body72:                                       ; preds = %for.body72.lr.ph, %for.body72
  %indvars.iv = phi i64 [ 0, %for.body72.lr.ph ], [ %indvars.iv.next, %for.body72 ]
  %24 = mul nsw i64 %indvars.iv, %conv77
  %25 = load double*, double** %_M_start.i.i, align 8, !tbaa !51
  %add.ptr.i75 = getelementptr inbounds double, double* %25, i64 %24
  %26 = bitcast double* %add.ptr.i75 to i8*
  %27 = bitcast double* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %27, i64 %mul78, i1 false)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end103, label %for.body72, !llvm.loop !58

for.cond88.preheader:                             ; preds = %for.cond88.preheader.lr.ph, %for.cond.cleanup90
  %indvars.iv167 = phi i64 [ 0, %for.cond88.preheader.lr.ph ], [ %indvars.iv.next168, %for.cond.cleanup90 ]
  br i1 %cmp89139, label %for.body91.lr.ph, label %for.cond.cleanup90

for.body91.lr.ph:                                 ; preds = %for.cond88.preheader
  %28 = mul nsw i64 %indvars.iv167, %20
  br label %for.body91

for.cond.cleanup90:                               ; preds = %for.body91, %for.cond88.preheader
  %indvars.iv.next168 = add nuw nsw i64 %indvars.iv167, 1
  %exitcond171.not = icmp eq i64 %indvars.iv.next168, %wide.trip.count170
  br i1 %exitcond171.not, label %if.end103, label %for.cond88.preheader, !llvm.loop !59

for.body91:                                       ; preds = %for.body91.lr.ph, %for.body91
  %indvars.iv162 = phi i64 [ 0, %for.body91.lr.ph ], [ %indvars.iv.next163, %for.body91 ]
  %29 = add nsw i64 %indvars.iv162, %28
  %30 = load double*, double** %_M_start.i.i, align 8, !tbaa !51
  %add.ptr.i = getelementptr inbounds double, double* %30, i64 %29
  %call96 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* nonnull %add.ptr.i)
  %indvars.iv.next163 = add nuw nsw i64 %indvars.iv162, 1
  %exitcond166.not = icmp eq i64 %indvars.iv.next163, %wide.trip.count165
  br i1 %exitcond166.not, label %for.cond.cleanup90, label %for.body91, !llvm.loop !60

if.end103:                                        ; preds = %for.cond.cleanup90, %for.body72, %for.cond83.preheader, %for.cond69.preheader
  %gamma = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i64 0, i32 0
  %m = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i64 0, i32 1
  %call104 = tail call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* nonnull %call1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), double* nonnull %gamma, i32* nonnull %m)
  %call105 = tail call i32 @fclose(%struct._IO_FILE* nonnull %call1)
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noalias noundef %struct._IO_FILE* @fopen(i8* nocapture noundef readonly, i8* nocapture noundef readonly) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @printf(i8* nocapture noundef readonly, ...) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) local_unnamed_addr #11

declare dso_local i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @fclose(%struct._IO_FILE* nocapture noundef) local_unnamed_addr #2

; Function Attrs: norecurse uwtable
define dso_local i32 @main(i32 %argc, i8** nocapture readonly %argv) local_unnamed_addr #12 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %errb.i418 = alloca double, align 8
  %errb.i = alloca double, align 8
  %__dnew.i.i.i.i196 = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %paths = alloca %"class.std::vector", align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp41 = alloca %"class.std::__cxx11::basic_string", align 8
  %agg.tmp50 = alloca %"class.std::__cxx11::basic_string", align 8
  %path = alloca %"class.std::__cxx11::basic_string", align 8
  %input = alloca %struct.GMMInput, align 8
  %ref.tmp83 = alloca %"class.std::__cxx11::basic_string", align 8
  %start = alloca %struct.timeval, align 8
  %end = alloca %struct.timeval, align 8
  %input130 = alloca %struct.GMMInput, align 8
  %ref.tmp131 = alloca %"class.std::__cxx11::basic_string", align 8
  %start166 = alloca %struct.timeval, align 8
  %end167 = alloca %struct.timeval, align 8
  %0 = alloca %"class.std::bad_alloc", align 8
  %input209 = alloca %struct.GMMInput, align 8
  %ref.tmp210 = alloca %"class.std::__cxx11::basic_string", align 8
  %start245 = alloca %struct.timeval, align 8
  %end246 = alloca %struct.timeval, align 8
  %puts = tail call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([14 x i8], [14 x i8]* @str, i64 0, i64 0))
  %cmp = icmp sgt i32 %argc, 9
  br i1 %cmp, label %land.rhs, label %cleanup.done26

land.rhs:                                         ; preds = %entry
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #38
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 9
  %2 = load i8*, i8** %arrayidx, align 8, !tbaa !61
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %4 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %3, %union.anon** %4, align 8, !tbaa !14
  %tobool.not.i = icmp eq i8* %2, null
  br i1 %tobool.not.i, label %if.then.i.i.i.i, label %if.end.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.rhs
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.117, i64 0, i64 0)) #40
  unreachable

if.end.i.i.i.i:                                   ; preds = %land.rhs
  %5 = bitcast %union.anon* %3 to i8*
  %call.i.i = call i64 @strlen(i8* nonnull dereferenceable(1) %2) #38
  %6 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #38
  store i64 %call.i.i, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %cmp3.i.i.i.i = icmp ugt i64 %call.i.i, 15
  br i1 %cmp3.i.i.i.i, label %if.then4.i.i.i.i, label %if.end6.i.i.i.i

if.then4.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  %call5.i.i.i5.i49 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i49, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %7 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %7, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  br label %if.end6.i.i.i.i

if.end6.i.i.i.i:                                  ; preds = %if.then4.i.i.i.i, %if.end.i.i.i.i
  %8 = phi i8* [ %call5.i.i.i5.i49, %if.then4.i.i.i.i ], [ %5, %if.end.i.i.i.i ]
  switch i64 %call.i.i, label %if.end.i.i.i.i.i.i.i [
    i64 1, label %if.then.i.i.i.i.i.i
    i64 0, label %cleanup.action
  ]

if.then.i.i.i.i.i.i:                              ; preds = %if.end6.i.i.i.i
  %9 = load i8, i8* %2, align 1, !tbaa !21
  store i8 %9, i8* %8, align 1, !tbaa !21
  br label %cleanup.action

if.end.i.i.i.i.i.i.i:                             ; preds = %if.end6.i.i.i.i
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* nonnull align 1 %2, i64 %call.i.i, i1 false) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.end6.i.i.i.i, %if.then.i.i.i.i.i.i, %if.end.i.i.i.i.i.i.i
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %10 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %10, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %11 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %11, i64 %10
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #38
  %call.i = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #38
  %cmp.i = icmp eq i32 %call.i, 0
  %12 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %12, %5
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %cleanup.action
  call void @_ZdlPv(i8* %12) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %cleanup.action, %if.then.i.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #38
  br label %cleanup.done26

cleanup.done26:                                   ; preds = %entry, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %13 = phi i1 [ %cmp.i, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit ], [ false, %entry ]
  %14 = bitcast %"class.std::vector"* %paths to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #38
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %14, i8 0, i64 24, i1 false) #38
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 2
  %16 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp to %union.anon**
  store %union.anon* %15, %union.anon** %16, align 8, !tbaa !14
  %17 = bitcast %union.anon* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(3) %17, i8* nonnull align 1 dereferenceable(3) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), i64 3, i1 false) #38
  %_M_p.i.i.i.i.i61 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 0, i32 0
  %_M_string_length.i.i.i.i.i.i62 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp, i64 0, i32 1
  store i64 3, i64* %_M_string_length.i.i.i.i.i.i62, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i63 = getelementptr inbounds i8, i8* %17, i64 3
  store i8 0, i8* %arrayidx.i.i.i.i.i63, align 1, !tbaa !21
  invoke void @_Z8getTestsRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEPKcS5_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %paths, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull %agg.tmp)
          to label %invoke.cont37 unwind label %lpad36

invoke.cont37:                                    ; preds = %cleanup.done26
  %18 = load i8*, i8** %_M_p.i.i.i.i.i61, align 8, !tbaa !17
  %cmp.i.i.i70 = icmp eq i8* %18, %17
  br i1 %cmp.i.i.i70, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit73, label %if.then.i.i71

if.then.i.i71:                                    ; preds = %invoke.cont37
  call void @_ZdlPv(i8* %18) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit73

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit73: ; preds = %invoke.cont37, %if.then.i.i71
  %19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp41, i64 0, i32 2
  %20 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp41 to %union.anon**
  store %union.anon* %19, %union.anon** %20, align 8, !tbaa !14
  %21 = bitcast %union.anon* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(5) %21, i8* nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i64 5, i1 false) #38
  %_M_p.i.i.i.i.i90 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp41, i64 0, i32 0, i32 0
  %_M_string_length.i.i.i.i.i.i91 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp41, i64 0, i32 1
  store i64 5, i64* %_M_string_length.i.i.i.i.i.i91, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i92 = getelementptr inbounds i8, i8* %21, i64 5
  store i8 0, i8* %arrayidx.i.i.i.i.i92, align 1, !tbaa !21
  invoke void @_Z8getTestsRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEPKcS5_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %paths, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull %agg.tmp41)
          to label %invoke.cont46 unwind label %lpad45

invoke.cont46:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit73
  %22 = load i8*, i8** %_M_p.i.i.i.i.i90, align 8, !tbaa !17
  %cmp.i.i.i99 = icmp eq i8* %22, %21
  br i1 %cmp.i.i.i99, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit102, label %if.then.i.i100

if.then.i.i100:                                   ; preds = %invoke.cont46
  call void @_ZdlPv(i8* %22) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit102

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit102: ; preds = %invoke.cont46, %if.then.i.i100
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp50, i64 0, i32 2
  %24 = bitcast %"class.std::__cxx11::basic_string"* %agg.tmp50 to %union.anon**
  store %union.anon* %23, %union.anon** %24, align 8, !tbaa !14
  %25 = bitcast %union.anon* %23 to i8*
  %26 = bitcast %union.anon* %23 to i32*
  store i32 795553841, i32* %26, align 8
  %_M_p.i.i.i.i.i114 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp50, i64 0, i32 0, i32 0
  %_M_string_length.i.i.i.i.i.i115 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.tmp50, i64 0, i32 1
  store i64 4, i64* %_M_string_length.i.i.i.i.i.i115, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i116 = getelementptr inbounds i8, i8* %25, i64 4
  store i8 0, i8* %arrayidx.i.i.i.i.i116, align 4, !tbaa !21
  invoke void @_Z8getTestsRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEPKcS5_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %paths, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull %agg.tmp50)
          to label %invoke.cont55 unwind label %lpad54

invoke.cont55:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit102
  %27 = load i8*, i8** %_M_p.i.i.i.i.i114, align 8, !tbaa !17
  %cmp.i.i.i123 = icmp eq i8* %27, %25
  br i1 %cmp.i.i.i123, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit126, label %if.then.i.i124

if.then.i.i124:                                   ; preds = %invoke.cont55
  call void @_ZdlPv(i8* %27) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit126

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit126: ; preds = %invoke.cont55, %if.then.i.i124
  %_M_start.i127 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %paths, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_start.i127, align 8, !tbaa !61
  %_M_finish.i128 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %paths, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish.i128, align 8, !tbaa !61
  %cmp.i129.not695 = icmp eq %"class.std::__cxx11::basic_string"* %28, %29
  br i1 %cmp.i129.not695, label %invoke.cont.i145, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit126
  %30 = bitcast %"class.std::__cxx11::basic_string"* %path to i8*
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %path, i64 0, i32 2
  %32 = bitcast %"class.std::__cxx11::basic_string"* %path to %union.anon**
  %33 = bitcast i64* %__dnew.i.i.i.i196 to i8*
  %34 = bitcast %union.anon* %31 to i8*
  %_M_p.i6.i.i.i.i198 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %path, i64 0, i32 0, i32 0
  %_M_allocated_capacity.i.i.i.i.i199 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %path, i64 0, i32 2, i32 0
  %_M_string_length.i.i.i.i.i.i205 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %path, i64 0, i32 1
  %35 = bitcast %struct.GMMInput* %input to i8*
  %alphas.i = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 3
  %36 = bitcast %"class.std::vector.3"* %alphas.i to i8*
  %37 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp83 to i8*
  %d = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 0
  %k = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 1
  %n = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 2
  %means = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 4
  %icf = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 5
  %x = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 6
  %wishart = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 7
  %_M_p.i.i.i.i218 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp83, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp83, i64 0, i32 2
  %arraydecay.i.i.i.i219 = bitcast %union.anon* %38 to i8*
  %39 = bitcast %struct.timeval* %start to i8*
  %40 = bitcast %struct.timeval* %end to i8*
  %_M_finish.i29.i = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %_M_start.i30.i = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %_M_finish.i.i = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %_M_start.i21.i = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %41 = bitcast double* %errb.i to i8*
  %_M_start.i18.i = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %_M_start.i17.i = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %tv_sec.i = getelementptr inbounds %struct.timeval, %struct.timeval* %end, i64 0, i32 0
  %tv_sec1.i = getelementptr inbounds %struct.timeval, %struct.timeval* %start, i64 0, i32 0
  %tv_usec.i = getelementptr inbounds %struct.timeval, %struct.timeval* %end, i64 0, i32 1
  %tv_usec2.i = getelementptr inbounds %struct.timeval, %struct.timeval* %start, i64 0, i32 1
  %42 = bitcast %struct.GMMInput* %input130 to i8*
  %alphas.i273 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 3
  %43 = bitcast %"class.std::vector.3"* %alphas.i273 to i8*
  %44 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp131 to i8*
  %d134 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 0
  %k135 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 1
  %n136 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 2
  %means138 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 4
  %icf139 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 5
  %x140 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 6
  %wishart141 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 7
  %_M_p.i.i.i.i287 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp131, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp131, i64 0, i32 2
  %arraydecay.i.i.i.i288 = bitcast %union.anon* %45 to i8*
  %46 = bitcast %struct.timeval* %start166 to i8*
  %47 = bitcast %struct.timeval* %end167 to i8*
  %_M_finish.i29.i314 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %_M_start.i30.i315 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %_M_finish.i.i321 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %_M_start.i21.i322 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %_M_start.i18.i331 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %_M_start.i17.i332 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::bad_alloc"* %0 to i8*
  %49 = getelementptr inbounds %"class.std::bad_alloc", %"class.std::bad_alloc"* %0, i64 0, i32 0, i32 0
  %tv_sec.i335 = getelementptr inbounds %struct.timeval, %struct.timeval* %end167, i64 0, i32 0
  %tv_sec1.i336 = getelementptr inbounds %struct.timeval, %struct.timeval* %start166, i64 0, i32 0
  %tv_usec.i339 = getelementptr inbounds %struct.timeval, %struct.timeval* %end167, i64 0, i32 1
  %tv_usec2.i340 = getelementptr inbounds %struct.timeval, %struct.timeval* %start166, i64 0, i32 1
  %50 = bitcast %struct.GMMInput* %input209 to i8*
  %alphas.i391 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 3
  %51 = bitcast %"class.std::vector.3"* %alphas.i391 to i8*
  %52 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp210 to i8*
  %d213 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 0
  %k214 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 1
  %n215 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 2
  %means217 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 4
  %icf218 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 5
  %x219 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 6
  %wishart220 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 7
  %_M_p.i.i.i.i392 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp210, i64 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp210, i64 0, i32 2
  %arraydecay.i.i.i.i393 = bitcast %union.anon* %53 to i8*
  %54 = bitcast %struct.timeval* %start245 to i8*
  %55 = bitcast %struct.timeval* %end246 to i8*
  %_M_finish.i29.i420 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %_M_start.i30.i421 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %_M_finish.i.i427 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %_M_start.i21.i428 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %56 = bitcast double* %errb.i418 to i8*
  %_M_start.i18.i437 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %_M_start.i17.i438 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %tv_sec.i440 = getelementptr inbounds %struct.timeval, %struct.timeval* %end246, i64 0, i32 0
  %tv_sec1.i441 = getelementptr inbounds %struct.timeval, %struct.timeval* %start245, i64 0, i32 0
  %tv_usec.i444 = getelementptr inbounds %struct.timeval, %struct.timeval* %end246, i64 0, i32 1
  %tv_usec2.i445 = getelementptr inbounds %struct.timeval, %struct.timeval* %start245, i64 0, i32 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit159
  %.pre = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_start.i127, align 8, !tbaa !62
  %.pre738 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish.i128, align 8, !tbaa !32
  %cmp.not3.i.i.i.i132 = icmp eq %"class.std::__cxx11::basic_string"* %.pre, %.pre738
  br i1 %cmp.not3.i.i.i.i132, label %invoke.cont.i145, label %for.body.i.i.i.i137

for.body.i.i.i.i137:                              ; preds = %for.cond.cleanup, %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i141
  %__first.addr.04.i.i.i.i133 = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr.i.i.i.i139, %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i141 ], [ %.pre, %for.cond.cleanup ]
  %_M_p.i.i.i.i.i.i.i.i.i134 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i.i.i133, i64 0, i32 0, i32 0
  %57 = load i8*, i8** %_M_p.i.i.i.i.i.i.i.i.i134, align 8, !tbaa !17
  %58 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i.i.i133, i64 0, i32 2
  %arraydecay.i.i.i.i.i.i.i.i.i135 = bitcast %union.anon* %58 to i8*
  %cmp.i.i.i.i.i.i.i.i136 = icmp eq i8* %57, %arraydecay.i.i.i.i.i.i.i.i.i135
  br i1 %cmp.i.i.i.i.i.i.i.i136, label %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i141, label %if.then.i.i.i.i.i.i.i138

if.then.i.i.i.i.i.i.i138:                         ; preds = %for.body.i.i.i.i137
  call void @_ZdlPv(i8* %57) #38
  br label %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i141

_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i141: ; preds = %if.then.i.i.i.i.i.i.i138, %for.body.i.i.i.i137
  %incdec.ptr.i.i.i.i139 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i.i.i133, i64 1
  %cmp.not.i.i.i.i140 = icmp eq %"class.std::__cxx11::basic_string"* %incdec.ptr.i.i.i.i139, %.pre738
  br i1 %cmp.not.i.i.i.i140, label %invoke.cont.loopexit.i143, label %for.body.i.i.i.i137, !llvm.loop !63

invoke.cont.loopexit.i143:                        ; preds = %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i141
  %.pre.i142 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_start.i127, align 8, !tbaa !62
  br label %invoke.cont.i145

invoke.cont.i145:                                 ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit126, %invoke.cont.loopexit.i143, %for.cond.cleanup
  %59 = phi %"class.std::__cxx11::basic_string"* [ %.pre.i142, %invoke.cont.loopexit.i143 ], [ %.pre738, %for.cond.cleanup ], [ %28, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit126 ]
  %tobool.not.i.i.i144 = icmp eq %"class.std::__cxx11::basic_string"* %59, null
  br i1 %tobool.not.i.i.i144, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit147, label %if.then.i.i.i146

if.then.i.i.i146:                                 ; preds = %invoke.cont.i145
  %60 = bitcast %"class.std::__cxx11::basic_string"* %59 to i8*
  call void @_ZdlPv(i8* nonnull %60) #38
  br label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit147

_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit147: ; preds = %invoke.cont.i145, %if.then.i.i.i146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #38
  ret i32 0

lpad36:                                           ; preds = %cleanup.done26
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = load i8*, i8** %_M_p.i.i.i.i.i61, align 8, !tbaa !17
  %cmp.i.i.i150 = icmp eq i8* %62, %17
  br i1 %cmp.i.i.i150, label %ehcleanup291, label %if.then.i.i151

if.then.i.i151:                                   ; preds = %lpad36
  call void @_ZdlPv(i8* %62) #38
  br label %ehcleanup291

lpad45:                                           ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit73
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = load i8*, i8** %_M_p.i.i.i.i.i90, align 8, !tbaa !17
  %cmp.i.i.i162 = icmp eq i8* %64, %21
  br i1 %cmp.i.i.i162, label %ehcleanup291, label %if.then.i.i163

if.then.i.i163:                                   ; preds = %lpad45
  call void @_ZdlPv(i8* %64) #38
  br label %ehcleanup291

lpad54:                                           ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit102
  %65 = landingpad { i8*, i32 }
          cleanup
  %66 = load i8*, i8** %_M_p.i.i.i.i.i114, align 8, !tbaa !17
  %cmp.i.i.i175 = icmp eq i8* %66, %25
  br i1 %cmp.i.i.i175, label %ehcleanup291, label %if.then.i.i176

if.then.i.i176:                                   ; preds = %lpad54
  call void @_ZdlPv(i8* %66) #38
  br label %ehcleanup291

for.body:                                         ; preds = %for.body.lr.ph, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit159
  %__begin1.sroa.0.0705 = phi %"class.std::__cxx11::basic_string"* [ %28, %for.body.lr.ph ], [ %incdec.ptr.i, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit159 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #38
  store %union.anon* %31, %union.anon** %32, align 8, !tbaa !14
  %_M_p.i5.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__begin1.sroa.0.0705, i64 0, i32 0, i32 0
  %67 = load i8*, i8** %_M_p.i5.i, align 8, !tbaa !17
  %_M_string_length.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__begin1.sroa.0.0705, i64 0, i32 1
  %68 = load i64, i64* %_M_string_length.i.i, align 8, !tbaa !19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #38
  store i64 %68, i64* %__dnew.i.i.i.i196, align 8, !tbaa !20
  %cmp3.i.i.i.i197 = icmp ugt i64 %68, 15
  br i1 %cmp3.i.i.i.i197, label %if.then4.i.i.i.i200, label %if.end6.i.i.i.i201

if.then4.i.i.i.i200:                              ; preds = %for.body
  %call5.i.i.i4.i207 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %path, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i196, i64 0)
          to label %call5.i.i.i4.i.noexc unwind label %lpad64

call5.i.i.i4.i.noexc:                             ; preds = %if.then4.i.i.i.i200
  store i8* %call5.i.i.i4.i207, i8** %_M_p.i6.i.i.i.i198, align 8, !tbaa !17
  %69 = load i64, i64* %__dnew.i.i.i.i196, align 8, !tbaa !20
  store i64 %69, i64* %_M_allocated_capacity.i.i.i.i.i199, align 8, !tbaa !21
  br label %if.end6.i.i.i.i201

if.end6.i.i.i.i201:                               ; preds = %for.body, %call5.i.i.i4.i.noexc
  %70 = phi i8* [ %call5.i.i.i4.i207, %call5.i.i.i4.i.noexc ], [ %34, %for.body ]
  switch i64 %68, label %if.end.i.i.i.i.i.i.i203 [
    i64 1, label %if.then.i.i.i.i.i.i202
    i64 0, label %invoke.cont65
  ]

if.then.i.i.i.i.i.i202:                           ; preds = %if.end6.i.i.i.i201
  %71 = load i8, i8* %67, align 1, !tbaa !21
  store i8 %71, i8* %70, align 1, !tbaa !21
  br label %invoke.cont65

if.end.i.i.i.i.i.i.i203:                          ; preds = %if.end6.i.i.i.i201
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %67, i64 %68, i1 false) #38
  br label %invoke.cont65

invoke.cont65:                                    ; preds = %if.end.i.i.i.i.i.i.i203, %if.then.i.i.i.i.i.i202, %if.end6.i.i.i.i201
  %72 = load i64, i64* %__dnew.i.i.i.i196, align 8, !tbaa !20
  store i64 %72, i64* %_M_string_length.i.i.i.i.i.i205, align 8, !tbaa !19
  %73 = load i8*, i8** %_M_p.i6.i.i.i.i198, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i206 = getelementptr inbounds i8, i8* %73, i64 %72
  store i8 0, i8* %arrayidx.i.i.i.i.i206, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #38
  %call.i208 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %path, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i64 0, i64 0)) #38
  %cmp.i209 = icmp eq i32 %call.i208, 0
  br i1 %cmp.i209, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %invoke.cont65
  %call.i210 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %path, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0)) #38
  %cmp.i211 = icmp eq i32 %call.i210, 0
  br i1 %cmp.i211, label %cleanup, label %lor.lhs.false71

lor.lhs.false71:                                  ; preds = %lor.lhs.false
  %call.i212 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %path, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0)) #38
  %cmp.i213 = icmp eq i32 %call.i212, 0
  br i1 %cmp.i213, label %cleanup, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %lor.lhs.false71
  %call.i214 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %path, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0)) #38
  %cmp.i215 = icmp eq i32 %call.i214, 0
  br i1 %cmp.i215, label %cleanup, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %lor.lhs.false74
  %call.i216 = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %path, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0)) #38
  %cmp.i217 = icmp eq i32 %call.i216, 0
  br i1 %cmp.i217, label %cleanup, label %if.end

lpad64:                                           ; preds = %if.then4.i.i.i.i200
  %74 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup281

if.end:                                           ; preds = %lor.lhs.false77
  %75 = load i8*, i8** %_M_p.i6.i.i.i.i198, align 8, !tbaa !17
  %call82 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* %75)
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %35) #38
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(96) %36, i8 0, i64 96, i1 false) #38
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #38
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp83, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path)
          to label %invoke.cont85 unwind label %lpad84

invoke.cont85:                                    ; preds = %if.end
  invoke void @_Z17read_gmm_instanceRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiS7_S7_RSt6vectorIdSaIdEESB_SB_SB_R7Wishartb(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp83, i32* nonnull %d, i32* nonnull %k, i32* nonnull %n, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %alphas.i, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %means, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %icf, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %x, %struct.Wishart* nonnull align 8 dereferenceable(16) %wishart, i1 zeroext %13)
          to label %invoke.cont89 unwind label %lpad88

invoke.cont89:                                    ; preds = %invoke.cont85
  %76 = load i8*, i8** %_M_p.i.i.i.i218, align 8, !tbaa !17
  %cmp.i.i.i220 = icmp eq i8* %76, %arraydecay.i.i.i.i219
  br i1 %cmp.i.i.i220, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit223, label %if.then.i.i221

if.then.i.i221:                                   ; preds = %invoke.cont89
  call void @_ZdlPv(i8* %76) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit223

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit223: ; preds = %invoke.cont89, %if.then.i.i221
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #38
  %77 = load i32, i32* %k, align 4, !tbaa !64
  %78 = load i32, i32* %d, align 8, !tbaa !69
  %add = add nsw i32 %78, 1
  %mul = mul nsw i32 %add, %77
  %add95 = add nsw i32 %78, 2
  %mul96 = mul nsw i32 %mul, %add95
  %div = sdiv i32 %mul96, 2
  %conv = sext i32 %div to i64
  %cmp.i.i = icmp slt i32 %mul96, -1
  br i1 %cmp.i.i, label %if.then.i.i228, label %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i

if.then.i.i228:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit223
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.123, i64 0, i64 0)) #40
          to label %.noexc232 unwind label %lpad98.loopexit.split-lp

.noexc232:                                        ; preds = %if.then.i.i228
  unreachable

_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit223
  %mul96.off = add i32 %mul96, 1
  %79 = icmp ult i32 %mul96.off, 3
  br i1 %79, label %invoke.cont99, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i: ; preds = %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv, 3
  %call2.i.i.i.i1.i.i233 = invoke noalias nonnull i8* @_Znwm(i64 %mul.i.i.i.i.i.i) #42
          to label %for.body.i.i.preheader.i.i.i.i.i unwind label %lpad98.loopexit

for.body.i.i.preheader.i.i.i.i.i:                 ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i
  %80 = bitcast i8* %call2.i.i.i.i1.i.i233 to double*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i233, i8 0, i64 %mul.i.i.i.i.i.i, i1 false)
  br label %invoke.cont99

invoke.cont99:                                    ; preds = %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i, %for.body.i.i.preheader.i.i.i.i.i
  %cond.i.i.i.i514 = phi double* [ %80, %for.body.i.i.preheader.i.i.i.i.i ], [ null, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #38
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #38
  %call102 = call i32 @gettimeofday(%struct.timeval* nonnull %start, i8* null) #38
  %81 = load double*, double** %_M_finish.i29.i, align 8, !tbaa !49
  %82 = load double*, double** %_M_start.i30.i, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i31.i = ptrtoint double* %81 to i64
  %sub.ptr.rhs.cast.i32.i = ptrtoint double* %82 to i64
  %sub.ptr.sub.i33.i = sub i64 %sub.ptr.lhs.cast.i31.i, %sub.ptr.rhs.cast.i32.i
  %sub.ptr.div.i34.i = ashr exact i64 %sub.ptr.sub.i33.i, 3
  %add.ptr.i234 = getelementptr inbounds double, double* %cond.i.i.i.i514, i64 %sub.ptr.div.i34.i
  %83 = load double*, double** %_M_finish.i.i, align 8, !tbaa !49
  %84 = load double*, double** %_M_start.i21.i, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i = ptrtoint double* %83 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint double* %84 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %sub.ptr.div.i.i = ashr exact i64 %sub.ptr.sub.i.i, 3
  %add.ptr10.i = getelementptr inbounds double, double* %add.ptr.i234, i64 %sub.ptr.div.i.i
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #38
  store double 1.000000e+00, double* %errb.i, align 8, !tbaa !70
  %85 = load i32, i32* %d, align 8, !tbaa !69
  %86 = load i32, i32* %k, align 4, !tbaa !64
  %87 = load i32, i32* %n, align 8, !tbaa !71
  %88 = load double*, double** %_M_start.i18.i, align 8, !tbaa !51
  %89 = load double*, double** %_M_start.i17.i, align 8, !tbaa !51
  invoke void @gmm_objective_b(i32 %85, i32 %86, i32 %87, double* %82, double* %cond.i.i.i.i514, double* %84, double* %add.ptr.i234, double* %88, double* %add.ptr10.i, double* %89, %struct.Wishart* nonnull byval(%struct.Wishart) align 8 %wishart, double* undef, double* nonnull %errb.i)
          to label %invoke.cont104 unwind label %lpad103

invoke.cont104:                                   ; preds = %invoke.cont99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #38
  %call105 = call i32 @gettimeofday(%struct.timeval* nonnull %end, i8* null) #38
  %90 = load i64, i64* %tv_sec.i, align 8, !tbaa !44
  %91 = load i64, i64* %tv_sec1.i, align 8, !tbaa !44
  %sub.i = sub nsw i64 %90, %91
  %conv.i = sitofp i64 %sub.i to double
  %92 = load i64, i64* %tv_usec.i, align 8, !tbaa !46
  %93 = load i64, i64* %tv_usec2.i, align 8, !tbaa !46
  %sub3.i = sub nsw i64 %92, %93
  %conv4.i = sitofp i64 %sub3.i to double
  %mul.i = fmul fast double %conv4.i, 0x3EB0C6F7A0B5ED8D
  %add.i = fadd fast double %mul.i, %conv.i
  %conv5.i = fptrunc double %add.i to float
  %conv107 = fpext float %conv5.i to double
  %call109 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), double %conv107)
  br label %for.body113

_ZN9GMMOutputD2Ev.exit256:                        ; preds = %for.body113
  %putchar = call i32 @putchar(i32 10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #38
  %94 = bitcast double* %cond.i.i.i.i514 to i8*
  call void @_ZdlPv(i8* nonnull %94) #38
  %95 = load double*, double** %_M_start.i17.i, align 8, !tbaa !51
  %tobool.not.i.i.i.i258 = icmp eq double* %95, null
  br i1 %tobool.not.i.i.i.i258, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i262, label %if.then.i.i.i.i259

if.then.i.i.i.i259:                               ; preds = %_ZN9GMMOutputD2Ev.exit256
  %96 = bitcast double* %95 to i8*
  call void @_ZdlPv(i8* nonnull %96) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i262

_ZNSt6vectorIdSaIdEED2Ev.exit.i262:               ; preds = %if.then.i.i.i.i259, %_ZN9GMMOutputD2Ev.exit256
  %97 = load double*, double** %_M_start.i18.i, align 8, !tbaa !51
  %tobool.not.i.i.i2.i261 = icmp eq double* %97, null
  br i1 %tobool.not.i.i.i2.i261, label %_ZNSt6vectorIdSaIdEED2Ev.exit4.i266, label %if.then.i.i.i3.i263

if.then.i.i.i3.i263:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i262
  %98 = bitcast double* %97 to i8*
  call void @_ZdlPv(i8* nonnull %98) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit4.i266

_ZNSt6vectorIdSaIdEED2Ev.exit4.i266:              ; preds = %if.then.i.i.i3.i263, %_ZNSt6vectorIdSaIdEED2Ev.exit.i262
  %99 = load double*, double** %_M_start.i21.i, align 8, !tbaa !51
  %tobool.not.i.i.i6.i265 = icmp eq double* %99, null
  br i1 %tobool.not.i.i.i6.i265, label %_ZNSt6vectorIdSaIdEED2Ev.exit8.i270, label %if.then.i.i.i7.i267

if.then.i.i.i7.i267:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit4.i266
  %100 = bitcast double* %99 to i8*
  call void @_ZdlPv(i8* nonnull %100) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit8.i270

_ZNSt6vectorIdSaIdEED2Ev.exit8.i270:              ; preds = %if.then.i.i.i7.i267, %_ZNSt6vectorIdSaIdEED2Ev.exit4.i266
  %101 = load double*, double** %_M_start.i30.i, align 8, !tbaa !51
  %tobool.not.i.i.i10.i269 = icmp eq double* %101, null
  br i1 %tobool.not.i.i.i10.i269, label %_ZN8GMMInputD2Ev.exit272, label %if.then.i.i.i11.i271

if.then.i.i.i11.i271:                             ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit8.i270
  %102 = bitcast double* %101 to i8*
  call void @_ZdlPv(i8* nonnull %102) #38
  br label %_ZN8GMMInputD2Ev.exit272

_ZN8GMMInputD2Ev.exit272:                         ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit8.i270, %if.then.i.i.i11.i271
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %35) #38
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %42) #38
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(96) %43, i8 0, i64 96, i1 false) #38
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #38
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp131, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path)
          to label %invoke.cont133 unwind label %lpad132

lpad84:                                           ; preds = %if.end
  %103 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup91

lpad88:                                           ; preds = %invoke.cont85
  %104 = landingpad { i8*, i32 }
          cleanup
  %105 = load i8*, i8** %_M_p.i.i.i.i218, align 8, !tbaa !17
  %cmp.i.i.i276 = icmp eq i8* %105, %arraydecay.i.i.i.i219
  br i1 %cmp.i.i.i276, label %ehcleanup91, label %if.then.i.i277

if.then.i.i277:                                   ; preds = %lpad88
  call void @_ZdlPv(i8* %105) #38
  br label %ehcleanup91

ehcleanup91:                                      ; preds = %if.then.i.i277, %lpad88, %lpad84
  %.pn31 = phi { i8*, i32 } [ %103, %lpad84 ], [ %104, %lpad88 ], [ %104, %if.then.i.i277 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #38
  br label %ehcleanup128

lpad98.loopexit:                                  ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup128

lpad98.loopexit.split-lp:                         ; preds = %if.then.i.i228
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup128

lpad103:                                          ; preds = %invoke.cont99
  %106 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #38
  %tobool.not.i.i.i.i281 = icmp eq double* %cond.i.i.i.i514, null
  br i1 %tobool.not.i.i.i.i281, label %ehcleanup128, label %if.then.i.i.i.i282

if.then.i.i.i.i282:                               ; preds = %lpad103
  %107 = bitcast double* %cond.i.i.i.i514 to i8*
  call void @_ZdlPv(i8* nonnull %107) #38
  br label %ehcleanup128

for.body113:                                      ; preds = %invoke.cont104, %for.body113
  %indvars.iv = phi i64 [ 0, %invoke.cont104 ], [ %indvars.iv.next, %for.body113 ]
  %add.ptr.i286 = getelementptr inbounds double, double* %cond.i.i.i.i514, i64 %indvars.iv
  %108 = load double, double* %add.ptr.i286, align 8, !tbaa !70
  %call119 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), double %108)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 5
  br i1 %exitcond.not, label %_ZN9GMMOutputD2Ev.exit256, label %for.body113, !llvm.loop !72

invoke.cont133:                                   ; preds = %_ZN8GMMInputD2Ev.exit272
  invoke void @_Z17read_gmm_instanceRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiS7_S7_RSt6vectorIdSaIdEESB_SB_SB_R7Wishartb(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp131, i32* nonnull %d134, i32* nonnull %k135, i32* nonnull %n136, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %alphas.i273, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %means138, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %icf139, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %x140, %struct.Wishart* nonnull align 8 dereferenceable(16) %wishart141, i1 zeroext %13)
          to label %invoke.cont145 unwind label %lpad144

invoke.cont145:                                   ; preds = %invoke.cont133
  %109 = load i8*, i8** %_M_p.i.i.i.i287, align 8, !tbaa !17
  %cmp.i.i.i289 = icmp eq i8* %109, %arraydecay.i.i.i.i288
  br i1 %cmp.i.i.i289, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit292, label %if.then.i.i290

if.then.i.i290:                                   ; preds = %invoke.cont145
  call void @_ZdlPv(i8* %109) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit292

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit292: ; preds = %invoke.cont145, %if.then.i.i290
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #38
  %110 = load i32, i32* %k135, align 4, !tbaa !64
  %111 = load i32, i32* %d134, align 8, !tbaa !69
  %add151 = add nsw i32 %111, 1
  %mul152 = mul nsw i32 %add151, %110
  %add154 = add nsw i32 %111, 2
  %mul155 = mul nsw i32 %mul152, %add154
  %div156 = sdiv i32 %mul155, 2
  %conv160 = sext i32 %div156 to i64
  %cmp.i.i293 = icmp slt i32 %mul155, -1
  br i1 %cmp.i.i293, label %if.then.i.i294, label %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i296

if.then.i.i294:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit292
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.123, i64 0, i64 0)) #40
          to label %.noexc309 unwind label %lpad162.loopexit.split-lp

.noexc309:                                        ; preds = %if.then.i.i294
  unreachable

_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i296: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit292
  %mul155.off = add i32 %mul155, 1
  %112 = icmp ult i32 %mul155.off, 3
  br i1 %112, label %invoke.cont163, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i298

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i298: ; preds = %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i296
  %mul.i.i.i.i.i.i297 = shl nuw nsw i64 %conv160, 3
  %call2.i.i.i.i1.i.i311 = invoke noalias nonnull i8* @_Znwm(i64 %mul.i.i.i.i.i.i297) #42
          to label %for.body.i.i.preheader.i.i.i.i.i305 unwind label %lpad162.loopexit

for.body.i.i.preheader.i.i.i.i.i305:              ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i298
  %113 = bitcast i8* %call2.i.i.i.i1.i.i311 to double*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i311, i8 0, i64 %mul.i.i.i.i.i.i297, i1 false)
  br label %invoke.cont163

invoke.cont163:                                   ; preds = %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i296, %for.body.i.i.preheader.i.i.i.i.i305
  %cond.i.i.i.i299519 = phi double* [ %113, %for.body.i.i.preheader.i.i.i.i.i305 ], [ null, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i296 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #38
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #38
  %call168 = call i32 @gettimeofday(%struct.timeval* nonnull %start166, i8* null) #38
  %114 = load double*, double** %_M_finish.i29.i314, align 8, !tbaa !49
  %115 = load double*, double** %_M_start.i30.i315, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i31.i316 = ptrtoint double* %114 to i64
  %sub.ptr.rhs.cast.i32.i317 = ptrtoint double* %115 to i64
  %sub.ptr.sub.i33.i318 = sub i64 %sub.ptr.lhs.cast.i31.i316, %sub.ptr.rhs.cast.i32.i317
  %sub.ptr.div.i34.i319 = ashr exact i64 %sub.ptr.sub.i33.i318, 3
  %add.ptr.i320 = getelementptr inbounds double, double* %cond.i.i.i.i299519, i64 %sub.ptr.div.i34.i319
  %116 = load double*, double** %_M_finish.i.i321, align 8, !tbaa !49
  %117 = load double*, double** %_M_start.i21.i322, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i323 = ptrtoint double* %116 to i64
  %sub.ptr.rhs.cast.i.i324 = ptrtoint double* %117 to i64
  %sub.ptr.sub.i.i325 = sub i64 %sub.ptr.lhs.cast.i.i323, %sub.ptr.rhs.cast.i.i324
  %sub.ptr.div.i.i326 = ashr exact i64 %sub.ptr.sub.i.i325, 3
  %add.ptr10.i327 = getelementptr inbounds double, double* %add.ptr.i320, i64 %sub.ptr.div.i.i326
  %118 = load i32, i32* %d134, align 8, !tbaa !69
  %119 = load i32, i32* %k135, align 4, !tbaa !64
  %120 = load i32, i32* %n136, align 8, !tbaa !71
  %121 = load double*, double** %_M_start.i18.i331, align 8, !tbaa !51
  %122 = load double*, double** %_M_start.i17.i332, align 8, !tbaa !51
  invoke void @adept_dgmm_objective(i32 %118, i32 %119, i32 %120, double* %115, double* %cond.i.i.i.i299519, double* %117, double* %add.ptr.i320, double* %121, double* %add.ptr10.i327, double* %122, %struct.Wishart* nonnull byval(%struct.Wishart) align 8 %wishart141, double* undef, double* undef)
          to label %invoke.cont170 unwind label %lpad169

invoke.cont170:                                   ; preds = %invoke.cont163
  %call171 = call i32 @gettimeofday(%struct.timeval* nonnull %end167, i8* null) #38
  %123 = load i64, i64* %tv_sec.i335, align 8, !tbaa !44
  %124 = load i64, i64* %tv_sec1.i336, align 8, !tbaa !44
  %sub.i337 = sub nsw i64 %123, %124
  %conv.i338 = sitofp i64 %sub.i337 to double
  %125 = load i64, i64* %tv_usec.i339, align 8, !tbaa !46
  %126 = load i64, i64* %tv_usec2.i340, align 8, !tbaa !46
  %sub3.i341 = sub nsw i64 %125, %126
  %conv4.i342 = sitofp i64 %sub3.i341 to double
  %mul.i343 = fmul fast double %conv4.i342, 0x3EB0C6F7A0B5ED8D
  %add.i344 = fadd fast double %mul.i343, %conv.i338
  %conv5.i345 = fptrunc double %add.i344 to float
  %conv173 = fpext float %conv5.i345 to double
  %call175 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([22 x i8], [22 x i8]* @.str.30, i64 0, i64 0), double %conv173)
  br label %for.body180

try.cont.thread:                                  ; preds = %for.body180
  %putchar44 = call i32 @putchar(i32 10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #38
  br label %if.then.i.i.i.i372

ehcleanup128:                                     ; preds = %lpad98.loopexit, %lpad98.loopexit.split-lp, %lpad103, %if.then.i.i.i.i282, %ehcleanup91
  %.pn33.pn = phi { i8*, i32 } [ %.pn31, %ehcleanup91 ], [ %106, %lpad103 ], [ %106, %if.then.i.i.i.i282 ], [ %lpad.loopexit, %lpad98.loopexit ], [ %lpad.loopexit.split-lp, %lpad98.loopexit.split-lp ]
  %127 = load double*, double** %_M_start.i17.i, align 8, !tbaa !51
  %tobool.not.i.i.i.i347 = icmp eq double* %127, null
  br i1 %tobool.not.i.i.i.i347, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i351, label %if.then.i.i.i.i348

if.then.i.i.i.i348:                               ; preds = %ehcleanup128
  %128 = bitcast double* %127 to i8*
  call void @_ZdlPv(i8* nonnull %128) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i351

_ZNSt6vectorIdSaIdEED2Ev.exit.i351:               ; preds = %if.then.i.i.i.i348, %ehcleanup128
  %129 = load double*, double** %_M_start.i18.i, align 8, !tbaa !51
  %tobool.not.i.i.i2.i350 = icmp eq double* %129, null
  br i1 %tobool.not.i.i.i2.i350, label %_ZNSt6vectorIdSaIdEED2Ev.exit4.i355, label %if.then.i.i.i3.i352

if.then.i.i.i3.i352:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i351
  %130 = bitcast double* %129 to i8*
  call void @_ZdlPv(i8* nonnull %130) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit4.i355

_ZNSt6vectorIdSaIdEED2Ev.exit4.i355:              ; preds = %if.then.i.i.i3.i352, %_ZNSt6vectorIdSaIdEED2Ev.exit.i351
  %131 = load double*, double** %_M_start.i21.i, align 8, !tbaa !51
  %tobool.not.i.i.i6.i354 = icmp eq double* %131, null
  br i1 %tobool.not.i.i.i6.i354, label %_ZNSt6vectorIdSaIdEED2Ev.exit8.i359, label %if.then.i.i.i7.i356

if.then.i.i.i7.i356:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit4.i355
  %132 = bitcast double* %131 to i8*
  call void @_ZdlPv(i8* nonnull %132) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit8.i359

_ZNSt6vectorIdSaIdEED2Ev.exit8.i359:              ; preds = %if.then.i.i.i7.i356, %_ZNSt6vectorIdSaIdEED2Ev.exit4.i355
  %133 = load double*, double** %_M_start.i30.i, align 8, !tbaa !51
  %tobool.not.i.i.i10.i358 = icmp eq double* %133, null
  br i1 %tobool.not.i.i.i10.i358, label %_ZN8GMMInputD2Ev.exit361, label %if.then.i.i.i11.i360

if.then.i.i.i11.i360:                             ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit8.i359
  %134 = bitcast double* %133 to i8*
  call void @_ZdlPv(i8* nonnull %134) #38
  br label %_ZN8GMMInputD2Ev.exit361

_ZN8GMMInputD2Ev.exit361:                         ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit8.i359, %if.then.i.i.i11.i360
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %35) #38
  br label %ehcleanup279

lpad132:                                          ; preds = %_ZN8GMMInputD2Ev.exit272
  %135 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup147

lpad144:                                          ; preds = %invoke.cont133
  %136 = landingpad { i8*, i32 }
          cleanup
  %137 = load i8*, i8** %_M_p.i.i.i.i287, align 8, !tbaa !17
  %cmp.i.i.i364 = icmp eq i8* %137, %arraydecay.i.i.i.i288
  br i1 %cmp.i.i.i364, label %ehcleanup147, label %if.then.i.i365

if.then.i.i365:                                   ; preds = %lpad144
  call void @_ZdlPv(i8* %137) #38
  br label %ehcleanup147

ehcleanup147:                                     ; preds = %if.then.i.i365, %lpad144, %lpad132
  %.pn36 = phi { i8*, i32 } [ %135, %lpad132 ], [ %136, %lpad144 ], [ %136, %if.then.i.i365 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #38
  br label %ehcleanup207

lpad162.loopexit:                                 ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i298
  %lpad.loopexit529 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup207

lpad162.loopexit.split-lp:                        ; preds = %if.then.i.i294
  %lpad.loopexit.split-lp530 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup207

lpad169:                                          ; preds = %invoke.cont163
  %138 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast (i8** @_ZTISt9bad_alloc to i8*)
  %139 = extractvalue { i8*, i32 } %138, 0
  %140 = extractvalue { i8*, i32 } %138, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #38
  %141 = call i32 @llvm.eh.typeid.for(i8* bitcast (i8** @_ZTISt9bad_alloc to i8*)) #38
  %matches = icmp eq i32 %140, %141
  br i1 %matches, label %catch, label %ehcleanup204

for.body180:                                      ; preds = %invoke.cont170, %for.body180
  %indvars.iv732 = phi i64 [ 0, %invoke.cont170 ], [ %indvars.iv.next733, %for.body180 ]
  %add.ptr.i369 = getelementptr inbounds double, double* %cond.i.i.i.i299519, i64 %indvars.iv732
  %142 = load double, double* %add.ptr.i369, align 8, !tbaa !70
  %call186 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), double %142)
  %indvars.iv.next733 = add nuw nsw i64 %indvars.iv732, 1
  %exitcond734.not = icmp eq i64 %indvars.iv.next733, 5
  br i1 %exitcond734.not, label %try.cont.thread, label %for.body180, !llvm.loop !73

catch:                                            ; preds = %lpad169
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #38
  %143 = call i8* @__cxa_get_exception_ptr(i8* %139) #38
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %49, align 8, !tbaa !74
  %144 = call i8* @__cxa_begin_catch(i8* %139) #38
  %puts38 = call i32 @puts(i8* nonnull dereferenceable(1) getelementptr inbounds ([29 x i8], [29 x i8]* @str.1, i64 0, i64 0))
  call void @_ZNSt9bad_allocD1Ev(%"class.std::bad_alloc"* nonnull dereferenceable(8) %0) #38
  invoke void @__cxa_end_catch()
          to label %try.cont unwind label %lpad199

try.cont:                                         ; preds = %catch
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #38
  %tobool.not.i.i.i.i371 = icmp eq double* %cond.i.i.i.i299519, null
  br i1 %tobool.not.i.i.i.i371, label %_ZN9GMMOutputD2Ev.exit374, label %if.then.i.i.i.i372

if.then.i.i.i.i372:                               ; preds = %try.cont.thread, %try.cont
  %145 = bitcast double* %cond.i.i.i.i299519 to i8*
  call void @_ZdlPv(i8* nonnull %145) #38
  br label %_ZN9GMMOutputD2Ev.exit374

_ZN9GMMOutputD2Ev.exit374:                        ; preds = %try.cont, %if.then.i.i.i.i372
  %146 = load double*, double** %_M_start.i17.i332, align 8, !tbaa !51
  %tobool.not.i.i.i.i376 = icmp eq double* %146, null
  br i1 %tobool.not.i.i.i.i376, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i380, label %if.then.i.i.i.i377

if.then.i.i.i.i377:                               ; preds = %_ZN9GMMOutputD2Ev.exit374
  %147 = bitcast double* %146 to i8*
  call void @_ZdlPv(i8* nonnull %147) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i380

_ZNSt6vectorIdSaIdEED2Ev.exit.i380:               ; preds = %if.then.i.i.i.i377, %_ZN9GMMOutputD2Ev.exit374
  %148 = load double*, double** %_M_start.i18.i331, align 8, !tbaa !51
  %tobool.not.i.i.i2.i379 = icmp eq double* %148, null
  br i1 %tobool.not.i.i.i2.i379, label %_ZNSt6vectorIdSaIdEED2Ev.exit4.i384, label %if.then.i.i.i3.i381

if.then.i.i.i3.i381:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i380
  %149 = bitcast double* %148 to i8*
  call void @_ZdlPv(i8* nonnull %149) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit4.i384

_ZNSt6vectorIdSaIdEED2Ev.exit4.i384:              ; preds = %if.then.i.i.i3.i381, %_ZNSt6vectorIdSaIdEED2Ev.exit.i380
  %150 = load double*, double** %_M_start.i21.i322, align 8, !tbaa !51
  %tobool.not.i.i.i6.i383 = icmp eq double* %150, null
  br i1 %tobool.not.i.i.i6.i383, label %_ZNSt6vectorIdSaIdEED2Ev.exit8.i388, label %if.then.i.i.i7.i385

if.then.i.i.i7.i385:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit4.i384
  %151 = bitcast double* %150 to i8*
  call void @_ZdlPv(i8* nonnull %151) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit8.i388

_ZNSt6vectorIdSaIdEED2Ev.exit8.i388:              ; preds = %if.then.i.i.i7.i385, %_ZNSt6vectorIdSaIdEED2Ev.exit4.i384
  %152 = load double*, double** %_M_start.i30.i315, align 8, !tbaa !51
  %tobool.not.i.i.i10.i387 = icmp eq double* %152, null
  br i1 %tobool.not.i.i.i10.i387, label %_ZN8GMMInputD2Ev.exit390, label %if.then.i.i.i11.i389

if.then.i.i.i11.i389:                             ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit8.i388
  %153 = bitcast double* %152 to i8*
  call void @_ZdlPv(i8* nonnull %153) #38
  br label %_ZN8GMMInputD2Ev.exit390

_ZN8GMMInputD2Ev.exit390:                         ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit8.i388, %if.then.i.i.i11.i389
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %42) #38
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %50) #38
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(96) %51, i8 0, i64 96, i1 false) #38
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %52) #38
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp210, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path)
          to label %invoke.cont212 unwind label %lpad211

invoke.cont212:                                   ; preds = %_ZN8GMMInputD2Ev.exit390
  invoke void @_Z17read_gmm_instanceRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiS7_S7_RSt6vectorIdSaIdEESB_SB_SB_R7Wishartb(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp210, i32* nonnull %d213, i32* nonnull %k214, i32* nonnull %n215, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %alphas.i391, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %means217, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %icf218, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %x219, %struct.Wishart* nonnull align 8 dereferenceable(16) %wishart220, i1 zeroext %13)
          to label %invoke.cont224 unwind label %lpad223

invoke.cont224:                                   ; preds = %invoke.cont212
  %154 = load i8*, i8** %_M_p.i.i.i.i392, align 8, !tbaa !17
  %cmp.i.i.i394 = icmp eq i8* %154, %arraydecay.i.i.i.i393
  br i1 %cmp.i.i.i394, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit397, label %if.then.i.i395

if.then.i.i395:                                   ; preds = %invoke.cont224
  call void @_ZdlPv(i8* %154) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit397

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit397: ; preds = %invoke.cont224, %if.then.i.i395
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #38
  %155 = load i32, i32* %k214, align 4, !tbaa !64
  %156 = load i32, i32* %d213, align 8, !tbaa !69
  %add230 = add nsw i32 %156, 1
  %mul231 = mul nsw i32 %add230, %155
  %add233 = add nsw i32 %156, 2
  %mul234 = mul nsw i32 %mul231, %add233
  %div235 = sdiv i32 %mul234, 2
  %conv239 = sext i32 %div235 to i64
  %cmp.i.i398 = icmp slt i32 %mul234, -1
  br i1 %cmp.i.i398, label %if.then.i.i399, label %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i401

if.then.i.i399:                                   ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit397
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.123, i64 0, i64 0)) #40
          to label %.noexc414 unwind label %lpad241.loopexit.split-lp

.noexc414:                                        ; preds = %if.then.i.i399
  unreachable

_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i401: ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit397
  %mul234.off = add i32 %mul234, 1
  %157 = icmp ult i32 %mul234.off, 3
  br i1 %157, label %invoke.cont242, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i403

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i403: ; preds = %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i401
  %mul.i.i.i.i.i.i402 = shl nuw nsw i64 %conv239, 3
  %call2.i.i.i.i1.i.i416 = invoke noalias nonnull i8* @_Znwm(i64 %mul.i.i.i.i.i.i402) #42
          to label %for.body.i.i.preheader.i.i.i.i.i410 unwind label %lpad241.loopexit

for.body.i.i.preheader.i.i.i.i.i410:              ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i403
  %158 = bitcast i8* %call2.i.i.i.i1.i.i416 to double*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i416, i8 0, i64 %mul.i.i.i.i.i.i402, i1 false)
  br label %invoke.cont242

invoke.cont242:                                   ; preds = %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i401, %for.body.i.i.preheader.i.i.i.i.i410
  %cond.i.i.i.i404526 = phi double* [ %158, %for.body.i.i.preheader.i.i.i.i.i410 ], [ null, %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i401 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #38
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #38
  %call247 = call i32 @gettimeofday(%struct.timeval* nonnull %start245, i8* null) #38
  %159 = load double*, double** %_M_finish.i29.i420, align 8, !tbaa !49
  %160 = load double*, double** %_M_start.i30.i421, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i31.i422 = ptrtoint double* %159 to i64
  %sub.ptr.rhs.cast.i32.i423 = ptrtoint double* %160 to i64
  %sub.ptr.sub.i33.i424 = sub i64 %sub.ptr.lhs.cast.i31.i422, %sub.ptr.rhs.cast.i32.i423
  %sub.ptr.div.i34.i425 = ashr exact i64 %sub.ptr.sub.i33.i424, 3
  %add.ptr.i426 = getelementptr inbounds double, double* %cond.i.i.i.i404526, i64 %sub.ptr.div.i34.i425
  %161 = load double*, double** %_M_finish.i.i427, align 8, !tbaa !49
  %162 = load double*, double** %_M_start.i21.i428, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i.i429 = ptrtoint double* %161 to i64
  %sub.ptr.rhs.cast.i.i430 = ptrtoint double* %162 to i64
  %sub.ptr.sub.i.i431 = sub i64 %sub.ptr.lhs.cast.i.i429, %sub.ptr.rhs.cast.i.i430
  %sub.ptr.div.i.i432 = ashr exact i64 %sub.ptr.sub.i.i431, 3
  %add.ptr10.i433 = getelementptr inbounds double, double* %add.ptr.i426, i64 %sub.ptr.div.i.i432
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #38
  store double 1.000000e+00, double* %errb.i418, align 8, !tbaa !70
  %163 = load i32, i32* %d213, align 8, !tbaa !69
  %164 = load i32, i32* %k214, align 4, !tbaa !64
  %165 = load i32, i32* %n215, align 8, !tbaa !71
  %166 = load double*, double** %_M_start.i18.i437, align 8, !tbaa !51
  %167 = load double*, double** %_M_start.i17.i438, align 8, !tbaa !51
  call void @dgmm_objective(i32 %163, i32 %164, i32 %165, double* %160, double* %cond.i.i.i.i404526, double* %162, double* %add.ptr.i426, double* %166, double* %add.ptr10.i433, double* %167, %struct.Wishart* nonnull byval(%struct.Wishart) align 8 %wishart220, double* undef, double* nonnull %errb.i418) #38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #38
  %call250 = call i32 @gettimeofday(%struct.timeval* nonnull %end246, i8* null) #38
  %168 = load i64, i64* %tv_sec.i440, align 8, !tbaa !44
  %169 = load i64, i64* %tv_sec1.i441, align 8, !tbaa !44
  %sub.i442 = sub nsw i64 %168, %169
  %conv.i443 = sitofp i64 %sub.i442 to double
  %170 = load i64, i64* %tv_usec.i444, align 8, !tbaa !46
  %171 = load i64, i64* %tv_usec2.i445, align 8, !tbaa !46
  %sub3.i446 = sub nsw i64 %170, %171
  %conv4.i447 = sitofp i64 %sub3.i446 to double
  %mul.i448 = fmul fast double %conv4.i447, 0x3EB0C6F7A0B5ED8D
  %add.i449 = fadd fast double %mul.i448, %conv.i443
  %conv5.i450 = fptrunc double %add.i449 to float
  %conv252 = fpext float %conv5.i450 to double
  %call254 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0), double %conv252)
  br label %for.body259

_ZN9GMMOutputD2Ev.exit455:                        ; preds = %for.body259
  %putchar43 = call i32 @putchar(i32 10)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #38
  %172 = bitcast double* %cond.i.i.i.i404526 to i8*
  call void @_ZdlPv(i8* nonnull %172) #38
  %173 = load double*, double** %_M_start.i17.i438, align 8, !tbaa !51
  %tobool.not.i.i.i.i237 = icmp eq double* %173, null
  br i1 %tobool.not.i.i.i.i237, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i241, label %if.then.i.i.i.i238

if.then.i.i.i.i238:                               ; preds = %_ZN9GMMOutputD2Ev.exit455
  %174 = bitcast double* %173 to i8*
  call void @_ZdlPv(i8* nonnull %174) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i241

_ZNSt6vectorIdSaIdEED2Ev.exit.i241:               ; preds = %if.then.i.i.i.i238, %_ZN9GMMOutputD2Ev.exit455
  %175 = load double*, double** %_M_start.i18.i437, align 8, !tbaa !51
  %tobool.not.i.i.i2.i240 = icmp eq double* %175, null
  br i1 %tobool.not.i.i.i2.i240, label %_ZNSt6vectorIdSaIdEED2Ev.exit4.i245, label %if.then.i.i.i3.i242

if.then.i.i.i3.i242:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i241
  %176 = bitcast double* %175 to i8*
  call void @_ZdlPv(i8* nonnull %176) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit4.i245

_ZNSt6vectorIdSaIdEED2Ev.exit4.i245:              ; preds = %if.then.i.i.i3.i242, %_ZNSt6vectorIdSaIdEED2Ev.exit.i241
  %177 = load double*, double** %_M_start.i21.i428, align 8, !tbaa !51
  %tobool.not.i.i.i6.i244 = icmp eq double* %177, null
  br i1 %tobool.not.i.i.i6.i244, label %_ZNSt6vectorIdSaIdEED2Ev.exit8.i249, label %if.then.i.i.i7.i246

if.then.i.i.i7.i246:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit4.i245
  %178 = bitcast double* %177 to i8*
  call void @_ZdlPv(i8* nonnull %178) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit8.i249

_ZNSt6vectorIdSaIdEED2Ev.exit8.i249:              ; preds = %if.then.i.i.i7.i246, %_ZNSt6vectorIdSaIdEED2Ev.exit4.i245
  %179 = load double*, double** %_M_start.i30.i421, align 8, !tbaa !51
  %tobool.not.i.i.i10.i248 = icmp eq double* %179, null
  br i1 %tobool.not.i.i.i10.i248, label %_ZN8GMMInputD2Ev.exit251, label %if.then.i.i.i11.i250

if.then.i.i.i11.i250:                             ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit8.i249
  %180 = bitcast double* %179 to i8*
  call void @_ZdlPv(i8* nonnull %180) #38
  br label %_ZN8GMMInputD2Ev.exit251

_ZN8GMMInputD2Ev.exit251:                         ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit8.i249, %if.then.i.i.i11.i250
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %50) #38
  br label %cleanup

lpad199:                                          ; preds = %catch
  %181 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #38
  br label %ehcleanup204

ehcleanup204:                                     ; preds = %lpad169, %lpad199
  %.pn = phi { i8*, i32 } [ %181, %lpad199 ], [ %138, %lpad169 ]
  %tobool.not.i.i.i.i225 = icmp eq double* %cond.i.i.i.i299519, null
  br i1 %tobool.not.i.i.i.i225, label %ehcleanup207, label %if.then.i.i.i.i226

if.then.i.i.i.i226:                               ; preds = %ehcleanup204
  %182 = bitcast double* %cond.i.i.i.i299519 to i8*
  call void @_ZdlPv(i8* nonnull %182) #38
  br label %ehcleanup207

ehcleanup207:                                     ; preds = %lpad162.loopexit, %lpad162.loopexit.split-lp, %ehcleanup204, %if.then.i.i.i.i226, %ehcleanup147
  %.pn36.pn = phi { i8*, i32 } [ %.pn36, %ehcleanup147 ], [ %.pn, %ehcleanup204 ], [ %.pn, %if.then.i.i.i.i226 ], [ %lpad.loopexit529, %lpad162.loopexit ], [ %lpad.loopexit.split-lp530, %lpad162.loopexit.split-lp ]
  %183 = load double*, double** %_M_start.i17.i332, align 8, !tbaa !51
  %tobool.not.i.i.i.i180 = icmp eq double* %183, null
  br i1 %tobool.not.i.i.i.i180, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i184, label %if.then.i.i.i.i181

if.then.i.i.i.i181:                               ; preds = %ehcleanup207
  %184 = bitcast double* %183 to i8*
  call void @_ZdlPv(i8* nonnull %184) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i184

_ZNSt6vectorIdSaIdEED2Ev.exit.i184:               ; preds = %if.then.i.i.i.i181, %ehcleanup207
  %185 = load double*, double** %_M_start.i18.i331, align 8, !tbaa !51
  %tobool.not.i.i.i2.i183 = icmp eq double* %185, null
  br i1 %tobool.not.i.i.i2.i183, label %_ZNSt6vectorIdSaIdEED2Ev.exit4.i188, label %if.then.i.i.i3.i185

if.then.i.i.i3.i185:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i184
  %186 = bitcast double* %185 to i8*
  call void @_ZdlPv(i8* nonnull %186) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit4.i188

_ZNSt6vectorIdSaIdEED2Ev.exit4.i188:              ; preds = %if.then.i.i.i3.i185, %_ZNSt6vectorIdSaIdEED2Ev.exit.i184
  %187 = load double*, double** %_M_start.i21.i322, align 8, !tbaa !51
  %tobool.not.i.i.i6.i187 = icmp eq double* %187, null
  br i1 %tobool.not.i.i.i6.i187, label %_ZNSt6vectorIdSaIdEED2Ev.exit8.i192, label %if.then.i.i.i7.i189

if.then.i.i.i7.i189:                              ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit4.i188
  %188 = bitcast double* %187 to i8*
  call void @_ZdlPv(i8* nonnull %188) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit8.i192

_ZNSt6vectorIdSaIdEED2Ev.exit8.i192:              ; preds = %if.then.i.i.i7.i189, %_ZNSt6vectorIdSaIdEED2Ev.exit4.i188
  %189 = load double*, double** %_M_start.i30.i315, align 8, !tbaa !51
  %tobool.not.i.i.i10.i191 = icmp eq double* %189, null
  br i1 %tobool.not.i.i.i10.i191, label %_ZN8GMMInputD2Ev.exit194, label %if.then.i.i.i11.i193

if.then.i.i.i11.i193:                             ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit8.i192
  %190 = bitcast double* %189 to i8*
  call void @_ZdlPv(i8* nonnull %190) #38
  br label %_ZN8GMMInputD2Ev.exit194

_ZN8GMMInputD2Ev.exit194:                         ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit8.i192, %if.then.i.i.i11.i193
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %42) #38
  br label %ehcleanup279

lpad211:                                          ; preds = %_ZN8GMMInputD2Ev.exit390
  %191 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup226

lpad223:                                          ; preds = %invoke.cont212
  %192 = landingpad { i8*, i32 }
          cleanup
  %193 = load i8*, i8** %_M_p.i.i.i.i392, align 8, !tbaa !17
  %cmp.i.i.i169 = icmp eq i8* %193, %arraydecay.i.i.i.i393
  br i1 %cmp.i.i.i169, label %ehcleanup226, label %if.then.i.i170

if.then.i.i170:                                   ; preds = %lpad223
  call void @_ZdlPv(i8* %193) #38
  br label %ehcleanup226

ehcleanup226:                                     ; preds = %if.then.i.i170, %lpad223, %lpad211
  %.pn39 = phi { i8*, i32 } [ %191, %lpad211 ], [ %192, %lpad223 ], [ %192, %if.then.i.i170 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %52) #38
  br label %ehcleanup277

lpad241.loopexit:                                 ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i.i.i.i403
  %lpad.loopexit532 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup277

lpad241.loopexit.split-lp:                        ; preds = %if.then.i.i399
  %lpad.loopexit.split-lp533 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup277

for.body259:                                      ; preds = %invoke.cont242, %for.body259
  %indvars.iv735 = phi i64 [ 0, %invoke.cont242 ], [ %indvars.iv.next736, %for.body259 ]
  %add.ptr.i = getelementptr inbounds double, double* %cond.i.i.i.i404526, i64 %indvars.iv735
  %194 = load double, double* %add.ptr.i, align 8, !tbaa !70
  %call265 = call i32 (i8*, ...) @printf(i8* nonnull dereferenceable(1) getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), double %194)
  %indvars.iv.next736 = add nuw nsw i64 %indvars.iv735, 1
  %exitcond737.not = icmp eq i64 %indvars.iv.next736, 5
  br i1 %exitcond737.not, label %_ZN9GMMOutputD2Ev.exit455, label %for.body259, !llvm.loop !76

cleanup:                                          ; preds = %invoke.cont65, %lor.lhs.false, %lor.lhs.false71, %lor.lhs.false74, %lor.lhs.false77, %_ZN8GMMInputD2Ev.exit251
  %195 = load i8*, i8** %_M_p.i6.i.i.i.i198, align 8, !tbaa !17
  %cmp.i.i.i156 = icmp eq i8* %195, %34
  br i1 %cmp.i.i.i156, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit159, label %if.then.i.i157

if.then.i.i157:                                   ; preds = %cleanup
  call void @_ZdlPv(i8* %195) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit159

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit159: ; preds = %cleanup, %if.then.i.i157
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #38
  %incdec.ptr.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__begin1.sroa.0.0705, i64 1
  %cmp.i129.not = icmp eq %"class.std::__cxx11::basic_string"* %incdec.ptr.i, %29
  br i1 %cmp.i129.not, label %for.cond.cleanup, label %for.body, !llvm.loop !77

ehcleanup277:                                     ; preds = %lpad241.loopexit, %lpad241.loopexit.split-lp, %ehcleanup226
  %.pn41 = phi { i8*, i32 } [ %.pn39, %ehcleanup226 ], [ %lpad.loopexit532, %lpad241.loopexit ], [ %lpad.loopexit.split-lp533, %lpad241.loopexit.split-lp ]
  %196 = load double*, double** %_M_start.i17.i438, align 8, !tbaa !51
  %tobool.not.i.i.i.i = icmp eq double* %196, null
  br i1 %tobool.not.i.i.i.i, label %_ZNSt6vectorIdSaIdEED2Ev.exit.i, label %if.then.i.i.i.i103

if.then.i.i.i.i103:                               ; preds = %ehcleanup277
  %197 = bitcast double* %196 to i8*
  call void @_ZdlPv(i8* nonnull %197) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit.i

_ZNSt6vectorIdSaIdEED2Ev.exit.i:                  ; preds = %if.then.i.i.i.i103, %ehcleanup277
  %198 = load double*, double** %_M_start.i18.i437, align 8, !tbaa !51
  %tobool.not.i.i.i2.i = icmp eq double* %198, null
  br i1 %tobool.not.i.i.i2.i, label %_ZNSt6vectorIdSaIdEED2Ev.exit4.i, label %if.then.i.i.i3.i

if.then.i.i.i3.i:                                 ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit.i
  %199 = bitcast double* %198 to i8*
  call void @_ZdlPv(i8* nonnull %199) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit4.i

_ZNSt6vectorIdSaIdEED2Ev.exit4.i:                 ; preds = %if.then.i.i.i3.i, %_ZNSt6vectorIdSaIdEED2Ev.exit.i
  %200 = load double*, double** %_M_start.i21.i428, align 8, !tbaa !51
  %tobool.not.i.i.i6.i = icmp eq double* %200, null
  br i1 %tobool.not.i.i.i6.i, label %_ZNSt6vectorIdSaIdEED2Ev.exit8.i, label %if.then.i.i.i7.i

if.then.i.i.i7.i:                                 ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit4.i
  %201 = bitcast double* %200 to i8*
  call void @_ZdlPv(i8* nonnull %201) #38
  br label %_ZNSt6vectorIdSaIdEED2Ev.exit8.i

_ZNSt6vectorIdSaIdEED2Ev.exit8.i:                 ; preds = %if.then.i.i.i7.i, %_ZNSt6vectorIdSaIdEED2Ev.exit4.i
  %202 = load double*, double** %_M_start.i30.i421, align 8, !tbaa !51
  %tobool.not.i.i.i10.i = icmp eq double* %202, null
  br i1 %tobool.not.i.i.i10.i, label %_ZN8GMMInputD2Ev.exit, label %if.then.i.i.i11.i

if.then.i.i.i11.i:                                ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit8.i
  %203 = bitcast double* %202 to i8*
  call void @_ZdlPv(i8* nonnull %203) #38
  br label %_ZN8GMMInputD2Ev.exit

_ZN8GMMInputD2Ev.exit:                            ; preds = %_ZNSt6vectorIdSaIdEED2Ev.exit8.i, %if.then.i.i.i11.i
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %50) #38
  br label %ehcleanup279

ehcleanup279:                                     ; preds = %_ZN8GMMInputD2Ev.exit, %_ZN8GMMInputD2Ev.exit194, %_ZN8GMMInputD2Ev.exit361
  %.pn33.pn.pn = phi { i8*, i32 } [ %.pn33.pn, %_ZN8GMMInputD2Ev.exit361 ], [ %.pn41, %_ZN8GMMInputD2Ev.exit ], [ %.pn36.pn, %_ZN8GMMInputD2Ev.exit194 ]
  %204 = load i8*, i8** %_M_p.i6.i.i.i.i198, align 8, !tbaa !17
  %cmp.i.i.i76 = icmp eq i8* %204, %34
  br i1 %cmp.i.i.i76, label %ehcleanup281, label %if.then.i.i77

if.then.i.i77:                                    ; preds = %ehcleanup279
  call void @_ZdlPv(i8* %204) #38
  br label %ehcleanup281

ehcleanup281:                                     ; preds = %if.then.i.i77, %ehcleanup279, %lpad64
  %.pn708 = phi { i8*, i32 } [ %74, %lpad64 ], [ %.pn33.pn.pn, %ehcleanup279 ], [ %.pn33.pn.pn, %if.then.i.i77 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #38
  br label %ehcleanup291

ehcleanup291:                                     ; preds = %lpad54, %if.then.i.i176, %lpad45, %if.then.i.i163, %lpad36, %if.then.i.i151, %ehcleanup281
  %.pn708.pn = phi { i8*, i32 } [ %.pn708, %ehcleanup281 ], [ %61, %if.then.i.i151 ], [ %61, %lpad36 ], [ %63, %if.then.i.i163 ], [ %63, %lpad45 ], [ %65, %if.then.i.i176 ], [ %65, %lpad54 ]
  %_M_start.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %paths, i64 0, i32 0, i32 0, i32 0, i32 0
  %205 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_start.i, align 8, !tbaa !62
  %_M_finish.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %paths, i64 0, i32 0, i32 0, i32 0, i32 1
  %206 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish.i, align 8, !tbaa !32
  %cmp.not3.i.i.i.i = icmp eq %"class.std::__cxx11::basic_string"* %205, %206
  br i1 %cmp.not3.i.i.i.i, label %invoke.cont.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %ehcleanup291, %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i
  %__first.addr.04.i.i.i.i = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr.i.i.i.i, %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i ], [ %205, %ehcleanup291 ]
  %_M_p.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i.i.i, i64 0, i32 0, i32 0
  %207 = load i8*, i8** %_M_p.i.i.i.i.i.i.i.i.i, align 8, !tbaa !17
  %208 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i.i.i, i64 0, i32 2
  %arraydecay.i.i.i.i.i.i.i.i.i = bitcast %union.anon* %208 to i8*
  %cmp.i.i.i.i.i.i.i.i = icmp eq i8* %207, %arraydecay.i.i.i.i.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i.i, label %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i, label %if.then.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i:                            ; preds = %for.body.i.i.i.i
  call void @_ZdlPv(i8* %207) #38
  br label %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i

_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i: ; preds = %if.then.i.i.i.i.i.i.i, %for.body.i.i.i.i
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.04.i.i.i.i, i64 1
  %cmp.not.i.i.i.i = icmp eq %"class.std::__cxx11::basic_string"* %incdec.ptr.i.i.i.i, %206
  br i1 %cmp.not.i.i.i.i, label %invoke.cont.loopexit.i, label %for.body.i.i.i.i, !llvm.loop !63

invoke.cont.loopexit.i:                           ; preds = %_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_.exit.i.i.i.i
  %.pre.i = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_start.i, align 8, !tbaa !62
  br label %invoke.cont.i

invoke.cont.i:                                    ; preds = %invoke.cont.loopexit.i, %ehcleanup291
  %209 = phi %"class.std::__cxx11::basic_string"* [ %.pre.i, %invoke.cont.loopexit.i ], [ %205, %ehcleanup291 ]
  %tobool.not.i.i.i = icmp eq %"class.std::__cxx11::basic_string"* %209, null
  br i1 %tobool.not.i.i.i, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %invoke.cont.i
  %210 = bitcast %"class.std::__cxx11::basic_string"* %209 to i8*
  call void @_ZdlPv(i8* nonnull %210) #38
  br label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit

_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev.exit: ; preds = %invoke.cont.i, %if.then.i.i.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #38
  resume { i8*, i32 } %.pn708.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, i8* %__lhs, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__rhs) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %call.i = tail call i64 @strlen(i8* nonnull dereferenceable(1) %__lhs) #38
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !14
  %_M_string_length.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 0, i64* %_M_string_length.i.i.i, align 8, !tbaa !19
  %.cast.i = bitcast %union.anon* %0 to i8*
  store i8 0, i8* %.cast.i, align 8, !tbaa !21
  %_M_string_length.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__rhs, i64 0, i32 1
  %2 = load i64, i64* %_M_string_length.i, align 8, !tbaa !19
  %add = add i64 %2, %call.i
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i64 %add)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %3 = load i64, i64* %_M_string_length.i.i.i, align 8, !tbaa !19
  %sub3.i.i = sub i64 4611686018427387903, %3
  %cmp.i.i = icmp ult i64 %sub3.i.i, %call.i
  br i1 %cmp.i.i, label %if.then.i.i8, label %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i

if.then.i.i8:                                     ; preds = %invoke.cont
  invoke void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i64 0, i64 0)) #40
          to label %.noexc unwind label %lpad

.noexc:                                           ; preds = %if.then.i.i8
  unreachable

_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i: ; preds = %invoke.cont
  %call.i910 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* %__lhs, i64 %call.i)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i
  %_M_p.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__rhs, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %_M_p.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %_M_string_length.i, align 8, !tbaa !19
  %call3.i6 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* %4, i64 %5)
          to label %nrvo.skipdtor unwind label %lpad

lpad:                                             ; preds = %_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc.exit.i, %if.then.i.i8, %invoke.cont2, %entry
  %6 = landingpad { i8*, i32 }
          cleanup
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %7, %.cast.i
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %lpad
  tail call void @_ZdlPv(i8* %7) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %lpad, %if.then.i.i
  resume { i8*, i32 } %6

nrvo.skipdtor:                                    ; preds = %invoke.cont2
  ret void
}

; Function Attrs: nofree nounwind
declare dso_local noundef i32 @gettimeofday(%struct.timeval* nocapture noundef, i8* nocapture noundef) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32 @llvm.eh.typeid.for(i8*) #13

declare dso_local i8* @__cxa_get_exception_ptr(i8*) local_unnamed_addr

declare dso_local i8* @__cxa_begin_catch(i8*) local_unnamed_addr

; Function Attrs: nounwind
declare dso_local void @_ZNSt9bad_allocD1Ev(%"class.std::bad_alloc"* nonnull dereferenceable(8)) unnamed_addr #7

declare dso_local void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) local_unnamed_addr #14 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #38
  tail call void @_ZSt9terminatev() #41
  unreachable
}

declare dso_local void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: norecurse nounwind readonly uwtable willreturn mustprogress
define dso_local double @arr_max(i32 %n, double* nocapture readonly %x) local_unnamed_addr #9 {
entry:
  %0 = load double, double* %x, align 8, !tbaa !70
  %cmp9 = icmp sgt i32 %n, 1
  br i1 %cmp9, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  %1 = add nsw i64 %wide.trip.count, -1
  %min.iters.check = icmp ult i64 %1, 4
  br i1 %min.iters.check, label %for.body.preheader14, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader
  %n.vec = and i64 %1, -4
  %ind.end = or i64 %n.vec, 1
  %minmax.ident.splatinsert = insertelement <2 x double> poison, double %0, i32 0
  %minmax.ident.splat = shufflevector <2 x double> %minmax.ident.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %8, %vector.body ]
  %vec.phi12 = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %9, %vector.body ]
  %offset.idx = or i64 %index, 1
  %2 = getelementptr inbounds double, double* %x, i64 %offset.idx
  %3 = bitcast double* %2 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %3, align 8, !tbaa !70
  %4 = getelementptr inbounds double, double* %2, i64 2
  %5 = bitcast double* %4 to <2 x double>*
  %wide.load13 = load <2 x double>, <2 x double>* %5, align 8, !tbaa !70
  %6 = fcmp fast olt <2 x double> %vec.phi, %wide.load
  %7 = fcmp fast olt <2 x double> %vec.phi12, %wide.load13
  %8 = select <2 x i1> %6, <2 x double> %wide.load, <2 x double> %vec.phi
  %9 = select <2 x i1> %7, <2 x double> %wide.load13, <2 x double> %vec.phi12
  %index.next = add i64 %index, 4
  %10 = icmp eq i64 %index.next, %n.vec
  br i1 %10, label %middle.block, label %vector.body, !llvm.loop !78

middle.block:                                     ; preds = %vector.body
  %11 = call fast <2 x double> @llvm.maxnum.v2f64(<2 x double> %8, <2 x double> %9)
  %12 = call double @llvm.vector.reduce.fmax.v2f64(<2 x double> %11)
  %cmp.n = icmp eq i64 %1, %n.vec
  br i1 %cmp.n, label %for.end, label %for.body.preheader14

for.body.preheader14:                             ; preds = %for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ 1, %for.body.preheader ], [ %ind.end, %middle.block ]
  %m.011.ph = phi double [ %0, %for.body.preheader ], [ %12, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader14, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader14 ]
  %m.011 = phi double [ %m.1, %for.body ], [ %m.011.ph, %for.body.preheader14 ]
  %arrayidx1 = getelementptr inbounds double, double* %x, i64 %indvars.iv
  %13 = load double, double* %arrayidx1, align 8, !tbaa !70
  %cmp2 = fcmp fast olt double %m.011, %13
  %m.1 = select i1 %cmp2, double %13, double %m.011
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !80

for.end:                                          ; preds = %for.body, %middle.block, %entry
  %m.0.lcssa = phi double [ %0, %entry ], [ %12, %middle.block ], [ %m.1, %for.body ]
  ret double %m.0.lcssa
}

; Function Attrs: norecurse nounwind readonly uwtable willreturn mustprogress
define dso_local double @sqnorm(i32 %n, double* nocapture readonly %x) local_unnamed_addr #9 {
entry:
  %0 = load double, double* %x, align 8, !tbaa !70
  %mul = fmul fast double %0, %0
  %cmp10 = icmp sgt i32 %n, 1
  br i1 %cmp10, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  %1 = add nsw i64 %wide.trip.count, -1
  %min.iters.check = icmp ult i64 %1, 4
  br i1 %min.iters.check, label %for.body.preheader15, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader
  %n.vec = and i64 %1, -4
  %ind.end = or i64 %n.vec, 1
  %2 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul, i32 0
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %2, %vector.ph ], [ %9, %vector.body ]
  %vec.phi13 = phi <2 x double> [ zeroinitializer, %vector.ph ], [ %10, %vector.body ]
  %offset.idx = or i64 %index, 1
  %3 = getelementptr inbounds double, double* %x, i64 %offset.idx
  %4 = bitcast double* %3 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %4, align 8, !tbaa !70
  %5 = getelementptr inbounds double, double* %3, i64 2
  %6 = bitcast double* %5 to <2 x double>*
  %wide.load14 = load <2 x double>, <2 x double>* %6, align 8, !tbaa !70
  %7 = fmul fast <2 x double> %wide.load, %wide.load
  %8 = fmul fast <2 x double> %wide.load14, %wide.load14
  %9 = fadd fast <2 x double> %7, %vec.phi
  %10 = fadd fast <2 x double> %8, %vec.phi13
  %index.next = add i64 %index, 4
  %11 = icmp eq i64 %index.next, %n.vec
  br i1 %11, label %middle.block, label %vector.body, !llvm.loop !81

middle.block:                                     ; preds = %vector.body
  %bin.rdx = fadd fast <2 x double> %10, %9
  %12 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  %cmp.n = icmp eq i64 %1, %n.vec
  br i1 %cmp.n, label %for.end, label %for.body.preheader15

for.body.preheader15:                             ; preds = %for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ 1, %for.body.preheader ], [ %ind.end, %middle.block ]
  %res.012.ph = phi double [ %mul, %for.body.preheader ], [ %12, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader15, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader15 ]
  %res.012 = phi double [ %add, %for.body ], [ %res.012.ph, %for.body.preheader15 ]
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %indvars.iv
  %13 = load double, double* %arrayidx2, align 8, !tbaa !70
  %mul5 = fmul fast double %13, %13
  %add = fadd fast double %mul5, %res.012
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !82

for.end:                                          ; preds = %for.body, %middle.block, %entry
  %res.0.lcssa = phi double [ %mul, %entry ], [ %12, %middle.block ], [ %add, %for.body ]
  ret double %res.0.lcssa
}

; Function Attrs: nofree norecurse nounwind uwtable mustprogress
define dso_local void @subtract(i32 %d, double* nocapture readonly %x, double* nocapture readonly %y, double* nocapture %out) local_unnamed_addr #15 {
entry:
  %cmp6 = icmp sgt i32 %d, 0
  br i1 %cmp6, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %d to i64
  %min.iters.check = icmp ult i32 %d, 4
  br i1 %min.iters.check, label %for.body.preheader22, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.preheader
  %scevgep = getelementptr double, double* %out, i64 %wide.trip.count
  %scevgep11 = getelementptr double, double* %x, i64 %wide.trip.count
  %scevgep14 = getelementptr double, double* %y, i64 %wide.trip.count
  %bound0 = icmp ugt double* %scevgep11, %out
  %bound1 = icmp ugt double* %scevgep, %x
  %found.conflict = and i1 %bound0, %bound1
  %bound016 = icmp ugt double* %scevgep14, %out
  %bound117 = icmp ugt double* %scevgep, %y
  %found.conflict18 = and i1 %bound016, %bound117
  %conflict.rdx = or i1 %found.conflict, %found.conflict18
  br i1 %conflict.rdx, label %for.body.preheader22, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %0 = getelementptr inbounds double, double* %x, i64 %index
  %1 = bitcast double* %0 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %1, align 8, !tbaa !70, !alias.scope !83
  %2 = getelementptr inbounds double, double* %0, i64 2
  %3 = bitcast double* %2 to <2 x double>*
  %wide.load19 = load <2 x double>, <2 x double>* %3, align 8, !tbaa !70, !alias.scope !83
  %4 = getelementptr inbounds double, double* %y, i64 %index
  %5 = bitcast double* %4 to <2 x double>*
  %wide.load20 = load <2 x double>, <2 x double>* %5, align 8, !tbaa !70, !alias.scope !86
  %6 = getelementptr inbounds double, double* %4, i64 2
  %7 = bitcast double* %6 to <2 x double>*
  %wide.load21 = load <2 x double>, <2 x double>* %7, align 8, !tbaa !70, !alias.scope !86
  %8 = fsub fast <2 x double> %wide.load, %wide.load20
  %9 = fsub fast <2 x double> %wide.load19, %wide.load21
  %10 = getelementptr inbounds double, double* %out, i64 %index
  %11 = bitcast double* %10 to <2 x double>*
  store <2 x double> %8, <2 x double>* %11, align 8, !tbaa !70, !alias.scope !88, !noalias !90
  %12 = getelementptr inbounds double, double* %10, i64 2
  %13 = bitcast double* %12 to <2 x double>*
  store <2 x double> %9, <2 x double>* %13, align 8, !tbaa !70, !alias.scope !88, !noalias !90
  %index.next = add i64 %index, 4
  %14 = icmp eq i64 %index.next, %n.vec
  br i1 %14, label %middle.block, label %vector.body, !llvm.loop !91

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.end, label %for.body.preheader22

for.body.preheader22:                             ; preds = %vector.memcheck, %for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.preheader ], [ %n.vec, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader22, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader22 ]
  %arrayidx = getelementptr inbounds double, double* %x, i64 %indvars.iv
  %15 = load double, double* %arrayidx, align 8, !tbaa !70
  %arrayidx2 = getelementptr inbounds double, double* %y, i64 %indvars.iv
  %16 = load double, double* %arrayidx2, align 8, !tbaa !70
  %sub = fsub fast double %15, %16
  %arrayidx4 = getelementptr inbounds double, double* %out, i64 %indvars.iv
  store double %sub, double* %arrayidx4, align 8, !tbaa !70
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !92

for.end:                                          ; preds = %for.body, %middle.block, %entry
  ret void
}

; Function Attrs: nounwind readonly uwtable willreturn mustprogress
define dso_local double @log_sum_exp(i32 %n, double* nocapture readonly %x) local_unnamed_addr #16 {
entry:
  %0 = load double, double* %x, align 8, !tbaa !70
  %cmp9.i = icmp sgt i32 %n, 1
  br i1 %cmp9.i, label %for.body.preheader.i, label %arr_max.exit

for.body.preheader.i:                             ; preds = %entry
  %wide.trip.count.i = zext i32 %n to i64
  %1 = add nsw i64 %wide.trip.count.i, -1
  %min.iters.check = icmp ult i64 %1, 4
  br i1 %min.iters.check, label %for.body.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader.i
  %n.vec = and i64 %1, -4
  %ind.end = or i64 %n.vec, 1
  %minmax.ident.splatinsert = insertelement <2 x double> poison, double %0, i32 0
  %minmax.ident.splat = shufflevector <2 x double> %minmax.ident.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %8, %vector.body ]
  %vec.phi17 = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %9, %vector.body ]
  %offset.idx = or i64 %index, 1
  %2 = getelementptr inbounds double, double* %x, i64 %offset.idx
  %3 = bitcast double* %2 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %3, align 8, !tbaa !70
  %4 = getelementptr inbounds double, double* %2, i64 2
  %5 = bitcast double* %4 to <2 x double>*
  %wide.load18 = load <2 x double>, <2 x double>* %5, align 8, !tbaa !70
  %6 = fcmp fast olt <2 x double> %vec.phi, %wide.load
  %7 = fcmp fast olt <2 x double> %vec.phi17, %wide.load18
  %8 = select <2 x i1> %6, <2 x double> %wide.load, <2 x double> %vec.phi
  %9 = select <2 x i1> %7, <2 x double> %wide.load18, <2 x double> %vec.phi17
  %index.next = add i64 %index, 4
  %10 = icmp eq i64 %index.next, %n.vec
  br i1 %10, label %middle.block, label %vector.body, !llvm.loop !93

middle.block:                                     ; preds = %vector.body
  %11 = call fast <2 x double> @llvm.maxnum.v2f64(<2 x double> %8, <2 x double> %9)
  %12 = call double @llvm.vector.reduce.fmax.v2f64(<2 x double> %11)
  %cmp.n = icmp eq i64 %1, %n.vec
  br i1 %cmp.n, label %arr_max.exit, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body.preheader.i, %middle.block
  %indvars.iv.i.ph = phi i64 [ 1, %for.body.preheader.i ], [ %ind.end, %middle.block ]
  %m.011.i.ph = phi double [ %0, %for.body.preheader.i ], [ %12, %middle.block ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ %indvars.iv.i.ph, %for.body.i.preheader ]
  %m.011.i = phi double [ %m.1.i, %for.body.i ], [ %m.011.i.ph, %for.body.i.preheader ]
  %arrayidx1.i = getelementptr inbounds double, double* %x, i64 %indvars.iv.i
  %13 = load double, double* %arrayidx1.i, align 8, !tbaa !70
  %cmp2.i = fcmp fast olt double %m.011.i, %13
  %m.1.i = select i1 %cmp2.i, double %13, double %m.011.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %arr_max.exit, label %for.body.i, !llvm.loop !94

arr_max.exit:                                     ; preds = %for.body.i, %middle.block, %entry
  %m.0.lcssa.i = phi double [ %0, %entry ], [ %12, %middle.block ], [ %m.1.i, %for.body.i ]
  %cmp10 = icmp sgt i32 %n, 0
  br i1 %cmp10, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %arr_max.exit
  %wide.trip.count = zext i32 %n to i64
  %sub13 = fsub fast double %0, %m.0.lcssa.i
  %14 = tail call fast double @llvm.exp.f64(double %sub13)
  %exitcond.not14 = icmp eq i32 %n, 1
  br i1 %exitcond.not14, label %for.end, label %for.body.for.body_crit_edge.lr.ph, !llvm.loop !95

for.body.for.body_crit_edge.lr.ph:                ; preds = %for.body.preheader
  %15 = add nsw i64 %wide.trip.count, -1
  %min.iters.check22 = icmp ult i64 %15, 4
  br i1 %min.iters.check22, label %for.body.for.body_crit_edge.preheader, label %vector.ph23

vector.ph23:                                      ; preds = %for.body.for.body_crit_edge.lr.ph
  %n.vec25 = and i64 %15, -4
  %ind.end29 = or i64 %n.vec25, 1
  %16 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %14, i32 0
  %broadcast.splatinsert = insertelement <2 x double> poison, double %m.0.lcssa.i, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert36 = insertelement <2 x double> poison, double %m.0.lcssa.i, i32 0
  %broadcast.splat37 = shufflevector <2 x double> %broadcast.splatinsert36, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body21

vector.body21:                                    ; preds = %vector.body21, %vector.ph23
  %index26 = phi i64 [ 0, %vector.ph23 ], [ %index.next27, %vector.body21 ]
  %vec.phi32 = phi <2 x double> [ %16, %vector.ph23 ], [ %25, %vector.body21 ]
  %vec.phi33 = phi <2 x double> [ zeroinitializer, %vector.ph23 ], [ %26, %vector.body21 ]
  %offset.idx31 = or i64 %index26, 1
  %17 = getelementptr inbounds double, double* %x, i64 %offset.idx31
  %18 = bitcast double* %17 to <2 x double>*
  %wide.load34 = load <2 x double>, <2 x double>* %18, align 8, !tbaa !70
  %19 = getelementptr inbounds double, double* %17, i64 2
  %20 = bitcast double* %19 to <2 x double>*
  %wide.load35 = load <2 x double>, <2 x double>* %20, align 8, !tbaa !70
  %21 = fsub fast <2 x double> %wide.load34, %broadcast.splat
  %22 = fsub fast <2 x double> %wide.load35, %broadcast.splat37
  %23 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %21)
  %24 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %22)
  %25 = fadd fast <2 x double> %23, %vec.phi32
  %26 = fadd fast <2 x double> %24, %vec.phi33
  %index.next27 = add i64 %index26, 4
  %27 = icmp eq i64 %index.next27, %n.vec25
  br i1 %27, label %middle.block19, label %vector.body21, !llvm.loop !96

middle.block19:                                   ; preds = %vector.body21
  %bin.rdx = fadd fast <2 x double> %26, %25
  %28 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  %cmp.n30 = icmp eq i64 %15, %n.vec25
  br i1 %cmp.n30, label %for.end, label %for.body.for.body_crit_edge.preheader

for.body.for.body_crit_edge.preheader:            ; preds = %for.body.for.body_crit_edge.lr.ph, %middle.block19
  %indvars.iv.next16.ph = phi i64 [ 1, %for.body.for.body_crit_edge.lr.ph ], [ %ind.end29, %middle.block19 ]
  %add15.ph = phi double [ %14, %for.body.for.body_crit_edge.lr.ph ], [ %28, %middle.block19 ]
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge.preheader, %for.body.for.body_crit_edge
  %indvars.iv.next16 = phi i64 [ %indvars.iv.next, %for.body.for.body_crit_edge ], [ %indvars.iv.next16.ph, %for.body.for.body_crit_edge.preheader ]
  %add15 = phi double [ %add, %for.body.for.body_crit_edge ], [ %add15.ph, %for.body.for.body_crit_edge.preheader ]
  %arrayidx.phi.trans.insert = getelementptr inbounds double, double* %x, i64 %indvars.iv.next16
  %.pre = load double, double* %arrayidx.phi.trans.insert, align 8, !tbaa !70
  %sub = fsub fast double %.pre, %m.0.lcssa.i
  %29 = tail call fast double @llvm.exp.f64(double %sub)
  %add = fadd fast double %29, %add15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next16, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge, !llvm.loop !97

for.end:                                          ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %middle.block19, %arr_max.exit
  %semx.0.lcssa = phi double [ 0.000000e+00, %arr_max.exit ], [ %14, %for.body.preheader ], [ %28, %middle.block19 ], [ %add, %for.body.for.body_crit_edge ]
  %30 = tail call fast double @llvm.log.f64(double %semx.0.lcssa)
  %add1 = fadd fast double %30, %m.0.lcssa.i
  ret double %add1
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.exp.f64(double) #17

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.log.f64(double) #17

; Function Attrs: nounwind readnone uwtable willreturn mustprogress
define dso_local double @log_gamma_distrib(double %a, double %p) local_unnamed_addr #18 {
entry:
  %sub = fadd fast double %p, -1.000000e+00
  %mul1 = fmul fast double %p, 0x3FD250D048E7A2E6
  %mul2 = fmul fast double %mul1, %sub
  %cmp8 = fcmp fast ult double %p, 1.000000e+00
  br i1 %cmp8, label %for.end, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %out.010 = phi double [ %add6, %for.body ], [ %mul2, %entry ]
  %j.09 = phi i32 [ %inc, %for.body ], [ 1, %entry ]
  %sub3 = sub nsw i32 1, %j.09
  %conv4 = sitofp i32 %sub3 to double
  %mul5 = fmul fast double %conv4, 5.000000e-01
  %add = fadd fast double %mul5, %a
  %call = tail call fast double @lgamma(double %add) #38
  %add6 = fadd fast double %call, %out.010
  %inc = add nuw nsw i32 %j.09, 1
  %conv = sitofp i32 %inc to double
  %cmp = fcmp fast ugt double %conv, %p
  br i1 %cmp, label %for.end, label %for.body, !llvm.loop !98

for.end:                                          ; preds = %for.body, %entry
  %out.0.lcssa = phi double [ %mul2, %entry ], [ %add6, %for.body ]
  ret double %out.0.lcssa
}

; Function Attrs: nounwind
declare dso_local double @lgamma(double) local_unnamed_addr #7

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @log_wishart_prior(i32 %p, i32 %k, double %wishart.coerce0, i32 %wishart.coerce1, double* nocapture readonly %sum_qs, double* nocapture readonly %Qdiags, double* nocapture readonly %icf) local_unnamed_addr #6 {
entry:
  %add = add i32 %p, 1
  %add1 = add i32 %add, %wishart.coerce1
  %mul = mul nsw i32 %add, %p
  %div = sdiv i32 %mul, 2
  %cmp43 = icmp sgt i32 %k, 0
  br i1 %cmp43, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %cmp10.i = icmp sgt i32 %p, 1
  %wide.trip.count.i = zext i32 %p to i64
  %sub13 = sub nsw i32 %div, %p
  %cmp10.i30 = icmp sgt i32 %sub13, 1
  %wide.trip.count.i31 = zext i32 %sub13 to i64
  %0 = fmul fast double %wishart.coerce0, %wishart.coerce0
  %mul23 = fmul fast double %0, 5.000000e-01
  %conv27 = sitofp i32 %wishart.coerce1 to double
  %1 = sext i32 %p to i64
  %wide.trip.count = zext i32 %k to i64
  %2 = add nsw i64 %wide.trip.count.i31, -1
  %3 = add nsw i64 %wide.trip.count.i, -1
  %min.iters.check52 = icmp ult i64 %3, 4
  %n.vec55 = and i64 %3, -4
  %ind.end59 = or i64 %n.vec55, 1
  %cmp.n60 = icmp eq i64 %3, %n.vec55
  %min.iters.check = icmp ult i64 %2, 4
  %n.vec = and i64 %2, -4
  %ind.end = or i64 %n.vec, 1
  %cmp.n = icmp eq i64 %2, %n.vec
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %sqnorm.exit42
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %sqnorm.exit42 ]
  %out.044 = phi double [ 0.000000e+00, %for.body.lr.ph ], [ %sub31, %sqnorm.exit42 ]
  %4 = mul nsw i64 %indvars.iv, %1
  %arrayidx = getelementptr inbounds double, double* %Qdiags, i64 %4
  %5 = load double, double* %arrayidx, align 8, !tbaa !70
  %mul.i = fmul fast double %5, %5
  br i1 %cmp10.i, label %for.body.i28.preheader, label %sqnorm.exit

for.body.i28.preheader:                           ; preds = %for.body
  br i1 %min.iters.check52, label %for.body.i28.preheader69, label %vector.ph53

vector.ph53:                                      ; preds = %for.body.i28.preheader
  %6 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul.i, i32 0
  br label %vector.body51

vector.body51:                                    ; preds = %vector.body51, %vector.ph53
  %index56 = phi i64 [ 0, %vector.ph53 ], [ %index.next57, %vector.body51 ]
  %vec.phi62 = phi <2 x double> [ %6, %vector.ph53 ], [ %13, %vector.body51 ]
  %vec.phi63 = phi <2 x double> [ zeroinitializer, %vector.ph53 ], [ %14, %vector.body51 ]
  %offset.idx61 = or i64 %index56, 1
  %7 = getelementptr inbounds double, double* %arrayidx, i64 %offset.idx61
  %8 = bitcast double* %7 to <2 x double>*
  %wide.load64 = load <2 x double>, <2 x double>* %8, align 8, !tbaa !70
  %9 = getelementptr inbounds double, double* %7, i64 2
  %10 = bitcast double* %9 to <2 x double>*
  %wide.load65 = load <2 x double>, <2 x double>* %10, align 8, !tbaa !70
  %11 = fmul fast <2 x double> %wide.load64, %wide.load64
  %12 = fmul fast <2 x double> %wide.load65, %wide.load65
  %13 = fadd fast <2 x double> %11, %vec.phi62
  %14 = fadd fast <2 x double> %12, %vec.phi63
  %index.next57 = add i64 %index56, 4
  %15 = icmp eq i64 %index.next57, %n.vec55
  br i1 %15, label %middle.block49, label %vector.body51, !llvm.loop !99

middle.block49:                                   ; preds = %vector.body51
  %bin.rdx66 = fadd fast <2 x double> %14, %13
  %16 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx66)
  br i1 %cmp.n60, label %sqnorm.exit, label %for.body.i28.preheader69

for.body.i28.preheader69:                         ; preds = %for.body.i28.preheader, %middle.block49
  %indvars.iv.i.ph = phi i64 [ 1, %for.body.i28.preheader ], [ %ind.end59, %middle.block49 ]
  %res.012.i.ph = phi double [ %mul.i, %for.body.i28.preheader ], [ %16, %middle.block49 ]
  br label %for.body.i28

for.body.i28:                                     ; preds = %for.body.i28.preheader69, %for.body.i28
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i28 ], [ %indvars.iv.i.ph, %for.body.i28.preheader69 ]
  %res.012.i = phi double [ %add.i27, %for.body.i28 ], [ %res.012.i.ph, %for.body.i28.preheader69 ]
  %arrayidx2.i = getelementptr inbounds double, double* %arrayidx, i64 %indvars.iv.i
  %17 = load double, double* %arrayidx2.i, align 8, !tbaa !70
  %mul5.i26 = fmul fast double %17, %17
  %add.i27 = fadd fast double %mul5.i26, %res.012.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %sqnorm.exit, label %for.body.i28, !llvm.loop !100

sqnorm.exit:                                      ; preds = %for.body.i28, %middle.block49, %for.body
  %res.0.lcssa.i = phi double [ %mul.i, %for.body ], [ %16, %middle.block49 ], [ %add.i27, %for.body.i28 ]
  %18 = trunc i64 %indvars.iv to i32
  %mul14 = mul nsw i32 %div, %18
  %add15 = add nsw i32 %mul14, %p
  %idxprom16 = sext i32 %add15 to i64
  %arrayidx17 = getelementptr inbounds double, double* %icf, i64 %idxprom16
  %19 = load double, double* %arrayidx17, align 8, !tbaa !70
  %mul.i29 = fmul fast double %19, %19
  br i1 %cmp10.i30, label %for.body.i40.preheader, label %sqnorm.exit42

for.body.i40.preheader:                           ; preds = %sqnorm.exit
  br i1 %min.iters.check, label %for.body.i40.preheader68, label %vector.ph

vector.ph:                                        ; preds = %for.body.i40.preheader
  %20 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul.i29, i32 0
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %20, %vector.ph ], [ %27, %vector.body ]
  %vec.phi47 = phi <2 x double> [ zeroinitializer, %vector.ph ], [ %28, %vector.body ]
  %offset.idx = or i64 %index, 1
  %21 = getelementptr inbounds double, double* %arrayidx17, i64 %offset.idx
  %22 = bitcast double* %21 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %22, align 8, !tbaa !70
  %23 = getelementptr inbounds double, double* %21, i64 2
  %24 = bitcast double* %23 to <2 x double>*
  %wide.load48 = load <2 x double>, <2 x double>* %24, align 8, !tbaa !70
  %25 = fmul fast <2 x double> %wide.load, %wide.load
  %26 = fmul fast <2 x double> %wide.load48, %wide.load48
  %27 = fadd fast <2 x double> %25, %vec.phi
  %28 = fadd fast <2 x double> %26, %vec.phi47
  %index.next = add i64 %index, 4
  %29 = icmp eq i64 %index.next, %n.vec
  br i1 %29, label %middle.block, label %vector.body, !llvm.loop !101

middle.block:                                     ; preds = %vector.body
  %bin.rdx = fadd fast <2 x double> %28, %27
  %30 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  br i1 %cmp.n, label %sqnorm.exit42, label %for.body.i40.preheader68

for.body.i40.preheader68:                         ; preds = %for.body.i40.preheader, %middle.block
  %indvars.iv.i33.ph = phi i64 [ 1, %for.body.i40.preheader ], [ %ind.end, %middle.block ]
  %res.012.i34.ph = phi double [ %mul.i29, %for.body.i40.preheader ], [ %30, %middle.block ]
  br label %for.body.i40

for.body.i40:                                     ; preds = %for.body.i40.preheader68, %for.body.i40
  %indvars.iv.i33 = phi i64 [ %indvars.iv.next.i38, %for.body.i40 ], [ %indvars.iv.i33.ph, %for.body.i40.preheader68 ]
  %res.012.i34 = phi double [ %add.i37, %for.body.i40 ], [ %res.012.i34.ph, %for.body.i40.preheader68 ]
  %arrayidx2.i35 = getelementptr inbounds double, double* %arrayidx17, i64 %indvars.iv.i33
  %31 = load double, double* %arrayidx2.i35, align 8, !tbaa !70
  %mul5.i36 = fmul fast double %31, %31
  %add.i37 = fadd fast double %mul5.i36, %res.012.i34
  %indvars.iv.next.i38 = add nuw nsw i64 %indvars.iv.i33, 1
  %exitcond.not.i39 = icmp eq i64 %indvars.iv.next.i38, %wide.trip.count.i31
  br i1 %exitcond.not.i39, label %sqnorm.exit42, label %for.body.i40, !llvm.loop !102

sqnorm.exit42:                                    ; preds = %for.body.i40, %middle.block, %sqnorm.exit
  %res.0.lcssa.i41 = phi double [ %mul.i29, %sqnorm.exit ], [ %30, %middle.block ], [ %add.i37, %for.body.i40 ]
  %add19 = fadd fast double %res.0.lcssa.i41, %res.0.lcssa.i
  %mul24 = fmul fast double %mul23, %add19
  %add25 = fadd fast double %mul24, %out.044
  %arrayidx29 = getelementptr inbounds double, double* %sum_qs, i64 %indvars.iv
  %32 = load double, double* %arrayidx29, align 8, !tbaa !70
  %33 = fmul fast double %32, %conv27
  %sub31 = fsub fast double %add25, %33
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !103

for.end:                                          ; preds = %sqnorm.exit42, %entry
  %out.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %sub31, %sqnorm.exit42 ]
  %conv6 = sitofp i32 %add1 to double
  %conv8 = sitofp i32 %p to double
  %sub.i = fadd fast double %conv8, -1.000000e+00
  %mul1.i = fmul fast double %conv8, 0x3FD250D048E7A2E6
  %mul2.i = fmul fast double %mul1.i, %sub.i
  %cmp8.i = icmp slt i32 %p, 1
  br i1 %cmp8.i, label %log_gamma_distrib.exit, label %for.body.i

for.body.i:                                       ; preds = %for.end, %for.body.i
  %out.010.i = phi double [ %add6.i, %for.body.i ], [ %mul2.i, %for.end ]
  %j.09.i = phi i32 [ %inc.i, %for.body.i ], [ 1, %for.end ]
  %sub3.i = sub nsw i32 1, %j.09.i
  %conv4.i = sitofp i32 %sub3.i to double
  %34 = fadd fast double %conv4.i, %conv6
  %add.i = fmul fast double %34, 5.000000e-01
  %call.i = tail call fast double @lgamma(double %add.i) #38
  %add6.i = fadd fast double %call.i, %out.010.i
  %inc.i = add nuw nsw i32 %j.09.i, 1
  %conv.i = sitofp i32 %inc.i to double
  %cmp.i = fcmp fast ugt double %conv.i, %conv8
  br i1 %cmp.i, label %log_gamma_distrib.exit, label %for.body.i, !llvm.loop !98

log_gamma_distrib.exit:                           ; preds = %for.body.i, %for.end
  %out.0.lcssa.i = phi double [ %mul2.i, %for.end ], [ %add6.i, %for.body.i ]
  %35 = tail call fast double @llvm.log.f64(double %wishart.coerce0)
  %sub = fadd fast double %35, 0xBFD62E42FEFA39EF
  %mul3 = mul nsw i32 %add1, %p
  %conv = sitofp i32 %mul3 to double
  %mul5 = fmul fast double %sub, %conv
  %sub10 = fsub fast double %mul5, %out.0.lcssa.i
  %conv32 = sitofp i32 %k to double
  %mul33 = fmul fast double %sub10, %conv32
  %sub34 = fsub fast double %out.0.lcssa, %mul33
  ret double %sub34
}

; Function Attrs: nofree nounwind uwtable mustprogress
define dso_local void @preprocess_qs(i32 %d, i32 %k, double* nocapture readonly %icf, double* nocapture %sum_qs, double* nocapture %Qdiags) local_unnamed_addr #19 {
entry:
  %add = add nsw i32 %d, 1
  %mul = mul nsw i32 %add, %d
  %div = sdiv i32 %mul, 2
  %cmp22 = icmp sgt i32 %k, 0
  br i1 %cmp22, label %for.body.lr.ph, label %for.end19

for.body.lr.ph:                                   ; preds = %entry
  %cmp220 = icmp sgt i32 %d, 0
  %wide.trip.count30 = zext i32 %k to i64
  %wide.trip.count = zext i32 %d to i64
  %exitcond.not35 = icmp eq i32 %d, 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc17
  %indvars.iv28 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next29, %for.inc17 ]
  %arrayidx = getelementptr inbounds double, double* %sum_qs, i64 %indvars.iv28
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !70
  br i1 %cmp220, label %for.body3.lr.ph, label %for.inc17

for.body3.lr.ph:                                  ; preds = %for.body
  %0 = trunc i64 %indvars.iv28 to i32
  %mul4 = mul nsw i32 %div, %0
  %mul13 = mul nsw i32 %0, %d
  %1 = sext i32 %mul4 to i64
  %2 = sext i32 %mul13 to i64
  %arrayidx732 = getelementptr inbounds double, double* %icf, i64 %1
  %3 = load double, double* %arrayidx732, align 8, !tbaa !70
  store double %3, double* %arrayidx, align 8, !tbaa !70
  %4 = tail call fast double @llvm.exp.f64(double %3)
  %arrayidx1634 = getelementptr inbounds double, double* %Qdiags, i64 %2
  store double %4, double* %arrayidx1634, align 8, !tbaa !70
  br i1 %exitcond.not35, label %for.inc17, label %for.body3.for.body3_crit_edge, !llvm.loop !104

for.body3.for.body3_crit_edge:                    ; preds = %for.body3.lr.ph, %for.body3.for.body3_crit_edge
  %indvars.iv.next36 = phi i64 [ %indvars.iv.next, %for.body3.for.body3_crit_edge ], [ 1, %for.body3.lr.ph ]
  %.pre = load double, double* %arrayidx, align 8, !tbaa !70
  %5 = add nsw i64 %indvars.iv.next36, %1
  %arrayidx7 = getelementptr inbounds double, double* %icf, i64 %5
  %6 = load double, double* %arrayidx7, align 8, !tbaa !70
  %add10 = fadd fast double %.pre, %6
  store double %add10, double* %arrayidx, align 8, !tbaa !70
  %7 = tail call fast double @llvm.exp.f64(double %6)
  %8 = add nsw i64 %indvars.iv.next36, %2
  %arrayidx16 = getelementptr inbounds double, double* %Qdiags, i64 %8
  store double %7, double* %arrayidx16, align 8, !tbaa !70
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next36, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.inc17, label %for.body3.for.body3_crit_edge, !llvm.loop !104

for.inc17:                                        ; preds = %for.body3.for.body3_crit_edge, %for.body3.lr.ph, %for.body
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1
  %exitcond31.not = icmp eq i64 %indvars.iv.next29, %wide.trip.count30
  br i1 %exitcond31.not, label %for.end19, label %for.body, !llvm.loop !105

for.end19:                                        ; preds = %for.inc17, %entry
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable mustprogress
define dso_local void @Qtimesx(i32 %d, double* nocapture readonly %Qdiag, double* nocapture readonly %ltri, double* nocapture readonly %x, double* nocapture %out) local_unnamed_addr #15 {
entry:
  %cmp29 = icmp sgt i32 %d, 0
  br i1 %cmp29, label %for.body.preheader, label %for.end30

for.body.preheader:                               ; preds = %entry
  %wide.trip.count41 = zext i32 %d to i64
  %min.iters.check = icmp ult i32 %d, 4
  br i1 %min.iters.check, label %for.body.preheader98, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.preheader
  %scevgep = getelementptr double, double* %out, i64 %wide.trip.count41
  %scevgep46 = getelementptr double, double* %Qdiag, i64 %wide.trip.count41
  %scevgep49 = getelementptr double, double* %x, i64 %wide.trip.count41
  %bound0 = icmp ugt double* %scevgep46, %out
  %bound1 = icmp ugt double* %scevgep, %Qdiag
  %found.conflict = and i1 %bound0, %bound1
  %bound051 = icmp ugt double* %scevgep49, %out
  %bound152 = icmp ugt double* %scevgep, %x
  %found.conflict53 = and i1 %bound051, %bound152
  %conflict.rdx = or i1 %found.conflict, %found.conflict53
  br i1 %conflict.rdx, label %for.body.preheader98, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count41, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %0 = getelementptr inbounds double, double* %Qdiag, i64 %index
  %1 = bitcast double* %0 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %1, align 8, !tbaa !70, !alias.scope !106
  %2 = getelementptr inbounds double, double* %0, i64 2
  %3 = bitcast double* %2 to <2 x double>*
  %wide.load54 = load <2 x double>, <2 x double>* %3, align 8, !tbaa !70, !alias.scope !106
  %4 = getelementptr inbounds double, double* %x, i64 %index
  %5 = bitcast double* %4 to <2 x double>*
  %wide.load55 = load <2 x double>, <2 x double>* %5, align 8, !tbaa !70, !alias.scope !109
  %6 = getelementptr inbounds double, double* %4, i64 2
  %7 = bitcast double* %6 to <2 x double>*
  %wide.load56 = load <2 x double>, <2 x double>* %7, align 8, !tbaa !70, !alias.scope !109
  %8 = fmul fast <2 x double> %wide.load55, %wide.load
  %9 = fmul fast <2 x double> %wide.load56, %wide.load54
  %10 = getelementptr inbounds double, double* %out, i64 %index
  %11 = bitcast double* %10 to <2 x double>*
  store <2 x double> %8, <2 x double>* %11, align 8, !tbaa !70, !alias.scope !111, !noalias !113
  %12 = getelementptr inbounds double, double* %10, i64 2
  %13 = bitcast double* %12 to <2 x double>*
  store <2 x double> %9, <2 x double>* %13, align 8, !tbaa !70, !alias.scope !111, !noalias !113
  %index.next = add i64 %index, 4
  %14 = icmp eq i64 %index.next, %n.vec
  br i1 %14, label %middle.block, label %vector.body, !llvm.loop !114

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count41
  br i1 %cmp.n, label %for.cond5.preheader, label %for.body.preheader98

for.body.preheader98:                             ; preds = %vector.memcheck, %for.body.preheader, %middle.block
  %indvars.iv39.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.preheader ], [ %n.vec, %middle.block ]
  br label %for.body

for.cond5.preheader:                              ; preds = %for.body, %middle.block
  br i1 %cmp29, label %for.body7.lr.ph, label %for.end30

for.body7.lr.ph:                                  ; preds = %for.cond5.preheader
  %mul8 = shl nuw nsw i32 %d, 1
  %15 = zext i32 %d to i64
  %wide.trip.count37 = zext i32 %d to i64
  %scevgep66 = getelementptr double, double* %out, i64 %wide.trip.count41
  br label %for.body7

for.body:                                         ; preds = %for.body.preheader98, %for.body
  %indvars.iv39 = phi i64 [ %indvars.iv.next40, %for.body ], [ %indvars.iv39.ph, %for.body.preheader98 ]
  %arrayidx = getelementptr inbounds double, double* %Qdiag, i64 %indvars.iv39
  %16 = load double, double* %arrayidx, align 8, !tbaa !70
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %indvars.iv39
  %17 = load double, double* %arrayidx2, align 8, !tbaa !70
  %mul = fmul fast double %17, %16
  %arrayidx4 = getelementptr inbounds double, double* %out, i64 %indvars.iv39
  store double %mul, double* %arrayidx4, align 8, !tbaa !70
  %indvars.iv.next40 = add nuw nsw i64 %indvars.iv39, 1
  %exitcond42.not = icmp eq i64 %indvars.iv.next40, %wide.trip.count41
  br i1 %exitcond42.not, label %for.cond5.preheader, label %for.body, !llvm.loop !115

for.cond5.loopexit:                               ; preds = %for.body13, %middle.block57, %for.body7
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1
  %exitcond38.not = icmp eq i64 %indvars.iv.next36, %wide.trip.count37
  br i1 %exitcond38.not, label %for.end30, label %for.body7, !llvm.loop !116

for.body7:                                        ; preds = %for.body7.lr.ph, %for.cond5.loopexit
  %indvars.iv35 = phi i64 [ 0, %for.body7.lr.ph ], [ %indvars.iv.next36, %for.cond5.loopexit ]
  %indvars.iv31 = phi i64 [ 1, %for.body7.lr.ph ], [ %indvars.iv.next32, %for.cond5.loopexit ]
  %i.128 = phi i32 [ 0, %for.body7.lr.ph ], [ %add, %for.cond5.loopexit ]
  %18 = add nuw i64 %indvars.iv35, 1
  %scevgep64 = getelementptr double, double* %out, i64 %18
  %scevgep6465 = bitcast double* %scevgep64 to i8*
  %19 = xor i64 %indvars.iv35, -1
  %20 = add nsw i64 %19, %wide.trip.count41
  %scevgep70 = getelementptr double, double* %ltri, i64 %20
  %scevgep73 = getelementptr double, double* %x, i64 %indvars.iv35
  %scevgep7374 = bitcast double* %scevgep73 to i8*
  %uglygep = getelementptr i8, i8* %scevgep7374, i64 1
  %21 = xor i64 %indvars.iv35, -1
  %22 = add nsw i64 %21, %wide.trip.count41
  %indvars.iv.next36 = add nuw nsw i64 %indvars.iv35, 1
  %add = add nuw nsw i32 %i.128, 1
  %cmp1224 = icmp ult i64 %indvars.iv.next36, %15
  br i1 %cmp1224, label %for.body13.lr.ph, label %for.cond5.loopexit

for.body13.lr.ph:                                 ; preds = %for.body7
  %23 = xor i32 %i.128, -1
  %sub9 = add i32 %mul8, %23
  %24 = trunc i64 %indvars.iv35 to i32
  %mul10 = mul nsw i32 %sub9, %24
  %div = sdiv i32 %mul10, 2
  %arrayidx19 = getelementptr inbounds double, double* %x, i64 %indvars.iv35
  %25 = sext i32 %div to i64
  %min.iters.check60 = icmp ult i64 %22, 4
  br i1 %min.iters.check60, label %for.body13.preheader, label %vector.memcheck62

vector.memcheck62:                                ; preds = %for.body13.lr.ph
  %scevgep68 = getelementptr double, double* %ltri, i64 %25
  %scevgep71 = getelementptr double, double* %scevgep70, i64 %25
  %bound075 = icmp ult double* %scevgep64, %scevgep71
  %bound176 = icmp ult double* %scevgep68, %scevgep66
  %found.conflict77 = and i1 %bound075, %bound176
  %bound078 = icmp ugt i8* %uglygep, %scevgep6465
  %bound179 = icmp ult double* %arrayidx19, %scevgep66
  %found.conflict80 = and i1 %bound078, %bound179
  %conflict.rdx81 = or i1 %found.conflict77, %found.conflict80
  br i1 %conflict.rdx81, label %for.body13.preheader, label %vector.ph63

vector.ph63:                                      ; preds = %vector.memcheck62
  %n.vec84 = and i64 %22, -4
  %ind.end = add i64 %indvars.iv31, %n.vec84
  %ind.end89 = add i64 %n.vec84, %25
  %26 = load double, double* %arrayidx19, align 8, !tbaa !70, !alias.scope !117
  %broadcast.splatinsert = insertelement <2 x double> poison, double %26, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert96 = insertelement <2 x double> poison, double %26, i32 0
  %broadcast.splat97 = shufflevector <2 x double> %broadcast.splatinsert96, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body59

vector.body59:                                    ; preds = %vector.body59, %vector.ph63
  %index85 = phi i64 [ 0, %vector.ph63 ], [ %index.next86, %vector.body59 ]
  %offset.idx = add i64 %indvars.iv31, %index85
  %offset.idx91 = add i64 %index85, %25
  %27 = getelementptr inbounds double, double* %out, i64 %offset.idx
  %28 = bitcast double* %27 to <2 x double>*
  %wide.load92 = load <2 x double>, <2 x double>* %28, align 8, !tbaa !70, !alias.scope !120, !noalias !122
  %29 = getelementptr inbounds double, double* %27, i64 2
  %30 = bitcast double* %29 to <2 x double>*
  %wide.load93 = load <2 x double>, <2 x double>* %30, align 8, !tbaa !70, !alias.scope !120, !noalias !122
  %31 = getelementptr inbounds double, double* %ltri, i64 %offset.idx91
  %32 = bitcast double* %31 to <2 x double>*
  %wide.load94 = load <2 x double>, <2 x double>* %32, align 8, !tbaa !70, !alias.scope !124
  %33 = getelementptr inbounds double, double* %31, i64 2
  %34 = bitcast double* %33 to <2 x double>*
  %wide.load95 = load <2 x double>, <2 x double>* %34, align 8, !tbaa !70, !alias.scope !124
  %35 = fmul fast <2 x double> %broadcast.splat, %wide.load94
  %36 = fmul fast <2 x double> %broadcast.splat97, %wide.load95
  %37 = fadd fast <2 x double> %35, %wide.load92
  %38 = fadd fast <2 x double> %36, %wide.load93
  %39 = bitcast double* %27 to <2 x double>*
  store <2 x double> %37, <2 x double>* %39, align 8, !tbaa !70, !alias.scope !120, !noalias !122
  %40 = bitcast double* %29 to <2 x double>*
  store <2 x double> %38, <2 x double>* %40, align 8, !tbaa !70, !alias.scope !120, !noalias !122
  %index.next86 = add i64 %index85, 4
  %41 = icmp eq i64 %index.next86, %n.vec84
  br i1 %41, label %middle.block57, label %vector.body59, !llvm.loop !125

middle.block57:                                   ; preds = %vector.body59
  %cmp.n90 = icmp eq i64 %22, %n.vec84
  br i1 %cmp.n90, label %for.cond5.loopexit, label %for.body13.preheader

for.body13.preheader:                             ; preds = %vector.memcheck62, %for.body13.lr.ph, %middle.block57
  %indvars.iv33.ph = phi i64 [ %indvars.iv31, %vector.memcheck62 ], [ %indvars.iv31, %for.body13.lr.ph ], [ %ind.end, %middle.block57 ]
  %indvars.iv.ph = phi i64 [ %25, %vector.memcheck62 ], [ %25, %for.body13.lr.ph ], [ %ind.end89, %middle.block57 ]
  br label %for.body13

for.body13:                                       ; preds = %for.body13.preheader, %for.body13
  %indvars.iv33 = phi i64 [ %indvars.iv.next34, %for.body13 ], [ %indvars.iv33.ph, %for.body13.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body13 ], [ %indvars.iv.ph, %for.body13.preheader ]
  %arrayidx15 = getelementptr inbounds double, double* %out, i64 %indvars.iv33
  %42 = load double, double* %arrayidx15, align 8, !tbaa !70
  %arrayidx17 = getelementptr inbounds double, double* %ltri, i64 %indvars.iv
  %43 = load double, double* %arrayidx17, align 8, !tbaa !70
  %44 = load double, double* %arrayidx19, align 8, !tbaa !70
  %mul20 = fmul fast double %44, %43
  %add21 = fadd fast double %mul20, %42
  store double %add21, double* %arrayidx15, align 8, !tbaa !70
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next34, %wide.trip.count37
  br i1 %exitcond.not, label %for.cond5.loopexit, label %for.body13, !llvm.loop !126

for.end30:                                        ; preds = %for.cond5.loopexit, %entry, %for.cond5.preheader
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @gmm_objective(i32 %d, i32 %k, i32 %n, double* noalias nocapture readonly %alphas, double* noalias nocapture readonly %means, double* noalias nocapture readonly %icf, double* noalias nocapture readonly %x, %struct.Wishart* nocapture readonly byval(%struct.Wishart) align 8 %wishart, double* noalias nocapture %err) local_unnamed_addr #6 {
entry:
  %add = add nsw i32 %d, 1
  %mul3 = mul nsw i32 %add, %d
  %div = sdiv i32 %mul3, 2
  %conv4 = sext i32 %div to i64
  %mul5 = mul nsw i32 %k, %d
  %conv6 = sext i32 %mul5 to i64
  %mul7 = shl nsw i64 %conv6, 3
  %call = tail call noalias i8* @malloc(i64 %mul7) #38
  %0 = bitcast i8* %call to double*
  %conv8 = sext i32 %k to i64
  %mul9 = shl nsw i64 %conv8, 3
  %call10 = tail call noalias i8* @malloc(i64 %mul9) #38
  %1 = bitcast i8* %call10 to double*
  %conv11 = sext i32 %d to i64
  %mul12 = shl nsw i64 %conv11, 3
  %call13 = tail call noalias i8* @malloc(i64 %mul12) #38
  %2 = bitcast i8* %call13 to double*
  %call16 = tail call noalias i8* @malloc(i64 %mul12) #38
  %3 = bitcast i8* %call16 to double*
  %call19 = tail call noalias i8* @malloc(i64 %mul9) #38
  %4 = bitcast i8* %call19 to double*
  %cmp22.i = icmp sgt i32 %k, 0
  br i1 %cmp22.i, label %for.body.lr.ph.i, label %preprocess_qs.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %cmp220.i = icmp sgt i32 %d, 0
  %wide.trip.count30.i = zext i32 %k to i64
  %wide.trip.count.i = zext i32 %d to i64
  %min.iters.check = icmp ult i32 %d, 4
  %n.vec = and i64 %wide.trip.count.i, 4294967292
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc17.i, %for.body.lr.ph.i
  %indvars.iv28.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next29.i, %for.inc17.i ]
  %arrayidx.i = getelementptr inbounds double, double* %1, i64 %indvars.iv28.i
  store double 0.000000e+00, double* %arrayidx.i, align 8, !tbaa !70
  br i1 %cmp220.i, label %for.body3.lr.ph.i, label %for.inc17.i

for.body3.lr.ph.i:                                ; preds = %for.body.i
  %5 = trunc i64 %indvars.iv28.i to i32
  %mul4.i = mul nsw i32 %div, %5
  %mul13.i = mul nsw i32 %5, %d
  %6 = sext i32 %mul4.i to i64
  %7 = sext i32 %mul13.i to i64
  br i1 %min.iters.check, label %for.body3.i.preheader, label %vector.body

vector.body:                                      ; preds = %for.body3.lr.ph.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body3.lr.ph.i ]
  %vec.phi = phi <2 x double> [ %13, %vector.body ], [ zeroinitializer, %for.body3.lr.ph.i ]
  %vec.phi150 = phi <2 x double> [ %14, %vector.body ], [ zeroinitializer, %for.body3.lr.ph.i ]
  %8 = add nsw i64 %index, %6
  %9 = getelementptr inbounds double, double* %icf, i64 %8
  %10 = bitcast double* %9 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %10, align 8, !tbaa !70
  %11 = getelementptr inbounds double, double* %9, i64 2
  %12 = bitcast double* %11 to <2 x double>*
  %wide.load151 = load <2 x double>, <2 x double>* %12, align 8, !tbaa !70
  %13 = fadd fast <2 x double> %wide.load, %vec.phi
  %14 = fadd fast <2 x double> %wide.load151, %vec.phi150
  %15 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %wide.load)
  %16 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %wide.load151)
  %17 = add nsw i64 %index, %7
  %18 = getelementptr inbounds double, double* %0, i64 %17
  %19 = bitcast double* %18 to <2 x double>*
  store <2 x double> %15, <2 x double>* %19, align 8, !tbaa !70
  %20 = getelementptr inbounds double, double* %18, i64 2
  %21 = bitcast double* %20 to <2 x double>*
  store <2 x double> %16, <2 x double>* %21, align 8, !tbaa !70
  %index.next = add i64 %index, 4
  %22 = icmp eq i64 %index.next, %n.vec
  br i1 %22, label %middle.block, label %vector.body, !llvm.loop !127

middle.block:                                     ; preds = %vector.body
  %bin.rdx = fadd fast <2 x double> %14, %13
  %23 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  br i1 %cmp.n, label %for.inc17.i.loopexit, label %for.body3.i.preheader

for.body3.i.preheader:                            ; preds = %for.body3.lr.ph.i, %middle.block
  %.ph = phi double [ 0.000000e+00, %for.body3.lr.ph.i ], [ %23, %middle.block ]
  %indvars.iv.i.ph = phi i64 [ 0, %for.body3.lr.ph.i ], [ %n.vec, %middle.block ]
  br label %for.body3.i

for.body3.i:                                      ; preds = %for.body3.i.preheader, %for.body3.i
  %24 = phi double [ %add10.i, %for.body3.i ], [ %.ph, %for.body3.i.preheader ]
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body3.i ], [ %indvars.iv.i.ph, %for.body3.i.preheader ]
  %25 = add nsw i64 %indvars.iv.i, %6
  %arrayidx7.i = getelementptr inbounds double, double* %icf, i64 %25
  %26 = load double, double* %arrayidx7.i, align 8, !tbaa !70
  %add10.i = fadd fast double %26, %24
  %27 = tail call fast double @llvm.exp.f64(double %26) #38
  %28 = add nsw i64 %indvars.iv.i, %7
  %arrayidx16.i = getelementptr inbounds double, double* %0, i64 %28
  store double %27, double* %arrayidx16.i, align 8, !tbaa !70
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %for.inc17.i.loopexit, label %for.body3.i, !llvm.loop !128

for.inc17.i.loopexit:                             ; preds = %for.body3.i, %middle.block
  %add10.i.lcssa = phi double [ %23, %middle.block ], [ %add10.i, %for.body3.i ]
  store double %add10.i.lcssa, double* %arrayidx.i, align 8, !tbaa !70
  br label %for.inc17.i

for.inc17.i:                                      ; preds = %for.inc17.i.loopexit, %for.body.i
  %indvars.iv.next29.i = add nuw nsw i64 %indvars.iv28.i, 1
  %exitcond31.not.i = icmp eq i64 %indvars.iv.next29.i, %wide.trip.count30.i
  br i1 %exitcond31.not.i, label %preprocess_qs.exit, label %for.body.i, !llvm.loop !105

preprocess_qs.exit:                               ; preds = %for.inc17.i, %entry
  %conv21 = sext i32 %n to i64
  %cmp143 = icmp sgt i32 %n, 0
  br i1 %cmp143, label %for.cond22.preheader.lr.ph, label %for.end55

for.cond22.preheader.lr.ph:                       ; preds = %preprocess_qs.exit
  %cmp6.i = icmp sgt i32 %d, 0
  %wide.trip.count.i61 = zext i32 %d to i64
  %mul8.i = shl nuw nsw i32 %d, 1
  %cmp10.i106 = icmp sgt i32 %d, 1
  %cmp9.i.i76 = icmp sgt i32 %k, 1
  %wide.trip.count.i.i77 = zext i32 %k to i64
  %exitcond.not.i97139 = icmp eq i32 %k, 1
  %29 = add nsw i64 %wide.trip.count.i.i77, -1
  %30 = add nsw i64 %wide.trip.count.i.i77, -1
  %31 = add nsw i64 %wide.trip.count.i61, -1
  %min.iters.check250 = icmp ult i32 %d, 4
  %n.vec253 = and i64 %wide.trip.count.i61, 4294967292
  %cmp.n257 = icmp eq i64 %n.vec253, %wide.trip.count.i61
  %min.iters.check235 = icmp ult i32 %d, 4
  %n.vec238 = and i64 %wide.trip.count.i61, 4294967292
  %cmp.n242 = icmp eq i64 %n.vec238, %wide.trip.count.i61
  %min.iters.check192 = icmp ult i64 %31, 4
  %n.vec195 = and i64 %31, -4
  %ind.end199 = or i64 %n.vec195, 1
  %cmp.n200 = icmp eq i64 %31, %n.vec195
  %min.iters.check174 = icmp ult i64 %30, 4
  %n.vec177 = and i64 %30, -4
  %ind.end181 = or i64 %n.vec177, 1
  %cmp.n182 = icmp eq i64 %30, %n.vec177
  %min.iters.check155 = icmp ult i64 %29, 4
  %n.vec158 = and i64 %29, -4
  %ind.end = or i64 %n.vec158, 1
  %cmp.n162 = icmp eq i64 %29, %n.vec158
  br label %for.cond22.preheader

for.cond22.preheader:                             ; preds = %for.cond22.preheader.lr.ph, %log_sum_exp.exit104
  %32 = phi double [ undef, %for.cond22.preheader.lr.ph ], [ %107, %log_sum_exp.exit104 ]
  %33 = phi double [ undef, %for.cond22.preheader.lr.ph ], [ %108, %log_sum_exp.exit104 ]
  %ix.0145 = phi i64 [ 0, %for.cond22.preheader.lr.ph ], [ %inc54, %log_sum_exp.exit104 ]
  %slse.0144 = phi double [ 0.000000e+00, %for.cond22.preheader.lr.ph ], [ %add52, %log_sum_exp.exit104 ]
  br i1 %cmp22.i, label %for.body25.lr.ph, label %for.end

for.body25.lr.ph:                                 ; preds = %for.cond22.preheader
  %mul27 = mul nsw i64 %ix.0145, %conv11
  %arrayidx28 = getelementptr inbounds double, double* %x, i64 %mul27
  br label %for.body25

for.body25:                                       ; preds = %for.body25.lr.ph, %sqnorm.exit
  %34 = phi double [ %33, %for.body25.lr.ph ], [ %92, %sqnorm.exit ]
  %ik.0135 = phi i64 [ 0, %for.body25.lr.ph ], [ %inc, %sqnorm.exit ]
  %mul30 = mul nsw i64 %ik.0135, %conv11
  %arrayidx31 = getelementptr inbounds double, double* %means, i64 %mul30
  br i1 %cmp6.i, label %for.body.i66.preheader, label %Qtimesx.exit

for.body.i66.preheader:                           ; preds = %for.body25
  br i1 %min.iters.check250, label %for.body.i66.preheader310, label %vector.body249

vector.body249:                                   ; preds = %for.body.i66.preheader, %vector.body249
  %index254 = phi i64 [ %index.next255, %vector.body249 ], [ 0, %for.body.i66.preheader ]
  %35 = getelementptr inbounds double, double* %arrayidx28, i64 %index254
  %36 = bitcast double* %35 to <2 x double>*
  %wide.load258 = load <2 x double>, <2 x double>* %36, align 8, !tbaa !70
  %37 = getelementptr inbounds double, double* %35, i64 2
  %38 = bitcast double* %37 to <2 x double>*
  %wide.load259 = load <2 x double>, <2 x double>* %38, align 8, !tbaa !70
  %39 = getelementptr inbounds double, double* %arrayidx31, i64 %index254
  %40 = bitcast double* %39 to <2 x double>*
  %wide.load260 = load <2 x double>, <2 x double>* %40, align 8, !tbaa !70
  %41 = getelementptr inbounds double, double* %39, i64 2
  %42 = bitcast double* %41 to <2 x double>*
  %wide.load261 = load <2 x double>, <2 x double>* %42, align 8, !tbaa !70
  %43 = fsub fast <2 x double> %wide.load258, %wide.load260
  %44 = fsub fast <2 x double> %wide.load259, %wide.load261
  %45 = getelementptr inbounds double, double* %2, i64 %index254
  %46 = bitcast double* %45 to <2 x double>*
  store <2 x double> %43, <2 x double>* %46, align 8, !tbaa !70
  %47 = getelementptr inbounds double, double* %45, i64 2
  %48 = bitcast double* %47 to <2 x double>*
  store <2 x double> %44, <2 x double>* %48, align 8, !tbaa !70
  %index.next255 = add i64 %index254, 4
  %49 = icmp eq i64 %index.next255, %n.vec253
  br i1 %49, label %middle.block247, label %vector.body249, !llvm.loop !129

middle.block247:                                  ; preds = %vector.body249
  br i1 %cmp.n257, label %for.body.i120.preheader, label %for.body.i66.preheader310

for.body.i66.preheader310:                        ; preds = %for.body.i66.preheader, %middle.block247
  %indvars.iv.i62.ph = phi i64 [ 0, %for.body.i66.preheader ], [ %n.vec253, %middle.block247 ]
  br label %for.body.i66

for.body.i66:                                     ; preds = %for.body.i66.preheader310, %for.body.i66
  %indvars.iv.i62 = phi i64 [ %indvars.iv.next.i64, %for.body.i66 ], [ %indvars.iv.i62.ph, %for.body.i66.preheader310 ]
  %arrayidx.i63 = getelementptr inbounds double, double* %arrayidx28, i64 %indvars.iv.i62
  %50 = load double, double* %arrayidx.i63, align 8, !tbaa !70
  %arrayidx2.i = getelementptr inbounds double, double* %arrayidx31, i64 %indvars.iv.i62
  %51 = load double, double* %arrayidx2.i, align 8, !tbaa !70
  %sub.i = fsub fast double %50, %51
  %arrayidx4.i = getelementptr inbounds double, double* %2, i64 %indvars.iv.i62
  store double %sub.i, double* %arrayidx4.i, align 8, !tbaa !70
  %indvars.iv.next.i64 = add nuw nsw i64 %indvars.iv.i62, 1
  %exitcond.not.i65 = icmp eq i64 %indvars.iv.next.i64, %wide.trip.count.i61
  br i1 %exitcond.not.i65, label %for.body.i120.preheader, label %for.body.i66, !llvm.loop !130

for.body.i120.preheader:                          ; preds = %for.body.i66, %middle.block247
  %arrayidx35 = getelementptr inbounds double, double* %0, i64 %mul30
  %mul36 = mul nsw i64 %ik.0135, %conv4
  %add38 = add nsw i64 %mul36, %conv11
  %arrayidx39 = getelementptr inbounds double, double* %icf, i64 %add38
  br i1 %min.iters.check235, label %for.body.i120.preheader309, label %vector.body234

vector.body234:                                   ; preds = %for.body.i120.preheader, %vector.body234
  %index239 = phi i64 [ %index.next240, %vector.body234 ], [ 0, %for.body.i120.preheader ]
  %52 = getelementptr inbounds double, double* %arrayidx35, i64 %index239
  %53 = bitcast double* %52 to <2 x double>*
  %wide.load243 = load <2 x double>, <2 x double>* %53, align 8, !tbaa !70
  %54 = getelementptr inbounds double, double* %52, i64 2
  %55 = bitcast double* %54 to <2 x double>*
  %wide.load244 = load <2 x double>, <2 x double>* %55, align 8, !tbaa !70
  %56 = getelementptr inbounds double, double* %2, i64 %index239
  %57 = bitcast double* %56 to <2 x double>*
  %wide.load245 = load <2 x double>, <2 x double>* %57, align 8, !tbaa !70
  %58 = getelementptr inbounds double, double* %56, i64 2
  %59 = bitcast double* %58 to <2 x double>*
  %wide.load246 = load <2 x double>, <2 x double>* %59, align 8, !tbaa !70
  %60 = fmul fast <2 x double> %wide.load245, %wide.load243
  %61 = fmul fast <2 x double> %wide.load246, %wide.load244
  %62 = getelementptr inbounds double, double* %3, i64 %index239
  %63 = bitcast double* %62 to <2 x double>*
  store <2 x double> %60, <2 x double>* %63, align 8, !tbaa !70
  %64 = getelementptr inbounds double, double* %62, i64 2
  %65 = bitcast double* %64 to <2 x double>*
  store <2 x double> %61, <2 x double>* %65, align 8, !tbaa !70
  %index.next240 = add i64 %index239, 4
  %66 = icmp eq i64 %index.next240, %n.vec238
  br i1 %66, label %middle.block232, label %vector.body234, !llvm.loop !131

middle.block232:                                  ; preds = %vector.body234
  br i1 %cmp.n242, label %for.body7.i.preheader, label %for.body.i120.preheader309

for.body.i120.preheader309:                       ; preds = %for.body.i120.preheader, %middle.block232
  %indvars.iv39.i.ph = phi i64 [ 0, %for.body.i120.preheader ], [ %n.vec238, %middle.block232 ]
  br label %for.body.i120

for.body.i120:                                    ; preds = %for.body.i120.preheader309, %for.body.i120
  %indvars.iv39.i = phi i64 [ %indvars.iv.next40.i, %for.body.i120 ], [ %indvars.iv39.i.ph, %for.body.i120.preheader309 ]
  %arrayidx.i116 = getelementptr inbounds double, double* %arrayidx35, i64 %indvars.iv39.i
  %67 = load double, double* %arrayidx.i116, align 8, !tbaa !70
  %arrayidx2.i117 = getelementptr inbounds double, double* %2, i64 %indvars.iv39.i
  %68 = load double, double* %arrayidx2.i117, align 8, !tbaa !70
  %mul.i118 = fmul fast double %68, %67
  %arrayidx4.i119 = getelementptr inbounds double, double* %3, i64 %indvars.iv39.i
  store double %mul.i118, double* %arrayidx4.i119, align 8, !tbaa !70
  %indvars.iv.next40.i = add nuw nsw i64 %indvars.iv39.i, 1
  %exitcond42.not.i = icmp eq i64 %indvars.iv.next40.i, %wide.trip.count.i61
  br i1 %exitcond42.not.i, label %for.body7.i.preheader, label %for.body.i120, !llvm.loop !132

for.body7.i.preheader:                            ; preds = %for.body.i120, %middle.block232
  br label %for.body7.i

for.cond5.loopexit.i:                             ; preds = %for.body13.i, %middle.block208, %for.body7.i
  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1
  %exitcond38.not.i = icmp eq i64 %indvars.iv.next36.i, %wide.trip.count.i61
  br i1 %exitcond38.not.i, label %Qtimesx.exit.loopexit, label %for.body7.i, !llvm.loop !116

for.body7.i:                                      ; preds = %for.body7.i.preheader, %for.cond5.loopexit.i
  %indvars.iv35.i = phi i64 [ %indvars.iv.next36.i, %for.cond5.loopexit.i ], [ 0, %for.body7.i.preheader ]
  %indvars.iv31.i = phi i64 [ %indvars.iv.next32.i, %for.cond5.loopexit.i ], [ 1, %for.body7.i.preheader ]
  %i.128.i = phi i32 [ %add.i121, %for.cond5.loopexit.i ], [ 0, %for.body7.i.preheader ]
  %69 = xor i64 %indvars.iv35.i, -1
  %70 = add nsw i64 %69, %wide.trip.count.i61
  %indvars.iv.next36.i = add nuw nsw i64 %indvars.iv35.i, 1
  %add.i121 = add nuw nsw i32 %i.128.i, 1
  %cmp1224.i = icmp ult i64 %indvars.iv.next36.i, %wide.trip.count.i61
  br i1 %cmp1224.i, label %for.body13.lr.ph.i, label %for.cond5.loopexit.i

for.body13.lr.ph.i:                               ; preds = %for.body7.i
  %71 = xor i32 %i.128.i, -1
  %sub9.i = add i32 %mul8.i, %71
  %72 = trunc i64 %indvars.iv35.i to i32
  %mul10.i = mul nsw i32 %sub9.i, %72
  %div.i122 = sdiv i32 %mul10.i, 2
  %arrayidx19.i = getelementptr inbounds double, double* %2, i64 %indvars.iv35.i
  %73 = sext i32 %div.i122 to i64
  %74 = load double, double* %arrayidx19.i, align 8, !tbaa !70
  %min.iters.check211 = icmp ult i64 %70, 4
  br i1 %min.iters.check211, label %for.body13.i.preheader, label %vector.ph212

vector.ph212:                                     ; preds = %for.body13.lr.ph.i
  %n.vec214 = and i64 %70, -4
  %ind.end218 = add i64 %indvars.iv31.i, %n.vec214
  %ind.end220 = add i64 %n.vec214, %73
  %broadcast.splatinsert228 = insertelement <2 x double> poison, double %74, i32 0
  %broadcast.splat229 = shufflevector <2 x double> %broadcast.splatinsert228, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert230 = insertelement <2 x double> poison, double %74, i32 0
  %broadcast.splat231 = shufflevector <2 x double> %broadcast.splatinsert230, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body210

vector.body210:                                   ; preds = %vector.body210, %vector.ph212
  %index215 = phi i64 [ 0, %vector.ph212 ], [ %index.next216, %vector.body210 ]
  %offset.idx222 = add i64 %indvars.iv31.i, %index215
  %offset.idx223 = add i64 %index215, %73
  %75 = getelementptr inbounds double, double* %3, i64 %offset.idx222
  %76 = bitcast double* %75 to <2 x double>*
  %wide.load224 = load <2 x double>, <2 x double>* %76, align 8, !tbaa !70
  %77 = getelementptr inbounds double, double* %75, i64 2
  %78 = bitcast double* %77 to <2 x double>*
  %wide.load225 = load <2 x double>, <2 x double>* %78, align 8, !tbaa !70
  %79 = getelementptr inbounds double, double* %arrayidx39, i64 %offset.idx223
  %80 = bitcast double* %79 to <2 x double>*
  %wide.load226 = load <2 x double>, <2 x double>* %80, align 8, !tbaa !70
  %81 = getelementptr inbounds double, double* %79, i64 2
  %82 = bitcast double* %81 to <2 x double>*
  %wide.load227 = load <2 x double>, <2 x double>* %82, align 8, !tbaa !70
  %83 = fmul fast <2 x double> %broadcast.splat229, %wide.load226
  %84 = fmul fast <2 x double> %broadcast.splat231, %wide.load227
  %85 = fadd fast <2 x double> %83, %wide.load224
  %86 = fadd fast <2 x double> %84, %wide.load225
  %87 = bitcast double* %75 to <2 x double>*
  store <2 x double> %85, <2 x double>* %87, align 8, !tbaa !70
  %88 = bitcast double* %77 to <2 x double>*
  store <2 x double> %86, <2 x double>* %88, align 8, !tbaa !70
  %index.next216 = add i64 %index215, 4
  %89 = icmp eq i64 %index.next216, %n.vec214
  br i1 %89, label %middle.block208, label %vector.body210, !llvm.loop !133

middle.block208:                                  ; preds = %vector.body210
  %cmp.n221 = icmp eq i64 %70, %n.vec214
  br i1 %cmp.n221, label %for.cond5.loopexit.i, label %for.body13.i.preheader

for.body13.i.preheader:                           ; preds = %for.body13.lr.ph.i, %middle.block208
  %indvars.iv33.i.ph = phi i64 [ %indvars.iv31.i, %for.body13.lr.ph.i ], [ %ind.end218, %middle.block208 ]
  %indvars.iv.i123.ph = phi i64 [ %73, %for.body13.lr.ph.i ], [ %ind.end220, %middle.block208 ]
  br label %for.body13.i

for.body13.i:                                     ; preds = %for.body13.i.preheader, %for.body13.i
  %indvars.iv33.i = phi i64 [ %indvars.iv.next34.i, %for.body13.i ], [ %indvars.iv33.i.ph, %for.body13.i.preheader ]
  %indvars.iv.i123 = phi i64 [ %indvars.iv.next.i124, %for.body13.i ], [ %indvars.iv.i123.ph, %for.body13.i.preheader ]
  %arrayidx15.i = getelementptr inbounds double, double* %3, i64 %indvars.iv33.i
  %90 = load double, double* %arrayidx15.i, align 8, !tbaa !70
  %arrayidx17.i = getelementptr inbounds double, double* %arrayidx39, i64 %indvars.iv.i123
  %91 = load double, double* %arrayidx17.i, align 8, !tbaa !70
  %mul20.i = fmul fast double %74, %91
  %add21.i = fadd fast double %mul20.i, %90
  store double %add21.i, double* %arrayidx15.i, align 8, !tbaa !70
  %indvars.iv.next.i124 = add nsw i64 %indvars.iv.i123, 1
  %indvars.iv.next34.i = add nuw nsw i64 %indvars.iv33.i, 1
  %exitcond.not.i125 = icmp eq i64 %indvars.iv.next34.i, %wide.trip.count.i61
  br i1 %exitcond.not.i125, label %for.cond5.loopexit.i, label %for.body13.i, !llvm.loop !134

Qtimesx.exit.loopexit:                            ; preds = %for.cond5.loopexit.i
  %.pre = load double, double* %3, align 8, !tbaa !70
  br label %Qtimesx.exit

Qtimesx.exit:                                     ; preds = %Qtimesx.exit.loopexit, %for.body25
  %92 = phi double [ %.pre, %Qtimesx.exit.loopexit ], [ %34, %for.body25 ]
  %arrayidx42 = getelementptr inbounds double, double* %alphas, i64 %ik.0135
  %93 = load double, double* %arrayidx42, align 8, !tbaa !70
  %arrayidx43 = getelementptr inbounds double, double* %1, i64 %ik.0135
  %94 = load double, double* %arrayidx43, align 8, !tbaa !70
  %add44 = fadd fast double %94, %93
  %mul.i105 = fmul fast double %92, %92
  br i1 %cmp10.i106, label %for.body.i114.preheader, label %sqnorm.exit

for.body.i114.preheader:                          ; preds = %Qtimesx.exit
  br i1 %min.iters.check192, label %for.body.i114.preheader308, label %vector.ph193

vector.ph193:                                     ; preds = %for.body.i114.preheader
  %95 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul.i105, i32 0
  br label %vector.body191

vector.body191:                                   ; preds = %vector.body191, %vector.ph193
  %index196 = phi i64 [ 0, %vector.ph193 ], [ %index.next197, %vector.body191 ]
  %vec.phi202 = phi <2 x double> [ %95, %vector.ph193 ], [ %102, %vector.body191 ]
  %vec.phi203 = phi <2 x double> [ zeroinitializer, %vector.ph193 ], [ %103, %vector.body191 ]
  %offset.idx201 = or i64 %index196, 1
  %96 = getelementptr inbounds double, double* %3, i64 %offset.idx201
  %97 = bitcast double* %96 to <2 x double>*
  %wide.load204 = load <2 x double>, <2 x double>* %97, align 8, !tbaa !70
  %98 = getelementptr inbounds double, double* %96, i64 2
  %99 = bitcast double* %98 to <2 x double>*
  %wide.load205 = load <2 x double>, <2 x double>* %99, align 8, !tbaa !70
  %100 = fmul fast <2 x double> %wide.load204, %wide.load204
  %101 = fmul fast <2 x double> %wide.load205, %wide.load205
  %102 = fadd fast <2 x double> %100, %vec.phi202
  %103 = fadd fast <2 x double> %101, %vec.phi203
  %index.next197 = add i64 %index196, 4
  %104 = icmp eq i64 %index.next197, %n.vec195
  br i1 %104, label %middle.block189, label %vector.body191, !llvm.loop !135

middle.block189:                                  ; preds = %vector.body191
  %bin.rdx206 = fadd fast <2 x double> %103, %102
  %105 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx206)
  br i1 %cmp.n200, label %sqnorm.exit, label %for.body.i114.preheader308

for.body.i114.preheader308:                       ; preds = %for.body.i114.preheader, %middle.block189
  %indvars.iv.i109.ph = phi i64 [ 1, %for.body.i114.preheader ], [ %ind.end199, %middle.block189 ]
  %res.012.i.ph = phi double [ %mul.i105, %for.body.i114.preheader ], [ %105, %middle.block189 ]
  br label %for.body.i114

for.body.i114:                                    ; preds = %for.body.i114.preheader308, %for.body.i114
  %indvars.iv.i109 = phi i64 [ %indvars.iv.next.i112, %for.body.i114 ], [ %indvars.iv.i109.ph, %for.body.i114.preheader308 ]
  %res.012.i = phi double [ %add.i111, %for.body.i114 ], [ %res.012.i.ph, %for.body.i114.preheader308 ]
  %arrayidx2.i110 = getelementptr inbounds double, double* %3, i64 %indvars.iv.i109
  %106 = load double, double* %arrayidx2.i110, align 8, !tbaa !70
  %mul5.i = fmul fast double %106, %106
  %add.i111 = fadd fast double %mul5.i, %res.012.i
  %indvars.iv.next.i112 = add nuw nsw i64 %indvars.iv.i109, 1
  %exitcond.not.i113 = icmp eq i64 %indvars.iv.next.i112, %wide.trip.count.i61
  br i1 %exitcond.not.i113, label %sqnorm.exit, label %for.body.i114, !llvm.loop !136

sqnorm.exit:                                      ; preds = %for.body.i114, %middle.block189, %Qtimesx.exit
  %res.0.lcssa.i = phi double [ %mul.i105, %Qtimesx.exit ], [ %105, %middle.block189 ], [ %add.i111, %for.body.i114 ]
  %mul47.neg = fmul fast double %res.0.lcssa.i, -5.000000e-01
  %sub48 = fadd fast double %add44, %mul47.neg
  %arrayidx49 = getelementptr inbounds double, double* %4, i64 %ik.0135
  store double %sub48, double* %arrayidx49, align 8, !tbaa !70
  %inc = add nuw nsw i64 %ik.0135, 1
  %exitcond.not = icmp eq i64 %inc, %conv8
  br i1 %exitcond.not, label %for.end.loopexit, label %for.body25, !llvm.loop !137

for.end.loopexit:                                 ; preds = %sqnorm.exit
  %.pre149 = load double, double* %4, align 8, !tbaa !70
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.cond22.preheader
  %107 = phi double [ %.pre149, %for.end.loopexit ], [ %32, %for.cond22.preheader ]
  %108 = phi double [ %92, %for.end.loopexit ], [ %33, %for.cond22.preheader ]
  br i1 %cmp9.i.i76, label %for.body.i.i86.preheader, label %arr_max.exit.i89

for.body.i.i86.preheader:                         ; preds = %for.end
  br i1 %min.iters.check174, label %for.body.i.i86.preheader312, label %vector.ph175

vector.ph175:                                     ; preds = %for.body.i.i86.preheader
  %minmax.ident.splatinsert = insertelement <2 x double> poison, double %107, i32 0
  %minmax.ident.splat = shufflevector <2 x double> %minmax.ident.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body173

vector.body173:                                   ; preds = %vector.body173, %vector.ph175
  %index178 = phi i64 [ 0, %vector.ph175 ], [ %index.next179, %vector.body173 ]
  %vec.phi184 = phi <2 x double> [ %minmax.ident.splat, %vector.ph175 ], [ %115, %vector.body173 ]
  %vec.phi185 = phi <2 x double> [ %minmax.ident.splat, %vector.ph175 ], [ %116, %vector.body173 ]
  %offset.idx183 = or i64 %index178, 1
  %109 = getelementptr inbounds double, double* %4, i64 %offset.idx183
  %110 = bitcast double* %109 to <2 x double>*
  %wide.load186 = load <2 x double>, <2 x double>* %110, align 8, !tbaa !70
  %111 = getelementptr inbounds double, double* %109, i64 2
  %112 = bitcast double* %111 to <2 x double>*
  %wide.load187 = load <2 x double>, <2 x double>* %112, align 8, !tbaa !70
  %113 = fcmp fast olt <2 x double> %vec.phi184, %wide.load186
  %114 = fcmp fast olt <2 x double> %vec.phi185, %wide.load187
  %115 = select <2 x i1> %113, <2 x double> %wide.load186, <2 x double> %vec.phi184
  %116 = select <2 x i1> %114, <2 x double> %wide.load187, <2 x double> %vec.phi185
  %index.next179 = add i64 %index178, 4
  %117 = icmp eq i64 %index.next179, %n.vec177
  br i1 %117, label %middle.block171, label %vector.body173, !llvm.loop !138

middle.block171:                                  ; preds = %vector.body173
  %118 = call fast <2 x double> @llvm.maxnum.v2f64(<2 x double> %115, <2 x double> %116)
  %119 = call double @llvm.vector.reduce.fmax.v2f64(<2 x double> %118)
  br i1 %cmp.n182, label %arr_max.exit.i89, label %for.body.i.i86.preheader312

for.body.i.i86.preheader312:                      ; preds = %for.body.i.i86.preheader, %middle.block171
  %indvars.iv.i.i79.ph = phi i64 [ 1, %for.body.i.i86.preheader ], [ %ind.end181, %middle.block171 ]
  %m.011.i.i80.ph = phi double [ %107, %for.body.i.i86.preheader ], [ %119, %middle.block171 ]
  br label %for.body.i.i86

for.body.i.i86:                                   ; preds = %for.body.i.i86.preheader312, %for.body.i.i86
  %indvars.iv.i.i79 = phi i64 [ %indvars.iv.next.i.i84, %for.body.i.i86 ], [ %indvars.iv.i.i79.ph, %for.body.i.i86.preheader312 ]
  %m.011.i.i80 = phi double [ %m.1.i.i83, %for.body.i.i86 ], [ %m.011.i.i80.ph, %for.body.i.i86.preheader312 ]
  %arrayidx1.i.i81 = getelementptr inbounds double, double* %4, i64 %indvars.iv.i.i79
  %120 = load double, double* %arrayidx1.i.i81, align 8, !tbaa !70
  %cmp2.i.i82 = fcmp fast olt double %m.011.i.i80, %120
  %m.1.i.i83 = select i1 %cmp2.i.i82, double %120, double %m.011.i.i80
  %indvars.iv.next.i.i84 = add nuw nsw i64 %indvars.iv.i.i79, 1
  %exitcond.not.i.i85 = icmp eq i64 %indvars.iv.next.i.i84, %wide.trip.count.i.i77
  br i1 %exitcond.not.i.i85, label %arr_max.exit.i89, label %for.body.i.i86, !llvm.loop !139

arr_max.exit.i89:                                 ; preds = %for.body.i.i86, %middle.block171, %for.end
  %m.0.lcssa.i.i87 = phi double [ %107, %for.end ], [ %119, %middle.block171 ], [ %m.1.i.i83, %for.body.i.i86 ]
  br i1 %cmp22.i, label %for.body.preheader.i91, label %log_sum_exp.exit104

for.body.preheader.i91:                           ; preds = %arr_max.exit.i89
  %sub.i94137 = fsub fast double %107, %m.0.lcssa.i.i87
  %121 = tail call fast double @llvm.exp.f64(double %sub.i94137) #38
  br i1 %exitcond.not.i97139, label %log_sum_exp.exit104, label %for.body.for.body_crit_edge.i101.preheader, !llvm.loop !95

for.body.for.body_crit_edge.i101.preheader:       ; preds = %for.body.preheader.i91
  br i1 %min.iters.check155, label %for.body.for.body_crit_edge.i101.preheader311, label %vector.ph156

vector.ph156:                                     ; preds = %for.body.for.body_crit_edge.i101.preheader
  %122 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %121, i32 0
  %broadcast.splatinsert = insertelement <2 x double> poison, double %m.0.lcssa.i.i87, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert167 = insertelement <2 x double> poison, double %m.0.lcssa.i.i87, i32 0
  %broadcast.splat168 = shufflevector <2 x double> %broadcast.splatinsert167, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body154

vector.body154:                                   ; preds = %vector.body154, %vector.ph156
  %index159 = phi i64 [ 0, %vector.ph156 ], [ %index.next160, %vector.body154 ]
  %vec.phi163 = phi <2 x double> [ %122, %vector.ph156 ], [ %131, %vector.body154 ]
  %vec.phi164 = phi <2 x double> [ zeroinitializer, %vector.ph156 ], [ %132, %vector.body154 ]
  %offset.idx = or i64 %index159, 1
  %123 = getelementptr inbounds double, double* %4, i64 %offset.idx
  %124 = bitcast double* %123 to <2 x double>*
  %wide.load165 = load <2 x double>, <2 x double>* %124, align 8, !tbaa !70
  %125 = getelementptr inbounds double, double* %123, i64 2
  %126 = bitcast double* %125 to <2 x double>*
  %wide.load166 = load <2 x double>, <2 x double>* %126, align 8, !tbaa !70
  %127 = fsub fast <2 x double> %wide.load165, %broadcast.splat
  %128 = fsub fast <2 x double> %wide.load166, %broadcast.splat168
  %129 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %127)
  %130 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %128)
  %131 = fadd fast <2 x double> %129, %vec.phi163
  %132 = fadd fast <2 x double> %130, %vec.phi164
  %index.next160 = add i64 %index159, 4
  %133 = icmp eq i64 %index.next160, %n.vec158
  br i1 %133, label %middle.block152, label %vector.body154, !llvm.loop !140

middle.block152:                                  ; preds = %vector.body154
  %bin.rdx169 = fadd fast <2 x double> %132, %131
  %134 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx169)
  br i1 %cmp.n162, label %log_sum_exp.exit104, label %for.body.for.body_crit_edge.i101.preheader311

for.body.for.body_crit_edge.i101.preheader311:    ; preds = %for.body.for.body_crit_edge.i101.preheader, %middle.block152
  %indvars.iv.next.i96141.ph = phi i64 [ 1, %for.body.for.body_crit_edge.i101.preheader ], [ %ind.end, %middle.block152 ]
  %add.i95140.ph = phi double [ %121, %for.body.for.body_crit_edge.i101.preheader ], [ %134, %middle.block152 ]
  br label %for.body.for.body_crit_edge.i101

for.body.for.body_crit_edge.i101:                 ; preds = %for.body.for.body_crit_edge.i101.preheader311, %for.body.for.body_crit_edge.i101
  %indvars.iv.next.i96141 = phi i64 [ %indvars.iv.next.i96, %for.body.for.body_crit_edge.i101 ], [ %indvars.iv.next.i96141.ph, %for.body.for.body_crit_edge.i101.preheader311 ]
  %add.i95140 = phi double [ %add.i95, %for.body.for.body_crit_edge.i101 ], [ %add.i95140.ph, %for.body.for.body_crit_edge.i101.preheader311 ]
  %arrayidx.phi.trans.insert.i99 = getelementptr inbounds double, double* %4, i64 %indvars.iv.next.i96141
  %.pre.i100 = load double, double* %arrayidx.phi.trans.insert.i99, align 8, !tbaa !70
  %sub.i94 = fsub fast double %.pre.i100, %m.0.lcssa.i.i87
  %135 = tail call fast double @llvm.exp.f64(double %sub.i94) #38
  %add.i95 = fadd fast double %135, %add.i95140
  %indvars.iv.next.i96 = add nuw nsw i64 %indvars.iv.next.i96141, 1
  %exitcond.not.i97 = icmp eq i64 %indvars.iv.next.i96, %wide.trip.count.i.i77
  br i1 %exitcond.not.i97, label %log_sum_exp.exit104, label %for.body.for.body_crit_edge.i101, !llvm.loop !141

log_sum_exp.exit104:                              ; preds = %for.body.for.body_crit_edge.i101, %middle.block152, %for.body.preheader.i91, %arr_max.exit.i89
  %semx.0.lcssa.i102 = phi double [ 0.000000e+00, %arr_max.exit.i89 ], [ %121, %for.body.preheader.i91 ], [ %134, %middle.block152 ], [ %add.i95, %for.body.for.body_crit_edge.i101 ]
  %136 = tail call fast double @llvm.log.f64(double %semx.0.lcssa.i102) #38
  %add1.i103 = fadd fast double %m.0.lcssa.i.i87, %slse.0144
  %add52 = fadd fast double %add1.i103, %136
  %inc54 = add nuw nsw i64 %ix.0145, 1
  %exitcond148.not = icmp eq i64 %inc54, %conv21
  br i1 %exitcond148.not, label %for.end55, label %for.cond22.preheader, !llvm.loop !142

for.end55:                                        ; preds = %log_sum_exp.exit104, %preprocess_qs.exit
  %slse.0.lcssa = phi double [ 0.000000e+00, %preprocess_qs.exit ], [ %add52, %log_sum_exp.exit104 ]
  %137 = load double, double* %alphas, align 8, !tbaa !70
  %cmp9.i.i = icmp sgt i32 %k, 1
  br i1 %cmp9.i.i, label %for.body.preheader.i.i, label %arr_max.exit.i

for.body.preheader.i.i:                           ; preds = %for.end55
  %wide.trip.count.i.i = zext i32 %k to i64
  %138 = add nsw i64 %wide.trip.count.i.i, -1
  %min.iters.check265 = icmp ult i64 %138, 4
  br i1 %min.iters.check265, label %for.body.i.i.preheader, label %vector.ph266

vector.ph266:                                     ; preds = %for.body.preheader.i.i
  %n.vec268 = and i64 %138, -4
  %ind.end272 = or i64 %n.vec268, 1
  %minmax.ident.splatinsert275 = insertelement <2 x double> poison, double %137, i32 0
  %minmax.ident.splat276 = shufflevector <2 x double> %minmax.ident.splatinsert275, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body264

vector.body264:                                   ; preds = %vector.body264, %vector.ph266
  %index269 = phi i64 [ 0, %vector.ph266 ], [ %index.next270, %vector.body264 ]
  %vec.phi277 = phi <2 x double> [ %minmax.ident.splat276, %vector.ph266 ], [ %145, %vector.body264 ]
  %vec.phi278 = phi <2 x double> [ %minmax.ident.splat276, %vector.ph266 ], [ %146, %vector.body264 ]
  %offset.idx274 = or i64 %index269, 1
  %139 = getelementptr inbounds double, double* %alphas, i64 %offset.idx274
  %140 = bitcast double* %139 to <2 x double>*
  %wide.load279 = load <2 x double>, <2 x double>* %140, align 8, !tbaa !70
  %141 = getelementptr inbounds double, double* %139, i64 2
  %142 = bitcast double* %141 to <2 x double>*
  %wide.load280 = load <2 x double>, <2 x double>* %142, align 8, !tbaa !70
  %143 = fcmp fast olt <2 x double> %vec.phi277, %wide.load279
  %144 = fcmp fast olt <2 x double> %vec.phi278, %wide.load280
  %145 = select <2 x i1> %143, <2 x double> %wide.load279, <2 x double> %vec.phi277
  %146 = select <2 x i1> %144, <2 x double> %wide.load280, <2 x double> %vec.phi278
  %index.next270 = add i64 %index269, 4
  %147 = icmp eq i64 %index.next270, %n.vec268
  br i1 %147, label %middle.block262, label %vector.body264, !llvm.loop !143

middle.block262:                                  ; preds = %vector.body264
  %148 = call fast <2 x double> @llvm.maxnum.v2f64(<2 x double> %145, <2 x double> %146)
  %149 = call double @llvm.vector.reduce.fmax.v2f64(<2 x double> %148)
  %cmp.n273 = icmp eq i64 %138, %n.vec268
  br i1 %cmp.n273, label %arr_max.exit.i, label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %for.body.preheader.i.i, %middle.block262
  %indvars.iv.i.i.ph = phi i64 [ 1, %for.body.preheader.i.i ], [ %ind.end272, %middle.block262 ]
  %m.011.i.i.ph = phi double [ %137, %for.body.preheader.i.i ], [ %149, %middle.block262 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %for.body.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %for.body.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %m.011.i.i = phi double [ %m.1.i.i, %for.body.i.i ], [ %m.011.i.i.ph, %for.body.i.i.preheader ]
  %arrayidx1.i.i = getelementptr inbounds double, double* %alphas, i64 %indvars.iv.i.i
  %150 = load double, double* %arrayidx1.i.i, align 8, !tbaa !70
  %cmp2.i.i = fcmp fast olt double %m.011.i.i, %150
  %m.1.i.i = select i1 %cmp2.i.i, double %150, double %m.011.i.i
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %arr_max.exit.i, label %for.body.i.i, !llvm.loop !144

arr_max.exit.i:                                   ; preds = %for.body.i.i, %middle.block262, %for.end55
  %m.0.lcssa.i.i = phi double [ %137, %for.end55 ], [ %149, %middle.block262 ], [ %m.1.i.i, %for.body.i.i ]
  br i1 %cmp22.i, label %for.body.preheader.i68, label %log_sum_exp.exit

for.body.preheader.i68:                           ; preds = %arr_max.exit.i
  %wide.trip.count.i67 = zext i32 %k to i64
  %sub.i70130 = fsub fast double %137, %m.0.lcssa.i.i
  %151 = tail call fast double @llvm.exp.f64(double %sub.i70130) #38
  %exitcond.not.i73131 = icmp eq i32 %k, 1
  br i1 %exitcond.not.i73131, label %log_sum_exp.exit, label %for.body.for.body_crit_edge.i.preheader, !llvm.loop !95

for.body.for.body_crit_edge.i.preheader:          ; preds = %for.body.preheader.i68
  %152 = add nsw i64 %wide.trip.count.i67, -1
  %min.iters.check287 = icmp ult i64 %152, 4
  br i1 %min.iters.check287, label %for.body.for.body_crit_edge.i.preheader307, label %vector.ph288

vector.ph288:                                     ; preds = %for.body.for.body_crit_edge.i.preheader
  %n.vec290 = and i64 %152, -4
  %ind.end294 = or i64 %n.vec290, 1
  %153 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %151, i32 0
  %broadcast.splatinsert301 = insertelement <2 x double> poison, double %m.0.lcssa.i.i, i32 0
  %broadcast.splat302 = shufflevector <2 x double> %broadcast.splatinsert301, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert303 = insertelement <2 x double> poison, double %m.0.lcssa.i.i, i32 0
  %broadcast.splat304 = shufflevector <2 x double> %broadcast.splatinsert303, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body286

vector.body286:                                   ; preds = %vector.body286, %vector.ph288
  %index291 = phi i64 [ 0, %vector.ph288 ], [ %index.next292, %vector.body286 ]
  %vec.phi297 = phi <2 x double> [ %153, %vector.ph288 ], [ %162, %vector.body286 ]
  %vec.phi298 = phi <2 x double> [ zeroinitializer, %vector.ph288 ], [ %163, %vector.body286 ]
  %offset.idx296 = or i64 %index291, 1
  %154 = getelementptr inbounds double, double* %alphas, i64 %offset.idx296
  %155 = bitcast double* %154 to <2 x double>*
  %wide.load299 = load <2 x double>, <2 x double>* %155, align 8, !tbaa !70
  %156 = getelementptr inbounds double, double* %154, i64 2
  %157 = bitcast double* %156 to <2 x double>*
  %wide.load300 = load <2 x double>, <2 x double>* %157, align 8, !tbaa !70
  %158 = fsub fast <2 x double> %wide.load299, %broadcast.splat302
  %159 = fsub fast <2 x double> %wide.load300, %broadcast.splat304
  %160 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %158)
  %161 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %159)
  %162 = fadd fast <2 x double> %160, %vec.phi297
  %163 = fadd fast <2 x double> %161, %vec.phi298
  %index.next292 = add i64 %index291, 4
  %164 = icmp eq i64 %index.next292, %n.vec290
  br i1 %164, label %middle.block284, label %vector.body286, !llvm.loop !145

middle.block284:                                  ; preds = %vector.body286
  %bin.rdx305 = fadd fast <2 x double> %163, %162
  %165 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx305)
  %cmp.n295 = icmp eq i64 %152, %n.vec290
  br i1 %cmp.n295, label %log_sum_exp.exit, label %for.body.for.body_crit_edge.i.preheader307

for.body.for.body_crit_edge.i.preheader307:       ; preds = %for.body.for.body_crit_edge.i.preheader, %middle.block284
  %indvars.iv.next.i72133.ph = phi i64 [ 1, %for.body.for.body_crit_edge.i.preheader ], [ %ind.end294, %middle.block284 ]
  %add.i71132.ph = phi double [ %151, %for.body.for.body_crit_edge.i.preheader ], [ %165, %middle.block284 ]
  br label %for.body.for.body_crit_edge.i

for.body.for.body_crit_edge.i:                    ; preds = %for.body.for.body_crit_edge.i.preheader307, %for.body.for.body_crit_edge.i
  %indvars.iv.next.i72133 = phi i64 [ %indvars.iv.next.i72, %for.body.for.body_crit_edge.i ], [ %indvars.iv.next.i72133.ph, %for.body.for.body_crit_edge.i.preheader307 ]
  %add.i71132 = phi double [ %add.i71, %for.body.for.body_crit_edge.i ], [ %add.i71132.ph, %for.body.for.body_crit_edge.i.preheader307 ]
  %arrayidx.phi.trans.insert.i = getelementptr inbounds double, double* %alphas, i64 %indvars.iv.next.i72133
  %.pre.i75 = load double, double* %arrayidx.phi.trans.insert.i, align 8, !tbaa !70
  %sub.i70 = fsub fast double %.pre.i75, %m.0.lcssa.i.i
  %166 = tail call fast double @llvm.exp.f64(double %sub.i70) #38
  %add.i71 = fadd fast double %166, %add.i71132
  %indvars.iv.next.i72 = add nuw nsw i64 %indvars.iv.next.i72133, 1
  %exitcond.not.i73 = icmp eq i64 %indvars.iv.next.i72, %wide.trip.count.i67
  br i1 %exitcond.not.i73, label %log_sum_exp.exit, label %for.body.for.body_crit_edge.i, !llvm.loop !146

log_sum_exp.exit:                                 ; preds = %for.body.for.body_crit_edge.i, %middle.block284, %for.body.preheader.i68, %arr_max.exit.i
  %semx.0.lcssa.i = phi double [ 0.000000e+00, %arr_max.exit.i ], [ %151, %for.body.preheader.i68 ], [ %165, %middle.block284 ], [ %add.i71, %for.body.for.body_crit_edge.i ]
  %167 = mul i32 %d, %n
  %mul = sub i32 0, %167
  %conv = sitofp i32 %mul to double
  %mul2 = fmul fast double %conv, 0x3FED67F1C864BFDD
  %168 = tail call fast double @llvm.log.f64(double %semx.0.lcssa.i) #38
  %add1.i = fadd fast double %168, %m.0.lcssa.i.i
  %add57 = fadd fast double %slse.0.lcssa, %mul2
  %conv58 = sitofp i32 %n to double
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i64 0, i32 0
  %agg.tmp.sroa.0.0.copyload = load double, double* %agg.tmp.sroa.0.0..sroa_idx, align 8, !tbaa.struct !147
  %agg.tmp.sroa.2.0..sroa_idx1 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i64 0, i32 1
  %agg.tmp.sroa.2.0.copyload = load i32, i32* %agg.tmp.sroa.2.0..sroa_idx1, align 8, !tbaa.struct !148
  %call63 = tail call fast double @log_wishart_prior(i32 %d, i32 %k, double %agg.tmp.sroa.0.0.copyload, i32 %agg.tmp.sroa.2.0.copyload, double* %1, double* %0, double* %icf)
  %sub60 = fadd fast double %add57, %call63
  %169 = fmul fast double %add1.i, %conv58
  %add64 = fsub fast double %sub60, %169
  store double %add64, double* %err, align 8, !tbaa !70
  tail call void @free(i8* %call) #38
  tail call void @free(i8* %call10) #38
  tail call void @free(i8* %call13) #38
  tail call void @free(i8* %call16) #38
  tail call void @free(i8* %call19) #38
  ret void
}

; Function Attrs: inaccessiblememonly nofree nounwind willreturn
declare dso_local noalias noundef i8* @malloc(i64) local_unnamed_addr #20

; Function Attrs: inaccessiblemem_or_argmemonly nounwind willreturn
declare dso_local void @free(i8* nocapture noundef) local_unnamed_addr #21

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @dgmm_objective(i32 %d, i32 %k, i32 %n, double* nocapture readonly %alphas, double* nocapture %alphasb, double* nocapture readonly %means, double* nocapture %meansb, double* nocapture readonly %icf, double* nocapture %icfb, double* nocapture readonly %x, %struct.Wishart* nocapture readonly byval(%struct.Wishart) align 8 %wishart, double* nocapture readnone %err, double* nocapture %errb) local_unnamed_addr #6 {
entry:
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i64 0, i32 0
  %agg.tmp.sroa.0.0.copyload = load double, double* %agg.tmp.sroa.0.0..sroa_idx, align 8, !tbaa.struct !147
  %agg.tmp.sroa.2.0..sroa_idx7 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i64 0, i32 1
  %agg.tmp.sroa.2.0.copyload = load i32, i32* %agg.tmp.sroa.2.0..sroa_idx7, align 8, !tbaa.struct !148
  tail call void @llvm.experimental.noalias.scope.decl(metadata !149)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !152)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !154)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !156)
  %add.i = add i32 %d, 1
  %mul3.i = mul nsw i32 %add.i, %d
  %div.i = sdiv i32 %mul3.i, 2
  %conv4.i = sext i32 %div.i to i64
  %mul5.i = mul nsw i32 %k, %d
  %conv6.i = sext i32 %mul5.i to i64
  %mul7.i = shl nsw i64 %conv6.i, 3
  %call.i = tail call noalias i8* @malloc(i64 %mul7.i) #38, !noalias !158
  %"call'mi.i" = tail call noalias nonnull i8* @malloc(i64 %mul7.i) #38, !noalias !158
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %"call'mi.i", i8 0, i64 %mul7.i, i1 false) #38, !noalias !158
  %"'ipc4.i" = bitcast i8* %"call'mi.i" to double*
  %0 = bitcast i8* %call.i to double*
  %conv8.i = sext i32 %k to i64
  %mul9.i = shl nsw i64 %conv8.i, 3
  %call10.i = tail call noalias i8* @malloc(i64 %mul9.i) #38, !noalias !158
  %"call10'mi.i" = tail call noalias nonnull i8* @malloc(i64 %mul9.i) #38, !noalias !158
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %"call10'mi.i", i8 0, i64 %mul9.i, i1 false) #38, !noalias !158
  %"'ipc.i" = bitcast i8* %"call10'mi.i" to double*
  %1 = bitcast i8* %call10.i to double*
  %conv11.i = sext i32 %d to i64
  %mul12.i = shl nsw i64 %conv11.i, 3
  %call13.i = tail call noalias i8* @malloc(i64 %mul12.i) #38, !noalias !158
  %"call13'mi.i" = tail call noalias nonnull i8* @malloc(i64 %mul12.i) #38, !noalias !158
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %"call13'mi.i", i8 0, i64 %mul12.i, i1 false) #38, !noalias !158
  %"'ipc11.i" = bitcast i8* %"call13'mi.i" to double*
  %2 = bitcast i8* %call13.i to double*
  %call16.i = tail call noalias i8* @malloc(i64 %mul12.i) #38, !noalias !158
  %"call16'mi.i" = tail call noalias nonnull i8* @malloc(i64 %mul12.i) #38, !noalias !158
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %"call16'mi.i", i8 0, i64 %mul12.i, i1 false) #38, !noalias !158
  %"'ipc6.i" = bitcast i8* %"call16'mi.i" to double*
  %3 = bitcast i8* %call16.i to double*
  %call19.i = tail call noalias i8* @malloc(i64 %mul9.i) #38, !noalias !158
  %"call19'mi.i" = tail call noalias nonnull i8* @malloc(i64 %mul9.i) #38, !noalias !158
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %"call19'mi.i", i8 0, i64 %mul9.i, i1 false) #38, !noalias !158
  %"'ipc5.i" = bitcast i8* %"call19'mi.i" to double*
  %4 = bitcast i8* %call19.i to double*
  %5 = icmp sgt i32 %k, 0
  %6 = icmp sgt i32 %d, 0
  %k.op.i.i = add i32 %k, 1
  %narrow.i.i = select i1 %5, i32 %k.op.i.i, i32 1
  %7 = zext i32 %narrow.i.i to i64
  %narrow1.i.i = select i1 %6, i32 %add.i, i32 1
  %8 = zext i32 %narrow1.i.i to i64
  %9 = shl nuw nsw i64 %8, 3
  %mallocsize.i.i = mul i64 %9, %7
  %malloccall.i.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i.i) #38, !noalias !158
  %_malloccache.i.i = bitcast i8* %malloccall.i.i to double*
  br i1 %5, label %for.body.lr.ph.i.i, label %augmented_preprocess_qs.exit.i

for.body.lr.ph.i.i:                               ; preds = %entry
  %wide.trip.count12.i.i = zext i32 %k to i64
  %wide.trip.count.i.i = zext i32 %d to i64
  %10 = shl nuw nsw i64 %wide.trip.count.i.i, 3
  %min.iters.check = icmp ult i32 %d, 4
  %n.vec = and i64 %wide.trip.count.i.i, 4294967292
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i
  br label %for.body.i.i

for.cond.loopexit.i.loopexit.i:                   ; preds = %for.body3.i.i, %middle.block
  %add10.i.i.lcssa = phi double [ %29, %middle.block ], [ %add10.i.i, %for.body3.i.i ]
  store double %add10.i.i.lcssa, double* %arrayidx.i.i, align 8, !tbaa !70, !noalias !158
  br label %for.cond.loopexit.i.i

for.cond.loopexit.i.i:                            ; preds = %for.body.i.i, %for.cond.loopexit.i.loopexit.i
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond13.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count12.i.i
  br i1 %exitcond13.not.i.i, label %augmented_preprocess_qs.exit.i, label %for.body.i.i, !llvm.loop !105

for.body.i.i:                                     ; preds = %for.cond.loopexit.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.cond.loopexit.i.i ]
  %11 = mul nsw i64 %indvars.iv.i.i, %conv4.i
  %sext.i.i = shl i64 %indvars.iv.i.i, 32
  %idxprom.i.i = ashr exact i64 %sext.i.i, 32
  %arrayidx.i.i = getelementptr inbounds double, double* %1, i64 %idxprom.i.i
  store double 0.000000e+00, double* %arrayidx.i.i, align 8, !tbaa !70, !noalias !158
  br i1 %6, label %for.body3.lr.ph.i.i, label %for.cond.loopexit.i.i

for.body3.lr.ph.i.i:                              ; preds = %for.body.i.i
  %scevgep236.i = getelementptr double, double* %icf, i64 %11
  %scevgep236237.i = bitcast double* %scevgep236.i to i8*
  %12 = mul i64 %indvars.iv.i.i, %9
  %scevgep.i = getelementptr i8, i8* %malloccall.i.i, i64 %12
  %13 = mul nsw i64 %indvars.iv.i.i, %conv11.i
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %scevgep.i, i8* align 8 %scevgep236237.i, i64 %10, i1 false) #38, !noalias !159
  br i1 %min.iters.check, label %for.body3.i.i.preheader, label %vector.body

vector.body:                                      ; preds = %for.body3.lr.ph.i.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body3.lr.ph.i.i ]
  %vec.phi = phi <2 x double> [ %19, %vector.body ], [ zeroinitializer, %for.body3.lr.ph.i.i ]
  %vec.phi24 = phi <2 x double> [ %20, %vector.body ], [ zeroinitializer, %for.body3.lr.ph.i.i ]
  %14 = add nsw i64 %index, %11
  %15 = getelementptr inbounds double, double* %icf, i64 %14
  %16 = bitcast double* %15 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %16, align 8, !tbaa !70, !alias.scope !154, !noalias !159
  %17 = getelementptr inbounds double, double* %15, i64 2
  %18 = bitcast double* %17 to <2 x double>*
  %wide.load25 = load <2 x double>, <2 x double>* %18, align 8, !tbaa !70, !alias.scope !154, !noalias !159
  %19 = fadd fast <2 x double> %wide.load, %vec.phi
  %20 = fadd fast <2 x double> %wide.load25, %vec.phi24
  %21 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %wide.load)
  %22 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %wide.load25)
  %23 = add nsw i64 %index, %13
  %24 = getelementptr inbounds double, double* %0, i64 %23
  %25 = bitcast double* %24 to <2 x double>*
  store <2 x double> %21, <2 x double>* %25, align 8, !tbaa !70, !noalias !158
  %26 = getelementptr inbounds double, double* %24, i64 2
  %27 = bitcast double* %26 to <2 x double>*
  store <2 x double> %22, <2 x double>* %27, align 8, !tbaa !70, !noalias !158
  %index.next = add i64 %index, 4
  %28 = icmp eq i64 %index.next, %n.vec
  br i1 %28, label %middle.block, label %vector.body, !llvm.loop !160

middle.block:                                     ; preds = %vector.body
  %bin.rdx = fadd fast <2 x double> %20, %19
  %29 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  br i1 %cmp.n, label %for.cond.loopexit.i.loopexit.i, label %for.body3.i.i.preheader

for.body3.i.i.preheader:                          ; preds = %for.body3.lr.ph.i.i, %middle.block
  %.ph = phi double [ 0.000000e+00, %for.body3.lr.ph.i.i ], [ %29, %middle.block ]
  %iv13.i.i.ph = phi i64 [ 0, %for.body3.lr.ph.i.i ], [ %n.vec, %middle.block ]
  br label %for.body3.i.i

for.body3.i.i:                                    ; preds = %for.body3.i.i.preheader, %for.body3.i.i
  %30 = phi double [ %add10.i.i, %for.body3.i.i ], [ %.ph, %for.body3.i.i.preheader ]
  %iv13.i.i = phi i64 [ %iv.next2.i.i, %for.body3.i.i ], [ %iv13.i.i.ph, %for.body3.i.i.preheader ]
  %iv.next2.i.i = add nuw nsw i64 %iv13.i.i, 1
  %31 = add nsw i64 %iv13.i.i, %11
  %arrayidx7.i.i = getelementptr inbounds double, double* %icf, i64 %31
  %32 = load double, double* %arrayidx7.i.i, align 8, !tbaa !70, !alias.scope !154, !noalias !159
  %add10.i.i = fadd fast double %32, %30
  %33 = tail call fast double @llvm.exp.f64(double %32) #38
  %34 = add nsw i64 %iv13.i.i, %13
  %arrayidx16.i.i = getelementptr inbounds double, double* %0, i64 %34
  store double %33, double* %arrayidx16.i.i, align 8, !tbaa !70, !noalias !158
  %exitcond.not.i.i = icmp eq i64 %iv.next2.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.cond.loopexit.i.loopexit.i, label %for.body3.i.i, !llvm.loop !161

augmented_preprocess_qs.exit.i:                   ; preds = %for.cond.loopexit.i.i, %entry
  %35 = sext i32 %n to i64
  %36 = icmp sgt i64 %35, 0
  %smax.i = select i1 %36, i64 %35, i64 0
  %37 = icmp sgt i64 %conv8.i, 0
  %smax3.i = select i1 %37, i64 %conv8.i, i64 0
  %38 = add nuw nsw i64 %smax.i, 1
  %39 = add nuw nsw i64 %smax3.i, 1
  %40 = shl nsw i64 %39, 5
  %mallocsize.i = mul i64 %40, %38
  %malloccall.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i) #38, !noalias !158
  %subcache_malloccache.i = bitcast i8* %malloccall.i to { double, double, double*, double* }*
  %malloccall14.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i) #38, !noalias !158
  %_augmented12_malloccache.i = bitcast i8* %malloccall14.i to { double*, double*, double**, double** }*
  %mallocsize16.i = mul nuw nsw i64 %38, 24
  %malloccall17.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize16.i) #38, !noalias !158
  %call51_augmented_malloccache.i = bitcast i8* %malloccall17.i to { i1*, double*, double* }*
  %cmp226.i = icmp sgt i32 %n, 0
  br i1 %cmp226.i, label %for.cond22.preheader.lr.ph.i, label %augmented_preprocess_qs.exit.for.end55_crit_edge.i

augmented_preprocess_qs.exit.for.end55_crit_edge.i: ; preds = %augmented_preprocess_qs.exit.i
  %.pre238.i = add i32 %k, -1
  br label %for.end55.i

for.cond22.preheader.lr.ph.i:                     ; preds = %augmented_preprocess_qs.exit.i
  %wide.trip.count.i39.i = zext i32 %d to i64
  %mul8.i.i = shl nuw nsw i32 %d, 1
  %41 = icmp sgt i32 %d, 1
  %n.op.i.i = add i32 %d, -1
  %42 = select i1 %41, i32 %n.op.i.i, i32 0
  %43 = zext i32 %42 to i64
  %44 = shl nuw nsw i64 %43, 3
  %mallocsize.i72.i = add nuw nsw i64 %44, 8
  %scevgep.i.i = getelementptr i8, i8* %call16.i, i64 8
  %45 = zext i32 %n.op.i.i to i64
  %46 = shl nuw nsw i64 %45, 3
  %47 = icmp sgt i32 %k, 1
  %n.op.i.i.i = add i32 %k, -1
  %48 = select i1 %47, i32 %n.op.i.i.i, i32 0
  %49 = zext i32 %48 to i64
  %50 = add nuw nsw i64 %49, 1
  %wide.trip.count.i.i.i = zext i32 %k to i64
  %mallocsize.i88.i = shl nuw nsw i64 %7, 3
  %51 = add i32 %d, -2
  %52 = add nsw i64 %wide.trip.count.i39.i, -1
  %53 = add nsw i64 %wide.trip.count.i39.i, -2
  %54 = add nsw i64 %wide.trip.count.i39.i, -1
  %55 = add nsw i64 %wide.trip.count.i39.i, -1
  %min.iters.check65 = icmp ult i32 %d, 4
  %56 = icmp ugt i64 %55, 2147483647
  %or.cond = or i1 %min.iters.check65, %56
  %n.vec73 = and i64 %wide.trip.count.i39.i, 4294967292
  %cmp.n77 = icmp eq i64 %n.vec73, %wide.trip.count.i39.i
  %min.iters.check47 = icmp eq i32 %d, 1
  %57 = icmp ugt i64 %54, 2147483647
  %or.cond352 = or i1 %min.iters.check47, %57
  %n.vec55 = and i64 %wide.trip.count.i39.i, 4294967294
  %cmp.n59 = icmp eq i64 %n.vec55, %wide.trip.count.i39.i
  %min.iters.check29 = icmp ult i64 %52, 4
  %58 = trunc i64 %53 to i32
  %59 = add i32 %58, 1
  %60 = icmp slt i32 %59, 1
  %61 = icmp ugt i64 %53, 4294967295
  %62 = or i1 %60, %61
  %n.vec33 = and i64 %52, -4
  %ind.end = or i64 %n.vec33, 1
  %cmp.n37 = icmp eq i64 %52, %n.vec33
  br label %for.cond22.preheader.i

for.cond22.preheader.i:                           ; preds = %augmented_log_sum_exp.exit.i, %for.cond22.preheader.lr.ph.i
  %63 = phi double [ undef, %for.cond22.preheader.lr.ph.i ], [ %152, %augmented_log_sum_exp.exit.i ]
  %iv.next228.i = phi i64 [ 1, %for.cond22.preheader.lr.ph.i ], [ %iv.next.i, %augmented_log_sum_exp.exit.i ]
  %iv227.i = phi i64 [ 0, %for.cond22.preheader.lr.ph.i ], [ %iv.next228.i, %augmented_log_sum_exp.exit.i ]
  br i1 %5, label %for.body25.lr.ph.i, label %for.end.i

for.body25.lr.ph.i:                               ; preds = %for.cond22.preheader.i
  %mul27.i = mul nsw i64 %iv227.i, %conv11.i
  %arrayidx28.i = getelementptr inbounds double, double* %x, i64 %mul27.i
  %64 = mul nuw nsw i64 %iv227.i, %39
  br label %for.body25.i

for.body25.i:                                     ; preds = %augmented_sqnorm.exit.i, %for.body25.lr.ph.i
  %iv1225.i = phi i64 [ 0, %for.body25.lr.ph.i ], [ %iv.next2.i, %augmented_sqnorm.exit.i ]
  %iv.next2.i = add nuw nsw i64 %iv1225.i, 1
  %mul30.i = mul nsw i64 %iv1225.i, %conv11.i
  %arrayidx31.i = getelementptr inbounds double, double* %means, i64 %mul30.i
  br i1 %6, label %for.body.i44.i.preheader, label %augmented_subtract.exit.i

for.body.i44.i.preheader:                         ; preds = %for.body25.i
  br i1 %or.cond, label %for.body.i44.i.preheader358, label %vector.body64

vector.body64:                                    ; preds = %for.body.i44.i.preheader, %vector.body64
  %index74 = phi i64 [ %index.next75, %vector.body64 ], [ 0, %for.body.i44.i.preheader ]
  %65 = shl i64 %index74, 32
  %66 = ashr exact i64 %65, 32
  %67 = getelementptr inbounds double, double* %arrayidx28.i, i64 %66
  %68 = bitcast double* %67 to <2 x double>*
  %wide.load78 = load <2 x double>, <2 x double>* %68, align 8, !tbaa !70, !alias.scope !156, !noalias !162
  %69 = getelementptr inbounds double, double* %67, i64 2
  %70 = bitcast double* %69 to <2 x double>*
  %wide.load79 = load <2 x double>, <2 x double>* %70, align 8, !tbaa !70, !alias.scope !156, !noalias !162
  %71 = getelementptr inbounds double, double* %arrayidx31.i, i64 %66
  %72 = bitcast double* %71 to <2 x double>*
  %wide.load80 = load <2 x double>, <2 x double>* %72, align 8, !tbaa !70, !alias.scope !152, !noalias !163
  %73 = getelementptr inbounds double, double* %71, i64 2
  %74 = bitcast double* %73 to <2 x double>*
  %wide.load81 = load <2 x double>, <2 x double>* %74, align 8, !tbaa !70, !alias.scope !152, !noalias !163
  %75 = fsub fast <2 x double> %wide.load78, %wide.load80
  %76 = fsub fast <2 x double> %wide.load79, %wide.load81
  %77 = getelementptr inbounds double, double* %2, i64 %66
  %78 = bitcast double* %77 to <2 x double>*
  store <2 x double> %75, <2 x double>* %78, align 8, !tbaa !70, !noalias !158
  %79 = getelementptr inbounds double, double* %77, i64 2
  %80 = bitcast double* %79 to <2 x double>*
  store <2 x double> %76, <2 x double>* %80, align 8, !tbaa !70, !noalias !158
  %index.next75 = add i64 %index74, 4
  %81 = icmp eq i64 %index.next75, %n.vec73
  br i1 %81, label %middle.block62, label %vector.body64, !llvm.loop !164

middle.block62:                                   ; preds = %vector.body64
  br i1 %cmp.n77, label %augmented_subtract.exit.i, label %for.body.i44.i.preheader358

for.body.i44.i.preheader358:                      ; preds = %for.body.i44.i.preheader, %middle.block62
  %iv2.i.i.ph = phi i64 [ 0, %for.body.i44.i.preheader ], [ %n.vec73, %middle.block62 ]
  br label %for.body.i44.i

for.body.i44.i:                                   ; preds = %for.body.i44.i.preheader358, %for.body.i44.i
  %iv2.i.i = phi i64 [ %iv.next.i.i, %for.body.i44.i ], [ %iv2.i.i.ph, %for.body.i44.i.preheader358 ]
  %iv.next.i.i = add nuw nsw i64 %iv2.i.i, 1
  %sext.i40.i = shl i64 %iv2.i.i, 32
  %idxprom.i41.i = ashr exact i64 %sext.i40.i, 32
  %arrayidx.i42.i = getelementptr inbounds double, double* %arrayidx28.i, i64 %idxprom.i41.i
  %82 = load double, double* %arrayidx.i42.i, align 8, !tbaa !70, !alias.scope !156, !noalias !162
  %arrayidx2.i.i = getelementptr inbounds double, double* %arrayidx31.i, i64 %idxprom.i41.i
  %83 = load double, double* %arrayidx2.i.i, align 8, !tbaa !70, !alias.scope !152, !noalias !163
  %sub.i.i = fsub fast double %82, %83
  %arrayidx4.i.i = getelementptr inbounds double, double* %2, i64 %idxprom.i41.i
  store double %sub.i.i, double* %arrayidx4.i.i, align 8, !tbaa !70, !noalias !158
  %exitcond.not.i43.i = icmp eq i64 %iv.next.i.i, %wide.trip.count.i39.i
  br i1 %exitcond.not.i43.i, label %augmented_subtract.exit.i, label %for.body.i44.i, !llvm.loop !165

augmented_subtract.exit.i:                        ; preds = %for.body.i44.i, %middle.block62, %for.body25.i
  %arrayidx35.i = getelementptr inbounds double, double* %0, i64 %mul30.i
  %mul36.i = mul nsw i64 %iv1225.i, %conv4.i
  %add38.i = add nsw i64 %mul36.i, %conv11.i
  %arrayidx39.i = getelementptr inbounds double, double* %icf, i64 %add38.i
  %malloccall.i54.i = tail call noalias nonnull i8* @malloc(i64 %9) #38, !noalias !158
  %_malloccache.i55.i = bitcast i8* %malloccall.i54.i to double*
  %malloccall8.i.i = tail call noalias nonnull i8* @malloc(i64 %9) #38, !noalias !158
  %_malloccache9.i.i = bitcast i8* %malloccall8.i.i to double*
  br i1 %6, label %for.body.i63.i.preheader, label %for.end.i.i

for.body.i63.i.preheader:                         ; preds = %augmented_subtract.exit.i
  br i1 %or.cond352, label %for.body.i63.i.preheader357, label %vector.body46

vector.body46:                                    ; preds = %for.body.i63.i.preheader, %vector.body46
  %index56 = phi i64 [ %index.next57, %vector.body46 ], [ 0, %for.body.i63.i.preheader ]
  %84 = shl i64 %index56, 32
  %85 = ashr exact i64 %84, 32
  %86 = getelementptr inbounds double, double* %arrayidx35.i, i64 %85
  %87 = bitcast double* %86 to <2 x double>*
  %wide.load60 = load <2 x double>, <2 x double>* %87, align 8, !tbaa !70, !noalias !158
  %88 = getelementptr inbounds double, double* %2, i64 %85
  %89 = bitcast double* %88 to <2 x double>*
  %wide.load61 = load <2 x double>, <2 x double>* %89, align 8, !tbaa !70, !noalias !158
  %90 = fmul fast <2 x double> %wide.load61, %wide.load60
  %91 = getelementptr inbounds double, double* %3, i64 %85
  %92 = bitcast double* %91 to <2 x double>*
  store <2 x double> %90, <2 x double>* %92, align 8, !tbaa !70, !noalias !158
  %93 = getelementptr inbounds double, double* %_malloccache9.i.i, i64 %index56
  %94 = bitcast double* %93 to <2 x double>*
  store <2 x double> %wide.load61, <2 x double>* %94, align 8, !noalias !158
  %95 = getelementptr inbounds double, double* %_malloccache.i55.i, i64 %index56
  %96 = bitcast double* %95 to <2 x double>*
  store <2 x double> %wide.load60, <2 x double>* %96, align 8, !noalias !158
  %index.next57 = add i64 %index56, 2
  %97 = icmp eq i64 %index.next57, %n.vec55
  br i1 %97, label %middle.block44, label %vector.body46, !llvm.loop !166

middle.block44:                                   ; preds = %vector.body46
  br i1 %cmp.n59, label %for.end.i.i, label %for.body.i63.i.preheader357

for.body.i63.i.preheader357:                      ; preds = %for.body.i63.i.preheader, %middle.block44
  %iv8.i.i.ph = phi i64 [ 0, %for.body.i63.i.preheader ], [ %n.vec55, %middle.block44 ]
  br label %for.body.i63.i

for.body.i63.i:                                   ; preds = %for.body.i63.i.preheader357, %for.body.i63.i
  %iv8.i.i = phi i64 [ %iv.next.i57.i, %for.body.i63.i ], [ %iv8.i.i.ph, %for.body.i63.i.preheader357 ]
  %iv.next.i57.i = add nuw nsw i64 %iv8.i.i, 1
  %sext2.i.i = shl i64 %iv8.i.i, 32
  %idxprom.i58.i = ashr exact i64 %sext2.i.i, 32
  %arrayidx.i59.i = getelementptr inbounds double, double* %arrayidx35.i, i64 %idxprom.i58.i
  %98 = load double, double* %arrayidx.i59.i, align 8, !tbaa !70, !noalias !158
  %arrayidx2.i60.i = getelementptr inbounds double, double* %2, i64 %idxprom.i58.i
  %99 = load double, double* %arrayidx2.i60.i, align 8, !tbaa !70, !noalias !158
  %mul.i61.i = fmul fast double %99, %98
  %arrayidx4.i62.i = getelementptr inbounds double, double* %3, i64 %idxprom.i58.i
  store double %mul.i61.i, double* %arrayidx4.i62.i, align 8, !tbaa !70, !noalias !158
  %100 = getelementptr inbounds double, double* %_malloccache9.i.i, i64 %iv8.i.i
  store double %99, double* %100, align 8, !noalias !158, !invariant.group !167
  %101 = getelementptr inbounds double, double* %_malloccache.i55.i, i64 %iv8.i.i
  store double %98, double* %101, align 8, !noalias !158, !invariant.group !168
  %exitcond17.not.i.i = icmp eq i64 %iv.next.i57.i, %wide.trip.count.i39.i
  br i1 %exitcond17.not.i.i, label %for.end.i.i, label %for.body.i63.i, !llvm.loop !169

for.end.i.i:                                      ; preds = %for.body.i63.i, %middle.block44, %augmented_subtract.exit.i
  %malloccall12.i.i = tail call noalias nonnull i8* @malloc(i64 %9) #38, !noalias !158
  %_malloccache13.i.i = bitcast i8* %malloccall12.i.i to double**
  %malloccall19.i.i = tail call noalias nonnull i8* @malloc(i64 %9) #38, !noalias !158
  %_malloccache20.i.i = bitcast i8* %malloccall19.i.i to double**
  br i1 %6, label %for.body7.i.i, label %augmented_Qtimesx.exit.i

for.cond5.loopexit.i.i:                           ; preds = %for.body13.i.i, %for.body7.i.i
  %102 = add nuw nsw i64 %105, 1
  %103 = trunc i64 %105 to i32
  %indvars.iv.next11.i.i = add nuw nsw i64 %indvars.iv10.i.i, 1
  %exitcond12.not.i.i = icmp eq i64 %indvars.iv.next11.i.i, %wide.trip.count.i39.i
  %indvars.iv.next.i = add i32 %indvars.iv.i, -1
  br i1 %exitcond12.not.i.i, label %augmented_Qtimesx.exit.i, label %for.body7.i.i, !llvm.loop !116

for.body7.i.i:                                    ; preds = %for.end.i.i, %for.cond5.loopexit.i.i
  %indvars.iv.i = phi i32 [ %indvars.iv.next.i, %for.cond5.loopexit.i.i ], [ %51, %for.end.i.i ]
  %indvars.iv10.i.i = phi i64 [ %indvars.iv.next11.i.i, %for.cond5.loopexit.i.i ], [ 0, %for.end.i.i ]
  %104 = phi i32 [ %103, %for.cond5.loopexit.i.i ], [ 0, %for.end.i.i ]
  %105 = phi i64 [ %102, %for.cond5.loopexit.i.i ], [ 1, %for.end.i.i ]
  %106 = xor i32 %104, -1
  %107 = add i32 %106, %d
  %108 = zext i32 %107 to i64
  %sub9.i.i = add i32 %mul8.i.i, %106
  %109 = trunc i64 %indvars.iv10.i.i to i32
  %mul10.i.i = mul nsw i32 %sub9.i.i, %109
  %div.i66.i = sdiv i32 %mul10.i.i, 2
  %110 = getelementptr inbounds double*, double** %_malloccache13.i.i, i64 %indvars.iv10.i.i
  %111 = shl nuw nsw i64 %108, 3
  %mallocsize14.i.i = add nuw nsw i64 %111, 8
  %malloccall15.i.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize14.i.i) #38, !noalias !158
  %112 = bitcast double** %110 to i8**
  store i8* %malloccall15.i.i, i8** %112, align 8, !noalias !158
  %113 = getelementptr inbounds double*, double** %_malloccache20.i.i, i64 %indvars.iv10.i.i
  %malloccall22.i.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize14.i.i) #38, !noalias !158
  %114 = bitcast double** %113 to i8**
  store i8* %malloccall22.i.i, i8** %114, align 8, !noalias !158
  %115 = icmp ult i64 %105, %wide.trip.count.i39.i
  br i1 %115, label %for.body13.lr.ph.i.i, label %for.cond5.loopexit.i.i

for.body13.lr.ph.i.i:                             ; preds = %for.body7.i.i
  %116 = bitcast i8* %malloccall22.i.i to double*
  %sext1.i67.i = shl i64 %indvars.iv10.i.i, 32
  %idxprom18.i.i = ashr exact i64 %sext1.i67.i, 32
  %arrayidx19.i.i = getelementptr inbounds double, double* %2, i64 %idxprom18.i.i
  %117 = load double, double* %arrayidx19.i.i, align 8, !tbaa !70, !noalias !158
  %wide.trip.count.i = zext i32 %indvars.iv.i to i64
  br label %for.body13.i.i

for.body13.i.i:                                   ; preds = %for.body13.for.body13_crit_edge.i.i, %for.body13.lr.ph.i.i
  %118 = phi double* [ %116, %for.body13.lr.ph.i.i ], [ %.pre.i70.i, %for.body13.for.body13_crit_edge.i.i ]
  %119 = phi i64 [ %105, %for.body13.lr.ph.i.i ], [ %127, %for.body13.for.body13_crit_edge.i.i ]
  %iv44.i.i = phi i64 [ 0, %for.body13.lr.ph.i.i ], [ %iv.next5.i.i, %for.body13.for.body13_crit_edge.i.i ]
  %120 = trunc i64 %iv44.i.i to i32
  %121 = add i32 %div.i66.i, %120
  %iv.next5.i.i = add nuw nsw i64 %iv44.i.i, 1
  %sext.i68.i = shl i64 %119, 32
  %idxprom14.i.i = ashr exact i64 %sext.i68.i, 32
  %arrayidx15.i.i = getelementptr inbounds double, double* %3, i64 %idxprom14.i.i
  %122 = load double, double* %arrayidx15.i.i, align 8, !tbaa !70, !noalias !158
  %idxprom16.i.i = sext i32 %121 to i64
  %arrayidx17.i.i = getelementptr inbounds double, double* %arrayidx39.i, i64 %idxprom16.i.i
  %123 = load double, double* %arrayidx17.i.i, align 8, !tbaa !70, !alias.scope !154, !noalias !159
  %mul20.i.i = fmul fast double %123, %117
  %add21.i.i = fadd fast double %mul20.i.i, %122
  store double %add21.i.i, double* %arrayidx15.i.i, align 8, !tbaa !70, !noalias !158
  %124 = getelementptr inbounds double, double* %118, i64 %iv44.i.i
  store double %117, double* %124, align 8, !noalias !158, !invariant.group !170
  %125 = load double*, double** %110, align 8, !noalias !158, !dereferenceable !171, !invariant.group !172
  %126 = getelementptr inbounds double, double* %125, i64 %iv44.i.i
  store double %123, double* %126, align 8, !noalias !158, !invariant.group !173
  %exitcond.i = icmp eq i64 %iv44.i.i, %wide.trip.count.i
  br i1 %exitcond.i, label %for.cond5.loopexit.i.i, label %for.body13.for.body13_crit_edge.i.i, !llvm.loop !174

for.body13.for.body13_crit_edge.i.i:              ; preds = %for.body13.i.i
  %127 = add nuw nsw i64 %iv.next5.i.i, %105
  %.pre.i70.i = load double*, double** %113, align 8, !noalias !158, !invariant.group !175
  br label %for.body13.i.i

augmented_Qtimesx.exit.i:                         ; preds = %for.cond5.loopexit.i.i, %for.end.i.i
  %arrayidx42.i = getelementptr inbounds double, double* %alphas, i64 %iv1225.i
  %128 = load double, double* %arrayidx42.i, align 8, !tbaa !70, !alias.scope !149, !noalias !176
  %arrayidx43.i = getelementptr inbounds double, double* %1, i64 %iv1225.i
  %129 = load double, double* %arrayidx43.i, align 8, !tbaa !70, !noalias !158
  %add44.i = fadd fast double %129, %128
  %130 = load double, double* %3, align 8, !tbaa !70, !noalias !158
  %mul.i71.i = fmul fast double %130, %130
  %malloccall.i73.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i72.i) #38, !noalias !158
  %malloccall3.i.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i72.i) #38, !noalias !158
  br i1 %41, label %for.body.preheader.i75.i, label %augmented_sqnorm.exit.i

for.body.preheader.i75.i:                         ; preds = %augmented_Qtimesx.exit.i
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %malloccall.i73.i, i8* nonnull align 8 %scevgep.i.i, i64 %46, i1 false) #38, !noalias !158
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %malloccall3.i.i, i8* nonnull align 8 %scevgep.i.i, i64 %46, i1 false) #38, !noalias !158
  %brmerge = or i1 %min.iters.check29, %62
  br i1 %brmerge, label %for.body.i82.i.preheader, label %vector.ph31

vector.ph31:                                      ; preds = %for.body.preheader.i75.i
  %131 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul.i71.i, i32 0
  br label %vector.body28

vector.body28:                                    ; preds = %vector.body28, %vector.ph31
  %index34 = phi i64 [ 0, %vector.ph31 ], [ %index.next35, %vector.body28 ]
  %vec.phi38 = phi <2 x double> [ %131, %vector.ph31 ], [ %140, %vector.body28 ]
  %vec.phi39 = phi <2 x double> [ zeroinitializer, %vector.ph31 ], [ %141, %vector.body28 ]
  %offset.idx = shl i64 %index34, 32
  %132 = ashr exact i64 %offset.idx, 32
  %133 = or i64 %132, 1
  %134 = getelementptr inbounds double, double* %3, i64 %133
  %135 = bitcast double* %134 to <2 x double>*
  %wide.load40 = load <2 x double>, <2 x double>* %135, align 8, !tbaa !70, !noalias !158
  %136 = getelementptr inbounds double, double* %134, i64 2
  %137 = bitcast double* %136 to <2 x double>*
  %wide.load41 = load <2 x double>, <2 x double>* %137, align 8, !tbaa !70, !noalias !158
  %138 = fmul fast <2 x double> %wide.load40, %wide.load40
  %139 = fmul fast <2 x double> %wide.load41, %wide.load41
  %140 = fadd fast <2 x double> %138, %vec.phi38
  %141 = fadd fast <2 x double> %139, %vec.phi39
  %index.next35 = add i64 %index34, 4
  %142 = icmp eq i64 %index.next35, %n.vec33
  br i1 %142, label %middle.block26, label %vector.body28, !llvm.loop !177

middle.block26:                                   ; preds = %vector.body28
  %bin.rdx42 = fadd fast <2 x double> %141, %140
  %143 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx42)
  br i1 %cmp.n37, label %augmented_sqnorm.exit.i, label %for.body.i82.i.preheader

for.body.i82.i.preheader:                         ; preds = %for.body.preheader.i75.i, %middle.block26
  %iv.next4.i.i.ph = phi i64 [ 1, %for.body.preheader.i75.i ], [ %ind.end, %middle.block26 ]
  %res.03.i.i.ph = phi double [ %mul.i71.i, %for.body.preheader.i75.i ], [ %143, %middle.block26 ]
  br label %for.body.i82.i

for.body.i82.i:                                   ; preds = %for.body.i82.i.preheader, %for.body.i82.i
  %iv.next4.i.i = phi i64 [ %iv.next.i80.i, %for.body.i82.i ], [ %iv.next4.i.i.ph, %for.body.i82.i.preheader ]
  %res.03.i.i = phi double [ %add.i79.i, %for.body.i82.i ], [ %res.03.i.i.ph, %for.body.i82.i.preheader ]
  %sext.i76.i = shl i64 %iv.next4.i.i, 32
  %idxprom.i77.i = ashr exact i64 %sext.i76.i, 32
  %arrayidx2.i78.i = getelementptr inbounds double, double* %3, i64 %idxprom.i77.i
  %144 = load double, double* %arrayidx2.i78.i, align 8, !tbaa !70, !noalias !158
  %mul5.i.i = fmul fast double %144, %144
  %add.i79.i = fadd fast double %mul5.i.i, %res.03.i.i
  %iv.next.i80.i = add nuw nsw i64 %iv.next4.i.i, 1
  %exitcond.not.i81.i = icmp eq i64 %iv.next.i80.i, %wide.trip.count.i39.i
  br i1 %exitcond.not.i81.i, label %augmented_sqnorm.exit.i, label %for.body.i82.i, !llvm.loop !178

augmented_sqnorm.exit.i:                          ; preds = %for.body.i82.i, %middle.block26, %augmented_Qtimesx.exit.i
  %res.0.lcssa.i.i = phi double [ %mul.i71.i, %augmented_Qtimesx.exit.i ], [ %143, %middle.block26 ], [ %add.i79.i, %for.body.i82.i ]
  %mul47.neg.i = fmul fast double %res.0.lcssa.i.i, -5.000000e-01
  %sub48.i = fadd fast double %add44.i, %mul47.neg.i
  %arrayidx49.i = getelementptr inbounds double, double* %4, i64 %iv1225.i
  store double %sub48.i, double* %arrayidx49.i, align 8, !tbaa !70, !noalias !158
  %145 = add nuw nsw i64 %iv1225.i, %64
  %.repack25.i = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %_augmented12_malloccache.i, i64 %145, i32 0
  %146 = bitcast double** %.repack25.i to i8**
  store i8* %malloccall.i54.i, i8** %146, align 32, !noalias !158
  %.repack26.i = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %_augmented12_malloccache.i, i64 %145, i32 1
  %147 = bitcast double** %.repack26.i to i8**
  store i8* %malloccall8.i.i, i8** %147, align 8, !noalias !158
  %.repack28.i = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %_augmented12_malloccache.i, i64 %145, i32 2
  %148 = bitcast double*** %.repack28.i to i8**
  store i8* %malloccall12.i.i, i8** %148, align 16, !noalias !158
  %.repack30.i = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %_augmented12_malloccache.i, i64 %145, i32 3
  %149 = bitcast double*** %.repack30.i to i8**
  store i8* %malloccall19.i.i, i8** %149, align 8, !noalias !158
  %.repack32.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %subcache_malloccache.i, i64 %145, i32 0
  store double %130, double* %.repack32.i, align 32, !noalias !158
  %.repack33.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %subcache_malloccache.i, i64 %145, i32 1
  store double %130, double* %.repack33.i, align 8, !noalias !158
  %.repack35.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %subcache_malloccache.i, i64 %145, i32 2
  %150 = bitcast double** %.repack35.i to i8**
  store i8* %malloccall.i73.i, i8** %150, align 16, !noalias !158
  %.repack37.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %subcache_malloccache.i, i64 %145, i32 3
  %151 = bitcast double** %.repack37.i to i8**
  store i8* %malloccall3.i.i, i8** %151, align 8, !noalias !158
  %exitcond234.not.i = icmp eq i64 %iv.next2.i, %conv8.i
  br i1 %exitcond234.not.i, label %for.end.loopexit.i, label %for.body25.i, !llvm.loop !137

for.end.loopexit.i:                               ; preds = %augmented_sqnorm.exit.i
  %.pre.i = load double, double* %4, align 8, !tbaa !70, !noalias !158
  br label %for.end.i

for.end.i:                                        ; preds = %for.end.loopexit.i, %for.cond22.preheader.i
  %152 = phi double [ %.pre.i, %for.end.loopexit.i ], [ %63, %for.cond22.preheader.i ]
  %malloccall.i.i.i = tail call noalias nonnull i8* @malloc(i64 %50) #38, !noalias !158
  br i1 %47, label %for.body.i.i.i, label %augmented_arr_max.exit.i.i

for.body.i.i.i:                                   ; preds = %for.end.i, %for.body.i.i.i
  %iv.next4.i.i.i = phi i64 [ %iv.next.i.i.i, %for.body.i.i.i ], [ 1, %for.end.i ]
  %m.03.i.i.i = phi double [ %m.1.i.i.i, %for.body.i.i.i ], [ %152, %for.end.i ]
  %iv2.i.i.i = phi i64 [ %iv.next4.i.i.i, %for.body.i.i.i ], [ 0, %for.end.i ]
  %sext.i.i.i = shl i64 %iv.next4.i.i.i, 32
  %idxprom.i.i.i = ashr exact i64 %sext.i.i.i, 32
  %arrayidx1.i.i.i = getelementptr inbounds double, double* %4, i64 %idxprom.i.i.i
  %153 = load double, double* %arrayidx1.i.i.i, align 8, !tbaa !70, !noalias !158
  %cmp2.i.i.i = fcmp fast olt double %m.03.i.i.i, %153
  %154 = getelementptr inbounds i8, i8* %malloccall.i.i.i, i64 %iv2.i.i.i
  %155 = bitcast i8* %154 to i1*
  store i1 %cmp2.i.i.i, i1* %155, align 1, !noalias !158, !invariant.group !179
  %m.1.i.i.i = select i1 %cmp2.i.i.i, double %153, double %m.03.i.i.i
  %iv.next.i.i.i = add nuw nsw i64 %iv.next4.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i64 %iv.next.i.i.i, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i, label %augmented_arr_max.exit.i.i, label %for.body.i.i.i, !llvm.loop !180

augmented_arr_max.exit.i.i:                       ; preds = %for.body.i.i.i, %for.end.i
  %m.0.lcssa.i.i.i = phi double [ %152, %for.end.i ], [ %m.1.i.i.i, %for.body.i.i.i ]
  %malloccall.i89.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i88.i) #38, !noalias !158
  %semx.0_malloccache.i.i = bitcast i8* %malloccall.i89.i to double*
  %malloccall2.i.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i88.i) #38, !noalias !158
  %sub_malloccache.i.i = bitcast i8* %malloccall2.i.i to double*
  store double 0.000000e+00, double* %semx.0_malloccache.i.i, align 8, !noalias !158, !invariant.group !181
  br i1 %5, label %for.body.i100.i, label %augmented_log_sum_exp.exit.i

for.body.i100.i:                                  ; preds = %augmented_arr_max.exit.i.i, %for.body.i100.i
  %semx.03.i.i = phi double [ %add.i98.i, %for.body.i100.i ], [ 0.000000e+00, %augmented_arr_max.exit.i.i ]
  %iv2.i92.i = phi i64 [ %iv.next.i93.i, %for.body.i100.i ], [ 0, %augmented_arr_max.exit.i.i ]
  %iv.next.i93.i = add nuw nsw i64 %iv2.i92.i, 1
  %sext.i94.i = shl i64 %iv2.i92.i, 32
  %idxprom.i95.i = ashr exact i64 %sext.i94.i, 32
  %arrayidx.i96.i = getelementptr inbounds double, double* %4, i64 %idxprom.i95.i
  %156 = load double, double* %arrayidx.i96.i, align 8, !tbaa !70, !noalias !158
  %sub.i97.i = fsub fast double %156, %m.0.lcssa.i.i.i
  %157 = getelementptr inbounds double, double* %sub_malloccache.i.i, i64 %iv2.i92.i
  store double %sub.i97.i, double* %157, align 8, !noalias !158, !invariant.group !182
  %158 = tail call fast double @llvm.exp.f64(double %sub.i97.i) #38
  %add.i98.i = fadd fast double %158, %semx.03.i.i
  %159 = getelementptr inbounds double, double* %semx.0_malloccache.i.i, i64 %iv.next.i93.i
  store double %add.i98.i, double* %159, align 8, !noalias !158, !invariant.group !181
  %exitcond.not.i99.i = icmp eq i64 %iv.next.i93.i, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i99.i, label %augmented_log_sum_exp.exit.i, label %for.body.i100.i, !llvm.loop !95

augmented_log_sum_exp.exit.i:                     ; preds = %for.body.i100.i, %augmented_arr_max.exit.i.i
  %.repack.i = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %call51_augmented_malloccache.i, i64 %iv227.i, i32 0
  %160 = bitcast i1** %.repack.i to i8**
  store i8* %malloccall.i.i.i, i8** %160, align 8, !noalias !158
  %.repack21.i = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %call51_augmented_malloccache.i, i64 %iv227.i, i32 1
  %161 = bitcast double** %.repack21.i to i8**
  store i8* %malloccall.i89.i, i8** %161, align 8, !noalias !158
  %.repack23.i = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %call51_augmented_malloccache.i, i64 %iv227.i, i32 2
  %162 = bitcast double** %.repack23.i to i8**
  store i8* %malloccall2.i.i, i8** %162, align 8, !noalias !158
  %iv.next.i = add nuw nsw i64 %iv.next228.i, 1
  %exitcond235.not.i = icmp eq i64 %iv.next228.i, %35
  br i1 %exitcond235.not.i, label %for.end55.i, label %for.cond22.preheader.i, !llvm.loop !142

for.end55.i:                                      ; preds = %augmented_log_sum_exp.exit.i, %augmented_preprocess_qs.exit.for.end55_crit_edge.i
  %n.op.i.i105.pre-phi.i = phi i32 [ %.pre238.i, %augmented_preprocess_qs.exit.for.end55_crit_edge.i ], [ %n.op.i.i.i, %augmented_log_sum_exp.exit.i ]
  %163 = load double, double* %alphas, align 8, !tbaa !70, !alias.scope !149, !noalias !176
  %164 = icmp sgt i32 %k, 1
  %165 = select i1 %164, i32 %n.op.i.i105.pre-phi.i, i32 0
  %166 = zext i32 %165 to i64
  %167 = add nuw nsw i64 %166, 1
  %malloccall.i.i106.i = tail call noalias nonnull i8* @malloc(i64 %167) #38, !noalias !158
  br i1 %164, label %for.body.preheader.i.i108.i, label %augmented_arr_max.4.exit.i.i

for.body.preheader.i.i108.i:                      ; preds = %for.end55.i
  %wide.trip.count.i.i107.i = zext i32 %k to i64
  br label %for.body.i.i119.i

for.body.i.i119.i:                                ; preds = %for.body.i.i119.i, %for.body.preheader.i.i108.i
  %iv.next4.i.i109.i = phi i64 [ %iv.next.i.i117.i, %for.body.i.i119.i ], [ 1, %for.body.preheader.i.i108.i ]
  %m.03.i.i110.i = phi double [ %m.1.i.i116.i, %for.body.i.i119.i ], [ %163, %for.body.preheader.i.i108.i ]
  %iv2.i.i111.i = phi i64 [ %iv.next4.i.i109.i, %for.body.i.i119.i ], [ 0, %for.body.preheader.i.i108.i ]
  %sext.i.i112.i = shl i64 %iv.next4.i.i109.i, 32
  %idxprom.i.i113.i = ashr exact i64 %sext.i.i112.i, 32
  %arrayidx1.i.i114.i = getelementptr inbounds double, double* %alphas, i64 %idxprom.i.i113.i
  %168 = load double, double* %arrayidx1.i.i114.i, align 8, !tbaa !70, !alias.scope !149, !noalias !176
  %cmp2.i.i115.i = fcmp fast olt double %m.03.i.i110.i, %168
  %169 = getelementptr inbounds i8, i8* %malloccall.i.i106.i, i64 %iv2.i.i111.i
  %170 = bitcast i8* %169 to i1*
  store i1 %cmp2.i.i115.i, i1* %170, align 1, !noalias !158, !invariant.group !183
  %m.1.i.i116.i = select i1 %cmp2.i.i115.i, double %168, double %m.03.i.i110.i
  %iv.next.i.i117.i = add nuw nsw i64 %iv.next4.i.i109.i, 1
  %exitcond.not.i.i118.i = icmp eq i64 %iv.next.i.i117.i, %wide.trip.count.i.i107.i
  br i1 %exitcond.not.i.i118.i, label %augmented_arr_max.4.exit.i.i, label %for.body.i.i119.i, !llvm.loop !180

augmented_arr_max.4.exit.i.i:                     ; preds = %for.body.i.i119.i, %for.end55.i
  %m.0.lcssa.i.i120.i = phi double [ %163, %for.end55.i ], [ %m.1.i.i116.i, %for.body.i.i119.i ]
  %mallocsize.i123.i = shl nuw nsw i64 %7, 3
  %malloccall.i124.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i123.i) #38, !noalias !158
  %semx.0_malloccache.i125.i = bitcast i8* %malloccall.i124.i to double*
  %malloccall2.i126.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i123.i) #38, !noalias !158
  %sub_malloccache.i127.i = bitcast i8* %malloccall2.i126.i to double*
  store double 0.000000e+00, double* %semx.0_malloccache.i125.i, align 8, !noalias !158, !invariant.group !184
  br i1 %5, label %for.body.preheader.i129.i, label %augmented_log_sum_exp.5.exit.i

for.body.preheader.i129.i:                        ; preds = %augmented_arr_max.4.exit.i.i
  %wide.trip.count.i128.i = zext i32 %k to i64
  br label %for.body.i139.i

for.body.i139.i:                                  ; preds = %for.body.i139.i, %for.body.preheader.i129.i
  %semx.03.i130.i = phi double [ %add.i137.i, %for.body.i139.i ], [ 0.000000e+00, %for.body.preheader.i129.i ]
  %iv2.i131.i = phi i64 [ %iv.next.i132.i, %for.body.i139.i ], [ 0, %for.body.preheader.i129.i ]
  %iv.next.i132.i = add nuw nsw i64 %iv2.i131.i, 1
  %sext.i133.i = shl i64 %iv2.i131.i, 32
  %idxprom.i134.i = ashr exact i64 %sext.i133.i, 32
  %arrayidx.i135.i = getelementptr inbounds double, double* %alphas, i64 %idxprom.i134.i
  %171 = load double, double* %arrayidx.i135.i, align 8, !tbaa !70, !alias.scope !149, !noalias !176
  %sub.i136.i = fsub fast double %171, %m.0.lcssa.i.i120.i
  %172 = getelementptr inbounds double, double* %sub_malloccache.i127.i, i64 %iv2.i131.i
  store double %sub.i136.i, double* %172, align 8, !noalias !158, !invariant.group !185
  %173 = tail call fast double @llvm.exp.f64(double %sub.i136.i) #38
  %add.i137.i = fadd fast double %173, %semx.03.i130.i
  %174 = getelementptr inbounds double, double* %semx.0_malloccache.i125.i, i64 %iv.next.i132.i
  store double %add.i137.i, double* %174, align 8, !noalias !158, !invariant.group !184
  %exitcond.not.i138.i = icmp eq i64 %iv.next.i132.i, %wide.trip.count.i128.i
  br i1 %exitcond.not.i138.i, label %augmented_log_sum_exp.5.exit.i, label %for.body.i139.i, !llvm.loop !95

augmented_log_sum_exp.5.exit.i:                   ; preds = %for.body.i139.i, %augmented_arr_max.4.exit.i.i
  %smax.i147.i = phi i64 [ 0, %augmented_arr_max.4.exit.i.i ], [ %wide.trip.count.i128.i, %for.body.i139.i ]
  %conv58.i = sitofp i32 %n to double
  %175 = load double, double* %errb, align 8, !noalias !158
  store double 0.000000e+00, double* %errb, align 8, !noalias !158
  %176 = shl nuw nsw i64 %smax.i147.i, 5
  %mallocsize.i148.i = add nuw nsw i64 %176, 32
  %malloccall.i149.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i148.i) #38, !noalias !158
  %call18_augmented_malloccache.i.i = bitcast i8* %malloccall.i149.i to { double, double, double*, double* }*
  %malloccall10.i.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i148.i) #38, !noalias !158
  %call12_augmented_malloccache.i.i = bitcast i8* %malloccall10.i.i to { double, double, double*, double* }*
  br i1 %5, label %for.body.lr.ph.i152.i, label %diffelog_wishart_prior.exit.i

for.body.lr.ph.i152.i:                            ; preds = %augmented_log_sum_exp.5.exit.i
  %177 = icmp sgt i32 %d, 1
  %n.op.i.i150.i = add i32 %d, -1
  %178 = select i1 %177, i32 %n.op.i.i150.i, i32 0
  %179 = zext i32 %178 to i64
  %180 = shl nuw nsw i64 %179, 3
  %mallocsize.i.i.i = add nuw nsw i64 %180, 8
  %181 = zext i32 %n.op.i.i150.i to i64
  %182 = shl nuw nsw i64 %181, 3
  %sub13.i.i = sub nsw i32 %div.i, %d
  %183 = icmp sgt i32 %sub13.i.i, 1
  %n.op.i28.i.i = add i32 %sub13.i.i, -1
  %184 = select i1 %183, i32 %n.op.i28.i.i, i32 0
  %185 = zext i32 %184 to i64
  %186 = shl nuw nsw i64 %185, 3
  %mallocsize.i29.i.i = add nuw nsw i64 %186, 8
  %187 = zext i32 %n.op.i28.i.i to i64
  %188 = shl nuw nsw i64 %187, 3
  %wide.trip.count.i151.i = zext i32 %k to i64
  br label %for.body.i156.i

invertfor.cond.preheader.i.i:                     ; preds = %augmented_sqnorm.1.exit.i.i
  %189 = icmp slt i32 %k, 1
  br i1 %189, label %diffelog_wishart_prior.exit.i, label %incinvertfor.cond.lr.ph.i.i

incinvertfor.cond.lr.ph.i.i:                      ; preds = %invertfor.cond.preheader.i.i
  %conv27_unwrap.i.i = sitofp i32 %agg.tmp.sroa.2.0.copyload to double, !read_from_bin !186, !operand0 !187
  %190 = icmp eq i32 %184, 0
  %191 = icmp eq i32 %178, 0
  %192 = fmul fast double %175, %conv27_unwrap.i.i
  %193 = fmul fast double %agg.tmp.sroa.0.0.copyload, %agg.tmp.sroa.0.0.copyload
  %mul23_unwrap.i.i = fmul fast double %193, 5.000000e-01
  %m1diffeadd19.i.i = fmul fast double %mul23_unwrap.i.i, %175
  %194 = add i32 %184, 1
  %195 = zext i32 %194 to i64
  %196 = sub nsw i64 %195, %185
  %scevgep = getelementptr double, double* %icfb, i64 %196
  %197 = trunc i64 %smax.i147.i to i32
  %198 = add i32 %197, -1
  %199 = mul i32 %div.i, %198
  %200 = add i32 %199, %d
  %scevgep118 = getelementptr double, double* %icfb, i64 %195
  %min.iters.check113 = icmp ult i32 %184, 4
  %n.vec131 = and i64 %185, 4294967292
  %ind.end135 = and i64 %185, 3
  %broadcast.splatinsert150 = insertelement <2 x double> poison, double %m1diffeadd19.i.i, i32 0
  %broadcast.splat151 = shufflevector <2 x double> %broadcast.splatinsert150, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert152 = insertelement <2 x double> poison, double %m1diffeadd19.i.i, i32 0
  %broadcast.splat153 = shufflevector <2 x double> %broadcast.splatinsert152, <2 x double> poison, <2 x i32> zeroinitializer
  %cmp.n136 = icmp eq i64 %n.vec131, %185
  %min.iters.check85 = icmp ult i32 %178, 4
  %n.vec88 = and i64 %179, 4294967292
  %ind.end92 = and i64 %179, 3
  %broadcast.splatinsert = insertelement <2 x double> poison, double %m1diffeadd19.i.i, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert106 = insertelement <2 x double> poison, double %m1diffeadd19.i.i, i32 0
  %broadcast.splat107 = shufflevector <2 x double> %broadcast.splatinsert106, <2 x double> poison, <2 x i32> zeroinitializer
  %cmp.n93 = icmp eq i64 %n.vec88, %179
  br label %incinvertfor.cond.i163.i

for.body.i156.i:                                  ; preds = %augmented_sqnorm.1.exit.i.i, %for.body.lr.ph.i152.i
  %iv54.i.i = phi i64 [ 0, %for.body.lr.ph.i152.i ], [ %iv.next.i153.i, %augmented_sqnorm.1.exit.i.i ]
  %iv.next.i153.i = add nuw nsw i64 %iv54.i.i, 1
  %201 = mul nsw i64 %iv54.i.i, %conv11.i
  %arrayidx.i154.i = getelementptr inbounds double, double* %0, i64 %201
  %202 = load double, double* %arrayidx.i154.i, align 8, !tbaa !70, !noalias !158
  %malloccall.i.i155.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i.i.i) #38, !noalias !158
  %malloccall3.i.i.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i.i.i) #38, !noalias !158
  br i1 %177, label %for.body.preheader.i.i157.i, label %augmented_sqnorm.3.exit.i.i

for.body.preheader.i.i157.i:                      ; preds = %for.body.i156.i
  %scevgep.i.i.i = getelementptr double, double* %arrayidx.i154.i, i64 1
  %scevgep4.i.i.i = bitcast double* %scevgep.i.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %malloccall.i.i155.i, i8* align 8 %scevgep4.i.i.i, i64 %182, i1 false) #38, !noalias !158
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %malloccall3.i.i.i, i8* align 8 %scevgep4.i.i.i, i64 %182, i1 false) #38, !noalias !158
  br label %augmented_sqnorm.3.exit.i.i

augmented_sqnorm.3.exit.i.i:                      ; preds = %for.body.preheader.i.i157.i, %for.body.i156.i
  %203 = mul nsw i64 %iv54.i.i, %conv4.i
  %204 = add nsw i64 %203, %conv11.i
  %arrayidx17.i158.i = getelementptr inbounds double, double* %icf, i64 %204
  %205 = load double, double* %arrayidx17.i158.i, align 8, !tbaa !70, !alias.scope !154, !noalias !159
  %malloccall.i30.i.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i29.i.i) #38, !noalias !158
  %malloccall3.i31.i.i = tail call noalias nonnull i8* @malloc(i64 %mallocsize.i29.i.i) #38, !noalias !158
  br i1 %183, label %for.body.preheader.i34.i.i, label %augmented_sqnorm.1.exit.i.i

for.body.preheader.i34.i.i:                       ; preds = %augmented_sqnorm.3.exit.i.i
  %scevgep.i32.i.i = getelementptr double, double* %arrayidx17.i158.i, i64 1
  %scevgep4.i33.i.i = bitcast double* %scevgep.i32.i.i to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %malloccall.i30.i.i, i8* align 8 %scevgep4.i33.i.i, i64 %188, i1 false) #38, !noalias !159
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %malloccall3.i31.i.i, i8* align 8 %scevgep4.i33.i.i, i64 %188, i1 false) #38, !noalias !159
  br label %augmented_sqnorm.1.exit.i.i

augmented_sqnorm.1.exit.i.i:                      ; preds = %for.body.preheader.i34.i.i, %augmented_sqnorm.3.exit.i.i
  %.repack.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call18_augmented_malloccache.i.i, i64 %iv54.i.i, i32 0
  store double %205, double* %.repack.i.i, align 32, !noalias !158
  %.repack15.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call18_augmented_malloccache.i.i, i64 %iv54.i.i, i32 1
  store double %205, double* %.repack15.i.i, align 8, !noalias !158
  %.repack17.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call18_augmented_malloccache.i.i, i64 %iv54.i.i, i32 2
  %206 = bitcast double** %.repack17.i.i to i8**
  store i8* %malloccall.i30.i.i, i8** %206, align 16, !noalias !158
  %.repack19.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call18_augmented_malloccache.i.i, i64 %iv54.i.i, i32 3
  %207 = bitcast double** %.repack19.i.i to i8**
  store i8* %malloccall3.i31.i.i, i8** %207, align 8, !noalias !158
  %.repack21.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call12_augmented_malloccache.i.i, i64 %iv54.i.i, i32 0
  store double %202, double* %.repack21.i.i, align 32, !noalias !158
  %.repack22.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call12_augmented_malloccache.i.i, i64 %iv54.i.i, i32 1
  store double %202, double* %.repack22.i.i, align 8, !noalias !158
  %.repack24.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call12_augmented_malloccache.i.i, i64 %iv54.i.i, i32 2
  %208 = bitcast double** %.repack24.i.i to i8**
  store i8* %malloccall.i.i155.i, i8** %208, align 16, !noalias !158
  %.repack26.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call12_augmented_malloccache.i.i, i64 %iv54.i.i, i32 3
  %209 = bitcast double** %.repack26.i.i to i8**
  store i8* %malloccall3.i.i.i, i8** %209, align 8, !noalias !158
  %exitcond.not.i159.i = icmp eq i64 %iv.next.i153.i, %wide.trip.count.i151.i
  br i1 %exitcond.not.i159.i, label %invertfor.cond.preheader.i.i, label %for.body.i156.i, !llvm.loop !103

incinvertfor.cond.i163.i:                         ; preds = %diffesqnorm.exit.i.i, %incinvertfor.cond.lr.ph.i.i
  %indvar = phi i32 [ %indvar.next, %diffesqnorm.exit.i.i ], [ 0, %incinvertfor.cond.lr.ph.i.i ]
  %"iv'ac.052.i.i" = phi i64 [ %213, %diffesqnorm.exit.i.i ], [ %smax.i147.i, %incinvertfor.cond.lr.ph.i.i ]
  %210 = mul i32 %div.i, %indvar
  %211 = sub i32 %200, %210
  %212 = sext i32 %211 to i64
  %scevgep116 = getelementptr double, double* %scevgep, i64 %212
  %scevgep119 = getelementptr double, double* %scevgep118, i64 %212
  %213 = add nsw i64 %"iv'ac.052.i.i", -1
  %_unwrap3.i.i = trunc i64 %213 to i32
  %sext.i160.i = shl i64 %213, 32
  %idxprom28_unwrap.i.i = ashr exact i64 %sext.i160.i, 32
  %"arrayidx29'ipg_unwrap.i.i" = getelementptr inbounds double, double* %"'ipc.i", i64 %idxprom28_unwrap.i.i
  %214 = load double, double* %"arrayidx29'ipg_unwrap.i.i", align 8, !noalias !158
  %215 = fsub fast double %214, %192
  store double %215, double* %"arrayidx29'ipg_unwrap.i.i", align 8, !noalias !158
  %mul14_unwrap.i.i = mul nsw i32 %div.i, %_unwrap3.i.i
  %add15_unwrap.i.i = add nsw i32 %mul14_unwrap.i.i, %d
  %idxprom16_unwrap.i161.i = sext i32 %add15_unwrap.i.i to i64
  %"arrayidx17'ipg_unwrap.i162.i" = getelementptr inbounds double, double* %icfb, i64 %idxprom16_unwrap.i161.i
  %.elt.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call18_augmented_malloccache.i.i, i64 %213, i32 0
  %.unpack.i.i = load double, double* %.elt.i.i, align 32, !noalias !158
  %.elt1.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call18_augmented_malloccache.i.i, i64 %213, i32 1
  %.unpack2.i.i = load double, double* %.elt1.i.i, align 8, !noalias !158
  %.elt3.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call18_augmented_malloccache.i.i, i64 %213, i32 2
  %.unpack4.i.i = load double*, double** %.elt3.i.i, align 16, !noalias !158
  %.elt5.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call18_augmented_malloccache.i.i, i64 %213, i32 3
  %.unpack6.i.i = load double*, double** %.elt5.i.i, align 8, !noalias !158
  br i1 %190, label %diffesqnorm.2.exit.i.i, label %incinvertfor.cond.i51.i.i.preheader

incinvertfor.cond.i51.i.i.preheader:              ; preds = %incinvertfor.cond.i163.i
  br i1 %min.iters.check113, label %incinvertfor.cond.i51.i.i.preheader356, label %vector.memcheck

vector.memcheck:                                  ; preds = %incinvertfor.cond.i51.i.i.preheader
  %scevgep122 = getelementptr double, double* %.unpack6.i.i, i64 %185
  %scevgep125 = getelementptr double, double* %.unpack4.i.i, i64 %185
  %bound0 = icmp ult double* %scevgep116, %scevgep122
  %bound1 = icmp ult double* %.unpack6.i.i, %scevgep119
  %found.conflict = and i1 %bound0, %bound1
  %bound0127 = icmp ult double* %scevgep116, %scevgep125
  %bound1128 = icmp ult double* %.unpack4.i.i, %scevgep119
  %found.conflict129 = and i1 %bound0127, %bound1128
  %conflict.rdx = or i1 %found.conflict, %found.conflict129
  br i1 %conflict.rdx, label %incinvertfor.cond.i51.i.i.preheader356, label %vector.body112

vector.body112:                                   ; preds = %vector.memcheck, %vector.body112
  %index132 = phi i64 [ %index.next133, %vector.body112 ], [ 0, %vector.memcheck ]
  %offset.idx137 = sub i64 %185, %index132
  %216 = add nsw i64 %offset.idx137, -1
  %217 = getelementptr inbounds double, double* %.unpack6.i.i, i64 %216
  %218 = getelementptr inbounds double, double* %217, i64 -1
  %219 = bitcast double* %218 to <2 x double>*
  %wide.load138 = load <2 x double>, <2 x double>* %219, align 8, !alias.scope !188, !noalias !158
  %220 = getelementptr inbounds double, double* %217, i64 -2
  %221 = getelementptr inbounds double, double* %220, i64 -1
  %222 = bitcast double* %221 to <2 x double>*
  %wide.load140 = load <2 x double>, <2 x double>* %222, align 8, !alias.scope !188, !noalias !158
  %223 = getelementptr inbounds double, double* %.unpack4.i.i, i64 %216
  %224 = getelementptr inbounds double, double* %223, i64 -1
  %225 = bitcast double* %224 to <2 x double>*
  %wide.load142 = load <2 x double>, <2 x double>* %225, align 8, !alias.scope !191, !noalias !158
  %226 = getelementptr inbounds double, double* %223, i64 -2
  %227 = getelementptr inbounds double, double* %226, i64 -1
  %228 = bitcast double* %227 to <2 x double>*
  %wide.load144 = load <2 x double>, <2 x double>* %228, align 8, !alias.scope !191, !noalias !158
  %229 = shl i64 %offset.idx137, 32
  %230 = ashr exact i64 %229, 32
  %231 = getelementptr inbounds double, double* %"arrayidx17'ipg_unwrap.i162.i", i64 %230
  %232 = getelementptr inbounds double, double* %231, i64 -1
  %233 = bitcast double* %232 to <2 x double>*
  %wide.load146 = load <2 x double>, <2 x double>* %233, align 8, !alias.scope !193, !noalias !195
  %reverse147 = shufflevector <2 x double> %wide.load146, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %234 = getelementptr inbounds double, double* %231, i64 -2
  %235 = getelementptr inbounds double, double* %234, i64 -1
  %236 = bitcast double* %235 to <2 x double>*
  %wide.load148 = load <2 x double>, <2 x double>* %236, align 8, !alias.scope !193, !noalias !195
  %reverse149 = shufflevector <2 x double> %wide.load148, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %237 = fadd fast <2 x double> %wide.load142, %wide.load138
  %238 = shufflevector <2 x double> %237, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  %239 = fadd fast <2 x double> %wide.load144, %wide.load140
  %240 = shufflevector <2 x double> %239, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  %241 = fmul fast <2 x double> %238, %broadcast.splat151
  %242 = fmul fast <2 x double> %240, %broadcast.splat153
  %243 = fadd fast <2 x double> %241, %reverse147
  %244 = fadd fast <2 x double> %242, %reverse149
  %reverse154 = shufflevector <2 x double> %243, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %245 = bitcast double* %232 to <2 x double>*
  store <2 x double> %reverse154, <2 x double>* %245, align 8, !alias.scope !193, !noalias !195
  %reverse155 = shufflevector <2 x double> %244, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %246 = bitcast double* %235 to <2 x double>*
  store <2 x double> %reverse155, <2 x double>* %246, align 8, !alias.scope !193, !noalias !195
  %index.next133 = add i64 %index132, 4
  %247 = icmp eq i64 %index.next133, %n.vec131
  br i1 %247, label %middle.block110, label %vector.body112, !llvm.loop !196

middle.block110:                                  ; preds = %vector.body112
  br i1 %cmp.n136, label %diffesqnorm.2.exit.i.i, label %incinvertfor.cond.i51.i.i.preheader356

incinvertfor.cond.i51.i.i.preheader356:           ; preds = %vector.memcheck, %incinvertfor.cond.i51.i.i.preheader, %middle.block110
  %"iv'ac.03.i45.i.i.ph" = phi i64 [ %185, %vector.memcheck ], [ %185, %incinvertfor.cond.i51.i.i.preheader ], [ %ind.end135, %middle.block110 ]
  %xtraiter380 = and i64 %"iv'ac.03.i45.i.i.ph", 1
  %lcmp.mod381.not = icmp eq i64 %xtraiter380, 0
  br i1 %lcmp.mod381.not, label %incinvertfor.cond.i51.i.i.prol.loopexit, label %incinvertfor.cond.i51.i.i.prol

incinvertfor.cond.i51.i.i.prol:                   ; preds = %incinvertfor.cond.i51.i.i.preheader356
  %248 = add nsw i64 %"iv'ac.03.i45.i.i.ph", -1
  %249 = getelementptr inbounds double, double* %.unpack6.i.i, i64 %248
  %250 = load double, double* %249, align 8, !noalias !158, !invariant.group !197
  %251 = getelementptr inbounds double, double* %.unpack4.i.i, i64 %248
  %252 = load double, double* %251, align 8, !noalias !158, !invariant.group !198
  %sext.i46.i.i.prol = shl nuw i64 %"iv'ac.03.i45.i.i.ph", 32
  %idxprom3_unwrap.i47.i.i.prol = ashr exact i64 %sext.i46.i.i.prol, 32
  %"arrayidx4'ipg_unwrap.i48.i.i.prol" = getelementptr inbounds double, double* %"arrayidx17'ipg_unwrap.i162.i", i64 %idxprom3_unwrap.i47.i.i.prol
  %253 = load double, double* %"arrayidx4'ipg_unwrap.i48.i.i.prol", align 8, !noalias !158
  %reass.add.i49.i.i.prol = fadd fast double %252, %250
  %reass.mul.i50.i.i.prol = fmul fast double %reass.add.i49.i.i.prol, %m1diffeadd19.i.i
  %254 = fadd fast double %reass.mul.i50.i.i.prol, %253
  store double %254, double* %"arrayidx4'ipg_unwrap.i48.i.i.prol", align 8, !noalias !158
  br label %incinvertfor.cond.i51.i.i.prol.loopexit

incinvertfor.cond.i51.i.i.prol.loopexit:          ; preds = %incinvertfor.cond.i51.i.i.prol, %incinvertfor.cond.i51.i.i.preheader356
  %"iv'ac.03.i45.i.i.unr.ph" = phi i64 [ %248, %incinvertfor.cond.i51.i.i.prol ], [ %"iv'ac.03.i45.i.i.ph", %incinvertfor.cond.i51.i.i.preheader356 ]
  %255 = icmp eq i64 %"iv'ac.03.i45.i.i.ph", 1
  br i1 %255, label %diffesqnorm.2.exit.i.i, label %incinvertfor.cond.i51.i.i

incinvertfor.cond.i51.i.i:                        ; preds = %incinvertfor.cond.i51.i.i.prol.loopexit, %incinvertfor.cond.i51.i.i
  %"iv'ac.03.i45.i.i" = phi i64 [ %263, %incinvertfor.cond.i51.i.i ], [ %"iv'ac.03.i45.i.i.unr.ph", %incinvertfor.cond.i51.i.i.prol.loopexit ]
  %256 = add nsw i64 %"iv'ac.03.i45.i.i", -1
  %257 = getelementptr inbounds double, double* %.unpack6.i.i, i64 %256
  %258 = load double, double* %257, align 8, !noalias !158, !invariant.group !197
  %259 = getelementptr inbounds double, double* %.unpack4.i.i, i64 %256
  %260 = load double, double* %259, align 8, !noalias !158, !invariant.group !198
  %sext.i46.i.i = shl i64 %"iv'ac.03.i45.i.i", 32
  %idxprom3_unwrap.i47.i.i = ashr exact i64 %sext.i46.i.i, 32
  %"arrayidx4'ipg_unwrap.i48.i.i" = getelementptr inbounds double, double* %"arrayidx17'ipg_unwrap.i162.i", i64 %idxprom3_unwrap.i47.i.i
  %261 = load double, double* %"arrayidx4'ipg_unwrap.i48.i.i", align 8, !noalias !158
  %reass.add.i49.i.i = fadd fast double %260, %258
  %reass.mul.i50.i.i = fmul fast double %reass.add.i49.i.i, %m1diffeadd19.i.i
  %262 = fadd fast double %reass.mul.i50.i.i, %261
  store double %262, double* %"arrayidx4'ipg_unwrap.i48.i.i", align 8, !noalias !158
  %263 = add nsw i64 %"iv'ac.03.i45.i.i", -2
  %264 = getelementptr inbounds double, double* %.unpack6.i.i, i64 %263
  %265 = load double, double* %264, align 8, !noalias !158, !invariant.group !197
  %266 = getelementptr inbounds double, double* %.unpack4.i.i, i64 %263
  %267 = load double, double* %266, align 8, !noalias !158, !invariant.group !198
  %sext.i46.i.i.1 = shl i64 %256, 32
  %idxprom3_unwrap.i47.i.i.1 = ashr exact i64 %sext.i46.i.i.1, 32
  %"arrayidx4'ipg_unwrap.i48.i.i.1" = getelementptr inbounds double, double* %"arrayidx17'ipg_unwrap.i162.i", i64 %idxprom3_unwrap.i47.i.i.1
  %268 = load double, double* %"arrayidx4'ipg_unwrap.i48.i.i.1", align 8, !noalias !158
  %reass.add.i49.i.i.1 = fadd fast double %267, %265
  %reass.mul.i50.i.i.1 = fmul fast double %reass.add.i49.i.i.1, %m1diffeadd19.i.i
  %269 = fadd fast double %reass.mul.i50.i.i.1, %268
  store double %269, double* %"arrayidx4'ipg_unwrap.i48.i.i.1", align 8, !noalias !158
  %270 = icmp eq i64 %263, 0
  br i1 %270, label %diffesqnorm.2.exit.i.i, label %incinvertfor.cond.i51.i.i, !llvm.loop !199

diffesqnorm.2.exit.i.i:                           ; preds = %incinvertfor.cond.i51.i.i.prol.loopexit, %incinvertfor.cond.i51.i.i, %middle.block110, %incinvertfor.cond.i163.i
  %271 = load double, double* %"arrayidx17'ipg_unwrap.i162.i", align 8, !noalias !158
  %reass.add1.i43.i.i = fadd fast double %.unpack2.i.i, %.unpack.i.i
  %reass.mul2.i44.i.i = fmul fast double %reass.add1.i43.i.i, %m1diffeadd19.i.i
  %272 = fadd fast double %271, %reass.mul2.i44.i.i
  store double %272, double* %"arrayidx17'ipg_unwrap.i162.i", align 8, !noalias !158
  %273 = bitcast double* %.unpack6.i.i to i8*
  tail call void @free(i8* nonnull %273) #38, !noalias !158
  %274 = bitcast double* %.unpack4.i.i to i8*
  tail call void @free(i8* nonnull %274) #38, !noalias !158
  %mul11_unwrap.i.i = mul nsw i32 %_unwrap3.i.i, %d
  %idxprom_unwrap.i.i = sext i32 %mul11_unwrap.i.i to i64
  %"arrayidx'ipg_unwrap.i164.i" = getelementptr inbounds double, double* %"'ipc4.i", i64 %idxprom_unwrap.i.i
  %.elt7.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call12_augmented_malloccache.i.i, i64 %213, i32 0
  %.unpack8.i.i = load double, double* %.elt7.i.i, align 32, !noalias !158
  %.elt9.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call12_augmented_malloccache.i.i, i64 %213, i32 1
  %.unpack10.i.i = load double, double* %.elt9.i.i, align 8, !noalias !158
  %.elt11.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call12_augmented_malloccache.i.i, i64 %213, i32 2
  %.unpack12.i.i = load double*, double** %.elt11.i.i, align 16, !noalias !158
  %.elt13.i.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %call12_augmented_malloccache.i.i, i64 %213, i32 3
  %.unpack14.i.i = load double*, double** %.elt13.i.i, align 8, !noalias !158
  br i1 %191, label %diffesqnorm.exit.i.i, label %incinvertfor.cond.i.i.i.preheader

incinvertfor.cond.i.i.i.preheader:                ; preds = %diffesqnorm.2.exit.i.i
  br i1 %min.iters.check85, label %incinvertfor.cond.i.i.i.preheader355, label %vector.body84

vector.body84:                                    ; preds = %incinvertfor.cond.i.i.i.preheader, %vector.body84
  %index89 = phi i64 [ %index.next90, %vector.body84 ], [ 0, %incinvertfor.cond.i.i.i.preheader ]
  %offset.idx94 = sub i64 %179, %index89
  %275 = add nsw i64 %offset.idx94, -1
  %276 = getelementptr inbounds double, double* %.unpack14.i.i, i64 %275
  %277 = getelementptr inbounds double, double* %276, i64 -1
  %278 = bitcast double* %277 to <2 x double>*
  %wide.load95 = load <2 x double>, <2 x double>* %278, align 8, !noalias !158
  %279 = getelementptr inbounds double, double* %276, i64 -2
  %280 = getelementptr inbounds double, double* %279, i64 -1
  %281 = bitcast double* %280 to <2 x double>*
  %wide.load96 = load <2 x double>, <2 x double>* %281, align 8, !noalias !158
  %282 = getelementptr inbounds double, double* %.unpack12.i.i, i64 %275
  %283 = getelementptr inbounds double, double* %282, i64 -1
  %284 = bitcast double* %283 to <2 x double>*
  %wide.load98 = load <2 x double>, <2 x double>* %284, align 8, !noalias !158
  %285 = getelementptr inbounds double, double* %282, i64 -2
  %286 = getelementptr inbounds double, double* %285, i64 -1
  %287 = bitcast double* %286 to <2 x double>*
  %wide.load100 = load <2 x double>, <2 x double>* %287, align 8, !noalias !158
  %288 = shl i64 %offset.idx94, 32
  %289 = ashr exact i64 %288, 32
  %290 = getelementptr inbounds double, double* %"arrayidx'ipg_unwrap.i164.i", i64 %289
  %291 = getelementptr inbounds double, double* %290, i64 -1
  %292 = bitcast double* %291 to <2 x double>*
  %wide.load102 = load <2 x double>, <2 x double>* %292, align 8, !noalias !158
  %reverse103 = shufflevector <2 x double> %wide.load102, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %293 = getelementptr inbounds double, double* %290, i64 -2
  %294 = getelementptr inbounds double, double* %293, i64 -1
  %295 = bitcast double* %294 to <2 x double>*
  %wide.load104 = load <2 x double>, <2 x double>* %295, align 8, !noalias !158
  %reverse105 = shufflevector <2 x double> %wide.load104, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %296 = fadd fast <2 x double> %wide.load98, %wide.load95
  %297 = shufflevector <2 x double> %296, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  %298 = fadd fast <2 x double> %wide.load100, %wide.load96
  %299 = shufflevector <2 x double> %298, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  %300 = fmul fast <2 x double> %297, %broadcast.splat
  %301 = fmul fast <2 x double> %299, %broadcast.splat107
  %302 = fadd fast <2 x double> %300, %reverse103
  %303 = fadd fast <2 x double> %301, %reverse105
  %reverse108 = shufflevector <2 x double> %302, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %304 = bitcast double* %291 to <2 x double>*
  store <2 x double> %reverse108, <2 x double>* %304, align 8, !noalias !158
  %reverse109 = shufflevector <2 x double> %303, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %305 = bitcast double* %294 to <2 x double>*
  store <2 x double> %reverse109, <2 x double>* %305, align 8, !noalias !158
  %index.next90 = add i64 %index89, 4
  %306 = icmp eq i64 %index.next90, %n.vec88
  br i1 %306, label %middle.block82, label %vector.body84, !llvm.loop !200

middle.block82:                                   ; preds = %vector.body84
  br i1 %cmp.n93, label %diffesqnorm.exit.i.i, label %incinvertfor.cond.i.i.i.preheader355

incinvertfor.cond.i.i.i.preheader355:             ; preds = %incinvertfor.cond.i.i.i.preheader, %middle.block82
  %"iv'ac.03.i.i.i.ph" = phi i64 [ %179, %incinvertfor.cond.i.i.i.preheader ], [ %ind.end92, %middle.block82 ]
  br label %incinvertfor.cond.i.i.i

incinvertfor.cond.i.i.i:                          ; preds = %incinvertfor.cond.i.i.i.preheader355, %incinvertfor.cond.i.i.i
  %"iv'ac.03.i.i.i" = phi i64 [ %307, %incinvertfor.cond.i.i.i ], [ %"iv'ac.03.i.i.i.ph", %incinvertfor.cond.i.i.i.preheader355 ]
  %307 = add nsw i64 %"iv'ac.03.i.i.i", -1
  %308 = getelementptr inbounds double, double* %.unpack14.i.i, i64 %307
  %309 = load double, double* %308, align 8, !noalias !158, !invariant.group !201
  %310 = getelementptr inbounds double, double* %.unpack12.i.i, i64 %307
  %311 = load double, double* %310, align 8, !noalias !158, !invariant.group !202
  %sext.i.i165.i = shl i64 %"iv'ac.03.i.i.i", 32
  %idxprom3_unwrap.i.i.i = ashr exact i64 %sext.i.i165.i, 32
  %"arrayidx4'ipg_unwrap.i.i.i" = getelementptr inbounds double, double* %"arrayidx'ipg_unwrap.i164.i", i64 %idxprom3_unwrap.i.i.i
  %312 = load double, double* %"arrayidx4'ipg_unwrap.i.i.i", align 8, !noalias !158
  %reass.add.i.i.i = fadd fast double %311, %309
  %reass.mul.i.i.i = fmul fast double %reass.add.i.i.i, %m1diffeadd19.i.i
  %313 = fadd fast double %reass.mul.i.i.i, %312
  store double %313, double* %"arrayidx4'ipg_unwrap.i.i.i", align 8, !noalias !158
  %314 = icmp eq i64 %307, 0
  br i1 %314, label %diffesqnorm.exit.i.i, label %incinvertfor.cond.i.i.i, !llvm.loop !203

diffesqnorm.exit.i.i:                             ; preds = %incinvertfor.cond.i.i.i, %middle.block82, %diffesqnorm.2.exit.i.i
  %315 = load double, double* %"arrayidx'ipg_unwrap.i164.i", align 8, !noalias !158
  %reass.add1.i.i.i = fadd fast double %.unpack10.i.i, %.unpack8.i.i
  %reass.mul2.i.i.i = fmul fast double %reass.add1.i.i.i, %m1diffeadd19.i.i
  %316 = fadd fast double %315, %reass.mul2.i.i.i
  store double %316, double* %"arrayidx'ipg_unwrap.i164.i", align 8, !noalias !158
  %317 = bitcast double* %.unpack14.i.i to i8*
  tail call void @free(i8* nonnull %317) #38, !noalias !158
  %318 = bitcast double* %.unpack12.i.i to i8*
  tail call void @free(i8* nonnull %318) #38, !noalias !158
  %319 = icmp eq i64 %213, 0
  %indvar.next = add i32 %indvar, 1
  br i1 %319, label %diffelog_wishart_prior.exit.i, label %incinvertfor.cond.i163.i

diffelog_wishart_prior.exit.i:                    ; preds = %diffesqnorm.exit.i.i, %invertfor.cond.preheader.i.i, %augmented_log_sum_exp.5.exit.i
  tail call void @free(i8* nonnull %malloccall.i149.i) #38, !noalias !158
  tail call void @free(i8* nonnull %malloccall10.i.i) #38, !noalias !158
  %320 = fneg fast double %conv58.i
  %m1diffecall56.i = fmul fast double %175, %320
  %321 = icmp slt i32 %k, 1
  br i1 %321, label %diffelog_sum_exp.6.exit.i, label %incinvertfor.cond.lr.ph.i176.i

invertentry.i.i:                                  ; preds = %incinvertfor.cond.i175.i, %middle.block156
  %.lcssa23 = phi double [ %395, %middle.block156 ], [ %352, %incinvertfor.cond.i175.i ]
  %322 = icmp ne i32 %n.op.i.i105.pre-phi.i, 0
  %323 = and i1 %164, %322
  br i1 %323, label %incinvertfor.cond.preheader.i.i.i, label %diffelog_sum_exp.6.exit.i

incinvertfor.cond.preheader.i.i.i:                ; preds = %invertentry.i.i
  %324 = zext i32 %n.op.i.i105.pre-phi.i to i64
  %xtraiter377 = and i64 %324, 1
  %lcmp.mod378.not = icmp eq i64 %xtraiter377, 0
  br i1 %lcmp.mod378.not, label %incinvertfor.cond.i.i168.i.prol.loopexit, label %incinvertfor.cond.i.i168.i.prol

incinvertfor.cond.i.i168.i.prol:                  ; preds = %incinvertfor.cond.preheader.i.i.i
  %325 = add nsw i64 %324, -1
  %326 = getelementptr inbounds i8, i8* %malloccall.i.i106.i, i64 %325
  %327 = bitcast i8* %326 to i1*
  %328 = load i1, i1* %327, align 1, !noalias !158, !invariant.group !205
  %329 = select fast i1 %328, double 0.000000e+00, double %.lcssa23, !read_from_bin !186, !operand0 !187
  br i1 %328, label %invertif.then.i.i.i.prol, label %incinvertfor.cond.i.i168.i.prol.loopexit, !read_from_bin !186, !operand0 !187

invertif.then.i.i.i.prol:                         ; preds = %incinvertfor.cond.i.i168.i.prol
  %idxprom3_unwrap.i.i170.i.prol = sext i32 %n.op.i.i105.pre-phi.i to i64
  %"arrayidx4'ipg_unwrap.i.i171.i.prol" = getelementptr inbounds double, double* %alphasb, i64 %idxprom3_unwrap.i.i170.i.prol
  %330 = load double, double* %"arrayidx4'ipg_unwrap.i.i171.i.prol", align 8, !noalias !158
  %331 = fadd fast double %330, %.lcssa23
  store double %331, double* %"arrayidx4'ipg_unwrap.i.i171.i.prol", align 8, !noalias !158
  br label %incinvertfor.cond.i.i168.i.prol.loopexit

incinvertfor.cond.i.i168.i.prol.loopexit:         ; preds = %incinvertfor.cond.i.i168.i.prol, %invertif.then.i.i.i.prol, %incinvertfor.cond.preheader.i.i.i
  %.lcssa364.unr = phi double [ undef, %incinvertfor.cond.preheader.i.i.i ], [ %329, %invertif.then.i.i.i.prol ], [ %329, %incinvertfor.cond.i.i168.i.prol ]
  %.unr379 = phi double [ %.lcssa23, %incinvertfor.cond.preheader.i.i.i ], [ %329, %invertif.then.i.i.i.prol ], [ %329, %incinvertfor.cond.i.i168.i.prol ]
  %"iv'ac.01.i.i.i.unr" = phi i64 [ %324, %incinvertfor.cond.preheader.i.i.i ], [ %325, %invertif.then.i.i.i.prol ], [ %325, %incinvertfor.cond.i.i168.i.prol ]
  %332 = icmp eq i32 %n.op.i.i105.pre-phi.i, 1
  br i1 %332, label %diffelog_sum_exp.6.exit.i, label %incinvertfor.cond.i.i168.i

incinvertfor.cond.i.i168.i:                       ; preds = %incinvertfor.cond.i.i168.i.prol.loopexit, %invertfor.body.i.i.i.1
  %333 = phi double [ %343, %invertfor.body.i.i.i.1 ], [ %.unr379, %incinvertfor.cond.i.i168.i.prol.loopexit ]
  %"iv'ac.01.i.i.i" = phi i64 [ %339, %invertfor.body.i.i.i.1 ], [ %"iv'ac.01.i.i.i.unr", %incinvertfor.cond.i.i168.i.prol.loopexit ]
  %334 = add nsw i64 %"iv'ac.01.i.i.i", -1
  %335 = getelementptr inbounds i8, i8* %malloccall.i.i106.i, i64 %334
  %336 = bitcast i8* %335 to i1*
  %337 = load i1, i1* %336, align 1, !noalias !158, !invariant.group !205
  %338 = select fast i1 %337, double 0.000000e+00, double %333, !read_from_bin !186, !operand0 !187
  br i1 %337, label %invertif.then.i.i.i, label %invertfor.body.i.i.i, !read_from_bin !186, !operand0 !187

invertfor.body.i.i.i:                             ; preds = %invertif.then.i.i.i, %incinvertfor.cond.i.i168.i
  %339 = add nsw i64 %"iv'ac.01.i.i.i", -2
  %340 = getelementptr inbounds i8, i8* %malloccall.i.i106.i, i64 %339
  %341 = bitcast i8* %340 to i1*
  %342 = load i1, i1* %341, align 1, !noalias !158, !invariant.group !205
  %343 = select fast i1 %342, double 0.000000e+00, double %338, !read_from_bin !186, !operand0 !187
  br i1 %342, label %invertif.then.i.i.i.1, label %invertfor.body.i.i.i.1, !read_from_bin !186, !operand0 !187

invertif.then.i.i.i:                              ; preds = %incinvertfor.cond.i.i168.i
  %sext.i.i169.i = shl i64 %"iv'ac.01.i.i.i", 32
  %idxprom3_unwrap.i.i170.i = ashr exact i64 %sext.i.i169.i, 32
  %"arrayidx4'ipg_unwrap.i.i171.i" = getelementptr inbounds double, double* %alphasb, i64 %idxprom3_unwrap.i.i170.i
  %344 = load double, double* %"arrayidx4'ipg_unwrap.i.i171.i", align 8, !noalias !158
  %345 = fadd fast double %344, %333
  store double %345, double* %"arrayidx4'ipg_unwrap.i.i171.i", align 8, !noalias !158
  br label %invertfor.body.i.i.i

incinvertfor.cond.i175.i:                         ; preds = %incinvertfor.cond.i175.i.preheader, %incinvertfor.cond.i175.i
  %"iv'ac.02.i.i" = phi i64 [ %346, %incinvertfor.cond.i175.i ], [ %"iv'ac.02.i.i.ph", %incinvertfor.cond.i175.i.preheader ]
  %"call'de.01.i.i" = phi double [ %352, %incinvertfor.cond.i175.i ], [ %"call'de.01.i.i.ph", %incinvertfor.cond.i175.i.preheader ]
  %346 = add nsw i64 %"iv'ac.02.i.i", -1
  %347 = getelementptr inbounds double, double* %sub_malloccache.i127.i, i64 %346
  %348 = load double, double* %347, align 8, !noalias !158, !invariant.group !206
  %349 = tail call fast double @llvm.exp.f64(double %348) #38, !read_from_bin !186, !operand0 !187
  %350 = fmul fast double %349, %m1diffecall56.i
  %351 = fmul fast double %350, %396
  %352 = fsub fast double %"call'de.01.i.i", %351
  %sext.i172.i = shl i64 %346, 32
  %idxprom_unwrap.i173.i = ashr exact i64 %sext.i172.i, 32
  %"arrayidx'ipg_unwrap.i174.i" = getelementptr inbounds double, double* %alphasb, i64 %idxprom_unwrap.i173.i
  %353 = load double, double* %"arrayidx'ipg_unwrap.i174.i", align 8, !noalias !158
  %354 = fadd fast double %351, %353
  store double %354, double* %"arrayidx'ipg_unwrap.i174.i", align 8, !noalias !158
  %355 = icmp eq i64 %346, 0
  br i1 %355, label %invertentry.i.i, label %incinvertfor.cond.i175.i, !llvm.loop !207

incinvertfor.cond.lr.ph.i176.i:                   ; preds = %diffelog_wishart_prior.exit.i
  %356 = getelementptr inbounds double, double* %semx.0_malloccache.i125.i, i64 %smax.i147.i
  %semx.0.i.i = load double, double* %356, align 8, !noalias !158, !invariant.group !208
  %min.iters.check159 = icmp ult i64 %smax.i147.i, 4
  br i1 %min.iters.check159, label %incinvertfor.cond.i175.i.preheader, label %vector.scevcheck164

vector.scevcheck164:                              ; preds = %incinvertfor.cond.lr.ph.i176.i
  %357 = add nsw i64 %smax.i147.i, -1
  %358 = trunc i64 %smax.i147.i to i32
  %359 = add i32 %358, -1
  %360 = icmp slt i32 %359, 0
  %361 = icmp ugt i64 %357, 4294967295
  %362 = or i1 %360, %361
  br i1 %362, label %incinvertfor.cond.i175.i.preheader, label %vector.ph165

vector.ph165:                                     ; preds = %vector.scevcheck164
  %n.vec167 = and i64 %smax.i147.i, 4294967292
  %ind.end171 = and i64 %smax.i147.i, 3
  %363 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %m1diffecall56.i, i32 0
  %broadcast.splatinsert180 = insertelement <2 x double> poison, double %m1diffecall56.i, i32 0
  %broadcast.splat181 = shufflevector <2 x double> %broadcast.splatinsert180, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert182 = insertelement <2 x double> poison, double %m1diffecall56.i, i32 0
  %broadcast.splat183 = shufflevector <2 x double> %broadcast.splatinsert182, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert184 = insertelement <2 x double> poison, double %semx.0.i.i, i32 0
  %broadcast.splat185 = shufflevector <2 x double> %broadcast.splatinsert184, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert186 = insertelement <2 x double> poison, double %semx.0.i.i, i32 0
  %broadcast.splat187 = shufflevector <2 x double> %broadcast.splatinsert186, <2 x double> poison, <2 x i32> zeroinitializer
  %364 = fdiv fast <2 x double> <double 1.000000e+00, double 1.000000e+00>, %broadcast.splat185
  %365 = fdiv fast <2 x double> <double 1.000000e+00, double 1.000000e+00>, %broadcast.splat187
  br label %vector.body158

vector.body158:                                   ; preds = %vector.body158, %vector.ph165
  %index168 = phi i64 [ 0, %vector.ph165 ], [ %index.next169, %vector.body158 ]
  %vec.phi174 = phi <2 x double> [ %363, %vector.ph165 ], [ %380, %vector.body158 ]
  %vec.phi175 = phi <2 x double> [ zeroinitializer, %vector.ph165 ], [ %381, %vector.body158 ]
  %366 = xor i64 %index168, -1
  %367 = add i64 %smax.i147.i, %366
  %368 = getelementptr inbounds double, double* %sub_malloccache.i127.i, i64 %367
  %369 = getelementptr inbounds double, double* %368, i64 -1
  %370 = bitcast double* %369 to <2 x double>*
  %wide.load176 = load <2 x double>, <2 x double>* %370, align 8, !noalias !158
  %reverse177 = shufflevector <2 x double> %wide.load176, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %371 = getelementptr inbounds double, double* %368, i64 -2
  %372 = getelementptr inbounds double, double* %371, i64 -1
  %373 = bitcast double* %372 to <2 x double>*
  %wide.load178 = load <2 x double>, <2 x double>* %373, align 8, !noalias !158
  %reverse179 = shufflevector <2 x double> %wide.load178, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %374 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %reverse177)
  %375 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %reverse179)
  %376 = fmul fast <2 x double> %374, %broadcast.splat181
  %377 = fmul fast <2 x double> %375, %broadcast.splat183
  %378 = fmul fast <2 x double> %376, %364
  %379 = fmul fast <2 x double> %377, %365
  %380 = fsub fast <2 x double> %vec.phi174, %378
  %381 = fsub fast <2 x double> %vec.phi175, %379
  %382 = shl i64 %367, 32
  %383 = ashr exact i64 %382, 32
  %384 = getelementptr inbounds double, double* %alphasb, i64 %383
  %385 = getelementptr inbounds double, double* %384, i64 -1
  %386 = bitcast double* %385 to <2 x double>*
  %wide.load188 = load <2 x double>, <2 x double>* %386, align 8, !noalias !158
  %reverse189 = shufflevector <2 x double> %wide.load188, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %387 = getelementptr inbounds double, double* %384, i64 -2
  %388 = getelementptr inbounds double, double* %387, i64 -1
  %389 = bitcast double* %388 to <2 x double>*
  %wide.load190 = load <2 x double>, <2 x double>* %389, align 8, !noalias !158
  %reverse191 = shufflevector <2 x double> %wide.load190, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %390 = fadd fast <2 x double> %378, %reverse189
  %391 = fadd fast <2 x double> %379, %reverse191
  %reverse192 = shufflevector <2 x double> %390, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %392 = bitcast double* %385 to <2 x double>*
  store <2 x double> %reverse192, <2 x double>* %392, align 8, !noalias !158
  %reverse193 = shufflevector <2 x double> %391, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %393 = bitcast double* %388 to <2 x double>*
  store <2 x double> %reverse193, <2 x double>* %393, align 8, !noalias !158
  %index.next169 = add i64 %index168, 4
  %394 = icmp eq i64 %index.next169, %n.vec167
  br i1 %394, label %middle.block156, label %vector.body158, !llvm.loop !209

middle.block156:                                  ; preds = %vector.body158
  %bin.rdx194 = fadd fast <2 x double> %381, %380
  %395 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx194)
  %cmp.n172 = icmp eq i64 %smax.i147.i, %n.vec167
  br i1 %cmp.n172, label %invertentry.i.i, label %incinvertfor.cond.i175.i.preheader

incinvertfor.cond.i175.i.preheader:               ; preds = %vector.scevcheck164, %incinvertfor.cond.lr.ph.i176.i, %middle.block156
  %"iv'ac.02.i.i.ph" = phi i64 [ %smax.i147.i, %vector.scevcheck164 ], [ %smax.i147.i, %incinvertfor.cond.lr.ph.i176.i ], [ %ind.end171, %middle.block156 ]
  %"call'de.01.i.i.ph" = phi double [ %m1diffecall56.i, %vector.scevcheck164 ], [ %m1diffecall56.i, %incinvertfor.cond.lr.ph.i176.i ], [ %395, %middle.block156 ]
  %396 = fdiv fast double 1.000000e+00, %semx.0.i.i
  br label %incinvertfor.cond.i175.i

diffelog_sum_exp.6.exit.i:                        ; preds = %incinvertfor.cond.i.i168.i.prol.loopexit, %invertfor.body.i.i.i.1, %invertentry.i.i, %diffelog_wishart_prior.exit.i
  %"m.0'de.0.lcssa.i.i.i" = phi double [ %.lcssa23, %invertentry.i.i ], [ %m1diffecall56.i, %diffelog_wishart_prior.exit.i ], [ %.lcssa364.unr, %incinvertfor.cond.i.i168.i.prol.loopexit ], [ %343, %invertfor.body.i.i.i.1 ]
  %397 = load double, double* %alphasb, align 8, !noalias !158
  %398 = fadd fast double %397, %"m.0'de.0.lcssa.i.i.i"
  store double %398, double* %alphasb, align 8, !noalias !158
  tail call void @free(i8* nonnull %malloccall.i.i106.i) #38, !noalias !158
  tail call void @free(i8* nonnull %malloccall.i124.i) #38, !noalias !158
  tail call void @free(i8* nonnull %malloccall2.i126.i) #38, !noalias !158
  %399 = icmp slt i32 %n, 1
  br i1 %399, label %diffelog_sum_exp.6.exit.invertentry_crit_edge.i, label %incinvertfor.cond.lr.ph.i

diffelog_sum_exp.6.exit.invertentry_crit_edge.i:  ; preds = %diffelog_sum_exp.6.exit.i
  %.pre239.i = select i1 %6, i32 %d, i32 0
  %.pre240.i = zext i32 %.pre239.i to i64
  br label %invertentry.i

incinvertfor.cond.lr.ph.i:                        ; preds = %diffelog_sum_exp.6.exit.i
  %400 = icmp ne i32 %n.op.i.i105.pre-phi.i, 0
  %401 = and i1 %164, %400
  %402 = zext i32 %n.op.i.i105.pre-phi.i to i64
  %403 = icmp sgt i32 %d, 1
  %smax.i207.i = select i1 %403, i32 %d, i32 1
  %404 = add nsw i32 %smax.i207.i, -1
  %405 = icmp eq i32 %404, 0
  %406 = zext i32 %404 to i64
  %smax.i.i = select i1 %6, i32 %d, i32 0
  %407 = zext i32 %smax.i.i to i64
  %408 = icmp slt i32 %d, 1
  %mul8_unwrap.i.i = shl nuw nsw i32 %d, 1
  %409 = zext i32 %d to i64
  %410 = add nsw i64 %409, -1
  %411 = add i32 %d, -1
  %412 = add nsw i64 %407, -1
  %413 = add nsw i64 %smax.i147.i, -1
  %414 = trunc i64 %smax.i147.i to i32
  %415 = add i32 %414, -1
  %416 = and i64 %409, 4294967294
  %417 = add nsw i64 %416, -2
  %418 = lshr exact i64 %417, 1
  %419 = add nuw i64 %418, 1
  %min.iters.check283 = icmp ult i64 %smax.i147.i, 4
  %420 = icmp slt i32 %415, 0
  %421 = icmp ugt i64 %413, 4294967295
  %422 = or i1 %420, %421
  %n.vec291 = and i64 %smax.i147.i, 4294967292
  %ind.end295 = and i64 %smax.i147.i, 3
  %423 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %175, i32 0
  %broadcast.splatinsert304 = insertelement <2 x double> poison, double %175, i32 0
  %broadcast.splat305 = shufflevector <2 x double> %broadcast.splatinsert304, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert306 = insertelement <2 x double> poison, double %175, i32 0
  %broadcast.splat307 = shufflevector <2 x double> %broadcast.splatinsert306, <2 x double> poison, <2 x i32> zeroinitializer
  %cmp.n296 = icmp eq i64 %smax.i147.i, %n.vec291
  %xtraiter = and i64 %402, 1
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  %424 = add nsw i64 %402, -1
  %idxprom3_unwrap.i.i195.i.prol = sext i32 %n.op.i.i105.pre-phi.i to i64
  %"arrayidx4'ipg_unwrap.i.i196.i.prol" = getelementptr inbounds double, double* %"'ipc5.i", i64 %idxprom3_unwrap.i.i195.i.prol
  %425 = icmp eq i32 %n.op.i.i105.pre-phi.i, 1
  %min.iters.check252 = icmp ult i32 %404, 4
  %n.vec255 = and i64 %406, 4294967292
  %ind.end259 = and i64 %406, 3
  %cmp.n260 = icmp eq i64 %n.vec255, %406
  %min.iters.check222 = icmp ult i32 %smax.i.i, 2
  %426 = trunc i64 %412 to i32
  %427 = xor i32 %426, -1
  %428 = add i32 %smax.i.i, %427
  %429 = icmp sge i32 %428, %smax.i.i
  %430 = icmp ugt i64 %412, 4294967295
  %431 = or i1 %429, %430
  %n.vec230 = and i64 %407, 2147483646
  %ind.end234 = and i64 %407, 1
  %432 = getelementptr inbounds i8, i8* %"call16'mi.i", i64 -8
  %433 = bitcast i8* %432 to double*
  %434 = getelementptr inbounds i8, i8* %"call13'mi.i", i64 -8
  %435 = bitcast i8* %434 to double*
  %cmp.n235 = icmp eq i64 %n.vec230, %407
  %min.iters.check199 = icmp eq i32 %d, 1
  %436 = trunc i64 %410 to i32
  %437 = sub i32 %411, %436
  %438 = icmp sgt i32 %437, %411
  %439 = icmp ugt i64 %410, 4294967295
  %440 = or i1 %438, %439
  %n.vec207 = and i64 %409, 4294967294
  %ind.end211 = and i64 %409, 1
  %xtraiter373 = and i64 %419, 1
  %441 = icmp eq i64 %417, 0
  %unroll_iter = and i64 %419, -2
  %442 = getelementptr inbounds i8, i8* %"call13'mi.i", i64 -8
  %443 = bitcast i8* %442 to double*
  %444 = getelementptr inbounds i8, i8* %"call13'mi.i", i64 -8
  %445 = bitcast i8* %444 to double*
  %lcmp.mod374.not = icmp eq i64 %xtraiter373, 0
  %446 = getelementptr inbounds i8, i8* %"call13'mi.i", i64 -8
  %447 = bitcast i8* %446 to double*
  %cmp.n212 = icmp eq i64 %n.vec207, %409
  br label %incinvertfor.cond.i

invertentry.i:                                    ; preds = %invertfor.cond.loopexit.i, %diffelog_sum_exp.6.exit.invertentry_crit_edge.i
  %.pre-phi.i = phi i64 [ %.pre240.i, %diffelog_sum_exp.6.exit.invertentry_crit_edge.i ], [ %407, %invertfor.cond.loopexit.i ]
  %448 = add nuw nsw i64 %.pre-phi.i, 1
  br i1 %321, label %diffegmm_objective.exit, label %incinvertfor.cond.lr.ph.i180.i

incinvertfor.cond.lr.ph.i180.i:                   ; preds = %invertentry.i
  %449 = zext i32 %k to i64
  %450 = icmp slt i32 %d, 1
  %451 = add nsw i64 %.pre-phi.i, -1
  %452 = add i32 %k, -1
  %453 = mul i32 %452, %d
  %454 = trunc i64 %.pre-phi.i to i32
  %455 = add i32 %453, %454
  %456 = mul i32 %div.i, %452
  %457 = add i32 %456, %454
  %min.iters.check323 = icmp ult i64 %.pre-phi.i, 2
  %458 = trunc i64 %451 to i32
  %459 = icmp ugt i64 %451, 4294967295
  %460 = trunc i64 %451 to i32
  %461 = icmp ugt i64 %451, 4294967295
  %n.vec336 = and i64 %.pre-phi.i, 4294967294
  %ind.end340 = and i64 %.pre-phi.i, 1
  %462 = getelementptr inbounds i8, i8* %"call'mi.i", i64 -8
  %463 = bitcast i8* %462 to double*
  %464 = getelementptr inbounds i8, i8* %malloccall.i.i, i64 -8
  %465 = bitcast i8* %464 to double*
  %466 = getelementptr inbounds double, double* %icfb, i64 -1
  %cmp.n341 = icmp eq i64 %.pre-phi.i, %n.vec336
  br label %incinvertfor.cond.i182.i

incinvertfor.cond.i182.i:                         ; preds = %invertfor.body.i.i, %incinvertfor.cond.lr.ph.i180.i
  %indvar325 = phi i32 [ %indvar.next326, %invertfor.body.i.i ], [ 0, %incinvertfor.cond.lr.ph.i180.i ]
  %"iv'ac.03.i.i" = phi i64 [ %473, %invertfor.body.i.i ], [ %449, %incinvertfor.cond.lr.ph.i180.i ]
  %467 = mul i32 %indvar325, %d
  %468 = xor i32 %467, -1
  %469 = add i32 %455, %468
  %470 = mul i32 %div.i, %indvar325
  %471 = xor i32 %470, -1
  %472 = add i32 %457, %471
  %473 = add nsw i64 %"iv'ac.03.i.i", -1
  br i1 %450, label %incinvertfor.cond.invertfor.body_crit_edge.i.i, label %incinvertfor.cond1.lr.ph.i.i

incinvertfor.cond.invertfor.body_crit_edge.i.i:   ; preds = %incinvertfor.cond.i182.i
  %.pre.i183.i = shl i64 %473, 32
  %.pre8.i.i = ashr exact i64 %.pre.i183.i, 32
  br label %invertfor.body.i.i

incinvertfor.cond1.lr.ph.i.i:                     ; preds = %incinvertfor.cond.i182.i
  %_unwrap4.i.i = trunc i64 %473 to i32
  %mul13_unwrap.i.i = mul nsw i32 %_unwrap4.i.i, %d
  %474 = mul nuw nsw i64 %473, %448
  %sext.i184.i = shl i64 %473, 32
  %idxprom11_unwrap.i.i = ashr exact i64 %sext.i184.i, 32
  %"arrayidx12'ipg_unwrap.i.i" = getelementptr inbounds double, double* %"'ipc.i", i64 %idxprom11_unwrap.i.i
  %mul4_unwrap.i.i = mul nsw i32 %div.i, %_unwrap4.i.i
  %475 = load double, double* %"arrayidx12'ipg_unwrap.i.i", align 8, !noalias !158
  br i1 %min.iters.check323, label %incinvertfor.cond1.i.i.preheader, label %vector.scevcheck333

vector.scevcheck333:                              ; preds = %incinvertfor.cond1.lr.ph.i.i
  %476 = sub i32 %469, %458
  %477 = icmp sgt i32 %476, %469
  %478 = or i1 %477, %459
  %479 = sub i32 %472, %460
  %480 = icmp sgt i32 %479, %472
  %481 = or i1 %480, %461
  %482 = or i1 %478, %481
  br i1 %482, label %incinvertfor.cond1.i.i.preheader, label %vector.ph334

vector.ph334:                                     ; preds = %vector.scevcheck333
  %broadcast.splatinsert349 = insertelement <2 x double> poison, double %475, i32 0
  %broadcast.splat350 = shufflevector <2 x double> %broadcast.splatinsert349, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body322

vector.body322:                                   ; preds = %vector.body322, %vector.ph334
  %index337 = phi i64 [ 0, %vector.ph334 ], [ %index.next338, %vector.body322 ]
  %483 = xor i64 %index337, -1
  %484 = add i64 %.pre-phi.i, %483
  %485 = trunc i64 %484 to i32
  %486 = add nsw i32 %mul13_unwrap.i.i, %485
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds double, double* %463, i64 %487
  %489 = bitcast double* %488 to <2 x double>*
  %wide.load343 = load <2 x double>, <2 x double>* %489, align 8, !noalias !158
  %reverse344 = shufflevector <2 x double> %wide.load343, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %490 = bitcast double* %488 to <2 x double>*
  store <2 x double> zeroinitializer, <2 x double>* %490, align 8, !noalias !158
  %491 = add nuw nsw i64 %484, %474
  %492 = getelementptr inbounds double, double* %465, i64 %491
  %493 = bitcast double* %492 to <2 x double>*
  %wide.load345 = load <2 x double>, <2 x double>* %493, align 8, !noalias !158
  %reverse346 = shufflevector <2 x double> %wide.load345, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %494 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %reverse346)
  %495 = fmul fast <2 x double> %494, %reverse344
  %496 = add nsw i32 %mul4_unwrap.i.i, %485
  %497 = sext i32 %496 to i64
  %498 = getelementptr inbounds double, double* %466, i64 %497
  %499 = bitcast double* %498 to <2 x double>*
  %wide.load347 = load <2 x double>, <2 x double>* %499, align 8, !noalias !158
  %reverse348 = shufflevector <2 x double> %wide.load347, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %500 = fadd fast <2 x double> %reverse348, %broadcast.splat350
  %501 = fadd fast <2 x double> %500, %495
  %reverse351 = shufflevector <2 x double> %501, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %502 = bitcast double* %498 to <2 x double>*
  store <2 x double> %reverse351, <2 x double>* %502, align 8, !noalias !158
  %index.next338 = add i64 %index337, 2
  %503 = icmp eq i64 %index.next338, %n.vec336
  br i1 %503, label %middle.block320, label %vector.body322, !llvm.loop !210

middle.block320:                                  ; preds = %vector.body322
  br i1 %cmp.n341, label %invertfor.body.i.i, label %incinvertfor.cond1.i.i.preheader

incinvertfor.cond1.i.i.preheader:                 ; preds = %vector.scevcheck333, %incinvertfor.cond1.lr.ph.i.i, %middle.block320
  %"iv1'ac.12.i.i.ph" = phi i64 [ %.pre-phi.i, %vector.scevcheck333 ], [ %.pre-phi.i, %incinvertfor.cond1.lr.ph.i.i ], [ %ind.end340, %middle.block320 ]
  br label %incinvertfor.cond1.i.i

invertfor.body.i.i:                               ; preds = %incinvertfor.cond1.i.i, %middle.block320, %incinvertfor.cond.invertfor.body_crit_edge.i.i
  %idxprom_unwrap.pre-phi.i.i = phi i64 [ %.pre8.i.i, %incinvertfor.cond.invertfor.body_crit_edge.i.i ], [ %idxprom11_unwrap.i.i, %middle.block320 ], [ %idxprom11_unwrap.i.i, %incinvertfor.cond1.i.i ]
  %"arrayidx'ipg_unwrap.i185.i" = getelementptr inbounds double, double* %"'ipc.i", i64 %idxprom_unwrap.pre-phi.i.i
  store double 0.000000e+00, double* %"arrayidx'ipg_unwrap.i185.i", align 8, !noalias !158
  %504 = icmp eq i64 %473, 0
  %indvar.next326 = add i32 %indvar325, 1
  br i1 %504, label %diffegmm_objective.exit, label %incinvertfor.cond.i182.i

incinvertfor.cond1.i.i:                           ; preds = %incinvertfor.cond1.i.i.preheader, %incinvertfor.cond1.i.i
  %"iv1'ac.12.i.i" = phi i64 [ %505, %incinvertfor.cond1.i.i ], [ %"iv1'ac.12.i.i.ph", %incinvertfor.cond1.i.i.preheader ]
  %505 = add nsw i64 %"iv1'ac.12.i.i", -1
  %_unwrap5.i.i = trunc i64 %505 to i32
  %add14_unwrap.i.i = add nsw i32 %mul13_unwrap.i.i, %_unwrap5.i.i
  %idxprom15_unwrap.i.i = sext i32 %add14_unwrap.i.i to i64
  %"arrayidx16'ipg_unwrap.i.i" = getelementptr inbounds double, double* %"'ipc4.i", i64 %idxprom15_unwrap.i.i
  %506 = load double, double* %"arrayidx16'ipg_unwrap.i.i", align 8, !noalias !158
  store double 0.000000e+00, double* %"arrayidx16'ipg_unwrap.i.i", align 8, !noalias !158
  %507 = add nuw nsw i64 %505, %474
  %508 = getelementptr inbounds double, double* %_malloccache.i.i, i64 %507
  %509 = load double, double* %508, align 8, !noalias !158, !invariant.group !211
  %510 = tail call fast double @llvm.exp.f64(double %509) #38, !read_from_bin !186, !operand0 !187
  %511 = fmul fast double %510, %506
  %add5_unwrap.i.i = add nsw i32 %mul4_unwrap.i.i, %_unwrap5.i.i
  %idxprom6_unwrap.i.i = sext i32 %add5_unwrap.i.i to i64
  %"arrayidx7'ipg_unwrap.i.i" = getelementptr inbounds double, double* %icfb, i64 %idxprom6_unwrap.i.i
  %512 = load double, double* %"arrayidx7'ipg_unwrap.i.i", align 8, !noalias !158
  %513 = fadd fast double %512, %475
  %514 = fadd fast double %513, %511
  store double %514, double* %"arrayidx7'ipg_unwrap.i.i", align 8, !noalias !158
  %515 = icmp eq i64 %505, 0
  br i1 %515, label %invertfor.body.i.i, label %incinvertfor.cond1.i.i, !llvm.loop !212

invertfor.cond.loopexit.critedge.i:               ; preds = %incinvertfor.cond.i
  %516 = load double, double* %"'ipc5.i", align 8, !noalias !158
  %517 = fadd fast double %516, %175
  store double %517, double* %"'ipc5.i", align 8, !noalias !158
  %518 = bitcast i1* %.unpack.i to i8*
  tail call void @free(i8* nonnull %518) #38, !noalias !158
  %519 = bitcast double* %.unpack2.i to i8*
  tail call void @free(i8* nonnull %519) #38, !noalias !158
  %520 = bitcast double* %.unpack4.i to i8*
  tail call void @free(i8* nonnull %520) #38, !noalias !158
  br label %invertfor.cond.loopexit.i

invertfor.cond.loopexit.i:                        ; preds = %diffesubtract.exit.i, %invertfor.cond.loopexit.critedge.i
  %521 = icmp eq i64 %522, 0
  br i1 %521, label %invertentry.i, label %incinvertfor.cond.i

incinvertfor.cond.i:                              ; preds = %invertfor.cond.loopexit.i, %incinvertfor.cond.lr.ph.i
  %"iv'ac.0223.i" = phi i64 [ %smax.i, %incinvertfor.cond.lr.ph.i ], [ %522, %invertfor.cond.loopexit.i ]
  %522 = add nsw i64 %"iv'ac.0223.i", -1
  %.elt.i = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %call51_augmented_malloccache.i, i64 %522, i32 0
  %.unpack.i = load i1*, i1** %.elt.i, align 8, !noalias !158
  %.elt1.i = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %call51_augmented_malloccache.i, i64 %522, i32 1
  %.unpack2.i = load double*, double** %.elt1.i, align 8, !noalias !158
  %.elt3.i = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %call51_augmented_malloccache.i, i64 %522, i32 2
  %.unpack4.i = load double*, double** %.elt3.i, align 8, !noalias !158
  br i1 %321, label %invertfor.cond.loopexit.critedge.i, label %incinvertfor.cond.lr.ph.i206.i

invertentry.i189.i:                               ; preds = %incinvertfor.cond.i204.i, %middle.block280
  %.lcssa = phi double [ %581, %middle.block280 ], [ %545, %incinvertfor.cond.i204.i ]
  br i1 %401, label %incinvertfor.cond.i.i192.i.preheader, label %incinvertfor.cond22.lr.ph.i

incinvertfor.cond.i.i192.i.preheader:             ; preds = %invertentry.i189.i
  br i1 %lcmp.mod.not, label %incinvertfor.cond.i.i192.i.prol.loopexit, label %incinvertfor.cond.i.i192.i.prol

incinvertfor.cond.i.i192.i.prol:                  ; preds = %incinvertfor.cond.i.i192.i.preheader
  %523 = getelementptr inbounds i1, i1* %.unpack.i, i64 %424
  %524 = load i1, i1* %523, align 1, !noalias !158, !invariant.group !213
  %525 = select fast i1 %524, double 0.000000e+00, double %.lcssa, !read_from_bin !186, !operand0 !187
  br i1 %524, label %invertif.then.i.i197.i.prol, label %incinvertfor.cond.i.i192.i.prol.loopexit, !read_from_bin !186, !operand0 !187

invertif.then.i.i197.i.prol:                      ; preds = %incinvertfor.cond.i.i192.i.prol
  %526 = load double, double* %"arrayidx4'ipg_unwrap.i.i196.i.prol", align 8, !noalias !158
  %527 = fadd fast double %526, %.lcssa
  store double %527, double* %"arrayidx4'ipg_unwrap.i.i196.i.prol", align 8, !noalias !158
  br label %incinvertfor.cond.i.i192.i.prol.loopexit

incinvertfor.cond.i.i192.i.prol.loopexit:         ; preds = %incinvertfor.cond.i.i192.i.preheader, %invertif.then.i.i197.i.prol, %incinvertfor.cond.i.i192.i.prol
  %.lcssa362.unr.ph = phi double [ undef, %incinvertfor.cond.i.i192.i.preheader ], [ %525, %invertif.then.i.i197.i.prol ], [ %525, %incinvertfor.cond.i.i192.i.prol ]
  %.unr.ph = phi double [ %.lcssa, %incinvertfor.cond.i.i192.i.preheader ], [ %525, %invertif.then.i.i197.i.prol ], [ %525, %incinvertfor.cond.i.i192.i.prol ]
  %"iv'ac.01.i.i191.i.unr.ph" = phi i64 [ %402, %incinvertfor.cond.i.i192.i.preheader ], [ %424, %invertif.then.i.i197.i.prol ], [ %424, %incinvertfor.cond.i.i192.i.prol ]
  br i1 %425, label %incinvertfor.cond22.lr.ph.i, label %incinvertfor.cond.i.i192.i

incinvertfor.cond.i.i192.i:                       ; preds = %incinvertfor.cond.i.i192.i.prol.loopexit, %invertfor.body.i.i193.i.1
  %528 = phi double [ %536, %invertfor.body.i.i193.i.1 ], [ %.unr.ph, %incinvertfor.cond.i.i192.i.prol.loopexit ]
  %"iv'ac.01.i.i191.i" = phi i64 [ %533, %invertfor.body.i.i193.i.1 ], [ %"iv'ac.01.i.i191.i.unr.ph", %incinvertfor.cond.i.i192.i.prol.loopexit ]
  %529 = add nsw i64 %"iv'ac.01.i.i191.i", -1
  %530 = getelementptr inbounds i1, i1* %.unpack.i, i64 %529
  %531 = load i1, i1* %530, align 1, !noalias !158, !invariant.group !213
  %532 = select fast i1 %531, double 0.000000e+00, double %528, !read_from_bin !186, !operand0 !187
  br i1 %531, label %invertif.then.i.i197.i, label %invertfor.body.i.i193.i, !read_from_bin !186, !operand0 !187

invertfor.body.i.i193.i:                          ; preds = %invertif.then.i.i197.i, %incinvertfor.cond.i.i192.i
  %533 = add nsw i64 %"iv'ac.01.i.i191.i", -2
  %534 = getelementptr inbounds i1, i1* %.unpack.i, i64 %533
  %535 = load i1, i1* %534, align 1, !noalias !158, !invariant.group !213
  %536 = select fast i1 %535, double 0.000000e+00, double %532, !read_from_bin !186, !operand0 !187
  br i1 %535, label %invertif.then.i.i197.i.1, label %invertfor.body.i.i193.i.1, !read_from_bin !186, !operand0 !187

invertif.then.i.i197.i:                           ; preds = %incinvertfor.cond.i.i192.i
  %sext.i.i194.i = shl i64 %"iv'ac.01.i.i191.i", 32
  %idxprom3_unwrap.i.i195.i = ashr exact i64 %sext.i.i194.i, 32
  %"arrayidx4'ipg_unwrap.i.i196.i" = getelementptr inbounds double, double* %"'ipc5.i", i64 %idxprom3_unwrap.i.i195.i
  %537 = load double, double* %"arrayidx4'ipg_unwrap.i.i196.i", align 8, !noalias !158
  %538 = fadd fast double %537, %528
  store double %538, double* %"arrayidx4'ipg_unwrap.i.i196.i", align 8, !noalias !158
  br label %invertfor.body.i.i193.i

incinvertfor.cond.i204.i:                         ; preds = %incinvertfor.cond.i204.i.preheader, %incinvertfor.cond.i204.i
  %"iv'ac.02.i199.i" = phi i64 [ %539, %incinvertfor.cond.i204.i ], [ %"iv'ac.02.i199.i.ph", %incinvertfor.cond.i204.i.preheader ]
  %"call'de.01.i200.i" = phi double [ %545, %incinvertfor.cond.i204.i ], [ %"call'de.01.i200.i.ph", %incinvertfor.cond.i204.i.preheader ]
  %539 = add nsw i64 %"iv'ac.02.i199.i", -1
  %540 = getelementptr inbounds double, double* %.unpack4.i, i64 %539
  %541 = load double, double* %540, align 8, !noalias !158, !invariant.group !214
  %542 = tail call fast double @llvm.exp.f64(double %541) #38, !read_from_bin !186, !operand0 !187
  %543 = fmul fast double %542, %175
  %544 = fmul fast double %543, %582
  %545 = fsub fast double %"call'de.01.i200.i", %544
  %sext.i201.i = shl i64 %539, 32
  %idxprom_unwrap.i202.i = ashr exact i64 %sext.i201.i, 32
  %"arrayidx'ipg_unwrap.i203.i" = getelementptr inbounds double, double* %"'ipc5.i", i64 %idxprom_unwrap.i202.i
  %546 = load double, double* %"arrayidx'ipg_unwrap.i203.i", align 8, !noalias !158
  %547 = fadd fast double %544, %546
  store double %547, double* %"arrayidx'ipg_unwrap.i203.i", align 8, !noalias !158
  %548 = icmp eq i64 %539, 0
  br i1 %548, label %invertentry.i189.i, label %incinvertfor.cond.i204.i, !llvm.loop !215

incinvertfor.cond.lr.ph.i206.i:                   ; preds = %incinvertfor.cond.i
  %549 = getelementptr inbounds double, double* %.unpack2.i, i64 %smax.i147.i
  %semx.0.i205.i = load double, double* %549, align 8, !noalias !158, !invariant.group !216
  %brmerge396 = or i1 %min.iters.check283, %422
  br i1 %brmerge396, label %incinvertfor.cond.i204.i.preheader, label %vector.ph289

vector.ph289:                                     ; preds = %incinvertfor.cond.lr.ph.i206.i
  %broadcast.splatinsert308 = insertelement <2 x double> poison, double %semx.0.i205.i, i32 0
  %broadcast.splat309 = shufflevector <2 x double> %broadcast.splatinsert308, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert310 = insertelement <2 x double> poison, double %semx.0.i205.i, i32 0
  %broadcast.splat311 = shufflevector <2 x double> %broadcast.splatinsert310, <2 x double> poison, <2 x i32> zeroinitializer
  %550 = fdiv fast <2 x double> <double 1.000000e+00, double 1.000000e+00>, %broadcast.splat309
  %551 = fdiv fast <2 x double> <double 1.000000e+00, double 1.000000e+00>, %broadcast.splat311
  br label %vector.body282

vector.body282:                                   ; preds = %vector.body282, %vector.ph289
  %index292 = phi i64 [ 0, %vector.ph289 ], [ %index.next293, %vector.body282 ]
  %vec.phi298 = phi <2 x double> [ %423, %vector.ph289 ], [ %566, %vector.body282 ]
  %vec.phi299 = phi <2 x double> [ zeroinitializer, %vector.ph289 ], [ %567, %vector.body282 ]
  %552 = xor i64 %index292, -1
  %553 = add i64 %smax.i147.i, %552
  %554 = getelementptr inbounds double, double* %.unpack4.i, i64 %553
  %555 = getelementptr inbounds double, double* %554, i64 -1
  %556 = bitcast double* %555 to <2 x double>*
  %wide.load300 = load <2 x double>, <2 x double>* %556, align 8, !noalias !158
  %reverse301 = shufflevector <2 x double> %wide.load300, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %557 = getelementptr inbounds double, double* %554, i64 -2
  %558 = getelementptr inbounds double, double* %557, i64 -1
  %559 = bitcast double* %558 to <2 x double>*
  %wide.load302 = load <2 x double>, <2 x double>* %559, align 8, !noalias !158
  %reverse303 = shufflevector <2 x double> %wide.load302, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %560 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %reverse301)
  %561 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %reverse303)
  %562 = fmul fast <2 x double> %560, %broadcast.splat305
  %563 = fmul fast <2 x double> %561, %broadcast.splat307
  %564 = fmul fast <2 x double> %562, %550
  %565 = fmul fast <2 x double> %563, %551
  %566 = fsub fast <2 x double> %vec.phi298, %564
  %567 = fsub fast <2 x double> %vec.phi299, %565
  %568 = shl i64 %553, 32
  %569 = ashr exact i64 %568, 32
  %570 = getelementptr inbounds double, double* %"'ipc5.i", i64 %569
  %571 = getelementptr inbounds double, double* %570, i64 -1
  %572 = bitcast double* %571 to <2 x double>*
  %wide.load312 = load <2 x double>, <2 x double>* %572, align 8, !noalias !158
  %reverse313 = shufflevector <2 x double> %wide.load312, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %573 = getelementptr inbounds double, double* %570, i64 -2
  %574 = getelementptr inbounds double, double* %573, i64 -1
  %575 = bitcast double* %574 to <2 x double>*
  %wide.load314 = load <2 x double>, <2 x double>* %575, align 8, !noalias !158
  %reverse315 = shufflevector <2 x double> %wide.load314, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %576 = fadd fast <2 x double> %564, %reverse313
  %577 = fadd fast <2 x double> %565, %reverse315
  %reverse316 = shufflevector <2 x double> %576, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %578 = bitcast double* %571 to <2 x double>*
  store <2 x double> %reverse316, <2 x double>* %578, align 8, !noalias !158
  %reverse317 = shufflevector <2 x double> %577, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %579 = bitcast double* %574 to <2 x double>*
  store <2 x double> %reverse317, <2 x double>* %579, align 8, !noalias !158
  %index.next293 = add i64 %index292, 4
  %580 = icmp eq i64 %index.next293, %n.vec291
  br i1 %580, label %middle.block280, label %vector.body282, !llvm.loop !217

middle.block280:                                  ; preds = %vector.body282
  %bin.rdx318 = fadd fast <2 x double> %567, %566
  %581 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx318)
  br i1 %cmp.n296, label %invertentry.i189.i, label %incinvertfor.cond.i204.i.preheader

incinvertfor.cond.i204.i.preheader:               ; preds = %incinvertfor.cond.lr.ph.i206.i, %middle.block280
  %"iv'ac.02.i199.i.ph" = phi i64 [ %smax.i147.i, %incinvertfor.cond.lr.ph.i206.i ], [ %ind.end295, %middle.block280 ]
  %"call'de.01.i200.i.ph" = phi double [ %175, %incinvertfor.cond.lr.ph.i206.i ], [ %581, %middle.block280 ]
  %582 = fdiv fast double 1.000000e+00, %semx.0.i205.i
  br label %incinvertfor.cond.i204.i

incinvertfor.cond22.lr.ph.i:                      ; preds = %incinvertfor.cond.i.i192.i.prol.loopexit, %invertfor.body.i.i193.i.1, %invertentry.i189.i
  %"m.0'de.0.lcssa.i.i198.i" = phi double [ %.lcssa, %invertentry.i189.i ], [ %.lcssa362.unr.ph, %incinvertfor.cond.i.i192.i.prol.loopexit ], [ %536, %invertfor.body.i.i193.i.1 ]
  %583 = load double, double* %"'ipc5.i", align 8, !noalias !158
  %584 = fadd fast double %583, %"m.0'de.0.lcssa.i.i198.i"
  store double %584, double* %"'ipc5.i", align 8, !noalias !158
  %585 = bitcast i1* %.unpack.i to i8*
  tail call void @free(i8* nonnull %585) #38, !noalias !158
  %586 = bitcast double* %.unpack2.i to i8*
  tail call void @free(i8* nonnull %586) #38, !noalias !158
  %587 = bitcast double* %.unpack4.i to i8*
  tail call void @free(i8* nonnull %587) #38, !noalias !158
  %588 = mul nuw nsw i64 %522, %39
  br label %incinvertfor.cond22.i

incinvertfor.cond22.i:                            ; preds = %diffesubtract.exit.i, %incinvertfor.cond22.lr.ph.i
  %"iv1'ac.1221.i" = phi i64 [ %smax3.i, %incinvertfor.cond22.lr.ph.i ], [ %589, %diffesubtract.exit.i ]
  %589 = add nsw i64 %"iv1'ac.1221.i", -1
  %"arrayidx49'ipg_unwrap.i" = getelementptr inbounds double, double* %"'ipc5.i", i64 %589
  %590 = load double, double* %"arrayidx49'ipg_unwrap.i", align 8, !noalias !158
  store double 0.000000e+00, double* %"arrayidx49'ipg_unwrap.i", align 8, !noalias !158
  %m1diffecall46.i = fmul fast double %590, -5.000000e-01
  %591 = add nuw nsw i64 %589, %588
  %.elt5.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %subcache_malloccache.i, i64 %591, i32 0
  %.unpack6.i = load double, double* %.elt5.i, align 32, !noalias !158
  %.elt7.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %subcache_malloccache.i, i64 %591, i32 1
  %.unpack8.i = load double, double* %.elt7.i, align 8, !noalias !158
  %.elt9.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %subcache_malloccache.i, i64 %591, i32 2
  %.unpack10.i = load double*, double** %.elt9.i, align 16, !noalias !158
  %.elt11.i = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %subcache_malloccache.i, i64 %591, i32 3
  %.unpack12.i = load double*, double** %.elt11.i, align 8, !noalias !158
  br i1 %405, label %diffesqnorm.exit.i, label %incinvertfor.cond.i214.i.preheader

incinvertfor.cond.i214.i.preheader:               ; preds = %incinvertfor.cond22.i
  br i1 %min.iters.check252, label %incinvertfor.cond.i214.i.preheader354, label %vector.ph253

vector.ph253:                                     ; preds = %incinvertfor.cond.i214.i.preheader
  %broadcast.splatinsert274 = insertelement <2 x double> poison, double %m1diffecall46.i, i32 0
  %broadcast.splat275 = shufflevector <2 x double> %broadcast.splatinsert274, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert276 = insertelement <2 x double> poison, double %m1diffecall46.i, i32 0
  %broadcast.splat277 = shufflevector <2 x double> %broadcast.splatinsert276, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body251

vector.body251:                                   ; preds = %vector.body251, %vector.ph253
  %index256 = phi i64 [ 0, %vector.ph253 ], [ %index.next257, %vector.body251 ]
  %offset.idx261 = sub i64 %406, %index256
  %592 = add nsw i64 %offset.idx261, -1
  %593 = getelementptr inbounds double, double* %.unpack12.i, i64 %592
  %594 = getelementptr inbounds double, double* %593, i64 -1
  %595 = bitcast double* %594 to <2 x double>*
  %wide.load262 = load <2 x double>, <2 x double>* %595, align 8, !noalias !158
  %596 = getelementptr inbounds double, double* %593, i64 -2
  %597 = getelementptr inbounds double, double* %596, i64 -1
  %598 = bitcast double* %597 to <2 x double>*
  %wide.load264 = load <2 x double>, <2 x double>* %598, align 8, !noalias !158
  %599 = getelementptr inbounds double, double* %.unpack10.i, i64 %592
  %600 = getelementptr inbounds double, double* %599, i64 -1
  %601 = bitcast double* %600 to <2 x double>*
  %wide.load266 = load <2 x double>, <2 x double>* %601, align 8, !noalias !158
  %602 = getelementptr inbounds double, double* %599, i64 -2
  %603 = getelementptr inbounds double, double* %602, i64 -1
  %604 = bitcast double* %603 to <2 x double>*
  %wide.load268 = load <2 x double>, <2 x double>* %604, align 8, !noalias !158
  %605 = shl i64 %offset.idx261, 32
  %606 = ashr exact i64 %605, 32
  %607 = getelementptr inbounds double, double* %"'ipc6.i", i64 %606
  %608 = getelementptr inbounds double, double* %607, i64 -1
  %609 = bitcast double* %608 to <2 x double>*
  %wide.load270 = load <2 x double>, <2 x double>* %609, align 8, !noalias !158
  %reverse271 = shufflevector <2 x double> %wide.load270, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %610 = getelementptr inbounds double, double* %607, i64 -2
  %611 = getelementptr inbounds double, double* %610, i64 -1
  %612 = bitcast double* %611 to <2 x double>*
  %wide.load272 = load <2 x double>, <2 x double>* %612, align 8, !noalias !158
  %reverse273 = shufflevector <2 x double> %wide.load272, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %613 = fadd fast <2 x double> %wide.load266, %wide.load262
  %614 = shufflevector <2 x double> %613, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  %615 = fadd fast <2 x double> %wide.load268, %wide.load264
  %616 = shufflevector <2 x double> %615, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  %617 = fmul fast <2 x double> %614, %broadcast.splat275
  %618 = fmul fast <2 x double> %616, %broadcast.splat277
  %619 = fadd fast <2 x double> %617, %reverse271
  %620 = fadd fast <2 x double> %618, %reverse273
  %reverse278 = shufflevector <2 x double> %619, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %621 = bitcast double* %608 to <2 x double>*
  store <2 x double> %reverse278, <2 x double>* %621, align 8, !noalias !158
  %reverse279 = shufflevector <2 x double> %620, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %622 = bitcast double* %611 to <2 x double>*
  store <2 x double> %reverse279, <2 x double>* %622, align 8, !noalias !158
  %index.next257 = add i64 %index256, 4
  %623 = icmp eq i64 %index.next257, %n.vec255
  br i1 %623, label %middle.block249, label %vector.body251, !llvm.loop !218

middle.block249:                                  ; preds = %vector.body251
  br i1 %cmp.n260, label %diffesqnorm.exit.i, label %incinvertfor.cond.i214.i.preheader354

incinvertfor.cond.i214.i.preheader354:            ; preds = %incinvertfor.cond.i214.i.preheader, %middle.block249
  %"iv'ac.03.i210.i.ph" = phi i64 [ %406, %incinvertfor.cond.i214.i.preheader ], [ %ind.end259, %middle.block249 ]
  br label %incinvertfor.cond.i214.i

incinvertfor.cond.i214.i:                         ; preds = %incinvertfor.cond.i214.i.preheader354, %incinvertfor.cond.i214.i
  %"iv'ac.03.i210.i" = phi i64 [ %624, %incinvertfor.cond.i214.i ], [ %"iv'ac.03.i210.i.ph", %incinvertfor.cond.i214.i.preheader354 ]
  %624 = add nsw i64 %"iv'ac.03.i210.i", -1
  %625 = getelementptr inbounds double, double* %.unpack12.i, i64 %624
  %626 = load double, double* %625, align 8, !noalias !158, !invariant.group !201
  %627 = getelementptr inbounds double, double* %.unpack10.i, i64 %624
  %628 = load double, double* %627, align 8, !noalias !158, !invariant.group !202
  %sext.i211.i = shl i64 %"iv'ac.03.i210.i", 32
  %idxprom3_unwrap.i212.i = ashr exact i64 %sext.i211.i, 32
  %"arrayidx4'ipg_unwrap.i213.i" = getelementptr inbounds double, double* %"'ipc6.i", i64 %idxprom3_unwrap.i212.i
  %629 = load double, double* %"arrayidx4'ipg_unwrap.i213.i", align 8, !noalias !158
  %reass.add.i.i = fadd fast double %628, %626
  %reass.mul.i.i = fmul fast double %reass.add.i.i, %m1diffecall46.i
  %630 = fadd fast double %reass.mul.i.i, %629
  store double %630, double* %"arrayidx4'ipg_unwrap.i213.i", align 8, !noalias !158
  %631 = icmp eq i64 %624, 0
  br i1 %631, label %diffesqnorm.exit.i, label %incinvertfor.cond.i214.i, !llvm.loop !219

diffesqnorm.exit.i:                               ; preds = %incinvertfor.cond.i214.i, %middle.block249, %incinvertfor.cond22.i
  %632 = load double, double* %"'ipc6.i", align 8, !noalias !158
  %reass.add1.i.i = fadd fast double %.unpack8.i, %.unpack6.i
  %reass.mul2.i.i = fmul fast double %reass.add1.i.i, %m1diffecall46.i
  %633 = fadd fast double %632, %reass.mul2.i.i
  store double %633, double* %"'ipc6.i", align 8, !noalias !158
  %634 = bitcast double* %.unpack12.i to i8*
  tail call void @free(i8* nonnull %634) #38, !noalias !158
  %635 = bitcast double* %.unpack10.i to i8*
  tail call void @free(i8* nonnull %635) #38, !noalias !158
  %"arrayidx43'ipg_unwrap.i" = getelementptr inbounds double, double* %"'ipc.i", i64 %589
  %636 = load double, double* %"arrayidx43'ipg_unwrap.i", align 8, !noalias !158
  %637 = fadd fast double %636, %590
  store double %637, double* %"arrayidx43'ipg_unwrap.i", align 8, !noalias !158
  %"arrayidx42'ipg_unwrap.i" = getelementptr inbounds double, double* %alphasb, i64 %589
  %638 = load double, double* %"arrayidx42'ipg_unwrap.i", align 8, !noalias !158
  %639 = fadd fast double %638, %590
  store double %639, double* %"arrayidx42'ipg_unwrap.i", align 8, !noalias !158
  %mul34_unwrap.i = mul nsw i64 %589, %conv11.i
  %"arrayidx35'ipg_unwrap.i" = getelementptr inbounds double, double* %"'ipc4.i", i64 %mul34_unwrap.i
  %mul36_unwrap.i = mul nsw i64 %589, %conv4.i
  %add38_unwrap.i = add nsw i64 %mul36_unwrap.i, %conv11.i
  %"arrayidx39'ipg_unwrap.i" = getelementptr inbounds double, double* %icfb, i64 %add38_unwrap.i
  %.elt13.i = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %_augmented12_malloccache.i, i64 %591, i32 0
  %.unpack14.i = load double*, double** %.elt13.i, align 32, !noalias !158
  %.elt15.i = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %_augmented12_malloccache.i, i64 %591, i32 1
  %.unpack16.i = load double*, double** %.elt15.i, align 8, !noalias !158
  %.elt17.i = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %_augmented12_malloccache.i, i64 %591, i32 2
  %.unpack18.i = load double**, double*** %.elt17.i, align 16, !noalias !158
  %.elt19.i = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %_augmented12_malloccache.i, i64 %591, i32 3
  %.unpack20.i = load double**, double*** %.elt19.i, align 8, !noalias !158
  br i1 %408, label %invertentry.critedge.i.i, label %incinvertfor.cond5.i.i

invertentry.critedge.i.i:                         ; preds = %diffesqnorm.exit.i
  %640 = bitcast double** %.unpack18.i to i8*
  tail call void @free(i8* nonnull %640) #38, !noalias !158
  %641 = bitcast double** %.unpack20.i to i8*
  tail call void @free(i8* nonnull %641) #38, !noalias !158
  br label %diffeQtimesx.exit.i

incinvertfor.cond.i49.i:                          ; preds = %incinvertfor.cond.i49.i.preheader, %incinvertfor.cond.i49.i
  %"iv'ac.05.i.i" = phi i64 [ %642, %incinvertfor.cond.i49.i ], [ %"iv'ac.05.i.i.ph", %incinvertfor.cond.i49.i.preheader ]
  %642 = add nsw i64 %"iv'ac.05.i.i", -1
  %sext4.i.i = shl i64 %642, 32
  %idxprom3_unwrap.i46.i = ashr exact i64 %sext4.i.i, 32
  %"arrayidx4'ipg_unwrap.i47.i" = getelementptr inbounds double, double* %"'ipc6.i", i64 %idxprom3_unwrap.i46.i
  %643 = load double, double* %"arrayidx4'ipg_unwrap.i47.i", align 8, !noalias !158
  store double 0.000000e+00, double* %"arrayidx4'ipg_unwrap.i47.i", align 8, !noalias !158
  %644 = getelementptr inbounds double, double* %.unpack16.i, i64 %642
  %645 = load double, double* %644, align 8, !noalias !158, !invariant.group !220
  %m0diffe.i.i = fmul fast double %645, %643, !read_from_bin !186, !operand1 !187
  %646 = getelementptr inbounds double, double* %.unpack14.i, i64 %642
  %647 = load double, double* %646, align 8, !noalias !158, !invariant.group !221
  %m1diffe.i.i = fmul fast double %647, %643, !read_from_bin !186, !operand1 !186
  %"arrayidx2'ipg_unwrap.i48.i" = getelementptr inbounds double, double* %"'ipc11.i", i64 %idxprom3_unwrap.i46.i
  %648 = load double, double* %"arrayidx2'ipg_unwrap.i48.i", align 8, !noalias !158
  %649 = fadd fast double %648, %m1diffe.i.i
  store double %649, double* %"arrayidx2'ipg_unwrap.i48.i", align 8, !noalias !158
  %"arrayidx'ipg_unwrap.i.i" = getelementptr inbounds double, double* %"arrayidx35'ipg_unwrap.i", i64 %idxprom3_unwrap.i46.i
  %650 = load double, double* %"arrayidx'ipg_unwrap.i.i", align 8, !noalias !158
  %651 = fadd fast double %650, %m0diffe.i.i
  store double %651, double* %"arrayidx'ipg_unwrap.i.i", align 8, !noalias !158
  %652 = icmp eq i64 %642, 0
  br i1 %652, label %diffeQtimesx.exit.i, label %incinvertfor.cond.i49.i, !llvm.loop !222

invertfor.end.i.i:                                ; preds = %invertfor.body7.i.i
  %653 = bitcast double** %.unpack18.i to i8*
  tail call void @free(i8* nonnull %653) #38, !noalias !158
  %654 = bitcast double** %.unpack20.i to i8*
  tail call void @free(i8* nonnull %654) #38, !noalias !158
  %brmerge397 = or i1 %min.iters.check222, %431
  br i1 %brmerge397, label %incinvertfor.cond.i49.i.preheader, label %vector.ph228

vector.ph228:                                     ; preds = %invertfor.end.i.i
  %655 = getelementptr inbounds double, double* %.unpack16.i, i64 -1
  %656 = getelementptr inbounds double, double* %.unpack14.i, i64 -1
  %657 = getelementptr inbounds double, double* %"arrayidx35'ipg_unwrap.i", i64 -1
  br label %vector.body221

vector.body221:                                   ; preds = %vector.body221, %vector.ph228
  %index231 = phi i64 [ 0, %vector.ph228 ], [ %index.next232, %vector.body221 ]
  %658 = xor i64 %index231, -1
  %659 = add i64 %658, %407
  %660 = shl i64 %659, 32
  %661 = ashr exact i64 %660, 32
  %662 = getelementptr inbounds double, double* %433, i64 %661
  %663 = bitcast double* %662 to <2 x double>*
  %wide.load237 = load <2 x double>, <2 x double>* %663, align 8, !noalias !158
  %664 = bitcast double* %662 to <2 x double>*
  store <2 x double> zeroinitializer, <2 x double>* %664, align 8, !noalias !158
  %665 = getelementptr inbounds double, double* %655, i64 %659
  %666 = bitcast double* %665 to <2 x double>*
  %wide.load239 = load <2 x double>, <2 x double>* %666, align 8, !noalias !158
  %667 = fmul fast <2 x double> %wide.load239, %wide.load237
  %668 = getelementptr inbounds double, double* %656, i64 %659
  %669 = bitcast double* %668 to <2 x double>*
  %wide.load241 = load <2 x double>, <2 x double>* %669, align 8, !noalias !158
  %670 = fmul fast <2 x double> %wide.load241, %wide.load237
  %671 = getelementptr inbounds double, double* %435, i64 %661
  %672 = bitcast double* %671 to <2 x double>*
  %wide.load243 = load <2 x double>, <2 x double>* %672, align 8, !noalias !158
  %673 = fadd fast <2 x double> %wide.load243, %670
  %674 = bitcast double* %671 to <2 x double>*
  store <2 x double> %673, <2 x double>* %674, align 8, !noalias !158
  %675 = getelementptr inbounds double, double* %657, i64 %661
  %676 = bitcast double* %675 to <2 x double>*
  %wide.load246 = load <2 x double>, <2 x double>* %676, align 8, !noalias !158
  %677 = fadd fast <2 x double> %wide.load246, %667
  %678 = bitcast double* %675 to <2 x double>*
  store <2 x double> %677, <2 x double>* %678, align 8, !noalias !158
  %index.next232 = add i64 %index231, 2
  %679 = icmp eq i64 %index.next232, %n.vec230
  br i1 %679, label %middle.block219, label %vector.body221, !llvm.loop !223

middle.block219:                                  ; preds = %vector.body221
  br i1 %cmp.n235, label %diffeQtimesx.exit.i, label %incinvertfor.cond.i49.i.preheader

incinvertfor.cond.i49.i.preheader:                ; preds = %invertfor.end.i.i, %middle.block219
  %"iv'ac.05.i.i.ph" = phi i64 [ %407, %invertfor.end.i.i ], [ %ind.end234, %middle.block219 ]
  br label %incinvertfor.cond.i49.i

incinvertfor.cond5.i.i:                           ; preds = %diffesqnorm.exit.i, %invertfor.body7.i.i
  %"iv1'ac.07.i.i" = phi i64 [ %680, %invertfor.body7.i.i ], [ %407, %diffesqnorm.exit.i ]
  %680 = add nsw i64 %"iv1'ac.07.i.i", -1
  %681 = trunc i64 %"iv1'ac.07.i.i" to i32
  %_unwrap58.i.i = sub i32 %d, %681
  %682 = icmp eq i32 %_unwrap58.i.i, 0
  br i1 %682, label %invertfor.body7.i.i, label %incinvertfor.cond11.lr.ph.i.i

incinvertfor.cond11.lr.ph.i.i:                    ; preds = %incinvertfor.cond5.i.i
  %_unwrap59.i.i = zext i32 %_unwrap58.i.i to i64
  %683 = getelementptr inbounds double*, double** %.unpack20.i, i64 %680
  %684 = getelementptr inbounds double*, double** %.unpack18.i, i64 %680
  %_unwrap52.i.i = trunc i64 %680 to i32
  %sext1.i.i = shl i64 %680, 32
  %idxprom18_unwrap.i.i = ashr exact i64 %sext1.i.i, 32
  %"arrayidx19'ipg_unwrap.i.i" = getelementptr inbounds double, double* %"'ipc11.i", i64 %idxprom18_unwrap.i.i
  %685 = xor i32 %_unwrap52.i.i, -1
  %sub9_unwrap.i.i = add i32 %mul8_unwrap.i.i, %685
  %mul10_unwrap.i.i = mul nsw i32 %sub9_unwrap.i.i, %_unwrap52.i.i
  %div_unwrap.i.i = sdiv i32 %mul10_unwrap.i.i, 2
  %"arrayidx19'ipg_unwrap.i.promoted.i" = load double, double* %"arrayidx19'ipg_unwrap.i.i", align 8, !noalias !158
  br label %incinvertfor.cond11.i.i

invertfor.body7.i.loopexit.i:                     ; preds = %incinvertfor.cond11.i.i
  store double %698, double* %"arrayidx19'ipg_unwrap.i.i", align 8, !noalias !158
  br label %invertfor.body7.i.i

invertfor.body7.i.i:                              ; preds = %invertfor.body7.i.loopexit.i, %incinvertfor.cond5.i.i
  %_unwrap65.i.i = getelementptr inbounds double*, double** %.unpack18.i, i64 %680
  %686 = bitcast double** %_unwrap65.i.i to i8**
  %forfree662.i.i = load i8*, i8** %686, align 8, !noalias !158, !dereferenceable !171
  tail call void @free(i8* nonnull %forfree662.i.i) #38, !noalias !158
  %_unwrap70.i.i = getelementptr inbounds double*, double** %.unpack20.i, i64 %680
  %687 = bitcast double** %_unwrap70.i.i to i8**
  %forfree713.i.i = load i8*, i8** %687, align 8, !noalias !158, !dereferenceable !171
  tail call void @free(i8* nonnull %forfree713.i.i) #38, !noalias !158
  %688 = icmp eq i64 %680, 0
  br i1 %688, label %invertfor.end.i.i, label %incinvertfor.cond5.i.i

incinvertfor.cond11.i.i:                          ; preds = %incinvertfor.cond11.i.i, %incinvertfor.cond11.lr.ph.i.i
  %689 = phi double [ %"arrayidx19'ipg_unwrap.i.promoted.i", %incinvertfor.cond11.lr.ph.i.i ], [ %698, %incinvertfor.cond11.i.i ]
  %"iv4'ac.06.i.i" = phi i64 [ %_unwrap59.i.i, %incinvertfor.cond11.lr.ph.i.i ], [ %690, %incinvertfor.cond11.i.i ]
  %690 = add nsw i64 %"iv4'ac.06.i.i", -1
  %_unwrap15.i.i = add i64 %690, %"iv1'ac.07.i.i"
  %sext.i50.i = shl i64 %_unwrap15.i.i, 32
  %idxprom22_unwrap.i.i = ashr exact i64 %sext.i50.i, 32
  %"arrayidx23'ipg_unwrap.i.i" = getelementptr inbounds double, double* %"'ipc6.i", i64 %idxprom22_unwrap.i.i
  %691 = load double, double* %"arrayidx23'ipg_unwrap.i.i", align 8, !noalias !158
  %692 = load double*, double** %683, align 8, !noalias !158, !dereferenceable !171, !invariant.group !224
  %693 = getelementptr inbounds double, double* %692, i64 %690
  %694 = load double, double* %693, align 8, !noalias !158, !invariant.group !225
  %m0diffe37.i.i = fmul fast double %694, %691, !read_from_bin !186, !operand1 !187
  %695 = load double*, double** %684, align 8, !noalias !158, !dereferenceable !171, !invariant.group !226
  %696 = getelementptr inbounds double, double* %695, i64 %690
  %697 = load double, double* %696, align 8, !noalias !158, !invariant.group !227
  %m1diffe49.i.i = fmul fast double %697, %691, !read_from_bin !186, !operand1 !186
  %698 = fadd fast double %m1diffe49.i.i, %689
  %699 = trunc i64 %690 to i32
  %_unwrap55.i.i = add i32 %div_unwrap.i.i, %699
  %idxprom16_unwrap.i.i = sext i32 %_unwrap55.i.i to i64
  %"arrayidx17'ipg_unwrap.i.i" = getelementptr inbounds double, double* %"arrayidx39'ipg_unwrap.i", i64 %idxprom16_unwrap.i.i
  %700 = load double, double* %"arrayidx17'ipg_unwrap.i.i", align 8, !noalias !158
  %701 = fadd fast double %700, %m0diffe37.i.i
  store double %701, double* %"arrayidx17'ipg_unwrap.i.i", align 8, !noalias !158
  %702 = icmp eq i64 %690, 0
  br i1 %702, label %invertfor.body7.i.loopexit.i, label %incinvertfor.cond11.i.i

diffeQtimesx.exit.i:                              ; preds = %incinvertfor.cond.i49.i, %middle.block219, %invertentry.critedge.i.i
  %703 = bitcast double* %.unpack14.i to i8*
  tail call void @free(i8* nonnull %703) #38, !noalias !158
  %704 = bitcast double* %.unpack16.i to i8*
  tail call void @free(i8* nonnull %704) #38, !noalias !158
  %"arrayidx31'ipg_unwrap.i" = getelementptr inbounds double, double* %meansb, i64 %mul34_unwrap.i
  br i1 %408, label %diffesubtract.exit.i, label %incinvertfor.cond.i.i.preheader

incinvertfor.cond.i.i.preheader:                  ; preds = %diffeQtimesx.exit.i
  %brmerge398 = or i1 %min.iters.check199, %440
  br i1 %brmerge398, label %incinvertfor.cond.i.i.preheader353, label %vector.ph205

vector.ph205:                                     ; preds = %incinvertfor.cond.i.i.preheader
  br i1 %441, label %middle.block196.unr-lcssa, label %vector.ph205.new

vector.ph205.new:                                 ; preds = %vector.ph205
  %705 = getelementptr inbounds double, double* %"arrayidx31'ipg_unwrap.i", i64 -1
  %706 = getelementptr inbounds double, double* %"arrayidx31'ipg_unwrap.i", i64 -1
  br label %vector.body198

vector.body198:                                   ; preds = %vector.body198, %vector.ph205.new
  %index208 = phi i64 [ 0, %vector.ph205.new ], [ %index.next209.1, %vector.body198 ]
  %niter = phi i64 [ %unroll_iter, %vector.ph205.new ], [ %niter.nsub.1, %vector.body198 ]
  %707 = xor i64 %index208, -1
  %708 = add i64 %707, %409
  %709 = shl i64 %708, 32
  %710 = ashr exact i64 %709, 32
  %711 = getelementptr inbounds double, double* %443, i64 %710
  %712 = bitcast double* %711 to <2 x double>*
  %wide.load214 = load <2 x double>, <2 x double>* %712, align 8, !noalias !158
  %713 = bitcast double* %711 to <2 x double>*
  store <2 x double> zeroinitializer, <2 x double>* %713, align 8, !noalias !158
  %714 = getelementptr inbounds double, double* %705, i64 %710
  %715 = bitcast double* %714 to <2 x double>*
  %wide.load216 = load <2 x double>, <2 x double>* %715, align 8, !noalias !158
  %716 = fsub fast <2 x double> %wide.load216, %wide.load214
  %717 = bitcast double* %714 to <2 x double>*
  store <2 x double> %716, <2 x double>* %717, align 8, !noalias !158
  %718 = sub i64 4294967293, %index208
  %719 = add i64 %718, %409
  %720 = shl i64 %719, 32
  %721 = ashr exact i64 %720, 32
  %722 = getelementptr inbounds double, double* %445, i64 %721
  %723 = bitcast double* %722 to <2 x double>*
  %wide.load214.1 = load <2 x double>, <2 x double>* %723, align 8, !noalias !158
  %724 = bitcast double* %722 to <2 x double>*
  store <2 x double> zeroinitializer, <2 x double>* %724, align 8, !noalias !158
  %725 = getelementptr inbounds double, double* %706, i64 %721
  %726 = bitcast double* %725 to <2 x double>*
  %wide.load216.1 = load <2 x double>, <2 x double>* %726, align 8, !noalias !158
  %727 = fsub fast <2 x double> %wide.load216.1, %wide.load214.1
  %728 = bitcast double* %725 to <2 x double>*
  store <2 x double> %727, <2 x double>* %728, align 8, !noalias !158
  %index.next209.1 = add i64 %index208, 4
  %niter.nsub.1 = add i64 %niter, -2
  %niter.ncmp.1 = icmp eq i64 %niter.nsub.1, 0
  br i1 %niter.ncmp.1, label %middle.block196.unr-lcssa, label %vector.body198, !llvm.loop !228

middle.block196.unr-lcssa:                        ; preds = %vector.body198, %vector.ph205
  %index208.unr = phi i64 [ 0, %vector.ph205 ], [ %index.next209.1, %vector.body198 ]
  br i1 %lcmp.mod374.not, label %middle.block196, label %vector.body198.epil

vector.body198.epil:                              ; preds = %middle.block196.unr-lcssa
  %729 = xor i64 %index208.unr, -1
  %730 = add i64 %729, %409
  %731 = shl i64 %730, 32
  %732 = ashr exact i64 %731, 32
  %733 = getelementptr inbounds double, double* %447, i64 %732
  %734 = bitcast double* %733 to <2 x double>*
  %wide.load214.epil = load <2 x double>, <2 x double>* %734, align 8, !noalias !158
  %735 = bitcast double* %733 to <2 x double>*
  store <2 x double> zeroinitializer, <2 x double>* %735, align 8, !noalias !158
  %736 = getelementptr inbounds double, double* %"arrayidx31'ipg_unwrap.i", i64 -1
  %737 = getelementptr inbounds double, double* %736, i64 %732
  %738 = bitcast double* %737 to <2 x double>*
  %wide.load216.epil = load <2 x double>, <2 x double>* %738, align 8, !noalias !158
  %739 = fsub fast <2 x double> %wide.load216.epil, %wide.load214.epil
  %740 = bitcast double* %737 to <2 x double>*
  store <2 x double> %739, <2 x double>* %740, align 8, !noalias !158
  br label %middle.block196

middle.block196:                                  ; preds = %middle.block196.unr-lcssa, %vector.body198.epil
  br i1 %cmp.n212, label %diffesubtract.exit.i, label %incinvertfor.cond.i.i.preheader353

incinvertfor.cond.i.i.preheader353:               ; preds = %incinvertfor.cond.i.i.preheader, %middle.block196
  %"iv'ac.01.i.i.ph" = phi i64 [ %409, %incinvertfor.cond.i.i.preheader ], [ %ind.end211, %middle.block196 ]
  %xtraiter375 = and i64 %"iv'ac.01.i.i.ph", 1
  %lcmp.mod376.not = icmp eq i64 %xtraiter375, 0
  br i1 %lcmp.mod376.not, label %incinvertfor.cond.i.i.prol.loopexit, label %incinvertfor.cond.i.i.prol

incinvertfor.cond.i.i.prol:                       ; preds = %incinvertfor.cond.i.i.preheader353
  %741 = add nsw i64 %"iv'ac.01.i.i.ph", -1
  %sext.i45.i.prol = shl i64 %741, 32
  %idxprom3_unwrap.i.i.prol = ashr exact i64 %sext.i45.i.prol, 32
  %"arrayidx4'ipg_unwrap.i.i.prol" = getelementptr inbounds double, double* %"'ipc11.i", i64 %idxprom3_unwrap.i.i.prol
  %742 = load double, double* %"arrayidx4'ipg_unwrap.i.i.prol", align 8, !noalias !158
  store double 0.000000e+00, double* %"arrayidx4'ipg_unwrap.i.i.prol", align 8, !noalias !158
  %"arrayidx2'ipg_unwrap.i.i.prol" = getelementptr inbounds double, double* %"arrayidx31'ipg_unwrap.i", i64 %idxprom3_unwrap.i.i.prol
  %743 = load double, double* %"arrayidx2'ipg_unwrap.i.i.prol", align 8, !noalias !158
  %744 = fsub fast double %743, %742
  store double %744, double* %"arrayidx2'ipg_unwrap.i.i.prol", align 8, !noalias !158
  br label %incinvertfor.cond.i.i.prol.loopexit

incinvertfor.cond.i.i.prol.loopexit:              ; preds = %incinvertfor.cond.i.i.prol, %incinvertfor.cond.i.i.preheader353
  %"iv'ac.01.i.i.unr.ph" = phi i64 [ %741, %incinvertfor.cond.i.i.prol ], [ %"iv'ac.01.i.i.ph", %incinvertfor.cond.i.i.preheader353 ]
  %745 = icmp eq i64 %"iv'ac.01.i.i.ph", 1
  br i1 %745, label %diffesubtract.exit.i, label %incinvertfor.cond.i.i

incinvertfor.cond.i.i:                            ; preds = %incinvertfor.cond.i.i.prol.loopexit, %incinvertfor.cond.i.i
  %"iv'ac.01.i.i" = phi i64 [ %750, %incinvertfor.cond.i.i ], [ %"iv'ac.01.i.i.unr.ph", %incinvertfor.cond.i.i.prol.loopexit ]
  %746 = shl i64 %"iv'ac.01.i.i", 32
  %sext.i45.i = add i64 %746, -4294967296
  %idxprom3_unwrap.i.i = ashr exact i64 %sext.i45.i, 32
  %"arrayidx4'ipg_unwrap.i.i" = getelementptr inbounds double, double* %"'ipc11.i", i64 %idxprom3_unwrap.i.i
  %747 = load double, double* %"arrayidx4'ipg_unwrap.i.i", align 8, !noalias !158
  store double 0.000000e+00, double* %"arrayidx4'ipg_unwrap.i.i", align 8, !noalias !158
  %"arrayidx2'ipg_unwrap.i.i" = getelementptr inbounds double, double* %"arrayidx31'ipg_unwrap.i", i64 %idxprom3_unwrap.i.i
  %748 = load double, double* %"arrayidx2'ipg_unwrap.i.i", align 8, !noalias !158
  %749 = fsub fast double %748, %747
  store double %749, double* %"arrayidx2'ipg_unwrap.i.i", align 8, !noalias !158
  %750 = add nsw i64 %"iv'ac.01.i.i", -2
  %sext.i45.i.1 = shl i64 %750, 32
  %idxprom3_unwrap.i.i.1 = ashr exact i64 %sext.i45.i.1, 32
  %"arrayidx4'ipg_unwrap.i.i.1" = getelementptr inbounds double, double* %"'ipc11.i", i64 %idxprom3_unwrap.i.i.1
  %751 = load double, double* %"arrayidx4'ipg_unwrap.i.i.1", align 8, !noalias !158
  store double 0.000000e+00, double* %"arrayidx4'ipg_unwrap.i.i.1", align 8, !noalias !158
  %"arrayidx2'ipg_unwrap.i.i.1" = getelementptr inbounds double, double* %"arrayidx31'ipg_unwrap.i", i64 %idxprom3_unwrap.i.i.1
  %752 = load double, double* %"arrayidx2'ipg_unwrap.i.i.1", align 8, !noalias !158
  %753 = fsub fast double %752, %751
  store double %753, double* %"arrayidx2'ipg_unwrap.i.i.1", align 8, !noalias !158
  %754 = icmp eq i64 %750, 0
  br i1 %754, label %diffesubtract.exit.i, label %incinvertfor.cond.i.i, !llvm.loop !229

diffesubtract.exit.i:                             ; preds = %incinvertfor.cond.i.i.prol.loopexit, %incinvertfor.cond.i.i, %middle.block196, %diffeQtimesx.exit.i
  %755 = icmp eq i64 %589, 0
  br i1 %755, label %invertfor.cond.loopexit.i, label %incinvertfor.cond22.i

diffegmm_objective.exit:                          ; preds = %invertfor.body.i.i, %invertentry.i
  tail call void @free(i8* nonnull %malloccall.i.i) #38, !noalias !158
  tail call void @free(i8* nonnull %"call19'mi.i") #38, !noalias !158
  tail call void @free(i8* %call19.i) #38, !noalias !158
  tail call void @free(i8* nonnull %"call16'mi.i") #38, !noalias !158
  tail call void @free(i8* %call16.i) #38, !noalias !158
  tail call void @free(i8* nonnull %"call13'mi.i") #38, !noalias !158
  tail call void @free(i8* %call13.i) #38, !noalias !158
  tail call void @free(i8* nonnull %"call10'mi.i") #38, !noalias !158
  tail call void @free(i8* %call10.i) #38, !noalias !158
  tail call void @free(i8* nonnull %"call'mi.i") #38, !noalias !158
  tail call void @free(i8* %call.i) #38, !noalias !158
  tail call void @free(i8* nonnull %malloccall.i) #38, !noalias !158
  tail call void @free(i8* nonnull %malloccall14.i) #38, !noalias !158
  tail call void @free(i8* nonnull %malloccall17.i) #38, !noalias !158
  ret void

invertif.then.i.i197.i.1:                         ; preds = %invertfor.body.i.i193.i
  %sext.i.i194.i.1 = shl i64 %529, 32
  %idxprom3_unwrap.i.i195.i.1 = ashr exact i64 %sext.i.i194.i.1, 32
  %"arrayidx4'ipg_unwrap.i.i196.i.1" = getelementptr inbounds double, double* %"'ipc5.i", i64 %idxprom3_unwrap.i.i195.i.1
  %756 = load double, double* %"arrayidx4'ipg_unwrap.i.i196.i.1", align 8, !noalias !158
  %757 = fadd fast double %756, %532
  store double %757, double* %"arrayidx4'ipg_unwrap.i.i196.i.1", align 8, !noalias !158
  br label %invertfor.body.i.i193.i.1

invertfor.body.i.i193.i.1:                        ; preds = %invertif.then.i.i197.i.1, %invertfor.body.i.i193.i
  %758 = icmp eq i64 %533, 0
  br i1 %758, label %incinvertfor.cond22.lr.ph.i, label %incinvertfor.cond.i.i192.i

invertif.then.i.i.i.1:                            ; preds = %invertfor.body.i.i.i
  %sext.i.i169.i.1 = shl i64 %334, 32
  %idxprom3_unwrap.i.i170.i.1 = ashr exact i64 %sext.i.i169.i.1, 32
  %"arrayidx4'ipg_unwrap.i.i171.i.1" = getelementptr inbounds double, double* %alphasb, i64 %idxprom3_unwrap.i.i170.i.1
  %759 = load double, double* %"arrayidx4'ipg_unwrap.i.i171.i.1", align 8, !noalias !158
  %760 = fadd fast double %759, %338
  store double %760, double* %"arrayidx4'ipg_unwrap.i.i171.i.1", align 8, !noalias !158
  br label %invertfor.body.i.i.i.1

invertfor.body.i.i.i.1:                           ; preds = %invertif.then.i.i.i.1, %invertfor.body.i.i.i
  %761 = icmp eq i64 %339, 0
  br i1 %761, label %diffelog_sum_exp.6.exit.i, label %incinvertfor.cond.i.i168.i
}

; Function Attrs: uwtable mustprogress
define dso_local void @arr_max_b(i32 %n, double* nocapture readonly %x, double* nocapture %xb, double %arr_maxb) local_unnamed_addr #10 {
entry:
  %branch = alloca i32, align 4
  %0 = load double, double* %x, align 8, !tbaa !70
  %1 = bitcast i32* %branch to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #38
  %cmp23 = icmp sgt i32 %n, 1
  br i1 %cmp23, label %for.body.preheader, label %for.end16

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  br label %for.body

for.cond5.preheader:                              ; preds = %for.body
  br i1 %cmp23, label %for.body7.preheader, label %for.end16

for.body7.preheader:                              ; preds = %for.cond5.preheader
  %2 = zext i32 %n to i64
  br label %for.body7

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv26 = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next27, %for.body ]
  %m.024 = phi double [ %0, %for.body.preheader ], [ %m.1, %for.body ]
  %arrayidx1 = getelementptr inbounds double, double* %x, i64 %indvars.iv26
  %3 = load double, double* %arrayidx1, align 8, !tbaa !70
  %cmp2 = fcmp fast olt double %m.024, %3
  %.sink = zext i1 %cmp2 to i32
  %m.1 = select i1 %cmp2, double %3, double %m.024
  tail call void @pushControl1b(i32 %.sink)
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next27, %wide.trip.count
  br i1 %exitcond.not, label %for.cond5.preheader, label %for.body, !llvm.loop !230

for.body7:                                        ; preds = %for.body7.preheader, %for.inc15
  %indvars.iv = phi i64 [ %2, %for.body7.preheader ], [ %indvars.iv.next, %for.inc15 ]
  %mb.021 = phi double [ %arr_maxb, %for.body7.preheader ], [ %mb.1, %for.inc15 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  call void @popControl1b(i32* nonnull %branch)
  %4 = load i32, i32* %branch, align 4, !tbaa !47
  %cmp8.not = icmp eq i32 %4, 0
  br i1 %cmp8.not, label %for.inc15, label %if.then9

if.then9:                                         ; preds = %for.body7
  %arrayidx11 = getelementptr inbounds double, double* %xb, i64 %indvars.iv.next
  %5 = load double, double* %arrayidx11, align 8, !tbaa !70
  %add = fadd fast double %5, %mb.021
  store double %add, double* %arrayidx11, align 8, !tbaa !70
  br label %for.inc15

for.inc15:                                        ; preds = %for.body7, %if.then9
  %mb.1 = phi double [ 0.000000e+00, %if.then9 ], [ %mb.021, %for.body7 ]
  %cmp6 = icmp sgt i64 %indvars.iv, 2
  br i1 %cmp6, label %for.body7, label %for.end16, !llvm.loop !231

for.end16:                                        ; preds = %for.inc15, %entry, %for.cond5.preheader
  %mb.0.lcssa = phi double [ %arr_maxb, %for.cond5.preheader ], [ %arr_maxb, %entry ], [ %mb.1, %for.inc15 ]
  %6 = load double, double* %xb, align 8, !tbaa !70
  %add18 = fadd fast double %6, %mb.0.lcssa
  store double %add18, double* %xb, align 8, !tbaa !70
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #38
  ret void
}

declare dso_local void @pushControl1b(i32) local_unnamed_addr #3

declare dso_local void @popControl1b(i32*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly uwtable willreturn mustprogress
define dso_local double @arr_max_nodiff(i32 %n, double* nocapture readonly %x) local_unnamed_addr #9 {
entry:
  %0 = load double, double* %x, align 8, !tbaa !70
  %cmp9 = icmp sgt i32 %n, 1
  br i1 %cmp9, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  %1 = add nsw i64 %wide.trip.count, -1
  %min.iters.check = icmp ult i64 %1, 4
  br i1 %min.iters.check, label %for.body.preheader14, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader
  %n.vec = and i64 %1, -4
  %ind.end = or i64 %n.vec, 1
  %minmax.ident.splatinsert = insertelement <2 x double> poison, double %0, i32 0
  %minmax.ident.splat = shufflevector <2 x double> %minmax.ident.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %8, %vector.body ]
  %vec.phi12 = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %9, %vector.body ]
  %offset.idx = or i64 %index, 1
  %2 = getelementptr inbounds double, double* %x, i64 %offset.idx
  %3 = bitcast double* %2 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %3, align 8, !tbaa !70
  %4 = getelementptr inbounds double, double* %2, i64 2
  %5 = bitcast double* %4 to <2 x double>*
  %wide.load13 = load <2 x double>, <2 x double>* %5, align 8, !tbaa !70
  %6 = fcmp fast olt <2 x double> %vec.phi, %wide.load
  %7 = fcmp fast olt <2 x double> %vec.phi12, %wide.load13
  %8 = select <2 x i1> %6, <2 x double> %wide.load, <2 x double> %vec.phi
  %9 = select <2 x i1> %7, <2 x double> %wide.load13, <2 x double> %vec.phi12
  %index.next = add i64 %index, 4
  %10 = icmp eq i64 %index.next, %n.vec
  br i1 %10, label %middle.block, label %vector.body, !llvm.loop !232

middle.block:                                     ; preds = %vector.body
  %11 = call fast <2 x double> @llvm.maxnum.v2f64(<2 x double> %8, <2 x double> %9)
  %12 = call double @llvm.vector.reduce.fmax.v2f64(<2 x double> %11)
  %cmp.n = icmp eq i64 %1, %n.vec
  br i1 %cmp.n, label %for.end, label %for.body.preheader14

for.body.preheader14:                             ; preds = %for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ 1, %for.body.preheader ], [ %ind.end, %middle.block ]
  %m.011.ph = phi double [ %0, %for.body.preheader ], [ %12, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader14, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader14 ]
  %m.011 = phi double [ %m.1, %for.body ], [ %m.011.ph, %for.body.preheader14 ]
  %arrayidx1 = getelementptr inbounds double, double* %x, i64 %indvars.iv
  %13 = load double, double* %arrayidx1, align 8, !tbaa !70
  %cmp2 = fcmp fast olt double %m.011, %13
  %m.1 = select i1 %cmp2, double %13, double %m.011
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !233

for.end:                                          ; preds = %for.body, %middle.block, %entry
  %m.0.lcssa = phi double [ %0, %entry ], [ %12, %middle.block ], [ %m.1, %for.body ]
  ret double %m.0.lcssa
}

; Function Attrs: nofree norecurse nounwind uwtable mustprogress
define dso_local void @sqnorm_b(i32 %n, double* nocapture readonly %x, double* nocapture %xb, double %sqnormb) local_unnamed_addr #15 {
entry:
  %cmp17 = icmp sgt i32 %n, 1
  %mul5 = fmul fast double %sqnormb, 2.000000e+00
  br i1 %cmp17, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %0 = zext i32 %n to i64
  %1 = add nsw i64 %0, -1
  %min.iters.check = icmp ult i64 %1, 4
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr double, double* %xb, i64 1
  %scevgep20 = getelementptr double, double* %xb, i64 %0
  %scevgep22 = getelementptr double, double* %x, i64 1
  %scevgep24 = getelementptr double, double* %x, i64 %0
  %bound0 = icmp ult double* %scevgep, %scevgep24
  %bound1 = icmp ult double* %scevgep22, %scevgep20
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %1, -4
  %ind.end = sub nsw i64 %0, %n.vec
  %broadcast.splatinsert = insertelement <2 x double> poison, double %mul5, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert32 = insertelement <2 x double> poison, double %mul5, i32 0
  %broadcast.splat33 = shufflevector <2 x double> %broadcast.splatinsert32, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %2 = xor i64 %index, -1
  %3 = add i64 %2, %0
  %4 = getelementptr inbounds double, double* %xb, i64 %3
  %5 = getelementptr inbounds double, double* %4, i64 -1
  %6 = bitcast double* %5 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %6, align 8, !tbaa !70, !alias.scope !234, !noalias !237
  %reverse = shufflevector <2 x double> %wide.load, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %7 = getelementptr inbounds double, double* %4, i64 -2
  %8 = getelementptr inbounds double, double* %7, i64 -1
  %9 = bitcast double* %8 to <2 x double>*
  %wide.load26 = load <2 x double>, <2 x double>* %9, align 8, !tbaa !70, !alias.scope !234, !noalias !237
  %reverse27 = shufflevector <2 x double> %wide.load26, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %10 = getelementptr inbounds double, double* %x, i64 %3
  %11 = getelementptr inbounds double, double* %10, i64 -1
  %12 = bitcast double* %11 to <2 x double>*
  %wide.load28 = load <2 x double>, <2 x double>* %12, align 8, !tbaa !70, !alias.scope !237
  %reverse29 = shufflevector <2 x double> %wide.load28, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %13 = getelementptr inbounds double, double* %10, i64 -2
  %14 = getelementptr inbounds double, double* %13, i64 -1
  %15 = bitcast double* %14 to <2 x double>*
  %wide.load30 = load <2 x double>, <2 x double>* %15, align 8, !tbaa !70, !alias.scope !237
  %reverse31 = shufflevector <2 x double> %wide.load30, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %16 = fmul fast <2 x double> %broadcast.splat, %reverse29
  %17 = fmul fast <2 x double> %broadcast.splat33, %reverse31
  %18 = fadd fast <2 x double> %16, %reverse
  %19 = fadd fast <2 x double> %17, %reverse27
  %reverse34 = shufflevector <2 x double> %18, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %20 = bitcast double* %5 to <2 x double>*
  store <2 x double> %reverse34, <2 x double>* %20, align 8, !tbaa !70, !alias.scope !234, !noalias !237
  %reverse35 = shufflevector <2 x double> %19, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %21 = bitcast double* %8 to <2 x double>*
  store <2 x double> %reverse35, <2 x double>* %21, align 8, !tbaa !70, !alias.scope !234, !noalias !237
  %index.next = add i64 %index, 4
  %22 = icmp eq i64 %index.next, %n.vec
  br i1 %22, label %middle.block, label %vector.body, !llvm.loop !239

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %1, %n.vec
  br i1 %cmp.n, label %for.end, label %for.body.preheader

for.body.preheader:                               ; preds = %vector.memcheck, %for.body.lr.ph, %middle.block
  %indvars.iv.ph = phi i64 [ %0, %vector.memcheck ], [ %0, %for.body.lr.ph ], [ %ind.end, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx2 = getelementptr inbounds double, double* %xb, i64 %indvars.iv.next
  %23 = load double, double* %arrayidx2, align 8, !tbaa !70
  %arrayidx4 = getelementptr inbounds double, double* %x, i64 %indvars.iv.next
  %24 = load double, double* %arrayidx4, align 8, !tbaa !70
  %mul6 = fmul fast double %mul5, %24
  %add = fadd fast double %mul6, %23
  store double %add, double* %arrayidx2, align 8, !tbaa !70
  %cmp = icmp sgt i64 %indvars.iv, 2
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !240

for.end:                                          ; preds = %for.body, %middle.block, %entry
  %25 = load double, double* %xb, align 8, !tbaa !70
  %26 = load double, double* %x, align 8, !tbaa !70
  %mul12 = fmul fast double %mul5, %26
  %add13 = fadd fast double %mul12, %25
  store double %add13, double* %xb, align 8, !tbaa !70
  ret void
}

; Function Attrs: norecurse nounwind readonly uwtable willreturn mustprogress
define dso_local double @sqnorm_nodiff(i32 %n, double* nocapture readonly %x) local_unnamed_addr #9 {
entry:
  %0 = load double, double* %x, align 8, !tbaa !70
  %mul = fmul fast double %0, %0
  %cmp10 = icmp sgt i32 %n, 1
  br i1 %cmp10, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  %1 = add nsw i64 %wide.trip.count, -1
  %min.iters.check = icmp ult i64 %1, 4
  br i1 %min.iters.check, label %for.body.preheader15, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader
  %n.vec = and i64 %1, -4
  %ind.end = or i64 %n.vec, 1
  %2 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul, i32 0
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %2, %vector.ph ], [ %9, %vector.body ]
  %vec.phi13 = phi <2 x double> [ zeroinitializer, %vector.ph ], [ %10, %vector.body ]
  %offset.idx = or i64 %index, 1
  %3 = getelementptr inbounds double, double* %x, i64 %offset.idx
  %4 = bitcast double* %3 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %4, align 8, !tbaa !70
  %5 = getelementptr inbounds double, double* %3, i64 2
  %6 = bitcast double* %5 to <2 x double>*
  %wide.load14 = load <2 x double>, <2 x double>* %6, align 8, !tbaa !70
  %7 = fmul fast <2 x double> %wide.load, %wide.load
  %8 = fmul fast <2 x double> %wide.load14, %wide.load14
  %9 = fadd fast <2 x double> %7, %vec.phi
  %10 = fadd fast <2 x double> %8, %vec.phi13
  %index.next = add i64 %index, 4
  %11 = icmp eq i64 %index.next, %n.vec
  br i1 %11, label %middle.block, label %vector.body, !llvm.loop !241

middle.block:                                     ; preds = %vector.body
  %bin.rdx = fadd fast <2 x double> %10, %9
  %12 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  %cmp.n = icmp eq i64 %1, %n.vec
  br i1 %cmp.n, label %for.end, label %for.body.preheader15

for.body.preheader15:                             ; preds = %for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ 1, %for.body.preheader ], [ %ind.end, %middle.block ]
  %res.012.ph = phi double [ %mul, %for.body.preheader ], [ %12, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader15, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader15 ]
  %res.012 = phi double [ %add, %for.body ], [ %res.012.ph, %for.body.preheader15 ]
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %indvars.iv
  %13 = load double, double* %arrayidx2, align 8, !tbaa !70
  %mul5 = fmul fast double %13, %13
  %add = fadd fast double %mul5, %res.012
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !242

for.end:                                          ; preds = %for.body, %middle.block, %entry
  %res.0.lcssa = phi double [ %mul, %entry ], [ %12, %middle.block ], [ %add, %for.body ]
  ret double %res.0.lcssa
}

; Function Attrs: nofree norecurse nounwind uwtable mustprogress
define dso_local void @subtract_b(i32 %d, double* nocapture readnone %x, double* nocapture readnone %y, double* nocapture %yb, double* nocapture readnone %out, double* nocapture %outb) local_unnamed_addr #15 {
entry:
  %cmp10 = icmp sgt i32 %d, 0
  br i1 %cmp10, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %0 = zext i32 %d to i64
  %min.iters.check = icmp eq i32 %d, 1
  br i1 %min.iters.check, label %for.body.preheader21, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.preheader
  %scevgep = getelementptr double, double* %yb, i64 %0
  %scevgep16 = getelementptr double, double* %outb, i64 %0
  %bound0 = icmp ugt double* %scevgep16, %yb
  %bound1 = icmp ugt double* %scevgep, %outb
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader21, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %0, 4294967294
  %ind.end = and i64 %0, 1
  %1 = getelementptr inbounds double, double* %yb, i64 -1
  %2 = getelementptr inbounds double, double* %outb, i64 -1
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %3 = xor i64 %index, -1
  %4 = add i64 %3, %0
  %5 = getelementptr inbounds double, double* %1, i64 %4
  %6 = bitcast double* %5 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %6, align 8, !tbaa !70, !alias.scope !243, !noalias !246
  %7 = getelementptr inbounds double, double* %2, i64 %4
  %8 = bitcast double* %7 to <2 x double>*
  %wide.load18 = load <2 x double>, <2 x double>* %8, align 8, !tbaa !70, !alias.scope !246
  %9 = fsub fast <2 x double> %wide.load, %wide.load18
  %10 = bitcast double* %5 to <2 x double>*
  store <2 x double> %9, <2 x double>* %10, align 8, !tbaa !70, !alias.scope !243, !noalias !246
  %11 = bitcast double* %7 to <2 x double>*
  store <2 x double> zeroinitializer, <2 x double>* %11, align 8, !tbaa !70, !alias.scope !246
  %index.next = add i64 %index, 2
  %12 = icmp eq i64 %index.next, %n.vec
  br i1 %12, label %middle.block, label %vector.body, !llvm.loop !248

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %0
  br i1 %cmp.n, label %for.end, label %for.body.preheader21

for.body.preheader21:                             ; preds = %vector.memcheck, %for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ %0, %vector.memcheck ], [ %0, %for.body.preheader ], [ %ind.end, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader21, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader21 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx = getelementptr inbounds double, double* %yb, i64 %indvars.iv.next
  %13 = load double, double* %arrayidx, align 8, !tbaa !70
  %arrayidx2 = getelementptr inbounds double, double* %outb, i64 %indvars.iv.next
  %14 = load double, double* %arrayidx2, align 8, !tbaa !70
  %sub3 = fsub fast double %13, %14
  store double %sub3, double* %arrayidx, align 8, !tbaa !70
  store double 0.000000e+00, double* %arrayidx2, align 8, !tbaa !70
  %cmp = icmp sgt i64 %indvars.iv, 1
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !249

for.end:                                          ; preds = %for.body, %middle.block, %entry
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable mustprogress
define dso_local void @subtract_nodiff(i32 %d, double* nocapture readonly %x, double* nocapture readonly %y, double* nocapture %out) local_unnamed_addr #15 {
entry:
  %cmp6 = icmp sgt i32 %d, 0
  br i1 %cmp6, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %d to i64
  %min.iters.check = icmp ult i32 %d, 4
  br i1 %min.iters.check, label %for.body.preheader22, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.preheader
  %scevgep = getelementptr double, double* %out, i64 %wide.trip.count
  %scevgep11 = getelementptr double, double* %x, i64 %wide.trip.count
  %scevgep14 = getelementptr double, double* %y, i64 %wide.trip.count
  %bound0 = icmp ugt double* %scevgep11, %out
  %bound1 = icmp ugt double* %scevgep, %x
  %found.conflict = and i1 %bound0, %bound1
  %bound016 = icmp ugt double* %scevgep14, %out
  %bound117 = icmp ugt double* %scevgep, %y
  %found.conflict18 = and i1 %bound016, %bound117
  %conflict.rdx = or i1 %found.conflict, %found.conflict18
  br i1 %conflict.rdx, label %for.body.preheader22, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %0 = getelementptr inbounds double, double* %x, i64 %index
  %1 = bitcast double* %0 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %1, align 8, !tbaa !70, !alias.scope !250
  %2 = getelementptr inbounds double, double* %0, i64 2
  %3 = bitcast double* %2 to <2 x double>*
  %wide.load19 = load <2 x double>, <2 x double>* %3, align 8, !tbaa !70, !alias.scope !250
  %4 = getelementptr inbounds double, double* %y, i64 %index
  %5 = bitcast double* %4 to <2 x double>*
  %wide.load20 = load <2 x double>, <2 x double>* %5, align 8, !tbaa !70, !alias.scope !253
  %6 = getelementptr inbounds double, double* %4, i64 2
  %7 = bitcast double* %6 to <2 x double>*
  %wide.load21 = load <2 x double>, <2 x double>* %7, align 8, !tbaa !70, !alias.scope !253
  %8 = fsub fast <2 x double> %wide.load, %wide.load20
  %9 = fsub fast <2 x double> %wide.load19, %wide.load21
  %10 = getelementptr inbounds double, double* %out, i64 %index
  %11 = bitcast double* %10 to <2 x double>*
  store <2 x double> %8, <2 x double>* %11, align 8, !tbaa !70, !alias.scope !255, !noalias !257
  %12 = getelementptr inbounds double, double* %10, i64 2
  %13 = bitcast double* %12 to <2 x double>*
  store <2 x double> %9, <2 x double>* %13, align 8, !tbaa !70, !alias.scope !255, !noalias !257
  %index.next = add i64 %index, 4
  %14 = icmp eq i64 %index.next, %n.vec
  br i1 %14, label %middle.block, label %vector.body, !llvm.loop !258

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.end, label %for.body.preheader22

for.body.preheader22:                             ; preds = %vector.memcheck, %for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.preheader ], [ %n.vec, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader22, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader22 ]
  %arrayidx = getelementptr inbounds double, double* %x, i64 %indvars.iv
  %15 = load double, double* %arrayidx, align 8, !tbaa !70
  %arrayidx2 = getelementptr inbounds double, double* %y, i64 %indvars.iv
  %16 = load double, double* %arrayidx2, align 8, !tbaa !70
  %sub = fsub fast double %15, %16
  %arrayidx4 = getelementptr inbounds double, double* %out, i64 %indvars.iv
  store double %sub, double* %arrayidx4, align 8, !tbaa !70
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !259

for.end:                                          ; preds = %for.body, %middle.block, %entry
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @log_sum_exp_b(i32 %n, double* nocapture readonly %x, double* nocapture %xb, double %log_sum_expb) local_unnamed_addr #10 {
entry:
  %branch.i = alloca i32, align 4
  %0 = load double, double* %x, align 8, !tbaa !70
  %cmp9.i = icmp sgt i32 %n, 1
  br i1 %cmp9.i, label %for.body.preheader.i, label %arr_max_nodiff.exit

for.body.preheader.i:                             ; preds = %entry
  %wide.trip.count.i = zext i32 %n to i64
  %1 = add nsw i64 %wide.trip.count.i, -1
  %min.iters.check = icmp ult i64 %1, 4
  br i1 %min.iters.check, label %for.body.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader.i
  %n.vec = and i64 %1, -4
  %ind.end = or i64 %n.vec, 1
  %minmax.ident.splatinsert = insertelement <2 x double> poison, double %0, i32 0
  %minmax.ident.splat = shufflevector <2 x double> %minmax.ident.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %8, %vector.body ]
  %vec.phi53 = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %9, %vector.body ]
  %offset.idx = or i64 %index, 1
  %2 = getelementptr inbounds double, double* %x, i64 %offset.idx
  %3 = bitcast double* %2 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %3, align 8, !tbaa !70
  %4 = getelementptr inbounds double, double* %2, i64 2
  %5 = bitcast double* %4 to <2 x double>*
  %wide.load54 = load <2 x double>, <2 x double>* %5, align 8, !tbaa !70
  %6 = fcmp fast olt <2 x double> %vec.phi, %wide.load
  %7 = fcmp fast olt <2 x double> %vec.phi53, %wide.load54
  %8 = select <2 x i1> %6, <2 x double> %wide.load, <2 x double> %vec.phi
  %9 = select <2 x i1> %7, <2 x double> %wide.load54, <2 x double> %vec.phi53
  %index.next = add i64 %index, 4
  %10 = icmp eq i64 %index.next, %n.vec
  br i1 %10, label %middle.block, label %vector.body, !llvm.loop !260

middle.block:                                     ; preds = %vector.body
  %11 = call fast <2 x double> @llvm.maxnum.v2f64(<2 x double> %8, <2 x double> %9)
  %12 = call double @llvm.vector.reduce.fmax.v2f64(<2 x double> %11)
  %cmp.n = icmp eq i64 %1, %n.vec
  br i1 %cmp.n, label %arr_max_nodiff.exit, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body.preheader.i, %middle.block
  %indvars.iv.i.ph = phi i64 [ 1, %for.body.preheader.i ], [ %ind.end, %middle.block ]
  %m.011.i.ph = phi double [ %0, %for.body.preheader.i ], [ %12, %middle.block ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ %indvars.iv.i.ph, %for.body.i.preheader ]
  %m.011.i = phi double [ %m.1.i, %for.body.i ], [ %m.011.i.ph, %for.body.i.preheader ]
  %arrayidx1.i = getelementptr inbounds double, double* %x, i64 %indvars.iv.i
  %13 = load double, double* %arrayidx1.i, align 8, !tbaa !70
  %cmp2.i = fcmp fast olt double %m.011.i, %13
  %m.1.i = select i1 %cmp2.i, double %13, double %m.011.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %arr_max_nodiff.exit, label %for.body.i, !llvm.loop !261

arr_max_nodiff.exit:                              ; preds = %for.body.i, %middle.block, %entry
  %m.0.lcssa.i = phi double [ %0, %entry ], [ %12, %middle.block ], [ %m.1.i, %for.body.i ]
  %cmp41 = icmp sgt i32 %n, 0
  br i1 %cmp41, label %for.body.preheader, label %for.end15

for.body.preheader:                               ; preds = %arr_max_nodiff.exit
  %wide.trip.count = zext i32 %n to i64
  %sub49 = fsub fast double %0, %m.0.lcssa.i
  %14 = tail call fast double @llvm.exp.f64(double %sub49)
  %exitcond.not50 = icmp eq i32 %n, 1
  br i1 %exitcond.not50, label %for.cond2.preheader, label %for.body.for.body_crit_edge.lr.ph, !llvm.loop !262

for.body.for.body_crit_edge.lr.ph:                ; preds = %for.body.preheader
  %15 = add nsw i64 %wide.trip.count, -1
  %min.iters.check58 = icmp ult i64 %15, 4
  br i1 %min.iters.check58, label %for.body.for.body_crit_edge.preheader, label %vector.ph59

vector.ph59:                                      ; preds = %for.body.for.body_crit_edge.lr.ph
  %n.vec61 = and i64 %15, -4
  %ind.end65 = or i64 %n.vec61, 1
  %16 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %14, i32 0
  %broadcast.splatinsert = insertelement <2 x double> poison, double %m.0.lcssa.i, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert72 = insertelement <2 x double> poison, double %m.0.lcssa.i, i32 0
  %broadcast.splat73 = shufflevector <2 x double> %broadcast.splatinsert72, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body57

vector.body57:                                    ; preds = %vector.body57, %vector.ph59
  %index62 = phi i64 [ 0, %vector.ph59 ], [ %index.next63, %vector.body57 ]
  %vec.phi68 = phi <2 x double> [ %16, %vector.ph59 ], [ %25, %vector.body57 ]
  %vec.phi69 = phi <2 x double> [ zeroinitializer, %vector.ph59 ], [ %26, %vector.body57 ]
  %offset.idx67 = or i64 %index62, 1
  %17 = getelementptr inbounds double, double* %x, i64 %offset.idx67
  %18 = bitcast double* %17 to <2 x double>*
  %wide.load70 = load <2 x double>, <2 x double>* %18, align 8, !tbaa !70
  %19 = getelementptr inbounds double, double* %17, i64 2
  %20 = bitcast double* %19 to <2 x double>*
  %wide.load71 = load <2 x double>, <2 x double>* %20, align 8, !tbaa !70
  %21 = fsub fast <2 x double> %wide.load70, %broadcast.splat
  %22 = fsub fast <2 x double> %wide.load71, %broadcast.splat73
  %23 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %21)
  %24 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %22)
  %25 = fadd fast <2 x double> %23, %vec.phi68
  %26 = fadd fast <2 x double> %24, %vec.phi69
  %index.next63 = add i64 %index62, 4
  %27 = icmp eq i64 %index.next63, %n.vec61
  br i1 %27, label %middle.block55, label %vector.body57, !llvm.loop !263

middle.block55:                                   ; preds = %vector.body57
  %bin.rdx = fadd fast <2 x double> %26, %25
  %28 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  %cmp.n66 = icmp eq i64 %15, %n.vec61
  br i1 %cmp.n66, label %for.cond2.preheader, label %for.body.for.body_crit_edge.preheader

for.body.for.body_crit_edge.preheader:            ; preds = %for.body.for.body_crit_edge.lr.ph, %middle.block55
  %indvars.iv.next4652.ph = phi i64 [ 1, %for.body.for.body_crit_edge.lr.ph ], [ %ind.end65, %middle.block55 ]
  %add51.ph = phi double [ %14, %for.body.for.body_crit_edge.lr.ph ], [ %28, %middle.block55 ]
  br label %for.body.for.body_crit_edge

for.cond2.preheader:                              ; preds = %for.body.for.body_crit_edge, %middle.block55, %for.body.preheader
  %add.lcssa = phi double [ %14, %for.body.preheader ], [ %28, %middle.block55 ], [ %add, %for.body.for.body_crit_edge ]
  br i1 %cmp41, label %for.body4.lr.ph, label %for.end15

for.body4.lr.ph:                                  ; preds = %for.cond2.preheader
  %29 = zext i32 %n to i64
  %min.iters.check78 = icmp ult i32 %n, 4
  br i1 %min.iters.check78, label %for.body4.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body4.lr.ph
  %scevgep = getelementptr double, double* %xb, i64 %wide.trip.count
  %scevgep84 = getelementptr double, double* %x, i64 %wide.trip.count
  %bound0 = icmp ugt double* %scevgep84, %xb
  %bound1 = icmp ugt double* %scevgep, %x
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body4.preheader, label %vector.ph80

vector.ph80:                                      ; preds = %vector.memcheck
  %n.vec87 = and i64 %wide.trip.count, 4294967292
  %ind.end91 = sub nsw i64 %29, %n.vec87
  %30 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %log_sum_expb, i32 0
  %broadcast.splatinsert99 = insertelement <2 x double> poison, double %m.0.lcssa.i, i32 0
  %broadcast.splat100 = shufflevector <2 x double> %broadcast.splatinsert99, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert101 = insertelement <2 x double> poison, double %m.0.lcssa.i, i32 0
  %broadcast.splat102 = shufflevector <2 x double> %broadcast.splatinsert101, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert103 = insertelement <2 x double> poison, double %log_sum_expb, i32 0
  %broadcast.splat104 = shufflevector <2 x double> %broadcast.splatinsert103, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert105 = insertelement <2 x double> poison, double %log_sum_expb, i32 0
  %broadcast.splat106 = shufflevector <2 x double> %broadcast.splatinsert105, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert107 = insertelement <2 x double> poison, double %add.lcssa, i32 0
  %broadcast.splat108 = shufflevector <2 x double> %broadcast.splatinsert107, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert109 = insertelement <2 x double> poison, double %add.lcssa, i32 0
  %broadcast.splat110 = shufflevector <2 x double> %broadcast.splatinsert109, <2 x double> poison, <2 x i32> zeroinitializer
  %31 = fdiv fast <2 x double> <double 1.000000e+00, double 1.000000e+00>, %broadcast.splat108
  %32 = fdiv fast <2 x double> <double 1.000000e+00, double 1.000000e+00>, %broadcast.splat110
  br label %vector.body77

vector.body77:                                    ; preds = %vector.body77, %vector.ph80
  %index88 = phi i64 [ 0, %vector.ph80 ], [ %index.next89, %vector.body77 ]
  %vec.phi94 = phi <2 x double> [ %30, %vector.ph80 ], [ %59, %vector.body77 ]
  %vec.phi95 = phi <2 x double> [ zeroinitializer, %vector.ph80 ], [ %60, %vector.body77 ]
  %33 = xor i64 %index88, -1
  %34 = add i64 %33, %29
  %35 = getelementptr inbounds double, double* %x, i64 %34
  %36 = getelementptr inbounds double, double* %35, i64 -1
  %37 = bitcast double* %36 to <2 x double>*
  %wide.load96 = load <2 x double>, <2 x double>* %37, align 8, !tbaa !70, !alias.scope !264
  %reverse = shufflevector <2 x double> %wide.load96, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %38 = getelementptr inbounds double, double* %35, i64 -2
  %39 = getelementptr inbounds double, double* %38, i64 -1
  %40 = bitcast double* %39 to <2 x double>*
  %wide.load97 = load <2 x double>, <2 x double>* %40, align 8, !tbaa !70, !alias.scope !264
  %reverse98 = shufflevector <2 x double> %wide.load97, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %41 = fsub fast <2 x double> %reverse, %broadcast.splat100
  %42 = fsub fast <2 x double> %reverse98, %broadcast.splat102
  %43 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %41)
  %44 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %42)
  %45 = fmul fast <2 x double> %43, %broadcast.splat104
  %46 = fmul fast <2 x double> %44, %broadcast.splat106
  %47 = fmul fast <2 x double> %45, %31
  %48 = fmul fast <2 x double> %46, %32
  %49 = getelementptr inbounds double, double* %xb, i64 %34
  %50 = getelementptr inbounds double, double* %49, i64 -1
  %51 = bitcast double* %50 to <2 x double>*
  %wide.load111 = load <2 x double>, <2 x double>* %51, align 8, !tbaa !70, !alias.scope !267, !noalias !264
  %reverse112 = shufflevector <2 x double> %wide.load111, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %52 = getelementptr inbounds double, double* %49, i64 -2
  %53 = getelementptr inbounds double, double* %52, i64 -1
  %54 = bitcast double* %53 to <2 x double>*
  %wide.load113 = load <2 x double>, <2 x double>* %54, align 8, !tbaa !70, !alias.scope !267, !noalias !264
  %reverse114 = shufflevector <2 x double> %wide.load113, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %55 = fadd fast <2 x double> %47, %reverse112
  %56 = fadd fast <2 x double> %48, %reverse114
  %reverse115 = shufflevector <2 x double> %55, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %57 = bitcast double* %50 to <2 x double>*
  store <2 x double> %reverse115, <2 x double>* %57, align 8, !tbaa !70, !alias.scope !267, !noalias !264
  %reverse116 = shufflevector <2 x double> %56, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %58 = bitcast double* %53 to <2 x double>*
  store <2 x double> %reverse116, <2 x double>* %58, align 8, !tbaa !70, !alias.scope !267, !noalias !264
  %59 = fsub fast <2 x double> %vec.phi94, %47
  %60 = fsub fast <2 x double> %vec.phi95, %48
  %index.next89 = add i64 %index88, 4
  %61 = icmp eq i64 %index.next89, %n.vec87
  br i1 %61, label %middle.block75, label %vector.body77, !llvm.loop !269

middle.block75:                                   ; preds = %vector.body77
  %bin.rdx117 = fadd fast <2 x double> %60, %59
  %62 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx117)
  %cmp.n92 = icmp eq i64 %n.vec87, %wide.trip.count
  br i1 %cmp.n92, label %for.end15.loopexit, label %for.body4.preheader

for.body4.preheader:                              ; preds = %vector.memcheck, %for.body4.lr.ph, %middle.block75
  %indvars.iv.ph = phi i64 [ %29, %vector.memcheck ], [ %29, %for.body4.lr.ph ], [ %ind.end91, %middle.block75 ]
  %mxb.039.ph = phi double [ %log_sum_expb, %vector.memcheck ], [ %log_sum_expb, %for.body4.lr.ph ], [ %62, %middle.block75 ]
  %63 = fdiv fast double 1.000000e+00, %add.lcssa
  br label %for.body4

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge.preheader, %for.body.for.body_crit_edge
  %indvars.iv.next4652 = phi i64 [ %indvars.iv.next46, %for.body.for.body_crit_edge ], [ %indvars.iv.next4652.ph, %for.body.for.body_crit_edge.preheader ]
  %add51 = phi double [ %add, %for.body.for.body_crit_edge ], [ %add51.ph, %for.body.for.body_crit_edge.preheader ]
  %arrayidx.phi.trans.insert = getelementptr inbounds double, double* %x, i64 %indvars.iv.next4652
  %.pre = load double, double* %arrayidx.phi.trans.insert, align 8, !tbaa !70
  %sub = fsub fast double %.pre, %m.0.lcssa.i
  %64 = tail call fast double @llvm.exp.f64(double %sub)
  %add = fadd fast double %64, %add51
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv.next4652, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next46, %wide.trip.count
  br i1 %exitcond.not, label %for.cond2.preheader, label %for.body.for.body_crit_edge, !llvm.loop !270

for.body4:                                        ; preds = %for.body4.preheader, %for.body4
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body4 ], [ %indvars.iv.ph, %for.body4.preheader ]
  %mxb.039 = phi double [ %sub13, %for.body4 ], [ %mxb.039.ph, %for.body4.preheader ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx6 = getelementptr inbounds double, double* %x, i64 %indvars.iv.next
  %65 = load double, double* %arrayidx6, align 8, !tbaa !70
  %sub7 = fsub fast double %65, %m.0.lcssa.i
  %66 = tail call fast double @llvm.exp.f64(double %sub7)
  %67 = fmul fast double %66, %log_sum_expb
  %68 = fmul fast double %67, %63
  %arrayidx9 = getelementptr inbounds double, double* %xb, i64 %indvars.iv.next
  %69 = load double, double* %arrayidx9, align 8, !tbaa !70
  %add10 = fadd fast double %68, %69
  store double %add10, double* %arrayidx9, align 8, !tbaa !70
  %sub13 = fsub fast double %mxb.039, %68
  %cmp3 = icmp sgt i64 %indvars.iv, 1
  br i1 %cmp3, label %for.body4, label %for.end15.loopexit, !llvm.loop !271

for.end15.loopexit:                               ; preds = %for.body4, %middle.block75
  %sub13.lcssa = phi double [ %62, %middle.block75 ], [ %sub13, %for.body4 ]
  %.pre47 = load double, double* %x, align 8, !tbaa !70
  br label %for.end15

for.end15:                                        ; preds = %arr_max_nodiff.exit, %for.end15.loopexit, %for.cond2.preheader
  %70 = phi double [ %0, %for.cond2.preheader ], [ %.pre47, %for.end15.loopexit ], [ %0, %arr_max_nodiff.exit ]
  %mxb.0.lcssa = phi double [ %log_sum_expb, %for.cond2.preheader ], [ %sub13.lcssa, %for.end15.loopexit ], [ %log_sum_expb, %arr_max_nodiff.exit ]
  %71 = bitcast i32* %branch.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #38
  br i1 %cmp9.i, label %for.body.preheader.i29, label %arr_max_b.exit

for.body.preheader.i29:                           ; preds = %for.end15
  %wide.trip.count.i28 = zext i32 %n to i64
  br label %for.body.i32

for.body.i32:                                     ; preds = %for.body.i32, %for.body.preheader.i29
  %indvars.iv26.i = phi i64 [ 1, %for.body.preheader.i29 ], [ %indvars.iv.next27.i, %for.body.i32 ]
  %m.024.i = phi double [ %70, %for.body.preheader.i29 ], [ %m.1.i33, %for.body.i32 ]
  %arrayidx1.i30 = getelementptr inbounds double, double* %x, i64 %indvars.iv26.i
  %72 = load double, double* %arrayidx1.i30, align 8, !tbaa !70
  %cmp2.i31 = fcmp fast olt double %m.024.i, %72
  %.sink = zext i1 %cmp2.i31 to i32
  %m.1.i33 = select i1 %cmp2.i31, double %72, double %m.024.i
  tail call void @pushControl1b(i32 %.sink)
  %indvars.iv.next27.i = add nuw nsw i64 %indvars.iv26.i, 1
  %exitcond.not.i34 = icmp eq i64 %indvars.iv.next27.i, %wide.trip.count.i28
  br i1 %exitcond.not.i34, label %for.body7.i, label %for.body.i32, !llvm.loop !230

for.body7.i:                                      ; preds = %for.body.i32, %for.inc15.i
  %indvars.iv.i35 = phi i64 [ %indvars.iv.next.i36, %for.inc15.i ], [ %wide.trip.count.i28, %for.body.i32 ]
  %mb.021.i = phi double [ %mb.1.i, %for.inc15.i ], [ %mxb.0.lcssa, %for.body.i32 ]
  %indvars.iv.next.i36 = add nsw i64 %indvars.iv.i35, -1
  call void @popControl1b(i32* nonnull %branch.i)
  %73 = load i32, i32* %branch.i, align 4, !tbaa !47
  %cmp8.not.i = icmp eq i32 %73, 0
  br i1 %cmp8.not.i, label %for.inc15.i, label %if.then9.i

if.then9.i:                                       ; preds = %for.body7.i
  %arrayidx11.i = getelementptr inbounds double, double* %xb, i64 %indvars.iv.next.i36
  %74 = load double, double* %arrayidx11.i, align 8, !tbaa !70
  %add.i = fadd fast double %74, %mb.021.i
  store double %add.i, double* %arrayidx11.i, align 8, !tbaa !70
  br label %for.inc15.i

for.inc15.i:                                      ; preds = %if.then9.i, %for.body7.i
  %mb.1.i = phi double [ 0.000000e+00, %if.then9.i ], [ %mb.021.i, %for.body7.i ]
  %cmp6.i = icmp sgt i64 %indvars.iv.i35, 2
  br i1 %cmp6.i, label %for.body7.i, label %arr_max_b.exit, !llvm.loop !231

arr_max_b.exit:                                   ; preds = %for.inc15.i, %for.end15
  %mb.0.lcssa.i = phi double [ %mxb.0.lcssa, %for.end15 ], [ %mb.1.i, %for.inc15.i ]
  %75 = load double, double* %xb, align 8, !tbaa !70
  %add18.i = fadd fast double %75, %mb.0.lcssa.i
  store double %add18.i, double* %xb, align 8, !tbaa !70
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #38
  ret void
}

; Function Attrs: nounwind readonly uwtable willreturn mustprogress
define dso_local double @log_sum_exp_nodiff(i32 %n, double* nocapture readonly %x) local_unnamed_addr #16 {
entry:
  %0 = load double, double* %x, align 8, !tbaa !70
  %cmp9.i = icmp sgt i32 %n, 1
  br i1 %cmp9.i, label %for.body.preheader.i, label %arr_max_nodiff.exit

for.body.preheader.i:                             ; preds = %entry
  %wide.trip.count.i = zext i32 %n to i64
  %1 = add nsw i64 %wide.trip.count.i, -1
  %min.iters.check = icmp ult i64 %1, 4
  br i1 %min.iters.check, label %for.body.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader.i
  %n.vec = and i64 %1, -4
  %ind.end = or i64 %n.vec, 1
  %minmax.ident.splatinsert = insertelement <2 x double> poison, double %0, i32 0
  %minmax.ident.splat = shufflevector <2 x double> %minmax.ident.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %8, %vector.body ]
  %vec.phi17 = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %9, %vector.body ]
  %offset.idx = or i64 %index, 1
  %2 = getelementptr inbounds double, double* %x, i64 %offset.idx
  %3 = bitcast double* %2 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %3, align 8, !tbaa !70
  %4 = getelementptr inbounds double, double* %2, i64 2
  %5 = bitcast double* %4 to <2 x double>*
  %wide.load18 = load <2 x double>, <2 x double>* %5, align 8, !tbaa !70
  %6 = fcmp fast olt <2 x double> %vec.phi, %wide.load
  %7 = fcmp fast olt <2 x double> %vec.phi17, %wide.load18
  %8 = select <2 x i1> %6, <2 x double> %wide.load, <2 x double> %vec.phi
  %9 = select <2 x i1> %7, <2 x double> %wide.load18, <2 x double> %vec.phi17
  %index.next = add i64 %index, 4
  %10 = icmp eq i64 %index.next, %n.vec
  br i1 %10, label %middle.block, label %vector.body, !llvm.loop !272

middle.block:                                     ; preds = %vector.body
  %11 = call fast <2 x double> @llvm.maxnum.v2f64(<2 x double> %8, <2 x double> %9)
  %12 = call double @llvm.vector.reduce.fmax.v2f64(<2 x double> %11)
  %cmp.n = icmp eq i64 %1, %n.vec
  br i1 %cmp.n, label %arr_max_nodiff.exit, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body.preheader.i, %middle.block
  %indvars.iv.i.ph = phi i64 [ 1, %for.body.preheader.i ], [ %ind.end, %middle.block ]
  %m.011.i.ph = phi double [ %0, %for.body.preheader.i ], [ %12, %middle.block ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ %indvars.iv.i.ph, %for.body.i.preheader ]
  %m.011.i = phi double [ %m.1.i, %for.body.i ], [ %m.011.i.ph, %for.body.i.preheader ]
  %arrayidx1.i = getelementptr inbounds double, double* %x, i64 %indvars.iv.i
  %13 = load double, double* %arrayidx1.i, align 8, !tbaa !70
  %cmp2.i = fcmp fast olt double %m.011.i, %13
  %m.1.i = select i1 %cmp2.i, double %13, double %m.011.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %arr_max_nodiff.exit, label %for.body.i, !llvm.loop !273

arr_max_nodiff.exit:                              ; preds = %for.body.i, %middle.block, %entry
  %m.0.lcssa.i = phi double [ %0, %entry ], [ %12, %middle.block ], [ %m.1.i, %for.body.i ]
  %cmp10 = icmp sgt i32 %n, 0
  br i1 %cmp10, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %arr_max_nodiff.exit
  %wide.trip.count = zext i32 %n to i64
  %sub13 = fsub fast double %0, %m.0.lcssa.i
  %14 = tail call fast double @llvm.exp.f64(double %sub13)
  %exitcond.not14 = icmp eq i32 %n, 1
  br i1 %exitcond.not14, label %for.end, label %for.body.for.body_crit_edge.lr.ph, !llvm.loop !274

for.body.for.body_crit_edge.lr.ph:                ; preds = %for.body.preheader
  %15 = add nsw i64 %wide.trip.count, -1
  %min.iters.check22 = icmp ult i64 %15, 4
  br i1 %min.iters.check22, label %for.body.for.body_crit_edge.preheader, label %vector.ph23

vector.ph23:                                      ; preds = %for.body.for.body_crit_edge.lr.ph
  %n.vec25 = and i64 %15, -4
  %ind.end29 = or i64 %n.vec25, 1
  %16 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %14, i32 0
  %broadcast.splatinsert = insertelement <2 x double> poison, double %m.0.lcssa.i, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert36 = insertelement <2 x double> poison, double %m.0.lcssa.i, i32 0
  %broadcast.splat37 = shufflevector <2 x double> %broadcast.splatinsert36, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body21

vector.body21:                                    ; preds = %vector.body21, %vector.ph23
  %index26 = phi i64 [ 0, %vector.ph23 ], [ %index.next27, %vector.body21 ]
  %vec.phi32 = phi <2 x double> [ %16, %vector.ph23 ], [ %25, %vector.body21 ]
  %vec.phi33 = phi <2 x double> [ zeroinitializer, %vector.ph23 ], [ %26, %vector.body21 ]
  %offset.idx31 = or i64 %index26, 1
  %17 = getelementptr inbounds double, double* %x, i64 %offset.idx31
  %18 = bitcast double* %17 to <2 x double>*
  %wide.load34 = load <2 x double>, <2 x double>* %18, align 8, !tbaa !70
  %19 = getelementptr inbounds double, double* %17, i64 2
  %20 = bitcast double* %19 to <2 x double>*
  %wide.load35 = load <2 x double>, <2 x double>* %20, align 8, !tbaa !70
  %21 = fsub fast <2 x double> %wide.load34, %broadcast.splat
  %22 = fsub fast <2 x double> %wide.load35, %broadcast.splat37
  %23 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %21)
  %24 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %22)
  %25 = fadd fast <2 x double> %23, %vec.phi32
  %26 = fadd fast <2 x double> %24, %vec.phi33
  %index.next27 = add i64 %index26, 4
  %27 = icmp eq i64 %index.next27, %n.vec25
  br i1 %27, label %middle.block19, label %vector.body21, !llvm.loop !275

middle.block19:                                   ; preds = %vector.body21
  %bin.rdx = fadd fast <2 x double> %26, %25
  %28 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  %cmp.n30 = icmp eq i64 %15, %n.vec25
  br i1 %cmp.n30, label %for.end, label %for.body.for.body_crit_edge.preheader

for.body.for.body_crit_edge.preheader:            ; preds = %for.body.for.body_crit_edge.lr.ph, %middle.block19
  %indvars.iv.next16.ph = phi i64 [ 1, %for.body.for.body_crit_edge.lr.ph ], [ %ind.end29, %middle.block19 ]
  %add15.ph = phi double [ %14, %for.body.for.body_crit_edge.lr.ph ], [ %28, %middle.block19 ]
  br label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body.for.body_crit_edge.preheader, %for.body.for.body_crit_edge
  %indvars.iv.next16 = phi i64 [ %indvars.iv.next, %for.body.for.body_crit_edge ], [ %indvars.iv.next16.ph, %for.body.for.body_crit_edge.preheader ]
  %add15 = phi double [ %add, %for.body.for.body_crit_edge ], [ %add15.ph, %for.body.for.body_crit_edge.preheader ]
  %arrayidx.phi.trans.insert = getelementptr inbounds double, double* %x, i64 %indvars.iv.next16
  %.pre = load double, double* %arrayidx.phi.trans.insert, align 8, !tbaa !70
  %sub = fsub fast double %.pre, %m.0.lcssa.i
  %29 = tail call fast double @llvm.exp.f64(double %sub)
  %add = fadd fast double %29, %add15
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next16, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge, !llvm.loop !276

for.end:                                          ; preds = %for.body.for.body_crit_edge, %for.body.preheader, %middle.block19, %arr_max_nodiff.exit
  %semx.0.lcssa = phi double [ 0.000000e+00, %arr_max_nodiff.exit ], [ %14, %for.body.preheader ], [ %28, %middle.block19 ], [ %add, %for.body.for.body_crit_edge ]
  %30 = tail call fast double @llvm.log.f64(double %semx.0.lcssa)
  %add1 = fadd fast double %30, %m.0.lcssa.i
  ret double %add1
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @log_gamma_distrib_nodiff(double %a, double %p) local_unnamed_addr #6 {
entry:
  %sub = fadd fast double %p, -1.000000e+00
  %mul1 = fmul fast double %p, 0x3FD250D048E7A2E6
  %mul2 = fmul fast double %mul1, %sub
  %add = fadd fast double %p, 1.000000e+00
  %cmp10 = fcmp fast ogt double %add, 1.000000e+00
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %entry, %for.body
  %j.012 = phi i32 [ %inc, %for.body ], [ 1, %entry ]
  %out.011 = phi double [ %add9, %for.body ], [ %mul2, %entry ]
  %sub3 = sub nsw i32 1, %j.012
  %conv4 = sitofp i32 %sub3 to double
  %mul5 = fmul fast double %conv4, 5.000000e-01
  %add6 = fadd fast double %mul5, %a
  %call = tail call fast double @lgamma(double %add6) #38
  %conv7 = fptrunc double %call to float
  %conv8 = fpext float %conv7 to double
  %add9 = fadd fast double %out.011, %conv8
  %inc = add nuw nsw i32 %j.012, 1
  %conv = sitofp i32 %inc to double
  %cmp = fcmp fast ogt double %add, %conv
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !277

for.end:                                          ; preds = %for.body, %entry
  %out.0.lcssa = phi double [ %mul2, %entry ], [ %add9, %for.body ]
  ret double %out.0.lcssa
}

; Function Attrs: nofree norecurse nounwind uwtable mustprogress
define dso_local void @log_wishart_prior_b(i32 %p, i32 %k, double %wishart.coerce0, i32 %wishart.coerce1, double* nocapture readnone %sum_qs, double* nocapture %sum_qsb, double* nocapture readonly %Qdiags, double* nocapture %Qdiagsb, double* nocapture readonly %icf, double* nocapture %icfb, double %log_wishart_priorb) local_unnamed_addr #15 {
entry:
  %sum_qsb95 = bitcast double* %sum_qsb to i8*
  %add2 = add nsw i32 %p, 1
  %mul = mul nsw i32 %add2, %p
  %icfb92 = bitcast double* %icfb to i8*
  %div = sdiv i32 %mul, 2
  %mul6 = mul i32 %k, %p
  %cmp787 = icmp sgt i32 %mul6, 0
  br i1 %cmp787, label %for.body8.preheader, label %for.cond12.preheader

for.body8.preheader:                              ; preds = %entry
  %Qdiagsb98 = bitcast double* %Qdiagsb to i8*
  %0 = zext i32 %mul6 to i64
  %1 = shl nuw nsw i64 %0, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %Qdiagsb98, i8 0, i64 %1, i1 false)
  br label %for.cond12.preheader

for.cond12.preheader:                             ; preds = %for.body8.preheader, %entry
  %cmp1385 = icmp sgt i32 %k, 0
  br i1 %cmp1385, label %for.body14.preheader, label %for.cond20.preheader

for.body14.preheader:                             ; preds = %for.cond12.preheader
  %2 = zext i32 %k to i64
  %3 = shl nuw nsw i64 %2, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %sum_qsb95, i8 0, i64 %3, i1 false)
  br label %for.cond20.preheader

for.cond20.preheader:                             ; preds = %for.body14.preheader, %for.cond12.preheader
  %mul21 = mul i32 %div, %k
  %cmp2283 = icmp sgt i32 %mul21, 0
  br i1 %cmp2283, label %for.body23.preheader, label %for.cond29.preheader

for.body23.preheader:                             ; preds = %for.cond20.preheader
  %4 = zext i32 %mul21 to i64
  %5 = shl nuw nsw i64 %4, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %icfb92, i8 0, i64 %5, i1 false)
  br label %for.cond29.preheader

for.cond29.preheader:                             ; preds = %for.body23.preheader, %for.cond20.preheader
  br i1 %cmp1385, label %for.body31.lr.ph, label %for.end63

for.body31.lr.ph:                                 ; preds = %for.cond29.preheader
  %6 = fmul fast double %wishart.coerce0, %wishart.coerce0
  %mul38 = fmul fast double %6, 5.000000e-01
  %mul39 = fmul fast double %mul38, %log_wishart_priorb
  %conv = sitofp i32 %wishart.coerce1 to double
  %mul43 = fmul fast double %conv, %log_wishart_priorb
  %sub47 = sub nsw i32 %div, %p
  %cmp17.i = icmp sgt i32 %sub47, 1
  %.pre.i = fmul fast double %mul39, 2.000000e+00
  %7 = zext i32 %sub47 to i64
  %cmp17.i63 = icmp sgt i32 %p, 1
  %8 = zext i32 %p to i64
  %9 = zext i32 %k to i64
  %10 = sext i32 %div to i64
  %11 = sext i32 %p to i64
  %12 = add nsw i64 %8, -1
  %13 = add nsw i64 %9, -1
  %14 = mul i64 %13, %11
  %15 = add nsw i64 %14, 1
  %16 = add i64 %14, %8
  %17 = add nsw i64 %7, -1
  %18 = add nsw i64 %9, -1
  %19 = mul nsw i64 %18, %10
  %20 = add i64 %19, %11
  %21 = add i64 %20, 1
  %22 = add i64 %20, %7
  %min.iters.check121 = icmp ult i64 %17, 4
  %n.vec138 = and i64 %17, -4
  %ind.end142 = sub nsw i64 %7, %n.vec138
  %broadcast.splatinsert153 = insertelement <2 x double> poison, double %.pre.i, i32 0
  %broadcast.splat154 = shufflevector <2 x double> %broadcast.splatinsert153, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert155 = insertelement <2 x double> poison, double %.pre.i, i32 0
  %broadcast.splat156 = shufflevector <2 x double> %broadcast.splatinsert155, <2 x double> poison, <2 x i32> zeroinitializer
  %cmp.n143 = icmp eq i64 %17, %n.vec138
  %min.iters.check = icmp ult i64 %12, 4
  %n.vec = and i64 %12, -4
  %ind.end = sub nsw i64 %8, %n.vec
  %broadcast.splatinsert = insertelement <2 x double> poison, double %.pre.i, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert114 = insertelement <2 x double> poison, double %.pre.i, i32 0
  %broadcast.splat115 = shufflevector <2 x double> %broadcast.splatinsert114, <2 x double> poison, <2 x i32> zeroinitializer
  %cmp.n = icmp eq i64 %12, %n.vec
  br label %for.body31

for.body31:                                       ; preds = %for.body31.lr.ph, %sqnorm_b.exit79
  %indvar = phi i64 [ 0, %for.body31.lr.ph ], [ %indvar.next, %sqnorm_b.exit79 ]
  %indvars.iv = phi i64 [ %9, %for.body31.lr.ph ], [ %indvars.iv.next, %sqnorm_b.exit79 ]
  %23 = mul i64 %indvar, %10
  %24 = sub i64 %21, %23
  %scevgep125 = getelementptr double, double* %icfb, i64 %24
  %25 = sub i64 %22, %23
  %scevgep127 = getelementptr double, double* %icfb, i64 %25
  %scevgep129 = getelementptr double, double* %icf, i64 %24
  %scevgep131 = getelementptr double, double* %icf, i64 %25
  %26 = mul i64 %indvar, %11
  %27 = sub i64 %15, %26
  %scevgep = getelementptr double, double* %Qdiagsb, i64 %27
  %28 = sub i64 %16, %26
  %scevgep102 = getelementptr double, double* %Qdiagsb, i64 %28
  %scevgep104 = getelementptr double, double* %Qdiags, i64 %27
  %scevgep106 = getelementptr double, double* %Qdiags, i64 %28
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx41 = getelementptr inbounds double, double* %sum_qsb, i64 %indvars.iv.next
  %29 = load double, double* %arrayidx41, align 8, !tbaa !70
  %sub44 = fsub fast double %29, %mul43
  store double %sub44, double* %arrayidx41, align 8, !tbaa !70
  %30 = mul nsw i64 %indvars.iv.next, %10
  %31 = add nsw i64 %30, %11
  %arrayidx51 = getelementptr inbounds double, double* %icf, i64 %31
  %arrayidx55 = getelementptr inbounds double, double* %icfb, i64 %31
  br i1 %cmp17.i, label %for.body.i.preheader, label %sqnorm_b.exit

for.body.i.preheader:                             ; preds = %for.body31
  br i1 %min.iters.check121, label %for.body.i.preheader160, label %vector.memcheck123

vector.memcheck123:                               ; preds = %for.body.i.preheader
  %bound0133 = icmp ult double* %scevgep125, %scevgep131
  %bound1134 = icmp ult double* %scevgep129, %scevgep127
  %found.conflict135 = and i1 %bound0133, %bound1134
  br i1 %found.conflict135, label %for.body.i.preheader160, label %vector.body120

vector.body120:                                   ; preds = %vector.memcheck123, %vector.body120
  %index139 = phi i64 [ %index.next140, %vector.body120 ], [ 0, %vector.memcheck123 ]
  %32 = xor i64 %index139, -1
  %33 = add i64 %32, %7
  %34 = getelementptr inbounds double, double* %arrayidx55, i64 %33
  %35 = getelementptr inbounds double, double* %34, i64 -1
  %36 = bitcast double* %35 to <2 x double>*
  %wide.load145 = load <2 x double>, <2 x double>* %36, align 8, !tbaa !70, !alias.scope !278, !noalias !281
  %reverse146 = shufflevector <2 x double> %wide.load145, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %37 = getelementptr inbounds double, double* %34, i64 -2
  %38 = getelementptr inbounds double, double* %37, i64 -1
  %39 = bitcast double* %38 to <2 x double>*
  %wide.load147 = load <2 x double>, <2 x double>* %39, align 8, !tbaa !70, !alias.scope !278, !noalias !281
  %reverse148 = shufflevector <2 x double> %wide.load147, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %40 = getelementptr inbounds double, double* %arrayidx51, i64 %33
  %41 = getelementptr inbounds double, double* %40, i64 -1
  %42 = bitcast double* %41 to <2 x double>*
  %wide.load149 = load <2 x double>, <2 x double>* %42, align 8, !tbaa !70, !alias.scope !281
  %reverse150 = shufflevector <2 x double> %wide.load149, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %43 = getelementptr inbounds double, double* %40, i64 -2
  %44 = getelementptr inbounds double, double* %43, i64 -1
  %45 = bitcast double* %44 to <2 x double>*
  %wide.load151 = load <2 x double>, <2 x double>* %45, align 8, !tbaa !70, !alias.scope !281
  %reverse152 = shufflevector <2 x double> %wide.load151, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %46 = fmul fast <2 x double> %reverse150, %broadcast.splat154
  %47 = fmul fast <2 x double> %reverse152, %broadcast.splat156
  %48 = fadd fast <2 x double> %46, %reverse146
  %49 = fadd fast <2 x double> %47, %reverse148
  %reverse157 = shufflevector <2 x double> %48, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %50 = bitcast double* %35 to <2 x double>*
  store <2 x double> %reverse157, <2 x double>* %50, align 8, !tbaa !70, !alias.scope !278, !noalias !281
  %reverse158 = shufflevector <2 x double> %49, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %51 = bitcast double* %38 to <2 x double>*
  store <2 x double> %reverse158, <2 x double>* %51, align 8, !tbaa !70, !alias.scope !278, !noalias !281
  %index.next140 = add i64 %index139, 4
  %52 = icmp eq i64 %index.next140, %n.vec138
  br i1 %52, label %middle.block118, label %vector.body120, !llvm.loop !283

middle.block118:                                  ; preds = %vector.body120
  br i1 %cmp.n143, label %sqnorm_b.exit, label %for.body.i.preheader160

for.body.i.preheader160:                          ; preds = %vector.memcheck123, %for.body.i.preheader, %middle.block118
  %indvars.iv.i.ph = phi i64 [ %7, %vector.memcheck123 ], [ %7, %for.body.i.preheader ], [ %ind.end142, %middle.block118 ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader160, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ %indvars.iv.i.ph, %for.body.i.preheader160 ]
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, -1
  %arrayidx2.i = getelementptr inbounds double, double* %arrayidx55, i64 %indvars.iv.next.i
  %53 = load double, double* %arrayidx2.i, align 8, !tbaa !70
  %arrayidx4.i = getelementptr inbounds double, double* %arrayidx51, i64 %indvars.iv.next.i
  %54 = load double, double* %arrayidx4.i, align 8, !tbaa !70
  %mul6.i = fmul fast double %54, %.pre.i
  %add.i = fadd fast double %mul6.i, %53
  store double %add.i, double* %arrayidx2.i, align 8, !tbaa !70
  %cmp.i = icmp sgt i64 %indvars.iv.i, 2
  br i1 %cmp.i, label %for.body.i, label %sqnorm_b.exit, !llvm.loop !284

sqnorm_b.exit:                                    ; preds = %for.body.i, %middle.block118, %for.body31
  %55 = load double, double* %arrayidx55, align 8, !tbaa !70
  %56 = load double, double* %arrayidx51, align 8, !tbaa !70
  %mul12.i = fmul fast double %56, %.pre.i
  %add13.i = fadd fast double %mul12.i, %55
  store double %add13.i, double* %arrayidx55, align 8, !tbaa !70
  %57 = mul nsw i64 %indvars.iv.next, %11
  %arrayidx58 = getelementptr inbounds double, double* %Qdiags, i64 %57
  %arrayidx61 = getelementptr inbounds double, double* %Qdiagsb, i64 %57
  br i1 %cmp17.i63, label %for.body.i75.preheader, label %sqnorm_b.exit79

for.body.i75.preheader:                           ; preds = %sqnorm_b.exit
  br i1 %min.iters.check, label %for.body.i75.preheader159, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.i75.preheader
  %bound0 = icmp ult double* %scevgep, %scevgep106
  %bound1 = icmp ult double* %scevgep104, %scevgep102
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.i75.preheader159, label %vector.body

vector.body:                                      ; preds = %vector.memcheck, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %vector.memcheck ]
  %58 = xor i64 %index, -1
  %59 = add i64 %58, %8
  %60 = getelementptr inbounds double, double* %arrayidx61, i64 %59
  %61 = getelementptr inbounds double, double* %60, i64 -1
  %62 = bitcast double* %61 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %62, align 8, !tbaa !70, !alias.scope !285, !noalias !288
  %reverse = shufflevector <2 x double> %wide.load, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %63 = getelementptr inbounds double, double* %60, i64 -2
  %64 = getelementptr inbounds double, double* %63, i64 -1
  %65 = bitcast double* %64 to <2 x double>*
  %wide.load108 = load <2 x double>, <2 x double>* %65, align 8, !tbaa !70, !alias.scope !285, !noalias !288
  %reverse109 = shufflevector <2 x double> %wide.load108, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %66 = getelementptr inbounds double, double* %arrayidx58, i64 %59
  %67 = getelementptr inbounds double, double* %66, i64 -1
  %68 = bitcast double* %67 to <2 x double>*
  %wide.load110 = load <2 x double>, <2 x double>* %68, align 8, !tbaa !70, !alias.scope !288
  %reverse111 = shufflevector <2 x double> %wide.load110, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %69 = getelementptr inbounds double, double* %66, i64 -2
  %70 = getelementptr inbounds double, double* %69, i64 -1
  %71 = bitcast double* %70 to <2 x double>*
  %wide.load112 = load <2 x double>, <2 x double>* %71, align 8, !tbaa !70, !alias.scope !288
  %reverse113 = shufflevector <2 x double> %wide.load112, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %72 = fmul fast <2 x double> %reverse111, %broadcast.splat
  %73 = fmul fast <2 x double> %reverse113, %broadcast.splat115
  %74 = fadd fast <2 x double> %72, %reverse
  %75 = fadd fast <2 x double> %73, %reverse109
  %reverse116 = shufflevector <2 x double> %74, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %76 = bitcast double* %61 to <2 x double>*
  store <2 x double> %reverse116, <2 x double>* %76, align 8, !tbaa !70, !alias.scope !285, !noalias !288
  %reverse117 = shufflevector <2 x double> %75, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %77 = bitcast double* %64 to <2 x double>*
  store <2 x double> %reverse117, <2 x double>* %77, align 8, !tbaa !70, !alias.scope !285, !noalias !288
  %index.next = add i64 %index, 4
  %78 = icmp eq i64 %index.next, %n.vec
  br i1 %78, label %middle.block, label %vector.body, !llvm.loop !290

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %sqnorm_b.exit79, label %for.body.i75.preheader159

for.body.i75.preheader159:                        ; preds = %vector.memcheck, %for.body.i75.preheader, %middle.block
  %indvars.iv.i68.ph = phi i64 [ %8, %vector.memcheck ], [ %8, %for.body.i75.preheader ], [ %ind.end, %middle.block ]
  br label %for.body.i75

for.body.i75:                                     ; preds = %for.body.i75.preheader159, %for.body.i75
  %indvars.iv.i68 = phi i64 [ %indvars.iv.next.i69, %for.body.i75 ], [ %indvars.iv.i68.ph, %for.body.i75.preheader159 ]
  %indvars.iv.next.i69 = add nsw i64 %indvars.iv.i68, -1
  %arrayidx2.i70 = getelementptr inbounds double, double* %arrayidx61, i64 %indvars.iv.next.i69
  %79 = load double, double* %arrayidx2.i70, align 8, !tbaa !70
  %arrayidx4.i71 = getelementptr inbounds double, double* %arrayidx58, i64 %indvars.iv.next.i69
  %80 = load double, double* %arrayidx4.i71, align 8, !tbaa !70
  %mul6.i72 = fmul fast double %80, %.pre.i
  %add.i73 = fadd fast double %mul6.i72, %79
  store double %add.i73, double* %arrayidx2.i70, align 8, !tbaa !70
  %cmp.i74 = icmp sgt i64 %indvars.iv.i68, 2
  br i1 %cmp.i74, label %for.body.i75, label %sqnorm_b.exit79, !llvm.loop !291

sqnorm_b.exit79:                                  ; preds = %for.body.i75, %middle.block, %sqnorm_b.exit
  %81 = load double, double* %arrayidx61, align 8, !tbaa !70
  %82 = load double, double* %arrayidx58, align 8, !tbaa !70
  %mul12.i77 = fmul fast double %82, %.pre.i
  %add13.i78 = fadd fast double %mul12.i77, %81
  store double %add13.i78, double* %arrayidx61, align 8, !tbaa !70
  %cmp30 = icmp sgt i64 %indvars.iv, 1
  %indvar.next = add i64 %indvar, 1
  br i1 %cmp30, label %for.body31, label %for.end63, !llvm.loop !292

for.end63:                                        ; preds = %sqnorm_b.exit79, %for.cond29.preheader
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @log_wishart_prior_nodiff(i32 %p, i32 %k, double %wishart.coerce0, i32 %wishart.coerce1, double* nocapture readonly %sum_qs, double* nocapture readonly %Qdiags, double* nocapture readonly %icf) local_unnamed_addr #6 {
entry:
  %add = add i32 %p, 1
  %add1 = add i32 %add, %wishart.coerce1
  %mul = mul nsw i32 %add, %p
  %div = sdiv i32 %mul, 2
  %conv = sitofp i32 %add1 to double
  %mul3 = fmul fast double %conv, 5.000000e-01
  %conv4 = fptrunc double %mul3 to float
  %conv5 = fpext float %conv4 to double
  %conv6 = sitofp i32 %p to double
  %sub.i = fadd fast double %conv6, -1.000000e+00
  %mul1.i = fmul fast double %conv6, 0x3FD250D048E7A2E6
  %mul2.i = fmul fast double %mul1.i, %sub.i
  %add.i = fadd fast double %conv6, 1.000000e+00
  %cmp10.i = fcmp fast ogt double %add.i, 1.000000e+00
  br i1 %cmp10.i, label %for.body.i, label %log_gamma_distrib_nodiff.exit

for.body.i:                                       ; preds = %entry, %for.body.i
  %j.012.i = phi i32 [ %inc.i, %for.body.i ], [ 1, %entry ]
  %out.011.i = phi double [ %add9.i, %for.body.i ], [ %mul2.i, %entry ]
  %sub3.i = sub nsw i32 1, %j.012.i
  %conv4.i = sitofp i32 %sub3.i to double
  %mul5.i = fmul fast double %conv4.i, 5.000000e-01
  %add6.i = fadd fast double %mul5.i, %conv5
  %call.i = tail call fast double @lgamma(double %add6.i) #38
  %conv7.i = fptrunc double %call.i to float
  %conv8.i = fpext float %conv7.i to double
  %add9.i = fadd fast double %out.011.i, %conv8.i
  %inc.i = add nuw nsw i32 %j.012.i, 1
  %conv.i = sitofp i32 %inc.i to double
  %cmp.i = fcmp fast ogt double %add.i, %conv.i
  br i1 %cmp.i, label %for.body.i, label %log_gamma_distrib_nodiff.exit, !llvm.loop !277

log_gamma_distrib_nodiff.exit:                    ; preds = %for.body.i, %entry
  %out.0.lcssa.i = phi double [ %mul2.i, %entry ], [ %add9.i, %for.body.i ]
  %cmp49 = icmp sgt i32 %k, 0
  br i1 %cmp49, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %log_gamma_distrib_nodiff.exit
  %cmp10.i36 = icmp sgt i32 %p, 1
  %wide.trip.count.i37 = zext i32 %p to i64
  %sub17 = sub nsw i32 %div, %p
  %cmp10.i31 = icmp sgt i32 %sub17, 1
  %wide.trip.count.i = zext i32 %sub17 to i64
  %0 = fmul fast double %wishart.coerce0, %wishart.coerce0
  %mul27 = fmul fast double %0, 5.000000e-01
  %conv31 = sitofp i32 %wishart.coerce1 to double
  %1 = sext i32 %p to i64
  %wide.trip.count = zext i32 %k to i64
  %2 = add nsw i64 %wide.trip.count.i, -1
  %3 = add nsw i64 %wide.trip.count.i37, -1
  %min.iters.check58 = icmp ult i64 %3, 4
  %n.vec61 = and i64 %3, -4
  %ind.end65 = or i64 %n.vec61, 1
  %cmp.n66 = icmp eq i64 %3, %n.vec61
  %min.iters.check = icmp ult i64 %2, 4
  %n.vec = and i64 %2, -4
  %ind.end = or i64 %n.vec, 1
  %cmp.n = icmp eq i64 %2, %n.vec
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %sqnorm_nodiff.exit
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %sqnorm_nodiff.exit ]
  %out.050 = phi double [ 0.000000e+00, %for.body.lr.ph ], [ %sub35, %sqnorm_nodiff.exit ]
  %4 = mul nsw i64 %indvars.iv, %1
  %arrayidx = getelementptr inbounds double, double* %Qdiags, i64 %4
  %5 = load double, double* %arrayidx, align 8, !tbaa !70
  %mul.i35 = fmul fast double %5, %5
  br i1 %cmp10.i36, label %for.body.i46.preheader, label %sqnorm_nodiff.exit48

for.body.i46.preheader:                           ; preds = %for.body
  br i1 %min.iters.check58, label %for.body.i46.preheader75, label %vector.ph59

vector.ph59:                                      ; preds = %for.body.i46.preheader
  %6 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul.i35, i32 0
  br label %vector.body57

vector.body57:                                    ; preds = %vector.body57, %vector.ph59
  %index62 = phi i64 [ 0, %vector.ph59 ], [ %index.next63, %vector.body57 ]
  %vec.phi68 = phi <2 x double> [ %6, %vector.ph59 ], [ %13, %vector.body57 ]
  %vec.phi69 = phi <2 x double> [ zeroinitializer, %vector.ph59 ], [ %14, %vector.body57 ]
  %offset.idx67 = or i64 %index62, 1
  %7 = getelementptr inbounds double, double* %arrayidx, i64 %offset.idx67
  %8 = bitcast double* %7 to <2 x double>*
  %wide.load70 = load <2 x double>, <2 x double>* %8, align 8, !tbaa !70
  %9 = getelementptr inbounds double, double* %7, i64 2
  %10 = bitcast double* %9 to <2 x double>*
  %wide.load71 = load <2 x double>, <2 x double>* %10, align 8, !tbaa !70
  %11 = fmul fast <2 x double> %wide.load70, %wide.load70
  %12 = fmul fast <2 x double> %wide.load71, %wide.load71
  %13 = fadd fast <2 x double> %11, %vec.phi68
  %14 = fadd fast <2 x double> %12, %vec.phi69
  %index.next63 = add i64 %index62, 4
  %15 = icmp eq i64 %index.next63, %n.vec61
  br i1 %15, label %middle.block55, label %vector.body57, !llvm.loop !293

middle.block55:                                   ; preds = %vector.body57
  %bin.rdx72 = fadd fast <2 x double> %14, %13
  %16 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx72)
  br i1 %cmp.n66, label %sqnorm_nodiff.exit48, label %for.body.i46.preheader75

for.body.i46.preheader75:                         ; preds = %for.body.i46.preheader, %middle.block55
  %indvars.iv.i39.ph = phi i64 [ 1, %for.body.i46.preheader ], [ %ind.end65, %middle.block55 ]
  %res.012.i40.ph = phi double [ %mul.i35, %for.body.i46.preheader ], [ %16, %middle.block55 ]
  br label %for.body.i46

for.body.i46:                                     ; preds = %for.body.i46.preheader75, %for.body.i46
  %indvars.iv.i39 = phi i64 [ %indvars.iv.next.i44, %for.body.i46 ], [ %indvars.iv.i39.ph, %for.body.i46.preheader75 ]
  %res.012.i40 = phi double [ %add.i43, %for.body.i46 ], [ %res.012.i40.ph, %for.body.i46.preheader75 ]
  %arrayidx2.i41 = getelementptr inbounds double, double* %arrayidx, i64 %indvars.iv.i39
  %17 = load double, double* %arrayidx2.i41, align 8, !tbaa !70
  %mul5.i42 = fmul fast double %17, %17
  %add.i43 = fadd fast double %mul5.i42, %res.012.i40
  %indvars.iv.next.i44 = add nuw nsw i64 %indvars.iv.i39, 1
  %exitcond.not.i45 = icmp eq i64 %indvars.iv.next.i44, %wide.trip.count.i37
  br i1 %exitcond.not.i45, label %sqnorm_nodiff.exit48, label %for.body.i46, !llvm.loop !294

sqnorm_nodiff.exit48:                             ; preds = %for.body.i46, %middle.block55, %for.body
  %res.0.lcssa.i47 = phi double [ %mul.i35, %for.body ], [ %16, %middle.block55 ], [ %add.i43, %for.body.i46 ]
  %18 = trunc i64 %indvars.iv to i32
  %mul18 = mul nsw i32 %div, %18
  %add19 = add nsw i32 %mul18, %p
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds double, double* %icf, i64 %idxprom20
  %19 = load double, double* %arrayidx21, align 8, !tbaa !70
  %mul.i = fmul fast double %19, %19
  br i1 %cmp10.i31, label %for.body.i34.preheader, label %sqnorm_nodiff.exit

for.body.i34.preheader:                           ; preds = %sqnorm_nodiff.exit48
  br i1 %min.iters.check, label %for.body.i34.preheader74, label %vector.ph

vector.ph:                                        ; preds = %for.body.i34.preheader
  %20 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul.i, i32 0
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %20, %vector.ph ], [ %27, %vector.body ]
  %vec.phi53 = phi <2 x double> [ zeroinitializer, %vector.ph ], [ %28, %vector.body ]
  %offset.idx = or i64 %index, 1
  %21 = getelementptr inbounds double, double* %arrayidx21, i64 %offset.idx
  %22 = bitcast double* %21 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %22, align 8, !tbaa !70
  %23 = getelementptr inbounds double, double* %21, i64 2
  %24 = bitcast double* %23 to <2 x double>*
  %wide.load54 = load <2 x double>, <2 x double>* %24, align 8, !tbaa !70
  %25 = fmul fast <2 x double> %wide.load, %wide.load
  %26 = fmul fast <2 x double> %wide.load54, %wide.load54
  %27 = fadd fast <2 x double> %25, %vec.phi
  %28 = fadd fast <2 x double> %26, %vec.phi53
  %index.next = add i64 %index, 4
  %29 = icmp eq i64 %index.next, %n.vec
  br i1 %29, label %middle.block, label %vector.body, !llvm.loop !295

middle.block:                                     ; preds = %vector.body
  %bin.rdx = fadd fast <2 x double> %28, %27
  %30 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  br i1 %cmp.n, label %sqnorm_nodiff.exit, label %for.body.i34.preheader74

for.body.i34.preheader74:                         ; preds = %for.body.i34.preheader, %middle.block
  %indvars.iv.i.ph = phi i64 [ 1, %for.body.i34.preheader ], [ %ind.end, %middle.block ]
  %res.012.i.ph = phi double [ %mul.i, %for.body.i34.preheader ], [ %30, %middle.block ]
  br label %for.body.i34

for.body.i34:                                     ; preds = %for.body.i34.preheader74, %for.body.i34
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i34 ], [ %indvars.iv.i.ph, %for.body.i34.preheader74 ]
  %res.012.i = phi double [ %add.i33, %for.body.i34 ], [ %res.012.i.ph, %for.body.i34.preheader74 ]
  %arrayidx2.i = getelementptr inbounds double, double* %arrayidx21, i64 %indvars.iv.i
  %31 = load double, double* %arrayidx2.i, align 8, !tbaa !70
  %mul5.i32 = fmul fast double %31, %31
  %add.i33 = fadd fast double %mul5.i32, %res.012.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %sqnorm_nodiff.exit, label %for.body.i34, !llvm.loop !296

sqnorm_nodiff.exit:                               ; preds = %for.body.i34, %middle.block, %sqnorm_nodiff.exit48
  %res.0.lcssa.i = phi double [ %mul.i, %sqnorm_nodiff.exit48 ], [ %30, %middle.block ], [ %add.i33, %for.body.i34 ]
  %add23 = fadd fast double %res.0.lcssa.i, %res.0.lcssa.i47
  %mul28 = fmul fast double %mul27, %add23
  %add29 = fadd fast double %mul28, %out.050
  %arrayidx33 = getelementptr inbounds double, double* %sum_qs, i64 %indvars.iv
  %32 = load double, double* %arrayidx33, align 8, !tbaa !70
  %33 = fmul fast double %32, %conv31
  %sub35 = fsub fast double %add29, %33
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !297

for.end:                                          ; preds = %sqnorm_nodiff.exit, %log_gamma_distrib_nodiff.exit
  %out.0.lcssa = phi double [ 0.000000e+00, %log_gamma_distrib_nodiff.exit ], [ %sub35, %sqnorm_nodiff.exit ]
  %34 = tail call fast double @llvm.log.f64(double %wishart.coerce0)
  %sub = fadd fast double %34, 0xBFD62E42FEFA39EF
  %mul7 = mul nsw i32 %add1, %p
  %conv8 = sitofp i32 %mul7 to double
  %mul11 = fmul fast double %sub, %conv8
  %sub12 = fsub fast double %mul11, %out.0.lcssa.i
  %conv36 = sitofp i32 %k to double
  %mul37 = fmul fast double %sub12, %conv36
  %sub38 = fsub fast double %out.0.lcssa, %mul37
  ret double %sub38
}

; Function Attrs: uwtable mustprogress
define dso_local void @preprocess_qs_b(i32 %d, i32 %k, double* nocapture readonly %icf, double* nocapture %icfb, double* nocapture readnone %sum_qs, double* nocapture %sum_qsb, double* nocapture readnone %Qdiags, double* nocapture %Qdiagsb) local_unnamed_addr #10 {
entry:
  %q16 = alloca double, align 8
  %add = add nsw i32 %d, 1
  %mul = mul nsw i32 %add, %d
  %div = sdiv i32 %mul, 2
  %cmp44 = icmp sgt i32 %k, 0
  br i1 %cmp44, label %for.cond1.preheader.lr.ph, label %for.end44

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %cmp242 = icmp sgt i32 %d, 0
  %0 = sext i32 %div to i64
  %wide.trip.count59 = zext i32 %k to i64
  %wide.trip.count = zext i32 %d to i64
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.lr.ph, %for.inc6
  %indvars.iv56 = phi i64 [ 0, %for.cond1.preheader.lr.ph ], [ %indvars.iv.next57, %for.inc6 ]
  br i1 %cmp242, label %for.body3.lr.ph, label %for.inc6

for.body3.lr.ph:                                  ; preds = %for.cond1.preheader
  %1 = mul nsw i64 %indvars.iv56, %0
  br label %for.body3

for.cond9.preheader:                              ; preds = %for.inc6
  br i1 %cmp44, label %for.cond13.preheader.lr.ph, label %for.end44

for.cond13.preheader.lr.ph:                       ; preds = %for.cond9.preheader
  %cmp1437 = icmp sgt i32 %d, 0
  %2 = bitcast double* %q16 to i8*
  %3 = sext i32 %d to i64
  %4 = zext i32 %k to i64
  %5 = sext i32 %div to i64
  br label %for.cond13.preheader

for.body3:                                        ; preds = %for.body3.lr.ph, %for.body3
  %indvars.iv53 = phi i64 [ 0, %for.body3.lr.ph ], [ %indvars.iv.next54, %for.body3 ]
  %6 = add nsw i64 %indvars.iv53, %1
  %arrayidx = getelementptr inbounds double, double* %icf, i64 %6
  %7 = load double, double* %arrayidx, align 8, !tbaa !70
  tail call void @pushReal8(double %7)
  %indvars.iv.next54 = add nuw nsw i64 %indvars.iv53, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next54, %wide.trip.count
  br i1 %exitcond.not, label %for.inc6, label %for.body3, !llvm.loop !298

for.inc6:                                         ; preds = %for.body3, %for.cond1.preheader
  %indvars.iv.next57 = add nuw nsw i64 %indvars.iv56, 1
  %exitcond60.not = icmp eq i64 %indvars.iv.next57, %wide.trip.count59
  br i1 %exitcond60.not, label %for.cond9.preheader, label %for.cond1.preheader, !llvm.loop !299

for.cond13.preheader:                             ; preds = %for.cond13.preheader.lr.ph, %for.end39
  %indvars.iv49 = phi i64 [ %4, %for.cond13.preheader.lr.ph ], [ %indvars.iv.next50, %for.end39 ]
  %indvars.iv.next50 = add nsw i64 %indvars.iv49, -1
  br i1 %cmp1437, label %for.body15.lr.ph, label %for.end39

for.body15.lr.ph:                                 ; preds = %for.cond13.preheader
  %8 = mul nsw i64 %indvars.iv.next50, %3
  %arrayidx27 = getelementptr inbounds double, double* %sum_qsb, i64 %indvars.iv.next50
  %9 = mul nsw i64 %indvars.iv.next50, %5
  br label %for.body15

for.body15:                                       ; preds = %for.body15.lr.ph, %for.body15
  %indvars.iv = phi i64 [ %3, %for.body15.lr.ph ], [ %indvars.iv.next, %for.body15 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #38
  call void @popReal8(double* nonnull %q16)
  %10 = load double, double* %q16, align 8, !tbaa !70
  %11 = call fast double @llvm.exp.f64(double %10)
  %12 = add nsw i64 %indvars.iv.next, %8
  %arrayidx20 = getelementptr inbounds double, double* %Qdiagsb, i64 %12
  %13 = load double, double* %arrayidx20, align 8, !tbaa !70
  %mul21 = fmul fast double %11, %13
  store double 0.000000e+00, double* %arrayidx20, align 8, !tbaa !70
  %14 = load double, double* %arrayidx27, align 8, !tbaa !70
  %add28 = fadd fast double %14, %mul21
  %15 = add nsw i64 %indvars.iv.next, %9
  %arrayidx32 = getelementptr inbounds double, double* %icfb, i64 %15
  %16 = load double, double* %arrayidx32, align 8, !tbaa !70
  %add33 = fadd fast double %add28, %16
  store double %add33, double* %arrayidx32, align 8, !tbaa !70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #38
  %cmp14 = icmp sgt i64 %indvars.iv, 1
  br i1 %cmp14, label %for.body15, label %for.end39, !llvm.loop !300

for.end39:                                        ; preds = %for.body15, %for.cond13.preheader
  %arrayidx41 = getelementptr inbounds double, double* %sum_qsb, i64 %indvars.iv.next50
  store double 0.000000e+00, double* %arrayidx41, align 8, !tbaa !70
  %cmp10 = icmp sgt i64 %indvars.iv49, 1
  br i1 %cmp10, label %for.cond13.preheader, label %for.end44, !llvm.loop !301

for.end44:                                        ; preds = %for.end39, %entry, %for.cond9.preheader
  ret void
}

declare dso_local void @pushReal8(double) local_unnamed_addr #3

declare dso_local void @popReal8(double*) local_unnamed_addr #3

; Function Attrs: nofree nounwind uwtable mustprogress
define dso_local void @preprocess_qs_nodiff(i32 %d, i32 %k, double* nocapture readonly %icf, double* nocapture %sum_qs, double* nocapture %Qdiags) local_unnamed_addr #19 {
entry:
  %add = add nsw i32 %d, 1
  %mul = mul nsw i32 %add, %d
  %div = sdiv i32 %mul, 2
  %cmp22 = icmp sgt i32 %k, 0
  br i1 %cmp22, label %for.body.lr.ph, label %for.end19

for.body.lr.ph:                                   ; preds = %entry
  %cmp220 = icmp sgt i32 %d, 0
  %wide.trip.count30 = zext i32 %k to i64
  %wide.trip.count = zext i32 %d to i64
  %exitcond.not35 = icmp eq i32 %d, 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc17
  %indvars.iv28 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next29, %for.inc17 ]
  %arrayidx = getelementptr inbounds double, double* %sum_qs, i64 %indvars.iv28
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !70
  br i1 %cmp220, label %for.body3.lr.ph, label %for.inc17

for.body3.lr.ph:                                  ; preds = %for.body
  %0 = trunc i64 %indvars.iv28 to i32
  %mul4 = mul nsw i32 %div, %0
  %mul13 = mul nsw i32 %0, %d
  %1 = sext i32 %mul4 to i64
  %2 = sext i32 %mul13 to i64
  %arrayidx732 = getelementptr inbounds double, double* %icf, i64 %1
  %3 = load double, double* %arrayidx732, align 8, !tbaa !70
  store double %3, double* %arrayidx, align 8, !tbaa !70
  %4 = tail call fast double @llvm.exp.f64(double %3)
  %arrayidx1634 = getelementptr inbounds double, double* %Qdiags, i64 %2
  store double %4, double* %arrayidx1634, align 8, !tbaa !70
  br i1 %exitcond.not35, label %for.inc17, label %for.body3.for.body3_crit_edge, !llvm.loop !302

for.body3.for.body3_crit_edge:                    ; preds = %for.body3.lr.ph, %for.body3.for.body3_crit_edge
  %indvars.iv.next36 = phi i64 [ %indvars.iv.next, %for.body3.for.body3_crit_edge ], [ 1, %for.body3.lr.ph ]
  %.pre = load double, double* %arrayidx, align 8, !tbaa !70
  %5 = add nsw i64 %indvars.iv.next36, %1
  %arrayidx7 = getelementptr inbounds double, double* %icf, i64 %5
  %6 = load double, double* %arrayidx7, align 8, !tbaa !70
  %add10 = fadd fast double %.pre, %6
  store double %add10, double* %arrayidx, align 8, !tbaa !70
  %7 = tail call fast double @llvm.exp.f64(double %6)
  %8 = add nsw i64 %indvars.iv.next36, %2
  %arrayidx16 = getelementptr inbounds double, double* %Qdiags, i64 %8
  store double %7, double* %arrayidx16, align 8, !tbaa !70
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next36, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.inc17, label %for.body3.for.body3_crit_edge, !llvm.loop !302

for.inc17:                                        ; preds = %for.body3.for.body3_crit_edge, %for.body3.lr.ph, %for.body
  %indvars.iv.next29 = add nuw nsw i64 %indvars.iv28, 1
  %exitcond31.not = icmp eq i64 %indvars.iv.next29, %wide.trip.count30
  br i1 %exitcond31.not, label %for.end19, label %for.body, !llvm.loop !303

for.end19:                                        ; preds = %for.inc17, %entry
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @Qtimesx_b(i32 %d, double* nocapture readonly %Qdiag, double* nocapture %Qdiagb, double* nocapture readonly %ltri, double* nocapture %ltrib, double* nocapture readonly %x, double* nocapture %xb, double* nocapture readnone %out, double* nocapture %outb) local_unnamed_addr #10 {
entry:
  %adFrom = alloca i32, align 4
  %0 = bitcast i32* %adFrom to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #38
  %cmp59 = icmp sgt i32 %d, 0
  br i1 %cmp59, label %for.body, label %for.end67

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv70.in = phi i32 [ %indvars.iv70, %for.body ], [ %d, %entry ]
  %Lparamsidx.061 = phi i32 [ %spec.select, %for.body ], [ 0, %entry ]
  %i.060 = phi i32 [ %add, %for.body ], [ 0, %entry ]
  %indvars.iv70 = add i32 %indvars.iv70.in, -1
  %add = add nuw nsw i32 %i.060, 1
  %cmp255 = icmp slt i32 %add, %d
  %1 = select i1 %cmp255, i32 %indvars.iv70, i32 0
  %spec.select = add i32 %Lparamsidx.061, %1
  tail call void @pushInteger4(i32 %add)
  %exitcond.not = icmp eq i32 %add, %d
  br i1 %exitcond.not, label %for.end7, label %for.body, !llvm.loop !304

for.end7:                                         ; preds = %for.body
  store i32 %d, i32* %adFrom, align 4, !tbaa !47
  br i1 %cmp59, label %for.body10.preheader, label %for.end67

for.body10.preheader:                             ; preds = %for.end7
  %2 = zext i32 %d to i64
  %3 = add nsw i64 %2, -1
  br label %for.body10

for.cond40.preheader:                             ; preds = %for.inc36
  br i1 %cmp59, label %for.body42.preheader, label %for.end67

for.body42.preheader:                             ; preds = %for.cond40.preheader
  %4 = add nsw i32 %d, -1
  %5 = zext i32 %4 to i64
  br label %for.body42

for.body10:                                       ; preds = %for.body10.preheader, %for.inc36
  %indvars.iv68 = phi i64 [ %3, %for.body10.preheader ], [ %indvars.iv.next69, %for.inc36 ]
  %Lparamsidx.254 = phi i32 [ %spec.select, %for.body10.preheader ], [ %Lparamsidx.3.lcssa, %for.inc36 ]
  call void @popInteger4(i32* nonnull %adFrom)
  %6 = load i32, i32* %adFrom, align 4, !tbaa !47
  %cmp14.not48.not = icmp slt i32 %6, %d
  br i1 %cmp14.not48.not, label %for.body15.lr.ph, label %for.inc36

for.body15.lr.ph:                                 ; preds = %for.body10
  %arrayidx17 = getelementptr inbounds double, double* %x, i64 %indvars.iv68
  %arrayidx24 = getelementptr inbounds double, double* %xb, i64 %indvars.iv68
  %7 = sext i32 %Lparamsidx.254 to i64
  %8 = sext i32 %6 to i64
  br label %for.body15

for.body15:                                       ; preds = %for.body15.lr.ph, %for.body15
  %indvars.iv66 = phi i64 [ %3, %for.body15.lr.ph ], [ %indvars.iv.next67, %for.body15 ]
  %indvars.iv64 = phi i64 [ %7, %for.body15.lr.ph ], [ %indvars.iv.next65, %for.body15 ]
  %indvars.iv.next65 = add nsw i64 %indvars.iv64, -1
  %arrayidx = getelementptr inbounds double, double* %ltrib, i64 %indvars.iv.next65
  %9 = load double, double* %arrayidx, align 8, !tbaa !70
  %10 = load double, double* %arrayidx17, align 8, !tbaa !70
  %arrayidx19 = getelementptr inbounds double, double* %outb, i64 %indvars.iv66
  %11 = load double, double* %arrayidx19, align 8, !tbaa !70
  %mul = fmul fast double %11, %10
  %add20 = fadd fast double %mul, %9
  store double %add20, double* %arrayidx, align 8, !tbaa !70
  %12 = load double, double* %arrayidx24, align 8, !tbaa !70
  %arrayidx26 = getelementptr inbounds double, double* %ltri, i64 %indvars.iv.next65
  %13 = load double, double* %arrayidx26, align 8, !tbaa !70
  %14 = load double, double* %arrayidx19, align 8, !tbaa !70
  %mul29 = fmul fast double %14, %13
  %add30 = fadd fast double %mul29, %12
  store double %add30, double* %arrayidx24, align 8, !tbaa !70
  %indvars.iv.next67 = add nsw i64 %indvars.iv66, -1
  %cmp14.not.not = icmp sgt i64 %indvars.iv66, %8
  br i1 %cmp14.not.not, label %for.body15, label %for.inc36.loopexit, !llvm.loop !305

for.inc36.loopexit:                               ; preds = %for.body15
  %15 = trunc i64 %indvars.iv.next65 to i32
  br label %for.inc36

for.inc36:                                        ; preds = %for.inc36.loopexit, %for.body10
  %Lparamsidx.3.lcssa = phi i32 [ %Lparamsidx.254, %for.body10 ], [ %15, %for.inc36.loopexit ]
  %indvars.iv.next69 = add nsw i64 %indvars.iv68, -1
  %cmp9 = icmp sgt i64 %indvars.iv68, 0
  br i1 %cmp9, label %for.body10, label %for.cond40.preheader, !llvm.loop !306

for.body42:                                       ; preds = %for.body42.preheader, %for.body42
  %indvars.iv = phi i64 [ %5, %for.body42.preheader ], [ %indvars.iv.next, %for.body42 ]
  %arrayidx44 = getelementptr inbounds double, double* %Qdiagb, i64 %indvars.iv
  %16 = load double, double* %arrayidx44, align 8, !tbaa !70
  %arrayidx46 = getelementptr inbounds double, double* %x, i64 %indvars.iv
  %17 = load double, double* %arrayidx46, align 8, !tbaa !70
  %arrayidx48 = getelementptr inbounds double, double* %outb, i64 %indvars.iv
  %18 = load double, double* %arrayidx48, align 8, !tbaa !70
  %mul49 = fmul fast double %18, %17
  %add50 = fadd fast double %mul49, %16
  store double %add50, double* %arrayidx44, align 8, !tbaa !70
  %arrayidx54 = getelementptr inbounds double, double* %xb, i64 %indvars.iv
  %19 = load double, double* %arrayidx54, align 8, !tbaa !70
  %arrayidx56 = getelementptr inbounds double, double* %Qdiag, i64 %indvars.iv
  %20 = load double, double* %arrayidx56, align 8, !tbaa !70
  %21 = load double, double* %arrayidx48, align 8, !tbaa !70
  %mul59 = fmul fast double %21, %20
  %add60 = fadd fast double %mul59, %19
  store double %add60, double* %arrayidx54, align 8, !tbaa !70
  store double 0.000000e+00, double* %arrayidx48, align 8, !tbaa !70
  %cmp41 = icmp sgt i64 %indvars.iv, 0
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  br i1 %cmp41, label %for.body42, label %for.end67, !llvm.loop !307

for.end67:                                        ; preds = %for.body42, %entry, %for.end7, %for.cond40.preheader
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #38
  ret void
}

declare dso_local void @pushInteger4(i32) local_unnamed_addr #3

declare dso_local void @popInteger4(i32*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind uwtable mustprogress
define dso_local void @Qtimesx_nodiff(i32 %d, double* nocapture readonly %Qdiag, double* nocapture readonly %ltri, double* nocapture readonly %x, double* nocapture %out) local_unnamed_addr #15 {
entry:
  %cmp27 = icmp sgt i32 %d, 0
  br i1 %cmp27, label %for.body.preheader, label %for.end27

for.body.preheader:                               ; preds = %entry
  %wide.trip.count39 = zext i32 %d to i64
  %min.iters.check = icmp ult i32 %d, 4
  br i1 %min.iters.check, label %for.body.preheader96, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.preheader
  %scevgep = getelementptr double, double* %out, i64 %wide.trip.count39
  %scevgep44 = getelementptr double, double* %Qdiag, i64 %wide.trip.count39
  %scevgep47 = getelementptr double, double* %x, i64 %wide.trip.count39
  %bound0 = icmp ugt double* %scevgep44, %out
  %bound1 = icmp ugt double* %scevgep, %Qdiag
  %found.conflict = and i1 %bound0, %bound1
  %bound049 = icmp ugt double* %scevgep47, %out
  %bound150 = icmp ugt double* %scevgep, %x
  %found.conflict51 = and i1 %bound049, %bound150
  %conflict.rdx = or i1 %found.conflict, %found.conflict51
  br i1 %conflict.rdx, label %for.body.preheader96, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count39, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %0 = getelementptr inbounds double, double* %Qdiag, i64 %index
  %1 = bitcast double* %0 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %1, align 8, !tbaa !70, !alias.scope !308
  %2 = getelementptr inbounds double, double* %0, i64 2
  %3 = bitcast double* %2 to <2 x double>*
  %wide.load52 = load <2 x double>, <2 x double>* %3, align 8, !tbaa !70, !alias.scope !308
  %4 = getelementptr inbounds double, double* %x, i64 %index
  %5 = bitcast double* %4 to <2 x double>*
  %wide.load53 = load <2 x double>, <2 x double>* %5, align 8, !tbaa !70, !alias.scope !311
  %6 = getelementptr inbounds double, double* %4, i64 2
  %7 = bitcast double* %6 to <2 x double>*
  %wide.load54 = load <2 x double>, <2 x double>* %7, align 8, !tbaa !70, !alias.scope !311
  %8 = fmul fast <2 x double> %wide.load53, %wide.load
  %9 = fmul fast <2 x double> %wide.load54, %wide.load52
  %10 = getelementptr inbounds double, double* %out, i64 %index
  %11 = bitcast double* %10 to <2 x double>*
  store <2 x double> %8, <2 x double>* %11, align 8, !tbaa !70, !alias.scope !313, !noalias !315
  %12 = getelementptr inbounds double, double* %10, i64 2
  %13 = bitcast double* %12 to <2 x double>*
  store <2 x double> %9, <2 x double>* %13, align 8, !tbaa !70, !alias.scope !313, !noalias !315
  %index.next = add i64 %index, 4
  %14 = icmp eq i64 %index.next, %n.vec
  br i1 %14, label %middle.block, label %vector.body, !llvm.loop !316

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count39
  br i1 %cmp.n, label %for.cond5.preheader, label %for.body.preheader96

for.body.preheader96:                             ; preds = %vector.memcheck, %for.body.preheader, %middle.block
  %indvars.iv37.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.preheader ], [ %n.vec, %middle.block ]
  br label %for.body

for.cond5.preheader:                              ; preds = %for.body, %middle.block
  br i1 %cmp27, label %for.body7.preheader, label %for.end27

for.body7.preheader:                              ; preds = %for.cond5.preheader
  %15 = zext i32 %d to i64
  %wide.trip.count35 = zext i32 %d to i64
  %scevgep64 = getelementptr double, double* %out, i64 %wide.trip.count39
  br label %for.body7

for.body:                                         ; preds = %for.body.preheader96, %for.body
  %indvars.iv37 = phi i64 [ %indvars.iv.next38, %for.body ], [ %indvars.iv37.ph, %for.body.preheader96 ]
  %arrayidx = getelementptr inbounds double, double* %Qdiag, i64 %indvars.iv37
  %16 = load double, double* %arrayidx, align 8, !tbaa !70
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %indvars.iv37
  %17 = load double, double* %arrayidx2, align 8, !tbaa !70
  %mul = fmul fast double %17, %16
  %arrayidx4 = getelementptr inbounds double, double* %out, i64 %indvars.iv37
  store double %mul, double* %arrayidx4, align 8, !tbaa !70
  %indvars.iv.next38 = add nuw nsw i64 %indvars.iv37, 1
  %exitcond40.not = icmp eq i64 %indvars.iv.next38, %wide.trip.count39
  br i1 %exitcond40.not, label %for.cond5.preheader, label %for.body, !llvm.loop !317

for.cond5.loopexit.loopexit:                      ; preds = %for.body10, %middle.block55
  %indvars.iv.next.lcssa = phi i64 [ %ind.end87, %middle.block55 ], [ %indvars.iv.next, %for.body10 ]
  %18 = trunc i64 %indvars.iv.next.lcssa to i32
  br label %for.cond5.loopexit

for.cond5.loopexit:                               ; preds = %for.cond5.loopexit.loopexit, %for.body7
  %Lparamsidx.1.lcssa = phi i32 [ %Lparamsidx.026, %for.body7 ], [ %18, %for.cond5.loopexit.loopexit ]
  %indvars.iv.next30 = add nuw nsw i64 %indvars.iv29, 1
  %exitcond36.not = icmp eq i64 %indvars.iv.next34, %wide.trip.count35
  br i1 %exitcond36.not, label %for.end27, label %for.body7, !llvm.loop !318

for.body7:                                        ; preds = %for.body7.preheader, %for.cond5.loopexit
  %indvars.iv33 = phi i64 [ 0, %for.body7.preheader ], [ %indvars.iv.next34, %for.cond5.loopexit ]
  %indvars.iv29 = phi i64 [ 1, %for.body7.preheader ], [ %indvars.iv.next30, %for.cond5.loopexit ]
  %Lparamsidx.026 = phi i32 [ 0, %for.body7.preheader ], [ %Lparamsidx.1.lcssa, %for.cond5.loopexit ]
  %19 = add nuw i64 %indvars.iv33, 1
  %scevgep62 = getelementptr double, double* %out, i64 %19
  %scevgep6263 = bitcast double* %scevgep62 to i8*
  %20 = xor i64 %indvars.iv33, -1
  %21 = add nsw i64 %20, %wide.trip.count39
  %scevgep68 = getelementptr double, double* %ltri, i64 %21
  %scevgep71 = getelementptr double, double* %x, i64 %indvars.iv33
  %scevgep7172 = bitcast double* %scevgep71 to i8*
  %uglygep = getelementptr i8, i8* %scevgep7172, i64 1
  %22 = xor i64 %indvars.iv33, -1
  %23 = add nsw i64 %22, %wide.trip.count39
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1
  %cmp921 = icmp ult i64 %indvars.iv.next34, %15
  br i1 %cmp921, label %for.body10.lr.ph, label %for.cond5.loopexit

for.body10.lr.ph:                                 ; preds = %for.body7
  %arrayidx16 = getelementptr inbounds double, double* %x, i64 %indvars.iv33
  %24 = sext i32 %Lparamsidx.026 to i64
  %min.iters.check58 = icmp ult i64 %23, 4
  br i1 %min.iters.check58, label %for.body10.preheader, label %vector.memcheck60

vector.memcheck60:                                ; preds = %for.body10.lr.ph
  %scevgep66 = getelementptr double, double* %ltri, i64 %24
  %scevgep69 = getelementptr double, double* %scevgep68, i64 %24
  %bound073 = icmp ult double* %scevgep62, %scevgep69
  %bound174 = icmp ult double* %scevgep66, %scevgep64
  %found.conflict75 = and i1 %bound073, %bound174
  %bound076 = icmp ugt i8* %uglygep, %scevgep6263
  %bound177 = icmp ult double* %arrayidx16, %scevgep64
  %found.conflict78 = and i1 %bound076, %bound177
  %conflict.rdx79 = or i1 %found.conflict75, %found.conflict78
  br i1 %conflict.rdx79, label %for.body10.preheader, label %vector.ph61

vector.ph61:                                      ; preds = %vector.memcheck60
  %n.vec82 = and i64 %23, -4
  %ind.end = add i64 %indvars.iv29, %n.vec82
  %ind.end87 = add i64 %n.vec82, %24
  %25 = load double, double* %arrayidx16, align 8, !tbaa !70, !alias.scope !319
  %broadcast.splatinsert = insertelement <2 x double> poison, double %25, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert94 = insertelement <2 x double> poison, double %25, i32 0
  %broadcast.splat95 = shufflevector <2 x double> %broadcast.splatinsert94, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body57

vector.body57:                                    ; preds = %vector.body57, %vector.ph61
  %index83 = phi i64 [ 0, %vector.ph61 ], [ %index.next84, %vector.body57 ]
  %offset.idx = add i64 %indvars.iv29, %index83
  %offset.idx89 = add i64 %index83, %24
  %26 = getelementptr inbounds double, double* %out, i64 %offset.idx
  %27 = bitcast double* %26 to <2 x double>*
  %wide.load90 = load <2 x double>, <2 x double>* %27, align 8, !tbaa !70, !alias.scope !322, !noalias !324
  %28 = getelementptr inbounds double, double* %26, i64 2
  %29 = bitcast double* %28 to <2 x double>*
  %wide.load91 = load <2 x double>, <2 x double>* %29, align 8, !tbaa !70, !alias.scope !322, !noalias !324
  %30 = getelementptr inbounds double, double* %ltri, i64 %offset.idx89
  %31 = bitcast double* %30 to <2 x double>*
  %wide.load92 = load <2 x double>, <2 x double>* %31, align 8, !tbaa !70, !alias.scope !326
  %32 = getelementptr inbounds double, double* %30, i64 2
  %33 = bitcast double* %32 to <2 x double>*
  %wide.load93 = load <2 x double>, <2 x double>* %33, align 8, !tbaa !70, !alias.scope !326
  %34 = fmul fast <2 x double> %broadcast.splat, %wide.load92
  %35 = fmul fast <2 x double> %broadcast.splat95, %wide.load93
  %36 = fadd fast <2 x double> %34, %wide.load90
  %37 = fadd fast <2 x double> %35, %wide.load91
  %38 = bitcast double* %26 to <2 x double>*
  store <2 x double> %36, <2 x double>* %38, align 8, !tbaa !70, !alias.scope !322, !noalias !324
  %39 = bitcast double* %28 to <2 x double>*
  store <2 x double> %37, <2 x double>* %39, align 8, !tbaa !70, !alias.scope !322, !noalias !324
  %index.next84 = add i64 %index83, 4
  %40 = icmp eq i64 %index.next84, %n.vec82
  br i1 %40, label %middle.block55, label %vector.body57, !llvm.loop !327

middle.block55:                                   ; preds = %vector.body57
  %cmp.n88 = icmp eq i64 %23, %n.vec82
  br i1 %cmp.n88, label %for.cond5.loopexit.loopexit, label %for.body10.preheader

for.body10.preheader:                             ; preds = %vector.memcheck60, %for.body10.lr.ph, %middle.block55
  %indvars.iv31.ph = phi i64 [ %indvars.iv29, %vector.memcheck60 ], [ %indvars.iv29, %for.body10.lr.ph ], [ %ind.end, %middle.block55 ]
  %indvars.iv.ph = phi i64 [ %24, %vector.memcheck60 ], [ %24, %for.body10.lr.ph ], [ %ind.end87, %middle.block55 ]
  br label %for.body10

for.body10:                                       ; preds = %for.body10.preheader, %for.body10
  %indvars.iv31 = phi i64 [ %indvars.iv.next32, %for.body10 ], [ %indvars.iv31.ph, %for.body10.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body10 ], [ %indvars.iv.ph, %for.body10.preheader ]
  %arrayidx12 = getelementptr inbounds double, double* %out, i64 %indvars.iv31
  %41 = load double, double* %arrayidx12, align 8, !tbaa !70
  %arrayidx14 = getelementptr inbounds double, double* %ltri, i64 %indvars.iv
  %42 = load double, double* %arrayidx14, align 8, !tbaa !70
  %43 = load double, double* %arrayidx16, align 8, !tbaa !70
  %mul17 = fmul fast double %43, %42
  %add18 = fadd fast double %mul17, %41
  store double %add18, double* %arrayidx12, align 8, !tbaa !70
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %indvars.iv.next32 = add nuw nsw i64 %indvars.iv31, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next32, %wide.trip.count35
  br i1 %exitcond.not, label %for.cond5.loopexit.loopexit, label %for.body10, !llvm.loop !328

for.end27:                                        ; preds = %for.cond5.loopexit, %entry, %for.cond5.preheader
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @gmm_objective_b(i32 %d, i32 %k, i32 %n, double* nocapture readonly %alphas, double* nocapture %alphasb, double* nocapture readonly %means, double* nocapture %meansb, double* nocapture readonly %icf, double* nocapture %icfb, double* nocapture readonly %x, %struct.Wishart* nocapture readonly byval(%struct.Wishart) align 8 %wishart, double* nocapture readnone %err, double* nocapture %errb) local_unnamed_addr #10 {
entry:
  %meansb278 = bitcast double* %meansb to i8*
  %alphasb281 = bitcast double* %alphasb to i8*
  %q16.i = alloca double, align 8
  %add = add nsw i32 %d, 1
  %mul3 = mul nsw i32 %add, %d
  %div = sdiv i32 %mul3, 2
  %mul4 = mul i32 %k, %d
  %conv5 = sext i32 %mul4 to i64
  %mul6 = shl nsw i64 %conv5, 3
  %call = tail call noalias i8* @malloc(i64 %mul6) #38
  %0 = bitcast i8* %call to double*
  %cmp273 = icmp sgt i32 %mul4, 0
  br i1 %cmp273, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %1 = zext i32 %mul4 to i64
  %2 = shl nuw nsw i64 %1, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %call, i8 0, i64 %2, i1 false)
  br label %for.end

for.end:                                          ; preds = %for.body.preheader, %entry
  %call11 = tail call noalias i8* @malloc(i64 %mul6) #38
  %3 = bitcast i8* %call11 to double*
  %conv12 = sext i32 %k to i64
  %mul13 = shl nsw i64 %conv12, 3
  %call14 = tail call noalias i8* @malloc(i64 %mul13) #38
  %4 = bitcast i8* %call14 to double*
  %cmp16271 = icmp sgt i32 %k, 0
  br i1 %cmp16271, label %for.body17.preheader, label %for.end22

for.body17.preheader:                             ; preds = %for.end
  %5 = zext i32 %k to i64
  %6 = shl nuw nsw i64 %5, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %call14, i8 0, i64 %6, i1 false)
  br label %for.end22

for.end22:                                        ; preds = %for.body17.preheader, %for.end
  %call25 = tail call noalias i8* @malloc(i64 %mul13) #38
  %7 = bitcast i8* %call25 to double*
  %conv26 = sext i32 %d to i64
  %mul27 = shl nsw i64 %conv26, 3
  %call28 = tail call noalias i8* @malloc(i64 %mul27) #38
  %8 = bitcast i8* %call28 to double*
  %cmp30269 = icmp sgt i32 %d, 0
  br i1 %cmp30269, label %for.body31.preheader, label %for.end36

for.body31.preheader:                             ; preds = %for.end22
  %9 = zext i32 %d to i64
  %10 = shl nuw nsw i64 %9, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %call28, i8 0, i64 %10, i1 false)
  br label %for.end36

for.end36:                                        ; preds = %for.body31.preheader, %for.end22
  %call39 = tail call noalias i8* @malloc(i64 %mul27) #38
  %11 = bitcast i8* %call39 to double*
  %call42 = tail call noalias i8* @malloc(i64 %mul27) #38
  %12 = bitcast i8* %call42 to double*
  br i1 %cmp30269, label %for.body45.preheader, label %for.end50

for.body45.preheader:                             ; preds = %for.end36
  %13 = zext i32 %d to i64
  %14 = shl nuw nsw i64 %13, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %call42, i8 0, i64 %14, i1 false)
  br label %for.end50

for.end50:                                        ; preds = %for.body45.preheader, %for.end36
  %call53 = tail call noalias i8* @malloc(i64 %mul27) #38
  %15 = bitcast i8* %call53 to double*
  %call56 = tail call noalias i8* @malloc(i64 %mul13) #38
  %16 = bitcast i8* %call56 to double*
  br i1 %cmp16271, label %for.body.lr.ph.i, label %for.end64

for.end64:                                        ; preds = %for.end50
  %call67 = tail call noalias i8* @malloc(i64 %mul13) #38
  br label %preprocess_qs_nodiff.exit

for.body.lr.ph.i:                                 ; preds = %for.end50
  %17 = zext i32 %k to i64
  %18 = shl nuw nsw i64 %17, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %call56, i8 0, i64 %18, i1 false)
  %call67301 = tail call noalias i8* @malloc(i64 %mul13) #38
  %wide.trip.count30.i = zext i32 %k to i64
  %wide.trip.count.i = zext i32 %d to i64
  %min.iters.check = icmp ult i32 %d, 4
  %n.vec = and i64 %wide.trip.count.i, 4294967292
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc17.i, %for.body.lr.ph.i
  %indvars.iv28.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next29.i, %for.inc17.i ]
  %arrayidx.i = getelementptr inbounds double, double* %7, i64 %indvars.iv28.i
  store double 0.000000e+00, double* %arrayidx.i, align 8, !tbaa !70
  br i1 %cmp30269, label %for.body3.lr.ph.i, label %for.inc17.i

for.body3.lr.ph.i:                                ; preds = %for.body.i
  %19 = trunc i64 %indvars.iv28.i to i32
  %mul4.i = mul nsw i32 %div, %19
  %mul13.i = mul nsw i32 %19, %d
  %20 = sext i32 %mul4.i to i64
  %21 = sext i32 %mul13.i to i64
  br i1 %min.iters.check, label %for.body3.i.preheader, label %vector.body

vector.body:                                      ; preds = %for.body3.lr.ph.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body3.lr.ph.i ]
  %vec.phi = phi <2 x double> [ %27, %vector.body ], [ zeroinitializer, %for.body3.lr.ph.i ]
  %vec.phi304 = phi <2 x double> [ %28, %vector.body ], [ zeroinitializer, %for.body3.lr.ph.i ]
  %22 = add nsw i64 %index, %20
  %23 = getelementptr inbounds double, double* %icf, i64 %22
  %24 = bitcast double* %23 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %24, align 8, !tbaa !70
  %25 = getelementptr inbounds double, double* %23, i64 2
  %26 = bitcast double* %25 to <2 x double>*
  %wide.load305 = load <2 x double>, <2 x double>* %26, align 8, !tbaa !70
  %27 = fadd fast <2 x double> %wide.load, %vec.phi
  %28 = fadd fast <2 x double> %wide.load305, %vec.phi304
  %29 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %wide.load)
  %30 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %wide.load305)
  %31 = add nsw i64 %index, %21
  %32 = getelementptr inbounds double, double* %3, i64 %31
  %33 = bitcast double* %32 to <2 x double>*
  store <2 x double> %29, <2 x double>* %33, align 8, !tbaa !70
  %34 = getelementptr inbounds double, double* %32, i64 2
  %35 = bitcast double* %34 to <2 x double>*
  store <2 x double> %30, <2 x double>* %35, align 8, !tbaa !70
  %index.next = add i64 %index, 4
  %36 = icmp eq i64 %index.next, %n.vec
  br i1 %36, label %middle.block, label %vector.body, !llvm.loop !329

middle.block:                                     ; preds = %vector.body
  %bin.rdx = fadd fast <2 x double> %28, %27
  %37 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  br i1 %cmp.n, label %for.inc17.i.loopexit, label %for.body3.i.preheader

for.body3.i.preheader:                            ; preds = %for.body3.lr.ph.i, %middle.block
  %.ph = phi double [ 0.000000e+00, %for.body3.lr.ph.i ], [ %37, %middle.block ]
  %indvars.iv.i.ph = phi i64 [ 0, %for.body3.lr.ph.i ], [ %n.vec, %middle.block ]
  br label %for.body3.i

for.body3.i:                                      ; preds = %for.body3.i.preheader, %for.body3.i
  %38 = phi double [ %add10.i, %for.body3.i ], [ %.ph, %for.body3.i.preheader ]
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body3.i ], [ %indvars.iv.i.ph, %for.body3.i.preheader ]
  %39 = add nsw i64 %indvars.iv.i, %20
  %arrayidx7.i = getelementptr inbounds double, double* %icf, i64 %39
  %40 = load double, double* %arrayidx7.i, align 8, !tbaa !70
  %add10.i = fadd fast double %40, %38
  %41 = tail call fast double @llvm.exp.f64(double %40) #38
  %42 = add nsw i64 %indvars.iv.i, %21
  %arrayidx16.i = getelementptr inbounds double, double* %3, i64 %42
  store double %41, double* %arrayidx16.i, align 8, !tbaa !70
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %for.inc17.i.loopexit, label %for.body3.i, !llvm.loop !330

for.inc17.i.loopexit:                             ; preds = %for.body3.i, %middle.block
  %add10.i.lcssa = phi double [ %37, %middle.block ], [ %add10.i, %for.body3.i ]
  store double %add10.i.lcssa, double* %arrayidx.i, align 8, !tbaa !70
  br label %for.inc17.i

for.inc17.i:                                      ; preds = %for.inc17.i.loopexit, %for.body.i
  %indvars.iv.next29.i = add nuw nsw i64 %indvars.iv28.i, 1
  %exitcond31.not.i = icmp eq i64 %indvars.iv.next29.i, %wide.trip.count30.i
  br i1 %exitcond31.not.i, label %preprocess_qs_nodiff.exit, label %for.body.i, !llvm.loop !303

preprocess_qs_nodiff.exit:                        ; preds = %for.inc17.i, %for.end64
  %call67302 = phi i8* [ %call67, %for.end64 ], [ %call67301, %for.inc17.i ]
  %43 = bitcast i8* %call67302 to double*
  %cmp71262 = icmp sgt i32 %n, 0
  br i1 %cmp71262, label %for.cond73.preheader.lr.ph, label %for.end110

for.cond73.preheader.lr.ph:                       ; preds = %preprocess_qs_nodiff.exit
  %wide.trip.count.i205 = zext i32 %d to i64
  %cmp10.i229 = icmp sgt i32 %d, 1
  %wide.trip.count289 = zext i32 %n to i64
  %wide.trip.count = zext i32 %k to i64
  %44 = add nsw i64 %wide.trip.count.i205, -1
  %min.iters.check363 = icmp ult i32 %d, 4
  %n.vec366 = and i64 %wide.trip.count.i205, 4294967292
  %cmp.n370 = icmp eq i64 %n.vec366, %wide.trip.count.i205
  %min.iters.check348 = icmp ult i32 %d, 4
  %n.vec351 = and i64 %wide.trip.count.i205, 4294967292
  %cmp.n355 = icmp eq i64 %n.vec351, %wide.trip.count.i205
  %min.iters.check309 = icmp ult i64 %44, 4
  %n.vec312 = and i64 %44, -4
  %ind.end = or i64 %n.vec312, 1
  %cmp.n316 = icmp eq i64 %44, %n.vec312
  br label %for.cond73.preheader

for.cond73.preheader:                             ; preds = %for.cond73.preheader.lr.ph, %for.inc108
  %indvars.iv286 = phi i64 [ 0, %for.cond73.preheader.lr.ph ], [ %indvars.iv.next287, %for.inc108 ]
  br i1 %cmp16271, label %for.body75.lr.ph, label %for.inc108

for.body75.lr.ph:                                 ; preds = %for.cond73.preheader
  %45 = mul nsw i64 %indvars.iv286, %conv26
  %arrayidx78 = getelementptr inbounds double, double* %x, i64 %45
  br label %for.body75

for.body75:                                       ; preds = %for.body75.lr.ph, %sqnorm_nodiff.exit
  %indvars.iv284 = phi i64 [ 0, %for.body75.lr.ph ], [ %indvars.iv.next285, %sqnorm_nodiff.exit ]
  tail call void @pushReal8Array(double* %11, i32 %d)
  %46 = trunc i64 %indvars.iv284 to i32
  %mul79 = mul nsw i32 %46, %d
  %idxprom80 = sext i32 %mul79 to i64
  %arrayidx81 = getelementptr inbounds double, double* %means, i64 %idxprom80
  br i1 %cmp30269, label %for.body.i210.preheader, label %subtract_nodiff.exit

for.body.i210.preheader:                          ; preds = %for.body75
  br i1 %min.iters.check363, label %for.body.i210.preheader423, label %vector.body362

vector.body362:                                   ; preds = %for.body.i210.preheader, %vector.body362
  %index367 = phi i64 [ %index.next368, %vector.body362 ], [ 0, %for.body.i210.preheader ]
  %47 = getelementptr inbounds double, double* %arrayidx78, i64 %index367
  %48 = bitcast double* %47 to <2 x double>*
  %wide.load371 = load <2 x double>, <2 x double>* %48, align 8, !tbaa !70
  %49 = getelementptr inbounds double, double* %47, i64 2
  %50 = bitcast double* %49 to <2 x double>*
  %wide.load372 = load <2 x double>, <2 x double>* %50, align 8, !tbaa !70
  %51 = getelementptr inbounds double, double* %arrayidx81, i64 %index367
  %52 = bitcast double* %51 to <2 x double>*
  %wide.load373 = load <2 x double>, <2 x double>* %52, align 8, !tbaa !70
  %53 = getelementptr inbounds double, double* %51, i64 2
  %54 = bitcast double* %53 to <2 x double>*
  %wide.load374 = load <2 x double>, <2 x double>* %54, align 8, !tbaa !70
  %55 = fsub fast <2 x double> %wide.load371, %wide.load373
  %56 = fsub fast <2 x double> %wide.load372, %wide.load374
  %57 = getelementptr inbounds double, double* %11, i64 %index367
  %58 = bitcast double* %57 to <2 x double>*
  store <2 x double> %55, <2 x double>* %58, align 8, !tbaa !70
  %59 = getelementptr inbounds double, double* %57, i64 2
  %60 = bitcast double* %59 to <2 x double>*
  store <2 x double> %56, <2 x double>* %60, align 8, !tbaa !70
  %index.next368 = add i64 %index367, 4
  %61 = icmp eq i64 %index.next368, %n.vec366
  br i1 %61, label %middle.block360, label %vector.body362, !llvm.loop !331

middle.block360:                                  ; preds = %vector.body362
  br i1 %cmp.n370, label %subtract_nodiff.exit, label %for.body.i210.preheader423

for.body.i210.preheader423:                       ; preds = %for.body.i210.preheader, %middle.block360
  %indvars.iv.i206.ph = phi i64 [ 0, %for.body.i210.preheader ], [ %n.vec366, %middle.block360 ]
  br label %for.body.i210

for.body.i210:                                    ; preds = %for.body.i210.preheader423, %for.body.i210
  %indvars.iv.i206 = phi i64 [ %indvars.iv.next.i208, %for.body.i210 ], [ %indvars.iv.i206.ph, %for.body.i210.preheader423 ]
  %arrayidx.i207 = getelementptr inbounds double, double* %arrayidx78, i64 %indvars.iv.i206
  %62 = load double, double* %arrayidx.i207, align 8, !tbaa !70
  %arrayidx2.i = getelementptr inbounds double, double* %arrayidx81, i64 %indvars.iv.i206
  %63 = load double, double* %arrayidx2.i, align 8, !tbaa !70
  %sub.i = fsub fast double %62, %63
  %arrayidx4.i = getelementptr inbounds double, double* %11, i64 %indvars.iv.i206
  store double %sub.i, double* %arrayidx4.i, align 8, !tbaa !70
  %indvars.iv.next.i208 = add nuw nsw i64 %indvars.iv.i206, 1
  %exitcond.not.i209 = icmp eq i64 %indvars.iv.next.i208, %wide.trip.count.i205
  br i1 %exitcond.not.i209, label %subtract_nodiff.exit, label %for.body.i210, !llvm.loop !332

subtract_nodiff.exit:                             ; preds = %for.body.i210, %middle.block360, %for.body75
  tail call void @pushReal8Array(double* %15, i32 %d)
  %arrayidx85 = getelementptr inbounds double, double* %3, i64 %idxprom80
  %mul86 = mul nsw i32 %div, %46
  %add87 = add nsw i32 %mul86, %d
  %idxprom88 = sext i32 %add87 to i64
  %arrayidx89 = getelementptr inbounds double, double* %icf, i64 %idxprom88
  br i1 %cmp30269, label %for.body.i216.preheader, label %Qtimesx_nodiff.exit.thread

for.body.i216.preheader:                          ; preds = %subtract_nodiff.exit
  br i1 %min.iters.check348, label %for.body.i216.preheader422, label %vector.body347

vector.body347:                                   ; preds = %for.body.i216.preheader, %vector.body347
  %index352 = phi i64 [ %index.next353, %vector.body347 ], [ 0, %for.body.i216.preheader ]
  %64 = getelementptr inbounds double, double* %arrayidx85, i64 %index352
  %65 = bitcast double* %64 to <2 x double>*
  %wide.load356 = load <2 x double>, <2 x double>* %65, align 8, !tbaa !70
  %66 = getelementptr inbounds double, double* %64, i64 2
  %67 = bitcast double* %66 to <2 x double>*
  %wide.load357 = load <2 x double>, <2 x double>* %67, align 8, !tbaa !70
  %68 = getelementptr inbounds double, double* %11, i64 %index352
  %69 = bitcast double* %68 to <2 x double>*
  %wide.load358 = load <2 x double>, <2 x double>* %69, align 8, !tbaa !70
  %70 = getelementptr inbounds double, double* %68, i64 2
  %71 = bitcast double* %70 to <2 x double>*
  %wide.load359 = load <2 x double>, <2 x double>* %71, align 8, !tbaa !70
  %72 = fmul fast <2 x double> %wide.load358, %wide.load356
  %73 = fmul fast <2 x double> %wide.load359, %wide.load357
  %74 = getelementptr inbounds double, double* %15, i64 %index352
  %75 = bitcast double* %74 to <2 x double>*
  store <2 x double> %72, <2 x double>* %75, align 8, !tbaa !70
  %76 = getelementptr inbounds double, double* %74, i64 2
  %77 = bitcast double* %76 to <2 x double>*
  store <2 x double> %73, <2 x double>* %77, align 8, !tbaa !70
  %index.next353 = add i64 %index352, 4
  %78 = icmp eq i64 %index.next353, %n.vec351
  br i1 %78, label %middle.block345, label %vector.body347, !llvm.loop !333

middle.block345:                                  ; preds = %vector.body347
  br i1 %cmp.n355, label %for.body7.i.preheader, label %for.body.i216.preheader422

for.body.i216.preheader422:                       ; preds = %for.body.i216.preheader, %middle.block345
  %indvars.iv37.i.ph = phi i64 [ 0, %for.body.i216.preheader ], [ %n.vec351, %middle.block345 ]
  br label %for.body.i216

Qtimesx_nodiff.exit.thread:                       ; preds = %subtract_nodiff.exit
  %79 = load double, double* %15, align 8, !tbaa !70
  %mul.i228248 = fmul fast double %79, %79
  br label %sqnorm_nodiff.exit

for.body.i216:                                    ; preds = %for.body.i216.preheader422, %for.body.i216
  %indvars.iv37.i = phi i64 [ %indvars.iv.next38.i, %for.body.i216 ], [ %indvars.iv37.i.ph, %for.body.i216.preheader422 ]
  %arrayidx.i212 = getelementptr inbounds double, double* %arrayidx85, i64 %indvars.iv37.i
  %80 = load double, double* %arrayidx.i212, align 8, !tbaa !70
  %arrayidx2.i213 = getelementptr inbounds double, double* %11, i64 %indvars.iv37.i
  %81 = load double, double* %arrayidx2.i213, align 8, !tbaa !70
  %mul.i214 = fmul fast double %81, %80
  %arrayidx4.i215 = getelementptr inbounds double, double* %15, i64 %indvars.iv37.i
  store double %mul.i214, double* %arrayidx4.i215, align 8, !tbaa !70
  %indvars.iv.next38.i = add nuw nsw i64 %indvars.iv37.i, 1
  %exitcond40.not.i = icmp eq i64 %indvars.iv.next38.i, %wide.trip.count.i205
  br i1 %exitcond40.not.i, label %for.body7.i.preheader, label %for.body.i216, !llvm.loop !334

for.body7.i.preheader:                            ; preds = %for.body.i216, %middle.block345
  br label %for.body7.i

for.cond5.loopexit.loopexit.i:                    ; preds = %for.body10.i, %middle.block323
  %indvars.iv.next.i219.lcssa = phi i64 [ %ind.end335, %middle.block323 ], [ %indvars.iv.next.i219, %for.body10.i ]
  %82 = trunc i64 %indvars.iv.next.i219.lcssa to i32
  br label %for.cond5.loopexit.i

for.cond5.loopexit.i:                             ; preds = %for.body7.i, %for.cond5.loopexit.loopexit.i
  %Lparamsidx.1.lcssa.i = phi i32 [ %Lparamsidx.026.i, %for.body7.i ], [ %82, %for.cond5.loopexit.loopexit.i ]
  %indvars.iv.next30.i = add nuw nsw i64 %indvars.iv29.i, 1
  %exitcond36.not.i = icmp eq i64 %indvars.iv.next34.i, %wide.trip.count.i205
  br i1 %exitcond36.not.i, label %Qtimesx_nodiff.exit, label %for.body7.i, !llvm.loop !318

for.body7.i:                                      ; preds = %for.body7.i.preheader, %for.cond5.loopexit.i
  %indvars.iv33.i = phi i64 [ %indvars.iv.next34.i, %for.cond5.loopexit.i ], [ 0, %for.body7.i.preheader ]
  %indvars.iv29.i = phi i64 [ %indvars.iv.next30.i, %for.cond5.loopexit.i ], [ 1, %for.body7.i.preheader ]
  %Lparamsidx.026.i = phi i32 [ %Lparamsidx.1.lcssa.i, %for.cond5.loopexit.i ], [ 0, %for.body7.i.preheader ]
  %83 = xor i64 %indvars.iv33.i, -1
  %84 = add nsw i64 %83, %wide.trip.count.i205
  %indvars.iv.next34.i = add nuw nsw i64 %indvars.iv33.i, 1
  %cmp921.i = icmp ult i64 %indvars.iv.next34.i, %wide.trip.count.i205
  br i1 %cmp921.i, label %for.body10.lr.ph.i, label %for.cond5.loopexit.i

for.body10.lr.ph.i:                               ; preds = %for.body7.i
  %arrayidx16.i217 = getelementptr inbounds double, double* %11, i64 %indvars.iv33.i
  %85 = sext i32 %Lparamsidx.026.i to i64
  %86 = load double, double* %arrayidx16.i217, align 8, !tbaa !70
  %min.iters.check326 = icmp ult i64 %84, 4
  br i1 %min.iters.check326, label %for.body10.i.preheader, label %vector.ph327

vector.ph327:                                     ; preds = %for.body10.lr.ph.i
  %n.vec329 = and i64 %84, -4
  %ind.end333 = add i64 %indvars.iv29.i, %n.vec329
  %ind.end335 = add i64 %n.vec329, %85
  %broadcast.splatinsert = insertelement <2 x double> poison, double %86, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert343 = insertelement <2 x double> poison, double %86, i32 0
  %broadcast.splat344 = shufflevector <2 x double> %broadcast.splatinsert343, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body325

vector.body325:                                   ; preds = %vector.body325, %vector.ph327
  %index330 = phi i64 [ 0, %vector.ph327 ], [ %index.next331, %vector.body325 ]
  %offset.idx337 = add i64 %indvars.iv29.i, %index330
  %offset.idx338 = add i64 %index330, %85
  %87 = getelementptr inbounds double, double* %15, i64 %offset.idx337
  %88 = bitcast double* %87 to <2 x double>*
  %wide.load339 = load <2 x double>, <2 x double>* %88, align 8, !tbaa !70
  %89 = getelementptr inbounds double, double* %87, i64 2
  %90 = bitcast double* %89 to <2 x double>*
  %wide.load340 = load <2 x double>, <2 x double>* %90, align 8, !tbaa !70
  %91 = getelementptr inbounds double, double* %arrayidx89, i64 %offset.idx338
  %92 = bitcast double* %91 to <2 x double>*
  %wide.load341 = load <2 x double>, <2 x double>* %92, align 8, !tbaa !70
  %93 = getelementptr inbounds double, double* %91, i64 2
  %94 = bitcast double* %93 to <2 x double>*
  %wide.load342 = load <2 x double>, <2 x double>* %94, align 8, !tbaa !70
  %95 = fmul fast <2 x double> %broadcast.splat, %wide.load341
  %96 = fmul fast <2 x double> %broadcast.splat344, %wide.load342
  %97 = fadd fast <2 x double> %95, %wide.load339
  %98 = fadd fast <2 x double> %96, %wide.load340
  %99 = bitcast double* %87 to <2 x double>*
  store <2 x double> %97, <2 x double>* %99, align 8, !tbaa !70
  %100 = bitcast double* %89 to <2 x double>*
  store <2 x double> %98, <2 x double>* %100, align 8, !tbaa !70
  %index.next331 = add i64 %index330, 4
  %101 = icmp eq i64 %index.next331, %n.vec329
  br i1 %101, label %middle.block323, label %vector.body325, !llvm.loop !335

middle.block323:                                  ; preds = %vector.body325
  %cmp.n336 = icmp eq i64 %84, %n.vec329
  br i1 %cmp.n336, label %for.cond5.loopexit.loopexit.i, label %for.body10.i.preheader

for.body10.i.preheader:                           ; preds = %for.body10.lr.ph.i, %middle.block323
  %indvars.iv31.i.ph = phi i64 [ %indvars.iv29.i, %for.body10.lr.ph.i ], [ %ind.end333, %middle.block323 ]
  %indvars.iv.i218.ph = phi i64 [ %85, %for.body10.lr.ph.i ], [ %ind.end335, %middle.block323 ]
  br label %for.body10.i

for.body10.i:                                     ; preds = %for.body10.i.preheader, %for.body10.i
  %indvars.iv31.i = phi i64 [ %indvars.iv.next32.i, %for.body10.i ], [ %indvars.iv31.i.ph, %for.body10.i.preheader ]
  %indvars.iv.i218 = phi i64 [ %indvars.iv.next.i219, %for.body10.i ], [ %indvars.iv.i218.ph, %for.body10.i.preheader ]
  %arrayidx12.i = getelementptr inbounds double, double* %15, i64 %indvars.iv31.i
  %102 = load double, double* %arrayidx12.i, align 8, !tbaa !70
  %arrayidx14.i = getelementptr inbounds double, double* %arrayidx89, i64 %indvars.iv.i218
  %103 = load double, double* %arrayidx14.i, align 8, !tbaa !70
  %mul17.i = fmul fast double %86, %103
  %add18.i = fadd fast double %mul17.i, %102
  store double %add18.i, double* %arrayidx12.i, align 8, !tbaa !70
  %indvars.iv.next.i219 = add nsw i64 %indvars.iv.i218, 1
  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1
  %exitcond.not.i220 = icmp eq i64 %indvars.iv.next32.i, %wide.trip.count.i205
  br i1 %exitcond.not.i220, label %for.cond5.loopexit.loopexit.i, label %for.body10.i, !llvm.loop !336

Qtimesx_nodiff.exit:                              ; preds = %for.cond5.loopexit.i
  %104 = load double, double* %15, align 8, !tbaa !70
  %mul.i228 = fmul fast double %104, %104
  br i1 %cmp10.i229, label %for.body.i237.preheader, label %sqnorm_nodiff.exit

for.body.i237.preheader:                          ; preds = %Qtimesx_nodiff.exit
  br i1 %min.iters.check309, label %for.body.i237.preheader421, label %vector.ph310

vector.ph310:                                     ; preds = %for.body.i237.preheader
  %105 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul.i228, i32 0
  br label %vector.body308

vector.body308:                                   ; preds = %vector.body308, %vector.ph310
  %index313 = phi i64 [ 0, %vector.ph310 ], [ %index.next314, %vector.body308 ]
  %vec.phi317 = phi <2 x double> [ %105, %vector.ph310 ], [ %112, %vector.body308 ]
  %vec.phi318 = phi <2 x double> [ zeroinitializer, %vector.ph310 ], [ %113, %vector.body308 ]
  %offset.idx = or i64 %index313, 1
  %106 = getelementptr inbounds double, double* %15, i64 %offset.idx
  %107 = bitcast double* %106 to <2 x double>*
  %wide.load319 = load <2 x double>, <2 x double>* %107, align 8, !tbaa !70
  %108 = getelementptr inbounds double, double* %106, i64 2
  %109 = bitcast double* %108 to <2 x double>*
  %wide.load320 = load <2 x double>, <2 x double>* %109, align 8, !tbaa !70
  %110 = fmul fast <2 x double> %wide.load319, %wide.load319
  %111 = fmul fast <2 x double> %wide.load320, %wide.load320
  %112 = fadd fast <2 x double> %110, %vec.phi317
  %113 = fadd fast <2 x double> %111, %vec.phi318
  %index.next314 = add i64 %index313, 4
  %114 = icmp eq i64 %index.next314, %n.vec312
  br i1 %114, label %middle.block306, label %vector.body308, !llvm.loop !337

middle.block306:                                  ; preds = %vector.body308
  %bin.rdx321 = fadd fast <2 x double> %113, %112
  %115 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx321)
  br i1 %cmp.n316, label %sqnorm_nodiff.exit, label %for.body.i237.preheader421

for.body.i237.preheader421:                       ; preds = %for.body.i237.preheader, %middle.block306
  %indvars.iv.i232.ph = phi i64 [ 1, %for.body.i237.preheader ], [ %ind.end, %middle.block306 ]
  %res.012.i.ph = phi double [ %mul.i228, %for.body.i237.preheader ], [ %115, %middle.block306 ]
  br label %for.body.i237

for.body.i237:                                    ; preds = %for.body.i237.preheader421, %for.body.i237
  %indvars.iv.i232 = phi i64 [ %indvars.iv.next.i235, %for.body.i237 ], [ %indvars.iv.i232.ph, %for.body.i237.preheader421 ]
  %res.012.i = phi double [ %add.i234, %for.body.i237 ], [ %res.012.i.ph, %for.body.i237.preheader421 ]
  %arrayidx2.i233 = getelementptr inbounds double, double* %15, i64 %indvars.iv.i232
  %116 = load double, double* %arrayidx2.i233, align 8, !tbaa !70
  %mul5.i = fmul fast double %116, %116
  %add.i234 = fadd fast double %mul5.i, %res.012.i
  %indvars.iv.next.i235 = add nuw nsw i64 %indvars.iv.i232, 1
  %exitcond.not.i236 = icmp eq i64 %indvars.iv.next.i235, %wide.trip.count.i205
  br i1 %exitcond.not.i236, label %sqnorm_nodiff.exit, label %for.body.i237, !llvm.loop !338

sqnorm_nodiff.exit:                               ; preds = %for.body.i237, %middle.block306, %Qtimesx_nodiff.exit.thread, %Qtimesx_nodiff.exit
  %res.0.lcssa.i = phi double [ %mul.i228, %Qtimesx_nodiff.exit ], [ %mul.i228248, %Qtimesx_nodiff.exit.thread ], [ %115, %middle.block306 ], [ %add.i234, %for.body.i237 ]
  %arrayidx95 = getelementptr inbounds double, double* %43, i64 %indvars.iv284
  %117 = load double, double* %arrayidx95, align 8, !tbaa !70
  tail call void @pushReal8(double %117)
  %arrayidx97 = getelementptr inbounds double, double* %alphas, i64 %indvars.iv284
  %118 = load double, double* %arrayidx97, align 8, !tbaa !70
  %arrayidx99 = getelementptr inbounds double, double* %7, i64 %indvars.iv284
  %119 = load double, double* %arrayidx99, align 8, !tbaa !70
  %mul101.neg = fmul fast double %res.0.lcssa.i, -5.000000e-01
  %add100 = fadd fast double %118, %mul101.neg
  %sub102 = fadd fast double %add100, %119
  store double %sub102, double* %arrayidx95, align 8, !tbaa !70
  %indvars.iv.next285 = add nuw nsw i64 %indvars.iv284, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next285, %wide.trip.count
  br i1 %exitcond.not, label %for.inc108, label %for.body75, !llvm.loop !339

for.inc108:                                       ; preds = %sqnorm_nodiff.exit, %for.cond73.preheader
  %indvars.iv.next287 = add nuw nsw i64 %indvars.iv286, 1
  %exitcond290.not = icmp eq i64 %indvars.iv.next287, %wide.trip.count289
  br i1 %exitcond290.not, label %for.end110, label %for.cond73.preheader, !llvm.loop !340

for.end110:                                       ; preds = %for.inc108, %preprocess_qs_nodiff.exit
  %120 = load double, double* %errb, align 8, !tbaa !70
  %conv111 = sitofp i32 %n to double
  %121 = fneg fast double %conv111
  %fneg = fmul fast double %120, %121
  store double 0.000000e+00, double* %errb, align 8, !tbaa !70
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i64 0, i32 0
  %agg.tmp.sroa.0.0.copyload = load double, double* %agg.tmp.sroa.0.0..sroa_idx, align 8, !tbaa.struct !147
  %agg.tmp.sroa.2.0..sroa_idx1 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i64 0, i32 1
  %agg.tmp.sroa.2.0.copyload = load i32, i32* %agg.tmp.sroa.2.0..sroa_idx1, align 8, !tbaa.struct !148
  tail call void @log_wishart_prior_b(i32 %d, i32 %k, double %agg.tmp.sroa.0.0.copyload, i32 %agg.tmp.sroa.2.0.copyload, double* undef, double* %4, double* %3, double* %0, double* %icf, double* %icfb, double %120)
  br i1 %cmp16271, label %for.body119.preheader, label %for.end124

for.body119.preheader:                            ; preds = %for.end110
  %122 = zext i32 %k to i64
  %123 = shl nuw nsw i64 %122, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %alphasb281, i8 0, i64 %123, i1 false)
  br label %for.end124

for.end124:                                       ; preds = %for.body119.preheader, %for.end110
  tail call void @log_sum_exp_b(i32 %k, double* %alphas, double* %alphasb, double %fneg)
  br i1 %cmp273, label %for.body128.preheader, label %for.cond135.preheader

for.body128.preheader:                            ; preds = %for.end124
  %124 = zext i32 %mul4 to i64
  %125 = shl nuw nsw i64 %124, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %meansb278, i8 0, i64 %125, i1 false)
  br label %for.cond135.preheader

for.cond135.preheader:                            ; preds = %for.body128.preheader, %for.end124
  br i1 %cmp71262, label %for.body137.lr.ph, label %for.end201

for.body137.lr.ph:                                ; preds = %for.cond135.preheader
  %cmp17.i = icmp sgt i32 %d, 1
  %126 = zext i32 %d to i64
  %127 = sext i32 %div to i64
  %128 = add nsw i64 %126, -1
  %min.iters.check395 = icmp ult i64 %128, 4
  %n.vec398 = and i64 %128, -4
  %ind.end402 = sub nsw i64 %126, %n.vec398
  %cmp.n403 = icmp eq i64 %128, %n.vec398
  %min.iters.check378 = icmp eq i32 %d, 1
  %n.vec381 = and i64 %126, 4294967294
  %ind.end385 = and i64 %126, 1
  %129 = getelementptr inbounds i8, i8* %call28, i64 -8
  %130 = bitcast i8* %129 to double*
  %cmp.n386 = icmp eq i64 %n.vec381, %126
  br label %for.body137

for.cond135.loopexit:                             ; preds = %subtract_b.exit, %for.body137
  %cmp136 = icmp sgt i32 %ix.1255.in, 1
  br i1 %cmp136, label %for.body137, label %for.end201, !llvm.loop !341

for.body137:                                      ; preds = %for.body137.lr.ph, %for.cond135.loopexit
  %ix.1255.in = phi i32 [ %n, %for.body137.lr.ph ], [ %ix.1255, %for.cond135.loopexit ]
  %ix.1255 = add nsw i32 %ix.1255.in, -1
  tail call void @log_sum_exp_b(i32 %k, double* %43, double* %16, double %120)
  br i1 %cmp16271, label %for.body143, label %for.cond135.loopexit

for.body143:                                      ; preds = %for.body137, %subtract_b.exit
  %indvars.iv = phi i64 [ %indvars.iv.next, %subtract_b.exit ], [ %conv12, %for.body137 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1
  %arrayidx145 = getelementptr inbounds double, double* %43, i64 %indvars.iv.next
  tail call void @popReal8(double* %arrayidx145)
  %arrayidx147 = getelementptr inbounds double, double* %alphasb, i64 %indvars.iv.next
  %131 = load double, double* %arrayidx147, align 8, !tbaa !70
  %arrayidx149 = getelementptr inbounds double, double* %16, i64 %indvars.iv.next
  %132 = load double, double* %arrayidx149, align 8, !tbaa !70
  %add150 = fadd fast double %132, %131
  store double %add150, double* %arrayidx147, align 8, !tbaa !70
  %arrayidx154 = getelementptr inbounds double, double* %4, i64 %indvars.iv.next
  %133 = load double, double* %arrayidx154, align 8, !tbaa !70
  %add157 = fadd fast double %133, %132
  store double %add157, double* %arrayidx154, align 8, !tbaa !70
  store double 0.000000e+00, double* %arrayidx149, align 8, !tbaa !70
  br i1 %cmp17.i, label %for.body.i247.preheader, label %sqnorm_b.exit

for.body.i247.preheader:                          ; preds = %for.body143
  br i1 %min.iters.check395, label %for.body.i247.preheader420, label %vector.ph396

vector.ph396:                                     ; preds = %for.body.i247.preheader
  %broadcast.splatinsert413 = insertelement <2 x double> poison, double %132, i32 0
  %broadcast.splat414 = shufflevector <2 x double> %broadcast.splatinsert413, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert415 = insertelement <2 x double> poison, double %132, i32 0
  %broadcast.splat416 = shufflevector <2 x double> %broadcast.splatinsert415, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body394

vector.body394:                                   ; preds = %vector.body394, %vector.ph396
  %index399 = phi i64 [ 0, %vector.ph396 ], [ %index.next400, %vector.body394 ]
  %134 = xor i64 %index399, -1
  %135 = add i64 %134, %126
  %136 = getelementptr inbounds double, double* %12, i64 %135
  %137 = getelementptr inbounds double, double* %136, i64 -1
  %138 = bitcast double* %137 to <2 x double>*
  %wide.load405 = load <2 x double>, <2 x double>* %138, align 8, !tbaa !70
  %reverse406 = shufflevector <2 x double> %wide.load405, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %139 = getelementptr inbounds double, double* %136, i64 -2
  %140 = getelementptr inbounds double, double* %139, i64 -1
  %141 = bitcast double* %140 to <2 x double>*
  %wide.load407 = load <2 x double>, <2 x double>* %141, align 8, !tbaa !70
  %reverse408 = shufflevector <2 x double> %wide.load407, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %142 = getelementptr inbounds double, double* %15, i64 %135
  %143 = getelementptr inbounds double, double* %142, i64 -1
  %144 = bitcast double* %143 to <2 x double>*
  %wide.load409 = load <2 x double>, <2 x double>* %144, align 8, !tbaa !70
  %reverse410 = shufflevector <2 x double> %wide.load409, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %145 = getelementptr inbounds double, double* %142, i64 -2
  %146 = getelementptr inbounds double, double* %145, i64 -1
  %147 = bitcast double* %146 to <2 x double>*
  %wide.load411 = load <2 x double>, <2 x double>* %147, align 8, !tbaa !70
  %reverse412 = shufflevector <2 x double> %wide.load411, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %148 = fmul fast <2 x double> %reverse410, %broadcast.splat414
  %149 = fmul fast <2 x double> %reverse412, %broadcast.splat416
  %150 = fsub fast <2 x double> %reverse406, %148
  %151 = fsub fast <2 x double> %reverse408, %149
  %reverse417 = shufflevector <2 x double> %150, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %152 = bitcast double* %137 to <2 x double>*
  store <2 x double> %reverse417, <2 x double>* %152, align 8, !tbaa !70
  %reverse418 = shufflevector <2 x double> %151, <2 x double> poison, <2 x i32> <i32 1, i32 0>
  %153 = bitcast double* %140 to <2 x double>*
  store <2 x double> %reverse418, <2 x double>* %153, align 8, !tbaa !70
  %index.next400 = add i64 %index399, 4
  %154 = icmp eq i64 %index.next400, %n.vec398
  br i1 %154, label %middle.block392, label %vector.body394, !llvm.loop !342

middle.block392:                                  ; preds = %vector.body394
  br i1 %cmp.n403, label %sqnorm_b.exit, label %for.body.i247.preheader420

for.body.i247.preheader420:                       ; preds = %for.body.i247.preheader, %middle.block392
  %indvars.iv.i241.ph = phi i64 [ %126, %for.body.i247.preheader ], [ %ind.end402, %middle.block392 ]
  br label %for.body.i247

for.body.i247:                                    ; preds = %for.body.i247.preheader420, %for.body.i247
  %indvars.iv.i241 = phi i64 [ %indvars.iv.next.i242, %for.body.i247 ], [ %indvars.iv.i241.ph, %for.body.i247.preheader420 ]
  %indvars.iv.next.i242 = add nsw i64 %indvars.iv.i241, -1
  %arrayidx2.i243 = getelementptr inbounds double, double* %12, i64 %indvars.iv.next.i242
  %155 = load double, double* %arrayidx2.i243, align 8, !tbaa !70
  %arrayidx4.i244 = getelementptr inbounds double, double* %15, i64 %indvars.iv.next.i242
  %156 = load double, double* %arrayidx4.i244, align 8, !tbaa !70
  %157 = fmul fast double %156, %132
  %add.i245 = fsub fast double %155, %157
  store double %add.i245, double* %arrayidx2.i243, align 8, !tbaa !70
  %cmp.i246 = icmp sgt i64 %indvars.iv.i241, 2
  br i1 %cmp.i246, label %for.body.i247, label %sqnorm_b.exit, !llvm.loop !343

sqnorm_b.exit:                                    ; preds = %for.body.i247, %middle.block392, %for.body143
  %158 = load double, double* %12, align 8, !tbaa !70
  %159 = load double, double* %15, align 8, !tbaa !70
  %160 = fmul fast double %132, %159
  %add13.i = fsub fast double %158, %160
  store double %add13.i, double* %12, align 8, !tbaa !70
  tail call void @popReal8Array(double* nonnull %15, i32 %d)
  %161 = mul nsw i64 %indvars.iv.next, %conv26
  %arrayidx170 = getelementptr inbounds double, double* %3, i64 %161
  %arrayidx173 = getelementptr inbounds double, double* %0, i64 %161
  %162 = mul nsw i64 %indvars.iv.next, %127
  %163 = add nsw i64 %162, %conv26
  %arrayidx177 = getelementptr inbounds double, double* %icf, i64 %163
  %arrayidx181 = getelementptr inbounds double, double* %icfb, i64 %163
  tail call void @Qtimesx_b(i32 %d, double* %arrayidx170, double* %arrayidx173, double* %arrayidx177, double* %arrayidx181, double* %11, double* %8, double* undef, double* nonnull %12)
  tail call void @popReal8Array(double* %11, i32 %d)
  %arrayidx194 = getelementptr inbounds double, double* %meansb, i64 %161
  br i1 %cmp30269, label %for.body.i227.preheader, label %subtract_b.exit

for.body.i227.preheader:                          ; preds = %sqnorm_b.exit
  br i1 %min.iters.check378, label %for.body.i227.preheader419, label %vector.ph379

vector.ph379:                                     ; preds = %for.body.i227.preheader
  %164 = getelementptr inbounds double, double* %arrayidx194, i64 -1
  br label %vector.body377

vector.body377:                                   ; preds = %vector.body377, %vector.ph379
  %index382 = phi i64 [ 0, %vector.ph379 ], [ %index.next383, %vector.body377 ]
  %165 = xor i64 %index382, -1
  %166 = add i64 %165, %126
  %167 = getelementptr inbounds double, double* %164, i64 %166
  %168 = bitcast double* %167 to <2 x double>*
  %wide.load388 = load <2 x double>, <2 x double>* %168, align 8, !tbaa !70
  %169 = getelementptr inbounds double, double* %130, i64 %166
  %170 = bitcast double* %169 to <2 x double>*
  %wide.load389 = load <2 x double>, <2 x double>* %170, align 8, !tbaa !70
  %171 = fsub fast <2 x double> %wide.load388, %wide.load389
  %172 = bitcast double* %167 to <2 x double>*
  store <2 x double> %171, <2 x double>* %172, align 8, !tbaa !70
  %173 = bitcast double* %169 to <2 x double>*
  store <2 x double> zeroinitializer, <2 x double>* %173, align 8, !tbaa !70
  %index.next383 = add i64 %index382, 2
  %174 = icmp eq i64 %index.next383, %n.vec381
  br i1 %174, label %middle.block375, label %vector.body377, !llvm.loop !344

middle.block375:                                  ; preds = %vector.body377
  br i1 %cmp.n386, label %subtract_b.exit, label %for.body.i227.preheader419

for.body.i227.preheader419:                       ; preds = %for.body.i227.preheader, %middle.block375
  %indvars.iv.i223.ph = phi i64 [ %126, %for.body.i227.preheader ], [ %ind.end385, %middle.block375 ]
  br label %for.body.i227

for.body.i227:                                    ; preds = %for.body.i227.preheader419, %for.body.i227
  %indvars.iv.i223 = phi i64 [ %indvars.iv.next.i224, %for.body.i227 ], [ %indvars.iv.i223.ph, %for.body.i227.preheader419 ]
  %indvars.iv.next.i224 = add nsw i64 %indvars.iv.i223, -1
  %arrayidx.i225 = getelementptr inbounds double, double* %arrayidx194, i64 %indvars.iv.next.i224
  %175 = load double, double* %arrayidx.i225, align 8, !tbaa !70
  %arrayidx2.i226 = getelementptr inbounds double, double* %8, i64 %indvars.iv.next.i224
  %176 = load double, double* %arrayidx2.i226, align 8, !tbaa !70
  %sub3.i = fsub fast double %175, %176
  store double %sub3.i, double* %arrayidx.i225, align 8, !tbaa !70
  store double 0.000000e+00, double* %arrayidx2.i226, align 8, !tbaa !70
  %cmp.i = icmp sgt i64 %indvars.iv.i223, 1
  br i1 %cmp.i, label %for.body.i227, label %subtract_b.exit, !llvm.loop !345

subtract_b.exit:                                  ; preds = %for.body.i227, %middle.block375, %sqnorm_b.exit
  %cmp142 = icmp sgt i64 %indvars.iv, 1
  br i1 %cmp142, label %for.body143, label %for.cond135.loopexit, !llvm.loop !346

for.end201:                                       ; preds = %for.cond135.loopexit, %for.cond135.preheader
  br i1 %cmp16271, label %for.cond1.preheader.lr.ph.i, label %preprocess_qs_b.exit

for.cond1.preheader.lr.ph.i:                      ; preds = %for.end201
  %177 = sext i32 %div to i64
  %wide.trip.count59.i = zext i32 %k to i64
  %wide.trip.count.i198 = zext i32 %d to i64
  br label %for.cond1.preheader.i

for.cond1.preheader.i:                            ; preds = %for.inc6.i, %for.cond1.preheader.lr.ph.i
  %indvars.iv56.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next57.i, %for.inc6.i ]
  br i1 %cmp30269, label %for.body3.lr.ph.i199, label %for.inc6.i

for.body3.lr.ph.i199:                             ; preds = %for.cond1.preheader.i
  %178 = mul nsw i64 %indvars.iv56.i, %177
  br label %for.body3.i202

for.cond13.preheader.lr.ph.i:                     ; preds = %for.inc6.i
  %179 = bitcast double* %q16.i to i8*
  br label %for.cond13.preheader.i

for.body3.i202:                                   ; preds = %for.body3.i202, %for.body3.lr.ph.i199
  %indvars.iv53.i = phi i64 [ 0, %for.body3.lr.ph.i199 ], [ %indvars.iv.next54.i, %for.body3.i202 ]
  %180 = add nsw i64 %indvars.iv53.i, %178
  %arrayidx.i200 = getelementptr inbounds double, double* %icf, i64 %180
  %181 = load double, double* %arrayidx.i200, align 8, !tbaa !70
  tail call void @pushReal8(double %181)
  %indvars.iv.next54.i = add nuw nsw i64 %indvars.iv53.i, 1
  %exitcond.not.i201 = icmp eq i64 %indvars.iv.next54.i, %wide.trip.count.i198
  br i1 %exitcond.not.i201, label %for.inc6.i, label %for.body3.i202, !llvm.loop !298

for.inc6.i:                                       ; preds = %for.body3.i202, %for.cond1.preheader.i
  %indvars.iv.next57.i = add nuw nsw i64 %indvars.iv56.i, 1
  %exitcond60.not.i = icmp eq i64 %indvars.iv.next57.i, %wide.trip.count59.i
  br i1 %exitcond60.not.i, label %for.cond13.preheader.lr.ph.i, label %for.cond1.preheader.i, !llvm.loop !299

for.cond13.preheader.i:                           ; preds = %for.end39.i, %for.cond13.preheader.lr.ph.i
  %indvars.iv49.i = phi i64 [ %wide.trip.count59.i, %for.cond13.preheader.lr.ph.i ], [ %indvars.iv.next50.i, %for.end39.i ]
  %indvars.iv.next50.i = add nsw i64 %indvars.iv49.i, -1
  br i1 %cmp30269, label %for.body15.lr.ph.i, label %for.end39.i

for.body15.lr.ph.i:                               ; preds = %for.cond13.preheader.i
  %182 = mul nsw i64 %indvars.iv.next50.i, %conv26
  %arrayidx27.i = getelementptr inbounds double, double* %4, i64 %indvars.iv.next50.i
  %183 = mul nsw i64 %indvars.iv.next50.i, %177
  br label %for.body15.i

for.body15.i:                                     ; preds = %for.body15.i, %for.body15.lr.ph.i
  %indvars.iv.i203 = phi i64 [ %conv26, %for.body15.lr.ph.i ], [ %indvars.iv.next.i204, %for.body15.i ]
  %indvars.iv.next.i204 = add nsw i64 %indvars.iv.i203, -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #38
  call void @popReal8(double* nonnull %q16.i)
  %184 = load double, double* %q16.i, align 8, !tbaa !70
  %185 = call fast double @llvm.exp.f64(double %184)
  %186 = add nsw i64 %indvars.iv.next.i204, %182
  %arrayidx20.i = getelementptr inbounds double, double* %0, i64 %186
  %187 = load double, double* %arrayidx20.i, align 8, !tbaa !70
  %mul21.i = fmul fast double %185, %187
  store double 0.000000e+00, double* %arrayidx20.i, align 8, !tbaa !70
  %188 = load double, double* %arrayidx27.i, align 8, !tbaa !70
  %add28.i = fadd fast double %188, %mul21.i
  %189 = add nsw i64 %indvars.iv.next.i204, %183
  %arrayidx32.i = getelementptr inbounds double, double* %icfb, i64 %189
  %190 = load double, double* %arrayidx32.i, align 8, !tbaa !70
  %add33.i = fadd fast double %add28.i, %190
  store double %add33.i, double* %arrayidx32.i, align 8, !tbaa !70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #38
  %cmp14.i = icmp sgt i64 %indvars.iv.i203, 1
  br i1 %cmp14.i, label %for.body15.i, label %for.end39.i, !llvm.loop !300

for.end39.i:                                      ; preds = %for.body15.i, %for.cond13.preheader.i
  %arrayidx41.i = getelementptr inbounds double, double* %4, i64 %indvars.iv.next50.i
  store double 0.000000e+00, double* %arrayidx41.i, align 8, !tbaa !70
  %cmp10.i = icmp sgt i64 %indvars.iv49.i, 1
  br i1 %cmp10.i, label %for.cond13.preheader.i, label %preprocess_qs_b.exit, !llvm.loop !301

preprocess_qs_b.exit:                             ; preds = %for.end39.i, %for.end201
  call void @free(i8* %call67302) #38
  call void @free(i8* %call56) #38
  call void @free(i8* %call53) #38
  call void @free(i8* %call42) #38
  call void @free(i8* %call39) #38
  call void @free(i8* %call28) #38
  call void @free(i8* %call25) #38
  call void @free(i8* %call14) #38
  call void @free(i8* %call11) #38
  call void @free(i8* %call) #38
  ret void
}

declare dso_local void @pushReal8Array(double*, i32) local_unnamed_addr #3

declare dso_local void @popReal8Array(double*, i32) local_unnamed_addr #3

; Function Attrs: uwtable
define dso_local void @_ZN5adept21set_array_print_styleENS_15ArrayPrintStyleE(i32 %ps) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  switch i32 %ps, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb11
    i32 3, label %sw.bb23
    i32 2, label %sw.bb35
  ]

sw.bb:                                            ; preds = %entry
  %0 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i64 %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0), i64 1)
  %1 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i4 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i64 %1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %2 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i6 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i64 %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %3 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i8 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i64 %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %4 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i10 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i64 %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %5 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i12 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i64 %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0), i64 1)
  %6 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i14 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i64 %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1)
  %7 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i16 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i64 %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %8 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i18 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i64 %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %9 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i20 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i64 %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i64 0, i64 0), i64 12)
  %10 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i22 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i64 %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0), i64 7)
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  %11 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i24 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i64 %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0), i64 2)
  %12 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i26 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i64 %12, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %13 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i28 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i64 %13, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %14 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i30 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i64 %14, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %15 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i32 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i64 %15, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %16 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i34 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i64 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0), i64 2)
  %17 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i36 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i64 %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1)
  %18 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i38 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i64 %18, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %19 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i40 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i64 %19, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %20 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i42 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i64 %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0), i64 5)
  %21 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i44 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i64 %21, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  br label %sw.epilog

sw.bb23:                                          ; preds = %entry
  %22 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i46 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i64 %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0), i64 1)
  %23 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i48 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i64 %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0), i64 1)
  %24 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i50 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i64 %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0), i64 1)
  %25 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i52 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i64 %25, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %26 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i54 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i64 %26, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0), i64 0)
  %27 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i56 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i64 %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0), i64 1)
  %28 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i58 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i64 %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0), i64 2)
  %29 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i60 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i64 %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0), i64 1)
  %30 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i62 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i64 %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0), i64 1)
  %31 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i64 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i64 %31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0), i64 1)
  %32 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i66 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i64 %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0), i64 1)
  br label %sw.epilog

sw.bb35:                                          ; preds = %entry
  %33 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i68 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i64 %33, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0), i64 2)
  %34 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i70 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i64 %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), i64 1)
  %35 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i72 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i64 %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), i64 1)
  %36 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i74 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i64 %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), i64 1)
  %37 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i76 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i64 %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), i64 1)
  %38 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i78 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i64 %38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0), i64 2)
  %39 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i80 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i64 %39, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0), i64 2)
  %40 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i82 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i64 %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0), i64 2)
  %41 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i84 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i64 %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), i64 1)
  %42 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i86 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i64 %42, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i64 0, i64 0), i64 12)
  %43 = load i64, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  %call3.i.i88 = tail call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i64 %43, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0), i64 7)
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %44 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #38
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %46 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %45, %union.anon** %46, align 8, !tbaa !14
  %47 = bitcast %union.anon* %45 to i8*
  %48 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #38
  store i64 32, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i89 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %sw.default
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i89, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %49 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %49, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(32) %call5.i.i.i5.i89, i8* nonnull align 1 dereferenceable(32) getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i64 0, i64 0), i64 32, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %49, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %50 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %50, i64 %49
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #38
  %51 = bitcast i8* %exception to %"class.adept::invalid_operation"*
  invoke void @_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %51, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont49 unwind label %lpad48

invoke.cont49:                                    ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_operationE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad48

ehcleanup.thread:                                 ; preds = %sw.default
  %52 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #38
  br label %cleanup.action

lpad48:                                           ; preds = %invoke.cont49, %call5.i.i.i5.i.noexc
  %cleanup.isactive.0 = phi i1 [ false, %invoke.cont49 ], [ true, %call5.i.i.i5.i.noexc ]
  %53 = landingpad { i8*, i32 }
          cleanup
  %54 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %54, %47
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i

if.then.i.i:                                      ; preds = %lpad48
  call void @_ZdlPv(i8* %54) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #38
  br i1 %cleanup.isactive.0, label %cleanup.action, label %eh.resume

ehcleanup:                                        ; preds = %lpad48
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #38
  br i1 %cleanup.isactive.0, label %cleanup.action, label %eh.resume

cleanup.action:                                   ; preds = %if.then.i.i, %ehcleanup.thread, %ehcleanup
  %.pn93 = phi { i8*, i32 } [ %52, %ehcleanup.thread ], [ %53, %ehcleanup ], [ %53, %if.then.i.i ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

sw.epilog:                                        ; preds = %sw.bb35, %sw.bb23, %sw.bb11, %sw.bb
  %.sink94 = phi i8 [ 1, %sw.bb35 ], [ 1, %sw.bb23 ], [ 0, %sw.bb11 ], [ 0, %sw.bb ]
  %.sink = phi i8 [ 1, %sw.bb35 ], [ 0, %sw.bb23 ], [ 0, %sw.bb11 ], [ 1, %sw.bb ]
  store i8 %.sink94, i8* @_ZN5adept8internal18array_print_indentE, align 1, !tbaa !347
  store i8 %.sink, i8* @_ZN5adept8internal22array_print_empty_rankE, align 1, !tbaa !347
  store i32 %ps, i32* @_ZN5adept8internal17array_print_styleE, align 4, !tbaa !349
  ret void

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup, %cleanup.action
  %.pn92 = phi { i8*, i32 } [ %53, %ehcleanup ], [ %.pn93, %cleanup.action ], [ %53, %if.then.i.i ]
  resume { i8*, i32 } %.pn92

unreachable:                                      ; preds = %invoke.cont49
  unreachable
}

declare dso_local i8* @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 27, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i5 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %lpad

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i5, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(27) %call5.i.i.i5.i5, i8* nonnull align 1 dereferenceable(27) getelementptr inbounds ([28 x i8], [28 x i8]* @.str.115, i64 0, i64 0), i64 27, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %6 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %6, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %7 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %message_.i.i = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %9 = bitcast %"class.std::__cxx11::basic_string"* %message_.i.i to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1, i32 1
  store i64 0, i64* %_M_string_length.i.i.i.i.i, align 8, !tbaa !19
  %.cast.i.i.i = bitcast %union.anon* %8 to i8*
  store i8 0, i8* %.cast.i.i.i, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept15array_exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_.i.i, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont4 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %10 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !74
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %11, %.cast.i.i.i
  br i1 %cmp.i.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %11) #38
  br label %_ZN5adept9exceptionD2Ev.exit.i

_ZN5adept9exceptionD2Ev.exit.i:                   ; preds = %if.then.i.i.i.i, %lpad.i
  %12 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %12) #38
  %13 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i8 = icmp eq i8* %13, %3
  br i1 %cmp.i.i.i8, label %ehcleanup, label %if.then.i.i9

invoke.cont4:                                     ; preds = %call5.i.i.i5.i.noexc
  %14 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %14, %3
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %invoke.cont4
  call void @_ZdlPv(i8* %14) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %invoke.cont4, %if.then.i.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept17invalid_operationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_.i.i, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  ret void

lpad:                                             ; preds = %entry
  %15 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

if.then.i.i9:                                     ; preds = %_ZN5adept9exceptionD2Ev.exit.i
  call void @_ZdlPv(i8* %13) #38
  br label %ehcleanup

ehcleanup:                                        ; preds = %if.then.i.i9, %_ZN5adept9exceptionD2Ev.exit.i, %lpad
  %.pn = phi { i8*, i32 } [ %15, %lpad ], [ %10, %_ZN5adept9exceptionD2Ev.exit.i ], [ %10, %if.then.i.i9 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

lpad7:                                            ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %16 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !74
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i.i = icmp eq i8* %17, %.cast.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lpad7
  call void @_ZdlPv(i8* %17) #38
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %lpad7, %if.then.i.i.i
  %18 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %18) #38
  br label %eh.resume

eh.resume:                                        ; preds = %_ZN5adept9exceptionD2Ev.exit, %ehcleanup
  %.pn2 = phi { i8*, i32 } [ %16, %_ZN5adept9exceptionD2Ev.exit ], [ %.pn, %ehcleanup ]
  resume { i8*, i32 } %.pn2
}

declare dso_local void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

declare dso_local void @__cxa_free_exception(i8*) local_unnamed_addr

; Function Attrs: nounwind uwtable
define dso_local void @_ZN5adept5StackD2Ev(%"class.adept::Stack"* nonnull readonly dereferenceable(149) %this) unnamed_addr #5 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %is_thread_unsafe_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 11
  %0 = load i8, i8* %is_thread_unsafe_, align 1, !tbaa !351, !range !356
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8, !tbaa !61
  %cmp = icmp eq %"class.adept::Stack"* %1, %this
  br i1 %cmp, label %if.then2, label %if.end6

if.then2:                                         ; preds = %if.then
  store %"class.adept::Stack"* null, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8, !tbaa !61
  br label %if.end6

if.else:                                          ; preds = %entry
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %cmp3 = icmp eq %"class.adept::Stack"* %2, %this
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.else
  store %"class.adept::Stack"* null, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then4, %if.then, %if.then2
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %3 = load double*, double** %gradient_, align 8, !tbaa !357
  %tobool7.not = icmp eq double* %3, null
  br i1 %tobool7.not, label %if.end10, label %delete.notnull

delete.notnull:                                   ; preds = %if.end6
  %4 = bitcast double* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #43
  br label %if.end10

if.end10:                                         ; preds = %delete.notnull, %if.end6
  %5 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0
  %6 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i64 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !358
  %cmp.not7.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %7, %6
  br i1 %cmp.not7.i.i, label %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit, label %while.body.i.i

while.body.i.i:                                   ; preds = %if.end10, %while.body.i.i
  %__cur.08.i.i = phi %"struct.std::__detail::_List_node_base"* [ %8, %while.body.i.i ], [ %7, %if.end10 ]
  %_M_next4.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %__cur.08.i.i, i64 0, i32 0
  %8 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next4.i.i, align 8, !tbaa !358
  %9 = bitcast %"struct.std::__detail::_List_node_base"* %__cur.08.i.i to i8*
  tail call void @_ZdlPv(i8* %9) #38
  %cmp.not.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %8, %6
  br i1 %cmp.not.i.i, label %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit, label %while.body.i.i, !llvm.loop !360

_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit: ; preds = %while.body.i.i, %if.end10
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %tobool.not.i.i.i = icmp eq i32* %10, null
  br i1 %tobool.not.i.i.i, label %_ZNSt6vectorIiSaIiEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit
  %11 = bitcast i32* %10 to i8*
  tail call void @_ZdlPv(i8* nonnull %11) #38
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit

_ZNSt6vectorIiSaIiEED2Ev.exit:                    ; preds = %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit, %if.then.i.i.i
  %_M_start.i.i1 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %_M_start.i.i1, align 8, !tbaa !361
  %tobool.not.i.i.i2 = icmp eq i32* %12, null
  br i1 %tobool.not.i.i.i2, label %_ZNSt6vectorIiSaIiEED2Ev.exit4, label %if.then.i.i.i3

if.then.i.i.i3:                                   ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit
  %13 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #38
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit4

_ZNSt6vectorIiSaIiEED2Ev.exit4:                   ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit, %if.then.i.i.i3
  %statement_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %14 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.i, align 8, !tbaa !363
  %tobool.not.i = icmp eq %"struct.adept::internal::Statement"* %14, null
  br i1 %tobool.not.i, label %if.end.i, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit4
  %15 = bitcast %"struct.adept::internal::Statement"* %14 to i8*
  tail call void @_ZdaPv(i8* %15) #43
  br label %if.end.i

if.end.i:                                         ; preds = %delete.notnull.i, %_ZNSt6vectorIiSaIiEED2Ev.exit4
  %multiplier_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %16 = load double*, double** %multiplier_.i, align 8, !tbaa !365
  %tobool3.not.i = icmp eq double* %16, null
  br i1 %tobool3.not.i, label %if.end9.i, label %delete.notnull7.i

delete.notnull7.i:                                ; preds = %if.end.i
  %17 = bitcast double* %16 to i8*
  tail call void @_ZdaPv(i8* %17) #43
  br label %if.end9.i

if.end9.i:                                        ; preds = %delete.notnull7.i, %if.end.i
  %index_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %18 = load i32*, i32** %index_.i, align 8, !tbaa !366
  %tobool10.not.i = icmp eq i32* %18, null
  br i1 %tobool10.not.i, label %_ZN5adept8internal16StackStorageOrigD2Ev.exit, label %delete.notnull14.i

delete.notnull14.i:                               ; preds = %if.end9.i
  %19 = bitcast i32* %18 to i8*
  tail call void @_ZdaPv(i8* %19) #43
  br label %_ZN5adept8internal16StackStorageOrigD2Ev.exit

_ZN5adept8internal16StackStorageOrigD2Ev.exit:    ; preds = %if.end9.i, %delete.notnull14.i
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdaPv(i8*) local_unnamed_addr #22

; Function Attrs: nounwind uwtable
define dso_local void @_ZN5adept8internal16StackStorageOrigD2Ev(%"class.adept::internal::StackStorageOrig"* nocapture nonnull readonly dereferenceable(40) %this) unnamed_addr #5 align 2 {
entry:
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 0
  %0 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !363
  %tobool.not = icmp eq %"struct.adept::internal::Statement"* %0, null
  br i1 %tobool.not, label %if.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %1 = bitcast %"struct.adept::internal::Statement"* %0 to i8*
  tail call void @_ZdaPv(i8* %1) #43
  br label %if.end

if.end:                                           ; preds = %delete.notnull, %entry
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 1
  %2 = load double*, double** %multiplier_, align 8, !tbaa !365
  %tobool3.not = icmp eq double* %2, null
  br i1 %tobool3.not, label %if.end9, label %delete.notnull7

delete.notnull7:                                  ; preds = %if.end
  %3 = bitcast double* %2 to i8*
  tail call void @_ZdaPv(i8* %3) #43
  br label %if.end9

if.end9:                                          ; preds = %delete.notnull7, %if.end
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 2
  %4 = load i32*, i32** %index_, align 8, !tbaa !366
  %tobool10.not = icmp eq i32* %4, null
  br i1 %tobool10.not, label %if.end16, label %delete.notnull14

delete.notnull14:                                 ; preds = %if.end9
  %5 = bitcast i32* %4 to i8*
  tail call void @_ZdaPv(i8* %5) #43
  br label %if.end16

if.end16:                                         ; preds = %delete.notnull14, %if.end9
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack8activateEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %is_thread_unsafe_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 11
  %0 = load i8, i8* %is_thread_unsafe_, align 1, !tbaa !351, !range !356
  %tobool = icmp ne i8 %0, 0
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8
  %tobool2 = icmp ne %"class.adept::Stack"* %1, null
  %or.cond = and i1 %tobool, %tobool2
  %cmp = icmp ne %"class.adept::Stack"* %1, %this
  %or.cond1 = and i1 %cmp, %or.cond
  br i1 %or.cond1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %tobool5.not = xor i1 %tobool, true
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8
  %tobool7 = icmp ne %"class.adept::Stack"* %2, null
  %or.cond2 = and i1 %tobool7, %tobool5.not
  %cmp9 = icmp ne %"class.adept::Stack"* %2, %this
  %or.cond3 = and i1 %cmp9, %or.cond2
  br i1 %or.cond3, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #38
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !14
  %6 = bitcast %union.anon* %4 to i8*
  %7 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #38
  store i64 77, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i5 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %if.then
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i5, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %8 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %8, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(77) %call5.i.i.i5.i5, i8* nonnull align 1 dereferenceable(77) getelementptr inbounds ([78 x i8], [78 x i8]* @.str.58, i64 0, i64 0), i64 77, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %8, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i5, i64 %8
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #38
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %9 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %10 = getelementptr inbounds i8, i8* %exception, i64 24
  %11 = bitcast i8* %message_.i.i.i to i8**
  store i8* %10, i8** %11, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i6 = getelementptr inbounds i8, i8* %exception, i64 16
  %12 = bitcast i8* %_M_string_length.i.i.i.i.i.i6 to i64*
  store i64 0, i64* %12, align 8, !tbaa !19
  store i8 0, i8* %10, align 1, !tbaa !21
  %13 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept20stack_already_activeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %9, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont12 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %14 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8, !tbaa !74
  %15 = load i8*, i8** %11, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %15, %10
  br i1 %cmp.i.i.i.i.i, label %lpad11.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %15) #38
  br label %lpad11.body

invoke.cont12:                                    ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept20stack_already_activeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad11.body.thread

ehcleanup.thread:                                 ; preds = %if.then
  %16 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #38
  br label %cleanup.action

lpad11.body:                                      ; preds = %lpad.i, %if.then.i.i.i.i
  %17 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %17) #38
  %18 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %18, %6
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad11.body
  call void @_ZdlPv(i8* %18) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #38
  br label %cleanup.action

lpad11.body.thread:                               ; preds = %invoke.cont12
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i13 = icmp eq i8* %20, %6
  br i1 %cmp.i.i.i13, label %ehcleanup.thread18, label %if.then.i.i

ehcleanup.thread18:                               ; preds = %lpad11.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad11.body.thread
  call void @_ZdlPv(i8* %20) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad11.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn10 = phi { i8*, i32 } [ %16, %ehcleanup.thread ], [ %14, %ehcleanup ], [ %14, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

if.else:                                          ; preds = %lor.lhs.false
  %_ZN5adept21_stack_current_threadE.sink = select i1 %tobool, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %_ZN5adept21_stack_current_threadE.sink, align 8, !tbaa !61
  ret void

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread18, %cleanup.action
  %.pn9 = phi { i8*, i32 } [ %.pn10, %cleanup.action ], [ %19, %if.then.i.i ], [ %19, %ehcleanup.thread18 ]
  resume { i8*, i32 } %.pn9

unreachable:                                      ; preds = %invoke.cont12
  unreachable
}

; Function Attrs: norecurse nounwind readnone uwtable willreturn mustprogress
define dso_local i32 @_ZN5adept5Stack24set_max_jacobian_threadsEi(%"class.adept::Stack"* nocapture nonnull readnone dereferenceable(149) %this, i32 %n) local_unnamed_addr #23 align 2 {
entry:
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone uwtable willreturn mustprogress
define dso_local i32 @_ZNK5adept5Stack20max_jacobian_threadsEv(%"class.adept::Stack"* nocapture nonnull readnone dereferenceable(149) %this) local_unnamed_addr #23 align 2 {
entry:
  ret i32 1
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack15compute_adjointEv(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  %0 = load i8, i8* %gradients_initialized_.i, align 8, !tbaa !367, !range !356
  %tobool.i.not = icmp eq i8 %0, 0
  br i1 %tobool.i.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %1 = load i32, i32* %n_statements_, align 8, !tbaa !368
  %cmp24 = icmp sgt i32 %1, 1
  br i1 %cmp24, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %if.then
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %2 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !363
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %3 = load double*, double** %gradient_, align 8, !tbaa !357
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %4 = zext i32 %1 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end, %if.then
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv27 = phi i64 [ %4, %for.body.lr.ph ], [ %indvars.iv.next28, %if.end ]
  %ist.0.in25 = phi i32 [ %1, %for.body.lr.ph ], [ %ist.026, %if.end ]
  %ist.026 = add nsw i32 %ist.0.in25, -1
  %idxprom = sext i32 %ist.026 to i64
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %2, i64 %idxprom, i32 0
  %5 = load i32, i32* %index, align 4, !tbaa !369
  %idxprom2 = sext i32 %5 to i64
  %arrayidx3 = getelementptr inbounds double, double* %3, i64 %idxprom2
  %6 = load double, double* %arrayidx3, align 8, !tbaa !70
  store double 0.000000e+00, double* %arrayidx3, align 8, !tbaa !70
  %cmp8 = fcmp fast une double %6, 0.000000e+00
  br i1 %cmp8, label %if.then9, label %if.end

if.then9:                                         ; preds = %for.body
  %sub11 = add nsw i32 %ist.0.in25, -2
  %7 = zext i32 %sub11 to i64
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %2, i64 %7, i32 1
  %8 = load i32, i32* %end_plus_one, align 4, !tbaa !371
  %end_plus_one15 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %2, i64 %idxprom, i32 1
  %9 = load i32, i32* %end_plus_one15, align 4, !tbaa !371
  %cmp1621 = icmp slt i32 %8, %9
  br i1 %cmp1621, label %for.body18.lr.ph, label %if.end

for.body18.lr.ph:                                 ; preds = %if.then9
  %10 = load double*, double** %multiplier_, align 8, !tbaa !365
  %11 = load i32*, i32** %index_, align 8, !tbaa !366
  %12 = sext i32 %8 to i64
  %13 = sext i32 %9 to i64
  br label %for.body18

for.body18:                                       ; preds = %for.body18.lr.ph, %for.body18
  %indvars.iv = phi i64 [ %12, %for.body18.lr.ph ], [ %indvars.iv.next, %for.body18 ]
  %arrayidx20 = getelementptr inbounds double, double* %10, i64 %indvars.iv
  %14 = load double, double* %arrayidx20, align 8, !tbaa !70
  %mul = fmul fast double %14, %6
  %arrayidx23 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv
  %15 = load i32, i32* %arrayidx23, align 4, !tbaa !47
  %idxprom24 = sext i32 %15 to i64
  %arrayidx25 = getelementptr inbounds double, double* %3, i64 %idxprom24
  %16 = load double, double* %arrayidx25, align 8, !tbaa !70
  %add = fadd fast double %16, %mul
  store double %add, double* %arrayidx25, align 8, !tbaa !70
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp16 = icmp slt i64 %indvars.iv.next, %13
  br i1 %cmp16, label %for.body18, label %if.end, !llvm.loop !372

if.end:                                           ; preds = %for.body18, %if.then9, %for.body
  %cmp = icmp sgt i64 %indvars.iv27, 2
  %indvars.iv.next28 = add nsw i64 %indvars.iv27, -1
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !373

if.else:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %17 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #38
  %18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %19 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %18, %union.anon** %19, align 8, !tbaa !14
  %20 = bitcast %union.anon* %18 to i8*
  %21 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #38
  store i64 106, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i16 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %if.else
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i16, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %22 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %22, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(106) %call5.i.i.i5.i16, i8* nonnull align 1 dereferenceable(106) getelementptr inbounds ([107 x i8], [107 x i8]* @.str.59, i64 0, i64 0), i64 106, i1 false) #38
  %_M_string_length.i.i.i.i.i.i15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %22, i64* %_M_string_length.i.i.i.i.i.i15, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i16, i64 %22
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #38
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %23 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %24 = getelementptr inbounds i8, i8* %exception, i64 24
  %25 = bitcast i8* %message_.i.i.i to i8**
  store i8* %24, i8** %25, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %26 = bitcast i8* %_M_string_length.i.i.i.i.i.i to i64*
  store i64 0, i64* %26, align 8, !tbaa !19
  store i8 0, i8* %24, align 1, !tbaa !21
  %27 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept25gradients_not_initializedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %23, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont30 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %28 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8, !tbaa !74
  %29 = load i8*, i8** %25, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %29, %24
  br i1 %cmp.i.i.i.i.i, label %lpad29.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %29) #38
  br label %lpad29.body

invoke.cont30:                                    ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept25gradients_not_initializedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad29.body.thread

ehcleanup.thread:                                 ; preds = %if.else
  %30 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #38
  br label %cleanup.action

lpad29.body:                                      ; preds = %lpad.i, %if.then.i.i.i.i
  %31 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %31) #38
  %32 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %32, %20
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad29.body
  call void @_ZdlPv(i8* %32) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #38
  br label %cleanup.action

lpad29.body.thread:                               ; preds = %invoke.cont30
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i31 = icmp eq i8* %34, %20
  br i1 %cmp.i.i.i31, label %ehcleanup.thread36, label %if.then.i.i

ehcleanup.thread36:                               ; preds = %lpad29.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad29.body.thread
  call void @_ZdlPv(i8* %34) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad29.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn20 = phi { i8*, i32 } [ %30, %ehcleanup.thread ], [ %28, %ehcleanup ], [ %28, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread36, %cleanup.action
  %.pn19 = phi { i8*, i32 } [ %.pn20, %cleanup.action ], [ %33, %if.then.i.i ], [ %33, %ehcleanup.thread36 ]
  resume { i8*, i32 } %.pn19

unreachable:                                      ; preds = %invoke.cont30
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack22compute_tangent_linearEv(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  %0 = load i8, i8* %gradients_initialized_.i, align 8, !tbaa !367, !range !356
  %tobool.i.not = icmp eq i8 %0, 0
  br i1 %tobool.i.not, label %if.else, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %1 = load i32, i32* %n_statements_, align 8, !tbaa !368
  %cmp23 = icmp sgt i32 %1, 1
  br i1 %cmp23, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %2 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !363
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %3 = load double*, double** %gradient_, align 8, !tbaa !357
  %wide.trip.count = zext i32 %1 to i64
  %end_plus_one.phi.trans.insert = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %2, i64 0, i32 1
  %.pre = load i32, i32* %end_plus_one.phi.trans.insert, align 4, !tbaa !371
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup8, %for.cond.preheader
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.cleanup8
  %4 = phi i32 [ %.pre, %for.body.lr.ph ], [ %5, %for.cond.cleanup8 ]
  %indvars.iv25 = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next26, %for.cond.cleanup8 ]
  %end_plus_one6 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %2, i64 %indvars.iv25, i32 1
  %5 = load i32, i32* %end_plus_one6, align 4, !tbaa !371
  %cmp720 = icmp slt i32 %4, %5
  br i1 %cmp720, label %for.body9.lr.ph, label %for.cond.cleanup8

for.body9.lr.ph:                                  ; preds = %for.body
  %6 = load double*, double** %multiplier_, align 8, !tbaa !365
  %7 = load i32*, i32** %index_, align 8, !tbaa !366
  %8 = sext i32 %4 to i64
  %9 = sext i32 %5 to i64
  br label %for.body9

for.cond.cleanup8:                                ; preds = %for.body9, %for.body
  %a.0.lcssa = phi double [ 0.000000e+00, %for.body ], [ %add, %for.body9 ]
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %2, i64 %indvars.iv25, i32 0
  %10 = load i32, i32* %index, align 4, !tbaa !369
  %idxprom17 = sext i32 %10 to i64
  %arrayidx18 = getelementptr inbounds double, double* %3, i64 %idxprom17
  store double %a.0.lcssa, double* %arrayidx18, align 8, !tbaa !70
  %indvars.iv.next26 = add nuw nsw i64 %indvars.iv25, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next26, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !374

for.body9:                                        ; preds = %for.body9.lr.ph, %for.body9
  %indvars.iv = phi i64 [ %8, %for.body9.lr.ph ], [ %indvars.iv.next, %for.body9 ]
  %a.021 = phi double [ 0.000000e+00, %for.body9.lr.ph ], [ %add, %for.body9 ]
  %arrayidx11 = getelementptr inbounds double, double* %6, i64 %indvars.iv
  %11 = load double, double* %arrayidx11, align 8, !tbaa !70
  %arrayidx13 = getelementptr inbounds i32, i32* %7, i64 %indvars.iv
  %12 = load i32, i32* %arrayidx13, align 4, !tbaa !47
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds double, double* %3, i64 %idxprom14
  %13 = load double, double* %arrayidx15, align 8, !tbaa !70
  %mul = fmul fast double %13, %11
  %add = fadd fast double %mul, %a.021
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp7 = icmp slt i64 %indvars.iv.next, %9
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8, !llvm.loop !375

if.else:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %14 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #38
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %16 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %15, %union.anon** %16, align 8, !tbaa !14
  %17 = bitcast %union.anon* %15 to i8*
  %18 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #38
  store i64 106, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i15 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %if.else
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i15, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %19 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %19, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(106) %call5.i.i.i5.i15, i8* nonnull align 1 dereferenceable(106) getelementptr inbounds ([107 x i8], [107 x i8]* @.str.59, i64 0, i64 0), i64 106, i1 false) #38
  %_M_string_length.i.i.i.i.i.i14 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %19, i64* %_M_string_length.i.i.i.i.i.i14, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i15, i64 %19
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #38
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %20 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %21 = getelementptr inbounds i8, i8* %exception, i64 24
  %22 = bitcast i8* %message_.i.i.i to i8**
  store i8* %21, i8** %22, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %23 = bitcast i8* %_M_string_length.i.i.i.i.i.i to i64*
  store i64 0, i64* %23, align 8, !tbaa !19
  store i8 0, i8* %21, align 1, !tbaa !21
  %24 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept25gradients_not_initializedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %20, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont24 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %25 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !tbaa !74
  %26 = load i8*, i8** %22, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %26, %21
  br i1 %cmp.i.i.i.i.i, label %lpad23.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %26) #38
  br label %lpad23.body

invoke.cont24:                                    ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept25gradients_not_initializedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad23.body.thread

ehcleanup.thread:                                 ; preds = %if.else
  %27 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #38
  br label %cleanup.action

lpad23.body:                                      ; preds = %lpad.i, %if.then.i.i.i.i
  %28 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %28) #38
  %29 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %29, %17
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad23.body
  call void @_ZdlPv(i8* %29) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #38
  br label %cleanup.action

lpad23.body.thread:                               ; preds = %invoke.cont24
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i30 = icmp eq i8* %31, %17
  br i1 %cmp.i.i.i30, label %ehcleanup.thread35, label %if.then.i.i

ehcleanup.thread35:                               ; preds = %lpad23.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad23.body.thread
  call void @_ZdlPv(i8* %31) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad23.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn19 = phi { i8*, i32 } [ %27, %ehcleanup.thread ], [ %25, %ehcleanup ], [ %25, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread35, %cleanup.action
  %.pn18 = phi { i8*, i32 } [ %.pn19, %cleanup.action ], [ %30, %if.then.i.i ], [ %30, %ehcleanup.thread35 ]
  resume { i8*, i32 } %.pn18

unreachable:                                      ; preds = %invoke.cont24
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local i32 @_ZN5adept5Stack21do_register_gradientsERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32* nocapture nonnull readonly align 4 dereferenceable(4) %n) local_unnamed_addr #5 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load i32, i32* %n, align 4, !tbaa !47
  %n_gradients_registered_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_, align 4, !tbaa !376
  %add = add nsw i32 %1, %0
  store i32 %add, i32* %n_gradients_registered_, align 4, !tbaa !376
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %2 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i, align 8, !tbaa !358
  %cmp.i = icmp eq %"struct.std::__detail::_List_node_base"* %3, %2
  %.pre = load i32, i32* %n, align 4, !tbaa !47
  br i1 %cmp.i, label %if.end49, label %for.body

for.body:                                         ; preds = %entry, %for.inc
  %it.sroa.0.052 = phi %"struct.std::__detail::_List_node_base"* [ %10, %for.inc ], [ %3, %entry ]
  %_M_storage.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.052, i64 1
  %4 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i to %"struct.adept::Gap"*
  %end = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %4, i64 0, i32 1
  %5 = load i32, i32* %end, align 4, !tbaa !377
  %add9 = add nsw i32 %5, 1
  %start = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i to i32*
  %6 = load i32, i32* %start, align 4, !tbaa !379
  %sub = sub i32 %add9, %6
  %cmp = icmp sgt i32 %sub, %.pre
  br i1 %cmp, label %if.then11, label %if.else

if.then11:                                        ; preds = %for.body
  %start.le = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i to i32*
  %add16 = add nsw i32 %.pre, %6
  store i32 %add16, i32* %start.le, align 4, !tbaa !379
  br label %return

if.else:                                          ; preds = %for.body
  %cmp17 = icmp eq i32 %sub, %.pre
  br i1 %cmp17, label %if.then18, label %for.inc

if.then18:                                        ; preds = %if.else
  %_M_node.i25 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i25, align 8, !tbaa !380
  %cmp.i27 = icmp eq %"struct.std::__detail::_List_node_base"* %7, %it.sroa.0.052
  %_M_size.i.i.i19 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %_M_size.i.i.i19, align 8, !tbaa !381
  %sub.i.i.i20 = add i64 %8, -1
  store i64 %sub.i.i.i20, i64* %_M_size.i.i.i19, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %it.sroa.0.052) #38
  %9 = bitcast %"struct.std::__detail::_List_node_base"* %it.sroa.0.052 to i8*
  tail call void @_ZdlPv(i8* nonnull %9) #38
  br i1 %cmp.i27, label %if.then22, label %return

if.then22:                                        ; preds = %if.then18
  store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %_M_node.i25, align 8, !tbaa.struct !385
  br label %return

for.inc:                                          ; preds = %if.else
  %_M_next.i15 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.052, i64 0, i32 0
  %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i15, align 8, !tbaa !358
  %cmp.i22.not = icmp eq %"struct.std::__detail::_List_node_base"* %10, %2
  br i1 %cmp.i22.not, label %if.end49, label %for.body, !llvm.loop !386

if.end49:                                         ; preds = %for.inc, %entry
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 6
  %11 = load i32, i32* %i_gradient_, align 8, !tbaa !387
  %add50 = add nsw i32 %11, %.pre
  store i32 %add50, i32* %i_gradient_, align 8, !tbaa !387
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %12 = load i32, i32* %max_gradient_, align 8, !tbaa !388
  %cmp52 = icmp sgt i32 %add50, %12
  br i1 %cmp52, label %if.then53, label %if.end56

if.then53:                                        ; preds = %if.end49
  store i32 %add50, i32* %max_gradient_, align 8, !tbaa !388
  br label %if.end56

if.end56:                                         ; preds = %if.then53, %if.end49
  %13 = load i32, i32* %n, align 4, !tbaa !47
  %sub58 = sub nsw i32 %add50, %13
  br label %return

return:                                           ; preds = %if.then18, %if.then11, %if.then22, %if.end56
  %retval.3 = phi i32 [ %sub58, %if.end56 ], [ %6, %if.then22 ], [ %6, %if.then11 ], [ %6, %if.then18 ]
  ret i32 %retval.3
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack27unregister_gradient_not_topERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32* nocapture nonnull readonly align 4 dereferenceable(4) %gradient_index) local_unnamed_addr #0 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %0 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i, align 8, !tbaa !358
  %cmp.i = icmp eq %"struct.std::__detail::_List_node_base"* %1, %0
  br i1 %cmp.i, label %if.then15.if.then62_crit_edge, label %land.rhs

land.rhs:                                         ; preds = %entry
  %_M_node.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %2 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i, align 8, !tbaa !380
  %cmp.i18.not = icmp eq %"struct.std::__detail::_List_node_base"* %2, %0
  %3 = bitcast %"struct.std::__detail::_List_node_base"* %2 to %"struct.std::_List_node"*
  br i1 %cmp.i18.not, label %for.body.lr.ph, label %if.then

if.then:                                          ; preds = %land.rhs
  %_M_storage.i.i30 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %2, i64 1
  %4 = load i32, i32* %gradient_index, align 4, !tbaa !47
  %start = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i30 to i32*
  %5 = load i32, i32* %start, align 4, !tbaa !379
  %sub = add nsw i32 %5, -1
  %cmp = icmp eq i32 %4, %sub
  br i1 %cmp, label %if.end75.thread101, label %if.else

if.end75.thread101:                               ; preds = %if.then
  store i32 %4, i32* %start, align 4, !tbaa !379
  br label %land.rhs77

if.else:                                          ; preds = %if.then
  %end = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %3, i64 0, i32 1, i32 0, i64 4
  %6 = bitcast i8* %end to i32*
  %7 = load i32, i32* %6, align 4, !tbaa !377
  %add = add nsw i32 %7, 1
  %cmp9 = icmp eq i32 %4, %add
  br i1 %cmp9, label %if.then10, label %for.body.lr.ph

if.then10:                                        ; preds = %if.else
  store i32 %4, i32* %6, align 4, !tbaa !377
  br label %if.then113

if.then15.if.then62_crit_edge:                    ; preds = %entry
  %.pre = load i32, i32* %gradient_index, align 4, !tbaa !47
  br label %if.then62

for.body.lr.ph:                                   ; preds = %land.rhs, %if.else
  %8 = load i32, i32* %gradient_index, align 4, !tbaa !47
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %it.sroa.0.0116 = phi %"struct.std::__detail::_List_node_base"* [ %1, %for.body.lr.ph ], [ %20, %for.inc ]
  %_M_storage.i.i58 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.0116, i64 1
  %9 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i58 to %"struct.adept::Gap"*
  %end25 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %9, i64 0, i32 1
  %10 = load i32, i32* %end25, align 4, !tbaa !377
  %add26 = add nsw i32 %10, 1
  %cmp27.not = icmp sgt i32 %8, %add26
  br i1 %cmp27.not, label %for.inc, label %if.then28

if.then28:                                        ; preds = %for.body
  %11 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i58 to %"struct.adept::Gap"*
  %end25.le = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %11, i64 0, i32 1
  %start30 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i58 to i32*
  %12 = load i32, i32* %start30, align 4, !tbaa !379
  %sub31 = add nsw i32 %12, -1
  %cmp32 = icmp eq i32 %8, %sub31
  br i1 %cmp32, label %if.end75, label %if.else38

if.else38:                                        ; preds = %if.then28
  %cmp42 = icmp eq i32 %8, %add26
  br i1 %cmp42, label %if.then43, label %if.else48

if.then43:                                        ; preds = %if.else38
  store i32 %8, i32* %end25.le, align 4, !tbaa !377
  %most_recent_gap_47 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5
  %13 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_47 to i64*
  %14 = ptrtoint %"struct.std::__detail::_List_node_base"* %it.sroa.0.0116 to i64
  store i64 %14, i64* %13, align 8, !tbaa !61
  %15 = bitcast %"struct.std::__detail::_List_node_base"* %it.sroa.0.0116 to %"struct.std::_List_node"*
  br label %if.then113

if.else48:                                        ; preds = %if.else38
  %call2.i.i.i.i.i.i54 = tail call noalias nonnull i8* @_Znwm(i64 24) #42
  %_M_storage.i.i.i.i55 = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i54, i64 16
  %16 = bitcast i8* %_M_storage.i.i.i.i55 to i64*
  %ref.tmp51.sroa.4.0.insert.ext = zext i32 %8 to i64
  %ref.tmp51.sroa.4.0.insert.shift = shl nuw i64 %ref.tmp51.sroa.4.0.insert.ext, 32
  %ref.tmp51.sroa.0.0.insert.insert = or i64 %ref.tmp51.sroa.4.0.insert.shift, %ref.tmp51.sroa.4.0.insert.ext
  store i64 %ref.tmp51.sroa.0.0.insert.insert, i64* %16, align 4
  %17 = bitcast i8* %call2.i.i.i.i.i.i54 to %"struct.std::__detail::_List_node_base"*
  tail call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %17, %"struct.std::__detail::_List_node_base"* nonnull %it.sroa.0.0116) #38
  %_M_size.i.i.i56 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %_M_size.i.i.i56, align 8, !tbaa !381
  %add.i.i.i57 = add i64 %18, 1
  store i64 %add.i.i.i57, i64* %_M_size.i.i.i56, align 8, !tbaa !381
  %ref.tmp49.sroa.0.0..sroa_idx = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %19 = bitcast %"struct.std::__detail::_List_node_base"** %ref.tmp49.sroa.0.0..sroa_idx to i8**
  store i8* %call2.i.i.i.i.i.i54, i8** %19, align 8, !tbaa.struct !385
  br label %if.end147

for.inc:                                          ; preds = %for.body
  %_M_next.i53 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.0116, i64 0, i32 0
  %20 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i53, align 8, !tbaa !358
  %cmp.i50.not = icmp eq %"struct.std::__detail::_List_node_base"* %20, %0
  br i1 %cmp.i50.not, label %if.then62, label %for.body, !llvm.loop !389

if.then62:                                        ; preds = %for.inc, %if.then15.if.then62_crit_edge
  %21 = phi i32 [ %.pre, %if.then15.if.then62_crit_edge ], [ %8, %for.inc ]
  %call2.i.i.i.i.i.i = tail call noalias nonnull i8* @_Znwm(i64 24) #42
  %_M_storage.i.i.i.i = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i, i64 16
  %22 = bitcast i8* %_M_storage.i.i.i.i to i64*
  %ref.tmp64.sroa.4.0.insert.ext = zext i32 %21 to i64
  %ref.tmp64.sroa.4.0.insert.shift = shl nuw i64 %ref.tmp64.sroa.4.0.insert.ext, 32
  %ref.tmp64.sroa.0.0.insert.insert = or i64 %ref.tmp64.sroa.4.0.insert.shift, %ref.tmp64.sroa.4.0.insert.ext
  store i64 %ref.tmp64.sroa.0.0.insert.insert, i64* %22, align 4
  %23 = bitcast i8* %call2.i.i.i.i.i.i to %"struct.std::__detail::_List_node_base"*
  tail call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %23, %"struct.std::__detail::_List_node_base"* nonnull %0) #38
  %_M_size.i.i.i47 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %_M_size.i.i.i47, align 8, !tbaa !381
  %add.i.i.i = add i64 %24, 1
  store i64 %add.i.i.i, i64* %_M_size.i.i.i47, align 8, !tbaa !381
  %ref.tmp65.sroa.0.0..sroa_idx = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %_M_prev.i46 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_prev.i46, align 8, !tbaa !390
  store %"struct.std::__detail::_List_node_base"* %25, %"struct.std::__detail::_List_node_base"** %ref.tmp65.sroa.0.0..sroa_idx, align 8, !tbaa !380
  br label %if.end147

if.end75:                                         ; preds = %if.then28
  store i32 %8, i32* %start30, align 4, !tbaa !379
  %most_recent_gap_37 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5
  %26 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_37 to i64*
  %27 = ptrtoint %"struct.std::__detail::_List_node_base"* %it.sroa.0.0116 to i64
  store i64 %27, i64* %26, align 8, !tbaa !61
  %28 = bitcast %"struct.std::__detail::_List_node_base"* %it.sroa.0.0116 to %"struct.std::_List_node"*
  br label %land.rhs77

land.rhs77:                                       ; preds = %if.end75, %if.end75.thread101
  %29 = phi %"struct.std::_List_node"* [ %28, %if.end75 ], [ %3, %if.end75.thread101 ]
  %30 = phi %"struct.std::__detail::_List_node_base"* [ %it.sroa.0.0116, %if.end75 ], [ %2, %if.end75.thread101 ]
  %cmp.i42.not = icmp eq %"struct.std::__detail::_List_node_base"* %30, %1
  br i1 %cmp.i42.not, label %if.end147, label %if.then85

if.then85:                                        ; preds = %land.rhs77
  %_M_prev.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %30, i64 0, i32 1
  %31 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_prev.i, align 8, !tbaa !390
  %_M_storage.i.i37 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %31, i64 1
  %32 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i37 to %"struct.adept::Gap"*
  %end92 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %32, i64 0, i32 1
  %33 = load i32, i32* %end92, align 4, !tbaa !377
  %_M_storage.i.i36 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %29, i64 0, i32 1
  %start95 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %_M_storage.i.i36 to i32*
  %34 = load i32, i32* %start95, align 4, !tbaa !379
  %sub96 = add nsw i32 %34, -1
  %cmp97 = icmp eq i32 %33, %sub96
  br i1 %cmp97, label %if.then98, label %if.end147

if.then98:                                        ; preds = %if.then85
  %start100 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i37 to i32*
  %35 = load i32, i32* %start100, align 4, !tbaa !379
  store i32 %35, i32* %start95, align 4, !tbaa !379
  %_M_size.i.i.i28 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %_M_size.i.i.i28, align 8, !tbaa !381
  %sub.i.i.i29 = add i64 %36, -1
  store i64 %sub.i.i.i29, i64* %_M_size.i.i.i28, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %31) #38
  %37 = bitcast %"struct.std::__detail::_List_node_base"* %31 to i8*
  tail call void @_ZdlPv(i8* nonnull %37) #38
  br label %if.end147

if.then113:                                       ; preds = %if.then10, %if.then43
  %38 = phi %"struct.std::_List_node"* [ %3, %if.then10 ], [ %15, %if.then43 ]
  %.ptr = phi %"struct.std::__detail::_List_node_base"* [ %2, %if.then10 ], [ %it.sroa.0.0116, %if.then43 ]
  %_M_next.i26 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %.ptr, i64 0, i32 0
  %39 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i26, align 8, !tbaa !358
  %cmp.i25.not = icmp eq %"struct.std::__detail::_List_node_base"* %39, %0
  br i1 %cmp.i25.not, label %if.end147, label %land.rhs124

land.rhs124:                                      ; preds = %if.then113
  %_M_storage.i.i22 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %39, i64 1
  %start126 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i22 to i32*
  %40 = load i32, i32* %start126, align 4, !tbaa !379
  %end129 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %38, i64 0, i32 1, i32 0, i64 4
  %41 = bitcast i8* %end129 to i32*
  %42 = load i32, i32* %41, align 4, !tbaa !377
  %add130 = add nsw i32 %42, 1
  %cmp131 = icmp eq i32 %40, %add130
  br i1 %cmp131, label %if.then133, label %if.end147

if.then133:                                       ; preds = %land.rhs124
  %43 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i22 to %"struct.adept::Gap"*
  %end135 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %43, i64 0, i32 1
  %44 = load i32, i32* %end135, align 4, !tbaa !377
  store i32 %44, i32* %41, align 4, !tbaa !377
  %_M_size.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %_M_size.i.i.i, align 8, !tbaa !381
  %sub.i.i.i = add i64 %45, -1
  store i64 %sub.i.i.i, i64* %_M_size.i.i.i, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %39) #38
  %46 = bitcast %"struct.std::__detail::_List_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* nonnull %46) #38
  br label %if.end147

if.end147:                                        ; preds = %if.then62, %if.else48, %land.rhs77, %land.rhs124, %if.then133, %if.then113, %if.then85, %if.then98
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack20unregister_gradientsERKiS2_(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32* nocapture nonnull readonly align 4 dereferenceable(4) %gradient_index, i32* nocapture nonnull readonly align 4 dereferenceable(4) %n) local_unnamed_addr #0 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load i32, i32* %n, align 4, !tbaa !47
  %n_gradients_registered_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_, align 4, !tbaa !376
  %sub = sub nsw i32 %1, %0
  store i32 %sub, i32* %n_gradients_registered_, align 4, !tbaa !376
  %2 = load i32, i32* %gradient_index, align 4, !tbaa !47
  %3 = load i32, i32* %n, align 4, !tbaa !47
  %add = add nsw i32 %3, %2
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 6
  %4 = load i32, i32* %i_gradient_, align 8, !tbaa !387
  %cmp = icmp eq i32 %add, %4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 %2, i32* %i_gradient_, align 8, !tbaa !387
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %5 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i, align 8, !tbaa !358
  %cmp.i = icmp eq %"struct.std::__detail::_List_node_base"* %6, %5
  br i1 %cmp.i, label %if.end192, label %if.then4

if.then4:                                         ; preds = %if.then
  %_M_prev.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.std::__detail::_List_node_base"** %_M_prev.i.i to %"struct.std::_List_node"**
  %8 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %7, align 8, !tbaa !390
  %end = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %8, i64 0, i32 1, i32 0, i64 4
  %9 = bitcast i8* %end to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !377
  %add8 = add nsw i32 %10, 1
  %cmp9 = icmp eq i32 %2, %add8
  %11 = getelementptr %"struct.std::_List_node", %"struct.std::_List_node"* %8, i64 0, i32 0
  br i1 %cmp9, label %if.then10, label %if.end192

if.then10:                                        ; preds = %if.then4
  %_M_storage.i.i.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %8, i64 0, i32 1
  %start = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %_M_storage.i.i.i to i32*
  %12 = load i32, i32* %start, align 4, !tbaa !379
  store i32 %12, i32* %i_gradient_, align 8, !tbaa !387
  %_M_node.i46 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %13 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i46, align 8, !tbaa !380
  %cmp.i48 = icmp eq %"struct.std::__detail::_List_node_base"* %13, %11
  br i1 %cmp.i48, label %if.then17, label %if.end

if.then17:                                        ; preds = %if.then10
  store %"struct.std::__detail::_List_node_base"* %5, %"struct.std::__detail::_List_node_base"** %_M_node.i46, align 8, !tbaa.struct !385
  br label %if.end

if.end:                                           ; preds = %if.then17, %if.then10
  %_M_size.i.i.i67 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %_M_size.i.i.i67, align 8, !tbaa !381
  %sub.i.i.i68 = add i64 %14, -1
  store i64 %sub.i.i.i68, i64* %_M_size.i.i.i67, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %11) #38
  %15 = bitcast %"struct.std::_List_node"* %8 to i8*
  tail call void @_ZdlPv(i8* nonnull %15) #38
  br label %if.end192

if.else:                                          ; preds = %entry
  %gap_list_25 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %16 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_25, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i69 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i69, align 8, !tbaa !358
  %cmp.i70 = icmp eq %"struct.std::__detail::_List_node_base"* %17, %16
  br i1 %cmp.i70, label %if.then104, label %land.rhs

land.rhs:                                         ; preds = %if.else
  %_M_node.i78 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %18 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i78, align 8, !tbaa !380
  %cmp.i80.not = icmp eq %"struct.std::__detail::_List_node_base"* %18, %16
  %19 = bitcast %"struct.std::__detail::_List_node_base"* %18 to %"struct.std::_List_node"*
  br i1 %cmp.i80.not, label %for.body.preheader, label %if.then33

if.then33:                                        ; preds = %land.rhs
  %_M_storage.i.i81 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %18, i64 1
  %start36 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i81 to i32*
  %20 = load i32, i32* %start36, align 4, !tbaa !379
  %sub37 = sub nsw i32 %20, %3
  %cmp38 = icmp eq i32 %2, %sub37
  br i1 %cmp38, label %if.end119.thread130, label %if.else42

if.end119.thread130:                              ; preds = %if.then33
  store i32 %2, i32* %start36, align 4, !tbaa !379
  br label %land.rhs121

if.else42:                                        ; preds = %if.then33
  %end43 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %19, i64 0, i32 1, i32 0, i64 4
  %21 = bitcast i8* %end43 to i32*
  %22 = load i32, i32* %21, align 4, !tbaa !377
  %add44 = add nsw i32 %22, 1
  %cmp45 = icmp eq i32 %2, %add44
  br i1 %cmp45, label %if.then46, label %for.body.preheader

for.body.preheader:                               ; preds = %land.rhs, %if.else42
  br label %for.body

if.then46:                                        ; preds = %if.else42
  %add48 = add nsw i32 %22, %3
  store i32 %add48, i32* %21, align 4, !tbaa !377
  br label %if.then157

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %it54.sroa.0.0146 = phi %"struct.std::__detail::_List_node_base"* [ %34, %for.inc ], [ %17, %for.body.preheader ]
  %_M_storage.i.i90 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it54.sroa.0.0146, i64 1
  %23 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i90 to %"struct.adept::Gap"*
  %end64 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %23, i64 0, i32 1
  %24 = load i32, i32* %end64, align 4, !tbaa !377
  %add65 = add nsw i32 %24, 1
  %cmp66.not = icmp sgt i32 %2, %add65
  br i1 %cmp66.not, label %for.inc, label %if.then67

if.then67:                                        ; preds = %for.body
  %25 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i90 to %"struct.adept::Gap"*
  %end64.le = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %25, i64 0, i32 1
  %start69 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i90 to i32*
  %26 = load i32, i32* %start69, align 4, !tbaa !379
  %sub70 = sub nsw i32 %26, %3
  %cmp71 = icmp eq i32 %2, %sub70
  br i1 %cmp71, label %if.end119, label %if.else77

if.else77:                                        ; preds = %if.then67
  %cmp81 = icmp eq i32 %2, %add65
  br i1 %cmp81, label %if.then82, label %if.else87

if.then82:                                        ; preds = %if.else77
  %add85 = add nsw i32 %3, %24
  store i32 %add85, i32* %end64.le, align 4, !tbaa !377
  %most_recent_gap_86 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5
  %27 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_86 to i64*
  %28 = ptrtoint %"struct.std::__detail::_List_node_base"* %it54.sroa.0.0146 to i64
  store i64 %28, i64* %27, align 8, !tbaa !61
  %29 = bitcast %"struct.std::__detail::_List_node_base"* %it54.sroa.0.0146 to %"struct.std::_List_node"*
  br label %if.then157

if.else87:                                        ; preds = %if.else77
  %add91 = add i32 %2, -1
  %sub92 = add i32 %add91, %3
  %call2.i.i.i.i.i.i74 = tail call noalias nonnull i8* @_Znwm(i64 24) #42
  %_M_storage.i.i.i.i75 = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i74, i64 16
  %30 = bitcast i8* %_M_storage.i.i.i.i75 to i64*
  %ref.tmp90.sroa.4.0.insert.ext = zext i32 %sub92 to i64
  %ref.tmp90.sroa.4.0.insert.shift = shl nuw i64 %ref.tmp90.sroa.4.0.insert.ext, 32
  %ref.tmp90.sroa.0.0.insert.ext = zext i32 %2 to i64
  %ref.tmp90.sroa.0.0.insert.insert = or i64 %ref.tmp90.sroa.4.0.insert.shift, %ref.tmp90.sroa.0.0.insert.ext
  store i64 %ref.tmp90.sroa.0.0.insert.insert, i64* %30, align 4
  %31 = bitcast i8* %call2.i.i.i.i.i.i74 to %"struct.std::__detail::_List_node_base"*
  tail call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %31, %"struct.std::__detail::_List_node_base"* nonnull %it54.sroa.0.0146) #38
  %_M_size.i.i.i76 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %_M_size.i.i.i76, align 8, !tbaa !381
  %add.i.i.i77 = add i64 %32, 1
  store i64 %add.i.i.i77, i64* %_M_size.i.i.i76, align 8, !tbaa !381
  %ref.tmp88.sroa.0.0..sroa_idx = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %33 = bitcast %"struct.std::__detail::_List_node_base"** %ref.tmp88.sroa.0.0..sroa_idx to i8**
  store i8* %call2.i.i.i.i.i.i74, i8** %33, align 8, !tbaa.struct !385
  br label %if.end192

for.inc:                                          ; preds = %for.body
  %_M_next.i73 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it54.sroa.0.0146, i64 0, i32 0
  %34 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i73, align 8, !tbaa !358
  %cmp.i93.not = icmp eq %"struct.std::__detail::_List_node_base"* %34, %16
  br i1 %cmp.i93.not, label %if.then104, label %for.body, !llvm.loop !391

if.then104:                                       ; preds = %for.inc, %if.else
  %add107 = add i32 %2, -1
  %sub108 = add i32 %add107, %3
  %call2.i.i.i.i.i.i = tail call noalias nonnull i8* @_Znwm(i64 24) #42
  %_M_storage.i.i.i.i = getelementptr inbounds i8, i8* %call2.i.i.i.i.i.i, i64 16
  %35 = bitcast i8* %_M_storage.i.i.i.i to i64*
  %ref.tmp106.sroa.4.0.insert.ext = zext i32 %sub108 to i64
  %ref.tmp106.sroa.4.0.insert.shift = shl nuw i64 %ref.tmp106.sroa.4.0.insert.ext, 32
  %ref.tmp106.sroa.0.0.insert.ext = zext i32 %2 to i64
  %ref.tmp106.sroa.0.0.insert.insert = or i64 %ref.tmp106.sroa.4.0.insert.shift, %ref.tmp106.sroa.0.0.insert.ext
  store i64 %ref.tmp106.sroa.0.0.insert.insert, i64* %35, align 4
  %36 = bitcast i8* %call2.i.i.i.i.i.i to %"struct.std::__detail::_List_node_base"*
  tail call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %36, %"struct.std::__detail::_List_node_base"* nonnull %16) #38
  %_M_size.i.i.i65 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %_M_size.i.i.i65, align 8, !tbaa !381
  %add.i.i.i = add i64 %37, 1
  store i64 %add.i.i.i, i64* %_M_size.i.i.i65, align 8, !tbaa !381
  %ref.tmp109.sroa.0.0..sroa_idx = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  %_M_prev.i64 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_prev.i64, align 8, !tbaa !390
  store %"struct.std::__detail::_List_node_base"* %38, %"struct.std::__detail::_List_node_base"** %ref.tmp109.sroa.0.0..sroa_idx, align 8, !tbaa !380
  br label %if.end192

if.end119:                                        ; preds = %if.then67
  store i32 %2, i32* %start69, align 4, !tbaa !379
  %most_recent_gap_76 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5
  %39 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_76 to i64*
  %40 = ptrtoint %"struct.std::__detail::_List_node_base"* %it54.sroa.0.0146 to i64
  store i64 %40, i64* %39, align 8, !tbaa !61
  %41 = bitcast %"struct.std::__detail::_List_node_base"* %it54.sroa.0.0146 to %"struct.std::_List_node"*
  br label %land.rhs121

land.rhs121:                                      ; preds = %if.end119, %if.end119.thread130
  %42 = phi %"struct.std::_List_node"* [ %41, %if.end119 ], [ %19, %if.end119.thread130 ]
  %43 = phi %"struct.std::__detail::_List_node_base"* [ %it54.sroa.0.0146, %if.end119 ], [ %18, %if.end119.thread130 ]
  %cmp.i60.not = icmp eq %"struct.std::__detail::_List_node_base"* %43, %17
  br i1 %cmp.i60.not, label %if.end192, label %if.then129

if.then129:                                       ; preds = %land.rhs121
  %_M_prev.i57 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %43, i64 0, i32 1
  %44 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_prev.i57, align 8, !tbaa !390
  %_M_storage.i.i54 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %44, i64 1
  %45 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i54 to %"struct.adept::Gap"*
  %end136 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %45, i64 0, i32 1
  %46 = load i32, i32* %end136, align 4, !tbaa !377
  %_M_storage.i.i53 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %42, i64 0, i32 1
  %start139 = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %_M_storage.i.i53 to i32*
  %47 = load i32, i32* %start139, align 4, !tbaa !379
  %sub140 = add nsw i32 %47, -1
  %cmp141 = icmp eq i32 %46, %sub140
  br i1 %cmp141, label %if.then142, label %if.end192

if.then142:                                       ; preds = %if.then129
  %start144 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i54 to i32*
  %48 = load i32, i32* %start144, align 4, !tbaa !379
  store i32 %48, i32* %start139, align 4, !tbaa !379
  %_M_size.i.i.i42 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %_M_size.i.i.i42, align 8, !tbaa !381
  %sub.i.i.i43 = add i64 %49, -1
  store i64 %sub.i.i.i43, i64* %_M_size.i.i.i42, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %44) #38
  %50 = bitcast %"struct.std::__detail::_List_node_base"* %44 to i8*
  tail call void @_ZdlPv(i8* nonnull %50) #38
  br label %if.end192

if.then157:                                       ; preds = %if.then46, %if.then82
  %51 = phi %"struct.std::_List_node"* [ %19, %if.then46 ], [ %29, %if.then82 ]
  %.ptr = phi %"struct.std::__detail::_List_node_base"* [ %18, %if.then46 ], [ %it54.sroa.0.0146, %if.then82 ]
  %_M_next.i40 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %.ptr, i64 0, i32 0
  %52 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i40, align 8, !tbaa !358
  %cmp.i39.not = icmp eq %"struct.std::__detail::_List_node_base"* %52, %16
  br i1 %cmp.i39.not, label %if.end192, label %land.rhs168

land.rhs168:                                      ; preds = %if.then157
  %_M_storage.i.i37 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %52, i64 1
  %start170 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i37 to i32*
  %53 = load i32, i32* %start170, align 4, !tbaa !379
  %end173 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %51, i64 0, i32 1, i32 0, i64 4
  %54 = bitcast i8* %end173 to i32*
  %55 = load i32, i32* %54, align 4, !tbaa !377
  %add174 = add nsw i32 %55, 1
  %cmp175 = icmp eq i32 %53, %add174
  br i1 %cmp175, label %if.then177, label %if.end192

if.then177:                                       ; preds = %land.rhs168
  %56 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i37 to %"struct.adept::Gap"*
  %end179 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %56, i64 0, i32 1
  %57 = load i32, i32* %end179, align 4, !tbaa !377
  store i32 %57, i32* %54, align 4, !tbaa !377
  %_M_size.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %_M_size.i.i.i, align 8, !tbaa !381
  %sub.i.i.i = add i64 %58, -1
  store i64 %sub.i.i.i, i64* %_M_size.i.i.i, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %52) #38
  %59 = bitcast %"struct.std::__detail::_List_node_base"* %52 to i8*
  tail call void @_ZdlPv(i8* nonnull %59) #38
  br label %if.end192

if.end192:                                        ; preds = %if.then104, %if.else87, %land.rhs121, %land.rhs168, %if.then177, %if.then157, %if.then129, %if.then142, %if.then4, %if.end, %if.then
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZNK5adept5Stack16print_statementsERSo(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os) local_unnamed_addr #10 align 2 {
entry:
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %0 = load i32, i32* %n_statements_, align 8, !tbaa !368
  %cmp31 = icmp sgt i32 %0, 1
  br i1 %cmp31, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv33 = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next34, %if.end ]
  %1 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !363
  %2 = trunc i64 %indvars.iv33 to i32
  %call = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %2)
  %call1.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i64 4)
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 %indvars.iv33, i32 0
  %3 = load i32, i32* %index, align 4, !tbaa !369
  %call3 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call, i32 %3)
  %call1.i18 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call3, i8* nonnull getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0), i64 4)
  %4 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !363
  %5 = add nsw i64 %indvars.iv33, -1
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %4, i64 %5, i32 1
  %6 = load i32, i32* %end_plus_one, align 4, !tbaa !371
  %end_plus_one11 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %4, i64 %indvars.iv33, i32 1
  %7 = load i32, i32* %end_plus_one11, align 4, !tbaa !371
  %cmp12 = icmp eq i32 %6, %7
  br i1 %cmp12, label %if.then, label %for.cond19.preheader

for.cond19.preheader:                             ; preds = %for.body
  %end_plus_one20 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 %indvars.iv33, i32 1
  %8 = load i32, i32* %end_plus_one20, align 4, !tbaa !371
  %cmp2129 = icmp slt i32 %6, %8
  br i1 %cmp2129, label %for.body23.preheader, label %for.cond.cleanup22

for.body23.preheader:                             ; preds = %for.cond19.preheader
  %9 = sext i32 %6 to i64
  br label %for.body23

if.then:                                          ; preds = %for.body
  %call1.i20 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0), i64 2)
  br label %if.end

for.cond.cleanup22:                               ; preds = %for.body23, %for.cond19.preheader
  %call1.i22 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1)
  br label %if.end

for.body23:                                       ; preds = %for.body23.preheader, %for.body23
  %indvars.iv = phi i64 [ %9, %for.body23.preheader ], [ %indvars.iv.next, %for.body23 ]
  %call1.i24 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0), i64 3)
  %10 = load double*, double** %multiplier_, align 8, !tbaa !365
  %arrayidx26 = getelementptr inbounds double, double* %10, i64 %indvars.iv
  %11 = load double, double* %arrayidx26, align 8, !tbaa !70
  %call.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, double %11)
  %call1.i26 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0), i64 3)
  %12 = load i32*, i32** %index_, align 8, !tbaa !366
  %arrayidx30 = getelementptr inbounds i32, i32* %12, i64 %indvars.iv
  %13 = load i32, i32* %arrayidx30, align 4, !tbaa !47
  %call31 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call.i, i32 %13)
  %call1.i28 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call31, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0), i64 1)
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %14 = load i32, i32* %end_plus_one20, align 4, !tbaa !371
  %15 = sext i32 %14 to i64
  %cmp21 = icmp slt i64 %indvars.iv.next, %15
  br i1 %cmp21, label %for.body23, label %for.cond.cleanup22, !llvm.loop !392

if.end:                                           ; preds = %for.cond.cleanup22, %if.then
  %indvars.iv.next34 = add nuw nsw i64 %indvars.iv33, 1
  %16 = load i32, i32* %n_statements_, align 8, !tbaa !368
  %17 = sext i32 %16 to i64
  %cmp = icmp slt i64 %indvars.iv.next34, %17
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !393
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: uwtable mustprogress
define dso_local zeroext i1 @_ZNK5adept5Stack15print_gradientsERSo(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os) local_unnamed_addr #10 align 2 {
entry:
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  %0 = load i8, i8* %gradients_initialized_.i, align 8, !tbaa !367, !range !356
  %tobool.i = icmp ne i8 %0, 0
  br i1 %tobool.i, label %for.cond.preheader, label %if.else

for.cond.preheader:                               ; preds = %entry
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %1 = load i32, i32* %max_gradient_, align 8, !tbaa !388
  %cmp19 = icmp sgt i32 %1, 0
  br i1 %cmp19, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end9, %for.cond.preheader
  %call1.i12 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1)
  br label %return

for.body:                                         ; preds = %for.body.lr.ph, %if.end9
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end9 ]
  %2 = trunc i64 %indvars.iv to i32
  %rem = urem i32 %2, 10
  %cmp2 = icmp eq i32 %rem, 0
  br i1 %cmp2, label %if.then3, label %if.end9

if.then3:                                         ; preds = %for.body
  %cmp4.not = icmp eq i64 %indvars.iv, 0
  br i1 %cmp4.not, label %if.end, label %if.then5

if.then5:                                         ; preds = %if.then3
  %call1.i14 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1)
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.then3
  %call7 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %2)
  %call1.i16 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call7, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i64 0, i64 0), i64 1)
  br label %if.end9

if.end9:                                          ; preds = %if.end, %for.body
  %call1.i18 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0), i64 1)
  %3 = load double*, double** %gradient_, align 8, !tbaa !357
  %arrayidx = getelementptr inbounds double, double* %3, i64 %indvars.iv
  %4 = load double, double* %arrayidx, align 8, !tbaa !70
  %call.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, double %4)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, i32* %max_gradient_, align 8, !tbaa !388
  %6 = sext i32 %5 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.cond.cleanup, !llvm.loop !394

if.else:                                          ; preds = %entry
  %call1.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([26 x i8], [26 x i8]* @.str.66, i64 0, i64 0), i64 25)
  br label %return

return:                                           ; preds = %if.else, %for.cond.cleanup
  ret i1 %tobool.i
}

; Function Attrs: uwtable
define dso_local void @_ZNK5adept5Stack10print_gapsERSo(%"class.adept::Stack"* nonnull dereferenceable(149) %this, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os) local_unnamed_addr #0 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %_M_next.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %it.sroa.0.09 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i, align 8, !tbaa !358
  %0 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0
  %cmp.i.not10 = icmp eq %"struct.std::__detail::_List_node_base"* %it.sroa.0.09, %0
  br i1 %cmp.i.not10, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %entry, %for.body
  %it.sroa.0.011 = phi %"struct.std::__detail::_List_node_base"* [ %it.sroa.0.0, %for.body ], [ %it.sroa.0.09, %entry ]
  %_M_storage.i.i4 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.011, i64 1
  %1 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i4 to %"struct.adept::Gap"*
  %start = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i4 to i32*
  %2 = load i32, i32* %start, align 4, !tbaa !379
  %call7 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %2)
  %call1.i3 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call7, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i64 0, i64 0), i64 1)
  %end = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %1, i64 0, i32 1
  %3 = load i32, i32* %end, align 4, !tbaa !377
  %call10 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call7, i32 %3)
  %call1.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call10, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0), i64 1)
  %_M_next.i1 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.011, i64 0, i32 0
  %it.sroa.0.0 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i1, align 8, !tbaa !358
  %cmp.i.not = icmp eq %"struct.std::__detail::_List_node_base"* %it.sroa.0.0, %0
  br i1 %cmp.i.not, label %for.cond.cleanup, label %for.body, !llvm.loop !395
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack20initialize_gradientsEv(%"class.adept::Stack"* nocapture nonnull dereferenceable(149) %this) local_unnamed_addr #10 align 2 {
entry:
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %0 = load i32, i32* %max_gradient_, align 8, !tbaa !388
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end15

if.then:                                          ; preds = %entry
  %n_allocated_gradients_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 7
  %1 = load i32, i32* %n_allocated_gradients_, align 4, !tbaa !396
  %cmp3 = icmp slt i32 %1, %0
  br i1 %cmp3, label %if.then4, label %for.body.lr.ph

if.then4:                                         ; preds = %if.then
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %2 = load double*, double** %gradient_, align 8, !tbaa !357
  %tobool.not = icmp eq double* %2, null
  br i1 %tobool.not, label %if.end11, label %delete.notnull

delete.notnull:                                   ; preds = %if.then4
  %3 = bitcast double* %2 to i8*
  tail call void @_ZdaPv(i8* %3) #43
  %.pre = load i32, i32* %max_gradient_, align 8, !tbaa !388
  br label %if.end11

if.end11:                                         ; preds = %if.then4, %delete.notnull
  %4 = phi i32 [ %.pre, %delete.notnull ], [ %0, %if.then4 ]
  %conv = sext i32 %4 to i64
  %5 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 8)
  %6 = extractvalue { i64, i1 } %5, 1
  %7 = extractvalue { i64, i1 } %5, 0
  %8 = select i1 %6, i64 -1, i64 %7
  %call = tail call noalias nonnull i8* @_Znam(i64 %8) #44
  %9 = bitcast double** %gradient_ to i8**
  store i8* %call, i8** %9, align 8, !tbaa !357
  store i32 %4, i32* %n_allocated_gradients_, align 4, !tbaa !396
  %cmp135 = icmp sgt i32 %4, 0
  br i1 %cmp135, label %for.body.lr.ph, label %if.end15

for.body.lr.ph:                                   ; preds = %if.then, %if.end11
  %10 = phi i32 [ %4, %if.end11 ], [ %0, %if.then ]
  %gradient_14 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %11 = bitcast double** %gradient_14 to i8**
  %12 = load i8*, i8** %11, align 8, !tbaa !357
  %13 = zext i32 %10 to i64
  %14 = shl nuw nsw i64 %13, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 %14, i1 false)
  br label %if.end15

if.end15:                                         ; preds = %for.body.lr.ph, %if.end11, %entry
  %gradients_initialized_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  store i8 1, i8* %gradients_initialized_, align 8, !tbaa !367
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #17

; Function Attrs: nobuiltin nofree allocsize(0)
declare dso_local nonnull i8* @_Znam(i64) local_unnamed_addr #24

; Function Attrs: uwtable
define dso_local void @_ZNK5adept5Stack12print_statusERSo(%"class.adept::Stack"* nonnull dereferenceable(149) %this, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os) local_unnamed_addr #0 align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %call1.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([42 x i8], [42 x i8]* @.str.68, i64 0, i64 0), i64 41)
  %0 = bitcast %"class.adept::Stack"* %this to i8*
  %call.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIPKvEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i8* nonnull %0)
  %call1.i33 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i, i8* nonnull getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i64 0, i64 0), i64 3)
  %is_thread_unsafe_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 11
  %1 = load i8, i8* %is_thread_unsafe_, align 1, !tbaa !351, !range !356
  %tobool = icmp ne i8 %1, 0
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8
  %cmp = icmp ne %"class.adept::Stack"* %2, %this
  %3 = or i1 %tobool, %cmp
  br i1 %3, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call1.i35 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i64 0, i64 0), i64 36)
  br label %if.end13

if.else:                                          ; preds = %entry
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8
  %cmp8 = icmp eq %"class.adept::Stack"* %4, %this
  %or.cond1 = and i1 %tobool, %cmp8
  br i1 %or.cond1, label %if.then9, label %if.else11

if.then9:                                         ; preds = %if.else
  %call1.i37 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([39 x i8], [39 x i8]* @.str.71, i64 0, i64 0), i64 38)
  br label %if.end13

if.else11:                                        ; preds = %if.else
  %call1.i39 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.72, i64 0, i64 0), i64 22)
  br label %if.end13

if.end13:                                         ; preds = %if.then9, %if.else11, %if.then
  %call1.i41 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i64 0, i64 0), i64 21)
  %is_recording_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 12
  %5 = load i8, i8* %is_recording_, align 2, !tbaa !397, !range !356
  %tobool15.not = icmp eq i8 %5, 0
  br i1 %tobool15.not, label %if.else18, label %if.then16

if.then16:                                        ; preds = %if.end13
  %call1.i43 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([23 x i8], [23 x i8]* @.str.74, i64 0, i64 0), i64 22)
  br label %if.end20

if.else18:                                        ; preds = %if.end13
  %call1.i45 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0), i64 26)
  br label %if.end20

if.end20:                                         ; preds = %if.else18, %if.then16
  %call1.i47 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0), i64 6)
  %n_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %6 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %sub = add nsw i32 %6, -1
  %call23 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %sub)
  %call1.i49 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call23, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.77, i64 0, i64 0), i64 13)
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 4
  %7 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %call26 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call23, i32 %7)
  %call1.i51 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call26, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.78, i64 0, i64 0), i64 11)
  %call1.i53 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), i64 5)
  %n_operations_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 5
  %8 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %call30 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %8)
  %call1.i55 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call30, i8* nonnull getelementptr inbounds ([14 x i8], [14 x i8]* @.str.80, i64 0, i64 0), i64 13)
  %n_allocated_operations_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 6
  %9 = load i32, i32* %n_allocated_operations_.i, align 4, !tbaa !400
  %call33 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call30, i32 %9)
  %call1.i57 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call33, i8* nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0), i64 12)
  %call1.i59 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0), i64 6)
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 9
  %10 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %call37 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %10)
  %call1.i61 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call37, i8* nonnull getelementptr inbounds ([33 x i8], [33 x i8]* @.str.82, i64 0, i64 0), i64 32)
  %call1.i63 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i64 0, i64 0), i64 15)
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %11 = load i32, i32* %max_gradient_.i, align 8, !tbaa !388
  %call41 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %11)
  %call1.i65 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call41, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.84, i64 0, i64 0), i64 23)
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 6
  %12 = load i32, i32* %i_gradient_.i, align 8, !tbaa !387
  %call44 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call41, i32 %12)
  %call1.i67 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call44, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i64 0, i64 0), i64 2)
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %13 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i, align 8, !tbaa !358
  %cmp.i = icmp eq %"struct.std::__detail::_List_node_base"* %14, %13
  br i1 %cmp.i, label %if.then47, label %if.else49

if.then47:                                        ; preds = %if.end20
  %call1.i69 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([33 x i8], [33 x i8]* @.str.86, i64 0, i64 0), i64 32)
  br label %if.end56

if.else49:                                        ; preds = %if.end20
  %call1.i71 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([25 x i8], [25 x i8]* @.str.87, i64 0, i64 0), i64 24)
  %_M_size.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %_M_size.i.i.i, align 8, !tbaa !381
  %call.i72 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i64 %15)
  %call1.i74 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call.i72, i8* nonnull getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0), i64 7)
  %it.sroa.0.09.i = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i, align 8, !tbaa !358
  %cmp.i.not10.i = icmp eq %"struct.std::__detail::_List_node_base"* %it.sroa.0.09.i, %13
  br i1 %cmp.i.not10.i, label %_ZNK5adept5Stack10print_gapsERSo.exit, label %for.body.i

for.body.i:                                       ; preds = %if.else49, %for.body.i
  %it.sroa.0.011.i = phi %"struct.std::__detail::_List_node_base"* [ %it.sroa.0.0.i, %for.body.i ], [ %it.sroa.0.09.i, %if.else49 ]
  %_M_storage.i.i4.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.011.i, i64 1
  %16 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i4.i to %"struct.adept::Gap"*
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i4.i to i32*
  %17 = load i32, i32* %start.i, align 4, !tbaa !379
  %call7.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %17)
  %call1.i3.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call7.i, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i64 0, i64 0), i64 1)
  %end.i = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %16, i64 0, i32 1
  %18 = load i32, i32* %end.i, align 4, !tbaa !377
  %call10.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call7.i, i32 %18)
  %call1.i.i = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call10.i, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0), i64 1)
  %_M_next.i1.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %it.sroa.0.011.i, i64 0, i32 0
  %it.sroa.0.0.i = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i1.i, align 8, !tbaa !358
  %cmp.i.not.i = icmp eq %"struct.std::__detail::_List_node_base"* %it.sroa.0.0.i, %13
  br i1 %cmp.i.not.i, label %_ZNK5adept5Stack10print_gapsERSo.exit, label %for.body.i, !llvm.loop !395

_ZNK5adept5Stack10print_gapsERSo.exit:            ; preds = %for.body.i, %if.else49
  %call1.i76 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i64 0, i64 0), i64 2)
  br label %if.end56

if.end56:                                         ; preds = %_ZNK5adept5Stack10print_gapsERSo.exit, %if.then47
  %call1.i78 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([24 x i8], [24 x i8]* @.str.89, i64 0, i64 0), i64 23)
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  %19 = load i8, i8* %gradients_initialized_.i, align 8, !tbaa !367, !range !356
  %tobool.i.not = icmp eq i8 %19, 0
  br i1 %tobool.i.not, label %if.else67, label %if.then59

if.then59:                                        ; preds = %if.end56
  %call1.i80 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0), i64 6)
  %20 = load i32, i32* %max_gradient_.i, align 8, !tbaa !388
  %call62 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %20)
  %call1.i83 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call62, i8* nonnull getelementptr inbounds ([22 x i8], [22 x i8]* @.str.90, i64 0, i64 0), i64 21)
  br label %if.end72

if.else67:                                        ; preds = %if.end56
  %call1.i87 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([29 x i8], [29 x i8]* @.str.91, i64 0, i64 0), i64 28)
  br label %if.end72

if.end72:                                         ; preds = %if.else67, %if.then59
  %os.sink = phi %"class.std::basic_ostream"* [ %os, %if.else67 ], [ %call62, %if.then59 ]
  %n_allocated_gradients_.i88 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 7
  %21 = load i32, i32* %n_allocated_gradients_.i88, align 4, !tbaa !396
  %call70 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os.sink, i32 %21)
  %call1.i90 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call70, i8* nonnull getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0), i64 12)
  %call1.i92 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([22 x i8], [22 x i8]* @.str.92, i64 0, i64 0), i64 21)
  %_M_finish.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %22 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !401
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %23 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %22 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %23 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %24 = lshr exact i64 %sub.ptr.sub.i.i, 2
  %conv.i = trunc i64 %24 to i32
  %call75 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %conv.i)
  %call1.i94 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call75, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.93, i64 0, i64 0), i64 1)
  %_M_finish.i.i95 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %25 = load i32*, i32** %_M_finish.i.i95, align 8, !tbaa !401
  %_M_start.i.i96 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %26 = load i32*, i32** %_M_start.i.i96, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i97 = ptrtoint i32* %25 to i64
  %sub.ptr.rhs.cast.i.i98 = ptrtoint i32* %26 to i64
  %sub.ptr.sub.i.i99 = sub i64 %sub.ptr.lhs.cast.i.i97, %sub.ptr.rhs.cast.i.i98
  %27 = lshr exact i64 %sub.ptr.sub.i.i99, 2
  %conv.i100 = trunc i64 %27 to i32
  %call78 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call75, i32 %conv.i100)
  %call1.i102 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call78, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1)
  %28 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !401
  %29 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i105 = ptrtoint i32* %28 to i64
  %sub.ptr.rhs.cast.i.i106 = ptrtoint i32* %29 to i64
  %sub.ptr.sub.i.i107 = sub i64 %sub.ptr.lhs.cast.i.i105, %sub.ptr.rhs.cast.i.i106
  %30 = lshr exact i64 %sub.ptr.sub.i.i107, 2
  %conv.i108 = trunc i64 %30 to i32
  %cmp81 = icmp slt i32 %conv.i108, 11
  br i1 %cmp81, label %land.lhs.true82, label %if.end108

land.lhs.true82:                                  ; preds = %if.end72
  %31 = load i32*, i32** %_M_finish.i.i95, align 8, !tbaa !401
  %32 = load i32*, i32** %_M_start.i.i96, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i111 = ptrtoint i32* %31 to i64
  %sub.ptr.rhs.cast.i.i112 = ptrtoint i32* %32 to i64
  %sub.ptr.sub.i.i113 = sub i64 %sub.ptr.lhs.cast.i.i111, %sub.ptr.rhs.cast.i.i112
  %33 = lshr exact i64 %sub.ptr.sub.i.i113, 2
  %conv.i114 = trunc i64 %33 to i32
  %cmp84 = icmp slt i32 %conv.i114, 11
  br i1 %cmp84, label %if.then85, label %if.end108

if.then85:                                        ; preds = %land.lhs.true82
  %call1.i116 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([27 x i8], [27 x i8]* @.str.94, i64 0, i64 0), i64 26)
  %34 = load i32*, i32** %_M_finish.i.i95, align 8, !tbaa !401
  %35 = load i32*, i32** %_M_start.i.i96, align 8, !tbaa !361
  %cmp88146.not = icmp eq i32* %34, %35
  br i1 %cmp88146.not, label %for.cond.cleanup, label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %if.then85
  %call1.i118 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([28 x i8], [28 x i8]* @.str.95, i64 0, i64 0), i64 27)
  %36 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !401
  %37 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %cmp97140.not = icmp eq i32* %36, %37
  br i1 %cmp97140.not, label %for.cond.cleanup98, label %for.body99

for.body:                                         ; preds = %if.then85, %for.body
  %i.0147 = phi i64 [ %inc, %for.body ], [ 0, %if.then85 ]
  %call1.i120 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0), i64 1)
  %38 = load i32*, i32** %_M_start.i.i96, align 8, !tbaa !361
  %add.ptr.i = getelementptr inbounds i32, i32* %38, i64 %i.0147
  %39 = load i32, i32* %add.ptr.i, align 4, !tbaa !47
  %call92 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %39)
  %inc = add nuw i64 %i.0147, 1
  %40 = load i32*, i32** %_M_finish.i.i95, align 8, !tbaa !401
  %41 = load i32*, i32** %_M_start.i.i96, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i = ptrtoint i32* %40 to i64
  %sub.ptr.rhs.cast.i = ptrtoint i32* %41 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 2
  %cmp88 = icmp ult i64 %inc, %sub.ptr.div.i
  br i1 %cmp88, label %for.body, label %for.cond.cleanup, !llvm.loop !402

for.cond.cleanup98:                               ; preds = %for.body99, %for.cond.cleanup
  %call1.i129 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1)
  br label %if.end108

for.body99:                                       ; preds = %for.cond.cleanup, %for.body99
  %i94.0141 = phi i64 [ %inc105, %for.body99 ], [ 0, %for.cond.cleanup ]
  %call1.i131 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0), i64 1)
  %42 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %add.ptr.i133 = getelementptr inbounds i32, i32* %42, i64 %i94.0141
  %43 = load i32, i32* %add.ptr.i133, align 4, !tbaa !47
  %call103 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %os, i32 %43)
  %inc105 = add nuw i64 %i94.0141, 1
  %44 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !401
  %45 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i124 = ptrtoint i32* %44 to i64
  %sub.ptr.rhs.cast.i125 = ptrtoint i32* %45 to i64
  %sub.ptr.sub.i126 = sub i64 %sub.ptr.lhs.cast.i124, %sub.ptr.rhs.cast.i125
  %sub.ptr.div.i127 = ashr exact i64 %sub.ptr.sub.i126, 2
  %cmp97 = icmp ult i64 %inc105, %sub.ptr.div.i127
  br i1 %cmp97, label %for.body99, label %for.cond.cleanup98, !llvm.loop !403

if.end108:                                        ; preds = %for.cond.cleanup98, %land.lhs.true82, %if.end72
  %call1.i135 = tail call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os, i8* nonnull getelementptr inbounds ([51 x i8], [51 x i8]* @.str.96, i64 0, i64 0), i64 50)
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nocapture nonnull dereferenceable(40) %this, i32 %min) local_unnamed_addr #10 align 2 {
entry:
  %n_allocated_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 6
  %0 = load i32, i32* %n_allocated_operations_, align 4, !tbaa !400
  %mul = shl nsw i32 %0, 1
  %cmp = icmp sgt i32 %min, 0
  %add = add nsw i32 %0, %min
  %cmp3 = icmp slt i32 %mul, %add
  %or.cond = and i1 %cmp, %cmp3
  %add4 = select i1 %or.cond, i32 %min, i32 0
  %new_size.0 = add nsw i32 %add4, %mul
  %conv = sext i32 %new_size.0 to i64
  %1 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 8)
  %2 = extractvalue { i64, i1 } %1, 1
  %3 = extractvalue { i64, i1 } %1, 0
  %4 = select i1 %2, i64 -1, i64 %3
  %call = tail call noalias nonnull i8* @_Znam(i64 %4) #44
  %5 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 4)
  %6 = extractvalue { i64, i1 } %5, 1
  %7 = extractvalue { i64, i1 } %5, 0
  %8 = select i1 %6, i64 -1, i64 %7
  %call6 = tail call noalias nonnull i8* @_Znam(i64 %8) #44
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 1
  %9 = bitcast double** %multiplier_ to i8**
  %10 = load i8*, i8** %9, align 8, !tbaa !365
  %n_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 5
  %11 = load i32, i32* %n_operations_, align 8, !tbaa !399
  %conv7 = sext i32 %11 to i64
  %mul8 = shl nsw i64 %conv7, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %call, i8* align 8 %10, i64 %mul8, i1 false)
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 2
  %12 = bitcast i32** %index_ to i8**
  %13 = load i8*, i8** %12, align 8, !tbaa !366
  %mul11 = shl nsw i64 %conv7, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call6, i8* align 4 %13, i64 %mul11, i1 false)
  %isnull = icmp eq i8* %10, null
  %14 = bitcast i8* %13 to i32*
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  tail call void @_ZdaPv(i8* nonnull %10) #43
  %.pr = load i32*, i32** %index_, align 8, !tbaa !366
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  %15 = phi i32* [ %.pr, %delete.notnull ], [ %14, %entry ]
  %isnull14 = icmp eq i32* %15, null
  br i1 %isnull14, label %delete.end16, label %delete.notnull15

delete.notnull15:                                 ; preds = %delete.end
  %16 = bitcast i32* %15 to i8*
  tail call void @_ZdaPv(i8* %16) #43
  br label %delete.end16

delete.end16:                                     ; preds = %delete.notnull15, %delete.end
  store i8* %call, i8** %9, align 8, !tbaa !365
  store i8* %call6, i8** %12, align 8, !tbaa !366
  store i32 %new_size.0, i32* %n_allocated_operations_, align 4, !tbaa !400
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi(%"class.adept::internal::StackStorageOrig"* nocapture nonnull dereferenceable(40) %this, i32 %min) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %n_allocated_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 4
  %0 = load i32, i32* %n_allocated_statements_, align 4, !tbaa !398
  %mul = shl nsw i32 %0, 1
  %cmp = icmp sgt i32 %min, 0
  %add = add nsw i32 %0, %min
  %cmp3 = icmp slt i32 %mul, %add
  %or.cond = and i1 %cmp, %cmp3
  %add4 = select i1 %or.cond, i32 %min, i32 0
  %new_size.0 = add nsw i32 %add4, %mul
  %conv = sext i32 %new_size.0 to i64
  %1 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 8)
  %2 = extractvalue { i64, i1 } %1, 1
  %3 = extractvalue { i64, i1 } %1, 0
  %4 = select i1 %2, i64 -1, i64 %3
  %call = tail call noalias nonnull i8* @_Znam(i64 %4) #44
  %5 = bitcast %"class.adept::internal::StackStorageOrig"* %this to i8**
  %6 = load i8*, i8** %5, align 8, !tbaa !363
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this, i64 0, i32 3
  %7 = load i32, i32* %n_statements_, align 8, !tbaa !368
  %conv5 = sext i32 %7 to i64
  %mul6 = shl nsw i64 %conv5, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call, i8* align 4 %6, i64 %mul6, i1 false)
  %isnull = icmp eq i8* %6, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  tail call void @_ZdaPv(i8* nonnull %6) #43
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %entry
  store i8* %call, i8** %5, align 8, !tbaa !363
  store i32 %new_size.0, i32* %n_allocated_statements_, align 4, !tbaa !398
  ret void
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_gemmEbcciiidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %TransA, i8 signext %TransB, i32 %M, i32 %N, i32 %K, double %alpha, double* nocapture readnone %A, i32 %lda, double* nocapture readnone %B, i32 %ldb, double %beta, double* nocapture readnone %C, i32 %ldc) local_unnamed_addr #25 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 73, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(73) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(73) getelementptr inbounds ([74 x i8], [74 x i8]* @.str.97, i64 0, i64 0), i64 73, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept9exceptionD2Ev(%"class.adept::exception"* nonnull dereferenceable(40) %this) unnamed_addr #5 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !74
  %_M_p.i.i.i.i = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 1, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %entry, %if.then.i.i
  %3 = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #38
  ret void
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_gemmEbcciiifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %TransA, i8 signext %TransB, i32 %M, i32 %N, i32 %K, float %alpha, float* nocapture readnone %A, i32 %lda, float* nocapture readnone %B, i32 %ldb, float %beta, float* nocapture readnone %C, i32 %ldc) local_unnamed_addr #25 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 73, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(73) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(73) getelementptr inbounds ([74 x i8], [74 x i8]* @.str.97, i64 0, i64 0), i64 73, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_gemvEbciidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %TransA, i32 %M, i32 %N, double %alpha, double* nocapture readnone %A, i32 %lda, double* nocapture readnone %X, i32 %incX, double %beta, double* nocapture readnone %Y, i32 %incY) local_unnamed_addr #25 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 73, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(73) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(73) getelementptr inbounds ([74 x i8], [74 x i8]* @.str.98, i64 0, i64 0), i64 73, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_gemvEbciifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %TransA, i32 %M, i32 %N, float %alpha, float* nocapture readnone %A, i32 %lda, float* nocapture readnone %X, i32 %incX, float %beta, float* nocapture readnone %Y, i32 %incY) local_unnamed_addr #25 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 73, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(73) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(73) getelementptr inbounds ([74 x i8], [74 x i8]* @.str.98, i64 0, i64 0), i64 73, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_symmEbcciidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %Side, i8 signext %Uplo, i32 %M, i32 %N, double %alpha, double* nocapture readnone %A, i32 %lda, double* nocapture readnone %B, i32 %ldb, double %beta, double* nocapture readnone %C, i32 %ldc) local_unnamed_addr #25 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 83, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(83) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(83) getelementptr inbounds ([84 x i8], [84 x i8]* @.str.99, i64 0, i64 0), i64 83, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_symmEbcciifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %Side, i8 signext %Uplo, i32 %M, i32 %N, float %alpha, float* nocapture readnone %A, i32 %lda, float* nocapture readnone %B, i32 %ldb, float %beta, float* nocapture readnone %C, i32 %ldc) local_unnamed_addr #25 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 83, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(83) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(83) getelementptr inbounds ([84 x i8], [84 x i8]* @.str.99, i64 0, i64 0), i64 83, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_symvEbcidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %Uplo, i32 %N, double %alpha, double* nocapture readnone %A, i32 %lda, double* nocapture readnone %X, i32 %incX, double %beta, double* nocapture readnone %Y, i32 %incY) local_unnamed_addr #25 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 83, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(83) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(83) getelementptr inbounds ([84 x i8], [84 x i8]* @.str.100, i64 0, i64 0), i64 83, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_symvEbcifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %Uplo, i32 %N, float %alpha, float* nocapture readnone %A, i32 %lda, float* nocapture readnone %X, i32 %incX, float %beta, float* nocapture readnone %Y, i32 %incY) local_unnamed_addr #25 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 83, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(83) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(83) getelementptr inbounds ([84 x i8], [84 x i8]* @.str.100, i64 0, i64 0), i64 83, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_gbmvEbciiiidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %TransA, i32 %M, i32 %N, i32 %KL, i32 %KU, double %alpha, double* nocapture readnone %A, i32 %lda, double* nocapture readnone %X, i32 %incX, double %beta, double* nocapture readnone %Y, i32 %incY) local_unnamed_addr #25 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 78, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(78) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(78) getelementptr inbounds ([79 x i8], [79 x i8]* @.str.101, i64 0, i64 0), i64 78, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: noreturn uwtable
define dso_local void @_ZN5adept8internal12cppblas_gbmvEbciiiifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %TransA, i32 %M, i32 %N, i32 %KL, i32 %KU, float %alpha, float* nocapture readnone %A, i32 %lda, float* nocapture readnone %X, i32 %incX, float %beta, float* nocapture readnone %Y, i32 %incY) local_unnamed_addr #25 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 78, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(78) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(78) getelementptr inbounds ([79 x i8], [79 x i8]* @.str.101, i64 0, i64 0), i64 78, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept3invIfEENS_5ArrayILi2ET_Lb0EEERKS3_(%"class.adept::Array"* noalias sret(%"class.adept::Array") align 8 %agg.result, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %A) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 52, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(52) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(52) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), i64 52, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept3invIfLNS_8internal21SymmMatrixOrientationE0EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_(%"class.adept::SpecialMatrix"* noalias sret(%"class.adept::SpecialMatrix") align 8 %agg.result, %"class.adept::SpecialMatrix"* nonnull align 8 dereferenceable(24) %A) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 52, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(52) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(52) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), i64 52, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept3invIfLNS_8internal21SymmMatrixOrientationE1EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_(%"class.adept::SpecialMatrix.19"* noalias sret(%"class.adept::SpecialMatrix.19") align 8 %agg.result, %"class.adept::SpecialMatrix.19"* nonnull align 8 dereferenceable(24) %A) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 52, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(52) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(52) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), i64 52, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept3invIdEENS_5ArrayILi2ET_Lb0EEERKS3_(%"class.adept::Array.22"* noalias sret(%"class.adept::Array.22") align 8 %agg.result, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %A) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 52, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(52) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(52) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), i64 52, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept3invIdLNS_8internal21SymmMatrixOrientationE0EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_(%"class.adept::SpecialMatrix.25"* noalias sret(%"class.adept::SpecialMatrix.25") align 8 %agg.result, %"class.adept::SpecialMatrix.25"* nonnull align 8 dereferenceable(24) %A) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 52, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(52) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(52) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), i64 52, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept3invIdLNS_8internal21SymmMatrixOrientationE1EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_(%"class.adept::SpecialMatrix.27"* noalias sret(%"class.adept::SpecialMatrix.27") align 8 %agg.result, %"class.adept::SpecialMatrix.27"* nonnull align 8 dereferenceable(24) %A) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 52, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(52) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(52) getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), i64 52, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_ZNK5adept5Stack23jacobian_forward_kernelEPd(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this, double* noalias nocapture %gradient_multipass_b) local_unnamed_addr #26 align 2 {
entry:
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %0 = load i32, i32* %n_statements_, align 8, !tbaa !368
  %cmp25 = icmp sgt i32 %0, 1
  br i1 %cmp25, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %1 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !363
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %wide.trip.count = zext i32 %0 to i64
  %end_plus_one.phi.trans.insert = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 0, i32 1
  %.pre = load i32, i32* %end_plus_one.phi.trans.insert, align 4, !tbaa !371
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup8, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.cleanup8
  %2 = phi i32 [ %.pre, %for.body.lr.ph ], [ %3, %for.cond.cleanup8 ]
  %indvars.iv27 = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next28, %for.cond.cleanup8 ]
  %end_plus_one6 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 %indvars.iv27, i32 1
  %3 = load i32, i32* %end_plus_one6, align 4, !tbaa !371
  %cmp722 = icmp slt i32 %2, %3
  br i1 %cmp722, label %for.body9.lr.ph, label %for.cond.cleanup8

for.body9.lr.ph:                                  ; preds = %for.body
  %4 = load i32*, i32** %index_, align 8, !tbaa !366
  %5 = load double*, double** %multiplier_, align 8, !tbaa !365
  %6 = sext i32 %2 to i64
  %7 = sext i32 %3 to i64
  br label %for.body9

for.cond.cleanup8:                                ; preds = %for.body9, %for.body
  %a.sroa.0.0.lcssa = phi <2 x double> [ zeroinitializer, %for.body ], [ %add.i.i, %for.body9 ]
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 %indvars.iv27, i32 0
  %8 = load i32, i32* %index, align 4, !tbaa !369
  %mul15 = shl nsw i32 %8, 1
  %idx.ext16 = sext i32 %mul15 to i64
  %add.ptr17 = getelementptr inbounds double, double* %gradient_multipass_b, i64 %idx.ext16
  %9 = bitcast double* %add.ptr17 to <2 x double>*
  store <2 x double> %a.sroa.0.0.lcssa, <2 x double>* %9, align 16, !tbaa !21, !alias.scope !404
  %indvars.iv.next28 = add nuw nsw i64 %indvars.iv27, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next28, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !407

for.body9:                                        ; preds = %for.body9.lr.ph, %for.body9
  %indvars.iv = phi i64 [ %6, %for.body9.lr.ph ], [ %indvars.iv.next, %for.body9 ]
  %a.sroa.0.023 = phi <2 x double> [ zeroinitializer, %for.body9.lr.ph ], [ %add.i.i, %for.body9 ]
  %arrayidx11 = getelementptr inbounds i32, i32* %4, i64 %indvars.iv
  %10 = load i32, i32* %arrayidx11, align 4, !tbaa !47
  %mul = shl nsw i32 %10, 1
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds double, double* %gradient_multipass_b, i64 %idx.ext
  %11 = bitcast double* %add.ptr to <2 x double>*
  %12 = load <2 x double>, <2 x double>* %11, align 16, !tbaa !21
  %arrayidx13 = getelementptr inbounds double, double* %5, i64 %indvars.iv
  %13 = load double, double* %arrayidx13, align 8, !tbaa !70
  %vecinit.i.i = insertelement <2 x double> undef, double %13, i32 0
  %vecinit1.i.i = shufflevector <2 x double> %vecinit.i.i, <2 x double> undef, <2 x i32> zeroinitializer
  %mul.i.i = fmul fast <2 x double> %vecinit1.i.i, %12
  %add.i.i = fadd fast <2 x double> %mul.i.i, %a.sroa.0.023
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %cmp7 = icmp slt i64 %indvars.iv.next, %7
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8, !llvm.loop !408
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this, double* noalias nocapture %gradient_multipass_b, i32 %n_extra) local_unnamed_addr #27 align 2 {
entry:
  %a = alloca %"struct.adept::Block", align 8
  %a37 = bitcast %"struct.adept::Block"* %a to i8*
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %0 = load i32, i32* %n_statements_, align 8, !tbaa !368
  %cmp30 = icmp sgt i32 %0, 1
  br i1 %cmp30, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %1 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !363
  %cmp1123 = icmp sgt i32 %n_extra, 0
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %2 = zext i32 %n_extra to i64
  %3 = shl nuw nsw i64 %2, 3
  %wide.trip.count44 = zext i32 %0 to i64
  %end_plus_one.phi.trans.insert = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 0, i32 1
  %.pre = load i32, i32* %end_plus_one.phi.trans.insert, align 4, !tbaa !371
  %min.iters.check = icmp ult i32 %n_extra, 4
  %n.vec = and i64 %2, 4294967292
  %cmp.n = icmp eq i64 %n.vec, %2
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup28, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.cleanup28
  %4 = phi i32 [ %.pre, %for.body.lr.ph ], [ %5, %for.cond.cleanup28 ]
  %indvars.iv41 = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next42, %for.cond.cleanup28 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %a37) #38
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %a37, i8 0, i64 16, i1 false) #38
  %end_plus_one6 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 %indvars.iv41, i32 1
  %5 = load i32, i32* %end_plus_one6, align 4, !tbaa !371
  %cmp725 = icmp slt i32 %4, %5
  br i1 %cmp725, label %for.cond10.preheader.lr.ph, label %for.cond26.preheader

for.cond10.preheader.lr.ph:                       ; preds = %for.body
  %6 = sext i32 %4 to i64
  %7 = sext i32 %5 to i64
  br label %for.cond10.preheader

for.cond26.preheader:                             ; preds = %for.cond.cleanup12, %for.body
  br i1 %cmp1123, label %for.body29.lr.ph, label %for.cond.cleanup28

for.body29.lr.ph:                                 ; preds = %for.cond26.preheader
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %1, i64 %indvars.iv41, i32 0
  %8 = load i32, i32* %index, align 4, !tbaa !369
  %9 = shl i32 %8, 1
  %10 = sext i32 %9 to i64
  %scevgep = getelementptr double, double* %gradient_multipass_b, i64 %10
  %scevgep36 = bitcast double* %scevgep to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %scevgep36, i8* nonnull align 8 %a37, i64 %3, i1 false)
  br label %for.cond.cleanup28

for.cond10.preheader:                             ; preds = %for.cond10.preheader.lr.ph, %for.cond.cleanup12
  %indvars.iv34 = phi i64 [ %6, %for.cond10.preheader.lr.ph ], [ %indvars.iv.next35, %for.cond.cleanup12 ]
  br i1 %cmp1123, label %for.body13.lr.ph, label %for.cond.cleanup12

for.body13.lr.ph:                                 ; preds = %for.cond10.preheader
  %11 = load double*, double** %multiplier_, align 8, !tbaa !365
  %arrayidx15 = getelementptr inbounds double, double* %11, i64 %indvars.iv34
  %12 = load double, double* %arrayidx15, align 8, !tbaa !70
  %13 = load i32*, i32** %index_, align 8, !tbaa !366
  %arrayidx17 = getelementptr inbounds i32, i32* %13, i64 %indvars.iv34
  %14 = load i32, i32* %arrayidx17, align 4, !tbaa !47
  %mul = shl nsw i32 %14, 1
  %15 = sext i32 %mul to i64
  br i1 %min.iters.check, label %for.body13.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body13.lr.ph
  %broadcast.splatinsert = insertelement <2 x double> poison, double %12, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert48 = insertelement <2 x double> poison, double %12, i32 0
  %broadcast.splat49 = shufflevector <2 x double> %broadcast.splatinsert48, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index46 = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %16 = add nsw i64 %index46, %15
  %17 = getelementptr inbounds double, double* %gradient_multipass_b, i64 %16
  %18 = bitcast double* %17 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %18, align 8, !tbaa !70
  %19 = getelementptr inbounds double, double* %17, i64 2
  %20 = bitcast double* %19 to <2 x double>*
  %wide.load47 = load <2 x double>, <2 x double>* %20, align 8, !tbaa !70
  %21 = fmul fast <2 x double> %wide.load, %broadcast.splat
  %22 = fmul fast <2 x double> %wide.load47, %broadcast.splat49
  %23 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %a, i64 0, i32 0, i64 %index46
  %24 = bitcast double* %23 to <2 x double>*
  %wide.load50 = load <2 x double>, <2 x double>* %24, align 8, !tbaa !70
  %25 = getelementptr inbounds double, double* %23, i64 2
  %26 = bitcast double* %25 to <2 x double>*
  %wide.load51 = load <2 x double>, <2 x double>* %26, align 8, !tbaa !70
  %27 = fadd fast <2 x double> %wide.load50, %21
  %28 = fadd fast <2 x double> %wide.load51, %22
  %29 = bitcast double* %23 to <2 x double>*
  store <2 x double> %27, <2 x double>* %29, align 8, !tbaa !70
  %30 = bitcast double* %25 to <2 x double>*
  store <2 x double> %28, <2 x double>* %30, align 8, !tbaa !70
  %index.next = add i64 %index46, 4
  %31 = icmp eq i64 %index.next, %n.vec
  br i1 %31, label %middle.block, label %vector.body, !llvm.loop !409

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond.cleanup12, label %for.body13.preheader

for.body13.preheader:                             ; preds = %for.body13.lr.ph, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.body13.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body13

for.cond.cleanup12:                               ; preds = %for.body13, %middle.block, %for.cond10.preheader
  %indvars.iv.next35 = add nsw i64 %indvars.iv34, 1
  %cmp7 = icmp slt i64 %indvars.iv.next35, %7
  br i1 %cmp7, label %for.cond10.preheader, label %for.cond26.preheader, !llvm.loop !410

for.body13:                                       ; preds = %for.body13.preheader, %for.body13
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body13 ], [ %indvars.iv.ph, %for.body13.preheader ]
  %32 = add nsw i64 %indvars.iv, %15
  %arrayidx19 = getelementptr inbounds double, double* %gradient_multipass_b, i64 %32
  %33 = load double, double* %arrayidx19, align 8, !tbaa !70
  %mul20 = fmul fast double %33, %12
  %arrayidx.i22 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %a, i64 0, i32 0, i64 %indvars.iv
  %34 = load double, double* %arrayidx.i22, align 8, !tbaa !70
  %add21 = fadd fast double %34, %mul20
  store double %add21, double* %arrayidx.i22, align 8, !tbaa !70
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %2
  br i1 %exitcond.not, label %for.cond.cleanup12, label %for.body13, !llvm.loop !411

for.cond.cleanup28:                               ; preds = %for.body29.lr.ph, %for.cond26.preheader
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %a37) #38
  %indvars.iv.next42 = add nuw nsw i64 %indvars.iv41, 1
  %exitcond45.not = icmp eq i64 %indvars.iv.next42, %wide.trip.count44
  br i1 %exitcond45.not, label %for.cond.cleanup, label %for.body, !llvm.loop !412
}

; Function Attrs: uwtable
define dso_local void @_ZNK5adept5Stack23jacobian_forward_openmpEPd(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this, double* nocapture %jacobian_out) local_unnamed_addr #28 align 2 {
entry:
  %result.i = alloca double*, align 8
  %_M_finish.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !401
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %2 = lshr exact i64 %sub.ptr.sub.i.i, 2
  %conv.i = trunc i64 %2 to i32
  %sub = add nsw i32 %conv.i, 1
  %div = sdiv i32 %sub, 2
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %3 = load i32, i32* %max_gradient_, align 8, !tbaa !388
  %mul = shl i32 %3, 1
  %4 = bitcast double** %result.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  %5 = bitcast double** %result.i to i8**
  %conv1.i = sext i32 %mul to i64
  %mul.i56 = shl nsw i64 %conv1.i, 3
  %call2.i = call i32 @posix_memalign(i8** nonnull %5, i64 16, i64 %mul.i56) #38
  %cmp3.not.i = icmp eq i32 %call2.i, 0
  br i1 %cmp3.not.i, label %_ZN5adept8internal13alloc_alignedIdEEPT_i.exit, label %if.then4.i

if.then4.i:                                       ; preds = %entry
  %exception.i = call i8* @__cxa_allocate_exception(i64 8) #38
  %6 = bitcast i8* %exception.i to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  call void @__cxa_throw(i8* %exception.i, i8* bitcast (i8** @_ZTISt9bad_alloc to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD1Ev to i8*)) #40
  unreachable

_ZN5adept8internal13alloc_alignedIdEEPT_i.exit:   ; preds = %entry
  %7 = load double*, double** %result.i, align 8, !tbaa !61
  %8 = bitcast double* %7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %cmp68 = icmp sgt i32 %conv.i, 0
  br i1 %cmp68, label %for.body.lr.ph, label %for.end55

for.body.lr.ph:                                   ; preds = %_ZN5adept8internal13alloc_alignedIdEEPT_i.exit
  %sub5 = add nsw i32 %div, -1
  %9 = and i32 %conv.i, -2147483647
  %cmp7 = icmp eq i32 %9, 1
  %cmp957 = icmp sgt i32 %3, 0
  %n_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %10 = load i32, i32* %n_statements_.i, align 8, !tbaa !368, !noalias !413
  %cmp25.i = icmp sgt i32 %10, 1
  %statement_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %index_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %multiplier_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %wide.trip.count.i = zext i32 %10 to i64
  %_M_finish.i.i47 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %_M_start.i.i48 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %11 = icmp sgt i32 %mul, 1
  %smax = select i1 %11, i32 %mul, i32 1
  %12 = zext i32 %smax to i64
  %13 = shl nuw nsw i64 %12, 3
  %14 = zext i32 %sub5 to i64
  %15 = icmp sgt i32 %div, 1
  %smax88 = select i1 %15, i32 %div, i32 1
  %wide.trip.count89 = zext i32 %smax88 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.cleanup28
  %indvars.iv85 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next86, %for.cond.cleanup28 ]
  %16 = shl nuw nsw i64 %indvars.iv85, 1
  %cmp6 = icmp eq i64 %indvars.iv85, %14
  %or.cond = and i1 %cmp7, %cmp6
  %spec.select = select i1 %or.cond, i32 1, i32 2
  br i1 %cmp957, label %for.body10.preheader, label %for.cond12.preheader

for.body10.preheader:                             ; preds = %for.body
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 %13, i1 false)
  br label %for.cond12.preheader

for.cond12.preheader:                             ; preds = %for.body10.preheader, %for.body
  %17 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %18 = icmp ugt i32 %spec.select, 1
  %umax = select i1 %18, i32 %spec.select, i32 1
  %wide.trip.count = zext i32 %umax to i64
  br label %for.body15

for.cond.cleanup14:                               ; preds = %for.body15
  call void @llvm.experimental.noalias.scope.decl(metadata !413)
  br i1 %cmp25.i, label %for.body.lr.ph.i, label %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit

for.body.lr.ph.i:                                 ; preds = %for.cond.cleanup14
  %19 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.i, align 8, !tbaa !363, !noalias !413
  %end_plus_one.phi.trans.insert.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %19, i64 0, i32 1
  %.pre.i = load i32, i32* %end_plus_one.phi.trans.insert.i, align 4, !tbaa !371, !noalias !413
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.cleanup8.i, %for.body.lr.ph.i
  %20 = phi i32 [ %.pre.i, %for.body.lr.ph.i ], [ %21, %for.cond.cleanup8.i ]
  %indvars.iv27.i = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next28.i, %for.cond.cleanup8.i ]
  %end_plus_one6.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %19, i64 %indvars.iv27.i, i32 1
  %21 = load i32, i32* %end_plus_one6.i, align 4, !tbaa !371, !noalias !413
  %cmp722.i = icmp slt i32 %20, %21
  br i1 %cmp722.i, label %for.body9.lr.ph.i, label %for.cond.cleanup8.i

for.body9.lr.ph.i:                                ; preds = %for.body.i
  %22 = load i32*, i32** %index_.i, align 8, !tbaa !366, !noalias !413
  %23 = load double*, double** %multiplier_.i, align 8, !tbaa !365, !noalias !413
  %24 = sext i32 %20 to i64
  %25 = sext i32 %21 to i64
  br label %for.body9.i

for.cond.cleanup8.i:                              ; preds = %for.body9.i, %for.body.i
  %a.sroa.0.0.lcssa.i = phi <2 x double> [ zeroinitializer, %for.body.i ], [ %add.i.i.i, %for.body9.i ]
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %19, i64 %indvars.iv27.i, i32 0
  %26 = load i32, i32* %index.i, align 4, !tbaa !369, !noalias !413
  %mul15.i = shl nsw i32 %26, 1
  %idx.ext16.i = sext i32 %mul15.i to i64
  %add.ptr17.i = getelementptr inbounds double, double* %7, i64 %idx.ext16.i
  %27 = bitcast double* %add.ptr17.i to <2 x double>*
  store <2 x double> %a.sroa.0.0.lcssa.i, <2 x double>* %27, align 16, !tbaa !21, !alias.scope !416
  %indvars.iv.next28.i = add nuw nsw i64 %indvars.iv27.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next28.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit, label %for.body.i, !llvm.loop !407

for.body9.i:                                      ; preds = %for.body9.i, %for.body9.lr.ph.i
  %indvars.iv.i = phi i64 [ %24, %for.body9.lr.ph.i ], [ %indvars.iv.next.i, %for.body9.i ]
  %a.sroa.0.023.i = phi <2 x double> [ zeroinitializer, %for.body9.lr.ph.i ], [ %add.i.i.i, %for.body9.i ]
  %arrayidx11.i = getelementptr inbounds i32, i32* %22, i64 %indvars.iv.i
  %28 = load i32, i32* %arrayidx11.i, align 4, !tbaa !47, !noalias !413
  %mul.i = shl nsw i32 %28, 1
  %idx.ext.i = sext i32 %mul.i to i64
  %add.ptr.i55 = getelementptr inbounds double, double* %7, i64 %idx.ext.i
  %29 = bitcast double* %add.ptr.i55 to <2 x double>*
  %30 = load <2 x double>, <2 x double>* %29, align 16, !tbaa !21, !alias.scope !413
  %arrayidx13.i = getelementptr inbounds double, double* %23, i64 %indvars.iv.i
  %31 = load double, double* %arrayidx13.i, align 8, !tbaa !70, !noalias !413
  %vecinit.i.i.i = insertelement <2 x double> undef, double %31, i32 0
  %vecinit1.i.i.i = shufflevector <2 x double> %vecinit.i.i.i, <2 x double> undef, <2 x i32> zeroinitializer
  %mul.i.i.i = fmul fast <2 x double> %vecinit1.i.i.i, %30
  %add.i.i.i = fadd fast <2 x double> %mul.i.i.i, %a.sroa.0.023.i
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %exitcond71.not = icmp eq i64 %indvars.iv.next.i, %25
  br i1 %exitcond71.not, label %for.cond.cleanup8.i, label %for.body9.i, !llvm.loop !408

_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit: ; preds = %for.cond.cleanup8.i, %for.cond.cleanup14
  %32 = load i32*, i32** %_M_finish.i.i47, align 8, !tbaa !401
  %33 = load i32*, i32** %_M_start.i.i48, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i4961 = ptrtoint i32* %32 to i64
  %sub.ptr.rhs.cast.i.i5062 = ptrtoint i32* %33 to i64
  %sub.ptr.sub.i.i5163 = sub i64 %sub.ptr.lhs.cast.i.i4961, %sub.ptr.rhs.cast.i.i5062
  %34 = lshr exact i64 %sub.ptr.sub.i.i5163, 2
  %conv.i5264 = trunc i64 %34 to i32
  %cmp2765 = icmp sgt i32 %conv.i5264, 0
  br i1 %cmp2765, label %for.cond31.preheader.lr.ph, label %for.cond.cleanup28

for.cond31.preheader.lr.ph:                       ; preds = %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit
  %wide.trip.count83 = and i64 %34, 4294967295
  %sext = shl i64 %sub.ptr.sub.i.i5163, 30
  %35 = ashr i64 %sext, 32
  br label %for.cond31.preheader

for.body15:                                       ; preds = %for.cond12.preheader, %for.body15
  %indvars.iv = phi i64 [ 0, %for.cond12.preheader ], [ %indvars.iv.next, %for.body15 ]
  %36 = add nuw nsw i64 %indvars.iv, %16
  %add.ptr.i54 = getelementptr inbounds i32, i32* %17, i64 %36
  %37 = load i32, i32* %add.ptr.i54, align 4, !tbaa !47
  %mul18 = shl nsw i32 %37, 1
  %38 = trunc i64 %indvars.iv to i32
  %add19 = add nsw i32 %mul18, %38
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds double, double* %7, i64 %idxprom20
  store double 1.000000e+00, double* %arrayidx21, align 8, !tbaa !70
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup14, label %for.body15, !llvm.loop !419

for.cond31.preheader:                             ; preds = %for.cond31.preheader.lr.ph, %for.cond.cleanup33
  %indvars.iv80 = phi i64 [ 0, %for.cond31.preheader.lr.ph ], [ %indvars.iv.next81, %for.cond.cleanup33 ]
  %add.ptr.i = getelementptr inbounds i32, i32* %33, i64 %indvars.iv80
  %39 = load i32, i32* %add.ptr.i, align 4, !tbaa !47
  %mul37 = shl nsw i32 %39, 1
  %40 = sext i32 %mul37 to i64
  br label %for.body34

for.cond.cleanup28:                               ; preds = %for.cond.cleanup33, %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit
  %indvars.iv.next86 = add nuw nsw i64 %indvars.iv85, 1
  %exitcond90.not = icmp eq i64 %indvars.iv.next86, %wide.trip.count89
  br i1 %exitcond90.not, label %for.end55, label %for.body, !llvm.loop !420

for.cond.cleanup33:                               ; preds = %for.body34
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1
  %exitcond84.not = icmp eq i64 %indvars.iv.next81, %wide.trip.count83
  br i1 %exitcond84.not, label %for.cond.cleanup28, label %for.cond31.preheader, !llvm.loop !421

for.body34:                                       ; preds = %for.cond31.preheader, %for.body34
  %indvars.iv72 = phi i64 [ 0, %for.cond31.preheader ], [ %indvars.iv.next73, %for.body34 ]
  %41 = add nsw i64 %indvars.iv72, %40
  %arrayidx40 = getelementptr inbounds double, double* %7, i64 %41
  %42 = load double, double* %arrayidx40, align 8, !tbaa !70
  %43 = add nuw nsw i64 %indvars.iv72, %16
  %44 = mul nsw i64 %43, %35
  %45 = add nsw i64 %44, %indvars.iv80
  %arrayidx46 = getelementptr inbounds double, double* %jacobian_out, i64 %45
  store double %42, double* %arrayidx46, align 8, !tbaa !70
  %indvars.iv.next73 = add nuw nsw i64 %indvars.iv72, 1
  %exitcond79.not = icmp eq i64 %indvars.iv.next73, %wide.trip.count
  br i1 %exitcond79.not, label %for.cond.cleanup33, label %for.body34, !llvm.loop !422

for.end55:                                        ; preds = %for.cond.cleanup28, %_ZN5adept8internal13alloc_alignedIdEEPT_i.exit
  call void @free(i8* %8) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack16jacobian_forwardEPd(%"class.adept::Stack"* nonnull readonly dereferenceable(149) %this, double* nocapture %jacobian_out) local_unnamed_addr #28 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %result.i = alloca double*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %0 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !61
  %_M_finish.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %1 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !61
  %cmp.i.i = icmp eq i32* %0, %1
  br i1 %cmp.i.i, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %_M_start.i.i59 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %2 = load i32*, i32** %_M_start.i.i59, align 8, !tbaa !61
  %_M_finish.i.i60 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %3 = load i32*, i32** %_M_finish.i.i60, align 8, !tbaa !61
  %cmp.i.i61 = icmp eq i32* %2, %3
  br i1 %cmp.i.i61, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %4 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #38
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !14
  %7 = bitcast %union.anon* %5 to i8*
  %8 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #38
  store i64 79, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i105 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %if.then
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i105, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %9 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %9, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(79) %call5.i.i.i5.i105, i8* nonnull align 1 dereferenceable(79) getelementptr inbounds ([80 x i8], [80 x i8]* @.str.103, i64 0, i64 0), i64 79, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i105, i64 %9
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #38
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %10 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %11 = getelementptr inbounds i8, i8* %exception, i64 24
  %12 = bitcast i8* %message_.i.i.i to i8**
  store i8* %11, i8** %12, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i106 = getelementptr inbounds i8, i8* %exception, i64 16
  %13 = bitcast i8* %_M_string_length.i.i.i.i.i.i106 to i64*
  store i64 0, i64* %13, align 8, !tbaa !19
  store i8 0, i8* %11, align 1, !tbaa !21
  %14 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept41dependents_or_independents_not_identifiedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %10, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont5 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %15 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !74
  %16 = load i8*, i8** %12, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %16, %11
  br i1 %cmp.i.i.i.i.i, label %lpad4.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %16) #38
  br label %lpad4.body

invoke.cont5:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept41dependents_or_independents_not_identifiedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad4.body.thread

ehcleanup.thread:                                 ; preds = %if.then
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  br label %cleanup.action

lpad4.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %18 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %18) #38
  %19 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %19, %7
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad4.body
  call void @_ZdlPv(i8* %19) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  br label %cleanup.action

lpad4.body.thread:                                ; preds = %invoke.cont5
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i174 = icmp eq i8* %21, %7
  br i1 %cmp.i.i.i174, label %ehcleanup.thread179, label %if.then.i.i

ehcleanup.thread179:                              ; preds = %lpad4.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad4.body.thread
  call void @_ZdlPv(i8* %21) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad4.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn122 = phi { i8*, i32 } [ %17, %ehcleanup.thread ], [ %15, %ehcleanup ], [ %15, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

if.end:                                           ; preds = %lor.lhs.false
  %sub.ptr.lhs.cast.i.i109 = ptrtoint i32* %1 to i64
  %sub.ptr.rhs.cast.i.i110 = ptrtoint i32* %0 to i64
  %sub.ptr.sub.i.i111 = sub i64 %sub.ptr.lhs.cast.i.i109, %sub.ptr.rhs.cast.i.i110
  %22 = lshr exact i64 %sub.ptr.sub.i.i111, 2
  %conv.i112 = trunc i64 %22 to i32
  %div = sdiv i32 %conv.i112, 2
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %23 = load i32, i32* %max_gradient_, align 8, !tbaa !388
  %mul = shl i32 %23, 1
  %24 = bitcast double** %result.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #38
  %25 = bitcast double** %result.i to i8**
  %conv1.i = sext i32 %mul to i64
  %mul.i104 = shl nsw i64 %conv1.i, 3
  %call2.i = call i32 @posix_memalign(i8** nonnull %25, i64 16, i64 %mul.i104) #38
  %cmp3.not.i = icmp eq i32 %call2.i, 0
  br i1 %cmp3.not.i, label %_ZN5adept8internal13alloc_alignedIdEEPT_i.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.end
  %exception.i = call i8* @__cxa_allocate_exception(i64 8) #38
  %26 = bitcast i8* %exception.i to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8, !tbaa !74
  call void @__cxa_throw(i8* %exception.i, i8* bitcast (i8** @_ZTISt9bad_alloc to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD1Ev to i8*)) #40
  unreachable

_ZN5adept8internal13alloc_alignedIdEEPT_i.exit:   ; preds = %if.end
  %27 = load double*, double** %result.i, align 8, !tbaa !61
  %28 = bitcast double* %27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #38
  %cmp143 = icmp sgt i32 %conv.i112, 1
  br i1 %cmp143, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %_ZN5adept8internal13alloc_alignedIdEEPT_i.exit
  %cmp14132 = icmp sgt i32 %23, 0
  %n_statements_.i88 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %29 = load i32, i32* %n_statements_.i88, align 8, !tbaa !368, !noalias !423
  %cmp25.i = icmp sgt i32 %29, 1
  %statement_.i89 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %index_.i90 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %multiplier_.i91 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %wide.trip.count.i = zext i32 %29 to i64
  %30 = icmp sgt i32 %mul, 1
  %smax149 = select i1 %30, i32 %mul, i32 1
  %31 = zext i32 %smax149 to i64
  %32 = shl nuw nsw i64 %31, 3
  %wide.trip.count170 = zext i32 %div to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup34, %_ZN5adept8internal13alloc_alignedIdEEPT_i.exit
  %33 = and i32 %conv.i112, -2147483647
  %cmp64 = icmp eq i32 %33, 1
  br i1 %cmp64, label %if.then65, label %if.end124

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.cleanup34
  %indvars.iv167 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next168, %for.cond.cleanup34 ]
  %34 = shl nuw nsw i64 %indvars.iv167, 1
  br i1 %cmp14132, label %for.body16.preheader, label %for.cond18.preheader

for.body16.preheader:                             ; preds = %for.body
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 %32, i1 false)
  br label %for.cond18.preheader

for.cond18.preheader:                             ; preds = %for.body16.preheader, %for.body
  %35 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %add.ptr.i87 = getelementptr inbounds i32, i32* %35, i64 %34
  %36 = load i32, i32* %add.ptr.i87, align 4, !tbaa !47
  %mul24 = shl nsw i32 %36, 1
  %idxprom26 = sext i32 %mul24 to i64
  %arrayidx27 = getelementptr inbounds double, double* %27, i64 %idxprom26
  store double 1.000000e+00, double* %arrayidx27, align 8, !tbaa !70
  %37 = or i64 %34, 1
  %add.ptr.i87.c = getelementptr inbounds i32, i32* %35, i64 %37
  %38 = load i32, i32* %add.ptr.i87.c, align 4, !tbaa !47
  %mul24.c = shl nsw i32 %38, 1
  %add25.c = or i32 %mul24.c, 1
  %idxprom26.c = sext i32 %add25.c to i64
  %arrayidx27.c = getelementptr inbounds double, double* %27, i64 %idxprom26.c
  store double 1.000000e+00, double* %arrayidx27.c, align 8, !tbaa !70
  call void @llvm.experimental.noalias.scope.decl(metadata !423)
  br i1 %cmp25.i, label %for.body.lr.ph.i94, label %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit

for.body.lr.ph.i94:                               ; preds = %for.cond18.preheader
  %39 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.i89, align 8, !tbaa !363, !noalias !423
  %end_plus_one.phi.trans.insert.i92 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %39, i64 0, i32 1
  %.pre.i93 = load i32, i32* %end_plus_one.phi.trans.insert.i92, align 4, !tbaa !371, !noalias !423
  br label %for.body.i96

for.body.i96:                                     ; preds = %for.cond.cleanup8.i, %for.body.lr.ph.i94
  %40 = phi i32 [ %.pre.i93, %for.body.lr.ph.i94 ], [ %41, %for.cond.cleanup8.i ]
  %indvars.iv27.i = phi i64 [ 1, %for.body.lr.ph.i94 ], [ %indvars.iv.next28.i, %for.cond.cleanup8.i ]
  %end_plus_one6.i95 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %39, i64 %indvars.iv27.i, i32 1
  %41 = load i32, i32* %end_plus_one6.i95, align 4, !tbaa !371, !noalias !423
  %cmp722.i = icmp slt i32 %40, %41
  br i1 %cmp722.i, label %for.body9.lr.ph.i, label %for.cond.cleanup8.i

for.body9.lr.ph.i:                                ; preds = %for.body.i96
  %42 = load i32*, i32** %index_.i90, align 8, !tbaa !366, !noalias !423
  %43 = load double*, double** %multiplier_.i91, align 8, !tbaa !365, !noalias !423
  %44 = sext i32 %40 to i64
  %45 = sext i32 %41 to i64
  br label %for.body9.i

for.cond.cleanup8.i:                              ; preds = %for.body9.i, %for.body.i96
  %a.sroa.0.0.lcssa.i = phi <2 x double> [ zeroinitializer, %for.body.i96 ], [ %add.i.i.i, %for.body9.i ]
  %index.i97 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %39, i64 %indvars.iv27.i, i32 0
  %46 = load i32, i32* %index.i97, align 4, !tbaa !369, !noalias !423
  %mul15.i = shl nsw i32 %46, 1
  %idx.ext16.i = sext i32 %mul15.i to i64
  %add.ptr17.i = getelementptr inbounds double, double* %27, i64 %idx.ext16.i
  %47 = bitcast double* %add.ptr17.i to <2 x double>*
  store <2 x double> %a.sroa.0.0.lcssa.i, <2 x double>* %47, align 16, !tbaa !21, !alias.scope !426
  %indvars.iv.next28.i = add nuw nsw i64 %indvars.iv27.i, 1
  %exitcond.not.i98 = icmp eq i64 %indvars.iv.next28.i, %wide.trip.count.i
  br i1 %exitcond.not.i98, label %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit, label %for.body.i96, !llvm.loop !407

for.body9.i:                                      ; preds = %for.body9.i, %for.body9.lr.ph.i
  %indvars.iv.i99 = phi i64 [ %44, %for.body9.lr.ph.i ], [ %indvars.iv.next.i102, %for.body9.i ]
  %a.sroa.0.023.i = phi <2 x double> [ zeroinitializer, %for.body9.lr.ph.i ], [ %add.i.i.i, %for.body9.i ]
  %arrayidx11.i = getelementptr inbounds i32, i32* %42, i64 %indvars.iv.i99
  %48 = load i32, i32* %arrayidx11.i, align 4, !tbaa !47, !noalias !423
  %mul.i100 = shl nsw i32 %48, 1
  %idx.ext.i = sext i32 %mul.i100 to i64
  %add.ptr.i101 = getelementptr inbounds double, double* %27, i64 %idx.ext.i
  %49 = bitcast double* %add.ptr.i101 to <2 x double>*
  %50 = load <2 x double>, <2 x double>* %49, align 16, !tbaa !21, !alias.scope !423
  %arrayidx13.i = getelementptr inbounds double, double* %43, i64 %indvars.iv.i99
  %51 = load double, double* %arrayidx13.i, align 8, !tbaa !70, !noalias !423
  %vecinit.i.i.i = insertelement <2 x double> undef, double %51, i32 0
  %vecinit1.i.i.i = shufflevector <2 x double> %vecinit.i.i.i, <2 x double> undef, <2 x i32> zeroinitializer
  %mul.i.i.i = fmul fast <2 x double> %vecinit1.i.i.i, %50
  %add.i.i.i = fadd fast <2 x double> %mul.i.i.i, %a.sroa.0.023.i
  %indvars.iv.next.i102 = add nsw i64 %indvars.iv.i99, 1
  %exitcond155.not = icmp eq i64 %indvars.iv.next.i102, %45
  br i1 %exitcond155.not, label %for.cond.cleanup8.i, label %for.body9.i, !llvm.loop !408

_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit: ; preds = %for.cond.cleanup8.i, %for.cond18.preheader
  %52 = load i32*, i32** %_M_finish.i.i60, align 8, !tbaa !401
  %53 = load i32*, i32** %_M_start.i.i59, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i82136 = ptrtoint i32* %52 to i64
  %sub.ptr.rhs.cast.i.i83137 = ptrtoint i32* %53 to i64
  %sub.ptr.sub.i.i84138 = sub i64 %sub.ptr.lhs.cast.i.i82136, %sub.ptr.rhs.cast.i.i83137
  %54 = lshr exact i64 %sub.ptr.sub.i.i84138, 2
  %conv.i85139 = trunc i64 %54 to i32
  %cmp33140 = icmp sgt i32 %conv.i85139, 0
  br i1 %cmp33140, label %for.cond37.preheader.lr.ph, label %for.cond.cleanup34

for.cond37.preheader.lr.ph:                       ; preds = %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit
  %wide.trip.count165 = and i64 %54, 4294967295
  %sext = shl i64 %sub.ptr.sub.i.i84138, 30
  %55 = ashr i64 %sext, 32
  %56 = mul nsw i64 %34, %55
  %57 = or i64 %34, 1
  %58 = mul nsw i64 %57, %55
  br label %for.cond37.preheader

for.cond37.preheader:                             ; preds = %for.cond37.preheader.lr.ph, %for.cond37.preheader
  %indvars.iv162 = phi i64 [ 0, %for.cond37.preheader.lr.ph ], [ %indvars.iv.next163, %for.cond37.preheader ]
  %add.ptr.i79 = getelementptr inbounds i32, i32* %53, i64 %indvars.iv162
  %59 = load i32, i32* %add.ptr.i79, align 4, !tbaa !47
  %mul44 = shl nsw i32 %59, 1
  %60 = sext i32 %mul44 to i64
  %arrayidx47 = getelementptr inbounds double, double* %27, i64 %60
  %61 = load double, double* %arrayidx47, align 8, !tbaa !70
  %62 = add nsw i64 %56, %indvars.iv162
  %arrayidx53 = getelementptr inbounds double, double* %jacobian_out, i64 %62
  store double %61, double* %arrayidx53, align 8, !tbaa !70
  %63 = or i64 %60, 1
  %arrayidx47.c = getelementptr inbounds double, double* %27, i64 %63
  %64 = load double, double* %arrayidx47.c, align 8, !tbaa !70
  %65 = add nsw i64 %58, %indvars.iv162
  %arrayidx53.c = getelementptr inbounds double, double* %jacobian_out, i64 %65
  store double %64, double* %arrayidx53.c, align 8, !tbaa !70
  %indvars.iv.next163 = add nuw nsw i64 %indvars.iv162, 1
  %exitcond166.not = icmp eq i64 %indvars.iv.next163, %wide.trip.count165
  br i1 %exitcond166.not, label %for.cond.cleanup34, label %for.cond37.preheader, !llvm.loop !429

for.cond.cleanup34:                               ; preds = %for.cond37.preheader, %_ZNK5adept5Stack23jacobian_forward_kernelEPd.exit
  %indvars.iv.next168 = add nuw nsw i64 %indvars.iv167, 1
  %exitcond171.not = icmp eq i64 %indvars.iv.next168, %wide.trip.count170
  br i1 %exitcond171.not, label %for.cond.cleanup, label %for.body, !llvm.loop !430

if.then65:                                        ; preds = %for.cond.cleanup
  %mul67 = shl nsw i32 %div, 1
  %cmp70130 = icmp sgt i32 %23, 0
  br i1 %cmp70130, label %for.body72.preheader, label %for.body82

for.body72.preheader:                             ; preds = %if.then65
  %66 = icmp sgt i32 %mul, 1
  %smax146 = select i1 %66, i32 %mul, i32 1
  %67 = zext i32 %smax146 to i64
  %68 = shl nuw nsw i64 %67, 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 %68, i1 false)
  br label %for.body82

for.body82:                                       ; preds = %for.body72.preheader, %if.then65
  %conv85 = sext i32 %mul67 to i64
  %69 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %add.ptr.i71 = getelementptr inbounds i32, i32* %69, i64 %conv85
  %70 = load i32, i32* %add.ptr.i71, align 4, !tbaa !47
  %mul87 = shl nsw i32 %70, 1
  %idxprom89 = sext i32 %mul87 to i64
  %arrayidx90 = getelementptr inbounds double, double* %27, i64 %idxprom89
  store double 1.000000e+00, double* %arrayidx90, align 8, !tbaa !70
  call void @llvm.experimental.noalias.scope.decl(metadata !431)
  %n_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %71 = load i32, i32* %n_statements_.i, align 8, !tbaa !368, !noalias !431
  %cmp30.i = icmp sgt i32 %71, 1
  br i1 %cmp30.i, label %for.body.lr.ph.i, label %_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi.exit

for.body.lr.ph.i:                                 ; preds = %for.body82
  %statement_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %72 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.i, align 8, !tbaa !363, !noalias !431
  %multiplier_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %wide.trip.count44.i = zext i32 %71 to i64
  %end_plus_one.phi.trans.insert.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %72, i64 0, i32 1
  %.pre.i = load i32, i32* %end_plus_one.phi.trans.insert.i, align 4, !tbaa !371, !noalias !431
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond26.preheader.i, %for.body.lr.ph.i
  %73 = phi i32 [ %.pre.i, %for.body.lr.ph.i ], [ %74, %for.cond26.preheader.i ]
  %indvars.iv41.i = phi i64 [ 1, %for.body.lr.ph.i ], [ %indvars.iv.next42.i, %for.cond26.preheader.i ]
  %end_plus_one6.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %72, i64 %indvars.iv41.i, i32 1
  %74 = load i32, i32* %end_plus_one6.i, align 4, !tbaa !371, !noalias !431
  %cmp725.i = icmp slt i32 %73, %74
  br i1 %cmp725.i, label %for.cond10.preheader.lr.ph.i, label %for.cond26.preheader.i

for.cond10.preheader.lr.ph.i:                     ; preds = %for.body.i
  %75 = sext i32 %73 to i64
  %76 = sext i32 %74 to i64
  %77 = load double*, double** %multiplier_.i, align 8, !tbaa !365, !noalias !431
  %78 = load i32*, i32** %index_.i, align 8, !tbaa !366, !noalias !431
  br label %for.cond.cleanup12.i

for.cond26.preheader.i.loopexit:                  ; preds = %for.cond.cleanup12.i
  %79 = bitcast double %add21.i to i64
  br label %for.cond26.preheader.i

for.cond26.preheader.i:                           ; preds = %for.cond26.preheader.i.loopexit, %for.body.i
  %80 = phi i64 [ 0, %for.body.i ], [ %79, %for.cond26.preheader.i.loopexit ]
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %72, i64 %indvars.iv41.i, i32 0
  %81 = load i32, i32* %index.i, align 4, !tbaa !369, !noalias !431
  %82 = shl i32 %81, 1
  %83 = sext i32 %82 to i64
  %scevgep.i = getelementptr double, double* %27, i64 %83
  %84 = bitcast double* %scevgep.i to i64*
  store i64 %80, i64* %84, align 8
  %indvars.iv.next42.i = add nuw nsw i64 %indvars.iv41.i, 1
  %exitcond45.not.i = icmp eq i64 %indvars.iv.next42.i, %wide.trip.count44.i
  br i1 %exitcond45.not.i, label %_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi.exit, label %for.body.i, !llvm.loop !412

for.cond.cleanup12.i:                             ; preds = %for.cond10.preheader.lr.ph.i, %for.cond.cleanup12.i
  %85 = phi double [ 0.000000e+00, %for.cond10.preheader.lr.ph.i ], [ %add21.i, %for.cond.cleanup12.i ]
  %indvars.iv34.i = phi i64 [ %75, %for.cond10.preheader.lr.ph.i ], [ %indvars.iv.next35.i, %for.cond.cleanup12.i ]
  %arrayidx15.i = getelementptr inbounds double, double* %77, i64 %indvars.iv34.i
  %86 = load double, double* %arrayidx15.i, align 8, !tbaa !70, !noalias !431
  %arrayidx17.i = getelementptr inbounds i32, i32* %78, i64 %indvars.iv34.i
  %87 = load i32, i32* %arrayidx17.i, align 4, !tbaa !47, !noalias !431
  %mul.i = shl nsw i32 %87, 1
  %88 = sext i32 %mul.i to i64
  %arrayidx19.i = getelementptr inbounds double, double* %27, i64 %88
  %89 = load double, double* %arrayidx19.i, align 8, !tbaa !70, !alias.scope !431
  %mul20.i = fmul fast double %89, %86
  %add21.i = fadd fast double %85, %mul20.i
  %indvars.iv.next35.i = add nsw i64 %indvars.iv34.i, 1
  %exitcond145.not = icmp eq i64 %indvars.iv.next35.i, %76
  br i1 %exitcond145.not, label %for.cond26.preheader.i.loopexit, label %for.cond.cleanup12.i, !llvm.loop !410

_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi.exit: ; preds = %for.cond26.preheader.i, %for.body82
  %90 = load i32*, i32** %_M_finish.i.i60, align 8, !tbaa !401
  %91 = load i32*, i32** %_M_start.i.i59, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i66123 = ptrtoint i32* %90 to i64
  %sub.ptr.rhs.cast.i.i67124 = ptrtoint i32* %91 to i64
  %sub.ptr.sub.i.i68125 = sub i64 %sub.ptr.lhs.cast.i.i66123, %sub.ptr.rhs.cast.i.i67124
  %92 = lshr exact i64 %sub.ptr.sub.i.i68125, 2
  %conv.i69126 = trunc i64 %92 to i32
  %cmp97127 = icmp sgt i32 %conv.i69126, 0
  br i1 %cmp97127, label %for.body104.lr.ph, label %if.end124

for.body104.lr.ph:                                ; preds = %_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi.exit
  %wide.trip.count = and i64 %92, 4294967295
  %mul114 = mul nsw i32 %mul67, %conv.i69126
  br label %for.body104

for.body104:                                      ; preds = %for.body104.lr.ph, %for.body104
  %indvars.iv = phi i64 [ 0, %for.body104.lr.ph ], [ %indvars.iv.next, %for.body104 ]
  %add.ptr.i = getelementptr inbounds i32, i32* %91, i64 %indvars.iv
  %93 = load i32, i32* %add.ptr.i, align 4, !tbaa !47
  %mul108 = shl nsw i32 %93, 1
  %idxprom110 = sext i32 %mul108 to i64
  %arrayidx111 = getelementptr inbounds double, double* %27, i64 %idxprom110
  %94 = load double, double* %arrayidx111, align 8, !tbaa !70
  %95 = trunc i64 %indvars.iv to i32
  %add115 = add nsw i32 %mul114, %95
  %idxprom116 = sext i32 %add115 to i64
  %arrayidx117 = getelementptr inbounds double, double* %jacobian_out, i64 %idxprom116
  store double %94, double* %arrayidx117, align 8, !tbaa !70
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end124, label %for.body104, !llvm.loop !434

if.end124:                                        ; preds = %for.body104, %_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi.exit, %for.cond.cleanup
  call void @free(i8* %28) #38
  ret void

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread179, %cleanup.action
  %.pn121 = phi { i8*, i32 } [ %.pn122, %cleanup.action ], [ %20, %if.then.i.i ], [ %20, %ehcleanup.thread179 ]
  resume { i8*, i32 } %.pn121

unreachable:                                      ; preds = %invoke.cont5
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZNK5adept5Stack23jacobian_reverse_openmpEPd(%"class.adept::Stack"* nocapture nonnull readonly dereferenceable(149) %this, double* nocapture %jacobian_out) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %a = alloca [2 x double], align 16
  %_M_finish.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !401
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %2 = lshr exact i64 %sub.ptr.sub.i.i, 2
  %conv.i = trunc i64 %2 to i32
  %sub = add nsw i32 %conv.i, 1
  %div = sdiv i32 %sub, 2
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %3 = load i32, i32* %max_gradient_, align 8, !tbaa !388
  %conv = sext i32 %3 to i64
  %cmp.i.i = icmp slt i32 %3, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.123, i64 0, i64 0)) #40
  unreachable

_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i: ; preds = %entry
  %cmp.not.i.i.i.i = icmp eq i32 %3, 0
  br i1 %cmp.not.i.i.i.i, label %invoke.cont.thread, label %invoke.cont

invoke.cont:                                      ; preds = %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv, 4
  %call2.i.i.i.i1.i.i98 = tail call noalias nonnull i8* @_Znwm(i64 %mul.i.i.i.i.i.i) #42
  %4 = bitcast i8* %call2.i.i.i.i1.i.i98 to %"struct.adept::Block"*
  %add.ptr.i.i.i = getelementptr %"struct.adept::Block", %"struct.adept::Block"* %4, i64 %conv
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i98, i8 0, i64 %mul.i.i.i.i.i.i, i1 false)
  %phi.cast = ptrtoint %"struct.adept::Block"* %add.ptr.i.i.i to i64
  %cmp142 = icmp sgt i32 %conv.i, 0
  br i1 %cmp142, label %for.body.lr.ph, label %if.then.i.i.i

invoke.cont.thread:                               ; preds = %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i
  %cmp142184 = icmp sgt i32 %conv.i, 0
  br i1 %cmp142184, label %for.body.lr.ph, label %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev.exit

for.body.lr.ph:                                   ; preds = %invoke.cont.thread, %invoke.cont
  %cond.i.i.i.i122144188 = phi i8* [ null, %invoke.cont.thread ], [ %call2.i.i.i.i1.i.i98, %invoke.cont ]
  %__cur.0.lcssa.i.i.i.i.i187 = phi i64 [ 0, %invoke.cont.thread ], [ %phi.cast, %invoke.cont ]
  %cond.i.i.i.i122185 = phi %"struct.adept::Block"* [ null, %invoke.cont.thread ], [ %4, %invoke.cont ]
  %sub3 = add nsw i32 %div, -1
  %5 = and i32 %conv.i, -2147483647
  %cmp5 = icmp eq i32 %5, 1
  %sub.ptr.rhs.cast.i = ptrtoint %"struct.adept::Block"* %cond.i.i.i.i122185 to i64
  %sub.ptr.sub.i = sub i64 %__cur.0.lcssa.i.i.i.i.i187, %sub.ptr.rhs.cast.i
  %cmp8123.not = icmp eq i64 %sub.ptr.sub.i, 0
  %6 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %7 = load i32, i32* %n_statements_, align 8, !tbaa !368
  %cmp31132 = icmp sgt i32 %7, 1
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %8 = bitcast [2 x double]* %a to i8*
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %_M_finish.i.i72 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %9 = load i32*, i32** %_M_finish.i.i72, align 8, !tbaa !401
  %_M_start.i.i73 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %_M_start.i.i73, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i74136 = ptrtoint i32* %9 to i64
  %sub.ptr.rhs.cast.i.i75137 = ptrtoint i32* %10 to i64
  %sub.ptr.sub.i.i76138 = sub i64 %sub.ptr.lhs.cast.i.i74136, %sub.ptr.rhs.cast.i.i75137
  %11 = lshr exact i64 %sub.ptr.sub.i.i76138, 2
  %conv.i77139 = trunc i64 %11 to i32
  %cmp105140 = icmp sgt i32 %conv.i77139, 0
  %12 = icmp sgt i64 %sub.ptr.sub.i, -1
  %smax = select i1 %12, i64 %sub.ptr.sub.i, i64 -1
  %13 = icmp slt i64 %smax, 1
  %smin = select i1 %13, i64 %smax, i64 1
  %14 = sub i64 %sub.ptr.rhs.cast.i, %__cur.0.lcssa.i.i.i.i.i187
  %15 = icmp sgt i64 %14, %sub.ptr.sub.i
  %smax145 = select i1 %15, i64 %14, i64 %sub.ptr.sub.i
  %16 = lshr i64 %smax145, 4
  %17 = mul nsw i64 %smin, %16
  %18 = icmp ugt i64 %17, 1
  %umax = select i1 %18, i64 %17, i64 1
  %19 = shl nuw i64 %umax, 4
  %20 = zext i32 %7 to i64
  %21 = zext i32 %sub3 to i64
  %22 = icmp sgt i32 %div, 1
  %smax177 = select i1 %22, i32 %div, i32 1
  %wide.trip.count178 = zext i32 %smax177 to i64
  %sub.ptr.rhs.cast.i.i67 = ptrtoint i32* %6 to i64
  %wide.trip.count172 = and i64 %11, 4294967295
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.cleanup106
  %indvars.iv174 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next175, %for.cond.cleanup106 ]
  %23 = shl nuw nsw i64 %indvars.iv174, 1
  %cmp4 = icmp eq i64 %indvars.iv174, %21
  %or.cond = and i1 %cmp5, %cmp4
  %spec.select = select i1 %or.cond, i32 1, i32 2
  br i1 %cmp8123.not, label %for.cond14.preheader, label %for.body9.preheader

for.body9.preheader:                              ; preds = %for.body
  call void @llvm.memset.p0i8.i64(i8* align 8 %cond.i.i.i.i122144188, i8 0, i64 %19, i1 false)
  br label %for.cond14.preheader

for.cond14.preheader:                             ; preds = %for.body9.preheader, %for.body
  %24 = icmp ugt i32 %spec.select, 1
  %umax147 = select i1 %24, i32 %spec.select, i32 1
  %wide.trip.count = zext i32 %umax147 to i64
  br label %for.body17

for.cond.cleanup16:                               ; preds = %for.body17
  br i1 %cmp31132, label %for.body33.lr.ph, label %for.cond101.preheader

for.body33.lr.ph:                                 ; preds = %for.cond.cleanup16
  %25 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !363
  br label %for.body33

for.body17:                                       ; preds = %for.cond14.preheader, %for.body17
  %indvars.iv = phi i64 [ 0, %for.cond14.preheader ], [ %indvars.iv.next, %for.body17 ]
  %26 = add nuw nsw i64 %indvars.iv, %23
  %add.ptr.i94 = getelementptr inbounds i32, i32* %6, i64 %26
  %27 = load i32, i32* %add.ptr.i94, align 4, !tbaa !47
  %conv21 = sext i32 %27 to i64
  %arrayidx.i90 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i122185, i64 %conv21, i32 0, i64 %indvars.iv
  store double 1.000000e+00, double* %arrayidx.i90, align 8, !tbaa !70
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup16, label %for.body17, !llvm.loop !435

for.cond101.preheader:                            ; preds = %if.end95, %for.cond.cleanup16
  br i1 %cmp105140, label %for.cond109.preheader.lr.ph, label %for.cond.cleanup106

for.cond109.preheader.lr.ph:                      ; preds = %for.cond101.preheader
  %28 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !401
  %sub.ptr.lhs.cast.i.i66 = ptrtoint i32* %28 to i64
  %sub.ptr.sub.i.i68 = sub i64 %sub.ptr.lhs.cast.i.i66, %sub.ptr.rhs.cast.i.i67
  %29 = lshr exact i64 %sub.ptr.sub.i.i68, 2
  %30 = and i64 %29, 4294967295
  br label %for.cond109.preheader

for.body33:                                       ; preds = %for.body33.lr.ph, %if.end95
  %indvars.iv161 = phi i64 [ %20, %for.body33.lr.ph ], [ %indvars.iv.next162, %if.end95 ]
  %ist.0.in133 = phi i32 [ %7, %for.body33.lr.ph ], [ %ist.0134, %if.end95 ]
  %ist.0134 = add nsw i32 %ist.0.in133, -1
  %idxprom = sext i32 %ist.0134 to i64
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #38
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %25, i64 %idxprom, i32 0
  %31 = load i32, i32* %index, align 4, !tbaa !369
  %conv39 = sext i32 %31 to i64
  br label %for.body38

for.cond.cleanup37:                               ; preds = %for.body38
  %tobool.not = icmp eq i32 %n_non_zero.1, 0
  br i1 %tobool.not, label %if.end95, label %if.then59

for.body38:                                       ; preds = %for.body33, %for.body38
  %indvars.iv151 = phi i64 [ 0, %for.body33 ], [ %indvars.iv.next152, %for.body38 ]
  %n_non_zero.0126 = phi i32 [ 0, %for.body33 ], [ %n_non_zero.1, %for.body38 ]
  %arrayidx.i86 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i122185, i64 %conv39, i32 0, i64 %indvars.iv151
  %32 = load double, double* %arrayidx.i86, align 8, !tbaa !70
  %arrayidx45 = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 %indvars.iv151
  store double %32, double* %arrayidx45, align 8, !tbaa !70
  store double 0.000000e+00, double* %arrayidx.i86, align 8, !tbaa !70
  %cmp53 = fcmp fast une double %32, 0.000000e+00
  %n_non_zero.1 = select i1 %cmp53, i32 1, i32 %n_non_zero.0126
  %indvars.iv.next152 = add nuw nsw i64 %indvars.iv151, 1
  %exitcond154.not = icmp eq i64 %indvars.iv.next152, %wide.trip.count
  br i1 %exitcond154.not, label %for.cond.cleanup37, label %for.body38, !llvm.loop !436

if.then59:                                        ; preds = %for.cond.cleanup37
  %sub61 = add nsw i32 %ist.0.in133, -2
  %33 = zext i32 %sub61 to i64
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %25, i64 %33, i32 1
  %34 = load i32, i32* %end_plus_one, align 4, !tbaa !371
  %end_plus_one65 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %25, i64 %idxprom, i32 1
  %35 = load i32, i32* %end_plus_one65, align 4, !tbaa !371
  %cmp66129 = icmp slt i32 %34, %35
  br i1 %cmp66129, label %for.body68.lr.ph, label %if.end95

for.body68.lr.ph:                                 ; preds = %if.then59
  %36 = load double*, double** %multiplier_, align 8, !tbaa !365
  %37 = load i32*, i32** %index_, align 8, !tbaa !366
  %38 = sext i32 %34 to i64
  %39 = sext i32 %35 to i64
  br label %for.body68

for.body68:                                       ; preds = %for.body68.lr.ph, %for.cond.cleanup81
  %indvars.iv159 = phi i64 [ %38, %for.body68.lr.ph ], [ %indvars.iv.next160, %for.cond.cleanup81 ]
  %arrayidx70 = getelementptr inbounds double, double* %36, i64 %indvars.iv159
  %40 = load double, double* %arrayidx70, align 8, !tbaa !70
  %arrayidx72 = getelementptr inbounds i32, i32* %37, i64 %indvars.iv159
  %41 = load i32, i32* %arrayidx72, align 4, !tbaa !47
  %conv73 = sext i32 %41 to i64
  br label %for.body82

for.cond.cleanup81:                               ; preds = %for.body82
  %indvars.iv.next160 = add nsw i64 %indvars.iv159, 1
  %cmp66 = icmp slt i64 %indvars.iv.next160, %39
  br i1 %cmp66, label %for.body68, label %if.end95, !llvm.loop !437

for.body82:                                       ; preds = %for.body68, %for.body82
  %indvars.iv155 = phi i64 [ 0, %for.body68 ], [ %indvars.iv.next156, %for.body82 ]
  %arrayidx84 = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 %indvars.iv155
  %42 = load double, double* %arrayidx84, align 8, !tbaa !70
  %mul85 = fmul fast double %42, %40
  %arrayidx87 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i122185, i64 %conv73, i32 0, i64 %indvars.iv155
  %43 = load double, double* %arrayidx87, align 8, !tbaa !70
  %add88 = fadd fast double %43, %mul85
  store double %add88, double* %arrayidx87, align 8, !tbaa !70
  %indvars.iv.next156 = add nuw nsw i64 %indvars.iv155, 1
  %exitcond158.not = icmp eq i64 %indvars.iv.next156, %wide.trip.count
  br i1 %exitcond158.not, label %for.cond.cleanup81, label %for.body82, !llvm.loop !438

if.end95:                                         ; preds = %for.cond.cleanup81, %if.then59, %for.cond.cleanup37
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #38
  %cmp31 = icmp sgt i64 %indvars.iv161, 2
  %indvars.iv.next162 = add nsw i64 %indvars.iv161, -1
  br i1 %cmp31, label %for.body33, label %for.cond101.preheader, !llvm.loop !439

for.cond109.preheader:                            ; preds = %for.cond109.preheader.lr.ph, %for.cond.cleanup111
  %indvars.iv168 = phi i64 [ 0, %for.cond109.preheader.lr.ph ], [ %indvars.iv.next169, %for.cond.cleanup111 ]
  %add.ptr.i71 = getelementptr inbounds i32, i32* %10, i64 %indvars.iv168
  %44 = load i32, i32* %add.ptr.i71, align 4, !tbaa !47
  %conv115 = sext i32 %44 to i64
  %45 = mul i64 %indvars.iv168, %30
  br label %for.body112

for.cond.cleanup106:                              ; preds = %for.cond.cleanup111, %for.cond101.preheader
  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1
  %exitcond179.not = icmp eq i64 %indvars.iv.next175, %wide.trip.count178
  br i1 %exitcond179.not, label %if.then.i.i.i, label %for.body, !llvm.loop !440

for.cond.cleanup111:                              ; preds = %for.body112
  %indvars.iv.next169 = add nuw nsw i64 %indvars.iv168, 1
  %exitcond173.not = icmp eq i64 %indvars.iv.next169, %wide.trip.count172
  br i1 %exitcond173.not, label %for.cond.cleanup106, label %for.cond109.preheader, !llvm.loop !441

for.body112:                                      ; preds = %for.cond109.preheader, %for.body112
  %indvars.iv163 = phi i64 [ 0, %for.cond109.preheader ], [ %indvars.iv.next164, %for.body112 ]
  %arrayidx.i = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i122185, i64 %conv115, i32 0, i64 %indvars.iv163
  %46 = load double, double* %arrayidx.i, align 8, !tbaa !70
  %47 = add nuw nsw i64 %indvars.iv163, %23
  %add124 = add i64 %47, %45
  %sext = shl i64 %add124, 32
  %idxprom125 = ashr exact i64 %sext, 32
  %arrayidx126 = getelementptr inbounds double, double* %jacobian_out, i64 %idxprom125
  store double %46, double* %arrayidx126, align 8, !tbaa !70
  %indvars.iv.next164 = add nuw nsw i64 %indvars.iv163, 1
  %exitcond167.not = icmp eq i64 %indvars.iv.next164, %wide.trip.count
  br i1 %exitcond167.not, label %for.cond.cleanup111, label %for.body112, !llvm.loop !442

if.then.i.i.i:                                    ; preds = %for.cond.cleanup106, %invoke.cont
  %cond.i.i.i.i122144189 = phi i8* [ %call2.i.i.i.i1.i.i98, %invoke.cont ], [ %cond.i.i.i.i122144188, %for.cond.cleanup106 ]
  tail call void @_ZdlPv(i8* nonnull %cond.i.i.i.i122144189) #38
  br label %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev.exit

_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev.exit: ; preds = %invoke.cont.thread, %if.then.i.i.i
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept5Stack16jacobian_reverseEPd(%"class.adept::Stack"* nonnull readonly dereferenceable(149) %this, double* nocapture %jacobian_out) local_unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %a = alloca <2 x double>, align 16
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %0 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !61
  %_M_finish.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %1 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !61
  %cmp.i.i = icmp eq i32* %0, %1
  br i1 %cmp.i.i, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %_M_start.i.i96 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %2 = load i32*, i32** %_M_start.i.i96, align 8, !tbaa !61
  %_M_finish.i.i97 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %3 = load i32*, i32** %_M_finish.i.i97, align 8, !tbaa !61
  %cmp.i.i98 = icmp eq i32* %2, %3
  br i1 %cmp.i.i98, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %4 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #38
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !14
  %7 = bitcast %union.anon* %5 to i8*
  %8 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #38
  store i64 79, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i183 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %if.then
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i183, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %9 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %9, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(79) %call5.i.i.i5.i183, i8* nonnull align 1 dereferenceable(79) getelementptr inbounds ([80 x i8], [80 x i8]* @.str.103, i64 0, i64 0), i64 79, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i183, i64 %9
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #38
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %10 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %11 = getelementptr inbounds i8, i8* %exception, i64 24
  %12 = bitcast i8* %message_.i.i.i to i8**
  store i8* %11, i8** %12, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i184 = getelementptr inbounds i8, i8* %exception, i64 16
  %13 = bitcast i8* %_M_string_length.i.i.i.i.i.i184 to i64*
  store i64 0, i64* %13, align 8, !tbaa !19
  store i8 0, i8* %11, align 1, !tbaa !21
  %14 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept41dependents_or_independents_not_identifiedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %10, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont5 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %15 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !tbaa !74
  %16 = load i8*, i8** %12, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %16, %11
  br i1 %cmp.i.i.i.i.i, label %lpad4.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %16) #38
  br label %lpad4.body

invoke.cont5:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept41dependents_or_independents_not_identifiedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad4.body.thread

ehcleanup.thread:                                 ; preds = %if.then
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  br label %cleanup.action

lpad4.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %18 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %18) #38
  %19 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %19, %7
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i185.thread

if.then.i.i185.thread:                            ; preds = %lpad4.body
  call void @_ZdlPv(i8* %19) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  br label %cleanup.action

lpad4.body.thread:                                ; preds = %invoke.cont5
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i310 = icmp eq i8* %21, %7
  br i1 %cmp.i.i.i310, label %ehcleanup.thread315, label %if.then.i.i185

ehcleanup.thread315:                              ; preds = %lpad4.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  br label %eh.resume

if.then.i.i185:                                   ; preds = %lpad4.body.thread
  call void @_ZdlPv(i8* %21) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad4.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i185.thread, %ehcleanup, %ehcleanup.thread
  %.pn219 = phi { i8*, i32 } [ %17, %ehcleanup.thread ], [ %15, %ehcleanup ], [ %15, %if.then.i.i185.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

if.end:                                           ; preds = %lor.lhs.false
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %22 = load i32, i32* %max_gradient_, align 8, !tbaa !388
  %conv = sext i32 %22 to i64
  %cmp.i.i181 = icmp slt i32 %22, 0
  br i1 %cmp.i.i181, label %if.then.i.i, label %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i

if.then.i.i:                                      ; preds = %if.end
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.123, i64 0, i64 0)) #40
  unreachable

_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i: ; preds = %if.end
  %cmp.not.i.i.i.i = icmp eq i32 %22, 0
  br i1 %cmp.not.i.i.i.i, label %invoke.cont11, label %_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i

_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i: ; preds = %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv, 4
  %call2.i.i.i.i1.i.i182 = tail call noalias nonnull i8* @_Znwm(i64 %mul.i.i.i.i.i.i) #42
  %23 = bitcast i8* %call2.i.i.i.i1.i.i182 to %"struct.adept::Block"*
  %add.ptr.i.i.i = getelementptr %"struct.adept::Block", %"struct.adept::Block"* %23, i64 %conv
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i1.i.i182, i8 0, i64 %mul.i.i.i.i.i.i, i1 false)
  %phi.cast = ptrtoint %"struct.adept::Block"* %add.ptr.i.i.i to i64
  %.pre = load i32*, i32** %_M_finish.i.i97, align 8, !tbaa !401
  %.pre306 = load i32*, i32** %_M_start.i.i96, align 8, !tbaa !361
  br label %invoke.cont11

invoke.cont11:                                    ; preds = %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i, %_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i
  %24 = phi i32* [ %.pre306, %_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i ], [ %2, %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i ]
  %25 = phi i32* [ %.pre, %_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i ], [ %3, %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i ]
  %cond.i.i.i.i222 = phi %"struct.adept::Block"* [ %23, %_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i ], [ null, %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i ]
  %__cur.0.lcssa.i.i.i.i.i = phi i64 [ %phi.cast, %_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m.exit.i.i.i.i ], [ 0, %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit.i ]
  %cond.i.i.i.i222270 = bitcast %"struct.adept::Block"* %cond.i.i.i.i222 to i8*
  %sub.ptr.lhs.cast.i.i177 = ptrtoint i32* %25 to i64
  %sub.ptr.rhs.cast.i.i178 = ptrtoint i32* %24 to i64
  %sub.ptr.sub.i.i179 = sub i64 %sub.ptr.lhs.cast.i.i177, %sub.ptr.rhs.cast.i.i178
  %26 = lshr exact i64 %sub.ptr.sub.i.i179, 2
  %conv.i180 = trunc i64 %26 to i32
  %cmp261 = icmp sgt i32 %conv.i180, 1
  br i1 %cmp261, label %for.cond20.preheader.lr.ph, label %for.cond.cleanup

for.cond20.preheader.lr.ph:                       ; preds = %invoke.cont11
  %div321322 = lshr i64 %sub.ptr.sub.i.i179, 3
  %div321 = and i64 %div321322, 2147483647
  %sub.ptr.rhs.cast.i166 = ptrtoint %"struct.adept::Block"* %cond.i.i.i.i222 to i64
  %sub.ptr.sub.i167 = sub i64 %__cur.0.lcssa.i.i.i.i.i, %sub.ptr.rhs.cast.i166
  %cmp22242.not = icmp eq i64 %sub.ptr.sub.i167, 0
  %n_statements_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %27 = load i32, i32* %n_statements_, align 8, !tbaa !368
  %cmp47251 = icmp sgt i32 %27, 1
  %statement_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %28 = bitcast <2 x double>* %a to i8*
  %multiplier_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %29 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !401
  %30 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i139255 = ptrtoint i32* %29 to i64
  %sub.ptr.rhs.cast.i.i140256 = ptrtoint i32* %30 to i64
  %sub.ptr.sub.i.i141257 = sub i64 %sub.ptr.lhs.cast.i.i139255, %sub.ptr.rhs.cast.i.i140256
  %31 = lshr exact i64 %sub.ptr.sub.i.i141257, 2
  %conv.i142258 = trunc i64 %31 to i32
  %cmp125259 = icmp sgt i32 %conv.i142258, 0
  %32 = icmp sgt i64 %sub.ptr.sub.i167, -1
  %smax273 = select i1 %32, i64 %sub.ptr.sub.i167, i64 -1
  %33 = icmp slt i64 %smax273, 1
  %smin274 = select i1 %33, i64 %smax273, i64 1
  %34 = sub i64 %sub.ptr.rhs.cast.i166, %__cur.0.lcssa.i.i.i.i.i
  %35 = icmp sgt i64 %34, %sub.ptr.sub.i167
  %smax275 = select i1 %35, i64 %34, i64 %sub.ptr.sub.i167
  %36 = lshr i64 %smax275, 4
  %37 = mul nsw i64 %smin274, %36
  %38 = icmp ugt i64 %37, 1
  %umax276 = select i1 %38, i64 %37, i64 1
  %39 = shl nuw i64 %umax276, 4
  %40 = zext i32 %27 to i64
  %sext307 = shl i64 %sub.ptr.sub.i.i179, 30
  %41 = ashr i64 %sext307, 32
  br label %for.cond20.preheader

for.cond20.preheader:                             ; preds = %for.cond20.preheader.lr.ph, %for.cond.cleanup126
  %indvars.iv302 = phi i64 [ 0, %for.cond20.preheader.lr.ph ], [ %indvars.iv.next303, %for.cond.cleanup126 ]
  %indvar = phi i64 [ 0, %for.cond20.preheader.lr.ph ], [ %indvar.next, %for.cond.cleanup126 ]
  %42 = shl nuw nsw i64 %indvar, 1
  br i1 %cmp22242.not, label %for.body33, label %for.body24.preheader

for.body24.preheader:                             ; preds = %for.cond20.preheader
  call void @llvm.memset.p0i8.i64(i8* align 8 %cond.i.i.i.i222270, i8 0, i64 %39, i1 false)
  br label %for.body33

for.cond.cleanup.loopexit:                        ; preds = %for.cond.cleanup126
  %43 = trunc i64 %indvars.iv.next303 to i32
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %invoke.cont11
  %i_dependent.0.lcssa = phi i32 [ 0, %invoke.cont11 ], [ %43, %for.cond.cleanup.loopexit ]
  %44 = and i32 %conv.i180, -2147483647
  %cmp161 = icmp eq i32 %44, 1
  br i1 %cmp161, label %for.cond164.preheader, label %if.end324

for.cond164.preheader:                            ; preds = %for.cond.cleanup
  %sub.ptr.rhs.cast.i = ptrtoint %"struct.adept::Block"* %cond.i.i.i.i222 to i64
  %sub.ptr.sub.i = sub i64 %__cur.0.lcssa.i.i.i.i.i, %sub.ptr.rhs.cast.i
  %cmp166240.not = icmp eq i64 %sub.ptr.sub.i, 0
  br i1 %cmp166240.not, label %for.body180, label %for.body168.preheader

for.body168.preheader:                            ; preds = %for.cond164.preheader
  %45 = icmp sgt i64 %sub.ptr.sub.i, -1
  %smax271 = select i1 %45, i64 %sub.ptr.sub.i, i64 -1
  %46 = icmp slt i64 %smax271, 1
  %smin = select i1 %46, i64 %smax271, i64 1
  %47 = sub i64 %sub.ptr.rhs.cast.i, %__cur.0.lcssa.i.i.i.i.i
  %48 = icmp sgt i64 %47, %sub.ptr.sub.i
  %smax272 = select i1 %48, i64 %47, i64 %sub.ptr.sub.i
  %49 = lshr i64 %smax272, 4
  %50 = mul nsw i64 %smin, %49
  %51 = icmp ugt i64 %50, 1
  %umax = select i1 %51, i64 %50, i64 1
  %52 = shl nuw i64 %umax, 4
  call void @llvm.memset.p0i8.i64(i8* align 8 %cond.i.i.i.i222270, i8 0, i64 %52, i1 false)
  br label %for.body180

for.body49.lr.ph:                                 ; preds = %for.body33
  %53 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !363
  br label %for.body49

for.body33:                                       ; preds = %for.cond20.preheader, %for.body24.preheader
  %add.ptr.i159 = getelementptr inbounds i32, i32* %24, i64 %indvars.iv302
  %54 = load i32, i32* %add.ptr.i159, align 4, !tbaa !47
  %conv37 = sext i32 %54 to i64
  %arrayidx.i155 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i222, i64 %conv37, i32 0, i64 0
  store double 1.000000e+00, double* %arrayidx.i155, align 8, !tbaa !70
  %55 = or i64 %indvars.iv302, 1
  %add.ptr.i159.c = getelementptr inbounds i32, i32* %24, i64 %55
  %56 = load i32, i32* %add.ptr.i159.c, align 4, !tbaa !47
  %conv37.c = sext i32 %56 to i64
  %arrayidx.i155.c = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i222, i64 %conv37.c, i32 0, i64 1
  store double 1.000000e+00, double* %arrayidx.i155.c, align 8, !tbaa !70
  br i1 %cmp47251, label %for.body49.lr.ph, label %for.cond121.preheader

for.cond121.preheader:                            ; preds = %if.end114, %for.body33
  br i1 %cmp125259, label %for.cond129.preheader.lr.ph, label %for.cond.cleanup126

for.cond129.preheader.lr.ph:                      ; preds = %for.cond121.preheader
  %57 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %58 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !401
  %sub.ptr.lhs.cast.i.i139 = ptrtoint i32* %58 to i64
  %sub.ptr.rhs.cast.i.i140 = ptrtoint i32* %57 to i64
  %sub.ptr.sub.i.i141 = sub i64 %sub.ptr.lhs.cast.i.i139, %sub.ptr.rhs.cast.i.i140
  %59 = lshr exact i64 %sub.ptr.sub.i.i141, 2
  %conv.i142 = trunc i64 %59 to i32
  %60 = icmp sgt i32 %conv.i142, 1
  %.op = and i64 %59, 4294967295
  %wide.trip.count300 = select i1 %60, i64 %.op, i64 1
  br label %for.cond129.preheader

for.body49:                                       ; preds = %for.body49.lr.ph, %if.end114
  %indvars.iv289 = phi i64 [ %40, %for.body49.lr.ph ], [ %indvars.iv.next290, %if.end114 ]
  %ist.0.in252 = phi i32 [ %27, %for.body49.lr.ph ], [ %ist.0253, %if.end114 ]
  %ist.0253 = add nsw i32 %ist.0.in252, -1
  %idxprom = sext i32 %ist.0253 to i64
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #38
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %53, i64 %idxprom, i32 0
  %61 = load i32, i32* %index, align 4, !tbaa !369
  %conv55 = sext i32 %61 to i64
  br label %for.body54

for.cond.cleanup53:                               ; preds = %for.body54
  %tobool.not = icmp eq i32 %n_non_zero.1, 0
  br i1 %tobool.not, label %if.end114, label %if.then76

for.body54:                                       ; preds = %for.body49, %for.body54
  %cmp52 = phi i1 [ true, %for.body49 ], [ false, %for.body54 ]
  %indvars.iv283 = phi i64 [ 0, %for.body49 ], [ 1, %for.body54 ]
  %n_non_zero.0245 = phi i32 [ 0, %for.body49 ], [ %n_non_zero.1, %for.body54 ]
  %arrayidx.i151 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i222, i64 %conv55, i32 0, i64 %indvars.iv283
  %62 = load double, double* %arrayidx.i151, align 8, !tbaa !70
  %arrayidx61 = getelementptr inbounds <2 x double>, <2 x double>* %a, i64 0, i64 %indvars.iv283
  store double %62, double* %arrayidx61, align 8, !tbaa !70
  store double 0.000000e+00, double* %arrayidx.i151, align 8, !tbaa !70
  %cmp69 = fcmp fast une double %62, 0.000000e+00
  %n_non_zero.1 = select i1 %cmp69, i32 1, i32 %n_non_zero.0245
  br i1 %cmp52, label %for.body54, label %for.cond.cleanup53, !llvm.loop !443

if.then76:                                        ; preds = %for.cond.cleanup53
  %sub78 = add nsw i32 %ist.0.in252, -2
  %63 = zext i32 %sub78 to i64
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %53, i64 %63, i32 1
  %64 = load i32, i32* %end_plus_one, align 4, !tbaa !371
  %end_plus_one82 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %53, i64 %idxprom, i32 1
  %65 = load i32, i32* %end_plus_one82, align 4, !tbaa !371
  %cmp83248 = icmp slt i32 %64, %65
  br i1 %cmp83248, label %for.body85.lr.ph, label %if.end114

for.body85.lr.ph:                                 ; preds = %if.then76
  %66 = load double*, double** %multiplier_, align 8, !tbaa !365
  %67 = load i32*, i32** %index_, align 8, !tbaa !366
  %68 = sext i32 %64 to i64
  %69 = sext i32 %65 to i64
  %70 = load <2 x double>, <2 x double>* %a, align 16, !tbaa !70
  br label %for.body85

for.body85:                                       ; preds = %for.body85.lr.ph, %for.body85
  %indvars.iv287 = phi i64 [ %68, %for.body85.lr.ph ], [ %indvars.iv.next288, %for.body85 ]
  %arrayidx87 = getelementptr inbounds double, double* %66, i64 %indvars.iv287
  %71 = load double, double* %arrayidx87, align 8, !tbaa !70
  %arrayidx89 = getelementptr inbounds i32, i32* %67, i64 %indvars.iv287
  %72 = load i32, i32* %arrayidx89, align 4, !tbaa !47
  %conv90 = sext i32 %72 to i64
  %arrayidx103 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i222, i64 %conv90, i32 0, i64 0
  %73 = insertelement <2 x double> poison, double %71, i32 0
  %74 = shufflevector <2 x double> %73, <2 x double> undef, <2 x i32> zeroinitializer
  %75 = fmul fast <2 x double> %70, %74
  %76 = bitcast double* %arrayidx103 to <2 x double>*
  %77 = load <2 x double>, <2 x double>* %76, align 8, !tbaa !70
  %78 = fadd fast <2 x double> %77, %75
  %79 = bitcast double* %arrayidx103 to <2 x double>*
  store <2 x double> %78, <2 x double>* %79, align 8, !tbaa !70
  %indvars.iv.next288 = add nsw i64 %indvars.iv287, 1
  %cmp83 = icmp slt i64 %indvars.iv.next288, %69
  br i1 %cmp83, label %for.body85, label %if.end114, !llvm.loop !444

if.end114:                                        ; preds = %for.body85, %if.then76, %for.cond.cleanup53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #38
  %cmp47 = icmp sgt i64 %indvars.iv289, 2
  %indvars.iv.next290 = add nsw i64 %indvars.iv289, -1
  br i1 %cmp47, label %for.body49, label %for.cond121.preheader, !llvm.loop !445

for.cond129.preheader:                            ; preds = %for.cond129.preheader.lr.ph, %for.cond129.preheader
  %indvar291 = phi i64 [ 0, %for.cond129.preheader.lr.ph ], [ %indvar.next292, %for.cond129.preheader ]
  %80 = mul nsw i64 %41, %indvar291
  %81 = add nsw i64 %42, %80
  %scevgep = getelementptr double, double* %jacobian_out, i64 %81
  %scevgep293 = bitcast double* %scevgep to i8*
  %add.ptr.i136 = getelementptr inbounds i32, i32* %57, i64 %indvar291
  %82 = load i32, i32* %add.ptr.i136, align 4, !tbaa !47
  %conv136 = sext i32 %82 to i64
  %scevgep294 = getelementptr %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i222, i64 %conv136
  %scevgep294295 = bitcast %"struct.adept::Block"* %scevgep294 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %scevgep293, i8* nonnull align 8 dereferenceable(16) %scevgep294295, i64 16, i1 false)
  %indvar.next292 = add nuw nsw i64 %indvar291, 1
  %exitcond301.not = icmp eq i64 %indvar.next292, %wide.trip.count300
  br i1 %exitcond301.not, label %for.cond.cleanup126, label %for.cond129.preheader, !llvm.loop !446

for.cond.cleanup126:                              ; preds = %for.cond129.preheader, %for.cond121.preheader
  %indvars.iv.next303 = add nuw nsw i64 %indvars.iv302, 2
  %indvar.next = add nuw nsw i64 %indvar, 1
  %exitcond305.not = icmp eq i64 %indvar.next, %div321
  br i1 %exitcond305.not, label %for.cond.cleanup.loopexit, label %for.cond20.preheader, !llvm.loop !447

for.body180:                                      ; preds = %for.body168.preheader, %for.cond164.preheader
  %conv183 = zext i32 %i_dependent.0.lcssa to i64
  %83 = load i32*, i32** %_M_start.i.i96, align 8, !tbaa !361
  %add.ptr.i122 = getelementptr inbounds i32, i32* %83, i64 %conv183
  %84 = load i32, i32* %add.ptr.i122, align 4, !tbaa !47
  %conv185 = sext i32 %84 to i64
  %arrayidx.i118 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i222, i64 %conv185, i32 0, i64 0
  store double 1.000000e+00, double* %arrayidx.i118, align 8, !tbaa !70
  %n_statements_195 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  %85 = load i32, i32* %n_statements_195, align 8, !tbaa !368
  %cmp198237 = icmp sgt i32 %85, 1
  br i1 %cmp198237, label %for.body200.lr.ph, label %for.cond289.preheader

for.body200.lr.ph:                                ; preds = %for.body180
  %statement_202 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %86 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_202, align 8, !tbaa !363
  %multiplier_248 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %index_252 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %87 = zext i32 %85 to i64
  br label %for.body200

for.cond289.preheader:                            ; preds = %if.end280, %for.body180
  %88 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !401
  %89 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i105227 = ptrtoint i32* %88 to i64
  %sub.ptr.rhs.cast.i.i106228 = ptrtoint i32* %89 to i64
  %sub.ptr.sub.i.i107229 = sub i64 %sub.ptr.lhs.cast.i.i105227, %sub.ptr.rhs.cast.i.i106228
  %90 = lshr exact i64 %sub.ptr.sub.i.i107229, 2
  %conv.i108230 = trunc i64 %90 to i32
  %cmp293231 = icmp sgt i32 %conv.i108230, 0
  br i1 %cmp293231, label %for.body300.lr.ph, label %if.then.i.i.i

for.body300.lr.ph:                                ; preds = %for.cond289.preheader
  %sext = shl i64 %sub.ptr.sub.i.i179, 30
  %91 = ashr i64 %sext, 32
  %92 = sext i32 %i_dependent.0.lcssa to i64
  %wide.trip.count = and i64 %90, 4294967295
  br label %for.body300

for.body200:                                      ; preds = %for.body200.lr.ph, %if.end280
  %indvars.iv268 = phi i64 [ %87, %for.body200.lr.ph ], [ %indvars.iv.next269, %if.end280 ]
  %ist194.0.in238 = phi i32 [ %85, %for.body200.lr.ph ], [ %ist194.0239, %if.end280 ]
  %ist194.0239 = add nsw i32 %ist194.0.in238, -1
  %idxprom203 = sext i32 %ist194.0239 to i64
  %index212 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %86, i64 %idxprom203, i32 0
  %93 = load i32, i32* %index212, align 4, !tbaa !369
  %conv213 = sext i32 %93 to i64
  %arrayidx.i115 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i222, i64 %conv213, i32 0, i64 0
  %arrayidx.i115.promoted = load double, double* %arrayidx.i115, align 8, !tbaa !70
  %cmp227 = fcmp fast oeq double %arrayidx.i115.promoted, 0.000000e+00
  store double 0.000000e+00, double* %arrayidx.i115, align 8, !tbaa !70
  br i1 %cmp227, label %if.end280, label %if.then235

if.then235:                                       ; preds = %for.body200
  %sub238 = add nsw i32 %ist194.0.in238, -2
  %94 = zext i32 %sub238 to i64
  %end_plus_one241 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %86, i64 %94, i32 1
  %95 = load i32, i32* %end_plus_one241, align 4, !tbaa !371
  %end_plus_one243 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %86, i64 %idxprom203, i32 1
  %96 = load i32, i32* %end_plus_one243, align 4, !tbaa !371
  %cmp244234 = icmp slt i32 %95, %96
  br i1 %cmp244234, label %for.body246.lr.ph, label %if.end280

for.body246.lr.ph:                                ; preds = %if.then235
  %97 = load double*, double** %multiplier_248, align 8, !tbaa !365
  %98 = load i32*, i32** %index_252, align 8, !tbaa !366
  %99 = sext i32 %95 to i64
  %100 = sext i32 %96 to i64
  br label %for.body246

for.body246:                                      ; preds = %for.body246.lr.ph, %for.body246
  %indvars.iv266 = phi i64 [ %99, %for.body246.lr.ph ], [ %indvars.iv.next267, %for.body246 ]
  %arrayidx250 = getelementptr inbounds double, double* %97, i64 %indvars.iv266
  %101 = load double, double* %arrayidx250, align 8, !tbaa !70
  %arrayidx254 = getelementptr inbounds i32, i32* %98, i64 %indvars.iv266
  %102 = load i32, i32* %arrayidx254, align 4, !tbaa !47
  %conv255 = sext i32 %102 to i64
  %arrayidx.i109 = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i222, i64 %conv255, i32 0, i64 0
  %mul267 = fmul fast double %101, %arrayidx.i115.promoted
  %103 = load double, double* %arrayidx.i109, align 8, !tbaa !70
  %add270 = fadd fast double %103, %mul267
  store double %add270, double* %arrayidx.i109, align 8, !tbaa !70
  %indvars.iv.next267 = add nsw i64 %indvars.iv266, 1
  %cmp244 = icmp slt i64 %indvars.iv.next267, %100
  br i1 %cmp244, label %for.body246, label %if.end280, !llvm.loop !448

if.end280:                                        ; preds = %for.body246, %if.then235, %for.body200
  %cmp198 = icmp sgt i64 %indvars.iv268, 2
  %indvars.iv.next269 = add nsw i64 %indvars.iv268, -1
  br i1 %cmp198, label %for.body200, label %for.cond289.preheader, !llvm.loop !449

for.body300:                                      ; preds = %for.body300.lr.ph, %for.body300
  %indvars.iv = phi i64 [ 0, %for.body300.lr.ph ], [ %indvars.iv.next, %for.body300 ]
  %add.ptr.i102 = getelementptr inbounds i32, i32* %89, i64 %indvars.iv
  %104 = load i32, i32* %add.ptr.i102, align 4, !tbaa !47
  %conv304 = sext i32 %104 to i64
  %arrayidx.i = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %cond.i.i.i.i222, i64 %conv304, i32 0, i64 0
  %105 = load double, double* %arrayidx.i, align 8, !tbaa !70
  %106 = mul nsw i64 %indvars.iv, %91
  %107 = add nsw i64 %106, %92
  %arrayidx315 = getelementptr inbounds double, double* %jacobian_out, i64 %107
  store double %105, double* %arrayidx315, align 8, !tbaa !70
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.then.i.i.i, label %for.body300, !llvm.loop !450

if.end324:                                        ; preds = %for.cond.cleanup
  %tobool.not.i.i.i = icmp eq %"struct.adept::Block"* %cond.i.i.i.i222, null
  br i1 %tobool.not.i.i.i, label %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %for.body300, %for.cond289.preheader, %if.end324
  tail call void @_ZdlPv(i8* nonnull %cond.i.i.i.i222270) #38
  br label %_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev.exit

_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev.exit: ; preds = %if.end324, %if.then.i.i.i
  ret void

eh.resume:                                        ; preds = %if.then.i.i185, %ehcleanup.thread315, %cleanup.action
  %.pn.pn = phi { i8*, i32 } [ %.pn219, %cleanup.action ], [ %20, %if.then.i.i185 ], [ %20, %ehcleanup.thread315 ]
  resume { i8*, i32 } %.pn.pn

unreachable:                                      ; preds = %invoke.cont5
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack8jacobianEPd(%"class.adept::Stack"* nonnull readonly dereferenceable(149) %this, double* nocapture %jacobian_out) local_unnamed_addr #10 align 2 {
entry:
  %_M_finish.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %0 = load i32*, i32** %_M_finish.i.i, align 8, !tbaa !401
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i = ptrtoint i32* %0 to i64
  %sub.ptr.rhs.cast.i.i = ptrtoint i32* %1 to i64
  %sub.ptr.sub.i.i = sub i64 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %2 = lshr exact i64 %sub.ptr.sub.i.i, 2
  %conv.i = trunc i64 %2 to i32
  %_M_finish.i.i2 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %3 = load i32*, i32** %_M_finish.i.i2, align 8, !tbaa !401
  %_M_start.i.i3 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %_M_start.i.i3, align 8, !tbaa !361
  %sub.ptr.lhs.cast.i.i4 = ptrtoint i32* %3 to i64
  %sub.ptr.rhs.cast.i.i5 = ptrtoint i32* %4 to i64
  %sub.ptr.sub.i.i6 = sub i64 %sub.ptr.lhs.cast.i.i4, %sub.ptr.rhs.cast.i.i5
  %5 = lshr exact i64 %sub.ptr.sub.i.i6, 2
  %conv.i7 = trunc i64 %5 to i32
  %cmp.not = icmp sgt i32 %conv.i, %conv.i7
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN5adept5Stack16jacobian_forwardEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this, double* %jacobian_out)
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void @_ZN5adept5Stack16jacobian_reverseEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this, double* %jacobian_out)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept7versionB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !14
  %2 = bitcast %union.anon* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(5) %2, i8* nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i64 0, i64 0), i64 5, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %2, i64 5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept16compiler_versionB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i:
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !14
  %2 = bitcast %union.anon* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(7) %2, i8* nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i64 0, i64 0), i64 7, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 7, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %2, i64 7
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  %call2.i.i4 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i64 0, i64 0), i64 8)
          to label %nrvo.skipdtor unwind label %lpad1

lpad1:                                            ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
  %3 = landingpad { i8*, i32 }
          cleanup
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %4, %2
  br i1 %cmp.i.i.i, label %eh.resume, label %if.then.i.i

if.then.i.i:                                      ; preds = %lpad1
  tail call void @_ZdlPv(i8* %4) #38
  br label %eh.resume

nrvo.skipdtor:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc.exit.i
  ret void

eh.resume:                                        ; preds = %if.then.i.i, %lpad1
  resume { i8*, i32 } %3
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept14compiler_flagsB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to %union.anon**
  store %union.anon* %0, %union.anon** %1, align 8, !tbaa !14
  %2 = bitcast %union.anon* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(7) %2, i8* nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i64 0, i64 0), i64 7, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %agg.result, i64 0, i32 1
  store i64 7, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %2, i64 7
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept13configurationB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %s = alloca %"class.std::__cxx11::basic_stringstream", align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp11 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp24 = alloca %"class.std::__cxx11::basic_string", align 8
  %0 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 392, i8* nonnull %0) #38
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %s)
  %add.ptr = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 1
  %1 = bitcast %"class.std::basic_ostream.base"* %add.ptr to %"class.std::basic_ostream"*
  %call1.i8 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull getelementptr inbounds ([15 x i8], [15 x i8]* @.str.107, i64 0, i64 0), i64 14)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %entry
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #38
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %4 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %3, %union.anon** %4, align 8, !tbaa !14, !alias.scope !451
  %5 = bitcast %union.anon* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(5) %5, i8* nonnull align 1 dereferenceable(5) getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i64 0, i64 0), i64 5, i1 false) #38
  %_M_string_length.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 5, i64* %_M_string_length.i.i.i.i.i.i.i, align 8, !tbaa !19, !alias.scope !451
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i8, i8* %5, i64 5
  store i8 0, i8* %arrayidx.i.i.i.i.i.i, align 1, !tbaa !21, !alias.scope !451
  %_M_p.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %call2.i9 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull %5, i64 5)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont2
  %call1.i11 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call2.i9, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0), i64 2)
          to label %invoke.cont6 unwind label %lpad3

invoke.cont6:                                     ; preds = %invoke.cont4
  %6 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %6, %5
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %invoke.cont6
  call void @_ZdlPv(i8* %6) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %invoke.cont6, %if.then.i.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #38
  %call1.i14 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull getelementptr inbounds ([17 x i8], [17 x i8]* @.str.109, i64 0, i64 0), i64 16)
          to label %invoke.cont9 unwind label %lpad

invoke.cont9:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %7 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #38
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp11, i64 0, i32 2
  %9 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp11 to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !14, !alias.scope !454
  %10 = bitcast %union.anon* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(7) %10, i8* nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i64 0, i64 0), i64 7, i1 false) #38
  %_M_string_length.i.i.i.i.i.i.i16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp11, i64 0, i32 1
  store i64 7, i64* %_M_string_length.i.i.i.i.i.i.i16, align 8, !tbaa !19, !alias.scope !454
  %arrayidx.i.i.i.i.i.i17 = getelementptr inbounds i8, i8* %10, i64 7
  store i8 0, i8* %arrayidx.i.i.i.i.i.i17, align 1, !tbaa !21, !alias.scope !454
  %call2.i.i4.i = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i64 0, i64 0), i64 8)
          to label %invoke.cont13 unwind label %lpad1.i

lpad1.i:                                          ; preds = %invoke.cont9
  %11 = landingpad { i8*, i32 }
          cleanup
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp11, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !17, !alias.scope !454
  %cmp.i.i.i.i = icmp eq i8* %12, %10
  br i1 %cmp.i.i.i.i, label %ehcleanup20, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lpad1.i
  call void @_ZdlPv(i8* %12) #38
  br label %ehcleanup20

invoke.cont13:                                    ; preds = %invoke.cont9
  %_M_p.i.i.i18 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp11, i64 0, i32 0, i32 0
  %13 = load i8*, i8** %_M_p.i.i.i18, align 8, !tbaa !17
  %14 = load i64, i64* %_M_string_length.i.i.i.i.i.i.i16, align 8, !tbaa !19
  %call2.i20 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* %13, i64 %14)
          to label %invoke.cont15 unwind label %lpad14

invoke.cont15:                                    ; preds = %invoke.cont13
  %call1.i23 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call2.i20, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1)
          to label %invoke.cont17 unwind label %lpad14

invoke.cont17:                                    ; preds = %invoke.cont15
  %15 = load i8*, i8** %_M_p.i.i.i18, align 8, !tbaa !17
  %cmp.i.i.i27 = icmp eq i8* %15, %10
  br i1 %cmp.i.i.i27, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29, label %if.then.i.i28

if.then.i.i28:                                    ; preds = %invoke.cont17
  call void @_ZdlPv(i8* %15) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29: ; preds = %invoke.cont17, %if.then.i.i28
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #38
  %call1.i31 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull getelementptr inbounds ([19 x i8], [19 x i8]* @.str.110, i64 0, i64 0), i64 18)
          to label %invoke.cont26 unwind label %lpad

invoke.cont26:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29
  %16 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #38
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 2
  %18 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to %union.anon**
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !14, !alias.scope !457
  %19 = bitcast %union.anon* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(7) %19, i8* nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i64 0, i64 0), i64 7, i1 false) #38
  %_M_string_length.i.i.i.i.i.i.i33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 1
  store i64 7, i64* %_M_string_length.i.i.i.i.i.i.i33, align 8, !tbaa !19, !alias.scope !457
  %arrayidx.i.i.i.i.i.i34 = getelementptr inbounds i8, i8* %19, i64 7
  store i8 0, i8* %arrayidx.i.i.i.i.i.i34, align 1, !tbaa !21, !alias.scope !457
  %_M_p.i.i.i35 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp24, i64 0, i32 0, i32 0
  %call2.i37 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull %19, i64 7)
          to label %invoke.cont28 unwind label %lpad27

invoke.cont28:                                    ; preds = %invoke.cont26
  %call1.i40 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call2.i37, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.111, i64 0, i64 0), i64 2)
          to label %invoke.cont30 unwind label %lpad27

invoke.cont30:                                    ; preds = %invoke.cont28
  %20 = load i8*, i8** %_M_p.i.i.i35, align 8, !tbaa !17
  %cmp.i.i.i44 = icmp eq i8* %20, %19
  br i1 %cmp.i.i.i44, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit46, label %if.then.i.i45

if.then.i.i45:                                    ; preds = %invoke.cont30
  call void @_ZdlPv(i8* %20) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit46

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit46: ; preds = %invoke.cont30, %if.then.i.i45
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #38
  %call1.i48 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull getelementptr inbounds ([41 x i8], [41 x i8]* @.str.112, i64 0, i64 0), i64 40)
          to label %invoke.cont35 unwind label %lpad

invoke.cont35:                                    ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit46
  %call38 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %1, i32 4)
          to label %invoke.cont37 unwind label %lpad

invoke.cont37:                                    ; preds = %invoke.cont35
  %call1.i51 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call38, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1)
          to label %invoke.cont39 unwind label %lpad

invoke.cont39:                                    ; preds = %invoke.cont37
  %_M_stringbuf.i = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1
  invoke void @_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104) %_M_stringbuf.i)
          to label %invoke.cont41 unwind label %lpad

invoke.cont41:                                    ; preds = %invoke.cont39
  %21 = load i32 (...)**, i32 (...)*** bitcast ([10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE to i32 (...)***), align 8
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** %21, i32 (...)*** %22, align 8, !tbaa !74
  %23 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 8) to i32 (...)***), align 8
  %vbase.offset.ptr1.i.i = getelementptr i32 (...)*, i32 (...)** %21, i64 -3
  %24 = bitcast i32 (...)** %vbase.offset.ptr1.i.i to i64*
  %vbase.offset.i.i = load i64, i64* %24, align 8
  %add.ptr.i.i = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i
  %25 = bitcast i8* %add.ptr.i.i to i32 (...)***
  store i32 (...)** %23, i32 (...)*** %25, align 8, !tbaa !74
  %26 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 9) to i32 (...)***), align 8
  %27 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** %26, i32 (...)*** %27, align 8, !tbaa !74
  %28 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8, !tbaa !74
  %_M_p.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 0, i32 0
  %29 = load i8*, i8** %_M_p.i.i.i.i.i.i.i, align 8, !tbaa !17
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 2
  %arraydecay.i.i.i.i.i.i.i = bitcast %union.anon* %30 to i8*
  %cmp.i.i.i.i.i.i = icmp eq i8* %29, %arraydecay.i.i.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %invoke.cont41
  call void @_ZdlPv(i8* %29) #38
  br label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit

_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit: ; preds = %invoke.cont41, %if.then.i.i.i.i.i
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8, !tbaa !74
  %_M_buf_locale.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull dereferenceable(8) %_M_buf_locale.i.i.i.i) #38
  %31 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 2) to i32 (...)***), align 8
  store i32 (...)** %31, i32 (...)*** %22, align 8, !tbaa !74
  %32 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 3) to i32 (...)***), align 8
  %vbase.offset.ptr1.i.i.i.i = getelementptr i32 (...)*, i32 (...)** %31, i64 -3
  %33 = bitcast i32 (...)** %vbase.offset.ptr1.i.i.i.i to i64*
  %vbase.offset.i.i.i.i = load i64, i64* %33, align 8
  %add.ptr.i.i.i.i = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i.i.i
  %34 = bitcast i8* %add.ptr.i.i.i.i to i32 (...)***
  store i32 (...)** %32, i32 (...)*** %34, align 8, !tbaa !74
  %35 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %35, align 8, !tbaa !460
  %36 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull dereferenceable(216) %36) #38
  call void @llvm.lifetime.end.p0i8(i64 392, i8* nonnull %0) #38
  ret void

lpad:                                             ; preds = %invoke.cont39, %invoke.cont37, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit46, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit29, %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, %entry, %invoke.cont35
  %37 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup42

lpad3:                                            ; preds = %invoke.cont4, %invoke.cont2
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = load i8*, i8** %_M_p.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i55 = icmp eq i8* %39, %5
  br i1 %cmp.i.i.i55, label %ehcleanup, label %if.then.i.i56

if.then.i.i56:                                    ; preds = %lpad3
  call void @_ZdlPv(i8* %39) #38
  br label %ehcleanup

ehcleanup:                                        ; preds = %if.then.i.i56, %lpad3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #38
  br label %ehcleanup42

lpad14:                                           ; preds = %invoke.cont15, %invoke.cont13
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = load i8*, i8** %_M_p.i.i.i18, align 8, !tbaa !17
  %cmp.i.i.i60 = icmp eq i8* %41, %10
  br i1 %cmp.i.i.i60, label %ehcleanup20, label %if.then.i.i61

if.then.i.i61:                                    ; preds = %lpad14
  call void @_ZdlPv(i8* %41) #38
  br label %ehcleanup20

ehcleanup20:                                      ; preds = %if.then.i.i61, %lpad14, %if.then.i.i.i, %lpad1.i
  %.pn2 = phi { i8*, i32 } [ %11, %if.then.i.i.i ], [ %11, %lpad1.i ], [ %40, %lpad14 ], [ %40, %if.then.i.i61 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #38
  br label %ehcleanup42

lpad27:                                           ; preds = %invoke.cont28, %invoke.cont26
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = load i8*, i8** %_M_p.i.i.i35, align 8, !tbaa !17
  %cmp.i.i.i65 = icmp eq i8* %43, %19
  br i1 %cmp.i.i.i65, label %ehcleanup33, label %if.then.i.i66

if.then.i.i66:                                    ; preds = %lpad27
  call void @_ZdlPv(i8* %43) #38
  br label %ehcleanup33

ehcleanup33:                                      ; preds = %if.then.i.i66, %lpad27
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #38
  br label %ehcleanup42

ehcleanup42:                                      ; preds = %ehcleanup33, %ehcleanup20, %ehcleanup, %lpad
  %.pn5 = phi { i8*, i32 } [ %37, %lpad ], [ %42, %ehcleanup33 ], [ %.pn2, %ehcleanup20 ], [ %38, %ehcleanup ]
  %44 = load i32 (...)**, i32 (...)*** bitcast ([10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE to i32 (...)***), align 8
  %45 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** %44, i32 (...)*** %45, align 8, !tbaa !74
  %46 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 8) to i32 (...)***), align 8
  %vbase.offset.ptr1.i.i68 = getelementptr i32 (...)*, i32 (...)** %44, i64 -3
  %47 = bitcast i32 (...)** %vbase.offset.ptr1.i.i68 to i64*
  %vbase.offset.i.i69 = load i64, i64* %47, align 8
  %add.ptr.i.i70 = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i69
  %48 = bitcast i8* %add.ptr.i.i70 to i32 (...)***
  store i32 (...)** %46, i32 (...)*** %48, align 8, !tbaa !74
  %49 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 9) to i32 (...)***), align 8
  %50 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** %49, i32 (...)*** %50, align 8, !tbaa !74
  %51 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8, !tbaa !74
  %_M_p.i.i.i.i.i.i.i71 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 0, i32 0
  %52 = load i8*, i8** %_M_p.i.i.i.i.i.i.i71, align 8, !tbaa !17
  %53 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 2
  %arraydecay.i.i.i.i.i.i.i72 = bitcast %union.anon* %53 to i8*
  %cmp.i.i.i.i.i.i73 = icmp eq i8* %52, %arraydecay.i.i.i.i.i.i.i72
  br i1 %cmp.i.i.i.i.i.i73, label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit79, label %if.then.i.i.i.i.i74

if.then.i.i.i.i.i74:                              ; preds = %ehcleanup42
  call void @_ZdlPv(i8* %52) #38
  br label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit79

_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit79: ; preds = %ehcleanup42, %if.then.i.i.i.i.i74
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8, !tbaa !74
  %_M_buf_locale.i.i.i.i75 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull dereferenceable(8) %_M_buf_locale.i.i.i.i75) #38
  %54 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 2) to i32 (...)***), align 8
  store i32 (...)** %54, i32 (...)*** %45, align 8, !tbaa !74
  %55 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 3) to i32 (...)***), align 8
  %vbase.offset.ptr1.i.i.i.i76 = getelementptr i32 (...)*, i32 (...)** %54, i64 -3
  %56 = bitcast i32 (...)** %vbase.offset.ptr1.i.i.i.i76 to i64*
  %vbase.offset.i.i.i.i77 = load i64, i64* %56, align 8
  %add.ptr.i.i.i.i78 = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i.i.i77
  %57 = bitcast i8* %add.ptr.i.i.i.i78 to i32 (...)***
  store i32 (...)** %55, i32 (...)*** %57, align 8, !tbaa !74
  %58 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %58, align 8, !tbaa !460
  %59 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull dereferenceable(216) %59) #38
  call void @llvm.lifetime.end.p0i8(i64 392, i8* nonnull %0) #38
  resume { i8*, i32 } %.pn5
}

; Function Attrs: uwtable
declare dso_local void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128)) unnamed_addr #0 align 2

; Function Attrs: norecurse nounwind readnone uwtable willreturn mustprogress
define dso_local i32 @_ZN5adept16max_blas_threadsEv() local_unnamed_addr #23 {
entry:
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone uwtable willreturn mustprogress
define dso_local i32 @_ZN5adept20set_max_blas_threadsEi(i32 %n) local_unnamed_addr #23 {
entry:
  ret i32 1
}

; Function Attrs: norecurse nounwind readnone uwtable willreturn mustprogress
define dso_local zeroext i1 @_ZN5adept26have_matrix_multiplicationEv() local_unnamed_addr #23 {
entry:
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone uwtable willreturn mustprogress
define dso_local zeroext i1 @_ZN5adept19have_linear_algebraEv() local_unnamed_addr #23 {
entry:
  ret i1 false
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIfEENS_5ArrayILi1ET_Lb0EEERKNS1_ILi2ES2_Lb0EEERKS3_(%"class.adept::Array.35"* noalias sret(%"class.adept::Array.35") align 8 %agg.result, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %A, %"class.adept::Array.35"* nonnull align 8 dereferenceable(24) %b) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i64 61, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.35"* noalias sret(%"class.adept::Array.35") align 8 %agg.result, %"class.adept::SpecialMatrix"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.35"* nonnull align 8 dereferenceable(24) %b) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i64 61, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.35"* noalias sret(%"class.adept::Array.35") align 8 %agg.result, %"class.adept::SpecialMatrix.19"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.35"* nonnull align 8 dereferenceable(24) %b) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i64 61, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIfEENS_5ArrayILi2ET_Lb0EEERKS3_S5_(%"class.adept::Array"* noalias sret(%"class.adept::Array") align 8 %agg.result, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %A, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %B) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i64 61, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array"* noalias sret(%"class.adept::Array") align 8 %agg.result, %"class.adept::SpecialMatrix"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %B) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i64 61, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array"* noalias sret(%"class.adept::Array") align 8 %agg.result, %"class.adept::SpecialMatrix.19"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %B) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i64 61, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIdEENS_5ArrayILi1ET_Lb0EEERKNS1_ILi2ES2_Lb0EEERKS3_(%"class.adept::Array.38"* noalias sret(%"class.adept::Array.38") align 8 %agg.result, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %A, %"class.adept::Array.38"* nonnull align 8 dereferenceable(24) %b) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i64 61, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.38"* noalias sret(%"class.adept::Array.38") align 8 %agg.result, %"class.adept::SpecialMatrix.25"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.38"* nonnull align 8 dereferenceable(24) %b) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i64 61, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.38"* noalias sret(%"class.adept::Array.38") align 8 %agg.result, %"class.adept::SpecialMatrix.27"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.38"* nonnull align 8 dereferenceable(24) %b) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i64 61, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIdEENS_5ArrayILi2ET_Lb0EEERKS3_S5_(%"class.adept::Array.22"* noalias sret(%"class.adept::Array.22") align 8 %agg.result, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %A, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %B) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i64 61, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.22"* noalias sret(%"class.adept::Array.22") align 8 %agg.result, %"class.adept::SpecialMatrix.25"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %B) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i64 61, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define weak_odr dso_local void @_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.22"* noalias sret(%"class.adept::Array.22") align 8 %agg.result, %"class.adept::SpecialMatrix.27"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %B) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 61, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i2 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i2, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(61) %call5.i.i.i5.i2, i8* nonnull align 1 dereferenceable(61) getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), i64 61, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i2, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %6 = bitcast i8* %exception to i32 (...)***
  %message_.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %11 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !74
  %12 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %12, %8
  br i1 %cmp.i.i.i.i.i, label %lpad2.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %12) #38
  br label %lpad2.body

invoke.cont3:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad2.body.thread

ehcleanup.thread:                                 ; preds = %entry
  %13 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %14 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %14) #38
  %15 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %15, %3
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad2.body
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

lpad2.body.thread:                                ; preds = %invoke.cont3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i9 = icmp eq i8* %17, %3
  br i1 %cmp.i.i.i9, label %ehcleanup.thread14, label %if.then.i.i

ehcleanup.thread14:                               ; preds = %lpad2.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad2.body.thread
  call void @_ZdlPv(i8* %17) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad2.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn6 = phi { i8*, i32 } [ %13, %ehcleanup.thread ], [ %11, %ehcleanup ], [ %11, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread14, %cleanup.action
  %.pn5 = phi { i8*, i32 } [ %.pn6, %cleanup.action ], [ %16, %if.then.i.i ], [ %16, %ehcleanup.thread14 ]
  resume { i8*, i32 } %.pn5

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZN5adept8linspaceEddi(%"class.adept::Array.38"* noalias nonnull sret(%"class.adept::Array.38") align 8 %agg.result, double %x1, double %x2, i32 %n) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %dim.i.i = alloca [7 x i32], align 16
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %storage_.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %agg.result, i64 0, i32 1
  store %"class.adept::Storage.24"* null, %"class.adept::Storage.24"** %storage_.i, align 8, !tbaa !462
  %0 = bitcast [7 x i32]* %dim.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %0) #38
  %arrayinit.begin.i.i = getelementptr inbounds [7 x i32], [7 x i32]* %dim.i.i, i64 0, i64 0
  store i32 %n, i32* %arrayinit.begin.i.i, align 16, !tbaa !47
  %arrayinit.element.i.i = getelementptr inbounds [7 x i32], [7 x i32]* %dim.i.i, i64 0, i64 1
  %1 = bitcast i32* %arrayinit.element.i.i to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 dereferenceable(24) %1, i8 -1, i64 24, i1 false)
  call void @_ZN5adept5ArrayILi1EdLb0EE6resizeEPKib(%"class.adept::Array.38"* nonnull dereferenceable(24) %agg.result, i32* nonnull %arrayinit.begin.i.i, i1 zeroext false)
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %0) #38
  %cmp = icmp sgt i32 %n, 1
  br i1 %cmp, label %invoke.cont.lr.ph, label %if.else

invoke.cont.lr.ph:                                ; preds = %entry
  %data_.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %agg.result, i64 0, i32 0
  %2 = load double*, double** %data_.i, align 8, !tbaa !465
  %arrayidx.i1.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %agg.result, i64 0, i32 3, i32 0, i64 0
  %3 = load i32, i32* %arrayidx.i1.i, align 4, !tbaa !47
  %sub = fsub fast double %x2, %x1
  %sub2 = add nsw i32 %n, -1
  %conv3 = sitofp i32 %sub2 to double
  %4 = sext i32 %3 to i64
  %wide.trip.count = zext i32 %n to i64
  %5 = fdiv fast double 1.000000e+00, %conv3
  br label %invoke.cont

invoke.cont:                                      ; preds = %invoke.cont.lr.ph, %invoke.cont
  %indvars.iv = phi i64 [ 0, %invoke.cont.lr.ph ], [ %indvars.iv.next, %invoke.cont ]
  %6 = mul nsw i64 %indvars.iv, %4
  %arrayidx.i = getelementptr inbounds double, double* %2, i64 %6
  %7 = trunc i64 %indvars.iv to i32
  %conv = sitofp i32 %7 to double
  %mul = fmul fast double %sub, %conv
  %8 = fmul fast double %mul, %5
  %add = fadd fast double %8, %x1
  store double %add, double* %arrayidx.i, align 8, !tbaa !70
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %nrvo.skipdtor, label %invoke.cont, !llvm.loop !466

if.else:                                          ; preds = %entry
  %cmp4 = icmp eq i32 %n, 1
  %cmp5 = fcmp fast oeq double %x1, %x2
  %or.cond = and i1 %cmp5, %cmp4
  br i1 %or.cond, label %invoke.cont8, label %if.else10

invoke.cont8:                                     ; preds = %if.else
  %data_.i19 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %agg.result, i64 0, i32 0
  %9 = load double*, double** %data_.i19, align 8, !tbaa !465
  store double %x1, double* %9, align 8, !tbaa !70
  br label %nrvo.skipdtor

if.else10:                                        ; preds = %if.else
  br i1 %cmp4, label %if.then12, label %nrvo.skipdtor

if.then12:                                        ; preds = %if.else10
  %exception = call i8* @__cxa_allocate_exception(i64 40) #38
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #38
  %11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %12 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %11, %union.anon** %12, align 8, !tbaa !14
  %13 = bitcast %union.anon* %11 to i8*
  %14 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #38
  store i64 46, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i21 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %if.then12
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i21, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %15 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %15, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(46) %call5.i.i.i5.i21, i8* nonnull align 1 dereferenceable(46) getelementptr inbounds ([47 x i8], [47 x i8]* @.str.114, i64 0, i64 0), i64 46, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %15, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i21, i64 %15
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #38
  %16 = bitcast i8* %exception to %"class.adept::invalid_operation"*
  invoke void @_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %16, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont17 unwind label %lpad16

invoke.cont17:                                    ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_operationE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad16

ehcleanup.thread:                                 ; preds = %if.then12
  %17 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #38
  br label %cleanup.action

lpad16:                                           ; preds = %invoke.cont17, %call5.i.i.i5.i.noexc
  %cleanup.isactive.0 = phi i1 [ false, %invoke.cont17 ], [ true, %call5.i.i.i5.i.noexc ]
  %18 = landingpad { i8*, i32 }
          cleanup
  %19 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %19, %13
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i

if.then.i.i:                                      ; preds = %lpad16
  call void @_ZdlPv(i8* %19) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #38
  br i1 %cleanup.isactive.0, label %cleanup.action, label %ehcleanup23

ehcleanup:                                        ; preds = %lpad16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #38
  br i1 %cleanup.isactive.0, label %cleanup.action, label %ehcleanup23

cleanup.action:                                   ; preds = %if.then.i.i, %ehcleanup.thread, %ehcleanup
  %.pn24 = phi { i8*, i32 } [ %17, %ehcleanup.thread ], [ %18, %ehcleanup ], [ %18, %if.then.i.i ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %ehcleanup23

nrvo.skipdtor:                                    ; preds = %invoke.cont, %invoke.cont8, %if.else10
  ret void

ehcleanup23:                                      ; preds = %if.then.i.i, %ehcleanup, %cleanup.action
  %.pn16 = phi { i8*, i32 } [ %.pn24, %cleanup.action ], [ %18, %ehcleanup ], [ %18, %if.then.i.i ]
  %20 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %storage_.i, align 8, !tbaa !462
  %tobool.not.i = icmp eq %"class.adept::Storage.24"* %20, null
  br i1 %tobool.not.i, label %_ZN5adept5ArrayILi1EdLb0EED2Ev.exit, label %if.then.i

if.then.i:                                        ; preds = %ehcleanup23
  invoke void @_ZN5adept7StorageIdE11remove_linkEv(%"class.adept::Storage.24"* nonnull dereferenceable(20) %20)
          to label %_ZN5adept5ArrayILi1EdLb0EED2Ev.exit unwind label %terminate.lpad.i

terminate.lpad.i:                                 ; preds = %if.then.i
  %21 = landingpad { i8*, i32 }
          catch i8* null
  %22 = extractvalue { i8*, i32 } %21, 0
  call void @__clang_call_terminate(i8* %22) #41
  unreachable

_ZN5adept5ArrayILi1EdLb0EED2Ev.exit:              ; preds = %ehcleanup23, %if.then.i
  resume { i8*, i32 } %.pn16

unreachable:                                      ; preds = %invoke.cont17
  unreachable
}

; Function Attrs: uwtable
define dso_local void @adept_dgmm_objective(i32 %d, i32 %k, i32 %n, double* nocapture readonly %alphas, double* %alphasb, double* nocapture readonly %means, double* %meansb, double* nocapture readonly %icf, double* %icfb, double* %x, %struct.Wishart* nocapture readonly byval(%struct.Wishart) align 8 %wishart, double* nocapture readnone %err, double* nocapture readnone %errb) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %stack = alloca %"class.adept::Stack", align 8
  %aerr = alloca %"class.adept::Active", align 8
  %ref.tmp = alloca double, align 8
  %add = add nsw i32 %d, 1
  %mul = mul nsw i32 %add, %d
  %div = sdiv i32 %mul, 2
  %0 = bitcast %"class.adept::Stack"* %stack to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %0) #38
  call void @_ZN5adept5StackC2Eb(%"class.adept::Stack"* nonnull dereferenceable(149) %stack, i1 zeroext true)
  %conv = sext i32 %k to i64
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 16)
  %2 = extractvalue { i64, i1 } %1, 1
  %3 = extractvalue { i64, i1 } %1, 0
  %4 = or i64 %3, 8
  %5 = select i1 %2, i64 -1, i64 %4
  %call = invoke noalias nonnull i8* @_Znam(i64 %5) #44
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %6 = bitcast i8* %call to i64*
  store i64 %conv, i64* %6, align 16
  %7 = getelementptr inbounds i8, i8* %call, i64 8
  %8 = bitcast i8* %7 to %"class.adept::Active"*
  %isempty = icmp eq i32 %k, 0
  br i1 %isempty, label %arrayctor.cont, label %new.ctorloop

new.ctorloop:                                     ; preds = %invoke.cont
  %arrayctor.end = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %8, i64 %conv
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %invoke.cont7, %new.ctorloop
  %arrayctor.cur = phi %"class.adept::Active"* [ %8, %new.ctorloop ], [ %arrayctor.next, %invoke.cont7 ]
  %val_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i, align 8, !tbaa !467
  %9 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %9, i64 0, i32 9
  %10 = load i32, i32* %n_gradients_registered_.i.i, align 4, !tbaa !376
  %inc.i.i = add nsw i32 %10, 1
  store i32 %inc.i.i, i32* %n_gradients_registered_.i.i, align 4, !tbaa !376
  %gap_list_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %9, i64 0, i32 4
  %11 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i, align 8, !tbaa !358
  %cmp.i.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %12, %11
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %arrayctor.loop
  %i_gradient_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %9, i64 0, i32 6
  %13 = load i32, i32* %i_gradient_.i.i, align 8, !tbaa !387
  %inc2.i.i = add nsw i32 %13, 1
  store i32 %inc2.i.i, i32* %i_gradient_.i.i, align 8, !tbaa !387
  %max_gradient_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %9, i64 0, i32 8
  %14 = load i32, i32* %max_gradient_.i.i, align 8, !tbaa !388
  %cmp.not.i.i = icmp slt i32 %13, %14
  br i1 %cmp.not.i.i, label %invoke.cont7, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.then.i.i
  store i32 %inc2.i.i, i32* %max_gradient_.i.i, align 8, !tbaa !388
  br label %invoke.cont7

if.else.i.i:                                      ; preds = %arrayctor.loop
  %15 = bitcast %"struct.std::__detail::_List_node_base"* %12 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %12, i64 1
  %start.i.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i to i32*
  %16 = load i32, i32* %start.i.i, align 4, !tbaa !379
  %inc11.i.i = add nsw i32 %16, 1
  store i32 %inc11.i.i, i32* %start.i.i, align 4, !tbaa !379
  %end.i.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %15, i64 0, i32 1, i32 0, i64 4
  %17 = bitcast i8* %end.i.i to i32*
  %18 = load i32, i32* %17, align 4, !tbaa !377
  %cmp13.not.i.i = icmp slt i32 %16, %18
  br i1 %cmp13.not.i.i, label %invoke.cont7, label %if.then14.i.i

if.then14.i.i:                                    ; preds = %if.else.i.i
  %_M_node.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %9, i64 0, i32 5, i32 0
  %19 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i, align 8, !tbaa !380
  %cmp.i8.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %19, %12
  br i1 %cmp.i8.i.i, label %if.then18.i.i, label %if.end24.i.i

if.then18.i.i:                                    ; preds = %if.then14.i.i
  store %"struct.std::__detail::_List_node_base"* %11, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i, align 8, !tbaa.struct !385
  br label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.then18.i.i, %if.then14.i.i
  %_M_size.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %9, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !381
  %sub.i.i.i.i.i = add i64 %20, -1
  store i64 %sub.i.i.i.i.i, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !381
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %12) #38
  %21 = bitcast %"struct.std::__detail::_List_node_base"* %12 to i8*
  call void @_ZdlPv(i8* nonnull %21) #38
  br label %invoke.cont7

invoke.cont7:                                     ; preds = %if.end24.i.i, %if.else.i.i, %if.then4.i.i, %if.then.i.i
  %return_val.0.i.i = phi i32 [ %16, %if.end24.i.i ], [ %16, %if.else.i.i ], [ %13, %if.then4.i.i ], [ %13, %if.then.i.i ]
  %gradient_index_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 0, i32 1
  store i32 %return_val.0.i.i, i32* %gradient_index_.i, align 8, !tbaa !469
  %arrayctor.next = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %"class.adept::Active"* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %invoke.cont7, %invoke.cont
  %mul9 = mul nsw i32 %k, %d
  %conv10 = sext i32 %mul9 to i64
  %22 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv10, i64 16)
  %23 = extractvalue { i64, i1 } %22, 1
  %24 = extractvalue { i64, i1 } %22, 0
  %25 = or i64 %24, 8
  %26 = select i1 %23, i64 -1, i64 %25
  %call13 = invoke noalias nonnull i8* @_Znam(i64 %26) #44
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %arrayctor.cont
  %27 = bitcast i8* %call13 to i64*
  store i64 %conv10, i64* %27, align 16
  %28 = getelementptr inbounds i8, i8* %call13, i64 8
  %29 = bitcast i8* %28 to %"class.adept::Active"*
  %isempty14 = icmp eq i32 %mul9, 0
  br i1 %isempty14, label %arrayctor.cont29, label %new.ctorloop15

new.ctorloop15:                                   ; preds = %invoke.cont12
  %arrayctor.end16 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %29, i64 %conv10
  br label %arrayctor.loop17

arrayctor.loop17:                                 ; preds = %invoke.cont20, %new.ctorloop15
  %arrayctor.cur18 = phi %"class.adept::Active"* [ %29, %new.ctorloop15 ], [ %arrayctor.next27, %invoke.cont20 ]
  %val_.i46 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur18, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i46, align 8, !tbaa !467
  %30 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i.i47 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %30, i64 0, i32 9
  %31 = load i32, i32* %n_gradients_registered_.i.i47, align 4, !tbaa !376
  %inc.i.i48 = add nsw i32 %31, 1
  store i32 %inc.i.i48, i32* %n_gradients_registered_.i.i47, align 4, !tbaa !376
  %gap_list_.i.i49 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %30, i64 0, i32 4
  %32 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i49, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i50 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i50, align 8, !tbaa !358
  %cmp.i.i.i51 = icmp eq %"struct.std::__detail::_List_node_base"* %33, %32
  br i1 %cmp.i.i.i51, label %if.then.i.i56, label %if.else.i.i63

if.then.i.i56:                                    ; preds = %arrayctor.loop17
  %i_gradient_.i.i52 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %30, i64 0, i32 6
  %34 = load i32, i32* %i_gradient_.i.i52, align 8, !tbaa !387
  %inc2.i.i53 = add nsw i32 %34, 1
  store i32 %inc2.i.i53, i32* %i_gradient_.i.i52, align 8, !tbaa !387
  %max_gradient_.i.i54 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %30, i64 0, i32 8
  %35 = load i32, i32* %max_gradient_.i.i54, align 8, !tbaa !388
  %cmp.not.i.i55 = icmp slt i32 %34, %35
  br i1 %cmp.not.i.i55, label %invoke.cont20, label %if.then4.i.i57

if.then4.i.i57:                                   ; preds = %if.then.i.i56
  store i32 %inc2.i.i53, i32* %max_gradient_.i.i54, align 8, !tbaa !388
  br label %invoke.cont20

if.else.i.i63:                                    ; preds = %arrayctor.loop17
  %36 = bitcast %"struct.std::__detail::_List_node_base"* %33 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i58 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %33, i64 1
  %start.i.i59 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i58 to i32*
  %37 = load i32, i32* %start.i.i59, align 4, !tbaa !379
  %inc11.i.i60 = add nsw i32 %37, 1
  store i32 %inc11.i.i60, i32* %start.i.i59, align 4, !tbaa !379
  %end.i.i61 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %36, i64 0, i32 1, i32 0, i64 4
  %38 = bitcast i8* %end.i.i61 to i32*
  %39 = load i32, i32* %38, align 4, !tbaa !377
  %cmp13.not.i.i62 = icmp slt i32 %37, %39
  br i1 %cmp13.not.i.i62, label %invoke.cont20, label %if.then14.i.i66

if.then14.i.i66:                                  ; preds = %if.else.i.i63
  %_M_node.i.i.i64 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %30, i64 0, i32 5, i32 0
  %40 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i64, align 8, !tbaa !380
  %cmp.i8.i.i65 = icmp eq %"struct.std::__detail::_List_node_base"* %40, %33
  br i1 %cmp.i8.i.i65, label %if.then18.i.i67, label %if.end24.i.i70

if.then18.i.i67:                                  ; preds = %if.then14.i.i66
  store %"struct.std::__detail::_List_node_base"* %32, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i64, align 8, !tbaa.struct !385
  br label %if.end24.i.i70

if.end24.i.i70:                                   ; preds = %if.then18.i.i67, %if.then14.i.i66
  %_M_size.i.i.i.i.i68 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %30, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %_M_size.i.i.i.i.i68, align 8, !tbaa !381
  %sub.i.i.i.i.i69 = add i64 %41, -1
  store i64 %sub.i.i.i.i.i69, i64* %_M_size.i.i.i.i.i68, align 8, !tbaa !381
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %33) #38
  %42 = bitcast %"struct.std::__detail::_List_node_base"* %33 to i8*
  call void @_ZdlPv(i8* nonnull %42) #38
  br label %invoke.cont20

invoke.cont20:                                    ; preds = %if.end24.i.i70, %if.else.i.i63, %if.then4.i.i57, %if.then.i.i56
  %return_val.0.i.i71 = phi i32 [ %37, %if.end24.i.i70 ], [ %37, %if.else.i.i63 ], [ %34, %if.then4.i.i57 ], [ %34, %if.then.i.i56 ]
  %gradient_index_.i72 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur18, i64 0, i32 1
  store i32 %return_val.0.i.i71, i32* %gradient_index_.i72, align 8, !tbaa !469
  %arrayctor.next27 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur18, i64 1
  %arrayctor.done28 = icmp eq %"class.adept::Active"* %arrayctor.next27, %arrayctor.end16
  br i1 %arrayctor.done28, label %arrayctor.cont29, label %arrayctor.loop17

arrayctor.cont29:                                 ; preds = %invoke.cont20, %invoke.cont12
  %mul30 = mul nsw i32 %div, %k
  %conv31 = sext i32 %mul30 to i64
  %43 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv31, i64 16)
  %44 = extractvalue { i64, i1 } %43, 1
  %45 = extractvalue { i64, i1 } %43, 0
  %46 = or i64 %45, 8
  %47 = select i1 %44, i64 -1, i64 %46
  %call34 = invoke noalias nonnull i8* @_Znam(i64 %47) #44
          to label %invoke.cont33 unwind label %lpad32

invoke.cont33:                                    ; preds = %arrayctor.cont29
  %48 = bitcast i8* %call34 to i64*
  store i64 %conv31, i64* %48, align 16
  %49 = getelementptr inbounds i8, i8* %call34, i64 8
  %50 = bitcast i8* %49 to %"class.adept::Active"*
  %isempty35 = icmp eq i32 %mul30, 0
  br i1 %isempty35, label %arrayctor.cont50, label %new.ctorloop36

new.ctorloop36:                                   ; preds = %invoke.cont33
  %arrayctor.end37 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %50, i64 %conv31
  br label %arrayctor.loop38

arrayctor.loop38:                                 ; preds = %invoke.cont41, %new.ctorloop36
  %arrayctor.cur39 = phi %"class.adept::Active"* [ %50, %new.ctorloop36 ], [ %arrayctor.next48, %invoke.cont41 ]
  %val_.i74 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur39, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i74, align 8, !tbaa !467
  %51 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i.i75 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %51, i64 0, i32 9
  %52 = load i32, i32* %n_gradients_registered_.i.i75, align 4, !tbaa !376
  %inc.i.i76 = add nsw i32 %52, 1
  store i32 %inc.i.i76, i32* %n_gradients_registered_.i.i75, align 4, !tbaa !376
  %gap_list_.i.i77 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %51, i64 0, i32 4
  %53 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i77, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i78 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i78, align 8, !tbaa !358
  %cmp.i.i.i79 = icmp eq %"struct.std::__detail::_List_node_base"* %54, %53
  br i1 %cmp.i.i.i79, label %if.then.i.i84, label %if.else.i.i91

if.then.i.i84:                                    ; preds = %arrayctor.loop38
  %i_gradient_.i.i80 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %51, i64 0, i32 6
  %55 = load i32, i32* %i_gradient_.i.i80, align 8, !tbaa !387
  %inc2.i.i81 = add nsw i32 %55, 1
  store i32 %inc2.i.i81, i32* %i_gradient_.i.i80, align 8, !tbaa !387
  %max_gradient_.i.i82 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %51, i64 0, i32 8
  %56 = load i32, i32* %max_gradient_.i.i82, align 8, !tbaa !388
  %cmp.not.i.i83 = icmp slt i32 %55, %56
  br i1 %cmp.not.i.i83, label %invoke.cont41, label %if.then4.i.i85

if.then4.i.i85:                                   ; preds = %if.then.i.i84
  store i32 %inc2.i.i81, i32* %max_gradient_.i.i82, align 8, !tbaa !388
  br label %invoke.cont41

if.else.i.i91:                                    ; preds = %arrayctor.loop38
  %57 = bitcast %"struct.std::__detail::_List_node_base"* %54 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i86 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %54, i64 1
  %start.i.i87 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i86 to i32*
  %58 = load i32, i32* %start.i.i87, align 4, !tbaa !379
  %inc11.i.i88 = add nsw i32 %58, 1
  store i32 %inc11.i.i88, i32* %start.i.i87, align 4, !tbaa !379
  %end.i.i89 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %57, i64 0, i32 1, i32 0, i64 4
  %59 = bitcast i8* %end.i.i89 to i32*
  %60 = load i32, i32* %59, align 4, !tbaa !377
  %cmp13.not.i.i90 = icmp slt i32 %58, %60
  br i1 %cmp13.not.i.i90, label %invoke.cont41, label %if.then14.i.i94

if.then14.i.i94:                                  ; preds = %if.else.i.i91
  %_M_node.i.i.i92 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %51, i64 0, i32 5, i32 0
  %61 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i92, align 8, !tbaa !380
  %cmp.i8.i.i93 = icmp eq %"struct.std::__detail::_List_node_base"* %61, %54
  br i1 %cmp.i8.i.i93, label %if.then18.i.i95, label %if.end24.i.i98

if.then18.i.i95:                                  ; preds = %if.then14.i.i94
  store %"struct.std::__detail::_List_node_base"* %53, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i92, align 8, !tbaa.struct !385
  br label %if.end24.i.i98

if.end24.i.i98:                                   ; preds = %if.then18.i.i95, %if.then14.i.i94
  %_M_size.i.i.i.i.i96 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %51, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %_M_size.i.i.i.i.i96, align 8, !tbaa !381
  %sub.i.i.i.i.i97 = add i64 %62, -1
  store i64 %sub.i.i.i.i.i97, i64* %_M_size.i.i.i.i.i96, align 8, !tbaa !381
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %54) #38
  %63 = bitcast %"struct.std::__detail::_List_node_base"* %54 to i8*
  call void @_ZdlPv(i8* nonnull %63) #38
  br label %invoke.cont41

invoke.cont41:                                    ; preds = %if.end24.i.i98, %if.else.i.i91, %if.then4.i.i85, %if.then.i.i84
  %return_val.0.i.i99 = phi i32 [ %58, %if.end24.i.i98 ], [ %58, %if.else.i.i91 ], [ %55, %if.then4.i.i85 ], [ %55, %if.then.i.i84 ]
  %gradient_index_.i100 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur39, i64 0, i32 1
  store i32 %return_val.0.i.i99, i32* %gradient_index_.i100, align 8, !tbaa !469
  %arrayctor.next48 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur39, i64 1
  %arrayctor.done49 = icmp eq %"class.adept::Active"* %arrayctor.next48, %arrayctor.end37
  br i1 %arrayctor.done49, label %arrayctor.cont50, label %arrayctor.loop38

arrayctor.cont50:                                 ; preds = %invoke.cont41, %invoke.cont33
  %cmp5.i = icmp sgt i32 %k, 0
  br i1 %cmp5.i, label %for.body.preheader.i, label %invoke.cont51

for.body.preheader.i:                             ; preds = %arrayctor.cont50
  %wide.trip.count.i = zext i32 %k to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.preheader.i
  %indvars.iv.i = phi i64 [ 0, %for.body.preheader.i ], [ %indvars.iv.next.i, %for.body.i ]
  %arrayidx2.i = getelementptr inbounds double, double* %alphas, i64 %indvars.iv.i
  %64 = load double, double* %arrayidx2.i, align 8, !tbaa !70
  %val_.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %8, i64 %indvars.iv.i, i32 0
  store double %64, double* %val_.i.i, align 8, !tbaa !467
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %invoke.cont51, label %for.body.i, !llvm.loop !470

invoke.cont51:                                    ; preds = %for.body.i, %arrayctor.cont50
  %cmp5.i102 = icmp sgt i32 %mul9, 0
  br i1 %cmp5.i102, label %for.body.preheader.i104, label %invoke.cont53

for.body.preheader.i104:                          ; preds = %invoke.cont51
  %wide.trip.count.i103 = zext i32 %mul9 to i64
  br label %for.body.i110

for.body.i110:                                    ; preds = %for.body.i110, %for.body.preheader.i104
  %indvars.iv.i105 = phi i64 [ 0, %for.body.preheader.i104 ], [ %indvars.iv.next.i108, %for.body.i110 ]
  %arrayidx2.i106 = getelementptr inbounds double, double* %means, i64 %indvars.iv.i105
  %65 = load double, double* %arrayidx2.i106, align 8, !tbaa !70
  %val_.i.i107 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %29, i64 %indvars.iv.i105, i32 0
  store double %65, double* %val_.i.i107, align 8, !tbaa !467
  %indvars.iv.next.i108 = add nuw nsw i64 %indvars.iv.i105, 1
  %exitcond.not.i109 = icmp eq i64 %indvars.iv.next.i108, %wide.trip.count.i103
  br i1 %exitcond.not.i109, label %invoke.cont53, label %for.body.i110, !llvm.loop !470

invoke.cont53:                                    ; preds = %for.body.i110, %invoke.cont51
  %cmp5.i112 = icmp sgt i32 %mul30, 0
  br i1 %cmp5.i112, label %for.body.preheader.i114, label %invoke.cont55

for.body.preheader.i114:                          ; preds = %invoke.cont53
  %wide.trip.count.i113 = zext i32 %mul30 to i64
  br label %for.body.i120

for.body.i120:                                    ; preds = %for.body.i120, %for.body.preheader.i114
  %indvars.iv.i115 = phi i64 [ 0, %for.body.preheader.i114 ], [ %indvars.iv.next.i118, %for.body.i120 ]
  %arrayidx2.i116 = getelementptr inbounds double, double* %icf, i64 %indvars.iv.i115
  %66 = load double, double* %arrayidx2.i116, align 8, !tbaa !70
  %val_.i.i117 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %50, i64 %indvars.iv.i115, i32 0
  store double %66, double* %val_.i.i117, align 8, !tbaa !467
  %indvars.iv.next.i118 = add nuw nsw i64 %indvars.iv.i115, 1
  %exitcond.not.i119 = icmp eq i64 %indvars.iv.next.i118, %wide.trip.count.i113
  br i1 %exitcond.not.i119, label %invoke.cont55, label %for.body.i120, !llvm.loop !470

invoke.cont55:                                    ; preds = %for.body.i120, %invoke.cont53
  %n_operations_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 0, i32 5
  store i32 0, i32* %n_operations_.i.i, align 8, !tbaa !399
  %n_statements_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 0, i32 3
  store i32 0, i32* %n_statements_.i.i, align 8, !tbaa !368
  %_M_start.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %67 = load i32*, i32** %_M_start.i.i.i, align 8, !tbaa !361
  %_M_finish.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %68 = load i32*, i32** %_M_finish.i.i.i.i, align 8, !tbaa !401
  %tobool.not.i.i.i.i = icmp eq i32* %68, %67
  br i1 %tobool.not.i.i.i.i, label %_ZN5adept5Stack18clear_independentsEv.exit.i, label %invoke.cont.i.i.i.i

invoke.cont.i.i.i.i:                              ; preds = %invoke.cont55
  store i32* %67, i32** %_M_finish.i.i.i.i, align 8, !tbaa !401
  br label %_ZN5adept5Stack18clear_independentsEv.exit.i

_ZN5adept5Stack18clear_independentsEv.exit.i:     ; preds = %invoke.cont.i.i.i.i, %invoke.cont55
  %_M_start.i.i3.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %69 = load i32*, i32** %_M_start.i.i3.i, align 8, !tbaa !361
  %_M_finish.i.i.i4.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %70 = load i32*, i32** %_M_finish.i.i.i4.i, align 8, !tbaa !401
  %tobool.not.i.i.i5.i = icmp eq i32* %70, %69
  br i1 %tobool.not.i.i.i5.i, label %_ZN5adept5Stack16clear_dependentsEv.exit.i, label %invoke.cont.i.i.i6.i

invoke.cont.i.i.i6.i:                             ; preds = %_ZN5adept5Stack18clear_independentsEv.exit.i
  store i32* %69, i32** %_M_finish.i.i.i4.i, align 8, !tbaa !401
  br label %_ZN5adept5Stack16clear_dependentsEv.exit.i

_ZN5adept5Stack16clear_dependentsEv.exit.i:       ; preds = %invoke.cont.i.i.i6.i, %_ZN5adept5Stack18clear_independentsEv.exit.i
  %gradients_initialized_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 10
  store i8 0, i8* %gradients_initialized_.i.i, align 8, !tbaa !367
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 6
  %71 = load i32, i32* %i_gradient_.i, align 8, !tbaa !387
  %add.i = add nsw i32 %71, 1
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 8
  store i32 %add.i, i32* %max_gradient_.i, align 8, !tbaa !388
  %n_allocated_statements_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 0, i32 4
  %72 = load i32, i32* %n_allocated_statements_.i.i, align 4, !tbaa !398
  %cmp.not.i.i122 = icmp sgt i32 %72, 0
  br i1 %cmp.not.i.i122, label %entry.if.end_crit_edge.i.i, label %if.then.i.i123

entry.if.end_crit_edge.i.i:                       ; preds = %_ZN5adept5Stack16clear_dependentsEv.exit.i
  %statement_.phi.trans.insert.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %stack, i64 0, i32 0, i32 0
  %.pre.i.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i.i, align 8, !tbaa !363
  br label %invoke.cont56

if.then.i.i123:                                   ; preds = %_ZN5adept5Stack16clear_dependentsEv.exit.i
  %mul.i.i.i = shl nsw i32 %72, 1
  %conv.i.i.i = sext i32 %mul.i.i.i to i64
  %73 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i.i, i64 8)
  %74 = extractvalue { i64, i1 } %73, 1
  %75 = extractvalue { i64, i1 } %73, 0
  %76 = select i1 %74, i64 -1, i64 %75
  %call.i.i.i125 = invoke noalias nonnull i8* @_Znam(i64 %76) #44
          to label %call.i.i.i.noexc unwind label %lpad32

call.i.i.i.noexc:                                 ; preds = %if.then.i.i123
  %77 = bitcast %"class.adept::Stack"* %stack to i8**
  %78 = load i8*, i8** %77, align 8, !tbaa !363
  %isnull.i.i.i = icmp eq i8* %78, null
  br i1 %isnull.i.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i, label %delete.notnull.i.i.i

delete.notnull.i.i.i:                             ; preds = %call.i.i.i.noexc
  call void @_ZdaPv(i8* nonnull %78) #43
  %.pre1.pre.i.i = load i32, i32* %n_statements_.i.i, align 8, !tbaa !368
  %.pre.pre.i = load i32, i32* %n_operations_.i.i, align 8, !tbaa !399
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i: ; preds = %delete.notnull.i.i.i, %call.i.i.i.noexc
  %.pre.i = phi i32 [ 0, %call.i.i.i.noexc ], [ %.pre.pre.i, %delete.notnull.i.i.i ]
  %.pre1.i.i = phi i32 [ 0, %call.i.i.i.noexc ], [ %.pre1.pre.i.i, %delete.notnull.i.i.i ]
  store i8* %call.i.i.i125, i8** %77, align 8, !tbaa !363
  store i32 %mul.i.i.i, i32* %n_allocated_statements_.i.i, align 4, !tbaa !398
  %79 = bitcast i8* %call.i.i.i125 to %"struct.adept::internal::Statement"*
  br label %invoke.cont56

invoke.cont56:                                    ; preds = %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i, %entry.if.end_crit_edge.i.i
  %80 = phi i32 [ 0, %entry.if.end_crit_edge.i.i ], [ %.pre.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i ]
  %81 = phi i32 [ 0, %entry.if.end_crit_edge.i.i ], [ %.pre1.i.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i ]
  %82 = phi %"struct.adept::internal::Statement"* [ %.pre.i.i, %entry.if.end_crit_edge.i.i ], [ %79, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i ]
  %idxprom.i.i = sext i32 %81 to i64
  %index.i.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %82, i64 %idxprom.i.i, i32 0
  store i32 -1, i32* %index.i.i, align 4, !tbaa !369
  %inc.i.i124 = add nsw i32 %81, 1
  store i32 %inc.i.i124, i32* %n_statements_.i.i, align 8, !tbaa !368
  %end_plus_one.i.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %82, i64 %idxprom.i.i, i32 1
  store i32 %80, i32* %end_plus_one.i.i, align 4, !tbaa !371
  %83 = bitcast %"class.adept::Active"* %aerr to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #38
  %val_.i126 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %aerr, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i126, align 8, !tbaa !467
  %84 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i.i127 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %84, i64 0, i32 9
  %85 = load i32, i32* %n_gradients_registered_.i.i127, align 4, !tbaa !376
  %inc.i.i128 = add nsw i32 %85, 1
  store i32 %inc.i.i128, i32* %n_gradients_registered_.i.i127, align 4, !tbaa !376
  %gap_list_.i.i129 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %84, i64 0, i32 4
  %86 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i129, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i130 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i130, align 8, !tbaa !358
  %cmp.i.i.i131 = icmp eq %"struct.std::__detail::_List_node_base"* %87, %86
  br i1 %cmp.i.i.i131, label %if.then.i.i136, label %if.else.i.i143

if.then.i.i136:                                   ; preds = %invoke.cont56
  %i_gradient_.i.i132 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %84, i64 0, i32 6
  %88 = load i32, i32* %i_gradient_.i.i132, align 8, !tbaa !387
  %inc2.i.i133 = add nsw i32 %88, 1
  store i32 %inc2.i.i133, i32* %i_gradient_.i.i132, align 8, !tbaa !387
  %max_gradient_.i.i134 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %84, i64 0, i32 8
  %89 = load i32, i32* %max_gradient_.i.i134, align 8, !tbaa !388
  %cmp.not.i.i135 = icmp slt i32 %88, %89
  br i1 %cmp.not.i.i135, label %invoke.cont58, label %if.then4.i.i137

if.then4.i.i137:                                  ; preds = %if.then.i.i136
  store i32 %inc2.i.i133, i32* %max_gradient_.i.i134, align 8, !tbaa !388
  br label %invoke.cont58

if.else.i.i143:                                   ; preds = %invoke.cont56
  %90 = bitcast %"struct.std::__detail::_List_node_base"* %87 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i138 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %87, i64 1
  %start.i.i139 = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i138 to i32*
  %91 = load i32, i32* %start.i.i139, align 4, !tbaa !379
  %inc11.i.i140 = add nsw i32 %91, 1
  store i32 %inc11.i.i140, i32* %start.i.i139, align 4, !tbaa !379
  %end.i.i141 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %90, i64 0, i32 1, i32 0, i64 4
  %92 = bitcast i8* %end.i.i141 to i32*
  %93 = load i32, i32* %92, align 4, !tbaa !377
  %cmp13.not.i.i142 = icmp slt i32 %91, %93
  br i1 %cmp13.not.i.i142, label %invoke.cont58, label %if.then14.i.i146

if.then14.i.i146:                                 ; preds = %if.else.i.i143
  %_M_node.i.i.i144 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %84, i64 0, i32 5, i32 0
  %94 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i144, align 8, !tbaa !380
  %cmp.i8.i.i145 = icmp eq %"struct.std::__detail::_List_node_base"* %94, %87
  br i1 %cmp.i8.i.i145, label %if.then18.i.i147, label %if.end24.i.i150

if.then18.i.i147:                                 ; preds = %if.then14.i.i146
  store %"struct.std::__detail::_List_node_base"* %86, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i144, align 8, !tbaa.struct !385
  br label %if.end24.i.i150

if.end24.i.i150:                                  ; preds = %if.then18.i.i147, %if.then14.i.i146
  %_M_size.i.i.i.i.i148 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %84, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %95 = load i64, i64* %_M_size.i.i.i.i.i148, align 8, !tbaa !381
  %sub.i.i.i.i.i149 = add i64 %95, -1
  store i64 %sub.i.i.i.i.i149, i64* %_M_size.i.i.i.i.i148, align 8, !tbaa !381
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %87) #38
  %96 = bitcast %"struct.std::__detail::_List_node_base"* %87 to i8*
  call void @_ZdlPv(i8* nonnull %96) #38
  br label %invoke.cont58

invoke.cont58:                                    ; preds = %if.end24.i.i150, %if.else.i.i143, %if.then4.i.i137, %if.then.i.i136
  %return_val.0.i.i151 = phi i32 [ %91, %if.end24.i.i150 ], [ %91, %if.else.i.i143 ], [ %88, %if.then4.i.i137 ], [ %88, %if.then.i.i136 ]
  %gradient_index_.i152 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %aerr, i64 0, i32 1
  store i32 %return_val.0.i.i151, i32* %gradient_index_.i152, align 8, !tbaa !469
  invoke void @_ZN9adeptTest13gmm_objectiveIN5adept6ActiveIdEEEEviiiPKT_S6_S6_PKd7WishartPS4_(i32 %d, i32 %k, i32 %n, %"class.adept::Active"* nonnull %8, %"class.adept::Active"* nonnull %29, %"class.adept::Active"* nonnull %50, double* %x, %struct.Wishart* nonnull byval(%struct.Wishart) align 8 %wishart, %"class.adept::Active"* nonnull %aerr)
          to label %invoke.cont60 unwind label %lpad59.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

invoke.cont60:                                    ; preds = %invoke.cont58
  %97 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #38
  store double 1.000000e+00, double* %ref.tmp, align 8, !tbaa !70
  %98 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %99 = load i32, i32* %gradient_index_.i152, align 8, !tbaa !469
  %add.i155 = add nsw i32 %99, 1
  invoke void @_ZN5adept5Stack13set_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPKS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %98, i32 %99, i32 %add.i155, double* nonnull %ref.tmp)
          to label %invoke.cont62 unwind label %lpad61

invoke.cont62:                                    ; preds = %invoke.cont60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #38
  invoke void @_ZN5adept5Stack15compute_adjointEv(%"class.adept::Stack"* nonnull dereferenceable(149) %stack)
          to label %invoke.cont63 unwind label %lpad59.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp

invoke.cont63:                                    ; preds = %invoke.cont62
  br i1 %cmp5.i, label %for.body.preheader.i158, label %invoke.cont64

for.body.preheader.i158:                          ; preds = %invoke.cont63
  %wide.trip.count.i157 = zext i32 %k to i64
  br label %for.body.i163

for.body.i163:                                    ; preds = %.noexc, %for.body.preheader.i158
  %indvars.iv.i159 = phi i64 [ 0, %for.body.preheader.i158 ], [ %indvars.iv.next.i161, %.noexc ]
  %arrayidx2.i160 = getelementptr inbounds double, double* %alphasb, i64 %indvars.iv.i159
  %100 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %gradient_index_.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %8, i64 %indvars.iv.i159, i32 1
  %101 = load i32, i32* %gradient_index_.i.i, align 8, !tbaa !469
  %add.i.i = add nsw i32 %101, 1
  invoke void @_ZNK5adept5Stack13get_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %100, i32 %101, i32 %add.i.i, double* nonnull %arrayidx2.i160)
          to label %.noexc unwind label %lpad59.loopexit.split-lp.loopexit.split-lp.loopexit

.noexc:                                           ; preds = %for.body.i163
  %indvars.iv.next.i161 = add nuw nsw i64 %indvars.iv.i159, 1
  %exitcond.not.i162 = icmp eq i64 %indvars.iv.next.i161, %wide.trip.count.i157
  br i1 %exitcond.not.i162, label %invoke.cont64, label %for.body.i163, !llvm.loop !471

invoke.cont64:                                    ; preds = %.noexc, %invoke.cont63
  br i1 %cmp5.i102, label %for.body.preheader.i166, label %invoke.cont66

for.body.preheader.i166:                          ; preds = %invoke.cont64
  %wide.trip.count.i165 = zext i32 %mul9 to i64
  br label %for.body.i173

for.body.i173:                                    ; preds = %.noexc174, %for.body.preheader.i166
  %indvars.iv.i167 = phi i64 [ 0, %for.body.preheader.i166 ], [ %indvars.iv.next.i171, %.noexc174 ]
  %arrayidx2.i168 = getelementptr inbounds double, double* %meansb, i64 %indvars.iv.i167
  %102 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %gradient_index_.i.i169 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %29, i64 %indvars.iv.i167, i32 1
  %103 = load i32, i32* %gradient_index_.i.i169, align 8, !tbaa !469
  %add.i.i170 = add nsw i32 %103, 1
  invoke void @_ZNK5adept5Stack13get_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %102, i32 %103, i32 %add.i.i170, double* nonnull %arrayidx2.i168)
          to label %.noexc174 unwind label %lpad59.loopexit.split-lp.loopexit

.noexc174:                                        ; preds = %for.body.i173
  %indvars.iv.next.i171 = add nuw nsw i64 %indvars.iv.i167, 1
  %exitcond.not.i172 = icmp eq i64 %indvars.iv.next.i171, %wide.trip.count.i165
  br i1 %exitcond.not.i172, label %invoke.cont66, label %for.body.i173, !llvm.loop !471

invoke.cont66:                                    ; preds = %.noexc174, %invoke.cont64
  br i1 %cmp5.i112, label %for.body.preheader.i178, label %delete.notnull

for.body.preheader.i178:                          ; preds = %invoke.cont66
  %wide.trip.count.i177 = zext i32 %mul30 to i64
  br label %for.body.i185

for.body.i185:                                    ; preds = %.noexc186, %for.body.preheader.i178
  %indvars.iv.i179 = phi i64 [ 0, %for.body.preheader.i178 ], [ %indvars.iv.next.i183, %.noexc186 ]
  %arrayidx2.i180 = getelementptr inbounds double, double* %icfb, i64 %indvars.iv.i179
  %104 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %gradient_index_.i.i181 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %50, i64 %indvars.iv.i179, i32 1
  %105 = load i32, i32* %gradient_index_.i.i181, align 8, !tbaa !469
  %add.i.i182 = add nsw i32 %105, 1
  invoke void @_ZNK5adept5Stack13get_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %104, i32 %105, i32 %add.i.i182, double* nonnull %arrayidx2.i180)
          to label %.noexc186 unwind label %lpad59.loopexit

.noexc186:                                        ; preds = %for.body.i185
  %indvars.iv.next.i183 = add nuw nsw i64 %indvars.iv.i179, 1
  %exitcond.not.i184 = icmp eq i64 %indvars.iv.next.i183, %wide.trip.count.i177
  br i1 %exitcond.not.i184, label %delete.notnull, label %for.body.i185, !llvm.loop !471

delete.notnull:                                   ; preds = %.noexc186, %invoke.cont66
  %106 = load i64, i64* %6, align 8
  %delete.end = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %8, i64 %106
  %arraydestroy.isempty69 = icmp eq %"class.adept::Active"* %delete.end, %8
  br i1 %arraydestroy.isempty69, label %arraydestroy.done74, label %arraydestroy.body70

arraydestroy.body70:                              ; preds = %delete.notnull, %arraydestroy.body70
  %arraydestroy.elementPast71 = phi %"class.adept::Active"* [ %arraydestroy.element72, %arraydestroy.body70 ], [ %delete.end, %delete.notnull ]
  %arraydestroy.element72 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arraydestroy.elementPast71, i64 -1
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arraydestroy.element72) #38
  %arraydestroy.done73 = icmp eq %"class.adept::Active"* %arraydestroy.element72, %8
  br i1 %arraydestroy.done73, label %arraydestroy.done74, label %arraydestroy.body70

arraydestroy.done74:                              ; preds = %arraydestroy.body70, %delete.notnull
  call void @_ZdaPv(i8* nonnull %call) #43
  %107 = load i64, i64* %27, align 8
  %delete.end78 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %29, i64 %107
  %arraydestroy.isempty79 = icmp eq %"class.adept::Active"* %delete.end78, %29
  br i1 %arraydestroy.isempty79, label %arraydestroy.done84, label %arraydestroy.body80

arraydestroy.body80:                              ; preds = %arraydestroy.done74, %arraydestroy.body80
  %arraydestroy.elementPast81 = phi %"class.adept::Active"* [ %arraydestroy.element82, %arraydestroy.body80 ], [ %delete.end78, %arraydestroy.done74 ]
  %arraydestroy.element82 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arraydestroy.elementPast81, i64 -1
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arraydestroy.element82) #38
  %arraydestroy.done83 = icmp eq %"class.adept::Active"* %arraydestroy.element82, %29
  br i1 %arraydestroy.done83, label %arraydestroy.done84, label %arraydestroy.body80

arraydestroy.done84:                              ; preds = %arraydestroy.body80, %arraydestroy.done74
  call void @_ZdaPv(i8* nonnull %call13) #43
  %108 = load i64, i64* %48, align 8
  %delete.end88 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %50, i64 %108
  %arraydestroy.isempty89 = icmp eq %"class.adept::Active"* %delete.end88, %50
  br i1 %arraydestroy.isempty89, label %arraydestroy.done94, label %arraydestroy.body90

arraydestroy.body90:                              ; preds = %arraydestroy.done84, %arraydestroy.body90
  %arraydestroy.elementPast91 = phi %"class.adept::Active"* [ %arraydestroy.element92, %arraydestroy.body90 ], [ %delete.end88, %arraydestroy.done84 ]
  %arraydestroy.element92 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arraydestroy.elementPast91, i64 -1
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arraydestroy.element92) #38
  %arraydestroy.done93 = icmp eq %"class.adept::Active"* %arraydestroy.element92, %50
  br i1 %arraydestroy.done93, label %arraydestroy.done94, label %arraydestroy.body90

arraydestroy.done94:                              ; preds = %arraydestroy.body90, %arraydestroy.done84
  call void @_ZdaPv(i8* nonnull %call34) #43
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %aerr) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #38
  call void @_ZN5adept5StackD2Ev(%"class.adept::Stack"* nonnull dereferenceable(149) %stack) #38
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %0) #38
  ret void

lpad:                                             ; preds = %entry
  %109 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup99

lpad11:                                           ; preds = %arrayctor.cont
  %110 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup99

lpad32:                                           ; preds = %if.then.i.i123, %arrayctor.cont29
  %111 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup99

lpad59.loopexit:                                  ; preds = %for.body.i185
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad59.loopexit.split-lp.loopexit:                ; preds = %for.body.i173
  %lpad.loopexit188 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad59.loopexit.split-lp.loopexit.split-lp.loopexit: ; preds = %for.body.i163
  %lpad.loopexit191 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad59.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp: ; preds = %invoke.cont58, %invoke.cont62
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad61:                                           ; preds = %invoke.cont60
  %112 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #38
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad59.loopexit, %lpad59.loopexit.split-lp.loopexit.split-lp.loopexit, %lpad59.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp, %lpad59.loopexit.split-lp.loopexit, %lpad61
  %.pn = phi { i8*, i32 } [ %112, %lpad61 ], [ %lpad.loopexit, %lpad59.loopexit ], [ %lpad.loopexit188, %lpad59.loopexit.split-lp.loopexit ], [ %lpad.loopexit191, %lpad59.loopexit.split-lp.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp, %lpad59.loopexit.split-lp.loopexit.split-lp.loopexit.split-lp ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %aerr) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #38
  br label %ehcleanup99

ehcleanup99:                                      ; preds = %lpad11, %ehcleanup, %lpad32, %lpad
  %.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %109, %lpad ], [ %110, %lpad11 ], [ %.pn, %ehcleanup ], [ %111, %lpad32 ]
  call void @_ZN5adept5StackD2Ev(%"class.adept::Stack"* nonnull dereferenceable(149) %stack) #38
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %0) #38
  resume { i8*, i32 } %.pn.pn.pn.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept5StackC2Eb(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i1 zeroext %activate_immediately) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4
  %0 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_prev.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %1 = bitcast %"class.adept::Stack"* %this to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(96) %1, i8 0, i64 96, i1 false)
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %_M_prev.i.i.i.i.i, align 8, !tbaa !390
  %_M_next.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i.i.i, align 8, !tbaa !358
  %_M_size.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !472
  %coerce.dive = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 5, i32 0
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 6
  %is_recording_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 12
  %2 = bitcast i32* %i_gradient_ to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(18) %2, i8 0, i64 18, i1 false)
  store i8 1, i8* %is_recording_, align 2, !tbaa !397
  %have_openmp_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 13
  store i8 0, i8* %have_openmp_, align 1, !tbaa !473
  %openmp_manually_disabled_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 14
  store i8 0, i8* %openmp_manually_disabled_, align 4, !tbaa !474
  %call.i7 = invoke noalias nonnull dereferenceable(8388608) i8* @_Znam(i64 8388608) #44
          to label %call.i.noexc unwind label %lpad

call.i.noexc:                                     ; preds = %entry
  %multiplier_.i5 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %3 = bitcast double** %multiplier_.i5 to i8**
  store i8* %call.i7, i8** %3, align 8, !tbaa !365
  %call3.i8 = invoke noalias nonnull dereferenceable(4194304) i8* @_Znam(i64 4194304) #44
          to label %call3.i.noexc unwind label %lpad

call3.i.noexc:                                    ; preds = %call.i.noexc
  %index_.i6 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %4 = bitcast i32** %index_.i6 to i8**
  store i8* %call3.i8, i8** %4, align 8, !tbaa !366
  %n_allocated_operations_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 6
  store i32 1048576, i32* %n_allocated_operations_.i, align 4, !tbaa !400
  %call5.i9 = invoke noalias nonnull dereferenceable(8388608) i8* @_Znam(i64 8388608) #44
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %call3.i.noexc
  %5 = bitcast %"class.adept::Stack"* %this to i8**
  store i8* %call5.i9, i8** %5, align 8, !tbaa !363
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 4
  store i32 1048576, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  invoke void @_ZN5adept5Stack13new_recordingEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this)
          to label %invoke.cont3 unwind label %lpad

invoke.cont3:                                     ; preds = %invoke.cont
  br i1 %activate_immediately, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont3
  invoke void @_ZN5adept5Stack8activateEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this)
          to label %if.end unwind label %lpad

lpad:                                             ; preds = %call3.i.noexc, %call.i.noexc, %entry, %if.then, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i.i.i, align 8, !tbaa !358
  %cmp.not7.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %7, %0
  br i1 %cmp.not7.i.i, label %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit, label %while.body.i.i

while.body.i.i:                                   ; preds = %lpad, %while.body.i.i
  %__cur.08.i.i = phi %"struct.std::__detail::_List_node_base"* [ %8, %while.body.i.i ], [ %7, %lpad ]
  %_M_next4.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %__cur.08.i.i, i64 0, i32 0
  %8 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next4.i.i, align 8, !tbaa !358
  %9 = bitcast %"struct.std::__detail::_List_node_base"* %__cur.08.i.i to i8*
  tail call void @_ZdlPv(i8* %9) #38
  %cmp.not.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %8, %0
  br i1 %cmp.not.i.i, label %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit, label %while.body.i.i, !llvm.loop !360

_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit: ; preds = %while.body.i.i, %lpad
  %_M_start.i.i1 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %_M_start.i.i1, align 8, !tbaa !361
  %tobool.not.i.i.i2 = icmp eq i32* %10, null
  br i1 %tobool.not.i.i.i2, label %_ZNSt6vectorIiSaIiEED2Ev.exit4, label %if.then.i.i.i3

if.then.i.i.i3:                                   ; preds = %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit
  %11 = bitcast i32* %10 to i8*
  tail call void @_ZdlPv(i8* nonnull %11) #38
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit4

_ZNSt6vectorIiSaIiEED2Ev.exit4:                   ; preds = %_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev.exit, %if.then.i.i.i3
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %12 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %tobool.not.i.i.i = icmp eq i32* %12, null
  br i1 %tobool.not.i.i.i, label %_ZNSt6vectorIiSaIiEED2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit4
  %13 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #38
  br label %_ZNSt6vectorIiSaIiEED2Ev.exit

_ZNSt6vectorIiSaIiEED2Ev.exit:                    ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit4, %if.then.i.i.i
  %statement_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %14 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.i, align 8, !tbaa !363
  %tobool.not.i = icmp eq %"struct.adept::internal::Statement"* %14, null
  br i1 %tobool.not.i, label %if.end.i, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %_ZNSt6vectorIiSaIiEED2Ev.exit
  %15 = bitcast %"struct.adept::internal::Statement"* %14 to i8*
  tail call void @_ZdaPv(i8* %15) #43
  br label %if.end.i

if.end.i:                                         ; preds = %delete.notnull.i, %_ZNSt6vectorIiSaIiEED2Ev.exit
  %multiplier_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 1
  %16 = load double*, double** %multiplier_.i, align 8, !tbaa !365
  %tobool3.not.i = icmp eq double* %16, null
  br i1 %tobool3.not.i, label %if.end9.i, label %delete.notnull7.i

delete.notnull7.i:                                ; preds = %if.end.i
  %17 = bitcast double* %16 to i8*
  tail call void @_ZdaPv(i8* %17) #43
  br label %if.end9.i

if.end9.i:                                        ; preds = %delete.notnull7.i, %if.end.i
  %index_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 2
  %18 = load i32*, i32** %index_.i, align 8, !tbaa !366
  %tobool10.not.i = icmp eq i32* %18, null
  br i1 %tobool10.not.i, label %_ZN5adept8internal16StackStorageOrigD2Ev.exit, label %delete.notnull14.i

delete.notnull14.i:                               ; preds = %if.end9.i
  %19 = bitcast i32* %18 to i8*
  tail call void @_ZdaPv(i8* %19) #43
  br label %_ZN5adept8internal16StackStorageOrigD2Ev.exit

_ZN5adept8internal16StackStorageOrigD2Ev.exit:    ; preds = %if.end9.i, %delete.notnull14.i
  resume { i8*, i32 } %6

if.end:                                           ; preds = %if.then, %invoke.cont3
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %this) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %dec.i = add nsw i32 %1, -1
  store i32 %dec.i, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %2 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %add.i = add nsw i32 %2, 1
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 6
  %3 = load i32, i32* %i_gradient_.i, align 8, !tbaa !387
  %cmp.i = icmp eq i32 %add.i, %3
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  store i32 %2, i32* %i_gradient_.i, align 8, !tbaa !387
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !358
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %5, %4
  br i1 %cmp.i.i, label %invoke.cont, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  %_M_prev.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__detail::_List_node_base"** %_M_prev.i.i.i to %"struct.std::_List_node"**
  %7 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %6, align 8, !tbaa !390
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 1, i32 0, i64 4
  %8 = bitcast i8* %end.i to i32*
  %9 = load i32, i32* %8, align 4, !tbaa !377
  %add8.i = add nsw i32 %9, 1
  %cmp9.i = icmp eq i32 %2, %add8.i
  %10 = getelementptr %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 0
  br i1 %cmp9.i, label %if.then10.i, label %invoke.cont

if.then10.i:                                      ; preds = %if.then4.i
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 1
  %start.i = bitcast %"struct.__gnu_cxx::__aligned_membuf"* %_M_storage.i.i.i.i to i32*
  %11 = load i32, i32* %start.i, align 4, !tbaa !379
  store i32 %11, i32* %i_gradient_.i, align 8, !tbaa !387
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 5, i32 0
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !380
  %cmp.i6.i = icmp eq %"struct.std::__detail::_List_node_base"* %12, %10
  br i1 %cmp.i6.i, label %if.then17.i, label %if.end.i

if.then17.i:                                      ; preds = %if.then10.i
  store %"struct.std::__detail::_List_node_base"* %4, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !385
  br label %if.end.i

if.end.i:                                         ; preds = %if.then17.i, %if.then10.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  %sub.i.i.i.i = add i64 %13, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %10) #38
  %14 = bitcast %"struct.std::_List_node"* %7 to i8*
  tail call void @_ZdlPv(i8* nonnull %14) #38
  br label %invoke.cont

if.else.i:                                        ; preds = %entry
  invoke void @_ZN5adept5Stack27unregister_gradient_not_topERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %0, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.end.i, %if.then4.i, %if.then.i, %if.else.i
  ret void

terminate.lpad:                                   ; preds = %if.else.i
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  tail call void @__clang_call_terminate(i8* %16) #41
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept5Stack13new_recordingEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %n_operations_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 5
  store i32 0, i32* %n_operations_.i, align 8, !tbaa !399
  %n_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 3
  store i32 0, i32* %n_statements_.i, align 8, !tbaa !368
  %_M_start.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %0 = load i32*, i32** %_M_start.i.i, align 8, !tbaa !361
  %_M_finish.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %1 = load i32*, i32** %_M_finish.i.i.i, align 8, !tbaa !401
  %tobool.not.i.i.i = icmp eq i32* %1, %0
  br i1 %tobool.not.i.i.i, label %_ZN5adept5Stack18clear_independentsEv.exit, label %invoke.cont.i.i.i

invoke.cont.i.i.i:                                ; preds = %entry
  store i32* %0, i32** %_M_finish.i.i.i, align 8, !tbaa !401
  br label %_ZN5adept5Stack18clear_independentsEv.exit

_ZN5adept5Stack18clear_independentsEv.exit:       ; preds = %entry, %invoke.cont.i.i.i
  %_M_start.i.i3 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %2 = load i32*, i32** %_M_start.i.i3, align 8, !tbaa !361
  %_M_finish.i.i.i4 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %3 = load i32*, i32** %_M_finish.i.i.i4, align 8, !tbaa !401
  %tobool.not.i.i.i5 = icmp eq i32* %3, %2
  br i1 %tobool.not.i.i.i5, label %_ZN5adept5Stack16clear_dependentsEv.exit, label %invoke.cont.i.i.i6

invoke.cont.i.i.i6:                               ; preds = %_ZN5adept5Stack18clear_independentsEv.exit
  store i32* %2, i32** %_M_finish.i.i.i4, align 8, !tbaa !401
  br label %_ZN5adept5Stack16clear_dependentsEv.exit

_ZN5adept5Stack16clear_dependentsEv.exit:         ; preds = %_ZN5adept5Stack18clear_independentsEv.exit, %invoke.cont.i.i.i6
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  store i8 0, i8* %gradients_initialized_.i, align 8, !tbaa !367
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 6
  %4 = load i32, i32* %i_gradient_, align 8, !tbaa !387
  %add = add nsw i32 %4, 1
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  store i32 %add, i32* %max_gradient_, align 8, !tbaa !388
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 4
  %5 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i = icmp sgt i32 %5, 0
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept5Stack16clear_dependentsEv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept5Stack16clear_dependentsEv.exit
  %mul.i.i = shl nsw i32 %5, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %6 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %7 = extractvalue { i64, i1 } %6, 1
  %8 = extractvalue { i64, i1 } %6, 0
  %9 = select i1 %7, i64 -1, i64 %8
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %9) #44
  %10 = bitcast %"class.adept::Stack"* %this to i8**
  %11 = load i8*, i8** %10, align 8, !tbaa !363
  %isnull.i.i = icmp eq i8* %11, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %11) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %.pre.pre = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre = phi i32 [ 0, %if.then.i ], [ %.pre.pre, %delete.notnull.i.i ]
  %.pre1.i = phi i32 [ 0, %if.then.i ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %10, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %12 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %13 = phi i32 [ 0, %entry.if.end_crit_edge.i ], [ %.pre, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %14 = phi i32 [ 0, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %15 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %12, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %idxprom.i = sext i32 %14 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %15, i64 %idxprom.i, i32 0
  store i32 -1, i32* %index.i, align 4, !tbaa !369
  %inc.i = add nsw i32 %14, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %15, i64 %idxprom.i, i32 1
  store i32 %13, i32* %end_plus_one.i, align 4, !tbaa !371
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9adeptTest13gmm_objectiveIN5adept6ActiveIdEEEEviiiPKT_S6_S6_PKd7WishartPS4_(i32 %d, i32 %k, i32 %n, %"class.adept::Active"* %alphas, %"class.adept::Active"* %means, %"class.adept::Active"* %icf, double* %x, %struct.Wishart* byval(%struct.Wishart) align 8 %wishart, %"class.adept::Active"* %err) local_unnamed_addr #28 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i192 = alloca %"struct.adept::internal::BinaryOperation.69", align 8
  %ref.tmp2.i = alloca %"struct.adept::internal::BinaryOperation.71", align 8
  %ref.tmp.i = alloca %"struct.adept::internal::BinaryOperation.69", align 8
  %ref.tmp14.i = alloca %"struct.adept::internal::BinaryOperation.71", align 8
  %Qdiags = alloca %"class.std::vector.45", align 8
  %ref.tmp = alloca %"class.std::allocator.47", align 1
  %sum_qs = alloca %"class.std::vector.45", align 8
  %ref.tmp7 = alloca %"class.std::allocator.47", align 1
  %xcentered = alloca %"class.std::vector.45", align 8
  %ref.tmp11 = alloca %"class.std::allocator.47", align 1
  %Qxcentered = alloca %"class.std::vector.45", align 8
  %ref.tmp15 = alloca %"class.std::allocator.47", align 1
  %main_term = alloca %"class.std::vector.45", align 8
  %ref.tmp19 = alloca %"class.std::allocator.47", align 1
  %slse = alloca %"class.adept::Active", align 8
  %ref.tmp25 = alloca double, align 8
  %ref.tmp60 = alloca %"class.adept::Active", align 8
  %ref.tmp76 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %ref.tmp77 = alloca %"class.adept::Active", align 8
  %lse_alphas = alloca %"class.adept::Active", align 8
  %ref.tmp95 = alloca %"struct.adept::internal::BinaryOperation.54", align 8
  %ref.tmp96 = alloca %"struct.adept::internal::BinaryOpScalarLeft.56", align 16
  %ref.tmp99 = alloca %"struct.adept::internal::BinaryOpScalarLeft.59", align 8
  %ref.tmp110 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %ref.tmp111 = alloca %"class.adept::Active", align 8
  %0 = mul i32 %d, %n
  %mul = sub i32 0, %0
  %conv = sitofp i32 %mul to double
  %mul2 = fmul fast double %conv, 0x3FED67F1C864BFDD
  %add = add nsw i32 %d, 1
  %mul3 = mul nsw i32 %add, %d
  %div = sdiv i32 %mul3, 2
  %1 = bitcast %"class.std::vector.45"* %Qdiags to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #38
  %mul4 = mul nsw i32 %k, %d
  %conv5 = sext i32 %mul4 to i64
  %2 = getelementptr inbounds %"class.std::allocator.47", %"class.std::allocator.47"* %ref.tmp, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #38
  call void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"class.std::vector.45"* nonnull dereferenceable(24) %Qdiags, i64 %conv5, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %ref.tmp)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #38
  %3 = bitcast %"class.std::vector.45"* %sum_qs to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #38
  %conv6 = sext i32 %k to i64
  %4 = getelementptr inbounds %"class.std::allocator.47", %"class.std::allocator.47"* %ref.tmp7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #38
  invoke void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"class.std::vector.45"* nonnull dereferenceable(24) %sum_qs, i64 %conv6, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %ref.tmp7)
          to label %invoke.cont9 unwind label %lpad8

invoke.cont9:                                     ; preds = %entry
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #38
  %5 = bitcast %"class.std::vector.45"* %xcentered to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #38
  %conv10 = sext i32 %d to i64
  %6 = getelementptr inbounds %"class.std::allocator.47", %"class.std::allocator.47"* %ref.tmp11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #38
  invoke void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"class.std::vector.45"* nonnull dereferenceable(24) %xcentered, i64 %conv10, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %ref.tmp11)
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %invoke.cont9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #38
  %7 = bitcast %"class.std::vector.45"* %Qxcentered to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #38
  %8 = getelementptr inbounds %"class.std::allocator.47", %"class.std::allocator.47"* %ref.tmp15, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #38
  invoke void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"class.std::vector.45"* nonnull dereferenceable(24) %Qxcentered, i64 %conv10, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %ref.tmp15)
          to label %invoke.cont17 unwind label %lpad16

invoke.cont17:                                    ; preds = %invoke.cont13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #38
  %9 = bitcast %"class.std::vector.45"* %main_term to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #38
  %10 = getelementptr inbounds %"class.std::allocator.47", %"class.std::allocator.47"* %ref.tmp19, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #38
  invoke void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"class.std::vector.45"* nonnull dereferenceable(24) %main_term, i64 %conv6, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %ref.tmp19)
          to label %invoke.cont21 unwind label %lpad20

invoke.cont21:                                    ; preds = %invoke.cont17
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #38
  %_M_start.i115 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %sum_qs, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i115, align 8, !tbaa !475
  %_M_start.i116 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %Qdiags, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i116, align 8, !tbaa !475
  invoke void @_ZN9adeptTest13preprocess_qsIN5adept6ActiveIdEEEEviiPKT_PS4_S7_(i32 %d, i32 %k, %"class.adept::Active"* %icf, %"class.adept::Active"* nonnull %11, %"class.adept::Active"* nonnull %12)
          to label %invoke.cont24 unwind label %lpad23

invoke.cont24:                                    ; preds = %invoke.cont21
  %13 = bitcast %"class.adept::Active"* %slse to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #38
  %14 = bitcast double* %ref.tmp25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #38
  store double 0.000000e+00, double* %ref.tmp25, align 8, !tbaa !70
  invoke void @_ZN5adept6ActiveIdEC2IdEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %slse, double* nonnull align 8 dereferenceable(8) %ref.tmp25, i8* null)
          to label %invoke.cont27 unwind label %lpad26

invoke.cont27:                                    ; preds = %invoke.cont24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #38
  %cmp257 = icmp sgt i32 %n, 0
  br i1 %cmp257, label %for.cond28.preheader.lr.ph, label %for.cond.cleanup

for.cond28.preheader.lr.ph:                       ; preds = %invoke.cont27
  %cmp29255 = icmp sgt i32 %k, 0
  %_M_start.i157 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %xcentered, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_start.i173 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %Qxcentered, i64 0, i32 0, i32 0, i32 0, i32 0
  %cmp32.i = icmp sgt i32 %d, 0
  %15 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i to i8*
  %16 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i, i64 0, i32 1
  %18 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i to %"struct.adept::Expression.70"*
  %wide.trip.count44.i = zext i32 %d to i64
  %19 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp14.i to i8*
  %20 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %ref.tmp14.i, i64 0, i32 0
  %ref.tmp17.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %ref.tmp14.i, i64 0, i32 1, i32 0
  %ref.tmp17.sroa.4.0..sroa_idx25.i = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %ref.tmp14.i, i64 0, i32 1, i32 1
  %21 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp14.i to %"struct.adept::Expression.72"*
  %22 = bitcast %"class.adept::Active"* %ref.tmp60 to i8*
  %23 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i192 to i8*
  %24 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i192, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i192, i64 0, i32 1
  %26 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i192 to %"struct.adept::Expression.70"*
  %cmp16.i = icmp sgt i32 %d, 1
  %27 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i to i8*
  %28 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i, i64 0, i32 0
  %ref.tmp3.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i, i64 0, i32 1, i32 0
  %ref.tmp3.sroa.5.0..sroa_idx15.i = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i, i64 0, i32 1, i32 1
  %29 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i to %"struct.adept::Expression.72"*
  %_M_start.i198 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %main_term, i64 0, i32 0, i32 0, i32 0, i32 0
  %val_.i.i.i5.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %ref.tmp60, i64 0, i32 0
  %gradient_index_.i.i.i.i.i.i5.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %ref.tmp60, i64 0, i32 1
  %30 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp76 to i8*
  %31 = bitcast %"class.adept::Active"* %ref.tmp77 to i8*
  %32 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp76, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp76, i64 0, i32 1
  %34 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp76 to %"struct.adept::Expression.52"*
  %wide.trip.count263 = zext i32 %n to i64
  %wide.trip.count = zext i32 %k to i64
  br label %for.cond28.preheader

for.cond28.preheader:                             ; preds = %for.cond28.preheader.lr.ph, %invoke.cont84
  %indvars.iv260 = phi i64 [ 0, %for.cond28.preheader.lr.ph ], [ %indvars.iv.next261, %invoke.cont84 ]
  br i1 %cmp29255, label %for.body31.lr.ph, label %for.cond.cleanup30

for.body31.lr.ph:                                 ; preds = %for.cond28.preheader
  %35 = mul nsw i64 %indvars.iv260, %conv10
  %arrayidx = getelementptr inbounds double, double* %x, i64 %35
  br label %for.body31

for.cond.cleanup:                                 ; preds = %invoke.cont84, %invoke.cont27
  %36 = bitcast %"class.adept::Active"* %lse_alphas to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #38
  invoke void @_ZN9adeptTest9logsumexpIN5adept6ActiveIdEEEET_iPKS4_(%"class.adept::Active"* nonnull sret(%"class.adept::Active") align 8 %lse_alphas, i32 %k, %"class.adept::Active"* %alphas)
          to label %invoke.cont103 unwind label %lpad93

lpad8:                                            ; preds = %entry
  %37 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #38
  br label %ehcleanup135

lpad12:                                           ; preds = %invoke.cont9
  %38 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #38
  br label %ehcleanup133

lpad16:                                           ; preds = %invoke.cont13
  %39 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #38
  br label %ehcleanup131

lpad20:                                           ; preds = %invoke.cont17
  %40 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #38
  br label %ehcleanup129

lpad23:                                           ; preds = %invoke.cont21
  %41 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup128

lpad26:                                           ; preds = %invoke.cont24
  %42 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #38
  br label %ehcleanup127

for.cond.cleanup30:                               ; preds = %invoke.cont69, %for.cond28.preheader
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #38
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #38
  %43 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i198, align 8, !tbaa !475
  invoke void @_ZN9adeptTest9logsumexpIN5adept6ActiveIdEEEET_iPKS4_(%"class.adept::Active"* nonnull sret(%"class.adept::Active") align 8 %ref.tmp77, i32 %k, %"class.adept::Active"* nonnull %43)
          to label %invoke.cont82 unwind label %lpad79

for.body31:                                       ; preds = %for.body31.lr.ph, %invoke.cont69
  %indvars.iv = phi i64 [ 0, %for.body31.lr.ph ], [ %indvars.iv.next, %invoke.cont69 ]
  %44 = trunc i64 %indvars.iv to i32
  %mul33 = mul nsw i32 %44, %d
  %idxprom34 = sext i32 %mul33 to i64
  %arrayidx35 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %means, i64 %idxprom34
  %45 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i157, align 8, !tbaa !475
  invoke void @_ZN9adeptTest8subtractIdN5adept6ActiveIdEES3_EEviPKT_PKT0_PT1_(i32 %d, double* %arrayidx, %"class.adept::Active"* %arrayidx35, %"class.adept::Active"* nonnull %45)
          to label %invoke.cont38 unwind label %lpad37.loopexit.split-lp.loopexit.split-lp

invoke.cont38:                                    ; preds = %for.body31
  %46 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i116, align 8, !tbaa !475
  %add.ptr.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %46, i64 %idxprom34
  %mul42 = mul nsw i32 %div, %44
  %add43 = add nsw i32 %mul42, %d
  %idxprom44 = sext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %icf, i64 %idxprom44
  %47 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i157, align 8, !tbaa !475
  %48 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i173, align 8, !tbaa !475
  br i1 %cmp32.i, label %for.body.i, label %invoke.cont56

for.body.i:                                       ; preds = %invoke.cont38, %call5.i.noexc
  %indvars.iv42.i = phi i64 [ %indvars.iv.next43.i, %call5.i.noexc ], [ 0, %invoke.cont38 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #38
  %arrayidx.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %add.ptr.i, i64 %indvars.iv42.i
  %arrayidx2.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %47, i64 %indvars.iv42.i
  store %"class.adept::Active"* %arrayidx.i, %"class.adept::Active"** %16, align 8
  store %"class.adept::Active"* %arrayidx2.i, %"class.adept::Active"** %17, align 8
  %arrayidx4.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %48, i64 %indvars.iv42.i
  %call5.i187 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx4.i, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %18)
          to label %call5.i.noexc unwind label %lpad37.loopexit.split-lp.loopexit

call5.i.noexc:                                    ; preds = %for.body.i
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #38
  %indvars.iv.next43.i = add nuw nsw i64 %indvars.iv42.i, 1
  %exitcond45.not.i = icmp eq i64 %indvars.iv.next43.i, %wide.trip.count44.i
  br i1 %exitcond45.not.i, label %for.body9.i, label %for.body.i, !llvm.loop !477

for.cond6.loopexit.loopexit.i:                    ; preds = %call25.i.noexc
  %49 = trunc i64 %indvars.iv.next37.i to i32
  br label %for.cond6.loopexit.i

for.cond6.loopexit.i:                             ; preds = %for.body9.i, %for.cond6.loopexit.loopexit.i
  %Lparamsidx.1.lcssa.i = phi i32 [ %Lparamsidx.030.i, %for.body9.i ], [ %49, %for.cond6.loopexit.loopexit.i ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond41.not.i = icmp eq i64 %indvars.iv.next39.i, %wide.trip.count44.i
  br i1 %exitcond41.not.i, label %invoke.cont56.loopexit, label %for.body9.i, !llvm.loop !478

for.body9.i:                                      ; preds = %call5.i.noexc, %for.cond6.loopexit.i
  %indvars.iv38.i = phi i64 [ %indvars.iv.next39.i, %for.cond6.loopexit.i ], [ 0, %call5.i.noexc ]
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.cond6.loopexit.i ], [ 1, %call5.i.noexc ]
  %Lparamsidx.030.i = phi i32 [ %Lparamsidx.1.lcssa.i, %for.cond6.loopexit.i ], [ 0, %call5.i.noexc ]
  %indvars.iv.next39.i = add nuw nsw i64 %indvars.iv38.i, 1
  %cmp1126.i = icmp ult i64 %indvars.iv.next39.i, %wide.trip.count44.i
  br i1 %cmp1126.i, label %for.body13.lr.ph.i, label %for.cond6.loopexit.i

for.body13.lr.ph.i:                               ; preds = %for.body9.i
  %arrayidx21.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %47, i64 %indvars.iv38.i
  %50 = sext i32 %Lparamsidx.030.i to i64
  br label %for.body13.i

for.body13.i:                                     ; preds = %call25.i.noexc, %for.body13.lr.ph.i
  %indvars.iv36.i = phi i64 [ %50, %for.body13.lr.ph.i ], [ %indvars.iv.next37.i, %call25.i.noexc ]
  %indvars.iv34.i = phi i64 [ %indvars.iv.i, %for.body13.lr.ph.i ], [ %indvars.iv.next35.i, %call25.i.noexc ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #38
  %arrayidx16.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %48, i64 %indvars.iv34.i
  %arrayidx19.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx45, i64 %indvars.iv36.i
  store %"class.adept::Active"* %arrayidx16.i, %"class.adept::Active"** %20, align 8, !tbaa !61, !alias.scope !479
  store %"class.adept::Active"* %arrayidx19.i, %"class.adept::Active"** %ref.tmp17.sroa.0.0..sroa_idx.i, align 8
  store %"class.adept::Active"* %arrayidx21.i, %"class.adept::Active"** %ref.tmp17.sroa.4.0..sroa_idx25.i, align 8
  %call25.i188 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx16.i, %"struct.adept::Expression.72"* nonnull align 1 dereferenceable(1) %21)
          to label %call25.i.noexc unwind label %lpad37.loopexit

call25.i.noexc:                                   ; preds = %for.body13.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #38
  %indvars.iv.next37.i = add nsw i64 %indvars.iv36.i, 1
  %indvars.iv.next35.i = add nuw nsw i64 %indvars.iv34.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next35.i, %wide.trip.count44.i
  br i1 %exitcond.not.i, label %for.cond6.loopexit.loopexit.i, label %for.body13.i, !llvm.loop !482

invoke.cont56.loopexit:                           ; preds = %for.cond6.loopexit.i
  %.pre = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i173, align 8, !tbaa !475
  br label %invoke.cont56

invoke.cont56:                                    ; preds = %invoke.cont56.loopexit, %invoke.cont38
  %51 = phi %"class.adept::Active"* [ %.pre, %invoke.cont56.loopexit ], [ %48, %invoke.cont38 ]
  %52 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i115, align 8, !tbaa !475
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #38
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #38, !noalias !483
  store %"class.adept::Active"* %51, %"class.adept::Active"** %24, align 8, !noalias !483
  store %"class.adept::Active"* %51, %"class.adept::Active"** %25, align 8, !noalias !483
  invoke void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp60, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %26, i8* null)
          to label %.noexc unwind label %lpad62

.noexc:                                           ; preds = %invoke.cont56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #38, !noalias !483
  br i1 %cmp16.i, label %invoke.cont8.i, label %invoke.cont66

invoke.cont8.i:                                   ; preds = %.noexc, %invoke.cont9.i
  %indvars.iv.i193 = phi i64 [ %indvars.iv.next.i195, %invoke.cont9.i ], [ 1, %.noexc ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #38, !noalias !483
  %arrayidx4.i194 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %51, i64 %indvars.iv.i193
  store %"class.adept::Active"* %ref.tmp60, %"class.adept::Active"** %28, align 8, !tbaa !61, !alias.scope !486, !noalias !483
  store %"class.adept::Active"* %arrayidx4.i194, %"class.adept::Active"** %ref.tmp3.sroa.0.0..sroa_idx.i, align 8, !noalias !483
  store %"class.adept::Active"* %arrayidx4.i194, %"class.adept::Active"** %ref.tmp3.sroa.5.0..sroa_idx15.i, align 8, !noalias !483
  %call10.i = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp60, %"struct.adept::Expression.72"* nonnull align 1 dereferenceable(1) %29)
          to label %invoke.cont9.i unwind label %lpad.i

invoke.cont9.i:                                   ; preds = %invoke.cont8.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #38, !noalias !483
  %indvars.iv.next.i195 = add nuw nsw i64 %indvars.iv.i193, 1
  %exitcond.not.i196 = icmp eq i64 %indvars.iv.next.i195, %wide.trip.count44.i
  br i1 %exitcond.not.i196, label %invoke.cont66, label %invoke.cont8.i, !llvm.loop !489

lpad.i:                                           ; preds = %invoke.cont8.i
  %53 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #38, !noalias !483
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp60) #38
  br label %ehcleanup

invoke.cont66:                                    ; preds = %invoke.cont9.i, %.noexc
  %54 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i198, align 8, !tbaa !475
  %55 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %n_allocated_operations_.i.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %55, i64 0, i32 6
  %56 = load i32, i32* %n_allocated_operations_.i.i.i, align 4, !tbaa !400
  %n_operations_.i.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %55, i64 0, i32 5
  %57 = load i32, i32* %n_operations_.i.i.i, align 8, !tbaa !399
  %add.i.i.i = add nsw i32 %57, 3
  %cmp.not.i.i.i = icmp sgt i32 %56, %add.i.i.i
  %58 = bitcast %"class.adept::internal::StackStorageOrig"* %55 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i.i, label %call.i.noexc, label %if.then.i.i.i201

if.then.i.i.i201:                                 ; preds = %invoke.cont66
  invoke void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %55, i32 3)
          to label %if.then.i.i.i201.call.i.noexc_crit_edge unwind label %lpad64

if.then.i.i.i201.call.i.noexc_crit_edge:          ; preds = %if.then.i.i.i201
  %.pre265 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %59 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre265, i64 0, i32 0
  br label %call.i.noexc

call.i.noexc:                                     ; preds = %if.then.i.i.i201.call.i.noexc_crit_edge, %invoke.cont66
  %60 = phi %"class.adept::internal::StackStorageOrig"* [ %59, %if.then.i.i.i201.call.i.noexc_crit_edge ], [ %55, %invoke.cont66 ]
  %61 = phi %"class.adept::Stack"* [ %.pre265, %if.then.i.i.i201.call.i.noexc_crit_edge ], [ %58, %invoke.cont66 ]
  %val_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %alphas, i64 %indvars.iv, i32 0
  %62 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !467
  %val_.i3.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %52, i64 %indvars.iv, i32 0
  %63 = load double, double* %val_.i3.i.i.i.i.i, align 8, !tbaa !467
  %add.i.i.i.i.i.i = fadd fast double %63, %62
  %64 = load double, double* %val_.i.i.i5.i.i.i, align 8, !tbaa !467
  %.neg = fmul fast double %64, -5.000000e-01
  %sub.i.i.i.i = fadd fast double %add.i.i.i.i.i.i, %.neg
  %gradient_index_.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %alphas, i64 %indvars.iv, i32 1
  %multiplier_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %61, i64 0, i32 0, i32 1
  %65 = load double*, double** %multiplier_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %61, i64 0, i32 0, i32 5
  %66 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i.i.i.i = sext i32 %66 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %65, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i.i.i.i, align 8, !tbaa !70
  %67 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %61, i64 0, i32 0, i32 2
  %68 = load i32*, i32** %index_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i.i.i.i.i = add nsw i32 %66, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %68, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store i32 %67, i32* %arrayidx4.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %gradient_index_.i.i.i4.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %52, i64 %indvars.iv, i32 1
  %69 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i7.i.i.i.i.i = sext i32 %69 to i64
  %arrayidx.i.i.i.i8.i.i.i.i.i = getelementptr inbounds double, double* %65, i64 %idxprom.i.i.i.i7.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i8.i.i.i.i.i, align 8, !tbaa !70
  %70 = load i32, i32* %gradient_index_.i.i.i4.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i10.i.i.i.i.i = add nsw i32 %69, 1
  store i32 %inc.i.i.i.i10.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i11.i.i.i.i.i = getelementptr inbounds i32, i32* %68, i64 %idxprom.i.i.i.i7.i.i.i.i.i
  store i32 %70, i32* %arrayidx4.i.i.i.i11.i.i.i.i.i, align 4, !tbaa !47
  %71 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i.i8.i.i = sext i32 %71 to i64
  %arrayidx.i.i.i.i.i.i.i9.i.i = getelementptr inbounds double, double* %65, i64 %idxprom.i.i.i.i.i.i.i8.i.i
  store double -5.000000e-01, double* %arrayidx.i.i.i.i.i.i.i9.i.i, align 8, !tbaa !70
  %72 = load i32, i32* %gradient_index_.i.i.i.i.i.i5.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i.i11.i.i = add nsw i32 %71, 1
  store i32 %inc.i.i.i.i.i.i.i11.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i.i12.i.i = getelementptr inbounds i32, i32* %68, i64 %idxprom.i.i.i.i.i.i.i8.i.i
  store i32 %72, i32* %arrayidx4.i.i.i.i.i.i.i12.i.i, align 4, !tbaa !47
  %val_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %54, i64 %indvars.iv, i32 0
  store double %sub.i.i.i.i, double* %val_.i, align 8, !tbaa !467
  %gradient_index_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %54, i64 %indvars.iv, i32 1
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %60, i64 0, i32 3
  %73 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %60, i64 0, i32 4
  %74 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i = icmp slt i32 %73, %74
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %call.i.noexc
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %60, i64 0, i32 0
  %.pre.i205 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %invoke.cont69

if.then.i:                                        ; preds = %call.i.noexc
  %mul.i.i = shl nsw i32 %74, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %75 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %76 = extractvalue { i64, i1 } %75, 1
  %77 = extractvalue { i64, i1 } %75, 0
  %78 = select i1 %76, i64 -1, i64 %77
  %call.i.i206 = invoke noalias nonnull i8* @_Znam(i64 %78) #44
          to label %call.i.i.noexc unwind label %lpad64

call.i.i.noexc:                                   ; preds = %if.then.i
  %79 = bitcast %"class.adept::internal::StackStorageOrig"* %60 to i8**
  %80 = load i8*, i8** %79, align 8, !tbaa !363
  %conv5.i.i = sext i32 %73 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i206, i8* align 4 %80, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %80, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %call.i.i.noexc
  call void @_ZdaPv(i8* nonnull %80) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %call.i.i.noexc
  %.pre1.i = phi i32 [ %73, %call.i.i.noexc ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i206, i8** %79, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %81 = bitcast i8* %call.i.i206 to %"struct.adept::internal::Statement"*
  br label %invoke.cont69

invoke.cont69:                                    ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %82 = phi i32 [ %73, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %83 = phi %"struct.adept::internal::Statement"* [ %.pre.i205, %entry.if.end_crit_edge.i ], [ %81, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %84 = load i32, i32* %gradient_index_.i, align 4, !tbaa !47
  %idxprom.i = sext i32 %82 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %83, i64 %idxprom.i, i32 0
  store i32 %84, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %60, i64 0, i32 5
  %85 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i = add nsw i32 %82, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %83, i64 %idxprom.i, i32 1
  store i32 %85, i32* %end_plus_one.i, align 4, !tbaa !371
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp60) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #38
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup30, label %for.body31, !llvm.loop !490

lpad37.loopexit:                                  ; preds = %for.body13.i
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup126

lpad37.loopexit.split-lp.loopexit:                ; preds = %for.body.i
  %lpad.loopexit245 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup126

lpad37.loopexit.split-lp.loopexit.split-lp:       ; preds = %for.body31
  %lpad.loopexit.split-lp246 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup126

lpad62:                                           ; preds = %invoke.cont56
  %86 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad64:                                           ; preds = %if.then.i, %if.then.i.i.i201
  %87 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp60) #38
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad62, %lpad.i, %lpad64
  %.pn50 = phi { i8*, i32 } [ %87, %lpad64 ], [ %86, %lpad62 ], [ %53, %lpad.i ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #38
  br label %ehcleanup126

invoke.cont82:                                    ; preds = %for.cond.cleanup30
  store %"class.adept::Active"* %slse, %"class.adept::Active"** %32, align 8
  store %"class.adept::Active"* %ref.tmp77, %"class.adept::Active"** %33, align 8
  %call85 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %slse, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %34)
          to label %invoke.cont84 unwind label %lpad81

invoke.cont84:                                    ; preds = %invoke.cont82
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp77) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #38
  %indvars.iv.next261 = add nuw nsw i64 %indvars.iv260, 1
  %exitcond264.not = icmp eq i64 %indvars.iv.next261, %wide.trip.count263
  br i1 %exitcond264.not, label %for.cond.cleanup, label %for.cond28.preheader, !llvm.loop !491

lpad79:                                           ; preds = %for.cond.cleanup30
  %88 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup87

lpad81:                                           ; preds = %invoke.cont82
  %89 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp77) #38
  br label %ehcleanup87

ehcleanup87:                                      ; preds = %lpad81, %lpad79
  %.pn48 = phi { i8*, i32 } [ %89, %lpad81 ], [ %88, %lpad79 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #38
  br label %ehcleanup126

invoke.cont103:                                   ; preds = %for.cond.cleanup
  %90 = bitcast %"struct.adept::internal::BinaryOperation.54"* %ref.tmp95 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #38
  %91 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.56"* %ref.tmp96 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #38
  %data.i.i.i209 = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.56", %"struct.adept::internal::BinaryOpScalarLeft.56"* %ref.tmp96, i64 0, i32 0, i32 0, i32 0
  %vecinit.i.i.i.i210 = insertelement <2 x double> undef, double %mul2, i32 0
  %vecinit1.i.i.i.i211 = shufflevector <2 x double> %vecinit.i.i.i.i210, <2 x double> undef, <2 x i32> zeroinitializer
  store <2 x double> %vecinit1.i.i.i.i211, <2 x double>* %data.i.i.i209, align 16, !tbaa !21, !alias.scope !492
  %right.i.i212 = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.56", %"struct.adept::internal::BinaryOpScalarLeft.56"* %ref.tmp96, i64 0, i32 1
  store %"class.adept::Active"* %slse, %"class.adept::Active"** %right.i.i212, align 16, !tbaa !61, !alias.scope !492
  %92 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp99 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #38
  %93 = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp99, i64 0, i32 0, i32 0
  store i32 %n, i32* %93, align 8
  %94 = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp99, i64 0, i32 1
  store %"class.adept::Active"* %lse_alphas, %"class.adept::Active"** %94, align 8
  %95 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.54", %"struct.adept::internal::BinaryOperation.54"* %ref.tmp95, i64 0, i32 0
  store %"struct.adept::internal::BinaryOpScalarLeft.56"* %ref.tmp96, %"struct.adept::internal::BinaryOpScalarLeft.56"** %95, align 8
  %96 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.54", %"struct.adept::internal::BinaryOperation.54"* %ref.tmp95, i64 0, i32 1
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp99, %"struct.adept::internal::BinaryOpScalarLeft.59"** %96, align 8
  %97 = bitcast %"struct.adept::internal::BinaryOperation.54"* %ref.tmp95 to %"struct.adept::Expression.55"*
  %call106 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS3_18BinaryOpScalarLeftIddNS3_3AddES1_EENS3_8SubtractENS5_IdiNS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE(%"class.adept::Active"* nonnull dereferenceable(12) %err, %"struct.adept::Expression.55"* nonnull align 1 dereferenceable(1) %97)
          to label %invoke.cont105 unwind label %lpad100

invoke.cont105:                                   ; preds = %invoke.cont103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #38
  %98 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp110 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #38
  %99 = bitcast %"class.adept::Active"* %ref.tmp111 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #38
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i64 0, i32 0
  %agg.tmp.sroa.0.0.copyload = load double, double* %agg.tmp.sroa.0.0..sroa_idx, align 8, !tbaa.struct !147
  %agg.tmp.sroa.2.0..sroa_idx1 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i64 0, i32 1
  %agg.tmp.sroa.2.0.copyload = load i32, i32* %agg.tmp.sroa.2.0..sroa_idx1, align 8, !tbaa.struct !148
  %100 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i115, align 8, !tbaa !475
  %101 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i116, align 8, !tbaa !475
  invoke void @_ZN9adeptTest17log_wishart_priorIN5adept6ActiveIdEEEET_ii7WishartPKS4_S7_S7_(%"class.adept::Active"* nonnull sret(%"class.adept::Active") align 8 %ref.tmp111, i32 %d, i32 %k, double %agg.tmp.sroa.0.0.copyload, i32 %agg.tmp.sroa.2.0.copyload, %"class.adept::Active"* nonnull %100, %"class.adept::Active"* nonnull %101, %"class.adept::Active"* %icf)
          to label %invoke.cont117 unwind label %lpad114

invoke.cont117:                                   ; preds = %invoke.cont105
  %102 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp110, i64 0, i32 0
  store %"class.adept::Active"* %err, %"class.adept::Active"** %102, align 8
  %103 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp110, i64 0, i32 1
  store %"class.adept::Active"* %ref.tmp111, %"class.adept::Active"** %103, align 8
  %104 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp110 to %"struct.adept::Expression.52"*
  %call120 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %err, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %104)
          to label %invoke.cont119 unwind label %lpad116

invoke.cont119:                                   ; preds = %invoke.cont117
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp111) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #38
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %lse_alphas) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #38
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %slse) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #38
  %_M_start.i174 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %main_term, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i174, align 8, !tbaa !475
  %_M_finish.i175 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %main_term, i64 0, i32 0, i32 0, i32 0, i32 1
  %106 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_finish.i175, align 8, !tbaa !495
  %cmp.not3.i.i.i.i176 = icmp eq %"class.adept::Active"* %105, %106
  br i1 %cmp.not3.i.i.i.i176, label %invoke.cont.i184, label %for.body.i.i.i.i180

for.body.i.i.i.i180:                              ; preds = %invoke.cont119, %for.body.i.i.i.i180
  %__first.addr.04.i.i.i.i177 = phi %"class.adept::Active"* [ %incdec.ptr.i.i.i.i178, %for.body.i.i.i.i180 ], [ %105, %invoke.cont119 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %__first.addr.04.i.i.i.i177) #38
  %incdec.ptr.i.i.i.i178 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__first.addr.04.i.i.i.i177, i64 1
  %cmp.not.i.i.i.i179 = icmp eq %"class.adept::Active"* %incdec.ptr.i.i.i.i178, %106
  br i1 %cmp.not.i.i.i.i179, label %invoke.cont.loopexit.i182, label %for.body.i.i.i.i180, !llvm.loop !496

invoke.cont.loopexit.i182:                        ; preds = %for.body.i.i.i.i180
  %.pre.i181 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i174, align 8, !tbaa !475
  br label %invoke.cont.i184

invoke.cont.i184:                                 ; preds = %invoke.cont.loopexit.i182, %invoke.cont119
  %107 = phi %"class.adept::Active"* [ %.pre.i181, %invoke.cont.loopexit.i182 ], [ %105, %invoke.cont119 ]
  %tobool.not.i.i.i183 = icmp eq %"class.adept::Active"* %107, null
  br i1 %tobool.not.i.i.i183, label %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit186, label %if.then.i.i.i185

if.then.i.i.i185:                                 ; preds = %invoke.cont.i184
  %108 = bitcast %"class.adept::Active"* %107 to i8*
  call void @_ZdlPv(i8* nonnull %108) #38
  br label %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit186

_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit186: ; preds = %invoke.cont.i184, %if.then.i.i.i185
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #38
  %_M_start.i159 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %Qxcentered, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i159, align 8, !tbaa !475
  %_M_finish.i160 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %Qxcentered, i64 0, i32 0, i32 0, i32 0, i32 1
  %110 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_finish.i160, align 8, !tbaa !495
  %cmp.not3.i.i.i.i161 = icmp eq %"class.adept::Active"* %109, %110
  br i1 %cmp.not3.i.i.i.i161, label %invoke.cont.i169, label %for.body.i.i.i.i165

for.body.i.i.i.i165:                              ; preds = %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit186, %for.body.i.i.i.i165
  %__first.addr.04.i.i.i.i162 = phi %"class.adept::Active"* [ %incdec.ptr.i.i.i.i163, %for.body.i.i.i.i165 ], [ %109, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit186 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %__first.addr.04.i.i.i.i162) #38
  %incdec.ptr.i.i.i.i163 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__first.addr.04.i.i.i.i162, i64 1
  %cmp.not.i.i.i.i164 = icmp eq %"class.adept::Active"* %incdec.ptr.i.i.i.i163, %110
  br i1 %cmp.not.i.i.i.i164, label %invoke.cont.loopexit.i167, label %for.body.i.i.i.i165, !llvm.loop !496

invoke.cont.loopexit.i167:                        ; preds = %for.body.i.i.i.i165
  %.pre.i166 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i159, align 8, !tbaa !475
  br label %invoke.cont.i169

invoke.cont.i169:                                 ; preds = %invoke.cont.loopexit.i167, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit186
  %111 = phi %"class.adept::Active"* [ %.pre.i166, %invoke.cont.loopexit.i167 ], [ %109, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit186 ]
  %tobool.not.i.i.i168 = icmp eq %"class.adept::Active"* %111, null
  br i1 %tobool.not.i.i.i168, label %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit171, label %if.then.i.i.i170

if.then.i.i.i170:                                 ; preds = %invoke.cont.i169
  %112 = bitcast %"class.adept::Active"* %111 to i8*
  call void @_ZdlPv(i8* nonnull %112) #38
  br label %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit171

_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit171: ; preds = %invoke.cont.i169, %if.then.i.i.i170
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #38
  %_M_start.i144 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %xcentered, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i144, align 8, !tbaa !475
  %_M_finish.i145 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %xcentered, i64 0, i32 0, i32 0, i32 0, i32 1
  %114 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_finish.i145, align 8, !tbaa !495
  %cmp.not3.i.i.i.i146 = icmp eq %"class.adept::Active"* %113, %114
  br i1 %cmp.not3.i.i.i.i146, label %invoke.cont.i154, label %for.body.i.i.i.i150

for.body.i.i.i.i150:                              ; preds = %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit171, %for.body.i.i.i.i150
  %__first.addr.04.i.i.i.i147 = phi %"class.adept::Active"* [ %incdec.ptr.i.i.i.i148, %for.body.i.i.i.i150 ], [ %113, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit171 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %__first.addr.04.i.i.i.i147) #38
  %incdec.ptr.i.i.i.i148 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__first.addr.04.i.i.i.i147, i64 1
  %cmp.not.i.i.i.i149 = icmp eq %"class.adept::Active"* %incdec.ptr.i.i.i.i148, %114
  br i1 %cmp.not.i.i.i.i149, label %invoke.cont.loopexit.i152, label %for.body.i.i.i.i150, !llvm.loop !496

invoke.cont.loopexit.i152:                        ; preds = %for.body.i.i.i.i150
  %.pre.i151 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i144, align 8, !tbaa !475
  br label %invoke.cont.i154

invoke.cont.i154:                                 ; preds = %invoke.cont.loopexit.i152, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit171
  %115 = phi %"class.adept::Active"* [ %.pre.i151, %invoke.cont.loopexit.i152 ], [ %113, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit171 ]
  %tobool.not.i.i.i153 = icmp eq %"class.adept::Active"* %115, null
  br i1 %tobool.not.i.i.i153, label %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit156, label %if.then.i.i.i155

if.then.i.i.i155:                                 ; preds = %invoke.cont.i154
  %116 = bitcast %"class.adept::Active"* %115 to i8*
  call void @_ZdlPv(i8* nonnull %116) #38
  br label %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit156

_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit156: ; preds = %invoke.cont.i154, %if.then.i.i.i155
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #38
  %117 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i115, align 8, !tbaa !475
  %_M_finish.i131 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %sum_qs, i64 0, i32 0, i32 0, i32 0, i32 1
  %118 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_finish.i131, align 8, !tbaa !495
  %cmp.not3.i.i.i.i132 = icmp eq %"class.adept::Active"* %117, %118
  br i1 %cmp.not3.i.i.i.i132, label %invoke.cont.i140, label %for.body.i.i.i.i136

for.body.i.i.i.i136:                              ; preds = %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit156, %for.body.i.i.i.i136
  %__first.addr.04.i.i.i.i133 = phi %"class.adept::Active"* [ %incdec.ptr.i.i.i.i134, %for.body.i.i.i.i136 ], [ %117, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit156 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %__first.addr.04.i.i.i.i133) #38
  %incdec.ptr.i.i.i.i134 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__first.addr.04.i.i.i.i133, i64 1
  %cmp.not.i.i.i.i135 = icmp eq %"class.adept::Active"* %incdec.ptr.i.i.i.i134, %118
  br i1 %cmp.not.i.i.i.i135, label %invoke.cont.loopexit.i138, label %for.body.i.i.i.i136, !llvm.loop !496

invoke.cont.loopexit.i138:                        ; preds = %for.body.i.i.i.i136
  %.pre.i137 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i115, align 8, !tbaa !475
  br label %invoke.cont.i140

invoke.cont.i140:                                 ; preds = %invoke.cont.loopexit.i138, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit156
  %119 = phi %"class.adept::Active"* [ %.pre.i137, %invoke.cont.loopexit.i138 ], [ %117, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit156 ]
  %tobool.not.i.i.i139 = icmp eq %"class.adept::Active"* %119, null
  br i1 %tobool.not.i.i.i139, label %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit142, label %if.then.i.i.i141

if.then.i.i.i141:                                 ; preds = %invoke.cont.i140
  %120 = bitcast %"class.adept::Active"* %119 to i8*
  call void @_ZdlPv(i8* nonnull %120) #38
  br label %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit142

_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit142: ; preds = %invoke.cont.i140, %if.then.i.i.i141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #38
  %121 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i116, align 8, !tbaa !475
  %_M_finish.i118 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %Qdiags, i64 0, i32 0, i32 0, i32 0, i32 1
  %122 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_finish.i118, align 8, !tbaa !495
  %cmp.not3.i.i.i.i119 = icmp eq %"class.adept::Active"* %121, %122
  br i1 %cmp.not3.i.i.i.i119, label %invoke.cont.i127, label %for.body.i.i.i.i123

for.body.i.i.i.i123:                              ; preds = %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit142, %for.body.i.i.i.i123
  %__first.addr.04.i.i.i.i120 = phi %"class.adept::Active"* [ %incdec.ptr.i.i.i.i121, %for.body.i.i.i.i123 ], [ %121, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit142 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %__first.addr.04.i.i.i.i120) #38
  %incdec.ptr.i.i.i.i121 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__first.addr.04.i.i.i.i120, i64 1
  %cmp.not.i.i.i.i122 = icmp eq %"class.adept::Active"* %incdec.ptr.i.i.i.i121, %122
  br i1 %cmp.not.i.i.i.i122, label %invoke.cont.loopexit.i125, label %for.body.i.i.i.i123, !llvm.loop !496

invoke.cont.loopexit.i125:                        ; preds = %for.body.i.i.i.i123
  %.pre.i124 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i116, align 8, !tbaa !475
  br label %invoke.cont.i127

invoke.cont.i127:                                 ; preds = %invoke.cont.loopexit.i125, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit142
  %123 = phi %"class.adept::Active"* [ %.pre.i124, %invoke.cont.loopexit.i125 ], [ %121, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit142 ]
  %tobool.not.i.i.i126 = icmp eq %"class.adept::Active"* %123, null
  br i1 %tobool.not.i.i.i126, label %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit129, label %if.then.i.i.i128

if.then.i.i.i128:                                 ; preds = %invoke.cont.i127
  %124 = bitcast %"class.adept::Active"* %123 to i8*
  call void @_ZdlPv(i8* nonnull %124) #38
  br label %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit129

_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev.exit129: ; preds = %invoke.cont.i127, %if.then.i.i.i128
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #38
  ret void

lpad93:                                           ; preds = %for.cond.cleanup
  %125 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup125

lpad100:                                          ; preds = %invoke.cont103
  %126 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #38
  br label %ehcleanup124

lpad114:                                          ; preds = %invoke.cont105
  %127 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup122

lpad116:                                          ; preds = %invoke.cont117
  %128 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp111) #38
  br label %ehcleanup122

ehcleanup122:                                     ; preds = %lpad116, %lpad114
  %.pn44 = phi { i8*, i32 } [ %128, %lpad116 ], [ %127, %lpad114 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #38
  br label %ehcleanup124

ehcleanup124:                                     ; preds = %ehcleanup122, %lpad100
  %.pn44.pn = phi { i8*, i32 } [ %.pn44, %ehcleanup122 ], [ %126, %lpad100 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %lse_alphas) #38
  br label %ehcleanup125

ehcleanup125:                                     ; preds = %ehcleanup124, %lpad93
  %.pn44.pn.pn = phi { i8*, i32 } [ %.pn44.pn, %ehcleanup124 ], [ %125, %lpad93 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #38
  br label %ehcleanup126

ehcleanup126:                                     ; preds = %lpad37.loopexit, %lpad37.loopexit.split-lp.loopexit.split-lp, %lpad37.loopexit.split-lp.loopexit, %ehcleanup, %ehcleanup87, %ehcleanup125
  %.pn50.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn44.pn.pn, %ehcleanup125 ], [ %.pn48, %ehcleanup87 ], [ %.pn50, %ehcleanup ], [ %lpad.loopexit, %lpad37.loopexit ], [ %lpad.loopexit245, %lpad37.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp246, %lpad37.loopexit.split-lp.loopexit.split-lp ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %slse) #38
  br label %ehcleanup127

ehcleanup127:                                     ; preds = %ehcleanup126, %lpad26
  %.pn50.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn50.pn.pn.pn.pn, %ehcleanup126 ], [ %42, %lpad26 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #38
  br label %ehcleanup128

ehcleanup128:                                     ; preds = %ehcleanup127, %lpad23
  %.pn50.pn.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %.pn50.pn.pn.pn.pn.pn, %ehcleanup127 ], [ %41, %lpad23 ]
  %_M_start.i102 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %main_term, i64 0, i32 0, i32 0, i32 0, i32 0
  %129 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i102, align 8, !tbaa !475
  %_M_finish.i103 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %main_term, i64 0, i32 0, i32 0, i32 0, i32 1
  %130 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_finish.i103, align 8, !tbaa !495
  %cmp.not3.i.i.i.i104 = icmp eq %"class.adept::Active"* %129, %130
  br i1 %cmp.not3.i.i.i.i104, label %invoke.cont.i112, label %for.body.i.i.i.i108

for.body.i.i.i.i108:                              ; preds = %ehcleanup128, %for.body.i.i.i.i108
  %__first.addr.04.i.i.i.i105 = phi %"class.adept::Active"* [ %incdec.ptr.i.i.i.i106, %for.body.i.i.i.i108 ], [ %129, %ehcleanup128 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %__first.addr.04.i.i.i.i105) #38
  %incdec.ptr.i.i.i.i106 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__first.addr.04.i.i.i.i105, i64 1
  %cmp.not.i.i.i.i107 = icmp eq %"class.adept::Active"* %incdec.ptr.i.i.i.i106, %130
  br i1 %cmp.not.i.i.i.i107, label %invoke.cont.loopexit.i110, label %for.body.i.i.i.i108, !llvm.loop !496

invoke.cont.loopexit.i110:                        ; preds = %for.body.i.i.i.i108
  %.pre.i109 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i102, align 8, !tbaa !475
  br label %invoke.cont.i112

invoke.cont.i112:                                 ; preds = %invoke.cont.loopexit.i110, %ehcleanup128
  %131 = phi %"class.adept::Active"* [ %.pre.i109, %invoke.cont.loopexit.i110 ], [ %129, %ehcleanup128 ]
  %tobool.not.i.i.i111 = icmp eq %"class.adept::Active"* %131, null
  br i1 %tobool.not.i.i.i111, label %ehcleanup129, label %if.then.i.i.i113

if.then.i.i.i113:                                 ; preds = %invoke.cont.i112
  %132 = bitcast %"class.adept::Active"* %131 to i8*
  call void @_ZdlPv(i8* nonnull %132) #38
  br label %ehcleanup129

ehcleanup129:                                     ; preds = %if.then.i.i.i113, %invoke.cont.i112, %lpad20
  %.pn50.pn.pn.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %40, %lpad20 ], [ %.pn50.pn.pn.pn.pn.pn.pn, %invoke.cont.i112 ], [ %.pn50.pn.pn.pn.pn.pn.pn, %if.then.i.i.i113 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #38
  %_M_start.i89 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %Qxcentered, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i89, align 8, !tbaa !475
  %_M_finish.i90 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %Qxcentered, i64 0, i32 0, i32 0, i32 0, i32 1
  %134 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_finish.i90, align 8, !tbaa !495
  %cmp.not3.i.i.i.i91 = icmp eq %"class.adept::Active"* %133, %134
  br i1 %cmp.not3.i.i.i.i91, label %invoke.cont.i99, label %for.body.i.i.i.i95

for.body.i.i.i.i95:                               ; preds = %ehcleanup129, %for.body.i.i.i.i95
  %__first.addr.04.i.i.i.i92 = phi %"class.adept::Active"* [ %incdec.ptr.i.i.i.i93, %for.body.i.i.i.i95 ], [ %133, %ehcleanup129 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %__first.addr.04.i.i.i.i92) #38
  %incdec.ptr.i.i.i.i93 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__first.addr.04.i.i.i.i92, i64 1
  %cmp.not.i.i.i.i94 = icmp eq %"class.adept::Active"* %incdec.ptr.i.i.i.i93, %134
  br i1 %cmp.not.i.i.i.i94, label %invoke.cont.loopexit.i97, label %for.body.i.i.i.i95, !llvm.loop !496

invoke.cont.loopexit.i97:                         ; preds = %for.body.i.i.i.i95
  %.pre.i96 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i89, align 8, !tbaa !475
  br label %invoke.cont.i99

invoke.cont.i99:                                  ; preds = %invoke.cont.loopexit.i97, %ehcleanup129
  %135 = phi %"class.adept::Active"* [ %.pre.i96, %invoke.cont.loopexit.i97 ], [ %133, %ehcleanup129 ]
  %tobool.not.i.i.i98 = icmp eq %"class.adept::Active"* %135, null
  br i1 %tobool.not.i.i.i98, label %ehcleanup131, label %if.then.i.i.i100

if.then.i.i.i100:                                 ; preds = %invoke.cont.i99
  %136 = bitcast %"class.adept::Active"* %135 to i8*
  call void @_ZdlPv(i8* nonnull %136) #38
  br label %ehcleanup131

ehcleanup131:                                     ; preds = %if.then.i.i.i100, %invoke.cont.i99, %lpad16
  %.pn50.pn.pn.pn.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %39, %lpad16 ], [ %.pn50.pn.pn.pn.pn.pn.pn.pn, %invoke.cont.i99 ], [ %.pn50.pn.pn.pn.pn.pn.pn.pn, %if.then.i.i.i100 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #38
  %_M_start.i76 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %xcentered, i64 0, i32 0, i32 0, i32 0, i32 0
  %137 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i76, align 8, !tbaa !475
  %_M_finish.i77 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %xcentered, i64 0, i32 0, i32 0, i32 0, i32 1
  %138 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_finish.i77, align 8, !tbaa !495
  %cmp.not3.i.i.i.i78 = icmp eq %"class.adept::Active"* %137, %138
  br i1 %cmp.not3.i.i.i.i78, label %invoke.cont.i86, label %for.body.i.i.i.i82

for.body.i.i.i.i82:                               ; preds = %ehcleanup131, %for.body.i.i.i.i82
  %__first.addr.04.i.i.i.i79 = phi %"class.adept::Active"* [ %incdec.ptr.i.i.i.i80, %for.body.i.i.i.i82 ], [ %137, %ehcleanup131 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %__first.addr.04.i.i.i.i79) #38
  %incdec.ptr.i.i.i.i80 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__first.addr.04.i.i.i.i79, i64 1
  %cmp.not.i.i.i.i81 = icmp eq %"class.adept::Active"* %incdec.ptr.i.i.i.i80, %138
  br i1 %cmp.not.i.i.i.i81, label %invoke.cont.loopexit.i84, label %for.body.i.i.i.i82, !llvm.loop !496

invoke.cont.loopexit.i84:                         ; preds = %for.body.i.i.i.i82
  %.pre.i83 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i76, align 8, !tbaa !475
  br label %invoke.cont.i86

invoke.cont.i86:                                  ; preds = %invoke.cont.loopexit.i84, %ehcleanup131
  %139 = phi %"class.adept::Active"* [ %.pre.i83, %invoke.cont.loopexit.i84 ], [ %137, %ehcleanup131 ]
  %tobool.not.i.i.i85 = icmp eq %"class.adept::Active"* %139, null
  br i1 %tobool.not.i.i.i85, label %ehcleanup133, label %if.then.i.i.i87

if.then.i.i.i87:                                  ; preds = %invoke.cont.i86
  %140 = bitcast %"class.adept::Active"* %139 to i8*
  call void @_ZdlPv(i8* nonnull %140) #38
  br label %ehcleanup133

ehcleanup133:                                     ; preds = %if.then.i.i.i87, %invoke.cont.i86, %lpad12
  %.pn50.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %38, %lpad12 ], [ %.pn50.pn.pn.pn.pn.pn.pn.pn.pn, %invoke.cont.i86 ], [ %.pn50.pn.pn.pn.pn.pn.pn.pn.pn, %if.then.i.i.i87 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #38
  %_M_start.i63 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %sum_qs, i64 0, i32 0, i32 0, i32 0, i32 0
  %141 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i63, align 8, !tbaa !475
  %_M_finish.i64 = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %sum_qs, i64 0, i32 0, i32 0, i32 0, i32 1
  %142 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_finish.i64, align 8, !tbaa !495
  %cmp.not3.i.i.i.i65 = icmp eq %"class.adept::Active"* %141, %142
  br i1 %cmp.not3.i.i.i.i65, label %invoke.cont.i73, label %for.body.i.i.i.i69

for.body.i.i.i.i69:                               ; preds = %ehcleanup133, %for.body.i.i.i.i69
  %__first.addr.04.i.i.i.i66 = phi %"class.adept::Active"* [ %incdec.ptr.i.i.i.i67, %for.body.i.i.i.i69 ], [ %141, %ehcleanup133 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %__first.addr.04.i.i.i.i66) #38
  %incdec.ptr.i.i.i.i67 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__first.addr.04.i.i.i.i66, i64 1
  %cmp.not.i.i.i.i68 = icmp eq %"class.adept::Active"* %incdec.ptr.i.i.i.i67, %142
  br i1 %cmp.not.i.i.i.i68, label %invoke.cont.loopexit.i71, label %for.body.i.i.i.i69, !llvm.loop !496

invoke.cont.loopexit.i71:                         ; preds = %for.body.i.i.i.i69
  %.pre.i70 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i63, align 8, !tbaa !475
  br label %invoke.cont.i73

invoke.cont.i73:                                  ; preds = %invoke.cont.loopexit.i71, %ehcleanup133
  %143 = phi %"class.adept::Active"* [ %.pre.i70, %invoke.cont.loopexit.i71 ], [ %141, %ehcleanup133 ]
  %tobool.not.i.i.i72 = icmp eq %"class.adept::Active"* %143, null
  br i1 %tobool.not.i.i.i72, label %ehcleanup135, label %if.then.i.i.i74

if.then.i.i.i74:                                  ; preds = %invoke.cont.i73
  %144 = bitcast %"class.adept::Active"* %143 to i8*
  call void @_ZdlPv(i8* nonnull %144) #38
  br label %ehcleanup135

ehcleanup135:                                     ; preds = %if.then.i.i.i74, %invoke.cont.i73, %lpad8
  %.pn50.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { i8*, i32 } [ %37, %lpad8 ], [ %.pn50.pn.pn.pn.pn.pn.pn.pn.pn.pn, %invoke.cont.i73 ], [ %.pn50.pn.pn.pn.pn.pn.pn.pn.pn.pn, %if.then.i.i.i74 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #38
  %_M_start.i = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %Qdiags, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i, align 8, !tbaa !475
  %_M_finish.i = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %Qdiags, i64 0, i32 0, i32 0, i32 0, i32 1
  %146 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_finish.i, align 8, !tbaa !495
  %cmp.not3.i.i.i.i = icmp eq %"class.adept::Active"* %145, %146
  br i1 %cmp.not3.i.i.i.i, label %invoke.cont.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %ehcleanup135, %for.body.i.i.i.i
  %__first.addr.04.i.i.i.i = phi %"class.adept::Active"* [ %incdec.ptr.i.i.i.i, %for.body.i.i.i.i ], [ %145, %ehcleanup135 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %__first.addr.04.i.i.i.i) #38
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__first.addr.04.i.i.i.i, i64 1
  %cmp.not.i.i.i.i = icmp eq %"class.adept::Active"* %incdec.ptr.i.i.i.i, %146
  br i1 %cmp.not.i.i.i.i, label %invoke.cont.loopexit.i, label %for.body.i.i.i.i, !llvm.loop !496

invoke.cont.loopexit.i:                           ; preds = %for.body.i.i.i.i
  %.pre.i = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start.i, align 8, !tbaa !475
  br label %invoke.cont.i

invoke.cont.i:                                    ; preds = %invoke.cont.loopexit.i, %ehcleanup135
  %147 = phi %"class.adept::Active"* [ %.pre.i, %invoke.cont.loopexit.i ], [ %145, %ehcleanup135 ]
  %tobool.not.i.i.i = icmp eq %"class.adept::Active"* %147, null
  br i1 %tobool.not.i.i.i, label %ehcleanup137, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %invoke.cont.i
  %148 = bitcast %"class.adept::Active"* %147 to i8*
  call void @_ZdlPv(i8* nonnull %148) #38
  br label %ehcleanup137

ehcleanup137:                                     ; preds = %if.then.i.i.i, %invoke.cont.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #38
  resume { i8*, i32 } %.pn50.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) local_unnamed_addr #22

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept17invalid_operationD0Ev(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %this) unnamed_addr #29 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !74
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #38
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %entry, %if.then.i.i.i
  %3 = getelementptr inbounds %"class.adept::invalid_operation", %"class.adept::invalid_operation"* %this, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #38
  %4 = bitcast %"class.adept::invalid_operation"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: nounwind uwtable willreturn mustprogress
define linkonce_odr dso_local i8* @_ZNK5adept9exception4whatEv(%"class.adept::exception"* nonnull dereferenceable(40) %this) unnamed_addr #30 comdat align 2 {
entry:
  %_M_p.i.i = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 1, i32 0, i32 0
  %0 = load i8*, i8** %_M_p.i.i, align 8, !tbaa !17
  ret i8* %0
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept15array_exceptionD0Ev(%"class.adept::array_exception"* nonnull dereferenceable(40) %this) unnamed_addr #29 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::array_exception", %"class.adept::array_exception"* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !74
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::array_exception", %"class.adept::array_exception"* %this, i64 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::array_exception", %"class.adept::array_exception"* %this, i64 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #38
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %entry, %if.then.i.i.i
  %3 = getelementptr inbounds %"class.adept::array_exception", %"class.adept::array_exception"* %this, i64 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #38
  %4 = bitcast %"class.adept::array_exception"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept9exceptionD0Ev(%"class.adept::exception"* nonnull dereferenceable(40) %this) unnamed_addr #5 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !74
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #38
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %entry, %if.then.i.i.i
  %3 = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this, i64 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #38
  %4 = bitcast %"class.adept::exception"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8)) unnamed_addr #7

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept20stack_already_activeD0Ev(%"class.adept::stack_already_active"* nonnull dereferenceable(40) %this) unnamed_addr #29 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::stack_already_active", %"class.adept::stack_already_active"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !74
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::stack_already_active", %"class.adept::stack_already_active"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::stack_already_active", %"class.adept::stack_already_active"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #38
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %entry, %if.then.i.i.i
  %3 = getelementptr inbounds %"class.adept::stack_already_active", %"class.adept::stack_already_active"* %this, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #38
  %4 = bitcast %"class.adept::stack_already_active"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept25gradients_not_initializedD0Ev(%"class.adept::gradients_not_initialized"* nonnull dereferenceable(40) %this) unnamed_addr #29 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::gradients_not_initialized", %"class.adept::gradients_not_initialized"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !74
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::gradients_not_initialized", %"class.adept::gradients_not_initialized"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::gradients_not_initialized", %"class.adept::gradients_not_initialized"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #38
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %entry, %if.then.i.i.i
  %3 = getelementptr inbounds %"class.adept::gradients_not_initialized", %"class.adept::gradients_not_initialized"* %this, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #38
  %4 = bitcast %"class.adept::gradients_not_initialized"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept21feature_not_availableD0Ev(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %this) unnamed_addr #29 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::feature_not_available", %"class.adept::feature_not_available"* %this, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !74
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::feature_not_available", %"class.adept::feature_not_available"* %this, i64 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::feature_not_available", %"class.adept::feature_not_available"* %this, i64 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #38
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %entry, %if.then.i.i.i
  %3 = getelementptr inbounds %"class.adept::feature_not_available", %"class.adept::feature_not_available"* %this, i64 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #38
  %4 = bitcast %"class.adept::feature_not_available"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept41dependents_or_independents_not_identifiedD0Ev(%"class.adept::dependents_or_independents_not_identified"* nonnull dereferenceable(40) %this) unnamed_addr #29 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::dependents_or_independents_not_identified", %"class.adept::dependents_or_independents_not_identified"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !74
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::dependents_or_independents_not_identified", %"class.adept::dependents_or_independents_not_identified"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::dependents_or_independents_not_identified", %"class.adept::dependents_or_independents_not_identified"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #38
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %entry, %if.then.i.i.i
  %3 = getelementptr inbounds %"class.adept::dependents_or_independents_not_identified", %"class.adept::dependents_or_independents_not_identified"* %this, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #38
  %4 = bitcast %"class.adept::dependents_or_independents_not_identified"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare dso_local i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) local_unnamed_addr #31

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) local_unnamed_addr #31

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull dereferenceable(24) %this, %"class.std::__cxx11::basic_string"* %__position.coerce, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__args) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %_M_finish.i16.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish.i16.i, align 8, !tbaa !32
  %_M_start.i17.i = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_start.i17.i, align 8, !tbaa !62
  %sub.ptr.lhs.cast.i18.i = ptrtoint %"class.std::__cxx11::basic_string"* %0 to i64
  %sub.ptr.rhs.cast.i19.i = ptrtoint %"class.std::__cxx11::basic_string"* %1 to i64
  %sub.ptr.sub.i20.i = sub i64 %sub.ptr.lhs.cast.i18.i, %sub.ptr.rhs.cast.i19.i
  %sub.ptr.div.i21.i = ashr exact i64 %sub.ptr.sub.i20.i, 5
  %cmp.i = icmp eq i64 %sub.ptr.sub.i20.i, 9223372036854775776
  br i1 %cmp.i, label %if.then.i, label %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit

if.then.i:                                        ; preds = %entry
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.118, i64 0, i64 0)) #40
  unreachable

_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit: ; preds = %entry
  %cmp.i.i = icmp eq i64 %sub.ptr.sub.i20.i, 0
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 1, i64 %sub.ptr.div.i21.i
  %add.i = add nsw i64 %.sroa.speculated.i, %sub.ptr.div.i21.i
  %cmp7.i = icmp ult i64 %add.i, %sub.ptr.div.i21.i
  %cmp9.i = icmp ugt i64 %add.i, 288230376151711743
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i = select i1 %or.cond.i, i64 288230376151711743, i64 %add.i
  %sub.ptr.lhs.cast.i = ptrtoint %"class.std::__cxx11::basic_string"* %__position.coerce to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i19.i
  %sub.ptr.div.i = ashr exact i64 %sub.ptr.sub.i, 5
  %cmp.not.i = icmp eq i64 %cond.i, 0
  br i1 %cmp.not.i, label %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit, label %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i

_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i: ; preds = %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit
  %mul.i.i.i = shl nuw nsw i64 %cond.i, 5
  %call2.i.i.i = tail call noalias nonnull i8* @_Znwm(i64 %mul.i.i.i) #42
  %2 = bitcast i8* %call2.i.i.i to %"class.std::__cxx11::basic_string"*
  br label %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit

_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit: ; preds = %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit, %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i
  %cond.i40 = phi %"class.std::__cxx11::basic_string"* [ %2, %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m.exit.i ], [ null, %_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc.exit ]
  %add.ptr = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %cond.i40, i64 %sub.ptr.div.i
  %3 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %cond.i40, i64 %sub.ptr.div.i, i32 2
  %4 = bitcast %"class.std::__cxx11::basic_string"* %add.ptr to %union.anon**
  store %union.anon* %3, %union.anon** %4, align 8, !tbaa !14
  %_M_p.i.i13.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__args, i64 0, i32 0, i32 0
  %5 = load i8*, i8** %_M_p.i.i13.i.i.i, align 8, !tbaa !17
  %6 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__args, i64 0, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %6 to i8*
  %cmp.i.i.i.i = icmp eq i8* %5, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit
  %arraydecay.i.i.i.i = bitcast %union.anon* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(16) %arraydecay.i.i.i.i, i8* nonnull align 8 dereferenceable(16) %5, i64 16, i1 false) #38
  br label %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit

if.else.i.i.i:                                    ; preds = %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm.exit
  %_M_p.i11.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %add.ptr, i64 0, i32 0, i32 0
  store i8* %5, i8** %_M_p.i11.i.i.i, align 8, !tbaa !17
  %_M_allocated_capacity.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__args, i64 0, i32 2, i32 0
  %7 = load i64, i64* %_M_allocated_capacity.i.i.i, align 8, !tbaa !21
  %_M_allocated_capacity.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %cond.i40, i64 %sub.ptr.div.i, i32 2, i32 0
  store i64 %7, i64* %_M_allocated_capacity.i.i.i.i, align 8, !tbaa !21
  br label %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit

_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit: ; preds = %if.then.i.i.i, %if.else.i.i.i
  %_M_string_length.i10.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__args, i64 0, i32 1
  %8 = load i64, i64* %_M_string_length.i10.i.i.i, align 8, !tbaa !19
  %_M_string_length.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %cond.i40, i64 %sub.ptr.div.i, i32 1
  store i64 %8, i64* %_M_string_length.i.i.i.i, align 8, !tbaa !19
  %9 = bitcast %"class.std::__cxx11::basic_string"* %__args to %union.anon**
  store %union.anon* %6, %union.anon** %9, align 8, !tbaa !17
  store i64 0, i64* %_M_string_length.i10.i.i.i, align 8, !tbaa !19
  store i8 0, i8* %arraydecay.i.i.i.i.i, align 8, !tbaa !21
  %cmp.not6.i.i.i.i17 = icmp eq %"class.std::__cxx11::basic_string"* %1, %__position.coerce
  br i1 %cmp.not6.i.i.i.i17, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit37, label %for.body.i.i.i.i23

for.body.i.i.i.i23:                               ; preds = %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i35
  %__cur.09.i.i.i.i18 = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr2.i.i.i.i33, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i35 ], [ %cond.i40, %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit ]
  %__first.addr.07.i.i.i.i19 = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr.i.i.i.i32, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i35 ], [ %1, %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit ]
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.09.i.i.i.i18, i64 0, i32 2
  %11 = bitcast %"class.std::__cxx11::basic_string"* %__cur.09.i.i.i.i18 to %union.anon**
  store %union.anon* %10, %union.anon** %11, align 8, !tbaa !14
  %_M_p.i.i13.i.i.i.i.i.i.i.i20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.07.i.i.i.i19, i64 0, i32 0, i32 0
  %12 = load i8*, i8** %_M_p.i.i13.i.i.i.i.i.i.i.i20, align 8, !tbaa !17
  %13 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.07.i.i.i.i19, i64 0, i32 2
  %arraydecay.i.i.i.i.i.i.i.i.i.i21 = bitcast %union.anon* %13 to i8*
  %cmp.i.i.i.i.i.i.i.i.i22 = icmp eq i8* %12, %arraydecay.i.i.i.i.i.i.i.i.i.i21
  br i1 %cmp.i.i.i.i.i.i.i.i.i22, label %if.then.i.i.i.i.i.i.i.i25, label %if.else.i.i.i.i.i.i.i.i29

if.then.i.i.i.i.i.i.i.i25:                        ; preds = %for.body.i.i.i.i23
  %arraydecay.i.i.i.i.i.i.i.i.i24 = bitcast %union.anon* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(16) %arraydecay.i.i.i.i.i.i.i.i.i24, i8* nonnull align 8 dereferenceable(16) %12, i64 16, i1 false) #38
  br label %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i35

if.else.i.i.i.i.i.i.i.i29:                        ; preds = %for.body.i.i.i.i23
  %_M_p.i11.i.i.i.i.i.i.i.i26 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.09.i.i.i.i18, i64 0, i32 0, i32 0
  store i8* %12, i8** %_M_p.i11.i.i.i.i.i.i.i.i26, align 8, !tbaa !17
  %_M_allocated_capacity.i.i.i.i.i.i.i.i27 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.07.i.i.i.i19, i64 0, i32 2, i32 0
  %14 = load i64, i64* %_M_allocated_capacity.i.i.i.i.i.i.i.i27, align 8, !tbaa !21
  %_M_allocated_capacity.i.i.i.i.i.i.i.i.i28 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.09.i.i.i.i18, i64 0, i32 2, i32 0
  store i64 %14, i64* %_M_allocated_capacity.i.i.i.i.i.i.i.i.i28, align 8, !tbaa !21
  br label %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i35

_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i35: ; preds = %if.else.i.i.i.i.i.i.i.i29, %if.then.i.i.i.i.i.i.i.i25
  %_M_string_length.i10.i.i.i.i.i.i.i.i30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.07.i.i.i.i19, i64 0, i32 1
  %15 = load i64, i64* %_M_string_length.i10.i.i.i.i.i.i.i.i30, align 8, !tbaa !19
  %_M_string_length.i.i.i.i.i.i.i.i.i31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.09.i.i.i.i18, i64 0, i32 1
  store i64 %15, i64* %_M_string_length.i.i.i.i.i.i.i.i.i31, align 8, !tbaa !19
  %16 = bitcast %"class.std::__cxx11::basic_string"* %__first.addr.07.i.i.i.i19 to %union.anon**
  store %union.anon* %13, %union.anon** %16, align 8, !tbaa !17
  store i64 0, i64* %_M_string_length.i10.i.i.i.i.i.i.i.i30, align 8, !tbaa !19
  store i8 0, i8* %arraydecay.i.i.i.i.i.i.i.i.i.i21, align 8, !tbaa !21
  %incdec.ptr.i.i.i.i32 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.07.i.i.i.i19, i64 1
  %incdec.ptr2.i.i.i.i33 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.09.i.i.i.i18, i64 1
  %cmp.not.i.i.i.i34 = icmp eq %"class.std::__cxx11::basic_string"* %incdec.ptr.i.i.i.i32, %__position.coerce
  br i1 %cmp.not.i.i.i.i34, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit37, label %for.body.i.i.i.i23, !llvm.loop !497

_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit37: ; preds = %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i35, %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit
  %__cur.0.lcssa.i.i.i.i36 = phi %"class.std::__cxx11::basic_string"* [ %cond.i40, %_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_.exit ], [ %incdec.ptr2.i.i.i.i33, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i35 ]
  %incdec.ptr = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.0.lcssa.i.i.i.i36, i64 1
  %cmp.not6.i.i.i.i = icmp eq %"class.std::__cxx11::basic_string"* %0, %__position.coerce
  br i1 %cmp.not6.i.i.i.i, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit37, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i
  %__cur.09.i.i.i.i = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr2.i.i.i.i, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i ], [ %incdec.ptr, %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit37 ]
  %__first.addr.07.i.i.i.i = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr.i.i.i.i, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i ], [ %__position.coerce, %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit37 ]
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.09.i.i.i.i, i64 0, i32 2
  %18 = bitcast %"class.std::__cxx11::basic_string"* %__cur.09.i.i.i.i to %union.anon**
  store %union.anon* %17, %union.anon** %18, align 8, !tbaa !14
  %_M_p.i.i13.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.07.i.i.i.i, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %_M_p.i.i13.i.i.i.i.i.i.i.i, align 8, !tbaa !17
  %20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.07.i.i.i.i, i64 0, i32 2
  %arraydecay.i.i.i.i.i.i.i.i.i.i = bitcast %union.anon* %20 to i8*
  %cmp.i.i.i.i.i.i.i.i.i = icmp eq i8* %19, %arraydecay.i.i.i.i.i.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i.i:                          ; preds = %for.body.i.i.i.i
  %arraydecay.i.i.i.i.i.i.i.i.i = bitcast %union.anon* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(16) %arraydecay.i.i.i.i.i.i.i.i.i, i8* nonnull align 8 dereferenceable(16) %19, i64 16, i1 false) #38
  br label %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i

if.else.i.i.i.i.i.i.i.i:                          ; preds = %for.body.i.i.i.i
  %_M_p.i11.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.09.i.i.i.i, i64 0, i32 0, i32 0
  store i8* %19, i8** %_M_p.i11.i.i.i.i.i.i.i.i, align 8, !tbaa !17
  %_M_allocated_capacity.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.07.i.i.i.i, i64 0, i32 2, i32 0
  %21 = load i64, i64* %_M_allocated_capacity.i.i.i.i.i.i.i.i, align 8, !tbaa !21
  %_M_allocated_capacity.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.09.i.i.i.i, i64 0, i32 2, i32 0
  store i64 %21, i64* %_M_allocated_capacity.i.i.i.i.i.i.i.i.i, align 8, !tbaa !21
  br label %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i

_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i: ; preds = %if.else.i.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i.i
  %_M_string_length.i10.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.07.i.i.i.i, i64 0, i32 1
  %22 = load i64, i64* %_M_string_length.i10.i.i.i.i.i.i.i.i, align 8, !tbaa !19
  %_M_string_length.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.09.i.i.i.i, i64 0, i32 1
  store i64 %22, i64* %_M_string_length.i.i.i.i.i.i.i.i.i, align 8, !tbaa !19
  %23 = bitcast %"class.std::__cxx11::basic_string"* %__first.addr.07.i.i.i.i to %union.anon**
  store %union.anon* %20, %union.anon** %23, align 8, !tbaa !17
  store i64 0, i64* %_M_string_length.i10.i.i.i.i.i.i.i.i, align 8, !tbaa !19
  store i8 0, i8* %arraydecay.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !21
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__first.addr.07.i.i.i.i, i64 1
  %incdec.ptr2.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %__cur.09.i.i.i.i, i64 1
  %cmp.not.i.i.i.i = icmp eq %"class.std::__cxx11::basic_string"* %incdec.ptr.i.i.i.i, %0
  br i1 %cmp.not.i.i.i.i, label %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit, label %for.body.i.i.i.i, !llvm.loop !497

_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit: ; preds = %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i, %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit37
  %__cur.0.lcssa.i.i.i.i = phi %"class.std::__cxx11::basic_string"* [ %incdec.ptr, %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit37 ], [ %incdec.ptr2.i.i.i.i, %_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_.exit.i.i.i.i ]
  %tobool.not.i = icmp eq %"class.std::__cxx11::basic_string"* %1, null
  br i1 %tobool.not.i, label %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit, label %if.then.i16

if.then.i16:                                      ; preds = %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit
  %24 = bitcast %"class.std::__cxx11::basic_string"* %1 to i8*
  tail call void @_ZdlPv(i8* nonnull %24) #38
  br label %_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit

_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m.exit: ; preds = %_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_.exit, %if.then.i16
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %cond.i40, %"class.std::__cxx11::basic_string"** %_M_start.i17.i, align 8, !tbaa !62
  store %"class.std::__cxx11::basic_string"* %__cur.0.lcssa.i.i.i.i, %"class.std::__cxx11::basic_string"** %_M_finish.i16.i, align 8, !tbaa !32
  %add.ptr20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %cond.i40, i64 %cond.i
  store %"class.std::__cxx11::basic_string"* %add.ptr20, %"class.std::__cxx11::basic_string"** %_M_end_of_storage, align 8, !tbaa !34
  ret void
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() local_unnamed_addr #31

; Function Attrs: nobuiltin nofree allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) local_unnamed_addr #24

; Function Attrs: nounwind
declare dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i8*, i64, i64) local_unnamed_addr #7

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) local_unnamed_addr #31

; Function Attrs: nounwind
declare dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i8 signext, i64) local_unnamed_addr #7

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.3"* nonnull dereferenceable(24) %this, i64 %__n) local_unnamed_addr #10 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %cmp.not = icmp eq i64 %__n, 0
  br i1 %cmp.not, label %if.end48, label %if.then

if.then:                                          ; preds = %entry
  %_M_finish.i = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  %0 = load double*, double** %_M_finish.i, align 8, !tbaa !49
  %_M_start.i = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %1 = load double*, double** %_M_start.i, align 8, !tbaa !51
  %sub.ptr.lhs.cast.i = ptrtoint double* %0 to i64
  %sub.ptr.rhs.cast.i = ptrtoint double* %1 to i64
  %sub.ptr.sub.i = sub i64 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %2 = lshr exact i64 %sub.ptr.sub.i, 3
  %_M_end_of_storage = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  %3 = load double*, double** %_M_end_of_storage, align 8, !tbaa !498
  %sub.ptr.lhs.cast = ptrtoint double* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.lhs.cast.i
  %sub.ptr.div = ashr exact i64 %sub.ptr.sub, 3
  %cmp4 = icmp sgt i64 %sub.ptr.sub.i, -1
  tail call void @llvm.assume(i1 %cmp4)
  %sub = xor i64 %2, 1152921504606846975
  %cmp6 = icmp ule i64 %sub.ptr.div, %sub
  tail call void @llvm.assume(i1 %cmp6)
  %cmp8.not = icmp ult i64 %sub.ptr.div, %__n
  br i1 %cmp8.not, label %if.else, label %_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit33

_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit33: ; preds = %if.then
  %__first2.i.i.i29 = bitcast double* %0 to i8*
  %4 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first2.i.i.i29, i8 0, i64 %4, i1 false)
  %scevgep.i.i.i30 = getelementptr double, double* %0, i64 %__n
  br label %if.end48.sink.split

if.else:                                          ; preds = %if.then
  %cmp.i = icmp ult i64 %sub, %__n
  br i1 %cmp.i, label %if.then.i34, label %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit

if.then.i34:                                      ; preds = %if.else
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.122, i64 0, i64 0)) #40
  unreachable

_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit:    ; preds = %if.else
  %cmp.i.i = icmp ult i64 %2, %__n
  %.sroa.speculated.i = select i1 %cmp.i.i, i64 %__n, i64 %2
  %add.i = add i64 %.sroa.speculated.i, %2
  %cmp7.i = icmp ult i64 %add.i, %2
  %cmp9.i = icmp ugt i64 %add.i, 1152921504606846975
  %or.cond.i = or i1 %cmp7.i, %cmp9.i
  %cond.i35 = select i1 %or.cond.i, i64 1152921504606846975, i64 %add.i
  %cmp.not.i = icmp eq i64 %cond.i35, 0
  br i1 %cmp.not.i, label %try.cont, label %cond.true.i

cond.true.i:                                      ; preds = %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit
  %cmp.i.i.i = icmp ugt i64 %cond.i35, 1152921504606846975
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i

if.then.i.i.i:                                    ; preds = %cond.true.i
  tail call void @_ZSt17__throw_bad_allocv() #40
  unreachable

_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i: ; preds = %cond.true.i
  %mul.i.i.i = shl nuw nsw i64 %cond.i35, 3
  %call2.i.i.i = tail call noalias nonnull i8* @_Znwm(i64 %mul.i.i.i) #42
  %5 = bitcast i8* %call2.i.i.i to double*
  %.pre = load double*, double** %_M_start.i, align 8, !tbaa !51
  %.pre36 = load double*, double** %_M_finish.i, align 8, !tbaa !49
  %.pre37 = ptrtoint double* %.pre36 to i64
  %.pre38 = ptrtoint double* %.pre to i64
  %.pre39 = sub i64 %.pre37, %.pre38
  br label %try.cont

try.cont:                                         ; preds = %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i, %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit
  %sub.ptr.sub.i.i.i.i.pre-phi = phi i64 [ %.pre39, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i ], [ %sub.ptr.sub.i, %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit ]
  %6 = phi double* [ %.pre, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i ], [ %1, %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit ]
  %cond.i = phi double* [ %5, %_ZNSt16allocator_traitsISaIdEE8allocateERS0_m.exit.i ], [ null, %_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc.exit ]
  %add.ptr = getelementptr inbounds double, double* %cond.i, i64 %2
  %__first2.i.i.i = bitcast double* %add.ptr to i8*
  %7 = shl nuw i64 %__n, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %__first2.i.i.i, i8 0, i64 %7, i1 false)
  %cmp.i.i.i.i = icmp sgt i64 %sub.ptr.sub.i.i.i.i.pre-phi, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_.exit

if.then.i.i.i.i:                                  ; preds = %try.cont
  %8 = bitcast double* %cond.i to i8*
  %9 = bitcast double* %6 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 %sub.ptr.sub.i.i.i.i.pre-phi, i1 false) #38
  br label %_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_.exit

_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_.exit: ; preds = %try.cont, %if.then.i.i.i.i
  %tobool.not.i = icmp eq double* %6, null
  br i1 %tobool.not.i, label %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit, label %if.then.i

if.then.i:                                        ; preds = %_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_.exit
  %10 = bitcast double* %6 to i8*
  tail call void @_ZdlPv(i8* nonnull %10) #38
  br label %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit

_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit: ; preds = %_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_.exit, %if.then.i
  store double* %cond.i, double** %_M_start.i, align 8, !tbaa !51
  %add.ptr41 = getelementptr inbounds double, double* %add.ptr, i64 %__n
  store double* %add.ptr41, double** %_M_finish.i, align 8, !tbaa !49
  %add.ptr44 = getelementptr inbounds double, double* %cond.i, i64 %cond.i35
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit, %_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit33
  %_M_finish.i.sink = phi double** [ %_M_finish.i, %_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit33 ], [ %_M_end_of_storage, %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit ]
  %scevgep.i.i.i30.sink = phi double* [ %scevgep.i.i.i30, %_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E.exit33 ], [ %add.ptr44, %_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm.exit ]
  store double* %scevgep.i.i.i30.sink, double** %_M_finish.i.sink, align 8, !tbaa !61
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare dso_local i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i8*) local_unnamed_addr #7

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull dereferenceable(8)) unnamed_addr #7

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull dereferenceable(216)) unnamed_addr #7

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) local_unnamed_addr #3

declare dso_local void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* nonnull dereferenceable(264), i32) local_unnamed_addr #3

; Function Attrs: uwtable
declare dso_local void @_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8, %"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104)) local_unnamed_addr #0 align 2

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i64, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16)) local_unnamed_addr #7

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8), double) local_unnamed_addr #3

; Function Attrs: nounwind
declare dso_local void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16), %"struct.std::__detail::_List_node_base"*) local_unnamed_addr #7

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIPKvEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8), i8*) local_unnamed_addr #3

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8), i64) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare dso_local i32 @posix_memalign(i8**, i64, i64) local_unnamed_addr #2

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept5ArrayILi1EdLb0EE6resizeEPKib(%"class.adept::Array.38"* nonnull dereferenceable(24) %this, i32* %dim, i1 zeroext %force_contiguous) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.i.i = alloca double*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp6 = alloca %"class.std::__cxx11::basic_string", align 8
  %storage_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 1
  %0 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %storage_, align 8, !tbaa !462
  %tobool.not = icmp eq %"class.adept::Storage.24"* %0, null
  br i1 %tobool.not, label %for.body.critedge, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN5adept7StorageIdE11remove_linkEv(%"class.adept::Storage.24"* nonnull dereferenceable(20) %0)
  store %"class.adept::Storage.24"* null, %"class.adept::Storage.24"** %storage_, align 8, !tbaa !462
  br label %for.body.critedge

for.body.critedge:                                ; preds = %entry, %if.then
  %1 = load i32, i32* %dim, align 4, !tbaa !47
  %cmp4 = icmp slt i32 %1, 0
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %for.body.critedge
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %2 = bitcast i8* %exception to %"class.adept::invalid_dimension"*
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #38
  %4 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #38
  invoke void @_ZN5adept8internal18exception_locationB5cxx11EPKci(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp6, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.126, i64 0, i64 0), i32 1969)
          to label %invoke.cont unwind label %ehcleanup11.thread

invoke.cont:                                      ; preds = %if.then5
  %call3.i.i.i15 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp6, i64 0, i64 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.125, i64 0, i64 0), i64 34)
          to label %call3.i.i.i.noexc unwind label %lpad7

call3.i.i.i.noexc:                                ; preds = %invoke.cont
  %5 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %6 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %5, %union.anon** %6, align 8, !tbaa !14, !alias.scope !499
  %_M_p.i.i13.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i15, i64 0, i32 0, i32 0
  %7 = load i8*, i8** %_M_p.i.i13.i.i, align 8, !tbaa !17
  %8 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i15, i64 0, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %8 to i8*
  %cmp.i.i.i = icmp eq i8* %7, %arraydecay.i.i.i.i
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %call3.i.i.i.noexc
  %arraydecay.i.i.i = bitcast %union.anon* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %arraydecay.i.i.i, i8* nonnull align 8 dereferenceable(16) %7, i64 16, i1 false) #38
  br label %invoke.cont8

if.else.i.i:                                      ; preds = %call3.i.i.i.noexc
  %_M_p.i11.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %7, i8** %_M_p.i11.i.i, align 8, !tbaa !17, !alias.scope !499
  %_M_allocated_capacity.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i15, i64 0, i32 2, i32 0
  %9 = load i64, i64* %_M_allocated_capacity.i.i, align 8, !tbaa !21
  %_M_allocated_capacity.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %9, i64* %_M_allocated_capacity.i.i.i, align 8, !tbaa !21, !alias.scope !499
  br label %invoke.cont8

invoke.cont8:                                     ; preds = %if.else.i.i, %if.then.i.i
  %_M_string_length.i10.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i15, i64 0, i32 1
  %10 = load i64, i64* %_M_string_length.i10.i.i, align 8, !tbaa !19
  %_M_string_length.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %10, i64* %_M_string_length.i.i.i, align 8, !tbaa !19, !alias.scope !499
  %11 = bitcast %"class.std::__cxx11::basic_string"* %call3.i.i.i15 to %union.anon**
  store %union.anon* %8, %union.anon** %11, align 8, !tbaa !17
  store i64 0, i64* %_M_string_length.i10.i.i, align 8, !tbaa !19
  store i8 0, i8* %arraydecay.i.i.i.i, align 8, !tbaa !21
  invoke void @_ZN5adept17invalid_dimensionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_dimension"* nonnull dereferenceable(40) %2, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont10 unwind label %lpad9

invoke.cont10:                                    ; preds = %invoke.cont8
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_dimensionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad9

ehcleanup11.thread:                               ; preds = %if.then5
  %12 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #38
  br label %cleanup.action

lpad7:                                            ; preds = %invoke.cont
  %13 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad9:                                            ; preds = %invoke.cont10, %invoke.cont8
  %cleanup.isactive.0 = phi i1 [ false, %invoke.cont10 ], [ true, %invoke.cont8 ]
  %14 = landingpad { i8*, i32 }
          cleanup
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !17
  %arraydecay.i.i.i.i16 = bitcast %union.anon* %5 to i8*
  %cmp.i.i.i17 = icmp eq i8* %15, %arraydecay.i.i.i.i16
  br i1 %cmp.i.i.i17, label %ehcleanup, label %if.then.i.i18

if.then.i.i18:                                    ; preds = %lpad9
  call void @_ZdlPv(i8* %15) #38
  br label %ehcleanup

ehcleanup:                                        ; preds = %if.then.i.i18, %lpad9, %lpad7
  %.pn = phi { i8*, i32 } [ %13, %lpad7 ], [ %14, %lpad9 ], [ %14, %if.then.i.i18 ]
  %cleanup.isactive.1 = phi i1 [ true, %lpad7 ], [ %cleanup.isactive.0, %lpad9 ], [ %cleanup.isactive.0, %if.then.i.i18 ]
  %_M_p.i.i.i.i19 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp6, i64 0, i32 0, i32 0
  %16 = load i8*, i8** %_M_p.i.i.i.i19, align 8, !tbaa !17
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp6, i64 0, i32 2
  %arraydecay.i.i.i.i20 = bitcast %union.anon* %17 to i8*
  %cmp.i.i.i21 = icmp eq i8* %16, %arraydecay.i.i.i.i20
  br i1 %cmp.i.i.i21, label %ehcleanup11, label %if.then.i.i22

if.then.i.i22:                                    ; preds = %ehcleanup
  call void @_ZdlPv(i8* %16) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #38
  br i1 %cleanup.isactive.1, label %cleanup.action, label %eh.resume

ehcleanup11:                                      ; preds = %ehcleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #38
  br i1 %cleanup.isactive.1, label %cleanup.action, label %eh.resume

cleanup.action:                                   ; preds = %if.then.i.i22, %ehcleanup11.thread, %ehcleanup11
  %.pn.pn31 = phi { i8*, i32 } [ %12, %ehcleanup11.thread ], [ %.pn, %ehcleanup11 ], [ %.pn, %if.then.i.i22 ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

if.else:                                          ; preds = %for.body.critedge
  %cmp16 = icmp eq i32 %1, 0
  br i1 %cmp16, label %_ZN5adept5ArrayILi1EdLb0EE5clearEv.exit, label %for.end, !llvm.loop !502

_ZN5adept5ArrayILi1EdLb0EE5clearEv.exit:          ; preds = %if.else
  %data_.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 0
  store double* null, double** %data_.i, align 8, !tbaa !465
  %arrayidx.i.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 2, i32 0, i64 0
  store i32 0, i32* %arrayidx.i.i, align 4, !tbaa !47
  %arrayidx.i1.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 3, i32 0, i64 0
  store i32 0, i32* %arrayidx.i1.i, align 4, !tbaa !47
  br label %return

for.end:                                          ; preds = %if.else
  %arrayidx3.i = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 2, i32 0, i64 0
  store i32 %1, i32* %arrayidx3.i, align 4, !tbaa !47
  %18 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 3, i32 0, i64 0
  store i32 1, i32* %18, align 4
  %call32 = tail call noalias nonnull dereferenceable(24) i8* @_Znwm(i64 24) #44
  %n_.i = getelementptr inbounds i8, i8* %call32, i64 8
  %19 = bitcast i8* %n_.i to i32*
  store i32 %1, i32* %19, align 8, !tbaa !503
  %n_links_.i = getelementptr inbounds i8, i8* %call32, i64 12
  %20 = bitcast i8* %n_links_.i to i32*
  store i32 1, i32* %20, align 4, !tbaa !505
  %gradient_index_.i = getelementptr inbounds i8, i8* %call32, i64 16
  %21 = bitcast i8* %gradient_index_.i to i32*
  store i32 -1, i32* %21, align 8, !tbaa !506
  %22 = bitcast double** %result.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #38
  %23 = bitcast double** %result.i.i to i8**
  %conv1.i.i32 = zext i32 %1 to i64
  %mul.i.i = shl nuw nsw i64 %conv1.i.i32, 3
  %call2.i.i = call i32 @posix_memalign(i8** nonnull %23, i64 16, i64 %mul.i.i) #38
  %cmp3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %cmp3.not.i.i, label %invoke.cont34, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %for.end
  %exception.i.i = call i8* @__cxa_allocate_exception(i64 8) #38
  %24 = bitcast i8* %exception.i.i to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8, !tbaa !74
  invoke void @__cxa_throw(i8* nonnull %exception.i.i, i8* bitcast (i8** @_ZTISt9bad_alloc to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD1Ev to i8*)) #40
          to label %.noexc unwind label %lpad33

.noexc:                                           ; preds = %if.then4.i.i
  unreachable

invoke.cont34:                                    ; preds = %for.end
  %25 = load double*, double** %result.i.i, align 8, !tbaa !61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #38
  %data_.i25 = bitcast i8* %call32 to double**
  store double* %25, double** %data_.i25, align 8, !tbaa !507
  %26 = load i32, i32* @_ZN5adept8internal26n_storage_objects_created_E, align 4, !tbaa !47
  %inc.i = add nsw i32 %26, 1
  store i32 %inc.i, i32* @_ZN5adept8internal26n_storage_objects_created_E, align 4, !tbaa !47
  %27 = bitcast %"class.adept::Storage.24"** %storage_ to i8**
  store i8* %call32, i8** %27, align 8, !tbaa !462
  %data_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this, i64 0, i32 0
  store double* %25, double** %data_, align 8, !tbaa !465
  br label %return

return:                                           ; preds = %_ZN5adept5ArrayILi1EdLb0EE5clearEv.exit, %invoke.cont34
  ret void

lpad33:                                           ; preds = %if.then4.i.i
  %28 = landingpad { i8*, i32 }
          cleanup
  call void @_ZdlPv(i8* nonnull %call32) #43
  br label %eh.resume

eh.resume:                                        ; preds = %if.then.i.i22, %ehcleanup11, %cleanup.action, %lpad33
  %.pn.pn.pn = phi { i8*, i32 } [ %28, %lpad33 ], [ %.pn.pn31, %cleanup.action ], [ %.pn, %ehcleanup11 ], [ %.pn, %if.then.i.i22 ]
  resume { i8*, i32 } %.pn.pn.pn

unreachable:                                      ; preds = %invoke.cont10
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept7StorageIdE11remove_linkEv(%"class.adept::Storage.24"* nonnull dereferenceable(20) %this) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp2 = alloca %"class.std::__cxx11::basic_string", align 8
  %n_links_ = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this, i64 0, i32 2
  %0 = load i32, i32* %n_links_, align 4, !tbaa !505
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %1 = bitcast i8* %exception to %"class.adept::invalid_operation"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #38
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #38
  invoke void @_ZN5adept8internal18exception_locationB5cxx11EPKci(%"class.std::__cxx11::basic_string"* nonnull sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp2, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.128, i64 0, i64 0), i32 112)
          to label %invoke.cont unwind label %ehcleanup7.thread

invoke.cont:                                      ; preds = %if.then
  %call3.i.i.i3 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp2, i64 0, i64 0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i64 0, i64 0), i64 57)
          to label %call3.i.i.i.noexc unwind label %lpad3

call3.i.i.i.noexc:                                ; preds = %invoke.cont
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %5 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %4, %union.anon** %5, align 8, !tbaa !14, !alias.scope !508
  %_M_p.i.i13.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i3, i64 0, i32 0, i32 0
  %6 = load i8*, i8** %_M_p.i.i13.i.i, align 8, !tbaa !17
  %7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i3, i64 0, i32 2
  %arraydecay.i.i.i.i = bitcast %union.anon* %7 to i8*
  %cmp.i.i.i = icmp eq i8* %6, %arraydecay.i.i.i.i
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %call3.i.i.i.noexc
  %arraydecay.i.i.i = bitcast %union.anon* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(16) %arraydecay.i.i.i, i8* nonnull align 8 dereferenceable(16) %6, i64 16, i1 false) #38
  br label %invoke.cont4

if.else.i.i:                                      ; preds = %call3.i.i.i.noexc
  %_M_p.i11.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %6, i8** %_M_p.i11.i.i, align 8, !tbaa !17, !alias.scope !508
  %_M_allocated_capacity.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i3, i64 0, i32 2, i32 0
  %8 = load i64, i64* %_M_allocated_capacity.i.i, align 8, !tbaa !21
  %_M_allocated_capacity.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %8, i64* %_M_allocated_capacity.i.i.i, align 8, !tbaa !21, !alias.scope !508
  br label %invoke.cont4

invoke.cont4:                                     ; preds = %if.else.i.i, %if.then.i.i
  %_M_string_length.i10.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %call3.i.i.i3, i64 0, i32 1
  %9 = load i64, i64* %_M_string_length.i10.i.i, align 8, !tbaa !19
  %_M_string_length.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %9, i64* %_M_string_length.i.i.i, align 8, !tbaa !19, !alias.scope !508
  %10 = bitcast %"class.std::__cxx11::basic_string"* %call3.i.i.i3 to %union.anon**
  store %union.anon* %7, %union.anon** %10, align 8, !tbaa !17
  store i64 0, i64* %_M_string_length.i10.i.i, align 8, !tbaa !19
  store i8 0, i8* %arraydecay.i.i.i.i, align 8, !tbaa !21
  invoke void @_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %invoke.cont4
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_operationE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad5

ehcleanup7.thread:                                ; preds = %if.then
  %11 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #38
  br label %cleanup.action

lpad3:                                            ; preds = %invoke.cont
  %12 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad5:                                            ; preds = %invoke.cont6, %invoke.cont4
  %cleanup.isactive.0 = phi i1 [ false, %invoke.cont6 ], [ true, %invoke.cont4 ]
  %13 = landingpad { i8*, i32 }
          cleanup
  %_M_p.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %_M_p.i.i.i.i, align 8, !tbaa !17
  %arraydecay.i.i.i.i4 = bitcast %union.anon* %4 to i8*
  %cmp.i.i.i5 = icmp eq i8* %14, %arraydecay.i.i.i.i4
  br i1 %cmp.i.i.i5, label %ehcleanup, label %if.then.i.i6

if.then.i.i6:                                     ; preds = %lpad5
  call void @_ZdlPv(i8* %14) #38
  br label %ehcleanup

ehcleanup:                                        ; preds = %if.then.i.i6, %lpad5, %lpad3
  %.pn = phi { i8*, i32 } [ %12, %lpad3 ], [ %13, %lpad5 ], [ %13, %if.then.i.i6 ]
  %cleanup.isactive.1 = phi i1 [ true, %lpad3 ], [ %cleanup.isactive.0, %lpad5 ], [ %cleanup.isactive.0, %if.then.i.i6 ]
  %_M_p.i.i.i.i7 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp2, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %_M_p.i.i.i.i7, align 8, !tbaa !17
  %16 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp2, i64 0, i32 2
  %arraydecay.i.i.i.i8 = bitcast %union.anon* %16 to i8*
  %cmp.i.i.i9 = icmp eq i8* %15, %arraydecay.i.i.i.i8
  br i1 %cmp.i.i.i9, label %ehcleanup7, label %if.then.i.i10

if.then.i.i10:                                    ; preds = %ehcleanup
  call void @_ZdlPv(i8* %15) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #38
  br i1 %cleanup.isactive.1, label %cleanup.action, label %eh.resume

ehcleanup7:                                       ; preds = %ehcleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #38
  br i1 %cleanup.isactive.1, label %cleanup.action, label %eh.resume

cleanup.action:                                   ; preds = %if.then.i.i10, %ehcleanup7.thread, %ehcleanup7
  %.pn.pn15 = phi { i8*, i32 } [ %11, %ehcleanup7.thread ], [ %.pn, %ehcleanup7 ], [ %.pn, %if.then.i.i10 ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

if.else:                                          ; preds = %entry
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* %n_links_, align 4, !tbaa !505
  %cmp11.not = icmp eq i32 %dec, 0
  br i1 %cmp11.not, label %delete.notnull, label %if.end13

delete.notnull:                                   ; preds = %if.else
  %17 = bitcast %"class.adept::Storage.24"* %this to i8**
  %18 = load i8*, i8** %17, align 8, !tbaa !507
  tail call void @free(i8* %18) #38
  %gradient_index_.i = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this, i64 0, i32 3
  %19 = load i32, i32* %gradient_index_.i, align 8, !tbaa !506
  %cmp.i = icmp sgt i32 %19, -1
  br i1 %cmp.i, label %if.then.i, label %_ZN5adept7StorageIdED2Ev.exit

if.then.i:                                        ; preds = %delete.notnull
  %20 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_.i = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this, i64 0, i32 1
  invoke void @_ZN5adept5Stack20unregister_gradientsERKiS2_(%"class.adept::Stack"* nonnull dereferenceable(149) %20, i32* nonnull align 4 dereferenceable(4) %gradient_index_.i, i32* nonnull align 4 dereferenceable(4) %n_.i)
          to label %_ZN5adept7StorageIdED2Ev.exit unwind label %terminate.lpad.i

terminate.lpad.i:                                 ; preds = %if.then.i
  %21 = landingpad { i8*, i32 }
          catch i8* null
  %22 = extractvalue { i8*, i32 } %21, 0
  tail call void @__clang_call_terminate(i8* %22) #41
  unreachable

_ZN5adept7StorageIdED2Ev.exit:                    ; preds = %delete.notnull, %if.then.i
  %23 = load i32, i32* @_ZN5adept8internal26n_storage_objects_deleted_E, align 4, !tbaa !47
  %inc.i = add nsw i32 %23, 1
  store i32 %inc.i, i32* @_ZN5adept8internal26n_storage_objects_deleted_E, align 4, !tbaa !47
  %24 = bitcast %"class.adept::Storage.24"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %24) #43
  br label %if.end13

if.end13:                                         ; preds = %if.else, %_ZN5adept7StorageIdED2Ev.exit
  ret void

eh.resume:                                        ; preds = %if.then.i.i10, %ehcleanup7, %cleanup.action
  %.pn.pn14 = phi { i8*, i32 } [ %.pn, %ehcleanup7 ], [ %.pn.pn15, %cleanup.action ], [ %.pn, %if.then.i.i10 ]
  resume { i8*, i32 } %.pn.pn14

unreachable:                                      ; preds = %invoke.cont6
  unreachable
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN5adept8internal18exception_locationB5cxx11EPKci(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, i8* %file, i32 %line) local_unnamed_addr #32 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %s = alloca %"class.std::__cxx11::basic_stringstream", align 8
  %0 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 392, i8* nonnull %0) #38
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %s)
  %add.ptr = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 1
  %1 = bitcast %"class.std::basic_ostream.base"* %add.ptr to %"class.std::basic_ostream"*
  %call1.i1 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i64 0, i64 0), i64 5)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %tobool.not.i = icmp eq i8* %file, null
  br i1 %tobool.not.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %invoke.cont
  %2 = bitcast %"class.std::basic_ostream.base"* %add.ptr to i8**
  %vtable.i = load i8*, i8** %2, align 8, !tbaa !74
  %vbase.offset.ptr.i = getelementptr i8, i8* %vtable.i, i64 -24
  %3 = bitcast i8* %vbase.offset.ptr.i to i64*
  %vbase.offset.i = load i64, i64* %3, align 8
  %4 = bitcast %"class.std::basic_ostream.base"* %add.ptr to i8*
  %add.ptr.i = getelementptr inbounds i8, i8* %4, i64 %vbase.offset.i
  %5 = bitcast i8* %add.ptr.i to %"class.std::basic_ios"*
  %_M_streambuf_state.i.i.i = getelementptr inbounds i8, i8* %add.ptr.i, i64 32
  %6 = bitcast i8* %_M_streambuf_state.i.i.i to i32*
  %7 = load i32, i32* %6, align 8, !tbaa !511
  %or.i.i.i = or i32 %7, 1
  invoke void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* nonnull dereferenceable(264) %5, i32 %or.i.i.i)
          to label %invoke.cont1 unwind label %lpad

if.else.i:                                        ; preds = %invoke.cont
  %call.i.i2 = call i64 @strlen(i8* nonnull dereferenceable(1) %file) #38
  %call1.i3 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull %file, i64 %call.i.i2)
          to label %invoke.cont1 unwind label %lpad

invoke.cont1:                                     ; preds = %if.then.i, %if.else.i
  %call1.i8 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %1, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i64 0, i64 0), i64 1)
          to label %invoke.cont3 unwind label %lpad

invoke.cont3:                                     ; preds = %invoke.cont1
  %call6 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %1, i32 %line)
          to label %invoke.cont5 unwind label %lpad

invoke.cont5:                                     ; preds = %invoke.cont3
  %call1.i13 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call6, i8* nonnull getelementptr inbounds ([2 x i8], [2 x i8]* @.str.130, i64 0, i64 0), i64 1)
          to label %invoke.cont7 unwind label %lpad

invoke.cont7:                                     ; preds = %invoke.cont5
  %_M_stringbuf.i = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1
  invoke void @_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104) %_M_stringbuf.i)
          to label %invoke.cont9 unwind label %lpad

invoke.cont9:                                     ; preds = %invoke.cont7
  %8 = load i32 (...)**, i32 (...)*** bitcast ([10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE to i32 (...)***), align 8
  %9 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** %8, i32 (...)*** %9, align 8, !tbaa !74
  %10 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 8) to i32 (...)***), align 8
  %vbase.offset.ptr1.i.i = getelementptr i32 (...)*, i32 (...)** %8, i64 -3
  %11 = bitcast i32 (...)** %vbase.offset.ptr1.i.i to i64*
  %vbase.offset.i.i = load i64, i64* %11, align 8
  %add.ptr.i.i = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i
  %12 = bitcast i8* %add.ptr.i.i to i32 (...)***
  store i32 (...)** %10, i32 (...)*** %12, align 8, !tbaa !74
  %13 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 9) to i32 (...)***), align 8
  %14 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** %13, i32 (...)*** %14, align 8, !tbaa !74
  %15 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8, !tbaa !74
  %_M_p.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 0, i32 0
  %16 = load i8*, i8** %_M_p.i.i.i.i.i.i.i, align 8, !tbaa !17
  %17 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 2
  %arraydecay.i.i.i.i.i.i.i = bitcast %union.anon* %17 to i8*
  %cmp.i.i.i.i.i.i = icmp eq i8* %16, %arraydecay.i.i.i.i.i.i.i
  br i1 %cmp.i.i.i.i.i.i, label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %invoke.cont9
  call void @_ZdlPv(i8* %16) #38
  br label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit

_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit: ; preds = %invoke.cont9, %if.then.i.i.i.i.i
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8, !tbaa !74
  %_M_buf_locale.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull dereferenceable(8) %_M_buf_locale.i.i.i.i) #38
  %18 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 2) to i32 (...)***), align 8
  store i32 (...)** %18, i32 (...)*** %9, align 8, !tbaa !74
  %19 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 3) to i32 (...)***), align 8
  %vbase.offset.ptr1.i.i.i.i = getelementptr i32 (...)*, i32 (...)** %18, i64 -3
  %20 = bitcast i32 (...)** %vbase.offset.ptr1.i.i.i.i to i64*
  %vbase.offset.i.i.i.i = load i64, i64* %20, align 8
  %add.ptr.i.i.i.i = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i.i.i
  %21 = bitcast i8* %add.ptr.i.i.i.i to i32 (...)***
  store i32 (...)** %19, i32 (...)*** %21, align 8, !tbaa !74
  %22 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %22, align 8, !tbaa !460
  %23 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull dereferenceable(216) %23) #38
  call void @llvm.lifetime.end.p0i8(i64 392, i8* nonnull %0) #38
  ret void

lpad:                                             ; preds = %invoke.cont7, %invoke.cont5, %invoke.cont1, %if.else.i, %if.then.i, %entry, %invoke.cont3
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = load i32 (...)**, i32 (...)*** bitcast ([10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE to i32 (...)***), align 8
  %26 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** %25, i32 (...)*** %26, align 8, !tbaa !74
  %27 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 8) to i32 (...)***), align 8
  %vbase.offset.ptr1.i.i16 = getelementptr i32 (...)*, i32 (...)** %25, i64 -3
  %28 = bitcast i32 (...)** %vbase.offset.ptr1.i.i16 to i64*
  %vbase.offset.i.i17 = load i64, i64* %28, align 8
  %add.ptr.i.i18 = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i17
  %29 = bitcast i8* %add.ptr.i.i18 to i32 (...)***
  store i32 (...)** %27, i32 (...)*** %29, align 8, !tbaa !74
  %30 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 9) to i32 (...)***), align 8
  %31 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** %30, i32 (...)*** %31, align 8, !tbaa !74
  %32 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !tbaa !74
  %_M_p.i.i.i.i.i.i.i19 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 0, i32 0
  %33 = load i8*, i8** %_M_p.i.i.i.i.i.i.i19, align 8, !tbaa !17
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 2, i32 2
  %arraydecay.i.i.i.i.i.i.i20 = bitcast %union.anon* %34 to i8*
  %cmp.i.i.i.i.i.i21 = icmp eq i8* %33, %arraydecay.i.i.i.i.i.i.i20
  br i1 %cmp.i.i.i.i.i.i21, label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit27, label %if.then.i.i.i.i.i22

if.then.i.i.i.i.i22:                              ; preds = %lpad
  call void @_ZdlPv(i8* %33) #38
  br label %_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit27

_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev.exit27: ; preds = %lpad, %if.then.i.i.i.i.i22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8, !tbaa !74
  %_M_buf_locale.i.i.i.i23 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull dereferenceable(8) %_M_buf_locale.i.i.i.i23) #38
  %35 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 2) to i32 (...)***), align 8
  store i32 (...)** %35, i32 (...)*** %26, align 8, !tbaa !74
  %36 = load i32 (...)**, i32 (...)*** bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 3) to i32 (...)***), align 8
  %vbase.offset.ptr1.i.i.i.i24 = getelementptr i32 (...)*, i32 (...)** %35, i64 -3
  %37 = bitcast i32 (...)** %vbase.offset.ptr1.i.i.i.i24 to i64*
  %vbase.offset.i.i.i.i25 = load i64, i64* %37, align 8
  %add.ptr.i.i.i.i26 = getelementptr inbounds i8, i8* %0, i64 %vbase.offset.i.i.i.i25
  %38 = bitcast i8* %add.ptr.i.i.i.i26 to i32 (...)***
  store i32 (...)** %36, i32 (...)*** %38, align 8, !tbaa !74
  %39 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 0, i32 0, i32 1
  store i64 0, i64* %39, align 8, !tbaa !460
  %40 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %s, i64 0, i32 2, i32 0
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull dereferenceable(216) %40) #38
  call void @llvm.lifetime.end.p0i8(i64 392, i8* nonnull %0) #38
  resume { i8*, i32 } %24
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept17invalid_dimensionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_dimension"* nonnull dereferenceable(40) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #38
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %1, %union.anon** %2, align 8, !tbaa !14
  %3 = bitcast %union.anon* %1 to i8*
  %4 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #38
  store i64 27, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i5 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %lpad

call5.i.i.i5.i.noexc:                             ; preds = %entry
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i5, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %5 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %5, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(27) %call5.i.i.i5.i5, i8* nonnull align 1 dereferenceable(27) getelementptr inbounds ([28 x i8], [28 x i8]* @.str.115, i64 0, i64 0), i64 27, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %5, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %6 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %6, i64 %5
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #38
  %7 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  %message_.i.i = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %9 = bitcast %"class.std::__cxx11::basic_string"* %message_.i.i to %union.anon**
  store %union.anon* %8, %union.anon** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1, i32 1
  store i64 0, i64* %_M_string_length.i.i.i.i.i, align 8, !tbaa !19
  %.cast.i.i.i = bitcast %union.anon* %8 to i8*
  store i8 0, i8* %.cast.i.i.i, align 1, !tbaa !21
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept15array_exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_.i.i, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont4 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %10 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !74
  %_M_p.i.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = load i8*, i8** %_M_p.i.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %11, %.cast.i.i.i
  br i1 %cmp.i.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %11) #38
  br label %_ZN5adept9exceptionD2Ev.exit.i

_ZN5adept9exceptionD2Ev.exit.i:                   ; preds = %if.then.i.i.i.i, %lpad.i
  %12 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %12) #38
  %13 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i8 = icmp eq i8* %13, %3
  br i1 %cmp.i.i.i8, label %ehcleanup, label %if.then.i.i9

invoke.cont4:                                     ; preds = %call5.i.i.i5.i.noexc
  %14 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %14, %3
  br i1 %cmp.i.i.i, label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %invoke.cont4
  call void @_ZdlPv(i8* %14) #38
  br label %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit

_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit: ; preds = %invoke.cont4, %if.then.i.i
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept17invalid_dimensionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_.i.i, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  ret void

lpad:                                             ; preds = %entry
  %15 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

if.then.i.i9:                                     ; preds = %_ZN5adept9exceptionD2Ev.exit.i
  call void @_ZdlPv(i8* %13) #38
  br label %ehcleanup

ehcleanup:                                        ; preds = %if.then.i.i9, %_ZN5adept9exceptionD2Ev.exit.i, %lpad
  %.pn = phi { i8*, i32 } [ %15, %lpad ], [ %10, %_ZN5adept9exceptionD2Ev.exit.i ], [ %10, %if.then.i.i9 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #38
  br label %eh.resume

lpad7:                                            ; preds = %_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev.exit
  %16 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !tbaa !74
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %17 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i.i = icmp eq i8* %17, %.cast.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %lpad7
  call void @_ZdlPv(i8* %17) #38
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %lpad7, %if.then.i.i.i
  %18 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 0
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %18) #38
  br label %eh.resume

eh.resume:                                        ; preds = %_ZN5adept9exceptionD2Ev.exit, %ehcleanup
  %.pn2 = phi { i8*, i32 } [ %16, %_ZN5adept9exceptionD2Ev.exit ], [ %.pn, %ehcleanup ]
  resume { i8*, i32 } %.pn2
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept17invalid_dimensionD0Ev(%"class.adept::invalid_dimension"* nonnull dereferenceable(40) %this) unnamed_addr #29 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !74
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #38
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %entry, %if.then.i.i.i
  %3 = getelementptr inbounds %"class.adept::invalid_dimension", %"class.adept::invalid_dimension"* %this, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #38
  %4 = bitcast %"class.adept::invalid_dimension"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"class.std::vector.45"* nonnull dereferenceable(24) %this, i64 %__n, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %cmp.i = icmp ugt i64 %__n, 576460752303423487
  br i1 %cmp.i, label %if.then.i, label %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit

if.then.i:                                        ; preds = %entry
  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.123, i64 0, i64 0)) #40
  unreachable

_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit: ; preds = %entry
  %0 = bitcast %"class.std::vector.45"* %this to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(24) %0, i8 0, i64 24, i1 false) #38
  %cmp.not.i.i.i = icmp eq i64 %__n, 0
  br i1 %cmp.not.i.i.i, label %_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_.exit, label %_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE8allocateERS3_m.exit.i.i.i

_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE8allocateERS3_m.exit.i.i.i: ; preds = %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit
  %mul.i.i.i.i.i = shl nuw nsw i64 %__n, 4
  %call2.i.i.i.i1.i = tail call noalias nonnull i8* @_Znwm(i64 %mul.i.i.i.i.i) #42
  %1 = bitcast i8* %call2.i.i.i.i1.i to %"class.adept::Active"*
  br label %_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_.exit

_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_.exit: ; preds = %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit, %_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE8allocateERS3_m.exit.i.i.i
  %cond.i.i.i = phi %"class.adept::Active"* [ %1, %_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE8allocateERS3_m.exit.i.i.i ], [ null, %_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE17_S_check_init_lenEmRKS3_.exit ]
  %_M_start.i.i = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.adept::Active"* %cond.i.i.i, %"class.adept::Active"** %_M_start.i.i, align 8, !tbaa !475
  %_M_finish.i.i = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %this, i64 0, i32 0, i32 0, i32 0, i32 1
  store %"class.adept::Active"* %cond.i.i.i, %"class.adept::Active"** %_M_finish.i.i, align 8, !tbaa !495
  %add.ptr.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %cond.i.i.i, i64 %__n
  %_M_end_of_storage.i.i = getelementptr inbounds %"class.std::vector.45", %"class.std::vector.45"* %this, i64 0, i32 0, i32 0, i32 0, i32 2
  store %"class.adept::Active"* %add.ptr.i.i, %"class.adept::Active"** %_M_end_of_storage.i.i, align 8, !tbaa !517
  br i1 %cmp.not.i.i.i, label %invoke.cont, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_.exit, %for.inc.i.i.i.i
  %__cur.010.i.i.i.i = phi %"class.adept::Active"* [ %incdec.ptr.i.i.i.i, %for.inc.i.i.i.i ], [ %cond.i.i.i, %_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_.exit ]
  %__n.addr.09.i.i.i.i = phi i64 [ %dec.i.i.i.i, %for.inc.i.i.i.i ], [ %__n, %_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_.exit ]
  %val_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__cur.010.i.i.i.i, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i.i.i.i.i.i, align 8, !tbaa !467
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %2, i64 0, i32 9
  %3 = load i32, i32* %n_gradients_registered_.i.i.i.i.i.i.i, align 4, !tbaa !376
  %inc.i.i.i.i.i.i.i = add nsw i32 %3, 1
  store i32 %inc.i.i.i.i.i.i.i, i32* %n_gradients_registered_.i.i.i.i.i.i.i, align 4, !tbaa !376
  %gap_list_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %2, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i.i.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i.i.i.i.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i.i.i.i.i.i, align 8, !tbaa !358
  %cmp.i.i.i.i.i.i.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %5, %4
  br i1 %cmp.i.i.i.i.i.i.i.i, label %if.then.i.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i.i

if.then.i.i.i.i.i.i.i:                            ; preds = %for.body.i.i.i.i
  %i_gradient_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %2, i64 0, i32 6
  %6 = load i32, i32* %i_gradient_.i.i.i.i.i.i.i, align 8, !tbaa !387
  %inc2.i.i.i.i.i.i.i = add nsw i32 %6, 1
  store i32 %inc2.i.i.i.i.i.i.i, i32* %i_gradient_.i.i.i.i.i.i.i, align 8, !tbaa !387
  %max_gradient_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %2, i64 0, i32 8
  %7 = load i32, i32* %max_gradient_.i.i.i.i.i.i.i, align 8, !tbaa !388
  %cmp.not.i.i.i.i.i.i.i = icmp slt i32 %6, %7
  br i1 %cmp.not.i.i.i.i.i.i.i, label %for.inc.i.i.i.i, label %if.then4.i.i.i.i.i.i.i

if.then4.i.i.i.i.i.i.i:                           ; preds = %if.then.i.i.i.i.i.i.i
  store i32 %inc2.i.i.i.i.i.i.i, i32* %max_gradient_.i.i.i.i.i.i.i, align 8, !tbaa !388
  br label %for.inc.i.i.i.i

if.else.i.i.i.i.i.i.i:                            ; preds = %for.body.i.i.i.i
  %8 = bitcast %"struct.std::__detail::_List_node_base"* %5 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %5, i64 1
  %start.i.i.i.i.i.i.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i.i.i.i.i.i to i32*
  %9 = load i32, i32* %start.i.i.i.i.i.i.i, align 4, !tbaa !379
  %inc11.i.i.i.i.i.i.i = add nsw i32 %9, 1
  store i32 %inc11.i.i.i.i.i.i.i, i32* %start.i.i.i.i.i.i.i, align 4, !tbaa !379
  %end.i.i.i.i.i.i.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %8, i64 0, i32 1, i32 0, i64 4
  %10 = bitcast i8* %end.i.i.i.i.i.i.i to i32*
  %11 = load i32, i32* %10, align 4, !tbaa !377
  %cmp13.not.i.i.i.i.i.i.i = icmp slt i32 %9, %11
  br i1 %cmp13.not.i.i.i.i.i.i.i, label %for.inc.i.i.i.i, label %if.then14.i.i.i.i.i.i.i

if.then14.i.i.i.i.i.i.i:                          ; preds = %if.else.i.i.i.i.i.i.i
  %_M_node.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %2, i64 0, i32 5, i32 0
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i.i.i.i.i.i, align 8, !tbaa !380
  %cmp.i8.i.i.i.i.i.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %12, %5
  br i1 %cmp.i8.i.i.i.i.i.i.i, label %if.then18.i.i.i.i.i.i.i, label %if.end24.i.i.i.i.i.i.i

if.then18.i.i.i.i.i.i.i:                          ; preds = %if.then14.i.i.i.i.i.i.i
  store %"struct.std::__detail::_List_node_base"* %4, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i.i.i.i.i.i, align 8, !tbaa.struct !385
  br label %if.end24.i.i.i.i.i.i.i

if.end24.i.i.i.i.i.i.i:                           ; preds = %if.then18.i.i.i.i.i.i.i, %if.then14.i.i.i.i.i.i.i
  %_M_size.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %2, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %_M_size.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !381
  %sub.i.i.i.i.i.i.i.i.i.i = add i64 %13, -1
  store i64 %sub.i.i.i.i.i.i.i.i.i.i, i64* %_M_size.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %5) #38
  %14 = bitcast %"struct.std::__detail::_List_node_base"* %5 to i8*
  tail call void @_ZdlPv(i8* nonnull %14) #38
  br label %for.inc.i.i.i.i

for.inc.i.i.i.i:                                  ; preds = %if.end24.i.i.i.i.i.i.i, %if.else.i.i.i.i.i.i.i, %if.then4.i.i.i.i.i.i.i, %if.then.i.i.i.i.i.i.i
  %return_val.0.i.i.i.i.i.i.i = phi i32 [ %9, %if.end24.i.i.i.i.i.i.i ], [ %9, %if.else.i.i.i.i.i.i.i ], [ %6, %if.then4.i.i.i.i.i.i.i ], [ %6, %if.then.i.i.i.i.i.i.i ]
  %gradient_index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__cur.010.i.i.i.i, i64 0, i32 1
  store i32 %return_val.0.i.i.i.i.i.i.i, i32* %gradient_index_.i.i.i.i.i.i, align 8, !tbaa !469
  %dec.i.i.i.i = add i64 %__n.addr.09.i.i.i.i, -1
  %incdec.ptr.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %__cur.010.i.i.i.i, i64 1
  %cmp.not.i.i.i.i = icmp eq i64 %dec.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i, label %invoke.cont, label %for.body.i.i.i.i, !llvm.loop !518

invoke.cont:                                      ; preds = %for.inc.i.i.i.i, %_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_.exit
  %__cur.0.lcssa.i.i.i.i = phi %"class.adept::Active"* [ %cond.i.i.i, %_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_.exit ], [ %incdec.ptr.i.i.i.i, %for.inc.i.i.i.i ]
  store %"class.adept::Active"* %__cur.0.lcssa.i.i.i.i, %"class.adept::Active"** %_M_finish.i.i, align 8, !tbaa !495
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9adeptTest13preprocess_qsIN5adept6ActiveIdEEEEviiPKT_PS4_S7_(i32 %d, i32 %k, %"class.adept::Active"* %icf, %"class.adept::Active"* %sum_qs, %"class.adept::Active"* %Qdiags) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %q = alloca %"class.adept::Active", align 8
  %ref.tmp9 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %add = add nsw i32 %d, 1
  %mul = mul nsw i32 %add, %d
  %div = sdiv i32 %mul, 2
  %cmp40 = icmp sgt i32 %k, 0
  br i1 %cmp40, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %cmp238 = icmp sgt i32 %d, 0
  %0 = bitcast %"class.adept::Active"* %q to i8*
  %val_.i22 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %q, i64 0, i32 0
  %gradient_index_.i26 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %q, i64 0, i32 1
  %1 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9 to i8*
  %2 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9, i64 0, i32 0
  %3 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9, i64 0, i32 1
  %4 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9 to %"struct.adept::Expression.52"*
  %wide.trip.count47 = zext i32 %k to i64
  %wide.trip.count = zext i32 %d to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup3, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.cleanup3
  %indvars.iv45 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next46, %for.cond.cleanup3 ]
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %sum_qs, i64 %indvars.iv45
  %val_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i, align 8, !tbaa !467
  %5 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %n_statements_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %6 = load i32, i32* %n_statements_.i.i, align 8, !tbaa !368
  %n_allocated_statements_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %7 = load i32, i32* %n_allocated_statements_.i.i, align 4, !tbaa !398
  %cmp.not.i.i = icmp slt i32 %6, %7
  br i1 %cmp.not.i.i, label %entry.if.end_crit_edge.i.i, label %if.then.i.i

entry.if.end_crit_edge.i.i:                       ; preds = %for.body
  %statement_.phi.trans.insert.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i.i, align 8, !tbaa !363
  br label %_ZN5adept6ActiveIdEaSIdEENS_8internal9enable_ifIXsr17is_not_expressionIT_EE5valueERS1_E4typeERKS5_.exit

if.then.i.i:                                      ; preds = %for.body
  %mul.i.i.i = shl nsw i32 %7, 1
  %conv.i.i.i = sext i32 %mul.i.i.i to i64
  %8 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i.i, i64 8)
  %9 = extractvalue { i64, i1 } %8, 1
  %10 = extractvalue { i64, i1 } %8, 0
  %11 = select i1 %9, i64 -1, i64 %10
  %call.i.i.i = call noalias nonnull i8* @_Znam(i64 %11) #44
  %12 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %13 = load i8*, i8** %12, align 8, !tbaa !363
  %conv5.i.i.i = sext i32 %6 to i64
  %mul6.i.i.i = shl nsw i64 %conv5.i.i.i, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i.i, i8* align 4 %13, i64 %mul6.i.i.i, i1 false)
  %isnull.i.i.i = icmp eq i8* %13, null
  br i1 %isnull.i.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i, label %delete.notnull.i.i.i

delete.notnull.i.i.i:                             ; preds = %if.then.i.i
  call void @_ZdaPv(i8* nonnull %13) #43
  %.pre1.pre.i.i = load i32, i32* %n_statements_.i.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i: ; preds = %delete.notnull.i.i.i, %if.then.i.i
  %.pre1.i.i = phi i32 [ %6, %if.then.i.i ], [ %.pre1.pre.i.i, %delete.notnull.i.i.i ]
  store i8* %call.i.i.i, i8** %12, align 8, !tbaa !363
  store i32 %mul.i.i.i, i32* %n_allocated_statements_.i.i, align 4, !tbaa !398
  %14 = bitcast i8* %call.i.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept6ActiveIdEaSIdEENS_8internal9enable_ifIXsr17is_not_expressionIT_EE5valueERS1_E4typeERKS5_.exit

_ZN5adept6ActiveIdEaSIdEENS_8internal9enable_ifIXsr17is_not_expressionIT_EE5valueERS1_E4typeERKS5_.exit: ; preds = %entry.if.end_crit_edge.i.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i
  %15 = phi i32 [ %6, %entry.if.end_crit_edge.i.i ], [ %.pre1.i.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i ]
  %16 = phi %"struct.adept::internal::Statement"* [ %.pre.i.i, %entry.if.end_crit_edge.i.i ], [ %14, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i.i ]
  %gradient_index_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %sum_qs, i64 %indvars.iv45, i32 1
  %17 = load i32, i32* %gradient_index_.i, align 4, !tbaa !47
  %idxprom.i.i = sext i32 %15 to i64
  %index.i.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %16, i64 %idxprom.i.i, i32 0
  store i32 %17, i32* %index.i.i, align 4, !tbaa !369
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %18 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !399
  %inc.i.i = add nsw i32 %15, 1
  store i32 %inc.i.i, i32* %n_statements_.i.i, align 8, !tbaa !368
  %end_plus_one.i.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %16, i64 %idxprom.i.i, i32 1
  store i32 %18, i32* %end_plus_one.i.i, align 4, !tbaa !371
  br i1 %cmp238, label %for.body4.lr.ph, label %for.cond.cleanup3

for.body4.lr.ph:                                  ; preds = %_ZN5adept6ActiveIdEaSIdEENS_8internal9enable_ifIXsr17is_not_expressionIT_EE5valueERS1_E4typeERKS5_.exit
  %19 = trunc i64 %indvars.iv45 to i32
  %mul5 = mul nsw i32 %div, %19
  %mul21 = mul nsw i32 %19, %d
  %20 = sext i32 %mul5 to i64
  %21 = sext i32 %mul21 to i64
  br label %for.body4

for.cond.cleanup3:                                ; preds = %invoke.cont25, %_ZN5adept6ActiveIdEaSIdEENS_8internal9enable_ifIXsr17is_not_expressionIT_EE5valueERS1_E4typeERKS5_.exit
  %indvars.iv.next46 = add nuw nsw i64 %indvars.iv45, 1
  %exitcond48.not = icmp eq i64 %indvars.iv.next46, %wide.trip.count47
  br i1 %exitcond48.not, label %for.cond.cleanup, label %for.body, !llvm.loop !519

for.body4:                                        ; preds = %for.body4.lr.ph, %invoke.cont25
  %indvars.iv = phi i64 [ 0, %for.body4.lr.ph ], [ %indvars.iv.next, %invoke.cont25 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #38
  %22 = add nsw i64 %indvars.iv, %20
  %arrayidx8 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %icf, i64 %22
  store double 0.000000e+00, double* %val_.i22, align 8, !tbaa !467
  %23 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %23, i64 0, i32 9
  %24 = load i32, i32* %n_gradients_registered_.i.i, align 4, !tbaa !376
  %inc.i.i23 = add nsw i32 %24, 1
  store i32 %inc.i.i23, i32* %n_gradients_registered_.i.i, align 4, !tbaa !376
  %gap_list_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %23, i64 0, i32 4
  %25 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i, align 8, !tbaa !358
  %cmp.i.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %26, %25
  br i1 %cmp.i.i.i, label %if.then.i.i25, label %if.else.i.i

if.then.i.i25:                                    ; preds = %for.body4
  %i_gradient_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %23, i64 0, i32 6
  %27 = load i32, i32* %i_gradient_.i.i, align 8, !tbaa !387
  %inc2.i.i = add nsw i32 %27, 1
  store i32 %inc2.i.i, i32* %i_gradient_.i.i, align 8, !tbaa !387
  %max_gradient_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %23, i64 0, i32 8
  %28 = load i32, i32* %max_gradient_.i.i, align 8, !tbaa !388
  %cmp.not.i.i24 = icmp slt i32 %27, %28
  br i1 %cmp.not.i.i24, label %invoke.cont, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.then.i.i25
  store i32 %inc2.i.i, i32* %max_gradient_.i.i, align 8, !tbaa !388
  br label %invoke.cont

if.else.i.i:                                      ; preds = %for.body4
  %29 = bitcast %"struct.std::__detail::_List_node_base"* %26 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %26, i64 1
  %start.i.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i to i32*
  %30 = load i32, i32* %start.i.i, align 4, !tbaa !379
  %inc11.i.i = add nsw i32 %30, 1
  store i32 %inc11.i.i, i32* %start.i.i, align 4, !tbaa !379
  %end.i.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %29, i64 0, i32 1, i32 0, i64 4
  %31 = bitcast i8* %end.i.i to i32*
  %32 = load i32, i32* %31, align 4, !tbaa !377
  %cmp13.not.i.i = icmp slt i32 %30, %32
  br i1 %cmp13.not.i.i, label %invoke.cont, label %if.then14.i.i

if.then14.i.i:                                    ; preds = %if.else.i.i
  %_M_node.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %23, i64 0, i32 5, i32 0
  %33 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i, align 8, !tbaa !380
  %cmp.i8.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %33, %26
  br i1 %cmp.i8.i.i, label %if.then18.i.i, label %if.end24.i.i

if.then18.i.i:                                    ; preds = %if.then14.i.i
  store %"struct.std::__detail::_List_node_base"* %25, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i, align 8, !tbaa.struct !385
  br label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.then18.i.i, %if.then14.i.i
  %_M_size.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %23, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !381
  %sub.i.i.i.i.i = add i64 %34, -1
  store i64 %sub.i.i.i.i.i, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !381
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %26) #38
  %35 = bitcast %"struct.std::__detail::_List_node_base"* %26 to i8*
  call void @_ZdlPv(i8* nonnull %35) #38
  br label %invoke.cont

invoke.cont:                                      ; preds = %if.end24.i.i, %if.else.i.i, %if.then4.i.i, %if.then.i.i25
  %return_val.0.i.i = phi i32 [ %30, %if.end24.i.i ], [ %30, %if.else.i.i ], [ %27, %if.then4.i.i ], [ %27, %if.then.i.i25 ]
  store i32 %return_val.0.i.i, i32* %gradient_index_.i26, align 8, !tbaa !469
  %call2.i = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %q, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %arrayidx8)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #38
  store %"class.adept::Active"* %arrayidx, %"class.adept::Active"** %2, align 8
  store %"class.adept::Active"* %q, %"class.adept::Active"** %3, align 8
  %call16 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %4)
          to label %invoke.cont19 unwind label %lpad

invoke.cont19:                                    ; preds = %invoke.cont
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #38
  %36 = add nsw i64 %indvars.iv, %21
  %37 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %n_allocated_operations_.i.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %37, i64 0, i32 6
  %38 = load i32, i32* %n_allocated_operations_.i.i.i, align 4, !tbaa !400
  %n_operations_.i.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %37, i64 0, i32 5
  %39 = load i32, i32* %n_operations_.i.i.i, align 8, !tbaa !399
  %add.i.i.i = add nsw i32 %39, 1
  %cmp.not.i.i.i = icmp sgt i32 %38, %add.i.i.i
  %40 = bitcast %"class.adept::internal::StackStorageOrig"* %37 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %invoke.cont19
  invoke void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %37, i32 1)
          to label %.noexc unwind label %lpad18

.noexc:                                           ; preds = %if.then.i.i.i
  %.pre.i = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %41 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre.i, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit.i

_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit.i: ; preds = %.noexc, %invoke.cont19
  %42 = phi %"class.adept::internal::StackStorageOrig"* [ %37, %invoke.cont19 ], [ %41, %.noexc ]
  %43 = phi %"class.adept::Stack"* [ %40, %invoke.cont19 ], [ %.pre.i, %.noexc ]
  %44 = load double, double* %val_.i22, align 8, !tbaa !467
  %45 = call fast double @llvm.exp.f64(double %44) #38
  %multiplier_.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %43, i64 0, i32 0, i32 1
  %46 = load double*, double** %multiplier_.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %43, i64 0, i32 0, i32 5
  %47 = load i32, i32* %n_operations_.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i = sext i32 %47 to i64
  %arrayidx.i.i.i.i.i = getelementptr inbounds double, double* %46, i64 %idxprom.i.i.i.i.i
  store double %45, double* %arrayidx.i.i.i.i.i, align 8, !tbaa !70
  %48 = load i32, i32* %gradient_index_.i26, align 8, !tbaa !47
  %index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %43, i64 0, i32 0, i32 2
  %49 = load i32*, i32** %index_.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i = add nsw i32 %47, 1
  store i32 %inc.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i = getelementptr inbounds i32, i32* %49, i64 %idxprom.i.i.i.i.i
  store i32 %48, i32* %arrayidx4.i.i.i.i.i, align 4, !tbaa !47
  %val_.i27 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %Qdiags, i64 %36, i32 0
  store double %45, double* %val_.i27, align 8, !tbaa !467
  %gradient_index_.i28 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %Qdiags, i64 %36, i32 1
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %42, i64 0, i32 3
  %50 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %42, i64 0, i32 4
  %51 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i = icmp slt i32 %50, %51
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit.i
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %42, i64 0, i32 0
  %.pre.i30 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %invoke.cont25

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit.i
  %mul.i.i = shl nsw i32 %51, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %52 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %53 = extractvalue { i64, i1 } %52, 1
  %54 = extractvalue { i64, i1 } %52, 0
  %55 = select i1 %53, i64 -1, i64 %54
  %call.i.i31 = invoke noalias nonnull i8* @_Znam(i64 %55) #44
          to label %call.i.i.noexc unwind label %lpad18

call.i.i.noexc:                                   ; preds = %if.then.i
  %56 = bitcast %"class.adept::internal::StackStorageOrig"* %42 to i8**
  %57 = load i8*, i8** %56, align 8, !tbaa !363
  %conv5.i.i = sext i32 %50 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i31, i8* align 4 %57, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %57, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %call.i.i.noexc
  call void @_ZdaPv(i8* nonnull %57) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %call.i.i.noexc
  %.pre1.i = phi i32 [ %50, %call.i.i.noexc ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i31, i8** %56, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %58 = bitcast i8* %call.i.i31 to %"struct.adept::internal::Statement"*
  br label %invoke.cont25

invoke.cont25:                                    ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %59 = phi i32 [ %50, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %60 = phi %"struct.adept::internal::Statement"* [ %.pre.i30, %entry.if.end_crit_edge.i ], [ %58, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %61 = load i32, i32* %gradient_index_.i28, align 4, !tbaa !47
  %idxprom.i = sext i32 %59 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %60, i64 %idxprom.i, i32 0
  store i32 %61, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %42, i64 0, i32 5
  %62 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i = add nsw i32 %59, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %60, i64 %idxprom.i, i32 1
  store i32 %62, i32* %end_plus_one.i, align 4, !tbaa !371
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %q) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #38
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup3, label %for.body4, !llvm.loop !520

lpad:                                             ; preds = %invoke.cont
  %63 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #38
  br label %ehcleanup

lpad18:                                           ; preds = %if.then.i, %if.then.i.i.i
  %64 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad18, %lpad
  %.pn = phi { i8*, i32 } [ %64, %lpad18 ], [ %63, %lpad ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %q) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #38
  resume { i8*, i32 } %.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, double* nonnull align 8 dereferenceable(8) %rhs, i8* %dummy) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  %0 = load double, double* %rhs, align 8, !tbaa !70
  store double %0, double* %val_, align 8, !tbaa !467
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 9
  %2 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %inc.i = add nsw i32 %2, 1
  store i32 %inc.i, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !358
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %4, %3
  %5 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 6
  %6 = load i32, i32* %i_gradient_.i, align 8, !tbaa !387
  %inc2.i = add nsw i32 %6, 1
  store i32 %inc2.i, i32* %i_gradient_.i, align 8, !tbaa !387
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 8
  %7 = load i32, i32* %max_gradient_.i, align 8, !tbaa !388
  %cmp.not.i = icmp slt i32 %6, %7
  br i1 %cmp.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  store i32 %inc2.i, i32* %max_gradient_.i, align 8, !tbaa !388
  br label %_ZN5adept5Stack17register_gradientEv.exit

if.else.i:                                        ; preds = %entry
  %8 = bitcast %"struct.std::__detail::_List_node_base"* %4 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %4, i64 1
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i to i32*
  %9 = load i32, i32* %start.i, align 4, !tbaa !379
  %inc11.i = add nsw i32 %9, 1
  store i32 %inc11.i, i32* %start.i, align 4, !tbaa !379
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %8, i64 0, i32 1, i32 0, i64 4
  %10 = bitcast i8* %end.i to i32*
  %11 = load i32, i32* %10, align 4, !tbaa !377
  %cmp13.not.i = icmp slt i32 %9, %11
  br i1 %cmp13.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.else.i
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 5, i32 0
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !380
  %cmp.i8.i = icmp eq %"struct.std::__detail::_List_node_base"* %12, %4
  br i1 %cmp.i8.i, label %if.then18.i, label %if.end24.i

if.then18.i:                                      ; preds = %if.then14.i
  store %"struct.std::__detail::_List_node_base"* %3, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !385
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then18.i, %if.then14.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  %sub.i.i.i.i = add i64 %13, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %4) #38
  %14 = bitcast %"struct.std::__detail::_List_node_base"* %4 to i8*
  tail call void @_ZdlPv(i8* nonnull %14) #38
  %.pre = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  br label %_ZN5adept5Stack17register_gradientEv.exit

_ZN5adept5Stack17register_gradientEv.exit:        ; preds = %if.then.i, %if.then4.i, %if.else.i, %if.end24.i
  %15 = phi %"class.adept::internal::StackStorageOrig"* [ %.pre, %if.end24.i ], [ %5, %if.else.i ], [ %5, %if.then4.i ], [ %5, %if.then.i ]
  %return_val.0.i = phi i32 [ %9, %if.end24.i ], [ %9, %if.else.i ], [ %6, %if.then4.i ], [ %6, %if.then.i ]
  store i32 %return_val.0.i, i32* %gradient_index_, align 8, !tbaa !469
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 3
  %16 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 4
  %17 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i1 = icmp slt i32 %16, %17
  br i1 %cmp.not.i1, label %entry.if.end_crit_edge.i, label %if.then.i2

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i2:                                       ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  %mul.i.i = shl nsw i32 %17, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %18 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 -1, i64 %20
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %21) #44
  %22 = bitcast %"class.adept::internal::StackStorageOrig"* %15 to i8**
  %23 = load i8*, i8** %22, align 8, !tbaa !363
  %conv5.i.i = sext i32 %16 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %23, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %23, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i2
  tail call void @_ZdaPv(i8* nonnull %23) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i2
  %.pre1.i = phi i32 [ %16, %if.then.i2 ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %22, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %24 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  %.pre4 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %25 = phi i32 [ %return_val.0.i, %entry.if.end_crit_edge.i ], [ %.pre4, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %26 = phi i32 [ %16, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %27 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %24, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %idxprom.i = sext i32 %26 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %27, i64 %idxprom.i, i32 0
  store i32 %25, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 5
  %28 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i3 = add nsw i32 %26, 1
  store i32 %inc.i3, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %27, i64 %idxprom.i, i32 1
  store i32 %28, i32* %end_plus_one.i, align 4, !tbaa !371
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9adeptTest8subtractIdN5adept6ActiveIdEES3_EEviPKT_PKT0_PT1_(i32 %d, double* %x, %"class.adept::Active"* %y, %"class.adept::Active"* %out) local_unnamed_addr #28 comdat personality i32 (...)* @__gxx_personality_v0 {
entry:
  %cmp10 = icmp sgt i32 %d, 0
  br i1 %cmp10, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %d to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit, %entry
  ret void

for.body:                                         ; preds = %for.body.preheader, %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit ]
  %arrayidx = getelementptr inbounds double, double* %x, i64 %indvars.iv
  %0 = load double, double* %arrayidx, align 8, !tbaa !70, !noalias !521
  %1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %n_allocated_operations_.i.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %1, i64 0, i32 6
  %2 = load i32, i32* %n_allocated_operations_.i.i.i, align 4, !tbaa !400
  %n_operations_.i.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %1, i64 0, i32 5
  %3 = load i32, i32* %n_operations_.i.i.i, align 8, !tbaa !399
  %add.i.i.i = add nsw i32 %3, 1
  %cmp.not.i.i.i = icmp sgt i32 %2, %add.i.i.i
  %4 = bitcast %"class.adept::internal::StackStorageOrig"* %1 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i.i, label %_ZN5adept6ActiveIdEaSIdNS_8internal18BinaryOpScalarLeftIddNS3_8SubtractES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %for.body
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, i32 1)
  %.pre.i = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %5 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre.i, i64 0, i32 0
  br label %_ZN5adept6ActiveIdEaSIdNS_8internal18BinaryOpScalarLeftIddNS3_8SubtractES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE.exit

_ZN5adept6ActiveIdEaSIdNS_8internal18BinaryOpScalarLeftIddNS3_8SubtractES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE.exit: ; preds = %for.body, %if.then.i.i.i
  %6 = phi %"class.adept::internal::StackStorageOrig"* [ %1, %for.body ], [ %5, %if.then.i.i.i ]
  %7 = phi %"class.adept::Stack"* [ %4, %for.body ], [ %.pre.i, %if.then.i.i.i ]
  %val_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %y, i64 %indvars.iv, i32 0
  %8 = load double, double* %val_.i.i.i.i.i, align 8, !tbaa !467
  %sub.i.i.i.i.i = fsub fast double %0, %8
  %gradient_index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %y, i64 %indvars.iv, i32 1
  %multiplier_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %7, i64 0, i32 0, i32 1
  %9 = load double*, double** %multiplier_.i.i.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %7, i64 0, i32 0, i32 5
  %10 = load i32, i32* %n_operations_.i.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i.i = sext i32 %10 to i64
  %arrayidx.i.i.i.i.i.i.i = getelementptr inbounds double, double* %9, i64 %idxprom.i.i.i.i.i.i.i
  store double -1.000000e+00, double* %arrayidx.i.i.i.i.i.i.i, align 8, !tbaa !70
  %11 = load i32, i32* %gradient_index_.i.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %7, i64 0, i32 0, i32 2
  %12 = load i32*, i32** %index_.i.i.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i.i.i = add nsw i32 %10, 1
  store i32 %inc.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %12, i64 %idxprom.i.i.i.i.i.i.i
  store i32 %11, i32* %arrayidx4.i.i.i.i.i.i.i, align 4, !tbaa !47
  %val_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %out, i64 %indvars.iv, i32 0
  store double %sub.i.i.i.i.i, double* %val_.i, align 8, !tbaa !467
  %gradient_index_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %out, i64 %indvars.iv, i32 1
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %6, i64 0, i32 3
  %13 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %6, i64 0, i32 4
  %14 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i = icmp slt i32 %13, %14
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept6ActiveIdEaSIdNS_8internal18BinaryOpScalarLeftIddNS3_8SubtractES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %6, i64 0, i32 0
  %.pre.i6 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept6ActiveIdEaSIdNS_8internal18BinaryOpScalarLeftIddNS3_8SubtractES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE.exit
  %mul.i.i = shl nsw i32 %14, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %15 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %16 = extractvalue { i64, i1 } %15, 1
  %17 = extractvalue { i64, i1 } %15, 0
  %18 = select i1 %16, i64 -1, i64 %17
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %18) #44
  %19 = bitcast %"class.adept::internal::StackStorageOrig"* %6 to i8**
  %20 = load i8*, i8** %19, align 8, !tbaa !363
  %conv5.i.i = sext i32 %13 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %20, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %20, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %20) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre1.i = phi i32 [ %13, %if.then.i ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %19, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %21 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %22 = phi i32 [ %13, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %23 = phi %"struct.adept::internal::Statement"* [ %.pre.i6, %entry.if.end_crit_edge.i ], [ %21, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %24 = load i32, i32* %gradient_index_.i, align 4, !tbaa !47
  %idxprom.i = sext i32 %22 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %23, i64 %idxprom.i, i32 0
  store i32 %24, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %6, i64 0, i32 5
  %25 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i = add nsw i32 %22, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %23, i64 %idxprom.i, i32 1
  store i32 %25, i32* %end_plus_one.i, align 4, !tbaa !371
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !524
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9adeptTest9logsumexpIN5adept6ActiveIdEEEET_iPKS4_(%"class.adept::Active"* noalias sret(%"class.adept::Active") align 8 %agg.result, i32 %n, %"class.adept::Active"* %x) local_unnamed_addr #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %mx = alloca %"class.adept::Active", align 8
  %semx = alloca %"class.adept::Active", align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp1 = alloca %"struct.adept::internal::BinaryOperation.74", align 8
  %ref.tmp11 = alloca %"struct.adept::internal::BinaryOperation.80", align 8
  %0 = bitcast %"class.adept::Active"* %mx to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #38
  tail call void @llvm.experimental.noalias.scope.decl(metadata !525)
  %val_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %mx, i64 0, i32 0
  store double 0.000000e+00, double* %val_.i, align 8, !tbaa !467
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 9
  %2 = load i32, i32* %n_gradients_registered_.i.i, align 4, !tbaa !376
  %inc.i.i = add nsw i32 %2, 1
  store i32 %inc.i.i, i32* %n_gradients_registered_.i.i, align 4, !tbaa !376
  %gap_list_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i.i, align 8, !tbaa !358
  %cmp.i.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %4, %3
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  %i_gradient_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 6
  %5 = load i32, i32* %i_gradient_.i.i, align 8, !tbaa !387
  %inc2.i.i = add nsw i32 %5, 1
  store i32 %inc2.i.i, i32* %i_gradient_.i.i, align 8, !tbaa !387
  %max_gradient_.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 8
  %6 = load i32, i32* %max_gradient_.i.i, align 8, !tbaa !388
  %cmp.not.i.i = icmp slt i32 %5, %6
  br i1 %cmp.not.i.i, label %_ZN5adept6ActiveIdEC2ERKS1_.exit, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.then.i.i
  store i32 %inc2.i.i, i32* %max_gradient_.i.i, align 8, !tbaa !388
  br label %_ZN5adept6ActiveIdEC2ERKS1_.exit

if.else.i.i:                                      ; preds = %entry
  %7 = bitcast %"struct.std::__detail::_List_node_base"* %4 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %4, i64 1
  %start.i.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i.i to i32*
  %8 = load i32, i32* %start.i.i, align 4, !tbaa !379
  %inc11.i.i = add nsw i32 %8, 1
  store i32 %inc11.i.i, i32* %start.i.i, align 4, !tbaa !379
  %end.i.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 1, i32 0, i64 4
  %9 = bitcast i8* %end.i.i to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !377
  %cmp13.not.i.i = icmp slt i32 %8, %10
  br i1 %cmp13.not.i.i, label %_ZN5adept6ActiveIdEC2ERKS1_.exit, label %if.then14.i.i

if.then14.i.i:                                    ; preds = %if.else.i.i
  %_M_node.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 5, i32 0
  %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i, align 8, !tbaa !380
  %cmp.i8.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %11, %4
  br i1 %cmp.i8.i.i, label %if.then18.i.i, label %if.end24.i.i

if.then18.i.i:                                    ; preds = %if.then14.i.i
  store %"struct.std::__detail::_List_node_base"* %3, %"struct.std::__detail::_List_node_base"** %_M_node.i.i.i, align 8, !tbaa.struct !385
  br label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.then18.i.i, %if.then14.i.i
  %_M_size.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !381
  %sub.i.i.i.i.i = add i64 %12, -1
  store i64 %sub.i.i.i.i.i, i64* %_M_size.i.i.i.i.i, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %4) #38
  %13 = bitcast %"struct.std::__detail::_List_node_base"* %4 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #38
  br label %_ZN5adept6ActiveIdEC2ERKS1_.exit

_ZN5adept6ActiveIdEC2ERKS1_.exit:                 ; preds = %if.then.i.i, %if.then4.i.i, %if.else.i.i, %if.end24.i.i
  %return_val.0.i.i = phi i32 [ %8, %if.end24.i.i ], [ %8, %if.else.i.i ], [ %5, %if.then4.i.i ], [ %5, %if.then.i.i ]
  %gradient_index_.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %mx, i64 0, i32 1
  store i32 %return_val.0.i.i, i32* %gradient_index_.i, align 8, !tbaa !469
  %call2.i = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %mx, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %x)
  %cmp8.i = icmp sgt i32 %n, 1
  br i1 %cmp8.i, label %invoke.cont.lr.ph.i, label %_ZN9adeptTest7arr_maxIN5adept6ActiveIdEEEET_iPKS4_.exit

invoke.cont.lr.ph.i:                              ; preds = %_ZN5adept6ActiveIdEC2ERKS1_.exit
  %wide.trip.count.i = zext i32 %n to i64
  br label %invoke.cont.i

invoke.cont.i:                                    ; preds = %for.inc.i, %invoke.cont.lr.ph.i
  %indvars.iv.i = phi i64 [ 1, %invoke.cont.lr.ph.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %arrayidx1.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %x, i64 %indvars.iv.i
  %14 = load double, double* %val_.i, align 8, !tbaa !467, !alias.scope !525
  %val_.i.i1.i.i = getelementptr %"class.adept::Active", %"class.adept::Active"* %arrayidx1.i, i64 0, i32 0
  %15 = load double, double* %val_.i.i1.i.i, align 8, !tbaa !467, !noalias !525
  %cmp.i.i = fcmp fast olt double %14, %15
  br i1 %cmp.i.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %invoke.cont.i
  %call5.i = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %mx, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %arrayidx1.i)
          to label %for.inc.i unwind label %lpad.i

lpad.i:                                           ; preds = %if.then.i
  %16 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %mx) #38
  resume { i8*, i32 } %16

for.inc.i:                                        ; preds = %if.then.i, %invoke.cont.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %_ZN9adeptTest7arr_maxIN5adept6ActiveIdEEEET_iPKS4_.exit, label %invoke.cont.i, !llvm.loop !528

_ZN9adeptTest7arr_maxIN5adept6ActiveIdEEEET_iPKS4_.exit: ; preds = %for.inc.i, %_ZN5adept6ActiveIdEC2ERKS1_.exit
  %17 = bitcast %"class.adept::Active"* %semx to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #38
  %18 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #38
  store double 0.000000e+00, double* %ref.tmp, align 8, !tbaa !70
  invoke void @_ZN5adept6ActiveIdEC2IdEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %semx, double* nonnull align 8 dereferenceable(8) %ref.tmp, i8* null)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %_ZN9adeptTest7arr_maxIN5adept6ActiveIdEEEET_iPKS4_.exit
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #38
  %cmp24 = icmp sgt i32 %n, 0
  br i1 %cmp24, label %invoke.cont8.lr.ph, label %invoke.cont17

invoke.cont8.lr.ph:                               ; preds = %invoke.cont
  %19 = bitcast %"struct.adept::internal::BinaryOperation.74"* %ref.tmp1 to i8*
  %20 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %ref.tmp1, i64 0, i32 0
  %ref.tmp2.sroa.0.0..sroa_idx = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %ref.tmp1, i64 0, i32 1, i32 0, i32 0
  %ref.tmp2.sroa.5.0..sroa_idx23 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %ref.tmp1, i64 0, i32 1, i32 0, i32 1
  %21 = bitcast %"struct.adept::internal::BinaryOperation.74"* %ref.tmp1 to %"struct.adept::Expression.75"*
  %wide.trip.count = zext i32 %n to i64
  br label %invoke.cont8

lpad:                                             ; preds = %_ZN9adeptTest7arr_maxIN5adept6ActiveIdEEEET_iPKS4_.exit
  %22 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #38
  br label %ehcleanup20

invoke.cont8:                                     ; preds = %invoke.cont8.lr.ph, %invoke.cont9
  %indvars.iv = phi i64 [ 0, %invoke.cont8.lr.ph ], [ %indvars.iv.next, %invoke.cont9 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #38
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %x, i64 %indvars.iv
  store %"class.adept::Active"* %semx, %"class.adept::Active"** %20, align 8, !tbaa !61, !alias.scope !529
  store %"class.adept::Active"* %arrayidx, %"class.adept::Active"** %ref.tmp2.sroa.0.0..sroa_idx, align 8
  store %"class.adept::Active"* %mx, %"class.adept::Active"** %ref.tmp2.sroa.5.0..sroa_idx23, align 8
  %call10 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpENS4_IdS1_NS3_8SubtractES1_EEEEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE(%"class.adept::Active"* nonnull dereferenceable(12) %semx, %"struct.adept::Expression.75"* nonnull align 1 dereferenceable(1) %21)
          to label %invoke.cont9 unwind label %lpad4

invoke.cont9:                                     ; preds = %invoke.cont8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #38
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %invoke.cont17, label %invoke.cont8, !llvm.loop !532

lpad4:                                            ; preds = %invoke.cont8
  %23 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #38
  br label %ehcleanup

invoke.cont17:                                    ; preds = %invoke.cont9, %invoke.cont
  %24 = bitcast %"struct.adept::internal::BinaryOperation.80"* %ref.tmp11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #38
  %25 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.80", %"struct.adept::internal::BinaryOperation.80"* %ref.tmp11, i64 0, i32 0, i32 0
  store %"class.adept::Active"* %semx, %"class.adept::Active"** %25, align 8
  %26 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.80", %"struct.adept::internal::BinaryOperation.80"* %ref.tmp11, i64 0, i32 1
  store %"class.adept::Active"* %mx, %"class.adept::Active"** %26, align 8
  %27 = bitcast %"struct.adept::internal::BinaryOperation.80"* %ref.tmp11 to %"struct.adept::Expression.81"*
  invoke void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdNS3_14UnaryOperationIdNS3_3LogES1_EENS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSC_4rankLi0EsrSC_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result, %"struct.adept::Expression.81"* nonnull align 1 dereferenceable(1) %27, i8* null)
          to label %invoke.cont19 unwind label %lpad13

invoke.cont19:                                    ; preds = %invoke.cont17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #38
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %semx) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #38
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %mx) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #38
  ret void

lpad13:                                           ; preds = %invoke.cont17
  %28 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #38
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad13, %lpad4
  %.pn = phi { i8*, i32 } [ %23, %lpad4 ], [ %28, %lpad13 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %semx) #38
  br label %ehcleanup20

ehcleanup20:                                      ; preds = %ehcleanup, %lpad
  %.pn.pn = phi { i8*, i32 } [ %.pn, %ehcleanup ], [ %22, %lpad ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #38
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %mx) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #38
  resume { i8*, i32 } %.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !400
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !399
  %add.i.i = add nsw i32 %2, 2
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 2)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit: ; preds = %entry, %if.then.i.i
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.52"* %rhs to %"class.adept::Active"**
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !533
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 0
  %8 = load double, double* %val_.i.i.i.i, align 8, !tbaa !467
  %right.i.i.i = getelementptr inbounds %"struct.adept::Expression.52", %"struct.adept::Expression.52"* %rhs, i64 8
  %9 = bitcast %"struct.adept::Expression.52"* %right.i.i.i to %"class.adept::Active"**
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %9, align 8, !tbaa !535
  %val_.i3.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 0
  %11 = load double, double* %val_.i3.i.i.i, align 8, !tbaa !467
  %add.i.i.i.i = fadd fast double %11, %8
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %12 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %13 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i = sext i32 %13 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !70
  %14 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %15 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i.i = add nsw i32 %13, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i.i.i
  store i32 %14, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %gradient_index_.i.i.i4.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 1
  %16 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i7.i.i = sext i32 %16 to i64
  %arrayidx.i.i.i.i8.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i7.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i8.i.i, align 8, !tbaa !70
  %17 = load i32, i32* %gradient_index_.i.i.i4.i.i, align 8, !tbaa !47
  %inc.i.i.i.i10.i.i = add nsw i32 %16, 1
  store i32 %inc.i.i.i.i10.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i11.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i7.i.i
  store i32 %17, i32* %arrayidx4.i.i.i.i11.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %add.i.i.i.i, double* %val_, align 8, !tbaa !467
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %18 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %19 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i = icmp slt i32 %18, %19
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %mul.i.i = shl nsw i32 %19, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %20 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %21 = extractvalue { i64, i1 } %20, 1
  %22 = extractvalue { i64, i1 } %20, 0
  %23 = select i1 %21, i64 -1, i64 %22
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %23) #44
  %24 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %25 = load i8*, i8** %24, align 8, !tbaa !363
  %conv5.i.i = sext i32 %18 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %25, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %25, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %25) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre1.i = phi i32 [ %18, %if.then.i ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %24, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %26 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %27 = phi i32 [ %18, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %28 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %26, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %29 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %27 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %28, i64 %idxprom.i, i32 0
  store i32 %29, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %30 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i = add nsw i32 %27, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %28, i64 %idxprom.i, i32 1
  store i32 %30, i32* %end_plus_one.i, align 4, !tbaa !371
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS3_18BinaryOpScalarLeftIddNS3_3AddES1_EENS3_8SubtractENS5_IdiNS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.55"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !400
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !399
  %add.i.i = add nsw i32 %2, 2
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 2)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit: ; preds = %entry, %if.then.i.i
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.55"* %rhs to %"struct.adept::internal::BinaryOpScalarLeft.56"**
  %7 = load %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.56"** %left.i.i.i, align 8, !tbaa !536
  %value_.i.i.i.i.i.i = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.56", %"struct.adept::internal::BinaryOpScalarLeft.56"* %7, i64 0, i32 0, i32 0, i32 0, i64 0
  %8 = load double, double* %value_.i.i.i.i.i.i, align 16, !tbaa !21
  %right.i.i.i.i2.i = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.56", %"struct.adept::internal::BinaryOpScalarLeft.56"* %7, i64 0, i32 1
  %9 = load %"class.adept::Active"*, %"class.adept::Active"** %right.i.i.i.i2.i, align 16, !tbaa !538
  %val_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %9, i64 0, i32 0
  %10 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !467
  %add.i.i.i.i.i.i = fadd fast double %10, %8
  %right.i.i.i = getelementptr inbounds %"struct.adept::Expression.55", %"struct.adept::Expression.55"* %rhs, i64 8
  %11 = bitcast %"struct.adept::Expression.55"* %right.i.i.i to %"struct.adept::internal::BinaryOpScalarLeft.59"**
  %12 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %11, align 8, !tbaa !541
  %data.i.i.i.i.i.i = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %12, i64 0, i32 0, i32 0
  %13 = load i32, i32* %data.i.i.i.i.i.i, align 4, !tbaa !542
  %right.i.i4.i.i.i = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %12, i64 0, i32 1
  %14 = load %"class.adept::Active"*, %"class.adept::Active"** %right.i.i4.i.i.i, align 8, !tbaa !544
  %val_.i.i.i5.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %14, i64 0, i32 0
  %15 = load double, double* %val_.i.i.i5.i.i.i, align 8, !tbaa !467
  %conv.i.i.i.i.i.i = sitofp i32 %13 to double
  %16 = fmul fast double %15, %conv.i.i.i.i.i.i
  %sub.i.i.i.i = fsub fast double %add.i.i.i.i.i.i, %16
  %gradient_index_.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %9, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %17 = load double*, double** %multiplier_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %18 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i.i.i.i = sext i32 %18 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %17, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i.i.i.i, align 8, !tbaa !70
  %19 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %20 = load i32*, i32** %index_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i.i.i.i.i = add nsw i32 %18, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %20, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store i32 %19, i32* %arrayidx4.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %21 = load i32, i32* %data.i.i.i.i.i.i, align 8, !tbaa !542
  %conv.i.i.i.i.i.i.i = sitofp i32 %21 to double
  %mul.i.i.i.i.i.i.i = fneg fast double %conv.i.i.i.i.i.i.i
  %gradient_index_.i.i.i.i.i.i5.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %14, i64 0, i32 1
  %22 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i.i8.i.i = sext i32 %22 to i64
  %arrayidx.i.i.i.i.i.i.i9.i.i = getelementptr inbounds double, double* %17, i64 %idxprom.i.i.i.i.i.i.i8.i.i
  store double %mul.i.i.i.i.i.i.i, double* %arrayidx.i.i.i.i.i.i.i9.i.i, align 8, !tbaa !70
  %23 = load i32, i32* %gradient_index_.i.i.i.i.i.i5.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i.i11.i.i = add nsw i32 %22, 1
  store i32 %inc.i.i.i.i.i.i.i11.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i.i12.i.i = getelementptr inbounds i32, i32* %20, i64 %idxprom.i.i.i.i.i.i.i8.i.i
  store i32 %23, i32* %arrayidx4.i.i.i.i.i.i.i12.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %sub.i.i.i.i, double* %val_, align 8, !tbaa !467
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %24 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %25 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i = icmp slt i32 %24, %25
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %mul.i.i = shl nsw i32 %25, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %26 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = select i1 %27, i64 -1, i64 %28
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %29) #44
  %30 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %31 = load i8*, i8** %30, align 8, !tbaa !363
  %conv5.i.i = sext i32 %24 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %31, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %31, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %31) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre1.i = phi i32 [ %24, %if.then.i ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %30, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %32 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %33 = phi i32 [ %24, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %34 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %32, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %35 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %33 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %34, i64 %idxprom.i, i32 0
  store i32 %35, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %36 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i = add nsw i32 %33, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %34, i64 %idxprom.i, i32 1
  store i32 %36, i32* %end_plus_one.i, align 4, !tbaa !371
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN9adeptTest17log_wishart_priorIN5adept6ActiveIdEEEET_ii7WishartPKS4_S7_S7_(%"class.adept::Active"* noalias sret(%"class.adept::Active") align 8 %agg.result, i32 %p, i32 %k, double %wishart.coerce0, i32 %wishart.coerce1, %"class.adept::Active"* %sum_qs, %"class.adept::Active"* %Qdiags, %"class.adept::Active"* %icf) local_unnamed_addr #28 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp.i30 = alloca %"struct.adept::internal::BinaryOperation.69", align 8
  %ref.tmp2.i31 = alloca %"struct.adept::internal::BinaryOperation.71", align 8
  %ref.tmp.i = alloca %"struct.adept::internal::BinaryOperation.69", align 8
  %ref.tmp2.i = alloca %"struct.adept::internal::BinaryOperation.71", align 8
  %out = alloca %"class.adept::Active", align 8
  %ref.tmp = alloca i32, align 4
  %frobenius = alloca %"class.adept::Active", align 8
  %ref.tmp11 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %ref.tmp12 = alloca %"class.adept::Active", align 8
  %ref.tmp14 = alloca %"class.adept::Active", align 8
  %ref.tmp59 = alloca %"struct.adept::internal::BinaryOpScalarRight", align 16
  %add = add i32 %p, 1
  %add1 = add i32 %add, %wishart.coerce1
  %mul = mul nsw i32 %add, %p
  %div = sdiv i32 %mul, 2
  %mul3 = mul nsw i32 %add1, %p
  %conv = sitofp i32 %mul3 to double
  %0 = tail call fast double @llvm.log.f64(double %wishart.coerce0)
  %sub = fadd fast double %0, 0xBFD62E42FEFA39EF
  %mul5 = fmul fast double %sub, %conv
  %conv6 = sitofp i32 %add1 to double
  %conv8 = sitofp i32 %p to double
  %sub.i = fadd fast double %conv8, -1.000000e+00
  %mul1.i = fmul fast double %conv8, 0x3FD250D048E7A2E6
  %mul2.i = fmul fast double %mul1.i, %sub.i
  %cmp8.i = icmp slt i32 %p, 1
  br i1 %cmp8.i, label %log_gamma_distrib.exit, label %for.body.i

for.body.i:                                       ; preds = %entry, %for.body.i
  %out.010.i = phi double [ %add6.i, %for.body.i ], [ %mul2.i, %entry ]
  %j.09.i = phi i32 [ %inc.i, %for.body.i ], [ 1, %entry ]
  %sub3.i = sub nsw i32 1, %j.09.i
  %conv4.i = sitofp i32 %sub3.i to double
  %1 = fadd fast double %conv4.i, %conv6
  %add.i = fmul fast double %1, 5.000000e-01
  %call.i = tail call fast double @lgamma(double %add.i) #38
  %add6.i = fadd fast double %call.i, %out.010.i
  %inc.i = add nuw nsw i32 %j.09.i, 1
  %conv.i = sitofp i32 %inc.i to double
  %cmp.i = fcmp fast ugt double %conv.i, %conv8
  br i1 %cmp.i, label %log_gamma_distrib.exit, label %for.body.i, !llvm.loop !98

log_gamma_distrib.exit:                           ; preds = %for.body.i, %entry
  %out.0.lcssa.i = phi double [ %mul2.i, %entry ], [ %add6.i, %for.body.i ]
  %sub10 = fsub fast double %mul5, %out.0.lcssa.i
  %2 = bitcast %"class.adept::Active"* %out to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #38
  %3 = bitcast i32* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #38
  store i32 0, i32* %ref.tmp, align 4, !tbaa !47
  call void @_ZN5adept6ActiveIdEC2IiEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %out, i32* nonnull align 4 dereferenceable(4) %ref.tmp, i8* null)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #38
  %cmp111 = icmp sgt i32 %k, 0
  br i1 %cmp111, label %for.body.lr.ph, label %invoke.cont64

for.body.lr.ph:                                   ; preds = %log_gamma_distrib.exit
  %4 = bitcast %"class.adept::Active"* %frobenius to i8*
  %5 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp11 to i8*
  %6 = bitcast %"class.adept::Active"* %ref.tmp12 to i8*
  %7 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i to i8*
  %8 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i, i64 0, i32 1
  %10 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i to %"struct.adept::Expression.70"*
  %cmp16.i = icmp sgt i32 %p, 1
  %11 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i to i8*
  %12 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i, i64 0, i32 0
  %ref.tmp3.sroa.0.0..sroa_idx.i = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i, i64 0, i32 1, i32 0
  %ref.tmp3.sroa.5.0..sroa_idx15.i = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i, i64 0, i32 1, i32 1
  %13 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i to %"struct.adept::Expression.72"*
  %wide.trip.count.i = zext i32 %p to i64
  %14 = bitcast %"class.adept::Active"* %ref.tmp14 to i8*
  %sub15 = sub nsw i32 %div, %p
  %15 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i30 to i8*
  %16 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i30, i64 0, i32 0
  %17 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i30, i64 0, i32 1
  %18 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp.i30 to %"struct.adept::Expression.70"*
  %cmp16.i32 = icmp sgt i32 %sub15, 1
  %19 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i31 to i8*
  %20 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i31, i64 0, i32 0
  %ref.tmp3.sroa.0.0..sroa_idx.i33 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i31, i64 0, i32 1, i32 0
  %ref.tmp3.sroa.5.0..sroa_idx15.i34 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i31, i64 0, i32 1, i32 1
  %21 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2.i31 to %"struct.adept::Expression.72"*
  %wide.trip.count.i35 = zext i32 %sub15 to i64
  %22 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp11, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %ref.tmp11, i64 0, i32 1
  %24 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp11 to %"struct.adept::Expression.52"*
  %25 = fmul fast double %wishart.coerce0, %wishart.coerce0
  %mul36 = fmul fast double %25, 5.000000e-01
  %val_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %out, i64 0, i32 0
  %conv.i.i.i.i.i.i = sitofp i32 %wishart.coerce1 to double
  %gradient_index_.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %out, i64 0, i32 1
  %mul.i.i.i.i.i.i.i = fneg fast double %conv.i.i.i.i.i.i
  %wide.trip.count = zext i32 %k to i64
  %val_.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %frobenius, i64 0, i32 0
  %gradient_index_.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %frobenius, i64 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %invoke.cont49
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %invoke.cont49 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #38
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #38
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #38
  %26 = trunc i64 %indvars.iv to i32
  %mul13 = mul nsw i32 %26, %p
  %idxprom = sext i32 %mul13 to i64
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %Qdiags, i64 %idxprom
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #38, !noalias !546
  store %"class.adept::Active"* %arrayidx, %"class.adept::Active"** %8, align 8, !noalias !546
  store %"class.adept::Active"* %arrayidx, %"class.adept::Active"** %9, align 8, !noalias !546
  invoke void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp12, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %10, i8* null)
          to label %.noexc unwind label %lpad

.noexc:                                           ; preds = %for.body
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #38, !noalias !546
  br i1 %cmp16.i, label %invoke.cont8.i, label %invoke.cont

invoke.cont8.i:                                   ; preds = %.noexc, %invoke.cont9.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %invoke.cont9.i ], [ 1, %.noexc ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #38, !noalias !546
  %arrayidx4.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx, i64 %indvars.iv.i
  store %"class.adept::Active"* %ref.tmp12, %"class.adept::Active"** %12, align 8, !tbaa !61, !alias.scope !549, !noalias !546
  store %"class.adept::Active"* %arrayidx4.i, %"class.adept::Active"** %ref.tmp3.sroa.0.0..sroa_idx.i, align 8, !noalias !546
  store %"class.adept::Active"* %arrayidx4.i, %"class.adept::Active"** %ref.tmp3.sroa.5.0..sroa_idx15.i, align 8, !noalias !546
  %call10.i = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp12, %"struct.adept::Expression.72"* nonnull align 1 dereferenceable(1) %13)
          to label %invoke.cont9.i unwind label %lpad.i

invoke.cont9.i:                                   ; preds = %invoke.cont8.i
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #38, !noalias !546
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %invoke.cont, label %invoke.cont8.i, !llvm.loop !489

lpad.i:                                           ; preds = %invoke.cont8.i
  %27 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #38, !noalias !546
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp12) #38
  br label %ehcleanup27

invoke.cont:                                      ; preds = %invoke.cont9.i, %.noexc
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #38
  %mul16 = mul nsw i32 %div, %26
  %add17 = add nsw i32 %mul16, %p
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %icf, i64 %idxprom18
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #38, !noalias !552
  store %"class.adept::Active"* %arrayidx19, %"class.adept::Active"** %16, align 8, !noalias !552
  store %"class.adept::Active"* %arrayidx19, %"class.adept::Active"** %17, align 8, !noalias !552
  invoke void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp14, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %18, i8* null)
          to label %.noexc45 unwind label %lpad20

.noexc45:                                         ; preds = %invoke.cont
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #38, !noalias !552
  br i1 %cmp16.i32, label %invoke.cont8.i40, label %invoke.cont23

invoke.cont8.i40:                                 ; preds = %.noexc45, %invoke.cont9.i43
  %indvars.iv.i37 = phi i64 [ %indvars.iv.next.i41, %invoke.cont9.i43 ], [ 1, %.noexc45 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #38, !noalias !552
  %arrayidx4.i38 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayidx19, i64 %indvars.iv.i37
  store %"class.adept::Active"* %ref.tmp14, %"class.adept::Active"** %20, align 8, !tbaa !61, !alias.scope !555, !noalias !552
  store %"class.adept::Active"* %arrayidx4.i38, %"class.adept::Active"** %ref.tmp3.sroa.0.0..sroa_idx.i33, align 8, !noalias !552
  store %"class.adept::Active"* %arrayidx4.i38, %"class.adept::Active"** %ref.tmp3.sroa.5.0..sroa_idx15.i34, align 8, !noalias !552
  %call10.i39 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp14, %"struct.adept::Expression.72"* nonnull align 1 dereferenceable(1) %21)
          to label %invoke.cont9.i43 unwind label %lpad.i44

invoke.cont9.i43:                                 ; preds = %invoke.cont8.i40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #38, !noalias !552
  %indvars.iv.next.i41 = add nuw nsw i64 %indvars.iv.i37, 1
  %exitcond.not.i42 = icmp eq i64 %indvars.iv.next.i41, %wide.trip.count.i35
  br i1 %exitcond.not.i42, label %invoke.cont23, label %invoke.cont8.i40, !llvm.loop !489

lpad.i44:                                         ; preds = %invoke.cont8.i40
  %28 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #38, !noalias !552
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp14) #38
  br label %ehcleanup

invoke.cont23:                                    ; preds = %invoke.cont9.i43, %.noexc45
  store %"class.adept::Active"* %ref.tmp12, %"class.adept::Active"** %22, align 8
  store %"class.adept::Active"* %ref.tmp14, %"class.adept::Active"** %23, align 8
  invoke void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %frobenius, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %24, i8* null)
          to label %invoke.cont48 unwind label %lpad22

invoke.cont48:                                    ; preds = %invoke.cont23
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp14) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #38
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp12) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #38
  %29 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %n_allocated_operations_.i.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %29, i64 0, i32 6
  %30 = load i32, i32* %n_allocated_operations_.i.i.i, align 4, !tbaa !400
  %n_operations_.i.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %29, i64 0, i32 5
  %31 = load i32, i32* %n_operations_.i.i.i, align 8, !tbaa !399
  %add.i.i.i = add nsw i32 %31, 3
  %cmp.not.i.i.i = icmp sgt i32 %30, %add.i.i.i
  %32 = bitcast %"class.adept::internal::StackStorageOrig"* %29 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i.i, label %call.i56.noexc, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %invoke.cont48
  invoke void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %29, i32 3)
          to label %if.then.i.i.i.call.i56.noexc_crit_edge unwind label %lpad45

if.then.i.i.i.call.i56.noexc_crit_edge:           ; preds = %if.then.i.i.i
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %33 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %call.i56.noexc

call.i56.noexc:                                   ; preds = %if.then.i.i.i.call.i56.noexc_crit_edge, %invoke.cont48
  %34 = phi %"class.adept::internal::StackStorageOrig"* [ %33, %if.then.i.i.i.call.i56.noexc_crit_edge ], [ %29, %invoke.cont48 ]
  %35 = phi %"class.adept::Stack"* [ %.pre, %if.then.i.i.i.call.i56.noexc_crit_edge ], [ %32, %invoke.cont48 ]
  %36 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !467
  %37 = load double, double* %val_.i.i.i.i.i.i.i.i, align 8, !tbaa !467
  %mul.i.i.i.i.i.i.i.i = fmul fast double %37, %mul36
  %add.i.i.i.i.i.i = fadd fast double %mul.i.i.i.i.i.i.i.i, %36
  %val_.i.i.i5.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %sum_qs, i64 %indvars.iv, i32 0
  %38 = load double, double* %val_.i.i.i5.i.i.i, align 8, !tbaa !467
  %39 = fmul fast double %38, %conv.i.i.i.i.i.i
  %sub.i.i.i.i = fsub fast double %add.i.i.i.i.i.i, %39
  %multiplier_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %35, i64 0, i32 0, i32 1
  %40 = load double*, double** %multiplier_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %35, i64 0, i32 0, i32 5
  %41 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i.i.i.i = sext i32 %41 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %40, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i.i.i.i, align 8, !tbaa !70
  %42 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %35, i64 0, i32 0, i32 2
  %43 = load i32*, i32** %index_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i.i.i.i.i = add nsw i32 %41, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %43, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store i32 %42, i32* %arrayidx4.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %44 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i.i.i.i.i.i.i = sext i32 %44 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %40, i64 %idxprom.i.i.i.i.i.i.i.i.i.i.i.i
  store double %mul36, double* %arrayidx.i.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !70
  %45 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i.i.i.i.i.i.i = add nsw i32 %44, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %43, i64 %idxprom.i.i.i.i.i.i.i.i.i.i.i.i
  store i32 %45, i32* %arrayidx4.i.i.i.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %gradient_index_.i.i.i.i.i.i5.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %sum_qs, i64 %indvars.iv, i32 1
  %46 = load i32, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i.i8.i.i = sext i32 %46 to i64
  %arrayidx.i.i.i.i.i.i.i9.i.i = getelementptr inbounds double, double* %40, i64 %idxprom.i.i.i.i.i.i.i8.i.i
  store double %mul.i.i.i.i.i.i.i, double* %arrayidx.i.i.i.i.i.i.i9.i.i, align 8, !tbaa !70
  %47 = load i32, i32* %gradient_index_.i.i.i.i.i.i5.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i.i11.i.i = add nsw i32 %46, 1
  store i32 %inc.i.i.i.i.i.i.i11.i.i, i32* %n_operations_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i.i12.i.i = getelementptr inbounds i32, i32* %43, i64 %idxprom.i.i.i.i.i.i.i8.i.i
  store i32 %47, i32* %arrayidx4.i.i.i.i.i.i.i12.i.i, align 4, !tbaa !47
  store double %sub.i.i.i.i, double* %val_.i.i.i.i.i.i, align 8, !tbaa !467
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %34, i64 0, i32 3
  %48 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %34, i64 0, i32 4
  %49 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i = icmp slt i32 %48, %49
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %call.i56.noexc
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %34, i64 0, i32 0
  %.pre.i60 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %invoke.cont49

if.then.i:                                        ; preds = %call.i56.noexc
  %mul.i.i = shl nsw i32 %49, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %50 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %51 = extractvalue { i64, i1 } %50, 1
  %52 = extractvalue { i64, i1 } %50, 0
  %53 = select i1 %51, i64 -1, i64 %52
  %call.i.i62 = invoke noalias nonnull i8* @_Znam(i64 %53) #44
          to label %call.i.i.noexc unwind label %lpad45

call.i.i.noexc:                                   ; preds = %if.then.i
  %54 = bitcast %"class.adept::internal::StackStorageOrig"* %34 to i8**
  %55 = load i8*, i8** %54, align 8, !tbaa !363
  %conv5.i.i = sext i32 %48 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i62, i8* align 4 %55, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %55, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %call.i.i.noexc
  call void @_ZdaPv(i8* nonnull %55) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %call.i.i.noexc
  %.pre1.i = phi i32 [ %48, %call.i.i.noexc ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i62, i8** %54, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %56 = bitcast i8* %call.i.i62 to %"struct.adept::internal::Statement"*
  br label %invoke.cont49

invoke.cont49:                                    ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %57 = phi i32 [ %48, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %58 = phi %"struct.adept::internal::Statement"* [ %.pre.i60, %entry.if.end_crit_edge.i ], [ %56, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %59 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %idxprom.i = sext i32 %57 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %58, i64 %idxprom.i, i32 0
  store i32 %59, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %34, i64 0, i32 5
  %60 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i61 = add nsw i32 %57, 1
  store i32 %inc.i61, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %58, i64 %idxprom.i, i32 1
  store i32 %60, i32* %end_plus_one.i, align 4, !tbaa !371
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %frobenius) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #38
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %invoke.cont64, label %for.body, !llvm.loop !558

lpad:                                             ; preds = %for.body
  %61 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup27

lpad20:                                           ; preds = %invoke.cont
  %62 = landingpad { i8*, i32 }
          cleanup
  br label %ehcleanup

lpad22:                                           ; preds = %invoke.cont23
  %63 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp14) #38
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad20, %lpad.i44, %lpad22
  %.pn = phi { i8*, i32 } [ %63, %lpad22 ], [ %62, %lpad20 ], [ %28, %lpad.i44 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #38
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp12) #38
  br label %ehcleanup27

ehcleanup27:                                      ; preds = %lpad, %lpad.i, %ehcleanup
  %.pn.pn = phi { i8*, i32 } [ %.pn, %ehcleanup ], [ %61, %lpad ], [ %27, %lpad.i ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #38
  br label %ehcleanup57

lpad45:                                           ; preds = %if.then.i, %if.then.i.i.i
  %64 = landingpad { i8*, i32 }
          cleanup
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %frobenius) #38
  br label %ehcleanup57

ehcleanup57:                                      ; preds = %lpad45, %ehcleanup27
  %.pn26.pn = phi { i8*, i32 } [ %64, %lpad45 ], [ %.pn.pn, %ehcleanup27 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #38
  br label %ehcleanup68

invoke.cont64:                                    ; preds = %invoke.cont49, %log_gamma_distrib.exit
  %65 = bitcast %"struct.adept::internal::BinaryOpScalarRight"* %ref.tmp59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #38
  %conv61 = sitofp i32 %k to double
  %mul62 = fmul fast double %sub10, %conv61
  %66 = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarRight", %"struct.adept::internal::BinaryOpScalarRight"* %ref.tmp59, i64 0, i32 0
  store %"class.adept::Active"* %out, %"class.adept::Active"** %66, align 16, !tbaa !61, !alias.scope !559
  %data.i.i.i = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarRight", %"struct.adept::internal::BinaryOpScalarRight"* %ref.tmp59, i64 0, i32 1, i32 0, i32 0
  %vecinit.i.i.i.i = insertelement <2 x double> undef, double %mul62, i32 0
  %vecinit1.i.i.i.i = shufflevector <2 x double> %vecinit.i.i.i.i, <2 x double> undef, <2 x i32> zeroinitializer
  store <2 x double> %vecinit1.i.i.i.i, <2 x double>* %data.i.i.i, align 16, !tbaa !21, !alias.scope !559
  %67 = bitcast %"struct.adept::internal::BinaryOpScalarRight"* %ref.tmp59 to %"struct.adept::Expression.90"*
  invoke void @_ZN5adept6ActiveIdEC2IdNS_8internal19BinaryOpScalarRightIdS1_NS3_8SubtractEdEEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result, %"struct.adept::Expression.90"* nonnull align 1 dereferenceable(1) %67, i8* null)
          to label %invoke.cont65 unwind label %lpad63

invoke.cont65:                                    ; preds = %invoke.cont64
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #38
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %out) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #38
  ret void

lpad63:                                           ; preds = %invoke.cont64
  %68 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #38
  br label %ehcleanup68

ehcleanup68:                                      ; preds = %lpad63, %ehcleanup57
  %.pn26.pn.pn = phi { i8*, i32 } [ %.pn26.pn, %ehcleanup57 ], [ %68, %lpad63 ]
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %out) #38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #38
  resume { i8*, i32 } %.pn26.pn.pn
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %n_allocated_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i, align 4, !tbaa !400
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %add.i = add nsw i32 %2, 1
  %cmp.not.i = icmp sgt i32 %1, %add.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i, label %_ZN5adept8internal16StackStorageOrig11check_spaceEi.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 1)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig11check_spaceEi.exit

_ZN5adept8internal16StackStorageOrig11check_spaceEi.exit: ; preds = %entry, %if.then.i
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i ]
  %val_.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %rhs, i64 0, i32 0
  %7 = load double, double* %val_.i.i, align 8, !tbaa !467
  %gradient_index_.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %rhs, i64 0, i32 1
  %multiplier_.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %8 = load double*, double** %multiplier_.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %9 = load i32, i32* %n_operations_.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i = sext i32 %9 to i64
  %arrayidx.i.i.i = getelementptr inbounds double, double* %8, i64 %idxprom.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i, align 8, !tbaa !70
  %10 = load i32, i32* %gradient_index_.i.i, align 8, !tbaa !47
  %index_.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %11 = load i32*, i32** %index_.i.i.i, align 8, !tbaa !366
  %inc.i.i.i = add nsw i32 %9, 1
  store i32 %inc.i.i.i, i32* %n_operations_.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i = getelementptr inbounds i32, i32* %11, i64 %idxprom.i.i.i
  store i32 %10, i32* %arrayidx4.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %7, double* %val_, align 8, !tbaa !467
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %12 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %13 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i1 = icmp slt i32 %12, %13
  br i1 %cmp.not.i1, label %entry.if.end_crit_edge.i, label %if.then.i2

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig11check_spaceEi.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i2:                                       ; preds = %_ZN5adept8internal16StackStorageOrig11check_spaceEi.exit
  %mul.i.i = shl nsw i32 %13, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %17) #44
  %18 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %19 = load i8*, i8** %18, align 8, !tbaa !363
  %conv5.i.i = sext i32 %12 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %19, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %19, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i2
  tail call void @_ZdaPv(i8* nonnull %19) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i2
  %.pre1.i = phi i32 [ %12, %if.then.i2 ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %18, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %20 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %21 = phi i32 [ %12, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %22 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %20, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %23 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %21 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %22, i64 %idxprom.i, i32 0
  store i32 %23, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i3 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %24 = load i32, i32* %n_operations_.i3, align 8, !tbaa !399
  %inc.i = add nsw i32 %21, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %22, i64 %idxprom.i, i32 1
  store i32 %24, i32* %end_plus_one.i, align 4, !tbaa !371
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !400
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !399
  %add.i.i = add nsw i32 %2, 2
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 2)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit: ; preds = %entry, %if.then.i.i
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.70"* %rhs to %"class.adept::Active"**
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !562
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 0
  %8 = load double, double* %val_.i.i.i.i, align 8, !tbaa !467
  %right.i.i2.i = getelementptr inbounds %"struct.adept::Expression.70", %"struct.adept::Expression.70"* %rhs, i64 8
  %9 = bitcast %"struct.adept::Expression.70"* %right.i.i2.i to %"class.adept::Active"**
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %9, align 8, !tbaa !564
  %val_.i4.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 0
  %11 = load double, double* %val_.i4.i.i.i, align 8, !tbaa !467
  %mul.i.i.i.i = fmul fast double %11, %8
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %12 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %13 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i = sext i32 %13 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i.i.i
  store double %11, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !70
  %14 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %15 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i.i = add nsw i32 %13, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i.i.i
  store i32 %14, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %16 = load double, double* %val_.i.i.i.i, align 8, !tbaa !467
  %gradient_index_.i.i.i5.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 1
  %17 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i8.i.i = sext i32 %17 to i64
  %arrayidx.i.i.i.i9.i.i = getelementptr inbounds double, double* %12, i64 %idxprom.i.i.i.i8.i.i
  store double %16, double* %arrayidx.i.i.i.i9.i.i, align 8, !tbaa !70
  %18 = load i32, i32* %gradient_index_.i.i.i5.i.i, align 8, !tbaa !47
  %inc.i.i.i.i11.i.i = add nsw i32 %17, 1
  store i32 %inc.i.i.i.i11.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i12.i.i = getelementptr inbounds i32, i32* %15, i64 %idxprom.i.i.i.i8.i.i
  store i32 %18, i32* %arrayidx4.i.i.i.i12.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %mul.i.i.i.i, double* %val_, align 8, !tbaa !467
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %19 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %20 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i = icmp slt i32 %19, %20
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %mul.i.i = shl nsw i32 %20, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %21 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 -1, i64 %23
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %24) #44
  %25 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %26 = load i8*, i8** %25, align 8, !tbaa !363
  %conv5.i.i = sext i32 %19 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %26, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %26, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %26) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre1.i = phi i32 [ %19, %if.then.i ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %25, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %27 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %28 = phi i32 [ %19, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %29 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %27, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %30 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %28 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %29, i64 %idxprom.i, i32 0
  store i32 %30, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %31 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i = add nsw i32 %28, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %29, i64 %idxprom.i, i32 1
  store i32 %31, i32* %end_plus_one.i, align 4, !tbaa !371
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.72"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !400
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !399
  %add.i.i = add nsw i32 %2, 3
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 3)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit: ; preds = %entry, %if.then.i.i
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.72"* %rhs to %"class.adept::Active"**
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !565
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 0
  %8 = load double, double* %val_.i.i.i.i, align 8, !tbaa !467
  %left.i.i.i.i2.i = getelementptr inbounds %"struct.adept::Expression.72", %"struct.adept::Expression.72"* %rhs, i64 8
  %9 = bitcast %"struct.adept::Expression.72"* %left.i.i.i.i2.i to %"class.adept::Active"**
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %9, align 8, !tbaa !562
  %val_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 0
  %11 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !467
  %right.i.i.i.i.i = getelementptr inbounds %"struct.adept::Expression.72", %"struct.adept::Expression.72"* %rhs, i64 16
  %12 = bitcast %"struct.adept::Expression.72"* %right.i.i.i.i.i to %"class.adept::Active"**
  %13 = load %"class.adept::Active"*, %"class.adept::Active"** %12, align 8, !tbaa !564
  %val_.i4.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %13, i64 0, i32 0
  %14 = load double, double* %val_.i4.i.i.i.i.i, align 8, !tbaa !467
  %mul.i.i.i.i.i.i = fmul fast double %14, %11
  %add.i.i.i.i = fadd fast double %mul.i.i.i.i.i.i, %8
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %15 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %16 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i = sext i32 %16 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %15, i64 %idxprom.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !70
  %17 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %18 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i.i = add nsw i32 %16, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %18, i64 %idxprom.i.i.i.i.i.i
  store i32 %17, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %19 = load double, double* %val_.i4.i.i.i.i.i, align 8, !tbaa !467
  %gradient_index_.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 1
  %20 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i.i.i.i = sext i32 %20 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %15, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store double %19, double* %arrayidx.i.i.i.i.i.i.i.i.i, align 8, !tbaa !70
  %21 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i.i.i.i = add nsw i32 %20, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %18, i64 %idxprom.i.i.i.i.i.i.i.i.i
  store i32 %21, i32* %arrayidx4.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %22 = load double, double* %val_.i.i.i.i.i.i, align 8, !tbaa !467
  %gradient_index_.i.i.i5.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %13, i64 0, i32 1
  %23 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i8.i.i.i.i.i = sext i32 %23 to i64
  %arrayidx.i.i.i.i9.i.i.i.i.i = getelementptr inbounds double, double* %15, i64 %idxprom.i.i.i.i8.i.i.i.i.i
  store double %22, double* %arrayidx.i.i.i.i9.i.i.i.i.i, align 8, !tbaa !70
  %24 = load i32, i32* %gradient_index_.i.i.i5.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i11.i.i.i.i.i = add nsw i32 %23, 1
  store i32 %inc.i.i.i.i11.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i12.i.i.i.i.i = getelementptr inbounds i32, i32* %18, i64 %idxprom.i.i.i.i8.i.i.i.i.i
  store i32 %24, i32* %arrayidx4.i.i.i.i12.i.i.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %add.i.i.i.i, double* %val_, align 8, !tbaa !467
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %25 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %26 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i = icmp slt i32 %25, %26
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit
  %mul.i.i = shl nsw i32 %26, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %27 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %28 = extractvalue { i64, i1 } %27, 1
  %29 = extractvalue { i64, i1 } %27, 0
  %30 = select i1 %28, i64 -1, i64 %29
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %30) #44
  %31 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %32 = load i8*, i8** %31, align 8, !tbaa !363
  %conv5.i.i = sext i32 %25 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %32, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %32, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %32) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre1.i = phi i32 [ %25, %if.then.i ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %31, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %33 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %34 = phi i32 [ %25, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %35 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %33, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %36 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %34 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %35, i64 %idxprom.i, i32 0
  store i32 %36, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %37 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i = add nsw i32 %34, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %35, i64 %idxprom.i, i32 1
  store i32 %37, i32* %end_plus_one.i, align 4, !tbaa !371
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %rhs, i8* %dummy) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %inc.i = add nsw i32 %1, 1
  store i32 %inc.i, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4
  %2 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !358
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %3, %2
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 6
  %5 = load i32, i32* %i_gradient_.i, align 8, !tbaa !387
  %inc2.i = add nsw i32 %5, 1
  store i32 %inc2.i, i32* %i_gradient_.i, align 8, !tbaa !387
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 8
  %6 = load i32, i32* %max_gradient_.i, align 8, !tbaa !388
  %cmp.not.i = icmp slt i32 %5, %6
  br i1 %cmp.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  store i32 %inc2.i, i32* %max_gradient_.i, align 8, !tbaa !388
  br label %_ZN5adept5Stack17register_gradientEv.exit

if.else.i:                                        ; preds = %entry
  %7 = bitcast %"struct.std::__detail::_List_node_base"* %3 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %3, i64 1
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i to i32*
  %8 = load i32, i32* %start.i, align 4, !tbaa !379
  %inc11.i = add nsw i32 %8, 1
  store i32 %inc11.i, i32* %start.i, align 4, !tbaa !379
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 1, i32 0, i64 4
  %9 = bitcast i8* %end.i to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !377
  %cmp13.not.i = icmp slt i32 %8, %10
  br i1 %cmp13.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.else.i
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 5, i32 0
  %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !380
  %cmp.i8.i = icmp eq %"struct.std::__detail::_List_node_base"* %11, %3
  br i1 %cmp.i8.i, label %if.then18.i, label %if.end24.i

if.then18.i:                                      ; preds = %if.then14.i
  store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !385
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then18.i, %if.then14.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  %sub.i.i.i.i = add i64 %12, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %3) #38
  %13 = bitcast %"struct.std::__detail::_List_node_base"* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #38
  %.pre = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %14 = bitcast %"class.adept::internal::StackStorageOrig"* %.pre to %"class.adept::Stack"*
  br label %_ZN5adept5Stack17register_gradientEv.exit

_ZN5adept5Stack17register_gradientEv.exit:        ; preds = %if.then.i, %if.then4.i, %if.else.i, %if.end24.i
  %15 = phi %"class.adept::Stack"* [ %14, %if.end24.i ], [ %0, %if.else.i ], [ %0, %if.then4.i ], [ %0, %if.then.i ]
  %16 = phi %"class.adept::internal::StackStorageOrig"* [ %.pre, %if.end24.i ], [ %4, %if.else.i ], [ %4, %if.then4.i ], [ %4, %if.then.i ]
  %return_val.0.i = phi i32 [ %8, %if.end24.i ], [ %8, %if.else.i ], [ %5, %if.then4.i ], [ %5, %if.then.i ]
  store i32 %return_val.0.i, i32* %gradient_index_, align 8, !tbaa !469
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 6
  %17 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !400
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 5
  %18 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !399
  %add.i.i = add nsw i32 %18, 2
  %cmp.not.i.i = icmp sgt i32 %17, %add.i.i
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %16, i32 2)
  %.pre4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %19 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre4, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit: ; preds = %_ZN5adept5Stack17register_gradientEv.exit, %if.then.i.i
  %20 = phi %"class.adept::internal::StackStorageOrig"* [ %16, %_ZN5adept5Stack17register_gradientEv.exit ], [ %19, %if.then.i.i ]
  %21 = phi %"class.adept::Stack"* [ %15, %_ZN5adept5Stack17register_gradientEv.exit ], [ %.pre4, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.70"* %rhs to %"class.adept::Active"**
  %22 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !562
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 0
  %23 = load double, double* %val_.i.i.i.i, align 8, !tbaa !467
  %right.i.i2.i = getelementptr inbounds %"struct.adept::Expression.70", %"struct.adept::Expression.70"* %rhs, i64 8
  %24 = bitcast %"struct.adept::Expression.70"* %right.i.i2.i to %"class.adept::Active"**
  %25 = load %"class.adept::Active"*, %"class.adept::Active"** %24, align 8, !tbaa !564
  %val_.i4.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %25, i64 0, i32 0
  %26 = load double, double* %val_.i4.i.i.i, align 8, !tbaa !467
  %mul.i.i.i.i = fmul fast double %26, %23
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 1
  %27 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 5
  %28 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i = sext i32 %28 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %27, i64 %idxprom.i.i.i.i.i.i
  store double %26, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !70
  %29 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 2
  %30 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i.i = add nsw i32 %28, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %30, i64 %idxprom.i.i.i.i.i.i
  store i32 %29, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %31 = load double, double* %val_.i.i.i.i, align 8, !tbaa !467
  %gradient_index_.i.i.i5.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %25, i64 0, i32 1
  %32 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i8.i.i = sext i32 %32 to i64
  %arrayidx.i.i.i.i9.i.i = getelementptr inbounds double, double* %27, i64 %idxprom.i.i.i.i8.i.i
  store double %31, double* %arrayidx.i.i.i.i9.i.i, align 8, !tbaa !70
  %33 = load i32, i32* %gradient_index_.i.i.i5.i.i, align 8, !tbaa !47
  %inc.i.i.i.i11.i.i = add nsw i32 %32, 1
  store i32 %inc.i.i.i.i11.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i12.i.i = getelementptr inbounds i32, i32* %30, i64 %idxprom.i.i.i.i8.i.i
  store i32 %33, i32* %arrayidx4.i.i.i.i12.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %mul.i.i.i.i, double* %val_, align 8, !tbaa !467
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 3
  %34 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 4
  %35 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i1 = icmp slt i32 %34, %35
  br i1 %cmp.not.i1, label %entry.if.end_crit_edge.i, label %if.then.i2

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i2:                                       ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %mul.i.i = shl nsw i32 %35, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %37 = extractvalue { i64, i1 } %36, 1
  %38 = extractvalue { i64, i1 } %36, 0
  %39 = select i1 %37, i64 -1, i64 %38
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %39) #44
  %40 = bitcast %"class.adept::internal::StackStorageOrig"* %20 to i8**
  %41 = load i8*, i8** %40, align 8, !tbaa !363
  %conv5.i.i = sext i32 %34 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %41, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %41, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i2
  tail call void @_ZdaPv(i8* nonnull %41) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i2
  %.pre1.i = phi i32 [ %34, %if.then.i2 ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %40, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %42 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %43 = phi i32 [ %34, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %44 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %42, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %45 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %43 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %44, i64 %idxprom.i, i32 0
  store i32 %45, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 5
  %46 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i3 = add nsw i32 %43, 1
  store i32 %inc.i3, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %44, i64 %idxprom.i, i32 1
  store i32 %46, i32* %end_plus_one.i, align 4, !tbaa !371
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpENS4_IdS1_NS3_8SubtractES1_EEEEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.75"* nonnull align 1 dereferenceable(1) %rhs) local_unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !400
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i64 0, i32 5
  %2 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !399
  %add.i.i = add nsw i32 %2, 3
  %cmp.not.i.i = icmp sgt i32 %1, %add.i.i
  %3 = bitcast %"class.adept::internal::StackStorageOrig"* %0 to %"class.adept::Stack"*
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0, i32 3)
  %.pre = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit: ; preds = %entry, %if.then.i.i
  %5 = phi %"class.adept::internal::StackStorageOrig"* [ %0, %entry ], [ %4, %if.then.i.i ]
  %6 = phi %"class.adept::Stack"* [ %3, %entry ], [ %.pre, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.75"* %rhs to %"class.adept::Active"**
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !567
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 0
  %8 = load double, double* %val_.i.i.i.i, align 8, !tbaa !467
  %left.i.i.i.i.i2.i = getelementptr inbounds %"struct.adept::Expression.75", %"struct.adept::Expression.75"* %rhs, i64 8
  %9 = bitcast %"struct.adept::Expression.75"* %left.i.i.i.i.i2.i to %"class.adept::Active"**
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %9, align 8, !tbaa !571
  %val_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 0
  %11 = load double, double* %val_.i.i.i.i.i.i.i, align 8, !tbaa !467
  %right.i.i.i.i.i3.i = getelementptr inbounds %"struct.adept::Expression.75", %"struct.adept::Expression.75"* %rhs, i64 16
  %12 = bitcast %"struct.adept::Expression.75"* %right.i.i.i.i.i3.i to %"class.adept::Active"**
  %13 = load %"class.adept::Active"*, %"class.adept::Active"** %12, align 8, !tbaa !572
  %val_.i4.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %13, i64 0, i32 0
  %14 = load double, double* %val_.i4.i.i.i.i.i.i, align 8, !tbaa !467
  %sub.i.i.i.i.i.i.i = fsub fast double %11, %14
  %15 = tail call fast double @llvm.exp.f64(double %sub.i.i.i.i.i.i.i) #38
  %add.i.i.i.i = fadd fast double %15, %8
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 1
  %16 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 5
  %17 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i = sext i32 %17 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %16, i64 %idxprom.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !70
  %18 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %6, i64 0, i32 0, i32 2
  %19 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i.i = add nsw i32 %17, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %19, i64 %idxprom.i.i.i.i.i.i
  store i32 %18, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %gradient_index_.i.i.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 0, i32 1
  %20 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i.i.i.i.i = sext i32 %20 to i64
  %arrayidx.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds double, double* %16, i64 %idxprom.i.i.i.i.i.i.i.i.i.i
  store double %15, double* %arrayidx.i.i.i.i.i.i.i.i.i.i, align 8, !tbaa !70
  %21 = load i32, i32* %gradient_index_.i.i.i.i.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i.i.i.i.i = add nsw i32 %20, 1
  store i32 %inc.i.i.i.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %19, i64 %idxprom.i.i.i.i.i.i.i.i.i.i
  store i32 %21, i32* %arrayidx4.i.i.i.i.i.i.i.i.i.i, align 4, !tbaa !47
  %fneg.i.i.i.i.i.i.i.i = fneg fast double %15
  %gradient_index_.i.i.i5.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %13, i64 0, i32 1
  %22 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i8.i.i.i.i.i.i = sext i32 %22 to i64
  %arrayidx.i.i.i.i9.i.i.i.i.i.i = getelementptr inbounds double, double* %16, i64 %idxprom.i.i.i.i8.i.i.i.i.i.i
  store double %fneg.i.i.i.i.i.i.i.i, double* %arrayidx.i.i.i.i9.i.i.i.i.i.i, align 8, !tbaa !70
  %23 = load i32, i32* %gradient_index_.i.i.i5.i.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i11.i.i.i.i.i.i = add nsw i32 %22, 1
  store i32 %inc.i.i.i.i11.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i12.i.i.i.i.i.i = getelementptr inbounds i32, i32* %19, i64 %idxprom.i.i.i.i8.i.i.i.i.i.i
  store i32 %23, i32* %arrayidx4.i.i.i.i12.i.i.i.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %add.i.i.i.i, double* %val_, align 8, !tbaa !467
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 3
  %24 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 4
  %25 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i = icmp slt i32 %24, %25
  br i1 %cmp.not.i, label %entry.if.end_crit_edge.i, label %if.then.i

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i:                                        ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv.exit
  %mul.i.i = shl nsw i32 %25, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %26 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = select i1 %27, i64 -1, i64 %28
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %29) #44
  %30 = bitcast %"class.adept::internal::StackStorageOrig"* %5 to i8**
  %31 = load i8*, i8** %30, align 8, !tbaa !363
  %conv5.i.i = sext i32 %24 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %31, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %31, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i
  tail call void @_ZdaPv(i8* nonnull %31) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i
  %.pre1.i = phi i32 [ %24, %if.then.i ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %30, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %32 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %33 = phi i32 [ %24, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %34 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %32, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %35 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %33 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %34, i64 %idxprom.i, i32 0
  store i32 %35, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %5, i64 0, i32 5
  %36 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i = add nsw i32 %33, 1
  store i32 %inc.i, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %34, i64 %idxprom.i, i32 1
  store i32 %36, i32* %end_plus_one.i, align 4, !tbaa !371
  ret %"class.adept::Active"* %this
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdNS3_14UnaryOperationIdNS3_3LogES1_EENS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSC_4rankLi0EsrSC_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.81"* nonnull align 1 dereferenceable(1) %rhs, i8* %dummy) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %inc.i = add nsw i32 %1, 1
  store i32 %inc.i, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4
  %2 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !358
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %3, %2
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 6
  %5 = load i32, i32* %i_gradient_.i, align 8, !tbaa !387
  %inc2.i = add nsw i32 %5, 1
  store i32 %inc2.i, i32* %i_gradient_.i, align 8, !tbaa !387
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 8
  %6 = load i32, i32* %max_gradient_.i, align 8, !tbaa !388
  %cmp.not.i = icmp slt i32 %5, %6
  br i1 %cmp.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  store i32 %inc2.i, i32* %max_gradient_.i, align 8, !tbaa !388
  br label %_ZN5adept5Stack17register_gradientEv.exit

if.else.i:                                        ; preds = %entry
  %7 = bitcast %"struct.std::__detail::_List_node_base"* %3 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %3, i64 1
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i to i32*
  %8 = load i32, i32* %start.i, align 4, !tbaa !379
  %inc11.i = add nsw i32 %8, 1
  store i32 %inc11.i, i32* %start.i, align 4, !tbaa !379
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 1, i32 0, i64 4
  %9 = bitcast i8* %end.i to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !377
  %cmp13.not.i = icmp slt i32 %8, %10
  br i1 %cmp13.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.else.i
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 5, i32 0
  %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !380
  %cmp.i8.i = icmp eq %"struct.std::__detail::_List_node_base"* %11, %3
  br i1 %cmp.i8.i, label %if.then18.i, label %if.end24.i

if.then18.i:                                      ; preds = %if.then14.i
  store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !385
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then18.i, %if.then14.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  %sub.i.i.i.i = add i64 %12, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %3) #38
  %13 = bitcast %"struct.std::__detail::_List_node_base"* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #38
  %.pre = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %14 = bitcast %"class.adept::internal::StackStorageOrig"* %.pre to %"class.adept::Stack"*
  br label %_ZN5adept5Stack17register_gradientEv.exit

_ZN5adept5Stack17register_gradientEv.exit:        ; preds = %if.then.i, %if.then4.i, %if.else.i, %if.end24.i
  %15 = phi %"class.adept::Stack"* [ %14, %if.end24.i ], [ %0, %if.else.i ], [ %0, %if.then4.i ], [ %0, %if.then.i ]
  %16 = phi %"class.adept::internal::StackStorageOrig"* [ %.pre, %if.end24.i ], [ %4, %if.else.i ], [ %4, %if.then4.i ], [ %4, %if.then.i ]
  %return_val.0.i = phi i32 [ %8, %if.end24.i ], [ %8, %if.else.i ], [ %5, %if.then4.i ], [ %5, %if.then.i ]
  store i32 %return_val.0.i, i32* %gradient_index_, align 8, !tbaa !469
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 6
  %17 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !400
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 5
  %18 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !399
  %add.i.i = add nsw i32 %18, 2
  %cmp.not.i.i = icmp sgt i32 %17, %add.i.i
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %16, i32 2)
  %.pre4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %19 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre4, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit: ; preds = %_ZN5adept5Stack17register_gradientEv.exit, %if.then.i.i
  %20 = phi %"class.adept::internal::StackStorageOrig"* [ %16, %_ZN5adept5Stack17register_gradientEv.exit ], [ %19, %if.then.i.i ]
  %21 = phi %"class.adept::Stack"* [ %15, %_ZN5adept5Stack17register_gradientEv.exit ], [ %.pre4, %if.then.i.i ]
  %arg.i.i.i.i = bitcast %"struct.adept::Expression.81"* %rhs to %"class.adept::Active"**
  %22 = load %"class.adept::Active"*, %"class.adept::Active"** %arg.i.i.i.i, align 8, !tbaa !573
  %val_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 0
  %23 = load double, double* %val_.i.i.i.i.i, align 8, !tbaa !467
  %24 = tail call fast double @llvm.log.f64(double %23) #38
  %right.i.i.i = getelementptr inbounds %"struct.adept::Expression.81", %"struct.adept::Expression.81"* %rhs, i64 8
  %25 = bitcast %"struct.adept::Expression.81"* %right.i.i.i to %"class.adept::Active"**
  %26 = load %"class.adept::Active"*, %"class.adept::Active"** %25, align 8, !tbaa !575
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %26, i64 0, i32 0
  %27 = load double, double* %val_.i.i.i.i, align 8, !tbaa !467
  %add.i.i.i.i = fadd fast double %27, %24
  %div.i.i.i.i.i.i = fdiv fast double 1.000000e+00, %23
  %gradient_index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 1
  %28 = load double*, double** %multiplier_.i.i.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 5
  %29 = load i32, i32* %n_operations_.i.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i.i = sext i32 %29 to i64
  %arrayidx.i.i.i.i.i.i.i = getelementptr inbounds double, double* %28, i64 %idxprom.i.i.i.i.i.i.i
  store double %div.i.i.i.i.i.i, double* %arrayidx.i.i.i.i.i.i.i, align 8, !tbaa !70
  %30 = load i32, i32* %gradient_index_.i.i.i.i.i.i, align 4, !tbaa !47
  %index_.i.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 2
  %31 = load i32*, i32** %index_.i.i.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i.i.i = add nsw i32 %29, 1
  store i32 %inc.i.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i.i = getelementptr inbounds i32, i32* %31, i64 %idxprom.i.i.i.i.i.i.i
  store i32 %30, i32* %arrayidx4.i.i.i.i.i.i.i, align 4, !tbaa !47
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %26, i64 0, i32 1
  %32 = load i32, i32* %n_operations_.i.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i = sext i32 %32 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %28, i64 %idxprom.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !70
  %33 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %inc.i.i.i.i.i.i = add nsw i32 %32, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %31, i64 %idxprom.i.i.i.i.i.i
  store i32 %33, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %add.i.i.i.i, double* %val_, align 8, !tbaa !467
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 3
  %34 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 4
  %35 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i1 = icmp slt i32 %34, %35
  br i1 %cmp.not.i1, label %entry.if.end_crit_edge.i, label %if.then.i2

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i2:                                       ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %mul.i.i = shl nsw i32 %35, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %37 = extractvalue { i64, i1 } %36, 1
  %38 = extractvalue { i64, i1 } %36, 0
  %39 = select i1 %37, i64 -1, i64 %38
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %39) #44
  %40 = bitcast %"class.adept::internal::StackStorageOrig"* %20 to i8**
  %41 = load i8*, i8** %40, align 8, !tbaa !363
  %conv5.i.i = sext i32 %34 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %41, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %41, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i2
  tail call void @_ZdaPv(i8* nonnull %41) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i2
  %.pre1.i = phi i32 [ %34, %if.then.i2 ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %40, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %42 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %43 = phi i32 [ %34, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %44 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %42, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %45 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %43 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %44, i64 %idxprom.i, i32 0
  store i32 %45, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 5
  %46 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i3 = add nsw i32 %43, 1
  store i32 %inc.i3, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %44, i64 %idxprom.i, i32 1
  store i32 %46, i32* %end_plus_one.i, align 4, !tbaa !371
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IiEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, i32* nonnull align 4 dereferenceable(4) %rhs, i8* %dummy) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  %0 = load i32, i32* %rhs, align 4, !tbaa !47
  %conv = sitofp i32 %0 to double
  store double %conv, double* %val_, align 8, !tbaa !467
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 9
  %2 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %inc.i = add nsw i32 %2, 1
  store i32 %inc.i, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !358
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %4, %3
  %5 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 6
  %6 = load i32, i32* %i_gradient_.i, align 8, !tbaa !387
  %inc2.i = add nsw i32 %6, 1
  store i32 %inc2.i, i32* %i_gradient_.i, align 8, !tbaa !387
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 8
  %7 = load i32, i32* %max_gradient_.i, align 8, !tbaa !388
  %cmp.not.i = icmp slt i32 %6, %7
  br i1 %cmp.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  store i32 %inc2.i, i32* %max_gradient_.i, align 8, !tbaa !388
  br label %_ZN5adept5Stack17register_gradientEv.exit

if.else.i:                                        ; preds = %entry
  %8 = bitcast %"struct.std::__detail::_List_node_base"* %4 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %4, i64 1
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i to i32*
  %9 = load i32, i32* %start.i, align 4, !tbaa !379
  %inc11.i = add nsw i32 %9, 1
  store i32 %inc11.i, i32* %start.i, align 4, !tbaa !379
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %8, i64 0, i32 1, i32 0, i64 4
  %10 = bitcast i8* %end.i to i32*
  %11 = load i32, i32* %10, align 4, !tbaa !377
  %cmp13.not.i = icmp slt i32 %9, %11
  br i1 %cmp13.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.else.i
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 5, i32 0
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !380
  %cmp.i8.i = icmp eq %"struct.std::__detail::_List_node_base"* %12, %4
  br i1 %cmp.i8.i, label %if.then18.i, label %if.end24.i

if.then18.i:                                      ; preds = %if.then14.i
  store %"struct.std::__detail::_List_node_base"* %3, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !385
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then18.i, %if.then14.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  %sub.i.i.i.i = add i64 %13, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %4) #38
  %14 = bitcast %"struct.std::__detail::_List_node_base"* %4 to i8*
  tail call void @_ZdlPv(i8* nonnull %14) #38
  %.pre = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  br label %_ZN5adept5Stack17register_gradientEv.exit

_ZN5adept5Stack17register_gradientEv.exit:        ; preds = %if.then.i, %if.then4.i, %if.else.i, %if.end24.i
  %15 = phi %"class.adept::internal::StackStorageOrig"* [ %.pre, %if.end24.i ], [ %5, %if.else.i ], [ %5, %if.then4.i ], [ %5, %if.then.i ]
  %return_val.0.i = phi i32 [ %9, %if.end24.i ], [ %9, %if.else.i ], [ %6, %if.then4.i ], [ %6, %if.then.i ]
  store i32 %return_val.0.i, i32* %gradient_index_, align 8, !tbaa !469
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 3
  %16 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 4
  %17 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i1 = icmp slt i32 %16, %17
  br i1 %cmp.not.i1, label %entry.if.end_crit_edge.i, label %if.then.i2

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i2:                                       ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  %mul.i.i = shl nsw i32 %17, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %18 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %19 = extractvalue { i64, i1 } %18, 1
  %20 = extractvalue { i64, i1 } %18, 0
  %21 = select i1 %19, i64 -1, i64 %20
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %21) #44
  %22 = bitcast %"class.adept::internal::StackStorageOrig"* %15 to i8**
  %23 = load i8*, i8** %22, align 8, !tbaa !363
  %conv5.i.i = sext i32 %16 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %23, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %23, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i2
  tail call void @_ZdaPv(i8* nonnull %23) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i2
  %.pre1.i = phi i32 [ %16, %if.then.i2 ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %22, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %24 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  %.pre4 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %25 = phi i32 [ %return_val.0.i, %entry.if.end_crit_edge.i ], [ %.pre4, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %26 = phi i32 [ %16, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %27 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %24, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %idxprom.i = sext i32 %26 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %27, i64 %idxprom.i, i32 0
  store i32 %25, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %15, i64 0, i32 5
  %28 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i3 = add nsw i32 %26, 1
  store i32 %inc.i3, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %27, i64 %idxprom.i, i32 1
  store i32 %28, i32* %end_plus_one.i, align 4, !tbaa !371
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %rhs, i8* %dummy) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %inc.i = add nsw i32 %1, 1
  store i32 %inc.i, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4
  %2 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !358
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %3, %2
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 6
  %5 = load i32, i32* %i_gradient_.i, align 8, !tbaa !387
  %inc2.i = add nsw i32 %5, 1
  store i32 %inc2.i, i32* %i_gradient_.i, align 8, !tbaa !387
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 8
  %6 = load i32, i32* %max_gradient_.i, align 8, !tbaa !388
  %cmp.not.i = icmp slt i32 %5, %6
  br i1 %cmp.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  store i32 %inc2.i, i32* %max_gradient_.i, align 8, !tbaa !388
  br label %_ZN5adept5Stack17register_gradientEv.exit

if.else.i:                                        ; preds = %entry
  %7 = bitcast %"struct.std::__detail::_List_node_base"* %3 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %3, i64 1
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i to i32*
  %8 = load i32, i32* %start.i, align 4, !tbaa !379
  %inc11.i = add nsw i32 %8, 1
  store i32 %inc11.i, i32* %start.i, align 4, !tbaa !379
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 1, i32 0, i64 4
  %9 = bitcast i8* %end.i to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !377
  %cmp13.not.i = icmp slt i32 %8, %10
  br i1 %cmp13.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.else.i
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 5, i32 0
  %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !380
  %cmp.i8.i = icmp eq %"struct.std::__detail::_List_node_base"* %11, %3
  br i1 %cmp.i8.i, label %if.then18.i, label %if.end24.i

if.then18.i:                                      ; preds = %if.then14.i
  store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !385
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then18.i, %if.then14.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  %sub.i.i.i.i = add i64 %12, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %3) #38
  %13 = bitcast %"struct.std::__detail::_List_node_base"* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #38
  %.pre = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %14 = bitcast %"class.adept::internal::StackStorageOrig"* %.pre to %"class.adept::Stack"*
  br label %_ZN5adept5Stack17register_gradientEv.exit

_ZN5adept5Stack17register_gradientEv.exit:        ; preds = %if.then.i, %if.then4.i, %if.else.i, %if.end24.i
  %15 = phi %"class.adept::Stack"* [ %14, %if.end24.i ], [ %0, %if.else.i ], [ %0, %if.then4.i ], [ %0, %if.then.i ]
  %16 = phi %"class.adept::internal::StackStorageOrig"* [ %.pre, %if.end24.i ], [ %4, %if.else.i ], [ %4, %if.then4.i ], [ %4, %if.then.i ]
  %return_val.0.i = phi i32 [ %8, %if.end24.i ], [ %8, %if.else.i ], [ %5, %if.then4.i ], [ %5, %if.then.i ]
  store i32 %return_val.0.i, i32* %gradient_index_, align 8, !tbaa !469
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 6
  %17 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !400
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 5
  %18 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !399
  %add.i.i = add nsw i32 %18, 2
  %cmp.not.i.i = icmp sgt i32 %17, %add.i.i
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %16, i32 2)
  %.pre4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %19 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre4, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit: ; preds = %_ZN5adept5Stack17register_gradientEv.exit, %if.then.i.i
  %20 = phi %"class.adept::internal::StackStorageOrig"* [ %16, %_ZN5adept5Stack17register_gradientEv.exit ], [ %19, %if.then.i.i ]
  %21 = phi %"class.adept::Stack"* [ %15, %_ZN5adept5Stack17register_gradientEv.exit ], [ %.pre4, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.52"* %rhs to %"class.adept::Active"**
  %22 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 8, !tbaa !533
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 0
  %23 = load double, double* %val_.i.i.i.i, align 8, !tbaa !467
  %right.i.i.i = getelementptr inbounds %"struct.adept::Expression.52", %"struct.adept::Expression.52"* %rhs, i64 8
  %24 = bitcast %"struct.adept::Expression.52"* %right.i.i.i to %"class.adept::Active"**
  %25 = load %"class.adept::Active"*, %"class.adept::Active"** %24, align 8, !tbaa !535
  %val_.i3.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %25, i64 0, i32 0
  %26 = load double, double* %val_.i3.i.i.i, align 8, !tbaa !467
  %add.i.i.i.i = fadd fast double %26, %23
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 1
  %27 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 5
  %28 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i = sext i32 %28 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %27, i64 %idxprom.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !70
  %29 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 2
  %30 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i.i = add nsw i32 %28, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %30, i64 %idxprom.i.i.i.i.i.i
  store i32 %29, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %gradient_index_.i.i.i4.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %25, i64 0, i32 1
  %31 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i7.i.i = sext i32 %31 to i64
  %arrayidx.i.i.i.i8.i.i = getelementptr inbounds double, double* %27, i64 %idxprom.i.i.i.i7.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i8.i.i, align 8, !tbaa !70
  %32 = load i32, i32* %gradient_index_.i.i.i4.i.i, align 8, !tbaa !47
  %inc.i.i.i.i10.i.i = add nsw i32 %31, 1
  store i32 %inc.i.i.i.i10.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i11.i.i = getelementptr inbounds i32, i32* %30, i64 %idxprom.i.i.i.i7.i.i
  store i32 %32, i32* %arrayidx4.i.i.i.i11.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %add.i.i.i.i, double* %val_, align 8, !tbaa !467
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 3
  %33 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 4
  %34 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i1 = icmp slt i32 %33, %34
  br i1 %cmp.not.i1, label %entry.if.end_crit_edge.i, label %if.then.i2

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i2:                                       ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv.exit
  %mul.i.i = shl nsw i32 %34, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %35 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %36 = extractvalue { i64, i1 } %35, 1
  %37 = extractvalue { i64, i1 } %35, 0
  %38 = select i1 %36, i64 -1, i64 %37
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %38) #44
  %39 = bitcast %"class.adept::internal::StackStorageOrig"* %20 to i8**
  %40 = load i8*, i8** %39, align 8, !tbaa !363
  %conv5.i.i = sext i32 %33 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %40, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %40, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i2
  tail call void @_ZdaPv(i8* nonnull %40) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i2
  %.pre1.i = phi i32 [ %33, %if.then.i2 ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %39, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %41 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %42 = phi i32 [ %33, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %43 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %41, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %44 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %42 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %43, i64 %idxprom.i, i32 0
  store i32 %44, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 5
  %45 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i3 = add nsw i32 %42, 1
  store i32 %inc.i3, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %43, i64 %idxprom.i, i32 1
  store i32 %45, i32* %end_plus_one.i, align 4, !tbaa !371
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdNS_8internal19BinaryOpScalarRightIdS1_NS3_8SubtractEdEEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.90"* nonnull align 1 dereferenceable(1) %rhs, i8* %dummy) unnamed_addr #0 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 1
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %n_gradients_registered_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %inc.i = add nsw i32 %1, 1
  store i32 %inc.i, i32* %n_gradients_registered_.i, align 4, !tbaa !376
  %gap_list_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4
  %2 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0
  %_M_next.i.i = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %gap_list_.i, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next.i.i, align 8, !tbaa !358
  %cmp.i.i = icmp eq %"struct.std::__detail::_List_node_base"* %3, %2
  %4 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 0
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  %i_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 6
  %5 = load i32, i32* %i_gradient_.i, align 8, !tbaa !387
  %inc2.i = add nsw i32 %5, 1
  store i32 %inc2.i, i32* %i_gradient_.i, align 8, !tbaa !387
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 8
  %6 = load i32, i32* %max_gradient_.i, align 8, !tbaa !388
  %cmp.not.i = icmp slt i32 %5, %6
  br i1 %cmp.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.then.i
  store i32 %inc2.i, i32* %max_gradient_.i, align 8, !tbaa !388
  br label %_ZN5adept5Stack17register_gradientEv.exit

if.else.i:                                        ; preds = %entry
  %7 = bitcast %"struct.std::__detail::_List_node_base"* %3 to %"struct.std::_List_node"*
  %_M_storage.i.i.i.i = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %3, i64 1
  %start.i = bitcast %"struct.std::__detail::_List_node_base"* %_M_storage.i.i.i.i to i32*
  %8 = load i32, i32* %start.i, align 4, !tbaa !379
  %inc11.i = add nsw i32 %8, 1
  store i32 %inc11.i, i32* %start.i, align 4, !tbaa !379
  %end.i = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %7, i64 0, i32 1, i32 0, i64 4
  %9 = bitcast i8* %end.i to i32*
  %10 = load i32, i32* %9, align 4, !tbaa !377
  %cmp13.not.i = icmp slt i32 %8, %10
  br i1 %cmp13.not.i, label %_ZN5adept5Stack17register_gradientEv.exit, label %if.then14.i

if.then14.i:                                      ; preds = %if.else.i
  %_M_node.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 5, i32 0
  %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa !380
  %cmp.i8.i = icmp eq %"struct.std::__detail::_List_node_base"* %11, %3
  br i1 %cmp.i8.i, label %if.then18.i, label %if.end24.i

if.then18.i:                                      ; preds = %if.then14.i
  store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %_M_node.i.i, align 8, !tbaa.struct !385
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.then18.i, %if.then14.i
  %_M_size.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  %sub.i.i.i.i = add i64 %12, -1
  store i64 %sub.i.i.i.i, i64* %_M_size.i.i.i.i, align 8, !tbaa !381
  tail call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %3) #38
  %13 = bitcast %"struct.std::__detail::_List_node_base"* %3 to i8*
  tail call void @_ZdlPv(i8* nonnull %13) #38
  %.pre = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** bitcast (%"class.adept::Stack"** @_ZN5adept21_stack_current_threadE to %"class.adept::internal::StackStorageOrig"**), align 8, !tbaa !61
  %14 = bitcast %"class.adept::internal::StackStorageOrig"* %.pre to %"class.adept::Stack"*
  br label %_ZN5adept5Stack17register_gradientEv.exit

_ZN5adept5Stack17register_gradientEv.exit:        ; preds = %if.then.i, %if.then4.i, %if.else.i, %if.end24.i
  %15 = phi %"class.adept::Stack"* [ %14, %if.end24.i ], [ %0, %if.else.i ], [ %0, %if.then4.i ], [ %0, %if.then.i ]
  %16 = phi %"class.adept::internal::StackStorageOrig"* [ %.pre, %if.end24.i ], [ %4, %if.else.i ], [ %4, %if.then4.i ], [ %4, %if.then.i ]
  %return_val.0.i = phi i32 [ %8, %if.end24.i ], [ %8, %if.else.i ], [ %5, %if.then4.i ], [ %5, %if.then.i ]
  store i32 %return_val.0.i, i32* %gradient_index_, align 8, !tbaa !469
  %n_allocated_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 6
  %17 = load i32, i32* %n_allocated_operations_.i.i, align 4, !tbaa !400
  %n_operations_.i.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %16, i64 0, i32 5
  %18 = load i32, i32* %n_operations_.i.i, align 8, !tbaa !399
  %add.i.i = add nsw i32 %18, 1
  %cmp.not.i.i = icmp sgt i32 %17, %add.i.i
  br i1 %cmp.not.i.i, label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit, label %if.then.i.i

if.then.i.i:                                      ; preds = %_ZN5adept5Stack17register_gradientEv.exit
  tail call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %16, i32 1)
  %.pre5 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !61
  %19 = getelementptr %"class.adept::Stack", %"class.adept::Stack"* %.pre5, i64 0, i32 0
  br label %_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit

_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit: ; preds = %_ZN5adept5Stack17register_gradientEv.exit, %if.then.i.i
  %20 = phi %"class.adept::internal::StackStorageOrig"* [ %16, %_ZN5adept5Stack17register_gradientEv.exit ], [ %19, %if.then.i.i ]
  %21 = phi %"class.adept::Stack"* [ %15, %_ZN5adept5Stack17register_gradientEv.exit ], [ %.pre5, %if.then.i.i ]
  %left.i.i.i = bitcast %"struct.adept::Expression.90"* %rhs to %"class.adept::Active"**
  %22 = load %"class.adept::Active"*, %"class.adept::Active"** %left.i.i.i, align 16, !tbaa !577
  %val_.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 0
  %23 = load double, double* %val_.i.i.i.i, align 8, !tbaa !467
  %value_.i.i.i.i = getelementptr inbounds %"struct.adept::Expression.90", %"struct.adept::Expression.90"* %rhs, i64 16
  %24 = bitcast %"struct.adept::Expression.90"* %value_.i.i.i.i to double*
  %25 = load double, double* %24, align 16, !tbaa !21
  %sub.i.i.i.i1 = fsub fast double %23, %25
  %gradient_index_.i.i.i.i.i = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %22, i64 0, i32 1
  %multiplier_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 1
  %26 = load double*, double** %multiplier_.i.i.i.i.i.i, align 8, !tbaa !365
  %n_operations_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 5
  %27 = load i32, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %idxprom.i.i.i.i.i.i = sext i32 %27 to i64
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds double, double* %26, i64 %idxprom.i.i.i.i.i.i
  store double 1.000000e+00, double* %arrayidx.i.i.i.i.i.i, align 8, !tbaa !70
  %28 = load i32, i32* %gradient_index_.i.i.i.i.i, align 8, !tbaa !47
  %index_.i.i.i.i.i.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %21, i64 0, i32 0, i32 2
  %29 = load i32*, i32** %index_.i.i.i.i.i.i, align 8, !tbaa !366
  %inc.i.i.i.i.i.i = add nsw i32 %27, 1
  store i32 %inc.i.i.i.i.i.i, i32* %n_operations_.i.i.i.i.i.i, align 8, !tbaa !399
  %arrayidx4.i.i.i.i.i.i = getelementptr inbounds i32, i32* %29, i64 %idxprom.i.i.i.i.i.i
  store i32 %28, i32* %arrayidx4.i.i.i.i.i.i, align 4, !tbaa !47
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this, i64 0, i32 0
  store double %sub.i.i.i.i1, double* %val_, align 8, !tbaa !467
  %n_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 3
  %30 = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  %n_allocated_statements_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 4
  %31 = load i32, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %cmp.not.i2 = icmp slt i32 %30, %31
  br i1 %cmp.not.i2, label %entry.if.end_crit_edge.i, label %if.then.i3

entry.if.end_crit_edge.i:                         ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit
  %statement_.phi.trans.insert.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 0
  %.pre.i = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_.phi.trans.insert.i, align 8, !tbaa !363
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

if.then.i3:                                       ; preds = %_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv.exit
  %mul.i.i = shl nsw i32 %31, 1
  %conv.i.i = sext i32 %mul.i.i to i64
  %32 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i.i, i64 8)
  %33 = extractvalue { i64, i1 } %32, 1
  %34 = extractvalue { i64, i1 } %32, 0
  %35 = select i1 %33, i64 -1, i64 %34
  %call.i.i = tail call noalias nonnull i8* @_Znam(i64 %35) #44
  %36 = bitcast %"class.adept::internal::StackStorageOrig"* %20 to i8**
  %37 = load i8*, i8** %36, align 8, !tbaa !363
  %conv5.i.i = sext i32 %30 to i64
  %mul6.i.i = shl nsw i64 %conv5.i.i, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %call.i.i, i8* align 4 %37, i64 %mul6.i.i, i1 false)
  %isnull.i.i = icmp eq i8* %37, null
  br i1 %isnull.i.i, label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i, label %delete.notnull.i.i

delete.notnull.i.i:                               ; preds = %if.then.i3
  tail call void @_ZdaPv(i8* nonnull %37) #43
  %.pre1.pre.i = load i32, i32* %n_statements_.i, align 8, !tbaa !368
  br label %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i

_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i: ; preds = %delete.notnull.i.i, %if.then.i3
  %.pre1.i = phi i32 [ %30, %if.then.i3 ], [ %.pre1.pre.i, %delete.notnull.i.i ]
  store i8* %call.i.i, i8** %36, align 8, !tbaa !363
  store i32 %mul.i.i, i32* %n_allocated_statements_.i, align 4, !tbaa !398
  %38 = bitcast i8* %call.i.i to %"struct.adept::internal::Statement"*
  br label %_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit

_ZN5adept8internal16StackStorageOrig8push_lhsERKi.exit: ; preds = %entry.if.end_crit_edge.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i
  %39 = phi i32 [ %30, %entry.if.end_crit_edge.i ], [ %.pre1.i, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %40 = phi %"struct.adept::internal::Statement"* [ %.pre.i, %entry.if.end_crit_edge.i ], [ %38, %_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi.exit.i ]
  %41 = load i32, i32* %gradient_index_, align 4, !tbaa !47
  %idxprom.i = sext i32 %39 to i64
  %index.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %40, i64 %idxprom.i, i32 0
  store i32 %41, i32* %index.i, align 4, !tbaa !369
  %n_operations_.i = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %20, i64 0, i32 5
  %42 = load i32, i32* %n_operations_.i, align 8, !tbaa !399
  %inc.i4 = add nsw i32 %39, 1
  store i32 %inc.i4, i32* %n_statements_.i, align 8, !tbaa !368
  %end_plus_one.i = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %40, i64 %idxprom.i, i32 1
  store i32 %42, i32* %end_plus_one.i, align 4, !tbaa !371
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept5Stack13set_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPKS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32 %start, i32 %end_plus_one, double* %gradient) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  %0 = load i8, i8* %gradients_initialized_.i, align 8, !tbaa !367, !range !356
  %tobool.i.not = icmp eq i8 %0, 0
  br i1 %tobool.i.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %max_gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %1 = load i32, i32* %max_gradient_.i, align 8, !tbaa !388
  %cmp.i = icmp sgt i32 %1, 0
  br i1 %cmp.i, label %if.then.i, label %_ZN5adept5Stack20initialize_gradientsEv.exit

if.then.i:                                        ; preds = %if.then
  %n_allocated_gradients_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 7
  %2 = load i32, i32* %n_allocated_gradients_.i, align 4, !tbaa !396
  %cmp3.i = icmp slt i32 %2, %1
  %gradient_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  br i1 %cmp3.i, label %if.then4.i, label %if.then.i.for.body.lr.ph.i_crit_edge

if.then.i.for.body.lr.ph.i_crit_edge:             ; preds = %if.then.i
  %.phi.trans.insert = bitcast double** %gradient_.i to i8**
  %.pre = load i8*, i8** %.phi.trans.insert, align 8, !tbaa !357
  br label %for.body.lr.ph.i

if.then4.i:                                       ; preds = %if.then.i
  %3 = load double*, double** %gradient_.i, align 8, !tbaa !357
  %tobool.not.i = icmp eq double* %3, null
  br i1 %tobool.not.i, label %if.end11.i, label %delete.notnull.i

delete.notnull.i:                                 ; preds = %if.then4.i
  %4 = bitcast double* %3 to i8*
  tail call void @_ZdaPv(i8* %4) #43
  %.pre.i = load i32, i32* %max_gradient_.i, align 8, !tbaa !388
  br label %if.end11.i

if.end11.i:                                       ; preds = %delete.notnull.i, %if.then4.i
  %5 = phi i32 [ %.pre.i, %delete.notnull.i ], [ %1, %if.then4.i ]
  %conv.i = sext i32 %5 to i64
  %6 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv.i, i64 8)
  %7 = extractvalue { i64, i1 } %6, 1
  %8 = extractvalue { i64, i1 } %6, 0
  %9 = select i1 %7, i64 -1, i64 %8
  %call.i = tail call noalias nonnull i8* @_Znam(i64 %9) #44
  %10 = bitcast double** %gradient_.i to i8**
  store i8* %call.i, i8** %10, align 8, !tbaa !357
  store i32 %5, i32* %n_allocated_gradients_.i, align 4, !tbaa !396
  %cmp135.i = icmp sgt i32 %5, 0
  br i1 %cmp135.i, label %for.body.lr.ph.i, label %_ZN5adept5Stack20initialize_gradientsEv.exit

for.body.lr.ph.i:                                 ; preds = %if.then.i.for.body.lr.ph.i_crit_edge, %if.end11.i
  %11 = phi i8* [ %call.i, %if.end11.i ], [ %.pre, %if.then.i.for.body.lr.ph.i_crit_edge ]
  %12 = phi i32 [ %5, %if.end11.i ], [ %1, %if.then.i.for.body.lr.ph.i_crit_edge ]
  %13 = zext i32 %12 to i64
  %14 = shl nuw nsw i64 %13, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 %14, i1 false)
  br label %_ZN5adept5Stack20initialize_gradientsEv.exit

_ZN5adept5Stack20initialize_gradientsEv.exit:     ; preds = %if.then, %if.end11.i, %for.body.lr.ph.i
  store i8 1, i8* %gradients_initialized_.i, align 8, !tbaa !367
  br label %if.end

if.end:                                           ; preds = %_ZN5adept5Stack20initialize_gradientsEv.exit, %entry
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %15 = load i32, i32* %max_gradient_, align 8, !tbaa !388
  %cmp = icmp slt i32 %15, %end_plus_one
  br i1 %cmp, label %if.then2, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end
  %cmp1015 = icmp sgt i32 %end_plus_one, %start
  br i1 %cmp1015, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %16 = load double*, double** %gradient_, align 8, !tbaa !357
  %17 = sext i32 %start to i64
  %18 = sub i32 %end_plus_one, %start
  %wide.trip.count = zext i32 %18 to i64
  %min.iters.check = icmp ult i32 %18, 4
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr double, double* %16, i64 %17
  %19 = add nsw i64 %17, %wide.trip.count
  %scevgep34 = getelementptr double, double* %16, i64 %19
  %scevgep37 = getelementptr double, double* %gradient, i64 %wide.trip.count
  %bound0 = icmp ult double* %scevgep, %scevgep37
  %bound1 = icmp ugt double* %scevgep34, %gradient
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count, 4294967292
  %ind.end = add nsw i64 %n.vec, %17
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %17
  %20 = getelementptr inbounds double, double* %gradient, i64 %index
  %21 = bitcast double* %20 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %21, align 8, !tbaa !70, !alias.scope !579
  %22 = getelementptr inbounds double, double* %20, i64 2
  %23 = bitcast double* %22 to <2 x double>*
  %wide.load40 = load <2 x double>, <2 x double>* %23, align 8, !tbaa !70, !alias.scope !579
  %24 = getelementptr inbounds double, double* %16, i64 %offset.idx
  %25 = bitcast double* %24 to <2 x double>*
  store <2 x double> %wide.load, <2 x double>* %25, align 8, !tbaa !70, !alias.scope !582, !noalias !579
  %26 = getelementptr inbounds double, double* %24, i64 2
  %27 = bitcast double* %26 to <2 x double>*
  store <2 x double> %wide.load40, <2 x double>* %27, align 8, !tbaa !70, !alias.scope !582, !noalias !579
  %index.next = add i64 %index, 4
  %28 = icmp eq i64 %index.next, %n.vec
  br i1 %28, label %middle.block, label %vector.body, !llvm.loop !584

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.body.preheader:                               ; preds = %vector.memcheck, %for.body.lr.ph, %middle.block
  %indvars.iv19.ph = phi i64 [ %17, %vector.memcheck ], [ %17, %for.body.lr.ph ], [ %ind.end, %middle.block ]
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

if.then2:                                         ; preds = %if.end
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %29 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #38
  %30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %31 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %30, %union.anon** %31, align 8, !tbaa !14
  %32 = bitcast %union.anon* %30 to i8*
  %33 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #38
  store i64 98, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i9 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %if.then2
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i9, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %34 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %34, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(98) %call5.i.i.i5.i9, i8* nonnull align 1 dereferenceable(98) getelementptr inbounds ([99 x i8], [99 x i8]* @.str.131, i64 0, i64 0), i64 98, i1 false) #38
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %34, i64* %_M_string_length.i.i.i.i.i.i, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i9, i64 %34
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #38
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception, i64 8
  %35 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %36 = getelementptr inbounds i8, i8* %exception, i64 24
  %37 = bitcast i8* %message_.i.i.i to i8**
  store i8* %36, i8** %37, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i10 = getelementptr inbounds i8, i8* %exception, i64 16
  %38 = bitcast i8* %_M_string_length.i.i.i.i.i.i10 to i64*
  store i64 0, i64* %38, align 8, !tbaa !19
  store i8 0, i8* %36, align 1, !tbaa !21
  %39 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21gradient_out_of_rangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %35, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont5 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc
  %40 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8, !tbaa !74
  %41 = load i8*, i8** %37, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %41, %36
  br i1 %cmp.i.i.i.i.i, label %lpad4.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %41) #38
  br label %lpad4.body

invoke.cont5:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21gradient_out_of_rangeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad4.body.thread

ehcleanup.thread:                                 ; preds = %if.then2
  %42 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #38
  br label %cleanup.action

lpad4.body:                                       ; preds = %lpad.i, %if.then.i.i.i.i
  %43 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %43) #38
  %44 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %44, %32
  br i1 %cmp.i.i.i, label %ehcleanup, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad4.body
  call void @_ZdlPv(i8* %44) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #38
  br label %cleanup.action

lpad4.body.thread:                                ; preds = %invoke.cont5
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i23 = icmp eq i8* %46, %32
  br i1 %cmp.i.i.i23, label %ehcleanup.thread28, label %if.then.i.i

ehcleanup.thread28:                               ; preds = %lpad4.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad4.body.thread
  call void @_ZdlPv(i8* %46) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad4.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i.thread, %ehcleanup, %ehcleanup.thread
  %.pn14 = phi { i8*, i32 } [ %42, %ehcleanup.thread ], [ %40, %ehcleanup ], [ %40, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %for.cond.preheader
  ret void

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv19 = phi i64 [ %indvars.iv.next20, %for.body ], [ %indvars.iv19.ph, %for.body.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %arrayidx = getelementptr inbounds double, double* %gradient, i64 %indvars.iv
  %47 = load double, double* %arrayidx, align 8, !tbaa !70
  %arrayidx12 = getelementptr inbounds double, double* %16, i64 %indvars.iv19
  store double %47, double* %arrayidx12, align 8, !tbaa !70
  %indvars.iv.next20 = add nsw i64 %indvars.iv19, 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !585

eh.resume:                                        ; preds = %if.then.i.i, %ehcleanup.thread28, %cleanup.action
  %.pn13 = phi { i8*, i32 } [ %.pn14, %cleanup.action ], [ %45, %if.then.i.i ], [ %45, %ehcleanup.thread28 ]
  resume { i8*, i32 } %.pn13

unreachable:                                      ; preds = %invoke.cont5
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept21gradient_out_of_rangeD0Ev(%"class.adept::gradient_out_of_range"* nonnull dereferenceable(40) %this) unnamed_addr #29 comdat align 2 personality i32 (...)* @__gxx_personality_v0 {
entry:
  %0 = getelementptr inbounds %"class.adept::gradient_out_of_range", %"class.adept::gradient_out_of_range"* %this, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !74
  %_M_p.i.i.i.i.i = getelementptr inbounds %"class.adept::gradient_out_of_range", %"class.adept::gradient_out_of_range"* %this, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1 = load i8*, i8** %_M_p.i.i.i.i.i, align 8, !tbaa !17
  %2 = getelementptr inbounds %"class.adept::gradient_out_of_range", %"class.adept::gradient_out_of_range"* %this, i64 0, i32 0, i32 0, i32 1, i32 2
  %arraydecay.i.i.i.i.i = bitcast %union.anon* %2 to i8*
  %cmp.i.i.i.i = icmp eq i8* %1, %arraydecay.i.i.i.i.i
  br i1 %cmp.i.i.i.i, label %_ZN5adept9exceptionD2Ev.exit, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  tail call void @_ZdlPv(i8* %1) #38
  br label %_ZN5adept9exceptionD2Ev.exit

_ZN5adept9exceptionD2Ev.exit:                     ; preds = %entry, %if.then.i.i.i
  %3 = getelementptr inbounds %"class.adept::gradient_out_of_range", %"class.adept::gradient_out_of_range"* %this, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %3) #38
  %4 = bitcast %"class.adept::gradient_out_of_range"* %this to i8*
  tail call void @_ZdlPv(i8* nonnull %4) #43
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK5adept5Stack13get_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32 %start, i32 %end_plus_one, double* %gradient) local_unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__dnew.i.i.i.i27 = alloca i64, align 8
  %__dnew.i.i.i.i = alloca i64, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp10 = alloca %"class.std::__cxx11::basic_string", align 8
  %gradients_initialized_.i = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 10
  %0 = load i8, i8* %gradients_initialized_.i, align 8, !tbaa !367, !range !356
  %tobool.i.not = icmp eq i8 %0, 0
  br i1 %tobool.i.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %exception = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #38
  %2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to %union.anon**
  store %union.anon* %2, %union.anon** %3, align 8, !tbaa !14
  %4 = bitcast %union.anon* %2 to i8*
  %5 = bitcast i64* %__dnew.i.i.i.i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #38
  store i64 106, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %call5.i.i.i5.i12 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i, i64 0)
          to label %call5.i.i.i5.i.noexc unwind label %ehcleanup.thread

call5.i.i.i5.i.noexc:                             ; preds = %if.then
  %_M_p.i6.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i12, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %6 = load i64, i64* %__dnew.i.i.i.i, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 2, i32 0
  store i64 %6, i64* %_M_allocated_capacity.i.i.i.i.i, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(106) %call5.i.i.i5.i12, i8* nonnull align 1 dereferenceable(106) getelementptr inbounds ([107 x i8], [107 x i8]* @.str.59, i64 0, i64 0), i64 106, i1 false) #38
  %_M_string_length.i.i.i.i.i.i11 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp, i64 0, i32 1
  store i64 %6, i64* %_M_string_length.i.i.i.i.i.i11, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i = getelementptr inbounds i8, i8* %call5.i.i.i5.i12, i64 %6
  store i8 0, i8* %arrayidx.i.i.i.i.i, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #38
  %message_.i.i.i13 = getelementptr inbounds i8, i8* %exception, i64 8
  %7 = bitcast i8* %message_.i.i.i13 to %"class.std::__cxx11::basic_string"*
  %8 = getelementptr inbounds i8, i8* %exception, i64 24
  %9 = bitcast i8* %message_.i.i.i13 to i8**
  store i8* %8, i8** %9, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i14 = getelementptr inbounds i8, i8* %exception, i64 16
  %10 = bitcast i8* %_M_string_length.i.i.i.i.i.i14 to i64*
  store i64 0, i64* %10, align 8, !tbaa !19
  store i8 0, i8* %8, align 1, !tbaa !21
  %11 = bitcast i8* %exception to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept25gradients_not_initializedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont4 unwind label %lpad.i18

lpad.i18:                                         ; preds = %call5.i.i.i5.i.noexc
  %12 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8, !tbaa !74
  %13 = load i8*, i8** %9, align 8, !tbaa !17
  %cmp.i.i.i.i.i17 = icmp eq i8* %13, %8
  br i1 %cmp.i.i.i.i.i17, label %lpad3.body, label %if.then.i.i.i.i19

if.then.i.i.i.i19:                                ; preds = %lpad.i18
  call void @_ZdlPv(i8* %13) #38
  br label %lpad3.body

invoke.cont4:                                     ; preds = %call5.i.i.i5.i.noexc
  invoke void @__cxa_throw(i8* nonnull %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept25gradients_not_initializedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad3.body.thread

ehcleanup.thread:                                 ; preds = %if.then
  %14 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #38
  br label %cleanup.action

lpad3.body:                                       ; preds = %lpad.i18, %if.then.i.i.i.i19
  %15 = bitcast i8* %exception to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %15) #38
  %16 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i24 = icmp eq i8* %16, %4
  br i1 %cmp.i.i.i24, label %ehcleanup, label %if.then.i.i25.thread

if.then.i.i25.thread:                             ; preds = %lpad3.body
  call void @_ZdlPv(i8* %16) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #38
  br label %cleanup.action

lpad3.body.thread:                                ; preds = %invoke.cont4
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = load i8*, i8** %_M_p.i6.i.i.i.i, align 8, !tbaa !17
  %cmp.i.i.i2456 = icmp eq i8* %18, %4
  br i1 %cmp.i.i.i2456, label %ehcleanup.thread61, label %if.then.i.i25

ehcleanup.thread61:                               ; preds = %lpad3.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #38
  br label %eh.resume

if.then.i.i25:                                    ; preds = %lpad3.body.thread
  call void @_ZdlPv(i8* %18) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #38
  br label %eh.resume

ehcleanup:                                        ; preds = %lpad3.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #38
  br label %cleanup.action

cleanup.action:                                   ; preds = %if.then.i.i25.thread, %ehcleanup, %ehcleanup.thread
  %.pn44 = phi { i8*, i32 } [ %14, %ehcleanup.thread ], [ %12, %ehcleanup ], [ %12, %if.then.i.i25.thread ]
  call void @__cxa_free_exception(i8* %exception) #38
  br label %eh.resume

if.end:                                           ; preds = %entry
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 8
  %19 = load i32, i32* %max_gradient_, align 8, !tbaa !388
  %cmp = icmp slt i32 %19, %end_plus_one
  br i1 %cmp, label %if.then8, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end
  %cmp2648 = icmp sgt i32 %end_plus_one, %start
  br i1 %cmp2648, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this, i64 0, i32 1
  %20 = load double*, double** %gradient_, align 8, !tbaa !357
  %21 = sext i32 %start to i64
  %22 = sub i32 %end_plus_one, %start
  %wide.trip.count = zext i32 %22 to i64
  %min.iters.check = icmp ult i32 %22, 4
  br i1 %min.iters.check, label %for.body.preheader, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.lr.ph
  %scevgep = getelementptr double, double* %gradient, i64 %wide.trip.count
  %scevgep80 = getelementptr double, double* %20, i64 %21
  %23 = add nsw i64 %21, %wide.trip.count
  %scevgep82 = getelementptr double, double* %20, i64 %23
  %bound0 = icmp ugt double* %scevgep82, %gradient
  %bound1 = icmp ult double* %scevgep80, %scevgep
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count, 4294967292
  %ind.end = add nsw i64 %n.vec, %21
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %21
  %24 = getelementptr inbounds double, double* %20, i64 %offset.idx
  %25 = bitcast double* %24 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %25, align 8, !tbaa !70, !alias.scope !586
  %26 = getelementptr inbounds double, double* %24, i64 2
  %27 = bitcast double* %26 to <2 x double>*
  %wide.load85 = load <2 x double>, <2 x double>* %27, align 8, !tbaa !70, !alias.scope !586
  %28 = getelementptr inbounds double, double* %gradient, i64 %index
  %29 = bitcast double* %28 to <2 x double>*
  store <2 x double> %wide.load, <2 x double>* %29, align 8, !tbaa !70, !alias.scope !589, !noalias !586
  %30 = getelementptr inbounds double, double* %28, i64 2
  %31 = bitcast double* %30 to <2 x double>*
  store <2 x double> %wide.load85, <2 x double>* %31, align 8, !tbaa !70, !alias.scope !589, !noalias !586
  %index.next = add i64 %index, 4
  %32 = icmp eq i64 %index.next, %n.vec
  br i1 %32, label %middle.block, label %vector.body, !llvm.loop !591

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.cond.cleanup, label %for.body.preheader

for.body.preheader:                               ; preds = %vector.memcheck, %for.body.lr.ph, %middle.block
  %indvars.iv52.ph = phi i64 [ %21, %vector.memcheck ], [ %21, %for.body.lr.ph ], [ %ind.end, %middle.block ]
  %indvars.iv.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body

if.then8:                                         ; preds = %if.end
  %exception9 = tail call i8* @__cxa_allocate_exception(i64 40) #38
  %33 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #38
  %34 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp10, i64 0, i32 2
  %35 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp10 to %union.anon**
  store %union.anon* %34, %union.anon** %35, align 8, !tbaa !14
  %36 = bitcast %union.anon* %34 to i8*
  %37 = bitcast i64* %__dnew.i.i.i.i27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #38
  store i64 98, i64* %__dnew.i.i.i.i27, align 8, !tbaa !20
  %call5.i.i.i5.i40 = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp10, i64* nonnull align 8 dereferenceable(8) %__dnew.i.i.i.i27, i64 0)
          to label %call5.i.i.i5.i.noexc39 unwind label %ehcleanup18.thread

call5.i.i.i5.i.noexc39:                           ; preds = %if.then8
  %_M_p.i6.i.i.i.i30 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp10, i64 0, i32 0, i32 0
  store i8* %call5.i.i.i5.i40, i8** %_M_p.i6.i.i.i.i30, align 8, !tbaa !17
  %38 = load i64, i64* %__dnew.i.i.i.i27, align 8, !tbaa !20
  %_M_allocated_capacity.i.i.i.i.i31 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp10, i64 0, i32 2, i32 0
  store i64 %38, i64* %_M_allocated_capacity.i.i.i.i.i31, align 8, !tbaa !21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 dereferenceable(98) %call5.i.i.i5.i40, i8* nonnull align 1 dereferenceable(98) getelementptr inbounds ([99 x i8], [99 x i8]* @.str.131, i64 0, i64 0), i64 98, i1 false) #38
  %_M_string_length.i.i.i.i.i.i37 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %ref.tmp10, i64 0, i32 1
  store i64 %38, i64* %_M_string_length.i.i.i.i.i.i37, align 8, !tbaa !19
  %arrayidx.i.i.i.i.i38 = getelementptr inbounds i8, i8* %call5.i.i.i5.i40, i64 %38
  store i8 0, i8* %arrayidx.i.i.i.i.i38, align 1, !tbaa !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #38
  %message_.i.i.i = getelementptr inbounds i8, i8* %exception9, i64 8
  %39 = bitcast i8* %message_.i.i.i to %"class.std::__cxx11::basic_string"*
  %40 = getelementptr inbounds i8, i8* %exception9, i64 24
  %41 = bitcast i8* %message_.i.i.i to i8**
  store i8* %40, i8** %41, align 8, !tbaa !14
  %_M_string_length.i.i.i.i.i.i = getelementptr inbounds i8, i8* %exception9, i64 16
  %42 = bitcast i8* %_M_string_length.i.i.i.i.i.i to i64*
  store i64 0, i64* %42, align 8, !tbaa !19
  store i8 0, i8* %40, align 1, !tbaa !21
  %43 = bitcast i8* %exception9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21gradient_out_of_rangeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8, !tbaa !74
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %39, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp10)
          to label %invoke.cont15 unwind label %lpad.i

lpad.i:                                           ; preds = %call5.i.i.i5.i.noexc39
  %44 = landingpad { i8*, i32 }
          cleanup
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8, !tbaa !74
  %45 = load i8*, i8** %41, align 8, !tbaa !17
  %cmp.i.i.i.i.i = icmp eq i8* %45, %40
  br i1 %cmp.i.i.i.i.i, label %lpad14.body, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %lpad.i
  call void @_ZdlPv(i8* %45) #38
  br label %lpad14.body

invoke.cont15:                                    ; preds = %call5.i.i.i5.i.noexc39
  invoke void @__cxa_throw(i8* nonnull %exception9, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21gradient_out_of_rangeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #40
          to label %unreachable unwind label %lpad14.body.thread

ehcleanup18.thread:                               ; preds = %if.then8
  %46 = landingpad { i8*, i32 }
          cleanup
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #38
  br label %cleanup.action23

lpad14.body:                                      ; preds = %lpad.i, %if.then.i.i.i.i
  %47 = bitcast i8* %exception9 to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %47) #38
  %48 = load i8*, i8** %_M_p.i6.i.i.i.i30, align 8, !tbaa !17
  %cmp.i.i.i = icmp eq i8* %48, %36
  br i1 %cmp.i.i.i, label %ehcleanup18, label %if.then.i.i.thread

if.then.i.i.thread:                               ; preds = %lpad14.body
  call void @_ZdlPv(i8* %48) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #38
  br label %cleanup.action23

lpad14.body.thread:                               ; preds = %invoke.cont15
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = load i8*, i8** %_M_p.i6.i.i.i.i30, align 8, !tbaa !17
  %cmp.i.i.i66 = icmp eq i8* %50, %36
  br i1 %cmp.i.i.i66, label %ehcleanup18.thread71, label %if.then.i.i

ehcleanup18.thread71:                             ; preds = %lpad14.body.thread
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #38
  br label %eh.resume

if.then.i.i:                                      ; preds = %lpad14.body.thread
  call void @_ZdlPv(i8* %50) #38
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #38
  br label %eh.resume

ehcleanup18:                                      ; preds = %lpad14.body
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #38
  br label %cleanup.action23

cleanup.action23:                                 ; preds = %if.then.i.i.thread, %ehcleanup18, %ehcleanup18.thread
  %.pn847 = phi { i8*, i32 } [ %46, %ehcleanup18.thread ], [ %44, %ehcleanup18 ], [ %44, %if.then.i.i.thread ]
  call void @__cxa_free_exception(i8* %exception9) #38
  br label %eh.resume

for.cond.cleanup:                                 ; preds = %for.body, %middle.block, %for.cond.preheader
  ret void

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv52 = phi i64 [ %indvars.iv.next53, %for.body ], [ %indvars.iv52.ph, %for.body.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader ]
  %arrayidx = getelementptr inbounds double, double* %20, i64 %indvars.iv52
  %51 = load double, double* %arrayidx, align 8, !tbaa !70
  %arrayidx28 = getelementptr inbounds double, double* %gradient, i64 %indvars.iv
  store double %51, double* %arrayidx28, align 8, !tbaa !70
  %indvars.iv.next53 = add nsw i64 %indvars.iv52, 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body, !llvm.loop !592

eh.resume:                                        ; preds = %if.then.i.i, %if.then.i.i25, %ehcleanup18.thread71, %ehcleanup.thread61, %cleanup.action23, %cleanup.action
  %.pn8.pn = phi { i8*, i32 } [ %.pn847, %cleanup.action23 ], [ %.pn44, %cleanup.action ], [ %17, %if.then.i.i25 ], [ %49, %if.then.i.i ], [ %17, %ehcleanup.thread61 ], [ %49, %ehcleanup18.thread71 ]
  resume { i8*, i32 } %.pn8.pn

unreachable:                                      ; preds = %invoke.cont15, %invoke.cont4
  unreachable
}

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_gmm.cpp() #0 section ".text.startup" personality i32 (...)* @__gxx_personality_v0 {
entry:
  tail call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull dereferenceable(1) @_ZStL8__ioinit)
  %0 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i64 0, i32 0), i8* nonnull @__dso_handle) #38
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i16 8236, i16* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 2) to i16*), align 8
  store i64 2, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E, i64 0, i32 2) to i8*), i64 2), align 2, !tbaa !21
  %1 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E to i8*), i8* nonnull @__dso_handle) #38
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i8 123, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !21
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !21
  %2 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E to i8*), i8* nonnull @__dso_handle) #38
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i8 125, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !21
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !21
  %3 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E to i8*), i8* nonnull @__dso_handle) #38
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i8 123, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !21
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !21
  %4 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E to i8*), i8* nonnull @__dso_handle) #38
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i8 125, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !21
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !21
  %5 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E to i8*), i8* nonnull @__dso_handle) #38
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i16 8236, i16* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 2) to i16*), align 8
  store i64 2, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i64 0, i32 2) to i8*), i64 2), align 2, !tbaa !21
  %6 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E to i8*), i8* nonnull @__dso_handle) #38
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i16 2604, i16* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 2) to i16*), align 8
  store i64 2, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i64 0, i32 2) to i8*), i64 2), align 2, !tbaa !21
  %7 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E to i8*), i8* nonnull @__dso_handle) #38
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i16 31498, i16* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 2) to i16*), align 8
  store i64 2, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E, i64 0, i32 2) to i8*), i64 2), align 2, !tbaa !21
  %8 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E to i8*), i8* nonnull @__dso_handle) #38
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E to %union.anon**), align 8, !tbaa !14
  store i8 125, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 2) to i8*), align 8, !tbaa !21
  store i64 1, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E, i64 0, i32 2) to i8*), i64 1), align 1, !tbaa !21
  %9 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E to i8*), i8* nonnull @__dso_handle) #38
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E to %union.anon**), align 8, !tbaa !14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(12) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(12) getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i64 0, i64 0), i64 12, i1 false) #38
  store i64 12, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i64 0, i32 2, i32 1, i64 4), align 4, !tbaa !21
  %10 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E to i8*), i8* nonnull @__dso_handle) #38
  store %union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 2), %union.anon** bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E to %union.anon**), align 8, !tbaa !14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(7) bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 2) to i8*), i8* nonnull align 1 dereferenceable(7) getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0), i64 7, i1 false) #38
  store i64 7, i64* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 1), align 8, !tbaa !19
  store i8 0, i8* getelementptr inbounds (i8, i8* bitcast (%union.anon* getelementptr inbounds (%"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i64 0, i32 2) to i8*), i64 7), align 1, !tbaa !21
  %11 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E to i8*), i8* nonnull @__dso_handle) #38
  ret void
}

; Function Attrs: uwtable willreturn
define weak_odr hidden %"class.adept::Stack"** @_ZTWN5adept21_stack_current_threadE() local_unnamed_addr #33 comdat {
  ret %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @preprocess_gmm_objective(i32 %d, i32 %k, i32 %n, double* noalias nocapture readonly %alphas, double* noalias nocapture readonly %means, double* noalias nocapture readonly %icf, double* noalias nocapture readonly %x, %struct.Wishart* nocapture readonly byval(%struct.Wishart) align 8 %wishart, double* noalias nocapture %err) local_unnamed_addr #6 {
entry:
  %add = add nsw i32 %d, 1
  %mul3 = mul nsw i32 %add, %d
  %div = sdiv i32 %mul3, 2
  %conv4 = sext i32 %div to i64
  %mul5 = mul nsw i32 %k, %d
  %conv6 = sext i32 %mul5 to i64
  %mul7 = shl nsw i64 %conv6, 3
  %call = tail call noalias i8* @malloc(i64 %mul7) #38
  %0 = bitcast i8* %call to double*
  %conv8 = sext i32 %k to i64
  %mul9 = shl nsw i64 %conv8, 3
  %call10 = tail call noalias i8* @malloc(i64 %mul9) #38
  %1 = bitcast i8* %call10 to double*
  %conv11 = sext i32 %d to i64
  %mul12 = shl nsw i64 %conv11, 3
  %call13 = tail call noalias i8* @malloc(i64 %mul12) #38
  %2 = bitcast i8* %call13 to double*
  %call16 = tail call noalias i8* @malloc(i64 %mul12) #38
  %3 = bitcast i8* %call16 to double*
  %call19 = tail call noalias i8* @malloc(i64 %mul9) #38
  %4 = bitcast i8* %call19 to double*
  %cmp22.i = icmp sgt i32 %k, 0
  br i1 %cmp22.i, label %for.body.lr.ph.i, label %preprocess_qs.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %cmp220.i = icmp sgt i32 %d, 0
  %wide.trip.count30.i = zext i32 %k to i64
  %wide.trip.count.i = zext i32 %d to i64
  %min.iters.check = icmp ult i32 %d, 4
  %n.vec = and i64 %wide.trip.count.i, 4294967292
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc17.i, %for.body.lr.ph.i
  %indvars.iv28.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next29.i, %for.inc17.i ]
  %arrayidx.i = getelementptr inbounds double, double* %1, i64 %indvars.iv28.i
  store double 0.000000e+00, double* %arrayidx.i, align 8, !tbaa !70
  br i1 %cmp220.i, label %for.body3.lr.ph.i, label %for.inc17.i

for.body3.lr.ph.i:                                ; preds = %for.body.i
  %5 = trunc i64 %indvars.iv28.i to i32
  %mul4.i = mul nsw i32 %div, %5
  %mul13.i = mul nsw i32 %5, %d
  %6 = sext i32 %mul4.i to i64
  %7 = sext i32 %mul13.i to i64
  br i1 %min.iters.check, label %for.body3.i.preheader, label %vector.body

vector.body:                                      ; preds = %for.body3.lr.ph.i, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.body3.lr.ph.i ]
  %vec.phi = phi <2 x double> [ %13, %vector.body ], [ zeroinitializer, %for.body3.lr.ph.i ]
  %vec.phi92 = phi <2 x double> [ %14, %vector.body ], [ zeroinitializer, %for.body3.lr.ph.i ]
  %8 = add nsw i64 %index, %6
  %9 = getelementptr inbounds double, double* %icf, i64 %8
  %10 = bitcast double* %9 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %10, align 8, !tbaa !70
  %11 = getelementptr inbounds double, double* %9, i64 2
  %12 = bitcast double* %11 to <2 x double>*
  %wide.load93 = load <2 x double>, <2 x double>* %12, align 8, !tbaa !70
  %13 = fadd fast <2 x double> %wide.load, %vec.phi
  %14 = fadd fast <2 x double> %wide.load93, %vec.phi92
  %15 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %wide.load)
  %16 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %wide.load93)
  %17 = add nsw i64 %index, %7
  %18 = getelementptr inbounds double, double* %0, i64 %17
  %19 = bitcast double* %18 to <2 x double>*
  store <2 x double> %15, <2 x double>* %19, align 8, !tbaa !70
  %20 = getelementptr inbounds double, double* %18, i64 2
  %21 = bitcast double* %20 to <2 x double>*
  store <2 x double> %16, <2 x double>* %21, align 8, !tbaa !70
  %index.next = add i64 %index, 4
  %22 = icmp eq i64 %index.next, %n.vec
  br i1 %22, label %middle.block, label %vector.body, !llvm.loop !593

middle.block:                                     ; preds = %vector.body
  %bin.rdx = fadd fast <2 x double> %14, %13
  %23 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  br i1 %cmp.n, label %for.inc17.i.loopexit, label %for.body3.i.preheader

for.body3.i.preheader:                            ; preds = %for.body3.lr.ph.i, %middle.block
  %.ph = phi double [ 0.000000e+00, %for.body3.lr.ph.i ], [ %23, %middle.block ]
  %indvars.iv.i.ph = phi i64 [ 0, %for.body3.lr.ph.i ], [ %n.vec, %middle.block ]
  br label %for.body3.i

for.body3.i:                                      ; preds = %for.body3.i.preheader, %for.body3.i
  %24 = phi double [ %add10.i, %for.body3.i ], [ %.ph, %for.body3.i.preheader ]
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body3.i ], [ %indvars.iv.i.ph, %for.body3.i.preheader ]
  %25 = add nsw i64 %indvars.iv.i, %6
  %arrayidx7.i = getelementptr inbounds double, double* %icf, i64 %25
  %26 = load double, double* %arrayidx7.i, align 8, !tbaa !70
  %add10.i = fadd fast double %26, %24
  %27 = tail call fast double @llvm.exp.f64(double %26) #38
  %28 = add nsw i64 %indvars.iv.i, %7
  %arrayidx16.i = getelementptr inbounds double, double* %0, i64 %28
  store double %27, double* %arrayidx16.i, align 8, !tbaa !70
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %for.inc17.i.loopexit, label %for.body3.i, !llvm.loop !594

for.inc17.i.loopexit:                             ; preds = %for.body3.i, %middle.block
  %add10.i.lcssa = phi double [ %23, %middle.block ], [ %add10.i, %for.body3.i ]
  store double %add10.i.lcssa, double* %arrayidx.i, align 8, !tbaa !70
  br label %for.inc17.i

for.inc17.i:                                      ; preds = %for.inc17.i.loopexit, %for.body.i
  %indvars.iv.next29.i = add nuw nsw i64 %indvars.iv28.i, 1
  %exitcond31.not.i = icmp eq i64 %indvars.iv.next29.i, %wide.trip.count30.i
  br i1 %exitcond31.not.i, label %preprocess_qs.exit, label %for.body.i, !llvm.loop !105

preprocess_qs.exit:                               ; preds = %for.inc17.i, %entry
  %cmp84 = icmp sgt i32 %n, 0
  br i1 %cmp84, label %for.cond22.preheader.lr.ph, label %for.end55

for.cond22.preheader.lr.ph:                       ; preds = %preprocess_qs.exit
  %conv2191 = zext i32 %n to i64
  %cmp6.i = icmp sgt i32 %d, 0
  %wide.trip.count.i2 = zext i32 %d to i64
  %mul8.i = shl nuw nsw i32 %d, 1
  %cmp10.i47 = icmp sgt i32 %d, 1
  %cmp9.i.i17 = icmp sgt i32 %k, 1
  %wide.trip.count.i.i18 = zext i32 %k to i64
  %exitcond.not.i3880 = icmp eq i32 %k, 1
  %29 = add nsw i64 %wide.trip.count.i.i18, -1
  %30 = add nsw i64 %wide.trip.count.i.i18, -1
  %31 = add nsw i64 %wide.trip.count.i2, -1
  %min.iters.check192 = icmp ult i32 %d, 4
  %n.vec195 = and i64 %wide.trip.count.i2, 4294967292
  %cmp.n199 = icmp eq i64 %n.vec195, %wide.trip.count.i2
  %min.iters.check177 = icmp ult i32 %d, 4
  %n.vec180 = and i64 %wide.trip.count.i2, 4294967292
  %cmp.n184 = icmp eq i64 %n.vec180, %wide.trip.count.i2
  %min.iters.check134 = icmp ult i64 %31, 4
  %n.vec137 = and i64 %31, -4
  %ind.end141 = or i64 %n.vec137, 1
  %cmp.n142 = icmp eq i64 %31, %n.vec137
  %min.iters.check116 = icmp ult i64 %30, 4
  %n.vec119 = and i64 %30, -4
  %ind.end123 = or i64 %n.vec119, 1
  %cmp.n124 = icmp eq i64 %30, %n.vec119
  %min.iters.check97 = icmp ult i64 %29, 4
  %n.vec100 = and i64 %29, -4
  %ind.end = or i64 %n.vec100, 1
  %cmp.n104 = icmp eq i64 %29, %n.vec100
  br label %for.cond22.preheader

for.cond22.preheader:                             ; preds = %for.cond22.preheader.lr.ph, %log_sum_exp.exit45
  %32 = phi double [ undef, %for.cond22.preheader.lr.ph ], [ %107, %log_sum_exp.exit45 ]
  %33 = phi double [ undef, %for.cond22.preheader.lr.ph ], [ %108, %log_sum_exp.exit45 ]
  %tiv.next87 = phi i64 [ 1, %for.cond22.preheader.lr.ph ], [ %tiv.next, %log_sum_exp.exit45 ]
  %slse.086 = phi double [ 0.000000e+00, %for.cond22.preheader.lr.ph ], [ %add52, %log_sum_exp.exit45 ]
  %tiv85 = phi i64 [ 0, %for.cond22.preheader.lr.ph ], [ %tiv.next87, %log_sum_exp.exit45 ]
  br i1 %cmp22.i, label %for.body25.lr.ph, label %for.end

for.body25.lr.ph:                                 ; preds = %for.cond22.preheader
  %mul27 = mul nsw i64 %tiv85, %conv11
  %arrayidx28 = getelementptr inbounds double, double* %x, i64 %mul27
  br label %for.body25

for.body25:                                       ; preds = %for.body25.lr.ph, %sqnorm.exit
  %34 = phi double [ %33, %for.body25.lr.ph ], [ %92, %sqnorm.exit ]
  %ik.076 = phi i64 [ 0, %for.body25.lr.ph ], [ %inc, %sqnorm.exit ]
  %mul30 = mul nsw i64 %ik.076, %conv11
  %arrayidx31 = getelementptr inbounds double, double* %means, i64 %mul30
  br i1 %cmp6.i, label %for.body.i7.preheader, label %Qtimesx.exit

for.body.i7.preheader:                            ; preds = %for.body25
  br i1 %min.iters.check192, label %for.body.i7.preheader252, label %vector.body191

vector.body191:                                   ; preds = %for.body.i7.preheader, %vector.body191
  %index196 = phi i64 [ %index.next197, %vector.body191 ], [ 0, %for.body.i7.preheader ]
  %35 = getelementptr inbounds double, double* %arrayidx28, i64 %index196
  %36 = bitcast double* %35 to <2 x double>*
  %wide.load200 = load <2 x double>, <2 x double>* %36, align 8, !tbaa !70
  %37 = getelementptr inbounds double, double* %35, i64 2
  %38 = bitcast double* %37 to <2 x double>*
  %wide.load201 = load <2 x double>, <2 x double>* %38, align 8, !tbaa !70
  %39 = getelementptr inbounds double, double* %arrayidx31, i64 %index196
  %40 = bitcast double* %39 to <2 x double>*
  %wide.load202 = load <2 x double>, <2 x double>* %40, align 8, !tbaa !70
  %41 = getelementptr inbounds double, double* %39, i64 2
  %42 = bitcast double* %41 to <2 x double>*
  %wide.load203 = load <2 x double>, <2 x double>* %42, align 8, !tbaa !70
  %43 = fsub fast <2 x double> %wide.load200, %wide.load202
  %44 = fsub fast <2 x double> %wide.load201, %wide.load203
  %45 = getelementptr inbounds double, double* %2, i64 %index196
  %46 = bitcast double* %45 to <2 x double>*
  store <2 x double> %43, <2 x double>* %46, align 8, !tbaa !70
  %47 = getelementptr inbounds double, double* %45, i64 2
  %48 = bitcast double* %47 to <2 x double>*
  store <2 x double> %44, <2 x double>* %48, align 8, !tbaa !70
  %index.next197 = add i64 %index196, 4
  %49 = icmp eq i64 %index.next197, %n.vec195
  br i1 %49, label %middle.block189, label %vector.body191, !llvm.loop !595

middle.block189:                                  ; preds = %vector.body191
  br i1 %cmp.n199, label %for.body.i61.preheader, label %for.body.i7.preheader252

for.body.i7.preheader252:                         ; preds = %for.body.i7.preheader, %middle.block189
  %indvars.iv.i3.ph = phi i64 [ 0, %for.body.i7.preheader ], [ %n.vec195, %middle.block189 ]
  br label %for.body.i7

for.body.i7:                                      ; preds = %for.body.i7.preheader252, %for.body.i7
  %indvars.iv.i3 = phi i64 [ %indvars.iv.next.i5, %for.body.i7 ], [ %indvars.iv.i3.ph, %for.body.i7.preheader252 ]
  %arrayidx.i4 = getelementptr inbounds double, double* %arrayidx28, i64 %indvars.iv.i3
  %50 = load double, double* %arrayidx.i4, align 8, !tbaa !70
  %arrayidx2.i = getelementptr inbounds double, double* %arrayidx31, i64 %indvars.iv.i3
  %51 = load double, double* %arrayidx2.i, align 8, !tbaa !70
  %sub.i = fsub fast double %50, %51
  %arrayidx4.i = getelementptr inbounds double, double* %2, i64 %indvars.iv.i3
  store double %sub.i, double* %arrayidx4.i, align 8, !tbaa !70
  %indvars.iv.next.i5 = add nuw nsw i64 %indvars.iv.i3, 1
  %exitcond.not.i6 = icmp eq i64 %indvars.iv.next.i5, %wide.trip.count.i2
  br i1 %exitcond.not.i6, label %for.body.i61.preheader, label %for.body.i7, !llvm.loop !596

for.body.i61.preheader:                           ; preds = %for.body.i7, %middle.block189
  %arrayidx35 = getelementptr inbounds double, double* %0, i64 %mul30
  %mul36 = mul nsw i64 %ik.076, %conv4
  %add38 = add nsw i64 %mul36, %conv11
  %arrayidx39 = getelementptr inbounds double, double* %icf, i64 %add38
  br i1 %min.iters.check177, label %for.body.i61.preheader251, label %vector.body176

vector.body176:                                   ; preds = %for.body.i61.preheader, %vector.body176
  %index181 = phi i64 [ %index.next182, %vector.body176 ], [ 0, %for.body.i61.preheader ]
  %52 = getelementptr inbounds double, double* %arrayidx35, i64 %index181
  %53 = bitcast double* %52 to <2 x double>*
  %wide.load185 = load <2 x double>, <2 x double>* %53, align 8, !tbaa !70
  %54 = getelementptr inbounds double, double* %52, i64 2
  %55 = bitcast double* %54 to <2 x double>*
  %wide.load186 = load <2 x double>, <2 x double>* %55, align 8, !tbaa !70
  %56 = getelementptr inbounds double, double* %2, i64 %index181
  %57 = bitcast double* %56 to <2 x double>*
  %wide.load187 = load <2 x double>, <2 x double>* %57, align 8, !tbaa !70
  %58 = getelementptr inbounds double, double* %56, i64 2
  %59 = bitcast double* %58 to <2 x double>*
  %wide.load188 = load <2 x double>, <2 x double>* %59, align 8, !tbaa !70
  %60 = fmul fast <2 x double> %wide.load187, %wide.load185
  %61 = fmul fast <2 x double> %wide.load188, %wide.load186
  %62 = getelementptr inbounds double, double* %3, i64 %index181
  %63 = bitcast double* %62 to <2 x double>*
  store <2 x double> %60, <2 x double>* %63, align 8, !tbaa !70
  %64 = getelementptr inbounds double, double* %62, i64 2
  %65 = bitcast double* %64 to <2 x double>*
  store <2 x double> %61, <2 x double>* %65, align 8, !tbaa !70
  %index.next182 = add i64 %index181, 4
  %66 = icmp eq i64 %index.next182, %n.vec180
  br i1 %66, label %middle.block174, label %vector.body176, !llvm.loop !597

middle.block174:                                  ; preds = %vector.body176
  br i1 %cmp.n184, label %for.body7.i.preheader, label %for.body.i61.preheader251

for.body.i61.preheader251:                        ; preds = %for.body.i61.preheader, %middle.block174
  %indvars.iv39.i.ph = phi i64 [ 0, %for.body.i61.preheader ], [ %n.vec180, %middle.block174 ]
  br label %for.body.i61

for.body.i61:                                     ; preds = %for.body.i61.preheader251, %for.body.i61
  %indvars.iv39.i = phi i64 [ %indvars.iv.next40.i, %for.body.i61 ], [ %indvars.iv39.i.ph, %for.body.i61.preheader251 ]
  %arrayidx.i57 = getelementptr inbounds double, double* %arrayidx35, i64 %indvars.iv39.i
  %67 = load double, double* %arrayidx.i57, align 8, !tbaa !70
  %arrayidx2.i58 = getelementptr inbounds double, double* %2, i64 %indvars.iv39.i
  %68 = load double, double* %arrayidx2.i58, align 8, !tbaa !70
  %mul.i59 = fmul fast double %68, %67
  %arrayidx4.i60 = getelementptr inbounds double, double* %3, i64 %indvars.iv39.i
  store double %mul.i59, double* %arrayidx4.i60, align 8, !tbaa !70
  %indvars.iv.next40.i = add nuw nsw i64 %indvars.iv39.i, 1
  %exitcond42.not.i = icmp eq i64 %indvars.iv.next40.i, %wide.trip.count.i2
  br i1 %exitcond42.not.i, label %for.body7.i.preheader, label %for.body.i61, !llvm.loop !598

for.body7.i.preheader:                            ; preds = %for.body.i61, %middle.block174
  br label %for.body7.i

for.cond5.loopexit.i:                             ; preds = %for.body13.i, %middle.block150, %for.body7.i
  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1
  %exitcond38.not.i = icmp eq i64 %indvars.iv.next36.i, %wide.trip.count.i2
  br i1 %exitcond38.not.i, label %Qtimesx.exit.loopexit, label %for.body7.i, !llvm.loop !116

for.body7.i:                                      ; preds = %for.body7.i.preheader, %for.cond5.loopexit.i
  %indvars.iv35.i = phi i64 [ %indvars.iv.next36.i, %for.cond5.loopexit.i ], [ 0, %for.body7.i.preheader ]
  %indvars.iv31.i = phi i64 [ %indvars.iv.next32.i, %for.cond5.loopexit.i ], [ 1, %for.body7.i.preheader ]
  %i.128.i = phi i32 [ %add.i62, %for.cond5.loopexit.i ], [ 0, %for.body7.i.preheader ]
  %69 = xor i64 %indvars.iv35.i, -1
  %70 = add nsw i64 %69, %wide.trip.count.i2
  %indvars.iv.next36.i = add nuw nsw i64 %indvars.iv35.i, 1
  %add.i62 = add nuw nsw i32 %i.128.i, 1
  %cmp1224.i = icmp ult i64 %indvars.iv.next36.i, %wide.trip.count.i2
  br i1 %cmp1224.i, label %for.body13.lr.ph.i, label %for.cond5.loopexit.i

for.body13.lr.ph.i:                               ; preds = %for.body7.i
  %71 = xor i32 %i.128.i, -1
  %sub9.i = add i32 %mul8.i, %71
  %72 = trunc i64 %indvars.iv35.i to i32
  %mul10.i = mul nsw i32 %sub9.i, %72
  %div.i63 = sdiv i32 %mul10.i, 2
  %arrayidx19.i = getelementptr inbounds double, double* %2, i64 %indvars.iv35.i
  %73 = sext i32 %div.i63 to i64
  %74 = load double, double* %arrayidx19.i, align 8, !tbaa !70
  %min.iters.check153 = icmp ult i64 %70, 4
  br i1 %min.iters.check153, label %for.body13.i.preheader, label %vector.ph154

vector.ph154:                                     ; preds = %for.body13.lr.ph.i
  %n.vec156 = and i64 %70, -4
  %ind.end160 = add i64 %indvars.iv31.i, %n.vec156
  %ind.end162 = add i64 %n.vec156, %73
  %broadcast.splatinsert170 = insertelement <2 x double> poison, double %74, i32 0
  %broadcast.splat171 = shufflevector <2 x double> %broadcast.splatinsert170, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert172 = insertelement <2 x double> poison, double %74, i32 0
  %broadcast.splat173 = shufflevector <2 x double> %broadcast.splatinsert172, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body152

vector.body152:                                   ; preds = %vector.body152, %vector.ph154
  %index157 = phi i64 [ 0, %vector.ph154 ], [ %index.next158, %vector.body152 ]
  %offset.idx164 = add i64 %indvars.iv31.i, %index157
  %offset.idx165 = add i64 %index157, %73
  %75 = getelementptr inbounds double, double* %3, i64 %offset.idx164
  %76 = bitcast double* %75 to <2 x double>*
  %wide.load166 = load <2 x double>, <2 x double>* %76, align 8, !tbaa !70
  %77 = getelementptr inbounds double, double* %75, i64 2
  %78 = bitcast double* %77 to <2 x double>*
  %wide.load167 = load <2 x double>, <2 x double>* %78, align 8, !tbaa !70
  %79 = getelementptr inbounds double, double* %arrayidx39, i64 %offset.idx165
  %80 = bitcast double* %79 to <2 x double>*
  %wide.load168 = load <2 x double>, <2 x double>* %80, align 8, !tbaa !70
  %81 = getelementptr inbounds double, double* %79, i64 2
  %82 = bitcast double* %81 to <2 x double>*
  %wide.load169 = load <2 x double>, <2 x double>* %82, align 8, !tbaa !70
  %83 = fmul fast <2 x double> %broadcast.splat171, %wide.load168
  %84 = fmul fast <2 x double> %broadcast.splat173, %wide.load169
  %85 = fadd fast <2 x double> %83, %wide.load166
  %86 = fadd fast <2 x double> %84, %wide.load167
  %87 = bitcast double* %75 to <2 x double>*
  store <2 x double> %85, <2 x double>* %87, align 8, !tbaa !70
  %88 = bitcast double* %77 to <2 x double>*
  store <2 x double> %86, <2 x double>* %88, align 8, !tbaa !70
  %index.next158 = add i64 %index157, 4
  %89 = icmp eq i64 %index.next158, %n.vec156
  br i1 %89, label %middle.block150, label %vector.body152, !llvm.loop !599

middle.block150:                                  ; preds = %vector.body152
  %cmp.n163 = icmp eq i64 %70, %n.vec156
  br i1 %cmp.n163, label %for.cond5.loopexit.i, label %for.body13.i.preheader

for.body13.i.preheader:                           ; preds = %for.body13.lr.ph.i, %middle.block150
  %indvars.iv33.i.ph = phi i64 [ %indvars.iv31.i, %for.body13.lr.ph.i ], [ %ind.end160, %middle.block150 ]
  %indvars.iv.i64.ph = phi i64 [ %73, %for.body13.lr.ph.i ], [ %ind.end162, %middle.block150 ]
  br label %for.body13.i

for.body13.i:                                     ; preds = %for.body13.i.preheader, %for.body13.i
  %indvars.iv33.i = phi i64 [ %indvars.iv.next34.i, %for.body13.i ], [ %indvars.iv33.i.ph, %for.body13.i.preheader ]
  %indvars.iv.i64 = phi i64 [ %indvars.iv.next.i65, %for.body13.i ], [ %indvars.iv.i64.ph, %for.body13.i.preheader ]
  %arrayidx15.i = getelementptr inbounds double, double* %3, i64 %indvars.iv33.i
  %90 = load double, double* %arrayidx15.i, align 8, !tbaa !70
  %arrayidx17.i = getelementptr inbounds double, double* %arrayidx39, i64 %indvars.iv.i64
  %91 = load double, double* %arrayidx17.i, align 8, !tbaa !70
  %mul20.i = fmul fast double %74, %91
  %add21.i = fadd fast double %mul20.i, %90
  store double %add21.i, double* %arrayidx15.i, align 8, !tbaa !70
  %indvars.iv.next.i65 = add nsw i64 %indvars.iv.i64, 1
  %indvars.iv.next34.i = add nuw nsw i64 %indvars.iv33.i, 1
  %exitcond.not.i66 = icmp eq i64 %indvars.iv.next34.i, %wide.trip.count.i2
  br i1 %exitcond.not.i66, label %for.cond5.loopexit.i, label %for.body13.i, !llvm.loop !600

Qtimesx.exit.loopexit:                            ; preds = %for.cond5.loopexit.i
  %.pre = load double, double* %3, align 8, !tbaa !70
  br label %Qtimesx.exit

Qtimesx.exit:                                     ; preds = %Qtimesx.exit.loopexit, %for.body25
  %92 = phi double [ %.pre, %Qtimesx.exit.loopexit ], [ %34, %for.body25 ]
  %arrayidx42 = getelementptr inbounds double, double* %alphas, i64 %ik.076
  %93 = load double, double* %arrayidx42, align 8, !tbaa !70
  %arrayidx43 = getelementptr inbounds double, double* %1, i64 %ik.076
  %94 = load double, double* %arrayidx43, align 8, !tbaa !70
  %add44 = fadd fast double %94, %93
  %mul.i46 = fmul fast double %92, %92
  br i1 %cmp10.i47, label %for.body.i55.preheader, label %sqnorm.exit

for.body.i55.preheader:                           ; preds = %Qtimesx.exit
  br i1 %min.iters.check134, label %for.body.i55.preheader250, label %vector.ph135

vector.ph135:                                     ; preds = %for.body.i55.preheader
  %95 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul.i46, i32 0
  br label %vector.body133

vector.body133:                                   ; preds = %vector.body133, %vector.ph135
  %index138 = phi i64 [ 0, %vector.ph135 ], [ %index.next139, %vector.body133 ]
  %vec.phi144 = phi <2 x double> [ %95, %vector.ph135 ], [ %102, %vector.body133 ]
  %vec.phi145 = phi <2 x double> [ zeroinitializer, %vector.ph135 ], [ %103, %vector.body133 ]
  %offset.idx143 = or i64 %index138, 1
  %96 = getelementptr inbounds double, double* %3, i64 %offset.idx143
  %97 = bitcast double* %96 to <2 x double>*
  %wide.load146 = load <2 x double>, <2 x double>* %97, align 8, !tbaa !70
  %98 = getelementptr inbounds double, double* %96, i64 2
  %99 = bitcast double* %98 to <2 x double>*
  %wide.load147 = load <2 x double>, <2 x double>* %99, align 8, !tbaa !70
  %100 = fmul fast <2 x double> %wide.load146, %wide.load146
  %101 = fmul fast <2 x double> %wide.load147, %wide.load147
  %102 = fadd fast <2 x double> %100, %vec.phi144
  %103 = fadd fast <2 x double> %101, %vec.phi145
  %index.next139 = add i64 %index138, 4
  %104 = icmp eq i64 %index.next139, %n.vec137
  br i1 %104, label %middle.block131, label %vector.body133, !llvm.loop !601

middle.block131:                                  ; preds = %vector.body133
  %bin.rdx148 = fadd fast <2 x double> %103, %102
  %105 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx148)
  br i1 %cmp.n142, label %sqnorm.exit, label %for.body.i55.preheader250

for.body.i55.preheader250:                        ; preds = %for.body.i55.preheader, %middle.block131
  %indvars.iv.i50.ph = phi i64 [ 1, %for.body.i55.preheader ], [ %ind.end141, %middle.block131 ]
  %res.012.i.ph = phi double [ %mul.i46, %for.body.i55.preheader ], [ %105, %middle.block131 ]
  br label %for.body.i55

for.body.i55:                                     ; preds = %for.body.i55.preheader250, %for.body.i55
  %indvars.iv.i50 = phi i64 [ %indvars.iv.next.i53, %for.body.i55 ], [ %indvars.iv.i50.ph, %for.body.i55.preheader250 ]
  %res.012.i = phi double [ %add.i52, %for.body.i55 ], [ %res.012.i.ph, %for.body.i55.preheader250 ]
  %arrayidx2.i51 = getelementptr inbounds double, double* %3, i64 %indvars.iv.i50
  %106 = load double, double* %arrayidx2.i51, align 8, !tbaa !70
  %mul5.i = fmul fast double %106, %106
  %add.i52 = fadd fast double %mul5.i, %res.012.i
  %indvars.iv.next.i53 = add nuw nsw i64 %indvars.iv.i50, 1
  %exitcond.not.i54 = icmp eq i64 %indvars.iv.next.i53, %wide.trip.count.i2
  br i1 %exitcond.not.i54, label %sqnorm.exit, label %for.body.i55, !llvm.loop !602

sqnorm.exit:                                      ; preds = %for.body.i55, %middle.block131, %Qtimesx.exit
  %res.0.lcssa.i = phi double [ %mul.i46, %Qtimesx.exit ], [ %105, %middle.block131 ], [ %add.i52, %for.body.i55 ]
  %mul47.neg = fmul fast double %res.0.lcssa.i, -5.000000e-01
  %sub48 = fadd fast double %add44, %mul47.neg
  %arrayidx49 = getelementptr inbounds double, double* %4, i64 %ik.076
  store double %sub48, double* %arrayidx49, align 8, !tbaa !70
  %inc = add nuw nsw i64 %ik.076, 1
  %exitcond.not = icmp eq i64 %inc, %conv8
  br i1 %exitcond.not, label %for.end.loopexit, label %for.body25, !llvm.loop !137

for.end.loopexit:                                 ; preds = %sqnorm.exit
  %.pre90 = load double, double* %4, align 8, !tbaa !70
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %for.cond22.preheader
  %107 = phi double [ %.pre90, %for.end.loopexit ], [ %32, %for.cond22.preheader ]
  %108 = phi double [ %92, %for.end.loopexit ], [ %33, %for.cond22.preheader ]
  br i1 %cmp9.i.i17, label %for.body.i.i27.preheader, label %arr_max.exit.i30

for.body.i.i27.preheader:                         ; preds = %for.end
  br i1 %min.iters.check116, label %for.body.i.i27.preheader254, label %vector.ph117

vector.ph117:                                     ; preds = %for.body.i.i27.preheader
  %minmax.ident.splatinsert = insertelement <2 x double> poison, double %107, i32 0
  %minmax.ident.splat = shufflevector <2 x double> %minmax.ident.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body115

vector.body115:                                   ; preds = %vector.body115, %vector.ph117
  %index120 = phi i64 [ 0, %vector.ph117 ], [ %index.next121, %vector.body115 ]
  %vec.phi126 = phi <2 x double> [ %minmax.ident.splat, %vector.ph117 ], [ %115, %vector.body115 ]
  %vec.phi127 = phi <2 x double> [ %minmax.ident.splat, %vector.ph117 ], [ %116, %vector.body115 ]
  %offset.idx125 = or i64 %index120, 1
  %109 = getelementptr inbounds double, double* %4, i64 %offset.idx125
  %110 = bitcast double* %109 to <2 x double>*
  %wide.load128 = load <2 x double>, <2 x double>* %110, align 8, !tbaa !70
  %111 = getelementptr inbounds double, double* %109, i64 2
  %112 = bitcast double* %111 to <2 x double>*
  %wide.load129 = load <2 x double>, <2 x double>* %112, align 8, !tbaa !70
  %113 = fcmp fast olt <2 x double> %vec.phi126, %wide.load128
  %114 = fcmp fast olt <2 x double> %vec.phi127, %wide.load129
  %115 = select <2 x i1> %113, <2 x double> %wide.load128, <2 x double> %vec.phi126
  %116 = select <2 x i1> %114, <2 x double> %wide.load129, <2 x double> %vec.phi127
  %index.next121 = add i64 %index120, 4
  %117 = icmp eq i64 %index.next121, %n.vec119
  br i1 %117, label %middle.block113, label %vector.body115, !llvm.loop !603

middle.block113:                                  ; preds = %vector.body115
  %118 = call fast <2 x double> @llvm.maxnum.v2f64(<2 x double> %115, <2 x double> %116)
  %119 = call double @llvm.vector.reduce.fmax.v2f64(<2 x double> %118)
  br i1 %cmp.n124, label %arr_max.exit.i30, label %for.body.i.i27.preheader254

for.body.i.i27.preheader254:                      ; preds = %for.body.i.i27.preheader, %middle.block113
  %indvars.iv.i.i20.ph = phi i64 [ 1, %for.body.i.i27.preheader ], [ %ind.end123, %middle.block113 ]
  %m.011.i.i21.ph = phi double [ %107, %for.body.i.i27.preheader ], [ %119, %middle.block113 ]
  br label %for.body.i.i27

for.body.i.i27:                                   ; preds = %for.body.i.i27.preheader254, %for.body.i.i27
  %indvars.iv.i.i20 = phi i64 [ %indvars.iv.next.i.i25, %for.body.i.i27 ], [ %indvars.iv.i.i20.ph, %for.body.i.i27.preheader254 ]
  %m.011.i.i21 = phi double [ %m.1.i.i24, %for.body.i.i27 ], [ %m.011.i.i21.ph, %for.body.i.i27.preheader254 ]
  %arrayidx1.i.i22 = getelementptr inbounds double, double* %4, i64 %indvars.iv.i.i20
  %120 = load double, double* %arrayidx1.i.i22, align 8, !tbaa !70
  %cmp2.i.i23 = fcmp fast olt double %m.011.i.i21, %120
  %m.1.i.i24 = select i1 %cmp2.i.i23, double %120, double %m.011.i.i21
  %indvars.iv.next.i.i25 = add nuw nsw i64 %indvars.iv.i.i20, 1
  %exitcond.not.i.i26 = icmp eq i64 %indvars.iv.next.i.i25, %wide.trip.count.i.i18
  br i1 %exitcond.not.i.i26, label %arr_max.exit.i30, label %for.body.i.i27, !llvm.loop !604

arr_max.exit.i30:                                 ; preds = %for.body.i.i27, %middle.block113, %for.end
  %m.0.lcssa.i.i28 = phi double [ %107, %for.end ], [ %119, %middle.block113 ], [ %m.1.i.i24, %for.body.i.i27 ]
  br i1 %cmp22.i, label %for.body.preheader.i32, label %log_sum_exp.exit45

for.body.preheader.i32:                           ; preds = %arr_max.exit.i30
  %sub.i3578 = fsub fast double %107, %m.0.lcssa.i.i28
  %121 = tail call fast double @llvm.exp.f64(double %sub.i3578) #38
  br i1 %exitcond.not.i3880, label %log_sum_exp.exit45, label %for.body.for.body_crit_edge.i42.preheader, !llvm.loop !95

for.body.for.body_crit_edge.i42.preheader:        ; preds = %for.body.preheader.i32
  br i1 %min.iters.check97, label %for.body.for.body_crit_edge.i42.preheader253, label %vector.ph98

vector.ph98:                                      ; preds = %for.body.for.body_crit_edge.i42.preheader
  %122 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %121, i32 0
  %broadcast.splatinsert = insertelement <2 x double> poison, double %m.0.lcssa.i.i28, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert109 = insertelement <2 x double> poison, double %m.0.lcssa.i.i28, i32 0
  %broadcast.splat110 = shufflevector <2 x double> %broadcast.splatinsert109, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body96

vector.body96:                                    ; preds = %vector.body96, %vector.ph98
  %index101 = phi i64 [ 0, %vector.ph98 ], [ %index.next102, %vector.body96 ]
  %vec.phi105 = phi <2 x double> [ %122, %vector.ph98 ], [ %131, %vector.body96 ]
  %vec.phi106 = phi <2 x double> [ zeroinitializer, %vector.ph98 ], [ %132, %vector.body96 ]
  %offset.idx = or i64 %index101, 1
  %123 = getelementptr inbounds double, double* %4, i64 %offset.idx
  %124 = bitcast double* %123 to <2 x double>*
  %wide.load107 = load <2 x double>, <2 x double>* %124, align 8, !tbaa !70
  %125 = getelementptr inbounds double, double* %123, i64 2
  %126 = bitcast double* %125 to <2 x double>*
  %wide.load108 = load <2 x double>, <2 x double>* %126, align 8, !tbaa !70
  %127 = fsub fast <2 x double> %wide.load107, %broadcast.splat
  %128 = fsub fast <2 x double> %wide.load108, %broadcast.splat110
  %129 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %127)
  %130 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %128)
  %131 = fadd fast <2 x double> %129, %vec.phi105
  %132 = fadd fast <2 x double> %130, %vec.phi106
  %index.next102 = add i64 %index101, 4
  %133 = icmp eq i64 %index.next102, %n.vec100
  br i1 %133, label %middle.block94, label %vector.body96, !llvm.loop !605

middle.block94:                                   ; preds = %vector.body96
  %bin.rdx111 = fadd fast <2 x double> %132, %131
  %134 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx111)
  br i1 %cmp.n104, label %log_sum_exp.exit45, label %for.body.for.body_crit_edge.i42.preheader253

for.body.for.body_crit_edge.i42.preheader253:     ; preds = %for.body.for.body_crit_edge.i42.preheader, %middle.block94
  %indvars.iv.next.i3782.ph = phi i64 [ 1, %for.body.for.body_crit_edge.i42.preheader ], [ %ind.end, %middle.block94 ]
  %add.i3681.ph = phi double [ %121, %for.body.for.body_crit_edge.i42.preheader ], [ %134, %middle.block94 ]
  br label %for.body.for.body_crit_edge.i42

for.body.for.body_crit_edge.i42:                  ; preds = %for.body.for.body_crit_edge.i42.preheader253, %for.body.for.body_crit_edge.i42
  %indvars.iv.next.i3782 = phi i64 [ %indvars.iv.next.i37, %for.body.for.body_crit_edge.i42 ], [ %indvars.iv.next.i3782.ph, %for.body.for.body_crit_edge.i42.preheader253 ]
  %add.i3681 = phi double [ %add.i36, %for.body.for.body_crit_edge.i42 ], [ %add.i3681.ph, %for.body.for.body_crit_edge.i42.preheader253 ]
  %arrayidx.phi.trans.insert.i40 = getelementptr inbounds double, double* %4, i64 %indvars.iv.next.i3782
  %.pre.i41 = load double, double* %arrayidx.phi.trans.insert.i40, align 8, !tbaa !70
  %sub.i35 = fsub fast double %.pre.i41, %m.0.lcssa.i.i28
  %135 = tail call fast double @llvm.exp.f64(double %sub.i35) #38
  %add.i36 = fadd fast double %135, %add.i3681
  %indvars.iv.next.i37 = add nuw nsw i64 %indvars.iv.next.i3782, 1
  %exitcond.not.i38 = icmp eq i64 %indvars.iv.next.i37, %wide.trip.count.i.i18
  br i1 %exitcond.not.i38, label %log_sum_exp.exit45, label %for.body.for.body_crit_edge.i42, !llvm.loop !606

log_sum_exp.exit45:                               ; preds = %for.body.for.body_crit_edge.i42, %middle.block94, %for.body.preheader.i32, %arr_max.exit.i30
  %semx.0.lcssa.i43 = phi double [ 0.000000e+00, %arr_max.exit.i30 ], [ %121, %for.body.preheader.i32 ], [ %134, %middle.block94 ], [ %add.i36, %for.body.for.body_crit_edge.i42 ]
  %136 = tail call fast double @llvm.log.f64(double %semx.0.lcssa.i43) #38
  %add1.i44 = fadd fast double %m.0.lcssa.i.i28, %slse.086
  %add52 = fadd fast double %add1.i44, %136
  %tiv.next = add nuw nsw i64 %tiv.next87, 1
  %exitcond89.not = icmp eq i64 %tiv.next87, %conv2191
  br i1 %exitcond89.not, label %for.end55, label %for.cond22.preheader, !llvm.loop !142

for.end55:                                        ; preds = %log_sum_exp.exit45, %preprocess_qs.exit
  %slse.0.lcssa = phi double [ 0.000000e+00, %preprocess_qs.exit ], [ %add52, %log_sum_exp.exit45 ]
  %137 = load double, double* %alphas, align 8, !tbaa !70
  %cmp9.i.i = icmp sgt i32 %k, 1
  br i1 %cmp9.i.i, label %for.body.preheader.i.i, label %arr_max.exit.i

for.body.preheader.i.i:                           ; preds = %for.end55
  %wide.trip.count.i.i = zext i32 %k to i64
  %138 = add nsw i64 %wide.trip.count.i.i, -1
  %min.iters.check207 = icmp ult i64 %138, 4
  br i1 %min.iters.check207, label %for.body.i.i.preheader, label %vector.ph208

vector.ph208:                                     ; preds = %for.body.preheader.i.i
  %n.vec210 = and i64 %138, -4
  %ind.end214 = or i64 %n.vec210, 1
  %minmax.ident.splatinsert217 = insertelement <2 x double> poison, double %137, i32 0
  %minmax.ident.splat218 = shufflevector <2 x double> %minmax.ident.splatinsert217, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body206

vector.body206:                                   ; preds = %vector.body206, %vector.ph208
  %index211 = phi i64 [ 0, %vector.ph208 ], [ %index.next212, %vector.body206 ]
  %vec.phi219 = phi <2 x double> [ %minmax.ident.splat218, %vector.ph208 ], [ %145, %vector.body206 ]
  %vec.phi220 = phi <2 x double> [ %minmax.ident.splat218, %vector.ph208 ], [ %146, %vector.body206 ]
  %offset.idx216 = or i64 %index211, 1
  %139 = getelementptr inbounds double, double* %alphas, i64 %offset.idx216
  %140 = bitcast double* %139 to <2 x double>*
  %wide.load221 = load <2 x double>, <2 x double>* %140, align 8, !tbaa !70
  %141 = getelementptr inbounds double, double* %139, i64 2
  %142 = bitcast double* %141 to <2 x double>*
  %wide.load222 = load <2 x double>, <2 x double>* %142, align 8, !tbaa !70
  %143 = fcmp fast olt <2 x double> %vec.phi219, %wide.load221
  %144 = fcmp fast olt <2 x double> %vec.phi220, %wide.load222
  %145 = select <2 x i1> %143, <2 x double> %wide.load221, <2 x double> %vec.phi219
  %146 = select <2 x i1> %144, <2 x double> %wide.load222, <2 x double> %vec.phi220
  %index.next212 = add i64 %index211, 4
  %147 = icmp eq i64 %index.next212, %n.vec210
  br i1 %147, label %middle.block204, label %vector.body206, !llvm.loop !607

middle.block204:                                  ; preds = %vector.body206
  %148 = call fast <2 x double> @llvm.maxnum.v2f64(<2 x double> %145, <2 x double> %146)
  %149 = call double @llvm.vector.reduce.fmax.v2f64(<2 x double> %148)
  %cmp.n215 = icmp eq i64 %138, %n.vec210
  br i1 %cmp.n215, label %arr_max.exit.i, label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %for.body.preheader.i.i, %middle.block204
  %indvars.iv.i.i.ph = phi i64 [ 1, %for.body.preheader.i.i ], [ %ind.end214, %middle.block204 ]
  %m.011.i.i.ph = phi double [ %137, %for.body.preheader.i.i ], [ %149, %middle.block204 ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.preheader, %for.body.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i, %for.body.i.i ], [ %indvars.iv.i.i.ph, %for.body.i.i.preheader ]
  %m.011.i.i = phi double [ %m.1.i.i, %for.body.i.i ], [ %m.011.i.i.ph, %for.body.i.i.preheader ]
  %arrayidx1.i.i = getelementptr inbounds double, double* %alphas, i64 %indvars.iv.i.i
  %150 = load double, double* %arrayidx1.i.i, align 8, !tbaa !70
  %cmp2.i.i = fcmp fast olt double %m.011.i.i, %150
  %m.1.i.i = select i1 %cmp2.i.i, double %150, double %m.011.i.i
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %arr_max.exit.i, label %for.body.i.i, !llvm.loop !608

arr_max.exit.i:                                   ; preds = %for.body.i.i, %middle.block204, %for.end55
  %m.0.lcssa.i.i = phi double [ %137, %for.end55 ], [ %149, %middle.block204 ], [ %m.1.i.i, %for.body.i.i ]
  br i1 %cmp22.i, label %for.body.preheader.i9, label %log_sum_exp.exit

for.body.preheader.i9:                            ; preds = %arr_max.exit.i
  %wide.trip.count.i8 = zext i32 %k to i64
  %sub.i1171 = fsub fast double %137, %m.0.lcssa.i.i
  %151 = tail call fast double @llvm.exp.f64(double %sub.i1171) #38
  %exitcond.not.i1472 = icmp eq i32 %k, 1
  br i1 %exitcond.not.i1472, label %log_sum_exp.exit, label %for.body.for.body_crit_edge.i.preheader, !llvm.loop !95

for.body.for.body_crit_edge.i.preheader:          ; preds = %for.body.preheader.i9
  %152 = add nsw i64 %wide.trip.count.i8, -1
  %min.iters.check229 = icmp ult i64 %152, 4
  br i1 %min.iters.check229, label %for.body.for.body_crit_edge.i.preheader249, label %vector.ph230

vector.ph230:                                     ; preds = %for.body.for.body_crit_edge.i.preheader
  %n.vec232 = and i64 %152, -4
  %ind.end236 = or i64 %n.vec232, 1
  %153 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %151, i32 0
  %broadcast.splatinsert243 = insertelement <2 x double> poison, double %m.0.lcssa.i.i, i32 0
  %broadcast.splat244 = shufflevector <2 x double> %broadcast.splatinsert243, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert245 = insertelement <2 x double> poison, double %m.0.lcssa.i.i, i32 0
  %broadcast.splat246 = shufflevector <2 x double> %broadcast.splatinsert245, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body228

vector.body228:                                   ; preds = %vector.body228, %vector.ph230
  %index233 = phi i64 [ 0, %vector.ph230 ], [ %index.next234, %vector.body228 ]
  %vec.phi239 = phi <2 x double> [ %153, %vector.ph230 ], [ %162, %vector.body228 ]
  %vec.phi240 = phi <2 x double> [ zeroinitializer, %vector.ph230 ], [ %163, %vector.body228 ]
  %offset.idx238 = or i64 %index233, 1
  %154 = getelementptr inbounds double, double* %alphas, i64 %offset.idx238
  %155 = bitcast double* %154 to <2 x double>*
  %wide.load241 = load <2 x double>, <2 x double>* %155, align 8, !tbaa !70
  %156 = getelementptr inbounds double, double* %154, i64 2
  %157 = bitcast double* %156 to <2 x double>*
  %wide.load242 = load <2 x double>, <2 x double>* %157, align 8, !tbaa !70
  %158 = fsub fast <2 x double> %wide.load241, %broadcast.splat244
  %159 = fsub fast <2 x double> %wide.load242, %broadcast.splat246
  %160 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %158)
  %161 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %159)
  %162 = fadd fast <2 x double> %160, %vec.phi239
  %163 = fadd fast <2 x double> %161, %vec.phi240
  %index.next234 = add i64 %index233, 4
  %164 = icmp eq i64 %index.next234, %n.vec232
  br i1 %164, label %middle.block226, label %vector.body228, !llvm.loop !609

middle.block226:                                  ; preds = %vector.body228
  %bin.rdx247 = fadd fast <2 x double> %163, %162
  %165 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx247)
  %cmp.n237 = icmp eq i64 %152, %n.vec232
  br i1 %cmp.n237, label %log_sum_exp.exit, label %for.body.for.body_crit_edge.i.preheader249

for.body.for.body_crit_edge.i.preheader249:       ; preds = %for.body.for.body_crit_edge.i.preheader, %middle.block226
  %indvars.iv.next.i1374.ph = phi i64 [ 1, %for.body.for.body_crit_edge.i.preheader ], [ %ind.end236, %middle.block226 ]
  %add.i1273.ph = phi double [ %151, %for.body.for.body_crit_edge.i.preheader ], [ %165, %middle.block226 ]
  br label %for.body.for.body_crit_edge.i

for.body.for.body_crit_edge.i:                    ; preds = %for.body.for.body_crit_edge.i.preheader249, %for.body.for.body_crit_edge.i
  %indvars.iv.next.i1374 = phi i64 [ %indvars.iv.next.i13, %for.body.for.body_crit_edge.i ], [ %indvars.iv.next.i1374.ph, %for.body.for.body_crit_edge.i.preheader249 ]
  %add.i1273 = phi double [ %add.i12, %for.body.for.body_crit_edge.i ], [ %add.i1273.ph, %for.body.for.body_crit_edge.i.preheader249 ]
  %arrayidx.phi.trans.insert.i = getelementptr inbounds double, double* %alphas, i64 %indvars.iv.next.i1374
  %.pre.i16 = load double, double* %arrayidx.phi.trans.insert.i, align 8, !tbaa !70
  %sub.i11 = fsub fast double %.pre.i16, %m.0.lcssa.i.i
  %166 = tail call fast double @llvm.exp.f64(double %sub.i11) #38
  %add.i12 = fadd fast double %166, %add.i1273
  %indvars.iv.next.i13 = add nuw nsw i64 %indvars.iv.next.i1374, 1
  %exitcond.not.i14 = icmp eq i64 %indvars.iv.next.i13, %wide.trip.count.i8
  br i1 %exitcond.not.i14, label %log_sum_exp.exit, label %for.body.for.body_crit_edge.i, !llvm.loop !610

log_sum_exp.exit:                                 ; preds = %for.body.for.body_crit_edge.i, %middle.block226, %for.body.preheader.i9, %arr_max.exit.i
  %semx.0.lcssa.i = phi double [ 0.000000e+00, %arr_max.exit.i ], [ %151, %for.body.preheader.i9 ], [ %165, %middle.block226 ], [ %add.i12, %for.body.for.body_crit_edge.i ]
  %167 = mul i32 %d, %n
  %mul = sub i32 0, %167
  %conv = sitofp i32 %mul to double
  %mul2 = fmul fast double %conv, 0x3FED67F1C864BFDD
  %168 = tail call fast double @llvm.log.f64(double %semx.0.lcssa.i) #38
  %add1.i = fadd fast double %168, %m.0.lcssa.i.i
  %add57 = fadd fast double %slse.0.lcssa, %mul2
  %conv58 = sitofp i32 %n to double
  %agg.tmp.sroa.0.0..sroa_idx = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i64 0, i32 0
  %agg.tmp.sroa.0.0.copyload = load double, double* %agg.tmp.sroa.0.0..sroa_idx, align 8, !tbaa.struct !147
  %agg.tmp.sroa.2.0..sroa_idx1 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i64 0, i32 1
  %agg.tmp.sroa.2.0.copyload = load i32, i32* %agg.tmp.sroa.2.0..sroa_idx1, align 8, !tbaa.struct !148
  %call63 = tail call fast double @log_wishart_prior(i32 %d, i32 %k, double %agg.tmp.sroa.0.0.copyload, i32 %agg.tmp.sroa.2.0.copyload, double* %1, double* %0, double* %icf)
  %sub60 = fadd fast double %add57, %call63
  %169 = fmul fast double %add1.i, %conv58
  %add64 = fsub fast double %sub60, %169
  store double %add64, double* %err, align 8, !tbaa !70
  tail call void @free(i8* %call) #38
  tail call void @free(i8* %call10) #38
  tail call void @free(i8* %call13) #38
  tail call void @free(i8* %call16) #38
  tail call void @free(i8* %call19) #38
  ret void
}

; Function Attrs: nofree nounwind uwtable mustprogress
define dso_local void @preprocess_preprocess_qs(i32 %d, i32 %k, double* nocapture readonly %icf, double* nocapture %sum_qs, double* nocapture %Qdiags) local_unnamed_addr #19 {
entry:
  %cmp3 = icmp sgt i32 %k, 0
  br i1 %cmp3, label %for.body.lr.ph, label %for.end19

for.body.lr.ph:                                   ; preds = %entry
  %add = add nsw i32 %d, 1
  %mul = mul nsw i32 %add, %d
  %div = sdiv i32 %mul, 2
  %cmp21 = icmp sgt i32 %d, 0
  %0 = sext i32 %div to i64
  %1 = sext i32 %d to i64
  %wide.trip.count13 = zext i32 %k to i64
  %wide.trip.count = zext i32 %d to i64
  %exitcond.not18 = icmp eq i32 %d, 1
  br label %for.body

for.cond.loopexit:                                ; preds = %for.body3.for.body3_crit_edge, %for.body3.lr.ph, %for.body
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1
  %exitcond14.not = icmp eq i64 %indvars.iv.next10, %wide.trip.count13
  br i1 %exitcond14.not, label %for.end19, label %for.body, !llvm.loop !105

for.body:                                         ; preds = %for.body.lr.ph, %for.cond.loopexit
  %indvars.iv9 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next10, %for.cond.loopexit ]
  %sext = shl i64 %indvars.iv9, 32
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx = getelementptr inbounds double, double* %sum_qs, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !70
  br i1 %cmp21, label %for.body3.lr.ph, label %for.cond.loopexit

for.body3.lr.ph:                                  ; preds = %for.body
  %2 = mul nsw i64 %indvars.iv9, %0
  %3 = mul nsw i64 %indvars.iv9, %1
  %arrayidx715 = getelementptr inbounds double, double* %icf, i64 %2
  %4 = load double, double* %arrayidx715, align 8, !tbaa !70
  store double %4, double* %arrayidx, align 8, !tbaa !70
  %5 = tail call fast double @llvm.exp.f64(double %4)
  %arrayidx1617 = getelementptr inbounds double, double* %Qdiags, i64 %3
  store double %5, double* %arrayidx1617, align 8, !tbaa !70
  br i1 %exitcond.not18, label %for.cond.loopexit, label %for.body3.for.body3_crit_edge, !llvm.loop !104

for.body3.for.body3_crit_edge:                    ; preds = %for.body3.lr.ph, %for.body3.for.body3_crit_edge
  %indvars.iv.next19 = phi i64 [ %indvars.iv.next, %for.body3.for.body3_crit_edge ], [ 1, %for.body3.lr.ph ]
  %.pre = load double, double* %arrayidx, align 8, !tbaa !70
  %6 = add nsw i64 %indvars.iv.next19, %2
  %arrayidx7 = getelementptr inbounds double, double* %icf, i64 %6
  %7 = load double, double* %arrayidx7, align 8, !tbaa !70
  %add10 = fadd fast double %.pre, %7
  store double %add10, double* %arrayidx, align 8, !tbaa !70
  %8 = tail call fast double @llvm.exp.f64(double %7)
  %9 = add nsw i64 %indvars.iv.next19, %3
  %arrayidx16 = getelementptr inbounds double, double* %Qdiags, i64 %9
  store double %8, double* %arrayidx16, align 8, !tbaa !70
  %indvars.iv.next = add nuw nsw i64 %indvars.iv.next19, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.loopexit, label %for.body3.for.body3_crit_edge, !llvm.loop !104

for.end19:                                        ; preds = %for.cond.loopexit, %entry
  ret void
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #34

; Function Attrs: norecurse nounwind readonly uwtable willreturn mustprogress
define dso_local double @preprocess_sqnorm(i32 %n, double* nocapture readonly %x) local_unnamed_addr #9 {
entry:
  %0 = load double, double* %x, align 8, !tbaa !70
  %mul = fmul fast double %0, %0
  %cmp1 = icmp sgt i32 %n, 1
  br i1 %cmp1, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  %1 = add nsw i64 %wide.trip.count, -1
  %min.iters.check = icmp ult i64 %1, 4
  br i1 %min.iters.check, label %for.body.preheader7, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %for.body.preheader
  %2 = add nsw i64 %wide.trip.count, -2
  %3 = trunc i64 %2 to i32
  %4 = add i32 %3, 1
  %5 = icmp slt i32 %4, 1
  %6 = icmp ugt i64 %2, 4294967295
  %7 = or i1 %5, %6
  br i1 %7, label %for.body.preheader7, label %vector.ph

vector.ph:                                        ; preds = %vector.scevcheck
  %n.vec = and i64 %1, -4
  %ind.end = or i64 %n.vec, 1
  %8 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul, i32 0
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %8, %vector.ph ], [ %17, %vector.body ]
  %vec.phi5 = phi <2 x double> [ zeroinitializer, %vector.ph ], [ %18, %vector.body ]
  %offset.idx = shl i64 %index, 32
  %9 = ashr exact i64 %offset.idx, 32
  %10 = or i64 %9, 1
  %11 = getelementptr inbounds double, double* %x, i64 %10
  %12 = bitcast double* %11 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %12, align 8, !tbaa !70
  %13 = getelementptr inbounds double, double* %11, i64 2
  %14 = bitcast double* %13 to <2 x double>*
  %wide.load6 = load <2 x double>, <2 x double>* %14, align 8, !tbaa !70
  %15 = fmul fast <2 x double> %wide.load, %wide.load
  %16 = fmul fast <2 x double> %wide.load6, %wide.load6
  %17 = fadd fast <2 x double> %15, %vec.phi
  %18 = fadd fast <2 x double> %16, %vec.phi5
  %index.next = add i64 %index, 4
  %19 = icmp eq i64 %index.next, %n.vec
  br i1 %19, label %middle.block, label %vector.body, !llvm.loop !611

middle.block:                                     ; preds = %vector.body
  %bin.rdx = fadd fast <2 x double> %18, %17
  %20 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  %cmp.n = icmp eq i64 %1, %n.vec
  br i1 %cmp.n, label %for.end, label %for.body.preheader7

for.body.preheader7:                              ; preds = %vector.scevcheck, %for.body.preheader, %middle.block
  %.ph = phi i64 [ 1, %vector.scevcheck ], [ 1, %for.body.preheader ], [ %ind.end, %middle.block ]
  %res.02.ph = phi double [ %mul, %vector.scevcheck ], [ %mul, %for.body.preheader ], [ %20, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader7, %for.body
  %21 = phi i64 [ %23, %for.body ], [ %.ph, %for.body.preheader7 ]
  %res.02 = phi double [ %add, %for.body ], [ %res.02.ph, %for.body.preheader7 ]
  %sext = shl i64 %21, 32
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %idxprom
  %22 = load double, double* %arrayidx2, align 8, !tbaa !70
  %mul5 = fmul fast double %22, %22
  %add = fadd fast double %mul5, %res.02
  %23 = add nuw nsw i64 %21, 1
  %exitcond.not = icmp eq i64 %23, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !612

for.end:                                          ; preds = %for.body, %middle.block, %entry
  %res.0.lcssa = phi double [ %mul, %entry ], [ %20, %middle.block ], [ %add, %for.body ]
  ret double %res.0.lcssa
}

; Function Attrs: nofree norecurse nounwind uwtable mustprogress
define dso_local void @preprocess_Qtimesx(i32 %d, double* nocapture readonly %Qdiag, double* nocapture readonly %ltri, double* nocapture readonly %x, double* nocapture %out) local_unnamed_addr #15 {
entry:
  %x25 = bitcast double* %x to i8*
  %cmp10 = icmp sgt i32 %d, 0
  br i1 %cmp10, label %for.body.preheader, label %for.end30

for.body.preheader:                               ; preds = %entry
  %wide.trip.count17 = zext i32 %d to i64
  %min.iters.check = icmp ult i32 %d, 4
  %0 = add nsw i64 %wide.trip.count17, -1
  %1 = icmp ugt i64 %0, 2147483647
  %or.cond = or i1 %min.iters.check, %1
  br i1 %or.cond, label %for.body.preheader76, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.preheader
  %scevgep = getelementptr double, double* %out, i64 %wide.trip.count17
  %scevgep23 = getelementptr double, double* %Qdiag, i64 %wide.trip.count17
  %scevgep26 = getelementptr double, double* %x, i64 %wide.trip.count17
  %bound0 = icmp ugt double* %scevgep23, %out
  %bound1 = icmp ugt double* %scevgep, %Qdiag
  %found.conflict = and i1 %bound0, %bound1
  %bound028 = icmp ugt double* %scevgep26, %out
  %bound129 = icmp ugt double* %scevgep, %x
  %found.conflict30 = and i1 %bound028, %bound129
  %conflict.rdx = or i1 %found.conflict, %found.conflict30
  br i1 %conflict.rdx, label %for.body.preheader76, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count17, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %2 = shl i64 %index, 32
  %3 = ashr exact i64 %2, 32
  %4 = getelementptr inbounds double, double* %Qdiag, i64 %3
  %5 = bitcast double* %4 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %5, align 8, !tbaa !70, !alias.scope !613
  %6 = getelementptr inbounds double, double* %4, i64 2
  %7 = bitcast double* %6 to <2 x double>*
  %wide.load31 = load <2 x double>, <2 x double>* %7, align 8, !tbaa !70, !alias.scope !613
  %8 = getelementptr inbounds double, double* %x, i64 %3
  %9 = bitcast double* %8 to <2 x double>*
  %wide.load32 = load <2 x double>, <2 x double>* %9, align 8, !tbaa !70, !alias.scope !616
  %10 = getelementptr inbounds double, double* %8, i64 2
  %11 = bitcast double* %10 to <2 x double>*
  %wide.load33 = load <2 x double>, <2 x double>* %11, align 8, !tbaa !70, !alias.scope !616
  %12 = fmul fast <2 x double> %wide.load32, %wide.load
  %13 = fmul fast <2 x double> %wide.load33, %wide.load31
  %14 = getelementptr inbounds double, double* %out, i64 %3
  %15 = bitcast double* %14 to <2 x double>*
  store <2 x double> %12, <2 x double>* %15, align 8, !tbaa !70, !alias.scope !618, !noalias !620
  %16 = getelementptr inbounds double, double* %14, i64 2
  %17 = bitcast double* %16 to <2 x double>*
  store <2 x double> %13, <2 x double>* %17, align 8, !tbaa !70, !alias.scope !618, !noalias !620
  %index.next = add i64 %index, 4
  %18 = icmp eq i64 %index.next, %n.vec
  br i1 %18, label %middle.block, label %vector.body, !llvm.loop !621

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count17
  br i1 %cmp.n, label %for.cond5.preheader, label %for.body.preheader76

for.body.preheader76:                             ; preds = %vector.memcheck, %for.body.preheader, %middle.block
  %tiv111.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.preheader ], [ %n.vec, %middle.block ]
  br label %for.body

for.cond5.preheader:                              ; preds = %for.body, %middle.block
  br i1 %cmp10, label %for.body7.lr.ph, label %for.end30

for.body7.lr.ph:                                  ; preds = %for.cond5.preheader
  %mul8 = shl nuw nsw i32 %d, 1
  %19 = add nuw i32 %d, 1
  %wide.trip.count14 = zext i32 %19 to i64
  %wide.trip.count = zext i32 %d to i64
  %scevgep43 = getelementptr double, double* %out, i64 %wide.trip.count17
  %uglygep = getelementptr i8, i8* %x25, i64 1
  br label %for.body7

for.body:                                         ; preds = %for.body.preheader76, %for.body
  %tiv111 = phi i64 [ %tiv.next2, %for.body ], [ %tiv111.ph, %for.body.preheader76 ]
  %tiv.next2 = add nuw nsw i64 %tiv111, 1
  %sext2 = shl i64 %tiv111, 32
  %idxprom = ashr exact i64 %sext2, 32
  %arrayidx = getelementptr inbounds double, double* %Qdiag, i64 %idxprom
  %20 = load double, double* %arrayidx, align 8, !tbaa !70
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %idxprom
  %21 = load double, double* %arrayidx2, align 8, !tbaa !70
  %mul = fmul fast double %21, %20
  %arrayidx4 = getelementptr inbounds double, double* %out, i64 %idxprom
  store double %mul, double* %arrayidx4, align 8, !tbaa !70
  %exitcond18.not = icmp eq i64 %tiv.next2, %wide.trip.count17
  br i1 %exitcond18.not, label %for.cond5.preheader, label %for.body, !llvm.loop !622

for.cond5.loopexit:                               ; preds = %for.body13, %middle.block34, %for.body7
  %22 = trunc i64 %tiv.next9 to i32
  %tiv.next = add nuw nsw i64 %tiv.next9, 1
  %exitcond15.not = icmp eq i64 %tiv.next, %wide.trip.count14
  %indvar.next = add i64 %indvar, 1
  br i1 %exitcond15.not, label %for.end30, label %for.body7, !llvm.loop !116

for.body7:                                        ; preds = %for.body7.lr.ph, %for.cond5.loopexit
  %indvar = phi i64 [ 0, %for.body7.lr.ph ], [ %indvar.next, %for.cond5.loopexit ]
  %tiv.next9 = phi i64 [ 1, %for.body7.lr.ph ], [ %tiv.next, %for.cond5.loopexit ]
  %23 = phi i32 [ 0, %for.body7.lr.ph ], [ %22, %for.cond5.loopexit ]
  %tiv8 = phi i64 [ 0, %for.body7.lr.ph ], [ %tiv.next9, %for.cond5.loopexit ]
  %24 = add i64 %indvar, 1
  %scevgep41 = getelementptr double, double* %out, i64 %24
  %scevgep4142 = bitcast double* %scevgep41 to i8*
  %25 = xor i64 %indvar, -1
  %26 = add i64 %25, %wide.trip.count17
  %scevgep47 = getelementptr double, double* %ltri, i64 %26
  %sext74 = shl i64 %indvar, 32
  %27 = ashr exact i64 %sext74, 29
  %scevgep50 = getelementptr i8, i8* %uglygep, i64 %27
  %28 = xor i64 %indvar, -1
  %29 = add i64 %28, %wide.trip.count17
  %j.03 = add nuw nsw i32 %23, 1
  %cmp124 = icmp slt i32 %j.03, %d
  br i1 %cmp124, label %for.body13.lr.ph, label %for.cond5.loopexit

for.body13.lr.ph:                                 ; preds = %for.body7
  %30 = xor i32 %23, -1
  %sub9 = add i32 %mul8, %30
  %mul10 = mul nsw i32 %sub9, %23
  %div = sdiv i32 %mul10, 2
  %sext = shl i64 %tiv8, 32
  %idxprom18 = ashr exact i64 %sext, 32
  %arrayidx19 = getelementptr inbounds double, double* %x, i64 %idxprom18
  %31 = sext i32 %div to i64
  %min.iters.check37 = icmp ult i64 %29, 4
  br i1 %min.iters.check37, label %for.body13.preheader, label %vector.memcheck39

vector.memcheck39:                                ; preds = %for.body13.lr.ph
  %scevgep45 = getelementptr double, double* %ltri, i64 %31
  %scevgep48 = getelementptr double, double* %scevgep47, i64 %31
  %bound051 = icmp ult double* %scevgep41, %scevgep48
  %bound152 = icmp ult double* %scevgep45, %scevgep43
  %found.conflict53 = and i1 %bound051, %bound152
  %bound054 = icmp ugt i8* %scevgep50, %scevgep4142
  %bound155 = icmp ult double* %arrayidx19, %scevgep43
  %found.conflict56 = and i1 %bound054, %bound155
  %conflict.rdx57 = or i1 %found.conflict53, %found.conflict56
  br i1 %conflict.rdx57, label %for.body13.preheader, label %vector.ph40

vector.ph40:                                      ; preds = %vector.memcheck39
  %n.vec60 = and i64 %29, -4
  %ind.end = add i64 %n.vec60, %31
  %ind.end65 = add i64 %tiv.next9, %n.vec60
  %32 = load double, double* %arrayidx19, align 8, !tbaa !70, !alias.scope !623
  %broadcast.splatinsert = insertelement <2 x double> poison, double %32, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert72 = insertelement <2 x double> poison, double %32, i32 0
  %broadcast.splat73 = shufflevector <2 x double> %broadcast.splatinsert72, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body36

vector.body36:                                    ; preds = %vector.body36, %vector.ph40
  %index61 = phi i64 [ 0, %vector.ph40 ], [ %index.next62, %vector.body36 ]
  %offset.idx = add i64 %index61, %31
  %offset.idx67 = add i64 %tiv.next9, %index61
  %33 = getelementptr inbounds double, double* %out, i64 %offset.idx67
  %34 = bitcast double* %33 to <2 x double>*
  %wide.load68 = load <2 x double>, <2 x double>* %34, align 8, !tbaa !70, !alias.scope !626, !noalias !628
  %35 = getelementptr inbounds double, double* %33, i64 2
  %36 = bitcast double* %35 to <2 x double>*
  %wide.load69 = load <2 x double>, <2 x double>* %36, align 8, !tbaa !70, !alias.scope !626, !noalias !628
  %37 = getelementptr inbounds double, double* %ltri, i64 %offset.idx
  %38 = bitcast double* %37 to <2 x double>*
  %wide.load70 = load <2 x double>, <2 x double>* %38, align 8, !tbaa !70, !alias.scope !630
  %39 = getelementptr inbounds double, double* %37, i64 2
  %40 = bitcast double* %39 to <2 x double>*
  %wide.load71 = load <2 x double>, <2 x double>* %40, align 8, !tbaa !70, !alias.scope !630
  %41 = fmul fast <2 x double> %broadcast.splat, %wide.load70
  %42 = fmul fast <2 x double> %broadcast.splat73, %wide.load71
  %43 = fadd fast <2 x double> %41, %wide.load68
  %44 = fadd fast <2 x double> %42, %wide.load69
  %45 = bitcast double* %33 to <2 x double>*
  store <2 x double> %43, <2 x double>* %45, align 8, !tbaa !70, !alias.scope !626, !noalias !628
  %46 = bitcast double* %35 to <2 x double>*
  store <2 x double> %44, <2 x double>* %46, align 8, !tbaa !70, !alias.scope !626, !noalias !628
  %index.next62 = add i64 %index61, 4
  %47 = icmp eq i64 %index.next62, %n.vec60
  br i1 %47, label %middle.block34, label %vector.body36, !llvm.loop !631

middle.block34:                                   ; preds = %vector.body36
  %cmp.n66 = icmp eq i64 %29, %n.vec60
  br i1 %cmp.n66, label %for.cond5.loopexit, label %for.body13.preheader

for.body13.preheader:                             ; preds = %vector.memcheck39, %for.body13.lr.ph, %middle.block34
  %indvars.iv12.ph = phi i64 [ %31, %vector.memcheck39 ], [ %31, %for.body13.lr.ph ], [ %ind.end, %middle.block34 ]
  %indvars.iv.ph = phi i64 [ %tiv.next9, %vector.memcheck39 ], [ %tiv.next9, %for.body13.lr.ph ], [ %ind.end65, %middle.block34 ]
  br label %for.body13

for.body13:                                       ; preds = %for.body13.preheader, %for.body13
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.body13 ], [ %indvars.iv12.ph, %for.body13.preheader ]
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body13 ], [ %indvars.iv.ph, %for.body13.preheader ]
  %arrayidx15 = getelementptr inbounds double, double* %out, i64 %indvars.iv
  %48 = load double, double* %arrayidx15, align 8, !tbaa !70
  %arrayidx17 = getelementptr inbounds double, double* %ltri, i64 %indvars.iv12
  %49 = load double, double* %arrayidx17, align 8, !tbaa !70
  %50 = load double, double* %arrayidx19, align 8, !tbaa !70
  %mul20 = fmul fast double %50, %49
  %add21 = fadd fast double %mul20, %48
  store double %add21, double* %arrayidx15, align 8, !tbaa !70
  %indvars.iv.next13 = add nsw i64 %indvars.iv12, 1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond5.loopexit, label %for.body13, !llvm.loop !632

for.end30:                                        ; preds = %for.cond5.loopexit, %entry, %for.cond5.preheader
  ret void
}

; Function Attrs: nofree norecurse nounwind uwtable mustprogress
define dso_local void @preprocess_subtract(i32 %d, double* nocapture readonly %x, double* nocapture readonly %y, double* nocapture %out) local_unnamed_addr #15 {
entry:
  %cmp1 = icmp sgt i32 %d, 0
  br i1 %cmp1, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %d to i64
  %min.iters.check = icmp ult i32 %d, 4
  %0 = add nsw i64 %wide.trip.count, -1
  %1 = icmp ugt i64 %0, 2147483647
  %or.cond = or i1 %min.iters.check, %1
  br i1 %or.cond, label %for.body.preheader19, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body.preheader
  %scevgep = getelementptr double, double* %out, i64 %wide.trip.count
  %scevgep7 = getelementptr double, double* %x, i64 %wide.trip.count
  %scevgep10 = getelementptr double, double* %y, i64 %wide.trip.count
  %bound0 = icmp ugt double* %scevgep7, %out
  %bound1 = icmp ugt double* %scevgep, %x
  %found.conflict = and i1 %bound0, %bound1
  %bound012 = icmp ugt double* %scevgep10, %out
  %bound113 = icmp ugt double* %scevgep, %y
  %found.conflict14 = and i1 %bound012, %bound113
  %conflict.rdx = or i1 %found.conflict, %found.conflict14
  br i1 %conflict.rdx, label %for.body.preheader19, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %wide.trip.count, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %2 = shl i64 %index, 32
  %3 = ashr exact i64 %2, 32
  %4 = getelementptr inbounds double, double* %x, i64 %3
  %5 = bitcast double* %4 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %5, align 8, !tbaa !70, !alias.scope !633
  %6 = getelementptr inbounds double, double* %4, i64 2
  %7 = bitcast double* %6 to <2 x double>*
  %wide.load15 = load <2 x double>, <2 x double>* %7, align 8, !tbaa !70, !alias.scope !633
  %8 = getelementptr inbounds double, double* %y, i64 %3
  %9 = bitcast double* %8 to <2 x double>*
  %wide.load16 = load <2 x double>, <2 x double>* %9, align 8, !tbaa !70, !alias.scope !636
  %10 = getelementptr inbounds double, double* %8, i64 2
  %11 = bitcast double* %10 to <2 x double>*
  %wide.load17 = load <2 x double>, <2 x double>* %11, align 8, !tbaa !70, !alias.scope !636
  %12 = fsub fast <2 x double> %wide.load, %wide.load16
  %13 = fsub fast <2 x double> %wide.load15, %wide.load17
  %14 = getelementptr inbounds double, double* %out, i64 %3
  %15 = bitcast double* %14 to <2 x double>*
  store <2 x double> %12, <2 x double>* %15, align 8, !tbaa !70, !alias.scope !638, !noalias !640
  %16 = getelementptr inbounds double, double* %14, i64 2
  %17 = bitcast double* %16 to <2 x double>*
  store <2 x double> %13, <2 x double>* %17, align 8, !tbaa !70, !alias.scope !638, !noalias !640
  %index.next = add i64 %index, 4
  %18 = icmp eq i64 %index.next, %n.vec
  br i1 %18, label %middle.block, label %vector.body, !llvm.loop !641

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.end, label %for.body.preheader19

for.body.preheader19:                             ; preds = %vector.memcheck, %for.body.preheader, %middle.block
  %tiv2.ph = phi i64 [ 0, %vector.memcheck ], [ 0, %for.body.preheader ], [ %n.vec, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader19, %for.body
  %tiv2 = phi i64 [ %tiv.next, %for.body ], [ %tiv2.ph, %for.body.preheader19 ]
  %tiv.next = add nuw nsw i64 %tiv2, 1
  %sext = shl i64 %tiv2, 32
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx = getelementptr inbounds double, double* %x, i64 %idxprom
  %19 = load double, double* %arrayidx, align 8, !tbaa !70
  %arrayidx2 = getelementptr inbounds double, double* %y, i64 %idxprom
  %20 = load double, double* %arrayidx2, align 8, !tbaa !70
  %sub = fsub fast double %19, %20
  %arrayidx4 = getelementptr inbounds double, double* %out, i64 %idxprom
  store double %sub, double* %arrayidx4, align 8, !tbaa !70
  %exitcond.not = icmp eq i64 %tiv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !642

for.end:                                          ; preds = %for.body, %middle.block, %entry
  ret void
}

; Function Attrs: nounwind readonly uwtable willreturn mustprogress
define dso_local double @preprocess_log_sum_exp(i32 %n, double* nocapture readonly %x) local_unnamed_addr #16 {
entry:
  %0 = load double, double* %x, align 8, !tbaa !70
  %cmp9.i = icmp sgt i32 %n, 1
  br i1 %cmp9.i, label %for.body.preheader.i, label %arr_max.exit

for.body.preheader.i:                             ; preds = %entry
  %wide.trip.count.i = zext i32 %n to i64
  %1 = add nsw i64 %wide.trip.count.i, -1
  %min.iters.check = icmp ult i64 %1, 4
  br i1 %min.iters.check, label %for.body.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader.i
  %n.vec = and i64 %1, -4
  %ind.end = or i64 %n.vec, 1
  %minmax.ident.splatinsert = insertelement <2 x double> poison, double %0, i32 0
  %minmax.ident.splat = shufflevector <2 x double> %minmax.ident.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %8, %vector.body ]
  %vec.phi5 = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %9, %vector.body ]
  %offset.idx = or i64 %index, 1
  %2 = getelementptr inbounds double, double* %x, i64 %offset.idx
  %3 = bitcast double* %2 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %3, align 8, !tbaa !70
  %4 = getelementptr inbounds double, double* %2, i64 2
  %5 = bitcast double* %4 to <2 x double>*
  %wide.load6 = load <2 x double>, <2 x double>* %5, align 8, !tbaa !70
  %6 = fcmp fast olt <2 x double> %vec.phi, %wide.load
  %7 = fcmp fast olt <2 x double> %vec.phi5, %wide.load6
  %8 = select <2 x i1> %6, <2 x double> %wide.load, <2 x double> %vec.phi
  %9 = select <2 x i1> %7, <2 x double> %wide.load6, <2 x double> %vec.phi5
  %index.next = add i64 %index, 4
  %10 = icmp eq i64 %index.next, %n.vec
  br i1 %10, label %middle.block, label %vector.body, !llvm.loop !643

middle.block:                                     ; preds = %vector.body
  %11 = call fast <2 x double> @llvm.maxnum.v2f64(<2 x double> %8, <2 x double> %9)
  %12 = call double @llvm.vector.reduce.fmax.v2f64(<2 x double> %11)
  %cmp.n = icmp eq i64 %1, %n.vec
  br i1 %cmp.n, label %arr_max.exit, label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %for.body.preheader.i, %middle.block
  %indvars.iv.i.ph = phi i64 [ 1, %for.body.preheader.i ], [ %ind.end, %middle.block ]
  %m.011.i.ph = phi double [ %0, %for.body.preheader.i ], [ %12, %middle.block ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.preheader, %for.body.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i ], [ %indvars.iv.i.ph, %for.body.i.preheader ]
  %m.011.i = phi double [ %m.1.i, %for.body.i ], [ %m.011.i.ph, %for.body.i.preheader ]
  %arrayidx1.i = getelementptr inbounds double, double* %x, i64 %indvars.iv.i
  %13 = load double, double* %arrayidx1.i, align 8, !tbaa !70
  %cmp2.i = fcmp fast olt double %m.011.i, %13
  %m.1.i = select i1 %cmp2.i, double %13, double %m.011.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %arr_max.exit, label %for.body.i, !llvm.loop !644

arr_max.exit:                                     ; preds = %for.body.i, %middle.block, %entry
  %m.0.lcssa.i = phi double [ %0, %entry ], [ %12, %middle.block ], [ %m.1.i, %for.body.i ]
  %cmp1 = icmp sgt i32 %n, 0
  br i1 %cmp1, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %arr_max.exit
  %wide.trip.count = zext i32 %n to i64
  %min.iters.check10 = icmp ult i32 %n, 4
  %14 = add nsw i64 %wide.trip.count, -1
  %15 = icmp ugt i64 %14, 2147483647
  %or.cond = or i1 %min.iters.check10, %15
  br i1 %or.cond, label %for.body.preheader27, label %vector.ph12

vector.ph12:                                      ; preds = %for.body.preheader
  %n.vec14 = and i64 %wide.trip.count, 4294967292
  %broadcast.splatinsert = insertelement <2 x double> poison, double %m.0.lcssa.i, i32 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert23 = insertelement <2 x double> poison, double %m.0.lcssa.i, i32 0
  %broadcast.splat24 = shufflevector <2 x double> %broadcast.splatinsert23, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body9

vector.body9:                                     ; preds = %vector.body9, %vector.ph12
  %index15 = phi i64 [ 0, %vector.ph12 ], [ %index.next16, %vector.body9 ]
  %vec.phi19 = phi <2 x double> [ zeroinitializer, %vector.ph12 ], [ %26, %vector.body9 ]
  %vec.phi20 = phi <2 x double> [ zeroinitializer, %vector.ph12 ], [ %27, %vector.body9 ]
  %16 = shl i64 %index15, 32
  %17 = ashr exact i64 %16, 32
  %18 = getelementptr inbounds double, double* %x, i64 %17
  %19 = bitcast double* %18 to <2 x double>*
  %wide.load21 = load <2 x double>, <2 x double>* %19, align 8, !tbaa !70
  %20 = getelementptr inbounds double, double* %18, i64 2
  %21 = bitcast double* %20 to <2 x double>*
  %wide.load22 = load <2 x double>, <2 x double>* %21, align 8, !tbaa !70
  %22 = fsub fast <2 x double> %wide.load21, %broadcast.splat
  %23 = fsub fast <2 x double> %wide.load22, %broadcast.splat24
  %24 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %22)
  %25 = call fast <2 x double> @llvm.exp.v2f64(<2 x double> %23)
  %26 = fadd fast <2 x double> %24, %vec.phi19
  %27 = fadd fast <2 x double> %25, %vec.phi20
  %index.next16 = add i64 %index15, 4
  %28 = icmp eq i64 %index.next16, %n.vec14
  br i1 %28, label %middle.block7, label %vector.body9, !llvm.loop !645

middle.block7:                                    ; preds = %vector.body9
  %bin.rdx = fadd fast <2 x double> %27, %26
  %29 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  %cmp.n18 = icmp eq i64 %n.vec14, %wide.trip.count
  br i1 %cmp.n18, label %for.end, label %for.body.preheader27

for.body.preheader27:                             ; preds = %for.body.preheader, %middle.block7
  %semx.03.ph = phi double [ 0.000000e+00, %for.body.preheader ], [ %29, %middle.block7 ]
  %tiv2.ph = phi i64 [ 0, %for.body.preheader ], [ %n.vec14, %middle.block7 ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader27, %for.body
  %semx.03 = phi double [ %add, %for.body ], [ %semx.03.ph, %for.body.preheader27 ]
  %tiv2 = phi i64 [ %tiv.next, %for.body ], [ %tiv2.ph, %for.body.preheader27 ]
  %tiv.next = add nuw nsw i64 %tiv2, 1
  %sext = shl i64 %tiv2, 32
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx = getelementptr inbounds double, double* %x, i64 %idxprom
  %30 = load double, double* %arrayidx, align 8, !tbaa !70
  %sub = fsub fast double %30, %m.0.lcssa.i
  %31 = tail call fast double @llvm.exp.f64(double %sub)
  %add = fadd fast double %31, %semx.03
  %exitcond.not = icmp eq i64 %tiv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !646

for.end:                                          ; preds = %for.body, %middle.block7, %arr_max.exit
  %semx.0.lcssa = phi double [ 0.000000e+00, %arr_max.exit ], [ %29, %middle.block7 ], [ %add, %for.body ]
  %32 = tail call fast double @llvm.log.f64(double %semx.0.lcssa)
  %add1 = fadd fast double %32, %m.0.lcssa.i
  ret double %add1
}

; Function Attrs: norecurse nounwind readonly uwtable willreturn mustprogress
define dso_local double @preprocess_arr_max(i32 %n, double* nocapture readonly %x) local_unnamed_addr #9 {
entry:
  %0 = load double, double* %x, align 8, !tbaa !70
  %cmp3 = icmp sgt i32 %n, 1
  br i1 %cmp3, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  %1 = add nsw i64 %wide.trip.count, -1
  %min.iters.check = icmp ult i64 %1, 4
  br i1 %min.iters.check, label %for.body.preheader8, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %for.body.preheader
  %2 = add nsw i64 %wide.trip.count, -2
  %3 = trunc i64 %2 to i32
  %4 = add i32 %3, 1
  %5 = icmp slt i32 %4, 1
  %6 = icmp ugt i64 %2, 4294967295
  %7 = or i1 %5, %6
  br i1 %7, label %for.body.preheader8, label %vector.ph

vector.ph:                                        ; preds = %vector.scevcheck
  %n.vec = and i64 %1, -4
  %ind.end = or i64 %n.vec, 1
  %minmax.ident.splatinsert = insertelement <2 x double> poison, double %0, i32 0
  %minmax.ident.splat = shufflevector <2 x double> %minmax.ident.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %16, %vector.body ]
  %vec.phi6 = phi <2 x double> [ %minmax.ident.splat, %vector.ph ], [ %17, %vector.body ]
  %offset.idx = shl i64 %index, 32
  %8 = ashr exact i64 %offset.idx, 32
  %9 = or i64 %8, 1
  %10 = getelementptr inbounds double, double* %x, i64 %9
  %11 = bitcast double* %10 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %11, align 8, !tbaa !70
  %12 = getelementptr inbounds double, double* %10, i64 2
  %13 = bitcast double* %12 to <2 x double>*
  %wide.load7 = load <2 x double>, <2 x double>* %13, align 8, !tbaa !70
  %14 = fcmp fast olt <2 x double> %vec.phi, %wide.load
  %15 = fcmp fast olt <2 x double> %vec.phi6, %wide.load7
  %16 = select <2 x i1> %14, <2 x double> %wide.load, <2 x double> %vec.phi
  %17 = select <2 x i1> %15, <2 x double> %wide.load7, <2 x double> %vec.phi6
  %index.next = add i64 %index, 4
  %18 = icmp eq i64 %index.next, %n.vec
  br i1 %18, label %middle.block, label %vector.body, !llvm.loop !647

middle.block:                                     ; preds = %vector.body
  %19 = call fast <2 x double> @llvm.maxnum.v2f64(<2 x double> %16, <2 x double> %17)
  %20 = call double @llvm.vector.reduce.fmax.v2f64(<2 x double> %19)
  %cmp.n = icmp eq i64 %1, %n.vec
  br i1 %cmp.n, label %for.end, label %for.body.preheader8

for.body.preheader8:                              ; preds = %vector.scevcheck, %for.body.preheader, %middle.block
  %.ph = phi i64 [ 1, %vector.scevcheck ], [ 1, %for.body.preheader ], [ %ind.end, %middle.block ]
  %m.04.ph = phi double [ %0, %vector.scevcheck ], [ %0, %for.body.preheader ], [ %20, %middle.block ]
  br label %for.body

for.body:                                         ; preds = %for.body.preheader8, %for.body
  %21 = phi i64 [ %23, %for.body ], [ %.ph, %for.body.preheader8 ]
  %m.04 = phi double [ %m.1, %for.body ], [ %m.04.ph, %for.body.preheader8 ]
  %sext = shl i64 %21, 32
  %idxprom = ashr exact i64 %sext, 32
  %arrayidx1 = getelementptr inbounds double, double* %x, i64 %idxprom
  %22 = load double, double* %arrayidx1, align 8, !tbaa !70
  %cmp2 = fcmp fast olt double %m.04, %22
  %m.1 = select i1 %cmp2, double %22, double %m.04
  %23 = add nuw nsw i64 %21, 1
  %exitcond.not = icmp eq i64 %23, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !648

for.end:                                          ; preds = %for.body, %middle.block, %entry
  %m.0.lcssa = phi double [ %0, %entry ], [ %20, %middle.block ], [ %m.1, %for.body ]
  ret double %m.0.lcssa
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @preprocess_log_wishart_prior(i32 %p, i32 %k, double %wishart.coerce0, i32 %wishart.coerce1, double* nocapture readonly %sum_qs, double* nocapture readonly %Qdiags, double* nocapture readonly %icf) local_unnamed_addr #6 {
entry:
  %add = add i32 %p, 1
  %add1 = add i32 %add, %wishart.coerce1
  %mul = mul nsw i32 %add, %p
  %div = sdiv i32 %mul, 2
  %cmp21 = icmp sgt i32 %k, 0
  br i1 %cmp21, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %cmp10.i = icmp sgt i32 %p, 1
  %wide.trip.count.i = zext i32 %p to i64
  %sub13 = sub nsw i32 %div, %p
  %cmp10.i8 = icmp sgt i32 %sub13, 1
  %wide.trip.count.i9 = zext i32 %sub13 to i64
  %0 = fmul fast double %wishart.coerce0, %wishart.coerce0
  %mul23 = fmul fast double %0, 5.000000e-01
  %conv27 = sitofp i32 %wishart.coerce1 to double
  %1 = sext i32 %p to i64
  %2 = sext i32 %div to i64
  %wide.trip.count = zext i32 %k to i64
  %3 = add nsw i64 %wide.trip.count.i9, -1
  %4 = add nsw i64 %wide.trip.count.i, -1
  %min.iters.check32 = icmp ult i64 %4, 4
  %n.vec35 = and i64 %4, -4
  %ind.end39 = or i64 %n.vec35, 1
  %cmp.n40 = icmp eq i64 %4, %n.vec35
  %min.iters.check = icmp ult i64 %3, 4
  %n.vec = and i64 %3, -4
  %ind.end = or i64 %n.vec, 1
  %cmp.n = icmp eq i64 %3, %n.vec
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %sqnorm.exit20
  %out.023 = phi double [ 0.000000e+00, %for.body.lr.ph ], [ %sub31, %sqnorm.exit20 ]
  %tiv22 = phi i64 [ 0, %for.body.lr.ph ], [ %tiv.next, %sqnorm.exit20 ]
  %tiv.next = add nuw nsw i64 %tiv22, 1
  %5 = mul nsw i64 %tiv22, %1
  %arrayidx = getelementptr inbounds double, double* %Qdiags, i64 %5
  %6 = load double, double* %arrayidx, align 8, !tbaa !70
  %mul.i = fmul fast double %6, %6
  br i1 %cmp10.i, label %for.body.i6.preheader, label %sqnorm.exit

for.body.i6.preheader:                            ; preds = %for.body
  br i1 %min.iters.check32, label %for.body.i6.preheader49, label %vector.ph33

vector.ph33:                                      ; preds = %for.body.i6.preheader
  %7 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul.i, i32 0
  br label %vector.body31

vector.body31:                                    ; preds = %vector.body31, %vector.ph33
  %index36 = phi i64 [ 0, %vector.ph33 ], [ %index.next37, %vector.body31 ]
  %vec.phi42 = phi <2 x double> [ %7, %vector.ph33 ], [ %14, %vector.body31 ]
  %vec.phi43 = phi <2 x double> [ zeroinitializer, %vector.ph33 ], [ %15, %vector.body31 ]
  %offset.idx41 = or i64 %index36, 1
  %8 = getelementptr inbounds double, double* %arrayidx, i64 %offset.idx41
  %9 = bitcast double* %8 to <2 x double>*
  %wide.load44 = load <2 x double>, <2 x double>* %9, align 8, !tbaa !70
  %10 = getelementptr inbounds double, double* %8, i64 2
  %11 = bitcast double* %10 to <2 x double>*
  %wide.load45 = load <2 x double>, <2 x double>* %11, align 8, !tbaa !70
  %12 = fmul fast <2 x double> %wide.load44, %wide.load44
  %13 = fmul fast <2 x double> %wide.load45, %wide.load45
  %14 = fadd fast <2 x double> %12, %vec.phi42
  %15 = fadd fast <2 x double> %13, %vec.phi43
  %index.next37 = add i64 %index36, 4
  %16 = icmp eq i64 %index.next37, %n.vec35
  br i1 %16, label %middle.block29, label %vector.body31, !llvm.loop !649

middle.block29:                                   ; preds = %vector.body31
  %bin.rdx46 = fadd fast <2 x double> %15, %14
  %17 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx46)
  br i1 %cmp.n40, label %sqnorm.exit, label %for.body.i6.preheader49

for.body.i6.preheader49:                          ; preds = %for.body.i6.preheader, %middle.block29
  %indvars.iv.i.ph = phi i64 [ 1, %for.body.i6.preheader ], [ %ind.end39, %middle.block29 ]
  %res.012.i.ph = phi double [ %mul.i, %for.body.i6.preheader ], [ %17, %middle.block29 ]
  br label %for.body.i6

for.body.i6:                                      ; preds = %for.body.i6.preheader49, %for.body.i6
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i, %for.body.i6 ], [ %indvars.iv.i.ph, %for.body.i6.preheader49 ]
  %res.012.i = phi double [ %add.i5, %for.body.i6 ], [ %res.012.i.ph, %for.body.i6.preheader49 ]
  %arrayidx2.i = getelementptr inbounds double, double* %arrayidx, i64 %indvars.iv.i
  %18 = load double, double* %arrayidx2.i, align 8, !tbaa !70
  %mul5.i4 = fmul fast double %18, %18
  %add.i5 = fadd fast double %mul5.i4, %res.012.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %sqnorm.exit, label %for.body.i6, !llvm.loop !650

sqnorm.exit:                                      ; preds = %for.body.i6, %middle.block29, %for.body
  %res.0.lcssa.i = phi double [ %mul.i, %for.body ], [ %17, %middle.block29 ], [ %add.i5, %for.body.i6 ]
  %19 = mul nsw i64 %tiv22, %2
  %20 = add nsw i64 %19, %1
  %arrayidx17 = getelementptr inbounds double, double* %icf, i64 %20
  %21 = load double, double* %arrayidx17, align 8, !tbaa !70
  %mul.i7 = fmul fast double %21, %21
  br i1 %cmp10.i8, label %for.body.i18.preheader, label %sqnorm.exit20

for.body.i18.preheader:                           ; preds = %sqnorm.exit
  br i1 %min.iters.check, label %for.body.i18.preheader48, label %vector.ph

vector.ph:                                        ; preds = %for.body.i18.preheader
  %22 = insertelement <2 x double> <double poison, double 0.000000e+00>, double %mul.i7, i32 0
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.phi = phi <2 x double> [ %22, %vector.ph ], [ %29, %vector.body ]
  %vec.phi27 = phi <2 x double> [ zeroinitializer, %vector.ph ], [ %30, %vector.body ]
  %offset.idx = or i64 %index, 1
  %23 = getelementptr inbounds double, double* %arrayidx17, i64 %offset.idx
  %24 = bitcast double* %23 to <2 x double>*
  %wide.load = load <2 x double>, <2 x double>* %24, align 8, !tbaa !70
  %25 = getelementptr inbounds double, double* %23, i64 2
  %26 = bitcast double* %25 to <2 x double>*
  %wide.load28 = load <2 x double>, <2 x double>* %26, align 8, !tbaa !70
  %27 = fmul fast <2 x double> %wide.load, %wide.load
  %28 = fmul fast <2 x double> %wide.load28, %wide.load28
  %29 = fadd fast <2 x double> %27, %vec.phi
  %30 = fadd fast <2 x double> %28, %vec.phi27
  %index.next = add i64 %index, 4
  %31 = icmp eq i64 %index.next, %n.vec
  br i1 %31, label %middle.block, label %vector.body, !llvm.loop !651

middle.block:                                     ; preds = %vector.body
  %bin.rdx = fadd fast <2 x double> %30, %29
  %32 = call fast double @llvm.vector.reduce.fadd.v2f64(double -0.000000e+00, <2 x double> %bin.rdx)
  br i1 %cmp.n, label %sqnorm.exit20, label %for.body.i18.preheader48

for.body.i18.preheader48:                         ; preds = %for.body.i18.preheader, %middle.block
  %indvars.iv.i11.ph = phi i64 [ 1, %for.body.i18.preheader ], [ %ind.end, %middle.block ]
  %res.012.i12.ph = phi double [ %mul.i7, %for.body.i18.preheader ], [ %32, %middle.block ]
  br label %for.body.i18

for.body.i18:                                     ; preds = %for.body.i18.preheader48, %for.body.i18
  %indvars.iv.i11 = phi i64 [ %indvars.iv.next.i16, %for.body.i18 ], [ %indvars.iv.i11.ph, %for.body.i18.preheader48 ]
  %res.012.i12 = phi double [ %add.i15, %for.body.i18 ], [ %res.012.i12.ph, %for.body.i18.preheader48 ]
  %arrayidx2.i13 = getelementptr inbounds double, double* %arrayidx17, i64 %indvars.iv.i11
  %33 = load double, double* %arrayidx2.i13, align 8, !tbaa !70
  %mul5.i14 = fmul fast double %33, %33
  %add.i15 = fadd fast double %mul5.i14, %res.012.i12
  %indvars.iv.next.i16 = add nuw nsw i64 %indvars.iv.i11, 1
  %exitcond.not.i17 = icmp eq i64 %indvars.iv.next.i16, %wide.trip.count.i9
  br i1 %exitcond.not.i17, label %sqnorm.exit20, label %for.body.i18, !llvm.loop !652

sqnorm.exit20:                                    ; preds = %for.body.i18, %middle.block, %sqnorm.exit
  %res.0.lcssa.i19 = phi double [ %mul.i7, %sqnorm.exit ], [ %32, %middle.block ], [ %add.i15, %for.body.i18 ]
  %add19 = fadd fast double %res.0.lcssa.i19, %res.0.lcssa.i
  %mul24 = fmul fast double %mul23, %add19
  %add25 = fadd fast double %mul24, %out.023
  %sext = shl i64 %tiv22, 32
  %idxprom28 = ashr exact i64 %sext, 32
  %arrayidx29 = getelementptr inbounds double, double* %sum_qs, i64 %idxprom28
  %34 = load double, double* %arrayidx29, align 8, !tbaa !70
  %35 = fmul fast double %34, %conv27
  %sub31 = fsub fast double %add25, %35
  %exitcond.not = icmp eq i64 %tiv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !103

for.end:                                          ; preds = %sqnorm.exit20, %entry
  %out.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %sub31, %sqnorm.exit20 ]
  %conv6 = sitofp i32 %add1 to double
  %conv8 = sitofp i32 %p to double
  %sub.i = fadd fast double %conv8, -1.000000e+00
  %mul1.i = fmul fast double %conv8, 0x3FD250D048E7A2E6
  %mul2.i = fmul fast double %mul1.i, %sub.i
  %cmp8.i = icmp slt i32 %p, 1
  br i1 %cmp8.i, label %log_gamma_distrib.exit, label %for.body.i

for.body.i:                                       ; preds = %for.end, %for.body.i
  %out.010.i = phi double [ %add6.i, %for.body.i ], [ %mul2.i, %for.end ]
  %j.09.i = phi i32 [ %inc.i, %for.body.i ], [ 1, %for.end ]
  %sub3.i = sub nsw i32 1, %j.09.i
  %conv4.i = sitofp i32 %sub3.i to double
  %36 = fadd fast double %conv4.i, %conv6
  %add.i = fmul fast double %36, 5.000000e-01
  %call.i = tail call fast double @lgamma(double %add.i) #38
  %add6.i = fadd fast double %call.i, %out.010.i
  %inc.i = add nuw nsw i32 %j.09.i, 1
  %conv.i = sitofp i32 %inc.i to double
  %cmp.i = fcmp fast ugt double %conv.i, %conv8
  br i1 %cmp.i, label %log_gamma_distrib.exit, label %for.body.i, !llvm.loop !98

log_gamma_distrib.exit:                           ; preds = %for.body.i, %for.end
  %out.0.lcssa.i = phi double [ %mul2.i, %for.end ], [ %add6.i, %for.body.i ]
  %37 = tail call fast double @llvm.log.f64(double %wishart.coerce0)
  %sub = fadd fast double %37, 0xBFD62E42FEFA39EF
  %mul3 = mul nsw i32 %add1, %p
  %conv = sitofp i32 %mul3 to double
  %mul5 = fmul fast double %sub, %conv
  %sub10 = fsub fast double %mul5, %out.0.lcssa.i
  %conv32 = sitofp i32 %k to double
  %mul33 = fmul fast double %sub10, %conv32
  %sub34 = fsub fast double %out.0.lcssa, %mul33
  ret double %sub34
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.assume(i1 noundef) #35

; Function Attrs: nofree nounwind
declare noundef i32 @puts(i8* nocapture noundef readonly) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #8

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #36

; Function Attrs: nofree nosync nounwind readnone willreturn
declare double @llvm.vector.reduce.fmax.v2f64(<2 x double>) #37

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <2 x double> @llvm.maxnum.v2f64(<2 x double>, <2 x double>) #17

; Function Attrs: nofree nosync nounwind readnone willreturn
declare double @llvm.vector.reduce.fadd.v2f64(double, <2 x double>) #37

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare <2 x double> @llvm.exp.v2f64(<2 x double>) #17

attributes #0 = { uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { nofree nounwind "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #3 = { "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly willreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #5 = { nounwind uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #6 = { nounwind uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #7 = { nounwind "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { norecurse nounwind readonly uwtable willreturn mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #10 = { uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #12 = { norecurse uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { noinline noreturn nounwind }
attributes #15 = { nofree norecurse nounwind uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #16 = { nounwind readonly uwtable willreturn mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #17 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #18 = { nounwind readnone uwtable willreturn mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #19 = { nofree nounwind uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #20 = { inaccessiblememonly nofree nounwind willreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #21 = { inaccessiblemem_or_argmemonly nounwind willreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #22 = { nobuiltin nounwind "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #23 = { norecurse nounwind readnone uwtable willreturn mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #24 = { nobuiltin nofree allocsize(0) "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #25 = { noreturn uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #26 = { nofree nounwind uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #27 = { nofree nounwind uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #28 = { uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #29 = { inlinehint nounwind uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #30 = { nounwind uwtable willreturn mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #31 = { noreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #32 = { inlinehint uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #33 = { uwtable willreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #34 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #35 = { nofree nosync nounwind willreturn }
attributes #36 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #37 = { nofree nosync nounwind readnone willreturn }
attributes #38 = { nounwind }
attributes #39 = { nounwind readonly willreturn }
attributes #40 = { noreturn }
attributes #41 = { noreturn nounwind }
attributes #42 = { allocsize(0) }
attributes #43 = { builtin nounwind }
attributes #44 = { builtin allocsize(0) }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)"}
!2 = !{!3, !5, i64 18}
!3 = !{!"_ZTS6dirent", !4, i64 0, !4, i64 8, !7, i64 16, !5, i64 18, !5, i64 19}
!4 = !{!"long", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!"short", !5, i64 0}
!8 = distinct !{!8, !9, !10}
!9 = !{!"llvm.loop.mustprogress"}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: %agg.result"}
!13 = distinct !{!13, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!14 = !{!15, !16, i64 0}
!15 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !16, i64 0}
!16 = !{!"any pointer", !5, i64 0}
!17 = !{!18, !16, i64 0}
!18 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !15, i64 0, !4, i64 8, !5, i64 16}
!19 = !{!18, !4, i64 8}
!20 = !{!4, !4, i64 0}
!21 = !{!5, !5, i64 0}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_: %agg.result"}
!24 = distinct !{!24, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv: %agg.result"}
!27 = distinct !{!27, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"}
!28 = distinct !{!28, !9, !10}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_: %agg.result"}
!31 = distinct !{!31, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"}
!32 = !{!33, !16, i64 8}
!33 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !16, i64 0, !16, i64 8, !16, i64 16}
!34 = !{!33, !16, i64 16}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: %agg.result"}
!37 = distinct !{!37, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: %agg.result"}
!40 = distinct !{!40, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm: %agg.result"}
!43 = distinct !{!43, !"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"}
!44 = !{!45, !4, i64 0}
!45 = !{!"_ZTS7timeval", !4, i64 0, !4, i64 8}
!46 = !{!45, !4, i64 8}
!47 = !{!48, !48, i64 0}
!48 = !{!"int", !5, i64 0}
!49 = !{!50, !16, i64 8}
!50 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !16, i64 0, !16, i64 8, !16, i64 16}
!51 = !{!50, !16, i64 0}
!52 = distinct !{!52, !9, !10}
!53 = distinct !{!53, !9, !10}
!54 = distinct !{!54, !9, !10}
!55 = distinct !{!55, !9, !10}
!56 = distinct !{!56, !9, !10}
!57 = distinct !{!57, !9, !10}
!58 = distinct !{!58, !9, !10}
!59 = distinct !{!59, !9, !10}
!60 = distinct !{!60, !9, !10}
!61 = !{!16, !16, i64 0}
!62 = !{!33, !16, i64 0}
!63 = distinct !{!63, !9, !10}
!64 = !{!65, !48, i64 4}
!65 = !{!"_ZTS8GMMInput", !48, i64 0, !48, i64 4, !48, i64 8, !66, i64 16, !66, i64 40, !66, i64 64, !66, i64 88, !67, i64 112}
!66 = !{!"_ZTSSt6vectorIdSaIdEE"}
!67 = !{!"_ZTS7Wishart", !68, i64 0, !48, i64 8}
!68 = !{!"double", !5, i64 0}
!69 = !{!65, !48, i64 0}
!70 = !{!68, !68, i64 0}
!71 = !{!65, !48, i64 8}
!72 = distinct !{!72, !9, !10}
!73 = distinct !{!73, !9, !10}
!74 = !{!75, !75, i64 0}
!75 = !{!"vtable pointer", !6, i64 0}
!76 = distinct !{!76, !9, !10}
!77 = distinct !{!77, !10}
!78 = distinct !{!78, !9, !10, !79}
!79 = !{!"llvm.loop.isvectorized", i32 1}
!80 = distinct !{!80, !9, !10, !79}
!81 = distinct !{!81, !9, !10, !79}
!82 = distinct !{!82, !9, !10, !79}
!83 = !{!84}
!84 = distinct !{!84, !85}
!85 = distinct !{!85, !"LVerDomain"}
!86 = !{!87}
!87 = distinct !{!87, !85}
!88 = !{!89}
!89 = distinct !{!89, !85}
!90 = !{!84, !87}
!91 = distinct !{!91, !9, !10, !79}
!92 = distinct !{!92, !9, !10, !79}
!93 = distinct !{!93, !9, !10, !79}
!94 = distinct !{!94, !9, !10, !79}
!95 = distinct !{!95, !9, !10}
!96 = distinct !{!96, !9, !10, !79}
!97 = distinct !{!97, !9, !10, !79}
!98 = distinct !{!98, !9, !10}
!99 = distinct !{!99, !9, !10, !79}
!100 = distinct !{!100, !9, !10, !79}
!101 = distinct !{!101, !9, !10, !79}
!102 = distinct !{!102, !9, !10, !79}
!103 = distinct !{!103, !9, !10}
!104 = distinct !{!104, !9, !10}
!105 = distinct !{!105, !9, !10}
!106 = !{!107}
!107 = distinct !{!107, !108}
!108 = distinct !{!108, !"LVerDomain"}
!109 = !{!110}
!110 = distinct !{!110, !108}
!111 = !{!112}
!112 = distinct !{!112, !108}
!113 = !{!107, !110}
!114 = distinct !{!114, !9, !10, !79}
!115 = distinct !{!115, !9, !10, !79}
!116 = distinct !{!116, !9, !10}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = !{!123, !118}
!123 = distinct !{!123, !119}
!124 = !{!123}
!125 = distinct !{!125, !9, !10, !79}
!126 = distinct !{!126, !9, !10, !79}
!127 = distinct !{!127, !9, !10, !79}
!128 = distinct !{!128, !9, !10, !79}
!129 = distinct !{!129, !9, !10, !79}
!130 = distinct !{!130, !9, !10, !79}
!131 = distinct !{!131, !9, !10, !79}
!132 = distinct !{!132, !9, !10, !79}
!133 = distinct !{!133, !9, !10, !79}
!134 = distinct !{!134, !9, !10, !79}
!135 = distinct !{!135, !9, !10, !79}
!136 = distinct !{!136, !9, !10, !79}
!137 = distinct !{!137, !9, !10}
!138 = distinct !{!138, !9, !10, !79}
!139 = distinct !{!139, !9, !10, !79}
!140 = distinct !{!140, !9, !10, !79}
!141 = distinct !{!141, !9, !10, !79}
!142 = distinct !{!142, !9, !10}
!143 = distinct !{!143, !9, !10, !79}
!144 = distinct !{!144, !9, !10, !79}
!145 = distinct !{!145, !9, !10, !79}
!146 = distinct !{!146, !9, !10, !79}
!147 = !{i64 0, i64 8, !70, i64 8, i64 4, !47}
!148 = !{i64 0, i64 4, !47}
!149 = !{!150}
!150 = distinct !{!150, !151, !"diffegmm_objective: %alphas"}
!151 = distinct !{!151, !"diffegmm_objective"}
!152 = !{!153}
!153 = distinct !{!153, !151, !"diffegmm_objective: %means"}
!154 = !{!155}
!155 = distinct !{!155, !151, !"diffegmm_objective: %icf"}
!156 = !{!157}
!157 = distinct !{!157, !151, !"diffegmm_objective: %x"}
!158 = !{!150, !153, !155, !157}
!159 = !{!150, !153, !157}
!160 = distinct !{!160, !9, !10, !79}
!161 = distinct !{!161, !9, !10, !79}
!162 = !{!150, !153, !155}
!163 = !{!150, !155, !157}
!164 = distinct !{!164, !9, !10, !79}
!165 = distinct !{!165, !9, !10, !79}
!166 = distinct !{!166, !9, !10, !79}
!167 = distinct !{}
!168 = distinct !{}
!169 = distinct !{!169, !9, !10, !79}
!170 = distinct !{}
!171 = !{i64 8}
!172 = distinct !{}
!173 = distinct !{}
!174 = distinct !{!174, !9, !10}
!175 = distinct !{}
!176 = !{!153, !155, !157}
!177 = distinct !{!177, !9, !10, !79}
!178 = distinct !{!178, !9, !10, !79}
!179 = distinct !{}
!180 = distinct !{!180, !9, !10}
!181 = distinct !{}
!182 = distinct !{}
!183 = distinct !{}
!184 = distinct !{}
!185 = distinct !{}
!186 = !{!"1"}
!187 = !{!"0"}
!188 = !{!189}
!189 = distinct !{!189, !190}
!190 = distinct !{!190, !"LVerDomain"}
!191 = !{!192}
!192 = distinct !{!192, !190}
!193 = !{!194}
!194 = distinct !{!194, !190}
!195 = !{!150, !153, !155, !157, !189, !192}
!196 = distinct !{!196, !79}
!197 = distinct !{}
!198 = distinct !{}
!199 = distinct !{!199, !79}
!200 = distinct !{!200, !79}
!201 = distinct !{}
!202 = distinct !{}
!203 = distinct !{!203, !204, !79}
!204 = !{!"llvm.loop.unroll.runtime.disable"}
!205 = distinct !{}
!206 = distinct !{}
!207 = distinct !{!207, !79}
!208 = distinct !{}
!209 = distinct !{!209, !79}
!210 = distinct !{!210, !79}
!211 = distinct !{}
!212 = distinct !{!212, !79}
!213 = distinct !{}
!214 = distinct !{}
!215 = distinct !{!215, !79}
!216 = distinct !{}
!217 = distinct !{!217, !79}
!218 = distinct !{!218, !79}
!219 = distinct !{!219, !204, !79}
!220 = distinct !{}
!221 = distinct !{}
!222 = distinct !{!222, !79}
!223 = distinct !{!223, !79}
!224 = distinct !{}
!225 = distinct !{}
!226 = distinct !{}
!227 = distinct !{}
!228 = distinct !{!228, !79}
!229 = distinct !{!229, !79}
!230 = distinct !{!230, !9, !10}
!231 = distinct !{!231, !9, !10}
!232 = distinct !{!232, !9, !10, !79}
!233 = distinct !{!233, !9, !10, !79}
!234 = !{!235}
!235 = distinct !{!235, !236}
!236 = distinct !{!236, !"LVerDomain"}
!237 = !{!238}
!238 = distinct !{!238, !236}
!239 = distinct !{!239, !9, !10, !79}
!240 = distinct !{!240, !9, !10, !79}
!241 = distinct !{!241, !9, !10, !79}
!242 = distinct !{!242, !9, !10, !79}
!243 = !{!244}
!244 = distinct !{!244, !245}
!245 = distinct !{!245, !"LVerDomain"}
!246 = !{!247}
!247 = distinct !{!247, !245}
!248 = distinct !{!248, !9, !10, !79}
!249 = distinct !{!249, !9, !10, !79}
!250 = !{!251}
!251 = distinct !{!251, !252}
!252 = distinct !{!252, !"LVerDomain"}
!253 = !{!254}
!254 = distinct !{!254, !252}
!255 = !{!256}
!256 = distinct !{!256, !252}
!257 = !{!251, !254}
!258 = distinct !{!258, !9, !10, !79}
!259 = distinct !{!259, !9, !10, !79}
!260 = distinct !{!260, !9, !10, !79}
!261 = distinct !{!261, !9, !10, !79}
!262 = distinct !{!262, !9, !10}
!263 = distinct !{!263, !9, !10, !79}
!264 = !{!265}
!265 = distinct !{!265, !266}
!266 = distinct !{!266, !"LVerDomain"}
!267 = !{!268}
!268 = distinct !{!268, !266}
!269 = distinct !{!269, !9, !10, !79}
!270 = distinct !{!270, !9, !10, !79}
!271 = distinct !{!271, !9, !10, !79}
!272 = distinct !{!272, !9, !10, !79}
!273 = distinct !{!273, !9, !10, !79}
!274 = distinct !{!274, !9, !10}
!275 = distinct !{!275, !9, !10, !79}
!276 = distinct !{!276, !9, !10, !79}
!277 = distinct !{!277, !9, !10}
!278 = !{!279}
!279 = distinct !{!279, !280}
!280 = distinct !{!280, !"LVerDomain"}
!281 = !{!282}
!282 = distinct !{!282, !280}
!283 = distinct !{!283, !9, !10, !79}
!284 = distinct !{!284, !9, !10, !79}
!285 = !{!286}
!286 = distinct !{!286, !287}
!287 = distinct !{!287, !"LVerDomain"}
!288 = !{!289}
!289 = distinct !{!289, !287}
!290 = distinct !{!290, !9, !10, !79}
!291 = distinct !{!291, !9, !10, !79}
!292 = distinct !{!292, !9, !10}
!293 = distinct !{!293, !9, !10, !79}
!294 = distinct !{!294, !9, !10, !79}
!295 = distinct !{!295, !9, !10, !79}
!296 = distinct !{!296, !9, !10, !79}
!297 = distinct !{!297, !9, !10}
!298 = distinct !{!298, !9, !10}
!299 = distinct !{!299, !9, !10}
!300 = distinct !{!300, !9, !10}
!301 = distinct !{!301, !9, !10}
!302 = distinct !{!302, !9, !10}
!303 = distinct !{!303, !9, !10}
!304 = distinct !{!304, !9, !10}
!305 = distinct !{!305, !9, !10}
!306 = distinct !{!306, !9, !10}
!307 = distinct !{!307, !9, !10}
!308 = !{!309}
!309 = distinct !{!309, !310}
!310 = distinct !{!310, !"LVerDomain"}
!311 = !{!312}
!312 = distinct !{!312, !310}
!313 = !{!314}
!314 = distinct !{!314, !310}
!315 = !{!309, !312}
!316 = distinct !{!316, !9, !10, !79}
!317 = distinct !{!317, !9, !10, !79}
!318 = distinct !{!318, !9, !10}
!319 = !{!320}
!320 = distinct !{!320, !321}
!321 = distinct !{!321, !"LVerDomain"}
!322 = !{!323}
!323 = distinct !{!323, !321}
!324 = !{!325, !320}
!325 = distinct !{!325, !321}
!326 = !{!325}
!327 = distinct !{!327, !9, !10, !79}
!328 = distinct !{!328, !9, !10, !79}
!329 = distinct !{!329, !9, !10, !79}
!330 = distinct !{!330, !9, !10, !79}
!331 = distinct !{!331, !9, !10, !79}
!332 = distinct !{!332, !9, !10, !79}
!333 = distinct !{!333, !9, !10, !79}
!334 = distinct !{!334, !9, !10, !79}
!335 = distinct !{!335, !9, !10, !79}
!336 = distinct !{!336, !9, !10, !79}
!337 = distinct !{!337, !9, !10, !79}
!338 = distinct !{!338, !9, !10, !79}
!339 = distinct !{!339, !9, !10}
!340 = distinct !{!340, !9, !10}
!341 = distinct !{!341, !9, !10}
!342 = distinct !{!342, !9, !10, !79}
!343 = distinct !{!343, !9, !10, !79}
!344 = distinct !{!344, !9, !10, !79}
!345 = distinct !{!345, !9, !10, !79}
!346 = distinct !{!346, !9, !10}
!347 = !{!348, !348, i64 0}
!348 = !{!"bool", !5, i64 0}
!349 = !{!350, !350, i64 0}
!350 = !{!"_ZTSN5adept15ArrayPrintStyleE", !5, i64 0}
!351 = !{!352, !348, i64 145}
!352 = !{!"_ZTSN5adept5StackE", !16, i64 40, !353, i64 48, !353, i64 72, !354, i64 96, !355, i64 120, !48, i64 128, !48, i64 132, !48, i64 136, !48, i64 140, !348, i64 144, !348, i64 145, !348, i64 146, !348, i64 147, !348, i64 148}
!353 = !{!"_ZTSSt6vectorIiSaIiEE"}
!354 = !{!"_ZTSNSt7__cxx114listIN5adept3GapESaIS2_EEE"}
!355 = !{!"_ZTSSt14_List_iteratorIN5adept3GapEE", !16, i64 0}
!356 = !{i8 0, i8 2}
!357 = !{!352, !16, i64 40}
!358 = !{!359, !16, i64 0}
!359 = !{!"_ZTSNSt8__detail15_List_node_baseE", !16, i64 0, !16, i64 8}
!360 = distinct !{!360, !9, !10}
!361 = !{!362, !16, i64 0}
!362 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !16, i64 0, !16, i64 8, !16, i64 16}
!363 = !{!364, !16, i64 0}
!364 = !{!"_ZTSN5adept8internal16StackStorageOrigE", !16, i64 0, !16, i64 8, !16, i64 16, !48, i64 24, !48, i64 28, !48, i64 32, !48, i64 36}
!365 = !{!364, !16, i64 8}
!366 = !{!364, !16, i64 16}
!367 = !{!352, !348, i64 144}
!368 = !{!364, !48, i64 24}
!369 = !{!370, !48, i64 0}
!370 = !{!"_ZTSN5adept8internal9StatementE", !48, i64 0, !48, i64 4}
!371 = !{!370, !48, i64 4}
!372 = distinct !{!372, !9, !10}
!373 = distinct !{!373, !9, !10}
!374 = distinct !{!374, !9, !10}
!375 = distinct !{!375, !9, !10}
!376 = !{!352, !48, i64 140}
!377 = !{!378, !48, i64 4}
!378 = !{!"_ZTSN5adept3GapE", !48, i64 0, !48, i64 4}
!379 = !{!378, !48, i64 0}
!380 = !{!355, !16, i64 0}
!381 = !{!382, !4, i64 16}
!382 = !{!"_ZTSNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EEE", !383, i64 0}
!383 = !{!"_ZTSNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE10_List_implE", !384, i64 0}
!384 = !{!"_ZTSNSt8__detail17_List_node_headerE", !4, i64 16}
!385 = !{i64 0, i64 8, !61}
!386 = distinct !{!386, !9, !10}
!387 = !{!352, !48, i64 128}
!388 = !{!352, !48, i64 136}
!389 = distinct !{!389, !9, !10}
!390 = !{!359, !16, i64 8}
!391 = distinct !{!391, !9, !10}
!392 = distinct !{!392, !9, !10}
!393 = distinct !{!393, !9, !10}
!394 = distinct !{!394, !9, !10}
!395 = distinct !{!395, !9, !10}
!396 = !{!352, !48, i64 132}
!397 = !{!352, !348, i64 146}
!398 = !{!364, !48, i64 28}
!399 = !{!364, !48, i64 32}
!400 = !{!364, !48, i64 36}
!401 = !{!362, !16, i64 8}
!402 = distinct !{!402, !9, !10}
!403 = distinct !{!403, !9, !10}
!404 = !{!405}
!405 = distinct !{!405, !406, !"_ZNK5adept8internal6PacketIdE3putEPd: %d"}
!406 = distinct !{!406, !"_ZNK5adept8internal6PacketIdE3putEPd"}
!407 = distinct !{!407, !9, !10}
!408 = distinct !{!408, !9, !10}
!409 = distinct !{!409, !9, !10, !79}
!410 = distinct !{!410, !9, !10}
!411 = distinct !{!411, !9, !10, !79}
!412 = distinct !{!412, !9, !10}
!413 = !{!414}
!414 = distinct !{!414, !415, !"_ZNK5adept5Stack23jacobian_forward_kernelEPd: %gradient_multipass_b"}
!415 = distinct !{!415, !"_ZNK5adept5Stack23jacobian_forward_kernelEPd"}
!416 = !{!417, !414}
!417 = distinct !{!417, !418, !"_ZNK5adept8internal6PacketIdE3putEPd: %d"}
!418 = distinct !{!418, !"_ZNK5adept8internal6PacketIdE3putEPd"}
!419 = distinct !{!419, !9, !10}
!420 = distinct !{!420, !9, !10}
!421 = distinct !{!421, !9, !10}
!422 = distinct !{!422, !9, !10}
!423 = !{!424}
!424 = distinct !{!424, !425, !"_ZNK5adept5Stack23jacobian_forward_kernelEPd: %gradient_multipass_b"}
!425 = distinct !{!425, !"_ZNK5adept5Stack23jacobian_forward_kernelEPd"}
!426 = !{!427, !424}
!427 = distinct !{!427, !428, !"_ZNK5adept8internal6PacketIdE3putEPd: %d"}
!428 = distinct !{!428, !"_ZNK5adept8internal6PacketIdE3putEPd"}
!429 = distinct !{!429, !9, !10}
!430 = distinct !{!430, !9, !10}
!431 = !{!432}
!432 = distinct !{!432, !433, !"_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi: %gradient_multipass_b"}
!433 = distinct !{!433, !"_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi"}
!434 = distinct !{!434, !9, !10}
!435 = distinct !{!435, !9, !10}
!436 = distinct !{!436, !9, !10}
!437 = distinct !{!437, !9, !10}
!438 = distinct !{!438, !9, !10}
!439 = distinct !{!439, !9, !10}
!440 = distinct !{!440, !9, !10}
!441 = distinct !{!441, !9, !10}
!442 = distinct !{!442, !9, !10}
!443 = distinct !{!443, !9, !10}
!444 = distinct !{!444, !9, !10}
!445 = distinct !{!445, !9, !10}
!446 = distinct !{!446, !9, !10}
!447 = distinct !{!447, !9, !10}
!448 = distinct !{!448, !9, !10}
!449 = distinct !{!449, !9, !10}
!450 = distinct !{!450, !9, !10}
!451 = !{!452}
!452 = distinct !{!452, !453, !"_ZN5adept7versionB5cxx11Ev: %agg.result"}
!453 = distinct !{!453, !"_ZN5adept7versionB5cxx11Ev"}
!454 = !{!455}
!455 = distinct !{!455, !456, !"_ZN5adept16compiler_versionB5cxx11Ev: %agg.result"}
!456 = distinct !{!456, !"_ZN5adept16compiler_versionB5cxx11Ev"}
!457 = !{!458}
!458 = distinct !{!458, !459, !"_ZN5adept14compiler_flagsB5cxx11Ev: %agg.result"}
!459 = distinct !{!459, !"_ZN5adept14compiler_flagsB5cxx11Ev"}
!460 = !{!461, !4, i64 8}
!461 = !{!"_ZTSSi", !4, i64 8}
!462 = !{!463, !16, i64 8}
!463 = !{!"_ZTSN5adept5ArrayILi1EdLb0EEE", !16, i64 0, !16, i64 8, !464, i64 16, !464, i64 20}
!464 = !{!"_ZTSN5adept14ExpressionSizeILi1EEE", !5, i64 0}
!465 = !{!463, !16, i64 0}
!466 = distinct !{!466, !9, !10}
!467 = !{!468, !68, i64 0}
!468 = !{!"_ZTSN5adept6ActiveIdEE", !68, i64 0, !48, i64 8}
!469 = !{!468, !48, i64 8}
!470 = distinct !{!470, !9, !10}
!471 = distinct !{!471, !9, !10}
!472 = !{!384, !4, i64 16}
!473 = !{!352, !348, i64 147}
!474 = !{!352, !348, i64 148}
!475 = !{!476, !16, i64 0}
!476 = !{!"_ZTSNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE17_Vector_impl_dataE", !16, i64 0, !16, i64 8, !16, i64 16}
!477 = distinct !{!477, !9, !10}
!478 = distinct !{!478, !9, !10}
!479 = !{!480}
!480 = distinct !{!480, !481, !"_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE: %agg.result"}
!481 = distinct !{!481, !"_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE"}
!482 = distinct !{!482, !9, !10}
!483 = !{!484}
!484 = distinct !{!484, !485, !"_ZN9adeptTest6sqnormIN5adept6ActiveIdEEEET_iPKS4_: %agg.result"}
!485 = distinct !{!485, !"_ZN9adeptTest6sqnormIN5adept6ActiveIdEEEET_iPKS4_"}
!486 = !{!487}
!487 = distinct !{!487, !488, !"_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE: %agg.result"}
!488 = distinct !{!488, !"_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE"}
!489 = distinct !{!489, !9, !10}
!490 = distinct !{!490, !9, !10}
!491 = distinct !{!491, !9, !10}
!492 = !{!493}
!493 = distinct !{!493, !494, !"_ZN5adeptplIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_3AddES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE: %agg.result"}
!494 = distinct !{!494, !"_ZN5adeptplIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_3AddES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE"}
!495 = !{!476, !16, i64 8}
!496 = distinct !{!496, !9, !10}
!497 = distinct !{!497, !9, !10}
!498 = !{!50, !16, i64 16}
!499 = !{!500}
!500 = distinct !{!500, !501, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_: %agg.result"}
!501 = distinct !{!501, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"}
!502 = distinct !{!502, !9, !10}
!503 = !{!504, !48, i64 8}
!504 = !{!"_ZTSN5adept7StorageIdEE", !16, i64 0, !48, i64 8, !48, i64 12, !48, i64 16}
!505 = !{!504, !48, i64 12}
!506 = !{!504, !48, i64 16}
!507 = !{!504, !16, i64 0}
!508 = !{!509}
!509 = distinct !{!509, !510, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_: %agg.result"}
!510 = distinct !{!510, !"_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_"}
!511 = !{!512, !514, i64 32}
!512 = !{!"_ZTSSt8ios_base", !4, i64 8, !4, i64 16, !513, i64 24, !514, i64 28, !514, i64 32, !16, i64 40, !515, i64 48, !5, i64 64, !48, i64 192, !16, i64 200, !516, i64 208}
!513 = !{!"_ZTSSt13_Ios_Fmtflags", !5, i64 0}
!514 = !{!"_ZTSSt12_Ios_Iostate", !5, i64 0}
!515 = !{!"_ZTSNSt8ios_base6_WordsE", !16, i64 0, !4, i64 8}
!516 = !{!"_ZTSSt6locale", !16, i64 0}
!517 = !{!476, !16, i64 16}
!518 = distinct !{!518, !9, !10}
!519 = distinct !{!519, !9, !10}
!520 = distinct !{!520, !9, !10}
!521 = !{!522}
!522 = distinct !{!522, !523, !"_ZN5adeptmiIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8SubtractES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE: %agg.result"}
!523 = distinct !{!523, !"_ZN5adeptmiIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8SubtractES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE"}
!524 = distinct !{!524, !9, !10}
!525 = !{!526}
!526 = distinct !{!526, !527, !"_ZN9adeptTest7arr_maxIN5adept6ActiveIdEEEET_iPKS4_: %agg.result"}
!527 = distinct !{!527, !"_ZN9adeptTest7arr_maxIN5adept6ActiveIdEEEET_iPKS4_"}
!528 = distinct !{!528, !9, !10}
!529 = !{!530}
!530 = distinct !{!530, !531, !"_ZN5adeptplINS_6ActiveIdEENS_8internal14UnaryOperationIdNS3_3ExpENS3_15BinaryOperationIdS2_NS3_8SubtractES2_EEEEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS6_INS3_7promoteINSB_4typeENSC_4typeEE4typeESB_NS3_3AddESC_EEE4typeERKNS_10ExpressionISE_SB_EERKNSM_ISF_SC_EE: %agg.result"}
!531 = distinct !{!531, !"_ZN5adeptplINS_6ActiveIdEENS_8internal14UnaryOperationIdNS3_3ExpENS3_15BinaryOperationIdS2_NS3_8SubtractES2_EEEEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS6_INS3_7promoteINSB_4typeENSC_4typeEE4typeESB_NS3_3AddESC_EEE4typeERKNS_10ExpressionISE_SB_EERKNSM_ISF_SC_EE"}
!532 = distinct !{!532, !9, !10}
!533 = !{!534, !16, i64 0}
!534 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_EE", !16, i64 0, !16, i64 8}
!535 = !{!534, !16, i64 8}
!536 = !{!537, !16, i64 0}
!537 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEEE", !16, i64 0, !16, i64 8}
!538 = !{!539, !16, i64 16}
!539 = !{!"_ZTSN5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEE", !540, i64 0, !16, i64 16}
!540 = !{!"_ZTSN5adept8internal6PacketIdEE", !5, i64 0}
!541 = !{!537, !16, i64 8}
!542 = !{!543, !48, i64 0}
!543 = !{!"_ZTSN5adept8internal6PacketIiEE", !48, i64 0}
!544 = !{!545, !16, i64 8}
!545 = !{!"_ZTSN5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEEE", !543, i64 0, !16, i64 8}
!546 = !{!547}
!547 = distinct !{!547, !548, !"_ZN9adeptTest6sqnormIN5adept6ActiveIdEEEET_iPKS4_: %agg.result"}
!548 = distinct !{!548, !"_ZN9adeptTest6sqnormIN5adept6ActiveIdEEEET_iPKS4_"}
!549 = !{!550}
!550 = distinct !{!550, !551, !"_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE: %agg.result"}
!551 = distinct !{!551, !"_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE"}
!552 = !{!553}
!553 = distinct !{!553, !554, !"_ZN9adeptTest6sqnormIN5adept6ActiveIdEEEET_iPKS4_: %agg.result"}
!554 = distinct !{!554, !"_ZN9adeptTest6sqnormIN5adept6ActiveIdEEEET_iPKS4_"}
!555 = !{!556}
!556 = distinct !{!556, !557, !"_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE: %agg.result"}
!557 = distinct !{!557, !"_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE"}
!558 = distinct !{!558, !9, !10}
!559 = !{!560}
!560 = distinct !{!560, !561, !"_ZN5adeptmiINS_6ActiveIdEEdEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT0_EE5valueENS3_19BinaryOpScalarRightINS3_7promoteINT_4typeES5_E4typeES8_NS3_8SubtractES5_EEE4typeERKNS_10ExpressionIS9_S8_EERKS5_: %agg.result"}
!561 = distinct !{!561, !"_ZN5adeptmiINS_6ActiveIdEEdEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT0_EE5valueENS3_19BinaryOpScalarRightINS3_7promoteINT_4typeES5_E4typeES8_NS3_8SubtractES5_EEE4typeERKNS_10ExpressionIS9_S8_EERKS5_"}
!562 = !{!563, !16, i64 0}
!563 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_EE", !16, i64 0, !16, i64 8}
!564 = !{!563, !16, i64 8}
!565 = !{!566, !16, i64 0}
!566 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEEE", !16, i64 0, !563, i64 8}
!567 = !{!568, !16, i64 0}
!568 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEEE", !16, i64 0, !569, i64 8}
!569 = !{!"_ZTSN5adept8internal14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES5_EEEE", !570, i64 0}
!570 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_EE", !16, i64 0, !16, i64 8}
!571 = !{!570, !16, i64 0}
!572 = !{!570, !16, i64 8}
!573 = !{!574, !16, i64 0}
!574 = !{!"_ZTSN5adept8internal14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEE", !16, i64 0}
!575 = !{!576, !16, i64 8}
!576 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_EE", !574, i64 0, !16, i64 8}
!577 = !{!578, !16, i64 0}
!578 = !{!"_ZTSN5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdEE", !16, i64 0, !540, i64 16}
!579 = !{!580}
!580 = distinct !{!580, !581}
!581 = distinct !{!581, !"LVerDomain"}
!582 = !{!583}
!583 = distinct !{!583, !581}
!584 = distinct !{!584, !9, !10, !79}
!585 = distinct !{!585, !9, !10, !79}
!586 = !{!587}
!587 = distinct !{!587, !588}
!588 = distinct !{!588, !"LVerDomain"}
!589 = !{!590}
!590 = distinct !{!590, !588}
!591 = distinct !{!591, !9, !10, !79}
!592 = distinct !{!592, !9, !10, !79}
!593 = distinct !{!593, !9, !10, !79}
!594 = distinct !{!594, !9, !10, !79}
!595 = distinct !{!595, !9, !10, !79}
!596 = distinct !{!596, !9, !10, !79}
!597 = distinct !{!597, !9, !10, !79}
!598 = distinct !{!598, !9, !10, !79}
!599 = distinct !{!599, !9, !10, !79}
!600 = distinct !{!600, !9, !10, !79}
!601 = distinct !{!601, !9, !10, !79}
!602 = distinct !{!602, !9, !10, !79}
!603 = distinct !{!603, !9, !10, !79}
!604 = distinct !{!604, !9, !10, !79}
!605 = distinct !{!605, !9, !10, !79}
!606 = distinct !{!606, !9, !10, !79}
!607 = distinct !{!607, !9, !10, !79}
!608 = distinct !{!608, !9, !10, !79}
!609 = distinct !{!609, !9, !10, !79}
!610 = distinct !{!610, !9, !10, !79}
!611 = distinct !{!611, !9, !10, !79}
!612 = distinct !{!612, !9, !10, !79}
!613 = !{!614}
!614 = distinct !{!614, !615}
!615 = distinct !{!615, !"LVerDomain"}
!616 = !{!617}
!617 = distinct !{!617, !615}
!618 = !{!619}
!619 = distinct !{!619, !615}
!620 = !{!614, !617}
!621 = distinct !{!621, !9, !10, !79}
!622 = distinct !{!622, !9, !10, !79}
!623 = !{!624}
!624 = distinct !{!624, !625}
!625 = distinct !{!625, !"LVerDomain"}
!626 = !{!627}
!627 = distinct !{!627, !625}
!628 = !{!629, !624}
!629 = distinct !{!629, !625}
!630 = !{!629}
!631 = distinct !{!631, !9, !10, !79}
!632 = distinct !{!632, !9, !10, !79}
!633 = !{!634}
!634 = distinct !{!634, !635}
!635 = distinct !{!635, !"LVerDomain"}
!636 = !{!637}
!637 = distinct !{!637, !635}
!638 = !{!639}
!639 = distinct !{!639, !635}
!640 = !{!634, !637}
!641 = distinct !{!641, !9, !10, !79}
!642 = distinct !{!642, !9, !10, !79}
!643 = distinct !{!643, !9, !10, !79}
!644 = distinct !{!644, !9, !10, !79}
!645 = distinct !{!645, !9, !10, !79}
!646 = distinct !{!646, !9, !10, !79}
!647 = distinct !{!647, !9, !10, !79}
!648 = distinct !{!648, !9, !10, !79}
!649 = distinct !{!649, !9, !10, !79}
!650 = distinct !{!650, !9, !10, !79}
!651 = distinct !{!651, !9, !10, !79}
!652 = distinct !{!652, !9, !10, !79}
