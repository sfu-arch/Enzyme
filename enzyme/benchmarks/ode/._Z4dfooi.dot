digraph "CFG for '_Z4dfooi' function" {
	label="CFG for '_Z4dfooi' function";

	Node0x95a6c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{entry:\l  %conv = sext i32 %n to i64\l  %0 = tail call \{ i64, i1 \} @llvm.umul.with.overflow.i64(i64 %conv, i64 8)\l  %1 = extractvalue \{ i64, i1 \} %0, 1\l  %2 = extractvalue \{ i64, i1 \} %0, 0\l  %3 = select i1 %1, i64 -1, i64 %2\l  %call = tail call noalias nonnull i8* @_Znam(i64 %3) #9\l  %4 = bitcast i8* %call to double*\l  %cmp46 = icmp sgt i32 %n, 0\l  br i1 %cmp46, label %for.body.preheader, label\l... %for.cond3.preheader.for.cond.cleanup5_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x95a6c30:s0 -> Node0x95a7620;
	Node0x95a6c30:s1 -> Node0x95a7760;
	Node0x95a7620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{for.body.preheader:                               \l  %wide.trip.count50 = zext i32 %n to i64\l  br label %for.body\l}"];
	Node0x95a7620 -> Node0x95a7a20;
	Node0x95a7b10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{for.cond3.preheader:                              \l  br i1 %cmp46, label %for.body6.lr.ph, label\l... %for.cond3.preheader.for.cond.cleanup5_crit_edge\l|{<s0>T|<s1>F}}"];
	Node0x95a7b10:s0 -> Node0x95a7bc0;
	Node0x95a7b10:s1 -> Node0x95a7760;
	Node0x95a7760 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{for.cond3.preheader.for.cond.cleanup5_crit_edge:  \l  %.pre = load double*, double** @dinp, align 8, !tbaa !2\l  br label %for.cond.cleanup5\l}"];
	Node0x95a7760 -> Node0x95a83b0;
	Node0x95a7bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{for.body6.lr.ph:                                  \l  %5 = load double*, double** @dinp, align 8, !tbaa !2\l  %wide.trip.count = zext i32 %n to i64\l  br label %for.body6\l}"];
	Node0x95a7bc0 -> Node0x95a8740;
	Node0x95a7a20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.body:                                         \l  %indvars.iv48 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next49,\l... %for.body ]\l  %indvars.iv.next49 = add nuw nsw i64 %indvars.iv48, 1\l  %6 = trunc i64 %indvars.iv.next49 to i32\l  %conv1 = sitofp i32 %6 to double\l  %arrayidx = getelementptr inbounds double, double* %4, i64 %indvars.iv48\l  store double %conv1, double* %arrayidx, align 8, !tbaa !6\l  %exitcond51.not = icmp eq i64 %indvars.iv.next49, %wide.trip.count50\l  br i1 %exitcond51.not, label %for.cond3.preheader, label %for.body,\l... !llvm.loop !8\l|{<s0>T|<s1>F}}"];
	Node0x95a7a20:s0 -> Node0x95a7b10;
	Node0x95a7a20:s1 -> Node0x95a7a20;
	Node0x95a83b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{for.cond.cleanup5:                                \l  %7 = phi double* [ %.pre, %for.cond3.preheader.for.cond.cleanup5_crit_edge\l... ], [ %5, %for.body6 ]\l  %8 = load i32, i32* @enzyme_dupnoneed, align 4, !tbaa !11\l  %9 = load i32, i32* @enzyme_const, align 4, !tbaa !11\l  call void @diffe_Z3fooPdi(double* %4, double* %7, i32 %n)\l  %cmp.i.i = icmp slt i32 %n, 0\l  br i1 %cmp.i.i, label %if.then.i.i, label\l... %_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i\l|{<s0>T|<s1>F}}"];
	Node0x95a83b0:s0 -> Node0x95aa120;
	Node0x95a83b0:s1 -> Node0x95aa240;
	Node0x95aa120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5572df70",label="{if.then.i.i:                                      \l  tail call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds\l... ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0)) #10\l  unreachable\l}"];
	Node0x95aa240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_.exit.i: \l  %cmp.not.i.i.i.i = icmp eq i32 %n, 0\l  br i1 %cmp.not.i.i.i.i, label %_ZNSt6vectorIdSaIdEEC2EmRKS0_.exit.thread,\l... label %if.then.i.i.i\l|{<s0>T|<s1>F}}"];
	Node0x95aa240:s0 -> Node0x95aa850;
	Node0x95aa240:s1 -> Node0x95aac10;
	Node0x95aa850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{_ZNSt6vectorIdSaIdEEC2EmRKS0_.exit.thread:        \l  %10 = load double*, double** @dinp, align 8, !tbaa !2\l  %arrayidx1341 = getelementptr inbounds double, double* %10, i64 44\l  %arrayidx1442 = getelementptr inbounds double, double* %10, i64 2\l  %11 = load double, double* %arrayidx1341, align 8, !tbaa !6\l  %12 = load double, double* %arrayidx1442, align 8, !tbaa !6\l  br label %_ZNSt6vectorIdSaIdEED2Ev.exit\l}"];
	Node0x95aa850 -> Node0x95ab0f0;
	Node0x95aac10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{if.then.i.i.i:                                    \l  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv, 3\l  %call2.i.i.i.i.i.i = tail call noalias nonnull i8* @_Znwm(i64\l... %mul.i.i.i.i.i.i) #11\l  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %call2.i.i.i.i.i.i,\l... i8 0, i64 %mul.i.i.i.i.i.i, i1 false) #12\l  %13 = load double*, double** @dinp, align 8, !tbaa !2\l  %arrayidx13 = getelementptr inbounds double, double* %13, i64 44\l  %arrayidx14 = getelementptr inbounds double, double* %13, i64 2\l  %14 = load double, double* %arrayidx13, align 8, !tbaa !6\l  %15 = load double, double* %arrayidx14, align 8, !tbaa !6\l  tail call void @_ZdlPv(i8* nonnull %call2.i.i.i.i.i.i) #12\l  br label %_ZNSt6vectorIdSaIdEED2Ev.exit\l}"];
	Node0x95aac10 -> Node0x95ab0f0;
	Node0x95ab0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{_ZNSt6vectorIdSaIdEED2Ev.exit:                    \l  %16 = phi double [ %12, %_ZNSt6vectorIdSaIdEEC2EmRKS0_.exit.thread ], [ %15,\l... %if.then.i.i.i ]\l  %17 = phi double [ %11, %_ZNSt6vectorIdSaIdEEC2EmRKS0_.exit.thread ], [ %14,\l... %if.then.i.i.i ]\l  %.fca.0.insert = insertvalue \{ double, double \} undef, double %17, 0\l  %.fca.1.insert = insertvalue \{ double, double \} %.fca.0.insert, double %16, 1\l  ret \{ double, double \} %.fca.1.insert\l}"];
	Node0x95a8740 [shape=record,color="#b70d28ff", style=filled, fillcolor="#be242e70",label="{for.body6:                                        \l  %indvars.iv = phi i64 [ 0, %for.body6.lr.ph ], [ %indvars.iv.next,\l... %for.body6 ]\l  %arrayidx8 = getelementptr inbounds double, double* %5, i64 %indvars.iv\l  store double 1.000000e+00, double* %arrayidx8, align 8, !tbaa !6\l  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1\l  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count\l  br i1 %exitcond.not, label %for.cond.cleanup5, label %for.body6, !llvm.loop\l... !13\l|{<s0>T|<s1>F}}"];
	Node0x95a8740:s0 -> Node0x95a83b0;
	Node0x95a8740:s1 -> Node0x95a8740;
}
