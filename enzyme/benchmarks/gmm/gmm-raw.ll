; ModuleID = 'gmm-unopt.ll'
source_filename = "gmm.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char>::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.adept::Stack" = type <{ %"class.adept::internal::StackStorageOrig", double*, %"class.std::vector.8", %"class.std::vector.8", %"class.std::__cxx11::list", %"struct.std::_List_iterator", i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.adept::internal::StackStorageOrig" = type { %"struct.adept::internal::Statement"*, double*, i32*, i32, i32, i32, i32 }
%"struct.adept::internal::Statement" = type { i32, i32 }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl" = type { %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" }
%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" = type { i32*, i32*, i32* }
%"class.std::__cxx11::list" = type { %"class.std::__cxx11::_List_base" }
%"class.std::__cxx11::_List_base" = type { %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl" }
%"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl" = type { %"struct.std::__detail::_List_node_header" }
%"struct.std::__detail::_List_node_header" = type { %"struct.std::__detail::_List_node_base", i64 }
%"struct.std::__detail::_List_node_base" = type { %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"* }
%"struct.std::_List_iterator" = type { %"struct.std::__detail::_List_node_base"* }
%"struct.adept::internal::EndIndex" = type { i8 }
%"class.adept::internal::AllIndex" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%"class.std::allocator.0" = type { i8 }
%"class.std::reverse_iterator" = type { %"class.__gnu_cxx::__normal_iterator.41" }
%"class.__gnu_cxx::__normal_iterator.41" = type { i8* }
%"class.__gnu_cxx::new_allocator.1" = type { i8 }
%struct.timeval = type { i64, i64 }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl" = type { %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" }
%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data" = type { double*, double*, double* }
%struct.Wishart = type { double, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.GMMParameters = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %"class.std::__cxx11::basic_string"* }
%struct.GMMInput = type { i32, i32, i32, %"class.std::vector.3", %"class.std::vector.3", %"class.std::vector.3", %"class.std::vector.3", %struct.Wishart }
%struct.GMMOutput = type { double, %"class.std::vector.3" }
%"class.std::allocator.5" = type { i8 }
%"class.std::bad_alloc" = type { %"class.std::exception" }
%"class.std::exception" = type { i32 (...)** }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"class.std::allocator" = type { i8 }
%"class.adept::invalid_operation" = type { %"class.adept::array_exception" }
%"class.adept::array_exception" = type { %"class.adept::exception" }
%"class.adept::exception" = type { %"class.std::exception", %"class.std::__cxx11::basic_string" }
%"class.std::allocator.10" = type { i8 }
%"class.adept::stack_already_active" = type { %"class.adept::autodiff_exception" }
%"class.adept::autodiff_exception" = type { %"class.adept::exception" }
%"class.adept::gradients_not_initialized" = type { %"class.adept::autodiff_exception" }
%"struct.std::_List_const_iterator" = type { %"struct.std::__detail::_List_node_base"* }
%"struct.adept::Gap" = type { i32, i32 }
%"struct.std::_List_node" = type { %"struct.std::__detail::_List_node_base", %"struct.__gnu_cxx::__aligned_membuf" }
%"struct.__gnu_cxx::__aligned_membuf" = type { [8 x i8] }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.adept::feature_not_available" = type { %"class.adept::exception" }
%"class.adept::Array" = type { float*, %"class.adept::Storage"*, %"class.adept::ExpressionSize", %"class.adept::ExpressionSize" }
%"class.adept::Storage" = type opaque
%"class.adept::ExpressionSize" = type { [2 x i32] }
%"class.adept::SpecialMatrix" = type { float*, %"class.adept::Storage"*, i32, i32 }
%"class.adept::SpecialMatrix.19" = type { float*, %"class.adept::Storage"*, i32, i32 }
%"class.adept::Array.22" = type { double*, %"class.adept::Storage.24"*, %"class.adept::ExpressionSize", %"class.adept::ExpressionSize" }
%"class.adept::Storage.24" = type <{ double*, i32, i32, i32, [4 x i8] }>
%"class.adept::SpecialMatrix.25" = type { double*, %"class.adept::Storage.24"*, i32, i32 }
%"class.adept::SpecialMatrix.27" = type { double*, %"class.adept::Storage.24"*, i32, i32 }
%"struct.adept::internal::Packet" = type { %union.anon.29 }
%union.anon.29 = type { <2 x double> }
%"struct.adept::Block" = type { [2 x double] }
%"class.adept::dependents_or_independents_not_identified" = type { %"class.adept::autodiff_exception" }
%"class.__gnu_cxx::__normal_iterator.44" = type { i32* }
%"class.std::vector.30" = type { %"struct.std::_Vector_base.31" }
%"struct.std::_Vector_base.31" = type { %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl" }
%"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl" = type { %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data" = type { %"struct.adept::Block"*, %"struct.adept::Block"*, %"struct.adept::Block"* }
%"class.std::allocator.32" = type { i8 }
%"class.__gnu_cxx::new_allocator.33" = type { i8 }
%"class.std::__cxx11::basic_stringstream" = type { %"class.std::basic_iostream.base", %"class.std::__cxx11::basic_stringbuf", %"class.std::basic_ios" }
%"class.std::basic_iostream.base" = type { %"class.std::basic_istream.base", %"class.std::basic_ostream.base" }
%"class.std::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::basic_ostream.base" = type { i32 (...)** }
%"class.std::__cxx11::basic_stringbuf" = type { %"class.std::basic_streambuf", i32, %"class.std::__cxx11::basic_string" }
%"class.std::basic_iostream" = type { %"class.std::basic_istream.base", %"class.std::basic_ostream.base", %"class.std::basic_ios" }
%"class.adept::Array.35" = type { float*, %"class.adept::Storage"*, %"class.adept::ExpressionSize.37", %"class.adept::ExpressionSize.37" }
%"class.adept::ExpressionSize.37" = type { [1 x i32] }
%"class.adept::Array.38" = type { double*, %"class.adept::Storage.24"*, %"class.adept::ExpressionSize.37", %"class.adept::ExpressionSize.37" }
%"struct.adept::Expression.39" = type { i8 }
%"struct.adept::internal::GradientIndex" = type { i8 }
%"class.adept::Active" = type <{ double, i32, [4 x i8] }>
%"struct.adept::Expression.40" = type { i8 }
%"class.std::vector.45" = type { %"struct.std::_Vector_base.46" }
%"struct.std::_Vector_base.46" = type { %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl" }
%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl" = type { %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data" }
%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data" = type { %"class.adept::Active"*, %"class.adept::Active"*, %"class.adept::Active"* }
%"class.std::allocator.47" = type { i8 }
%"struct.adept::internal::BinaryOperation" = type { %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOpScalarLeft"* }
%"struct.adept::internal::BinaryOperation.51" = type { %"class.adept::Active"*, %"class.adept::Active"* }
%"struct.adept::internal::BinaryOpScalarLeft" = type <{ %"struct.adept::internal::Packet", %"class.adept::Active"*, [8 x i8] }>
%"struct.adept::internal::BinaryOperation.54" = type { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* }
%"struct.adept::internal::BinaryOpScalarLeft.56" = type <{ %"struct.adept::internal::Packet", %"class.adept::Active"*, [8 x i8] }>
%"struct.adept::internal::BinaryOpScalarLeft.59" = type { %"struct.adept::internal::Packet.61", %"class.adept::Active"* }
%"struct.adept::internal::Packet.61" = type { i32 }
%"struct.adept::Expression.52" = type { i8 }
%"struct.adept::Expression.53" = type { i8 }
%"struct.adept::Expression.50" = type { i8 }
%"struct.adept::Expression.57" = type { i8 }
%"struct.adept::Expression.60" = type { i8 }
%"struct.adept::Expression.55" = type { i8 }
%"class.std::reverse_iterator.42" = type { i8* }
%"struct.std::iterator" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::allocator.13" = type { i8 }
%"class.__gnu_cxx::new_allocator.14" = type { i8 }
%"class.__gnu_cxx::new_allocator.11" = type { i8 }
%"struct.std::__false_type" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.__gnu_cxx::__normal_iterator.43" = type { i8* }
%"struct.std::__allocated_ptr" = type { %"class.std::allocator.13"*, %"struct.std::_List_node"* }
%"class.adept::invalid_dimension" = type { %"class.adept::array_exception" }
%"class.__gnu_cxx::new_allocator.48" = type { i8 }
%"struct.adept::internal::UnaryOperation" = type { %"class.adept::Active"* }
%"struct.adept::Expression.62" = type { i8 }
%"struct.adept::internal::BinaryOpScalarLeft.65" = type <{ %"struct.adept::internal::Packet", %"class.adept::Active"*, [8 x i8] }>
%"struct.adept::Expression.66" = type { i8 }
%"struct.adept::internal::BinaryOperation.69" = type { %"class.adept::Active"*, %"class.adept::Active"* }
%"struct.adept::internal::BinaryOperation.71" = type { %"class.adept::Active"*, %"struct.adept::internal::BinaryOperation.69" }
%"struct.adept::Expression.70" = type { i8 }
%"struct.adept::Expression.72" = type { i8 }
%"struct.adept::internal::BinaryOperation.74" = type { %"class.adept::Active"*, %"struct.adept::internal::UnaryOperation.76" }
%"struct.adept::internal::UnaryOperation.76" = type { %"struct.adept::internal::BinaryOperation.78" }
%"struct.adept::internal::BinaryOperation.78" = type { %"class.adept::Active"*, %"class.adept::Active"* }
%"struct.adept::internal::BinaryOperation.80" = type { %"struct.adept::internal::UnaryOperation.82", %"class.adept::Active"* }
%"struct.adept::internal::UnaryOperation.82" = type { %"class.adept::Active"* }
%"struct.adept::Expression.79" = type { i8 }
%"struct.adept::Expression.77" = type { i8 }
%"struct.adept::Expression.75" = type { i8 }
%"struct.adept::Expression.83" = type { i8 }
%"struct.adept::Expression.81" = type { i8 }
%"struct.adept::internal::BinaryOperation.86" = type { %"struct.adept::internal::BinaryOperation.88", %"struct.adept::internal::BinaryOpScalarLeft.59"* }
%"struct.adept::internal::BinaryOperation.88" = type { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* }
%"struct.adept::internal::BinaryOpScalarRight" = type { %"class.adept::Active"*, %"struct.adept::internal::Packet" }
%"struct.adept::Expression.89" = type { i8 }
%"struct.adept::Expression.87" = type { i8 }
%"struct.adept::Expression.90" = type { i8 }
%"class.adept::internal::ScratchVector" = type { i8 }
%"class.adept::ExpressionSize.63" = type { i8 }
%"struct.adept::internal::Exp" = type { i8 }
%"class.adept::internal::ScratchVector.64" = type { [1 x double] }
%"struct.adept::internal::Subtract" = type { i8 }
%"struct.adept::internal::Scalar" = type { double }
%"struct.adept::Expression.68" = type { i8 }
%"struct.adept::internal::Multiply" = type { i8 }
%"struct.adept::internal::Add" = type { i8 }
%"class.adept::internal::ScratchVector.73" = type { [2 x double] }
%"struct.adept::internal::Log" = type { i8 }
%"struct.adept::internal::Scalar.84" = type { i32 }
%"struct.adept::Expression.85" = type { i8 }
%"class.adept::internal::ScratchVector.91" = type { [3 x double] }
%"class.adept::gradient_out_of_range" = type { %"class.adept::autodiff_exception" }

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_ = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ = comdat any

$_Z9ends_withRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_ = comdat any

$_ZNSt6vectorIdSaIdEE6resizeEm = comdat any

$_ZNSt6vectorIdSaIdEEixEm = comdat any

$_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv = comdat any

$_ZN8GMMInputC2Ev = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_ = comdat any

$_ZNSaIdEC2Ev = comdat any

$_ZNSt6vectorIdSaIdEEC2EmRKS0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIdED2Ev = comdat any

$_Z18calculate_jacobianIXadL_Z15gmm_objective_bEEEvR8GMMInputR9GMMOutput = comdat any

$_ZN9GMMOutputD2Ev = comdat any

$_ZN8GMMInputD2Ev = comdat any

$_Z18calculate_jacobianIXadL_Z20adept_dgmm_objectiveEEEvR8GMMInputR9GMMOutput = comdat any

$_ZNSt9bad_allocC2ERKS_ = comdat any

$__clang_call_terminate = comdat any

$_Z18calculate_jacobianIXadL_Z14dgmm_objectiveEEEvR8GMMInputR9GMMOutput = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZSt3logIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_ = comdat any

$_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZN5adept20stack_already_activeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZNK5adept5Stack25gradients_are_initializedEv = comdat any

$_ZN5adept25gradients_not_initializedC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE5emptyEv = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv = comdat any

$_ZStneRKSt14_List_iteratorIN5adept3GapEES4_ = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv = comdat any

$_ZNKSt14_List_iteratorIN5adept3GapEEptEv = comdat any

$_ZSteqRKSt14_List_iteratorIN5adept3GapEES4_ = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5eraseESt20_List_const_iteratorIS2_E = comdat any

$_ZNSt20_List_const_iteratorIN5adept3GapEEC2ERKSt14_List_iteratorIS1_E = comdat any

$_ZNSt14_List_iteratorIN5adept3GapEEppEi = comdat any

$_ZNKSt14_List_iteratorIN5adept3GapEEdeEv = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE6insertESt20_List_const_iteratorIS2_EOS2_ = comdat any

$_ZN5adept3GapC2Ei = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE9push_backEOS2_ = comdat any

$_ZNSt14_List_iteratorIN5adept3GapEEmmEi = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE4backEv = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE8pop_backEv = comdat any

$_ZN5adept3GapC2Eii = comdat any

$_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv = comdat any

$_ZStneRKSt20_List_const_iteratorIN5adept3GapEES4_ = comdat any

$_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE3endEv = comdat any

$_ZNKSt20_List_const_iteratorIN5adept3GapEEptEv = comdat any

$_ZNSt20_List_const_iteratorIN5adept3GapEEppEi = comdat any

$_ZNK5adept5Stack12n_statementsEv = comdat any

$_ZNK5adept5Stack22n_allocated_statementsEv = comdat any

$_ZNK5adept5Stack12n_operationsEv = comdat any

$_ZNK5adept5Stack22n_allocated_operationsEv = comdat any

$_ZNK5adept5Stack22n_gradients_registeredEv = comdat any

$_ZNK5adept5Stack13max_gradientsEv = comdat any

$_ZNK5adept5Stack10i_gradientEv = comdat any

$_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE4sizeEv = comdat any

$_ZNK5adept5Stack21n_allocated_gradientsEv = comdat any

$_ZNK5adept5Stack12n_dependentsEv = comdat any

$_ZNK5adept5Stack14n_independentsEv = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZNKSt6vectorIiSaIiEEixEm = comdat any

$_ZN5adept8internal9StatementC2Ev = comdat any

$_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZN5adept9exceptionD2Ev = comdat any

$_ZN5adept3invIfEENS_5ArrayILi2ET_Lb0EEERKS3_ = comdat any

$_ZN5adept3invIfLNS_8internal21SymmMatrixOrientationE0EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_ = comdat any

$_ZN5adept3invIfLNS_8internal21SymmMatrixOrientationE1EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_ = comdat any

$_ZN5adept3invIdEENS_5ArrayILi2ET_Lb0EEERKS3_ = comdat any

$_ZN5adept3invIdLNS_8internal21SymmMatrixOrientationE0EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_ = comdat any

$_ZN5adept3invIdLNS_8internal21SymmMatrixOrientationE1EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_ = comdat any

$_ZN5adept8internal6PacketIdEC2Ev = comdat any

$_ZN5adept8internal6PacketIdEC2EPKd = comdat any

$_ZN5adept8internal6PacketIdEC2Ed = comdat any

$_ZN5adept8internalmlERKNS0_6PacketIdEES4_ = comdat any

$_ZN5adept8internal6PacketIdEpLERKS2_ = comdat any

$_ZNK5adept8internal6PacketIdE3putEPd = comdat any

$_ZN5adept5BlockILi2EdEC2Ev = comdat any

$_ZN5adept5BlockILi2EdEixEi = comdat any

$_ZNK5adept5Stack13n_independentEv = comdat any

$_ZN5adept8internal13alloc_alignedIdEEPT_i = comdat any

$_ZNK5adept5Stack11n_dependentEv = comdat any

$_ZN5adept8internal12free_alignedIdEEvPT_ = comdat any

$_ZNKSt6vectorIiSaIiEE5emptyEv = comdat any

$_ZN5adept41dependents_or_independents_not_identifiedC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNSaIN5adept5BlockILi2EdEEEC2Ev = comdat any

$_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNKSt6vectorIN5adept5BlockILi2EdEESaIS2_EE4sizeEv = comdat any

$_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm = comdat any

$_ZN5adept5BlockILi2EdE4zeroEv = comdat any

$_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev = comdat any

$_ZN5adept5solveIfEENS_5ArrayILi1ET_Lb0EEERKNS1_ILi2ES2_Lb0EEERKS3_ = comdat any

$_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIfEENS_5ArrayILi2ET_Lb0EEERKS3_S5_ = comdat any

$_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIdEENS_5ArrayILi1ET_Lb0EEERKNS1_ILi2ES2_Lb0EEERKS3_ = comdat any

$_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIdEENS_5ArrayILi2ET_Lb0EEERKS3_S5_ = comdat any

$_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_ = comdat any

$_ZN5adept5ArrayILi1EdLb0EEC2Ei = comdat any

$_ZN5adept5ArrayILi1EdLb0EEclIiEENS_8internal9enable_ifIXaaaaeqLi1ELi1Esr15all_scalar_intsILi1ET_EE5valuentLb0EERdE4typeES5_ = comdat any

$_ZN5adept5ArrayILi1EdLb0EED2Ev = comdat any

$_ZN5adept5StackC2Eb = comdat any

$_ZN5adept6ActiveIdEC2Ev = comdat any

$_ZN5adept6ActiveIdED2Ev = comdat any

$_ZN5adept10set_valuesIdEEvPNS_6ActiveIT_EEiPKS2_ = comdat any

$_ZN5adept5Stack13new_recordingEv = comdat any

$_ZN9adeptTest13gmm_objectiveIN5adept6ActiveIdEEEEviiiPKT_S6_S6_PKd7WishartPS4_ = comdat any

$_ZNK5adept6ActiveIdE12set_gradientIdEEvRKT_ = comdat any

$_ZN5adept13get_gradientsIdEEvPKNS_6ActiveIT_EEiPS2_ = comdat any

$_ZSt5equalISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESC_EbT_SD_T0_ = comdat any

$_ZSt11__equal_auxISt16reverse_iteratorIPKcES3_EbT_S4_T0_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEDTcl23__make_reverse_iteratorcl12__niter_basecldtfp_4baseEEEESt16reverse_iteratorIT_E = comdat any

$_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ERKSB_ = comdat any

$_ZNSt7__equalILb0EE5equalISt16reverse_iteratorIPKcES5_EEbT_S6_T0_ = comdat any

$_ZNSt16reverse_iteratorIPKcEC2ERKS2_ = comdat any

$_ZStneIPKcEbRKSt16reverse_iteratorIT_ES6_ = comdat any

$_ZNKSt16reverse_iteratorIPKcEdeEv = comdat any

$_ZNSt16reverse_iteratorIPKcEppEv = comdat any

$_ZSteqIPKcEbRKSt16reverse_iteratorIT_ES6_ = comdat any

$_ZNKSt16reverse_iteratorIPKcE4baseEv = comdat any

$_ZSt23__make_reverse_iteratorIPKcESt16reverse_iteratorIT_ES3_ = comdat any

$_ZSt12__niter_baseIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE = comdat any

$_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE4baseEv = comdat any

$_ZNSt16reverse_iteratorIPKcEC2ES1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv = comdat any

$_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ESA_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev = comdat any

$_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev = comdat any

$_ZNSt6vectorIdSaIdEEC2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEEC2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev = comdat any

$_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIdEC2Ev = comdat any

$_ZNSt6vectorIdSaIdEED2Ev = comdat any

$_ZSt8_DestroyIPddEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIdSaIdEED2Ev = comdat any

$_ZSt8_DestroyIPdEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm = comdat any

$_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm = comdat any

$_ZNSt9exceptionC2ERKS_ = comdat any

$_ZN5adept15array_exceptionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZN5adept17invalid_operationD0Ev = comdat any

$_ZNK5adept9exception4whatEv = comdat any

$_ZN5adept9exceptionC2Ev = comdat any

$_ZN5adept15array_exceptionD0Ev = comdat any

$_ZNSt9exceptionC2Ev = comdat any

$_ZN5adept9exceptionD0Ev = comdat any

$_ZNSt14pointer_traitsIPcE10pointer_toERc = comdat any

$_ZSt9addressofIcEPT_RS0_ = comdat any

$_ZSt11__addressofIcEPT_RS0_ = comdat any

$_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_ = comdat any

$_ZNSt11char_traitsIcE6assignERcRKc = comdat any

$_ZN9__gnu_cxx13new_allocatorIcED2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE8_M_clearEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEED2Ev = comdat any

$_ZNSt10_List_nodeIN5adept3GapEE9_M_valptrEv = comdat any

$_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE7destroyIS2_EEvRS4_PT_ = comdat any

$_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE21_M_get_Node_allocatorEv = comdat any

$_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E = comdat any

$_ZN9__gnu_cxx16__aligned_membufIN5adept3GapEE6_M_ptrEv = comdat any

$_ZN9__gnu_cxx16__aligned_membufIN5adept3GapEE7_M_addrEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE7destroyIS3_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE10deallocateEPS4_m = comdat any

$_ZN5adept18autodiff_exceptionC2Ev = comdat any

$_ZN5adept20stack_already_activeD0Ev = comdat any

$_ZN5adept18autodiff_exceptionD0Ev = comdat any

$_ZN5adept25gradients_not_initializedD0Ev = comdat any

$_ZN5adept21feature_not_availableD0Ev = comdat any

$_ZN5adept8internal6PacketIdEC2EDv2_d = comdat any

$_ZN5adept41dependents_or_independents_not_identifiedD0Ev = comdat any

$_ZN5adept8internal16StackStorageOrigC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EEC2Ev = comdat any

$_ZN5adept8internal16StackStorageOrig10initializeEi = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EEC2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE10_List_implC2Ev = comdat any

$_ZNSaISt10_List_nodeIN5adept3GapEEEC2Ev = comdat any

$_ZNSt8__detail17_List_node_headerC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEEC2Ev = comdat any

$_ZNSt8__detail17_List_node_header7_M_initEv = comdat any

$_ZN5adept8internal16StackStorageOrig11clear_stackEv = comdat any

$_ZN5adept5Stack18clear_independentsEv = comdat any

$_ZN5adept5Stack16clear_dependentsEv = comdat any

$_ZN5adept5Stack15clear_gradientsEv = comdat any

$_ZN5adept8internal16StackStorageOrig8push_lhsERKi = comdat any

$_ZNSt6vectorIiSaIiEE5clearEv = comdat any

$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIcEC2Ev = comdat any

$_ZNSt14pointer_traitsIPKcE10pointer_toERS0_ = comdat any

$_ZSt9addressofIKcEPT_RS1_ = comdat any

$_ZSt11__addressofIKcEPT_RS1_ = comdat any

$_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm = comdat any

$_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm = comdat any

$_ZNSt11char_traitsIcE6lengthEPKc = comdat any

$_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_ = comdat any

$_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag = comdat any

$_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_ = comdat any

$_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_ = comdat any

$_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_ = comdat any

$_ZNSt11char_traitsIcE4copyEPcPKcm = comdat any

$_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag = comdat any

$_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_ = comdat any

$_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_ = comdat any

$_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_ = comdat any

$_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc = comdat any

$_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_ = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv = comdat any

$_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_ = comdat any

$_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_ = comdat any

$_ZSt3minImERKT_S2_S2_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_S_do_relocateEPS5_S8_S8_RS6_St17integral_constantIbLb1EE = comdat any

$_ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_ = comdat any

$_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_ = comdat any

$_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m = comdat any

$_ZNKSt6vectorIdSaIdEE4sizeEv = comdat any

$_ZNSt6vectorIdSaIdEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd = comdat any

$_ZNKSt6vectorIdSaIdEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm = comdat any

$_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_ = comdat any

$_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv = comdat any

$_ZSt25__uninitialized_default_nIPdmET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_ = comdat any

$_ZSt6fill_nIPdmdET_S1_T0_RKT1_ = comdat any

$_ZSt12__niter_wrapIPdET_RKS1_S1_ = comdat any

$_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPdET_S1_ = comdat any

$_ZNSt16allocator_traitsISaIdEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv = comdat any

$_ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE = comdat any

$_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_ = comdat any

$_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ = comdat any

$_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_ = comdat any

$_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIdSaIdEE21_M_default_initializeEm = comdat any

$_ZNSaIdEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm = comdat any

$_ZNSt6vectorIdSaIdEE4dataEv = comdat any

$_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_ = comdat any

$_ZStorSt13_Ios_OpenmodeS_ = comdat any

$_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev = comdat any

$_ZStorSt12_Ios_IostateS_ = comdat any

$_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignIPcvEERS4_T_S8_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISC_SB_EE7__valueES8_E6__typeEEE = comdat any

$_ZN9__gnu_cxxmiIPKcPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEDTmicldtfp_4baseEcldtfp0_4baseEERKNS_17__normal_iteratorIT_T1_EERKNSB_IT0_SD_EE = comdat any

$_ZN9__gnu_cxxmiIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSt14_List_iteratorIN5adept3GapEEC2EPNSt8__detail15_List_node_baseE = comdat any

$_ZNSt14_List_iteratorIN5adept3GapEEmmEv = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE8_M_eraseESt14_List_iteratorIS2_E = comdat any

$_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_dec_sizeEm = comdat any

$_ZNKSt20_List_const_iteratorIN5adept3GapEE13_M_const_castEv = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE7emplaceIJS2_EEESt14_List_iteratorIS2_ESt20_List_const_iteratorIS2_EDpOT_ = comdat any

$_ZSt4moveIRN5adept3GapEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE14_M_create_nodeIJS2_EEEPSt10_List_nodeIS2_EDpOT_ = comdat any

$_ZSt7forwardIN5adept3GapEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_inc_sizeEm = comdat any

$_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_get_nodeEv = comdat any

$_ZNSt15__allocated_ptrISaISt10_List_nodeIN5adept3GapEEEEC2ERS4_PS3_ = comdat any

$_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE9constructIS2_JS2_EEEvRS4_PT_DpOT0_ = comdat any

$_ZNSt15__allocated_ptrISaISt10_List_nodeIN5adept3GapEEEEaSEDn = comdat any

$_ZNSt15__allocated_ptrISaISt10_List_nodeIN5adept3GapEEEED2Ev = comdat any

$_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE8max_sizeEv = comdat any

$_ZSt11__addressofISaISt10_List_nodeIN5adept3GapEEEEPT_RS5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE9constructIS3_JS3_EEEvPT_DpOT0_ = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE9_M_insertIJS2_EEEvSt14_List_iteratorIS2_EDpOT_ = comdat any

$_ZNSt20_List_const_iteratorIN5adept3GapEEC2EPKNSt8__detail15_List_node_baseE = comdat any

$_ZNKSt10_List_nodeIN5adept3GapEE9_M_valptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIN5adept3GapEE6_M_ptrEv = comdat any

$_ZNK9__gnu_cxx16__aligned_membufIN5adept3GapEE7_M_addrEv = comdat any

$_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE13_M_node_countEv = comdat any

$_ZNKSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_get_sizeEv = comdat any

$_ZNSt9bad_allocC2Ev = comdat any

$_ZN9__gnu_cxxeqIPKiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESB_ = comdat any

$_ZNKSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNKSt6vectorIiSaIiEE3endEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEEC2Ev = comdat any

$_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_ = comdat any

$_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EED2Ev = comdat any

$_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE11_S_max_sizeERKS3_ = comdat any

$_ZNSaIN5adept5BlockILi2EdEEEC2ERKS2_ = comdat any

$_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8max_sizeERKS3_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE17_M_create_storageEm = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEED2Ev = comdat any

$_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEE8allocateEmPKv = comdat any

$_ZSt27__uninitialized_default_n_aIPN5adept5BlockILi2EdEEmS2_ET_S4_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPN5adept5BlockILi2EdEEmET_S4_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN5adept5BlockILi2EdEEmEET_S6_T0_ = comdat any

$_ZSt10_ConstructIN5adept5BlockILi2EdEEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN5adept5BlockILi2EdEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPN5adept5BlockILi2EdEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN5adept5BlockILi2EdEEEEvT_S6_ = comdat any

$_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPN5adept5BlockILi2EdEES2_EvT_S4_RSaIT0_E = comdat any

$_ZN5adept8internal13GradientIndexILb0EEC2Ei = comdat any

$_ZN5adept14ExpressionSizeILi1EEC2Ev = comdat any

$_ZN5adept5ArrayILi1EdLb0EE7resize_ILi1EEENS_8internal9enable_ifIXeqLi1ET_EvE4typeEiiiiiii = comdat any

$_ZN5adept5ArrayILi1EdLb0EE6resizeEPKib = comdat any

$_ZN5adept7StorageIdE11remove_linkEv = comdat any

$_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_ = comdat any

$_ZN5adept8internal18exception_locationB5cxx11EPKci = comdat any

$_ZN5adept17invalid_dimensionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZN5adept5ArrayILi1EdLb0EE5clearEv = comdat any

$_ZN5adept14ExpressionSizeILi1EE4copyEPKi = comdat any

$_ZN5adept5ArrayILi1EdLb0EE16pack_contiguous_Ev = comdat any

$_ZN5adept5ArrayILi1EdLb0EE5pack_Ev = comdat any

$_ZN5adept14ExpressionSizeILi1EEixEi = comdat any

$_ZNK5adept5ArrayILi1EdLb0EE4sizeEv = comdat any

$_ZN5adept7StorageIdEC2Eib = comdat any

$_ZN5adept7StorageIdE4dataEv = comdat any

$_ZN5adept8internal13GradientIndexILb0EE3setIdEEvPKT_PKNS_7StorageIS4_EE = comdat any

$_ZN5adept7StorageIdED2Ev = comdat any

$_ZN5adept17invalid_dimensionD0Ev = comdat any

$_ZN5adept14ExpressionSizeILi1EE7set_allEi = comdat any

$_ZN5adept8internal13GradientIndexILb0EE5clearEv = comdat any

$_ZN5adept5ArrayILi1EdLb0EE26pack_row_major_contiguous_Ev = comdat any

$_ZN5adept5ArrayILi1EdLb0EE18pack_column_major_Ev = comdat any

$_ZN5adept5ArrayILi1EdLb0EE15pack_row_major_Ev = comdat any

$_ZNK5adept14ExpressionSizeILi1EEixEi = comdat any

$_ZN5adept5Stack18register_gradientsERKi = comdat any

$_ZN5adept8internal18get_index_with_lenEii = comdat any

$_ZN5adept5Stack17register_gradientEv = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5frontEv = comdat any

$_ZNSt7__cxx114listIN5adept3GapESaIS2_EE9pop_frontEv = comdat any

$_ZN5adept5Stack19unregister_gradientERKi = comdat any

$_ZN5adept6ActiveIdE9set_valueIdEEvRKT_ = comdat any

$_ZNSaIN5adept6ActiveIdEEEC2Ev = comdat any

$_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_ = comdat any

$_ZN9adeptTest13preprocess_qsIN5adept6ActiveIdEEEEviiPKT_PS4_S7_ = comdat any

$_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm = comdat any

$_ZN5adept6ActiveIdEC2IdEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE = comdat any

$_ZN9adeptTest8subtractIdN5adept6ActiveIdEES3_EEviPKT_PKT0_PT1_ = comdat any

$_ZN9adeptTest7QtimesxIN5adept6ActiveIdEEEEviPKT_S6_S6_PS4_ = comdat any

$_ZN5adeptmiINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINSB_4typeENSC_4typeEE4typeESB_NS1_8SubtractESC_EEE4typeERKNS_10ExpressionISE_SB_EERKNSM_ISF_SC_EE = comdat any

$_ZN5adeptplINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_3AddES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE = comdat any

$_ZN5adeptmlIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8MultiplyES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE = comdat any

$_ZN9adeptTest6sqnormIN5adept6ActiveIdEEEET_iPKS4_ = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_3AddES1_EENS3_8SubtractENS3_18BinaryOpScalarLeftIddNS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE = comdat any

$_ZN9adeptTest9logsumexpIN5adept6ActiveIdEEEET_iPKS4_ = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE = comdat any

$_ZN5adeptmiINS_8internal18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEENS2_IdiNS1_8MultiplyES5_EEEENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS1_15BinaryOperationINS1_7promoteINSA_4typeENSB_4typeEE4typeESA_NS1_8SubtractESB_EEE4typeERKNS_10ExpressionISE_SA_EERKNSM_ISF_SB_EE = comdat any

$_ZN5adeptplIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_3AddES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE = comdat any

$_ZN5adeptmlIiNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8MultiplyES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS3_18BinaryOpScalarLeftIddNS3_3AddES1_EENS3_8SubtractENS5_IdiNS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE = comdat any

$_ZN9adeptTest17log_wishart_priorIN5adept6ActiveIdEEEET_ii7WishartPKS4_S7_S7_ = comdat any

$_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEEC2Ev = comdat any

$_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE17_S_check_init_lenEmRKS3_ = comdat any

$_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EED2Ev = comdat any

$_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE11_S_max_sizeERKS3_ = comdat any

$_ZNSaIN5adept6ActiveIdEEEC2ERKS2_ = comdat any

$_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE8max_sizeERKS3_ = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE17_M_create_storageEm = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev = comdat any

$_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE17_Vector_impl_dataC2Ev = comdat any

$_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEE8allocateEmPKv = comdat any

$_ZSt27__uninitialized_default_n_aIPN5adept6ActiveIdEEmS2_ET_S4_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPN5adept6ActiveIdEEmET_S4_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN5adept6ActiveIdEEmEET_S6_T0_ = comdat any

$_ZSt10_ConstructIN5adept6ActiveIdEEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN5adept6ActiveIdEEEPT_RS3_ = comdat any

$_ZSt8_DestroyIPN5adept6ActiveIdEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPN5adept6ActiveIdEEEEvT_S6_ = comdat any

$_ZSt8_DestroyIN5adept6ActiveIdEEEvPT_ = comdat any

$_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEE10deallocateEPS3_m = comdat any

$_ZN5adept6ActiveIdEaSIdEENS_8internal9enable_ifIXsr17is_not_expressionIT_EE5valueERS1_E4typeERKS5_ = comdat any

$_ZN5adept6ActiveIdEC2ERKS1_ = comdat any

$_ZN5adept3expIdNS_6ActiveIdEEEENS_8internal14UnaryOperationIT_NS3_3ExpET0_EERKNS_10ExpressionIS5_S7_EE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal14UnaryOperationIdNS3_3ExpES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE = comdat any

$_ZN5adept6ActiveIdEaSERKS1_ = comdat any

$_ZN5adept8internal16StackStorageOrig11check_spaceEi = comdat any

$_ZNK5adept10ExpressionIdNS_6ActiveIdEEE25scalar_value_and_gradientERNS_5StackE = comdat any

$_ZN5adept8internal13ScratchVectorILi0EdEC2Ev = comdat any

$_ZN5adept14ExpressionSizeILi0EEC2Ev = comdat any

$_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv = comdat any

$_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi0ELi0ELi0EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi0ELi0ELi0EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZN5adept8internal16StackStorageOrig8push_rhsERKdRKi = comdat any

$_ZN5adept8internal14UnaryOperationIdNS0_3ExpENS_6ActiveIdEEEC2ERKNS_10ExpressionIdS4_EE = comdat any

$_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv = comdat any

$_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3ExpENS_6ActiveIdEEEEE25scalar_value_and_gradientERNS_5StackE = comdat any

$_ZN5adept8internal13ScratchVectorILi1EdEC2Ev = comdat any

$_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3ExpENS_6ActiveIdEEEEE4castEv = comdat any

$_ZNK5adept8internal14UnaryOperationIdNS0_3ExpENS_6ActiveIdEEE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal14UnaryOperationIdNS0_3ExpENS_6ActiveIdEEE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3ExpIdE9operationIdEET_RKS4_ = comdat any

$_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZN5adept8internal13ScratchVectorILi1EdEixEi = comdat any

$_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi1EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_ = comdat any

$_ZNK5adept8internal3ExpIdE10derivativeERKdS4_ = comdat any

$_ZNK5adept6ActiveIdE13value_stored_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal13ScratchVectorILi1EdEixEi = comdat any

$_ZN5adeptmiIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8SubtractES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal18BinaryOpScalarLeftIddNS3_8SubtractES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE = comdat any

$_ZN5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEEC2EdRKNS_10ExpressionIdS4_EE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8SubtractENS_6ActiveIdEEEEE25scalar_value_and_gradientERNS_5StackE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8SubtractENS_6ActiveIdEEEEE4castEv = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept8internal8Subtract9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_ = comdat any

$_ZNK5adept8internal6PacketIdE5valueEv = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEE11calc_right_ILi0ELi0ELi0ELi1ES4_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal8Subtract10calc_rightILi0ELi0ELi0ELi1ENS0_6ScalarIdEENS_6ActiveIdEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZN5adept8internal6ScalarIdEC2ERKd = comdat any

$_ZN5adeptmlINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_8MultiplyES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE = comdat any

$_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE = comdat any

$_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_EC2ERKNS_10ExpressionIdS3_EES9_ = comdat any

$_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EEE25scalar_value_and_gradientERNS_5StackE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EEE4castEv = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept8internal8Multiply9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_ = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E10calc_left_ILi0ELi0ELi0ELi1ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E11calc_right_ILi0ELi0ELi0ELi1ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZN5adept8internal8Multiply9calc_leftILi0ELi0ELi0ELi1ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZN5adept8internal8Multiply10calc_rightILi0ELi0ELi0ELi1ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEEC2ERKNS_10ExpressionIdS3_EERKNS8_IdS6_EE = comdat any

$_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS2_IdS4_NS1_8MultiplyES4_EEEEE25scalar_value_and_gradientERNS_5StackE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS2_IdS4_NS1_8MultiplyES4_EEEEE4castEv = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE27my_value_at_location_store_ILi0ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept8internal3Add9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_ = comdat any

$_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE10calc_left_ILi0ELi0ELi0ELi1ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSA_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE11calc_right_ILi0ELi0ELi0ELi1ES6_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSA_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3Add9calc_leftILi0ELi0ELi0ELi1ENS_6ActiveIdEENS0_15BinaryOperationIdS4_NS0_8MultiplyES4_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3Add10calc_rightILi0ELi0ELi0ELi1ENS_6ActiveIdEENS0_15BinaryOperationIdS4_NS0_8MultiplyES4_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EEE4castEv = comdat any

$_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8MultiplyENS_6ActiveIdEEEEE4castEv = comdat any

$_ZN5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEC2ERKNS_10ExpressionIdS5_EERKNSB_IdS9_EE = comdat any

$_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_EC2ERKNS_10ExpressionIdS3_EES9_ = comdat any

$_ZN5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEEC2EdRKNS_10ExpressionIdS4_EE = comdat any

$_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddES4_EENS1_8SubtractENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEEE25scalar_value_and_gradientERNS_5StackE = comdat any

$_ZN5adept8internal13ScratchVectorILi2EdEC2Ev = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddES4_EENS1_8SubtractENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEEE4castEv = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZN5adept8internal13ScratchVectorILi2EdEixEi = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E27my_value_at_location_store_ILi0ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi2ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE10calc_left_ILi0ELi0ELi0ELi2ES5_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE11calc_right_ILi0ELi0ELi0ELi2ES9_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal8Subtract9calc_leftILi0ELi0ELi0ELi2ENS0_15BinaryOperationIdNS_6ActiveIdEENS0_3AddES5_EENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES5_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E14calc_gradient_ILi0ELi1ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E10calc_left_ILi0ELi1ELi0ELi2ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E11calc_right_ILi0ELi1ELi0ELi2ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3Add9calc_leftILi0ELi1ELi0ELi2ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3Add10calc_rightILi0ELi1ELi0ELi2ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal8Subtract10calc_rightILi0ELi0ELi0ELi2ENS0_15BinaryOperationIdNS_6ActiveIdEENS0_3AddES5_EENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES5_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE14calc_gradient_ILi0ELi1ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET3_ = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE11calc_right_ILi0ELi1ELi0ELi2ES4_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_ = comdat any

$_ZN5adept8internal8Multiply10calc_rightILi0ELi1ELi0ELi2ENS0_6ScalarIdEENS_6ActiveIdEEdEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_ = comdat any

$_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi2ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_ = comdat any

$_ZNK5adept8internal6ScalarIdE13value_stored_ILi0ELi2ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZN9adeptTest7arr_maxIN5adept6ActiveIdEEEET_iPKS4_ = comdat any

$_ZN5adeptplINS_6ActiveIdEENS_8internal14UnaryOperationIdNS3_3ExpENS3_15BinaryOperationIdS2_NS3_8SubtractES2_EEEEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS6_INS3_7promoteINSB_4typeENSC_4typeEE4typeESB_NS3_3AddESC_EEE4typeERKNS_10ExpressionISE_SB_EERKNSM_ISF_SC_EE = comdat any

$_ZN5adept3expIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8SubtractES4_EEEENS1_14UnaryOperationIT_NS1_3ExpET0_EERKNS_10ExpressionIS8_SA_EE = comdat any

$_ZN5adeptmiINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_8SubtractES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpENS4_IdS1_NS3_8SubtractES1_EEEEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE = comdat any

$_ZN5adeptplINS_8internal14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEES5_EENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS1_15BinaryOperationINS1_7promoteINS8_4typeENS9_4typeEE4typeES8_NS1_3AddES9_EEE4typeERKNS_10ExpressionISC_S8_EERKNSK_ISD_S9_EE = comdat any

$_ZN5adept3logIdNS_6ActiveIdEEEENS_8internal14UnaryOperationIT_NS3_3LogET0_EERKNS_10ExpressionIS5_S7_EE = comdat any

$_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdNS3_14UnaryOperationIdNS3_3LogES1_EENS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSC_4rankLi0EsrSC_9is_activeEvE4typeE = comdat any

$_ZN5adeptltINS_6ActiveIdEES2_EENS_8internal9enable_ifIXaaeqsrT_4rankLi0EeqsrT0_4rankLi0EEbE4typeERKNS_10ExpressionINS5_4typeES5_EERKNS9_INS6_4typeES6_EE = comdat any

$_ZNK5adept10ExpressionIdNS_6ActiveIdEEE12scalar_valueEv = comdat any

$_ZNK5adept6ActiveIdE18value_at_location_ILi0ELi0EEEdRKNS_14ExpressionSizeIXT0_EEE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3ExpENS1_15BinaryOperationIdNS_6ActiveIdEENS1_8SubtractES6_EEEEE4castEv = comdat any

$_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEEC2ERKNS_10ExpressionIdS3_EERKNSB_IdS9_EE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8SubtractES4_EEE4castEv = comdat any

$_ZN5adept8internal14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES5_EEEC2ERKNS_10ExpressionIdS7_EE = comdat any

$_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_EC2ERKNS_10ExpressionIdS3_EES9_ = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_14UnaryOperationIdNS1_3ExpENS2_IdS4_NS1_8SubtractES4_EEEEEEE25scalar_value_and_gradientERNS_5StackE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_14UnaryOperationIdNS1_3ExpENS2_IdS4_NS1_8SubtractES4_EEEEEEE4castEv = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE27my_value_at_location_store_ILi0ELi0ELi0ELi0ELi2EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES5_EEE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E27my_value_at_location_store_ILi1ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE10calc_left_ILi0ELi0ELi0ELi2ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE11calc_right_ILi0ELi0ELi0ELi2ES9_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3Add9calc_leftILi0ELi0ELi0ELi2ENS_6ActiveIdEENS0_14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdS4_NS0_8SubtractES4_EEEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3Add10calc_rightILi0ELi0ELi0ELi2ENS_6ActiveIdEENS0_14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdS4_NS0_8SubtractES4_EEEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES5_EEE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E14calc_gradient_ILi0ELi1ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET3_ = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E13value_stored_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal13ScratchVectorILi2EdEixEi = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E10calc_left_ILi0ELi1ELi0ELi2ES3_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_ = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E11calc_right_ILi0ELi1ELi0ELi2ES3_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_ = comdat any

$_ZNK5adept8internal8Subtract9calc_leftILi0ELi1ELi0ELi2ENS_6ActiveIdEES4_dEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_ = comdat any

$_ZNK5adept8internal8Subtract10calc_rightILi0ELi1ELi0ELi2ENS_6ActiveIdEES4_dEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_ = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E16my_value_stored_ILi1ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXgtT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERKNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEEE4castEv = comdat any

$_ZN5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_EC2ERKNS_10ExpressionIdS6_EERKNS9_IdS5_EE = comdat any

$_ZN5adept8internal14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEC2ERKNS_10ExpressionIdS4_EE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEENS1_3AddES6_EEE25scalar_value_and_gradientERNS_5StackE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEENS1_3AddES6_EEE4castEv = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E27my_value_at_location_store_ILi0ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept8internal14UnaryOperationIdNS0_3LogENS_6ActiveIdEEE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3LogIdE9operationIdEET_RKS4_ = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E10calc_left_ILi0ELi0ELi0ELi1ES6_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSB_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E11calc_right_ILi0ELi0ELi0ELi1ES5_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSB_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3Add9calc_leftILi0ELi0ELi0ELi1ENS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEES6_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal14UnaryOperationIdNS0_3LogENS_6ActiveIdEEE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3LogIdE10derivativeERKdS4_ = comdat any

$_ZNK5adept8internal3Add10calc_rightILi0ELi0ELi0ELi1ENS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEES6_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EEE25scalar_value_and_gradientERNS_5StackE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E24value_at_location_store_ILi0ELi0ELi0ELi0EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E14calc_gradient_ILi0ELi0ELi0ELi0EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E27my_value_at_location_store_ILi0ELi0ELi0ELi0ELi0EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E10calc_left_ILi0ELi0ELi0ELi0ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E11calc_right_ILi0ELi0ELi0ELi0ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3Add9calc_leftILi0ELi0ELi0ELi0ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3Add10calc_rightILi0ELi0ELi0ELi0ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEEE4castEv = comdat any

$_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIdiNS1_8MultiplyENS_6ActiveIdEEEEE4castEv = comdat any

$_ZN5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEEC2ERKNS_10ExpressionIdS6_EERKNSB_IdS9_EE = comdat any

$_ZN5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEC2EdRKNS_10ExpressionIdS4_EE = comdat any

$_ZN5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEEC2EiRKNS_10ExpressionIdS4_EE = comdat any

$_ZN5adept8internal6PacketIiEC2Ei = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEENS1_8SubtractENS3_IdiNS1_8MultiplyES6_EEEEE25scalar_value_and_gradientERNS_5StackE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEENS1_8SubtractENS3_IdiNS1_8MultiplyES6_EEEEE4castEv = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEE27my_value_at_location_store_ILi0ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept8internal8Multiply9operationIidEENS0_7promoteIT_T0_E4typeERKS4_RKS5_ = comdat any

$_ZNK5adept8internal6PacketIiE5valueEv = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE10calc_left_ILi0ELi0ELi0ELi2ES6_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE11calc_right_ILi0ELi0ELi0ELi2ES9_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal8Subtract9calc_leftILi0ELi0ELi0ELi2ENS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS3_IdiNS0_8MultiplyES6_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEE14calc_gradient_ILi0ELi1ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEE11calc_right_ILi0ELi1ELi0ELi2ES4_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3Add10calc_rightILi0ELi1ELi0ELi2ENS0_6ScalarIdEENS_6ActiveIdEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal8Subtract10calc_rightILi0ELi0ELi0ELi2ENS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS3_IdiNS0_8MultiplyES6_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE14calc_gradient_ILi0ELi1ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET3_ = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE11calc_right_ILi0ELi1ELi0ELi2ES4_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_ = comdat any

$_ZN5adept8internal8Multiply10calc_rightILi0ELi1ELi0ELi2ENS0_6ScalarIiEENS_6ActiveIdEEdEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_ = comdat any

$_ZN5adept8internal6ScalarIiEC2ERKi = comdat any

$_ZNK5adept8internal6ScalarIiE13value_stored_ILi0ELi2ELi0ELi2EEEiRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZN5adept6ActiveIdEC2IiEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE = comdat any

$_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE = comdat any

$_ZN5adeptmiINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS6_IdiS7_S4_EEEENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINSC_4typeENSD_4typeEE4typeESC_NS1_8SubtractESD_EEE4typeERKNS_10ExpressionISF_SC_EERKNSN_ISG_SD_EE = comdat any

$_ZN5adeptplINS_6ActiveIdEENS_8internal18BinaryOpScalarLeftIddNS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISC_S8_EERKNSK_ISD_S9_EE = comdat any

$_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_3AddENS3_18BinaryOpScalarLeftIddNS3_8MultiplyES1_EEEENS3_8SubtractENS6_IdiS7_S1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSE_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SE_EE = comdat any

$_ZN5adeptmiINS_6ActiveIdEEdEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT0_EE5valueENS3_19BinaryOpScalarRightINS3_7promoteINT_4typeES5_E4typeES8_NS3_8SubtractES5_EEE4typeERKNS_10ExpressionIS9_S8_EERKS5_ = comdat any

$_ZN5adept6ActiveIdEC2IdNS_8internal19BinaryOpScalarRightIdS1_NS3_8SubtractEdEEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEEE4castEv = comdat any

$_ZN5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEEC2ERKNS_10ExpressionIdS8_EERKNSC_IdSA_EE = comdat any

$_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEC2ERKNS_10ExpressionIdS3_EERKNS9_IdS7_EE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS1_8SubtractENS6_IdiS7_S4_EEEEE25scalar_value_and_gradientERNS_5StackE = comdat any

$_ZN5adept8internal13ScratchVectorILi3EdEC2Ev = comdat any

$_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS1_8SubtractENS6_IdiS7_S4_EEEEE4castEv = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE24value_at_location_store_ILi0ELi0ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE14calc_gradient_ILi0ELi0ELi0ELi3EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi3EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE24value_at_location_store_ILi0ELi1ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE24value_at_location_store_ILi0ELi2ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZN5adept8internal13ScratchVectorILi3EdEixEi = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE27my_value_at_location_store_ILi0ELi0ELi1ELi0ELi3EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE24value_at_location_store_ILi0ELi1ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi1ELi0ELi3EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi2ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi2ELi0ELi3EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi3ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE10calc_left_ILi0ELi0ELi0ELi3ES8_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSE_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE11calc_right_ILi0ELi0ELi0ELi3ESA_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSE_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal8Subtract9calc_leftILi0ELi0ELi0ELi3ENS0_15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES5_EEEENS7_IdiS8_S5_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE14calc_gradient_ILi0ELi1ELi0ELi3EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE10calc_left_ILi0ELi1ELi0ELi3ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSB_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE11calc_right_ILi0ELi1ELi0ELi3ES7_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSB_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3Add9calc_leftILi0ELi1ELi0ELi3ENS_6ActiveIdEENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES4_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi3EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal3Add10calc_rightILi0ELi1ELi0ELi3ENS_6ActiveIdEENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES4_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE14calc_gradient_ILi0ELi1ELi0ELi3EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE11calc_right_ILi0ELi1ELi0ELi3ES4_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZN5adept8internal8Multiply10calc_rightILi0ELi1ELi0ELi3ENS0_6ScalarIdEENS_6ActiveIdEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi2ELi0ELi3EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_ = comdat any

$_ZNK5adept8internal6ScalarIdE13value_stored_ILi0ELi2ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal8Subtract10calc_rightILi0ELi0ELi0ELi3ENS0_15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES5_EEEENS7_IdiS8_S5_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE14calc_gradient_ILi0ELi2ELi0ELi3EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET3_ = comdat any

$_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE11calc_right_ILi0ELi2ELi0ELi3ES4_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_ = comdat any

$_ZN5adept8internal8Multiply10calc_rightILi0ELi2ELi0ELi3ENS0_6ScalarIiEENS_6ActiveIdEEdEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_ = comdat any

$_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi3ELi0ELi3EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_ = comdat any

$_ZNK5adept8internal6ScalarIiE13value_stored_ILi0ELi3ELi0ELi3EEEiRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZN5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdEC2ERKNS_10ExpressionIdS3_EEd = comdat any

$_ZNK5adept10ExpressionIdNS_8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS1_8SubtractEdEEE25scalar_value_and_gradientERNS_5StackE = comdat any

$_ZNK5adept10ExpressionIdNS_8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS1_8SubtractEdEEE4castEv = comdat any

$_ZNK5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXgtT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE = comdat any

$_ZNK5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdE10calc_left_ILi0ELi0ELi0ELi1ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZNK5adept8internal8Subtract9calc_leftILi0ELi0ELi0ELi1ENS_6ActiveIdEENS0_6ScalarIdEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE = comdat any

$_ZSt8_DestroyIPN5adept6ActiveIdEES2_EvT_S4_RSaIT0_E = comdat any

$_ZN5adept5Stack13set_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPKS4_ = comdat any

$_ZN5adept21gradient_out_of_rangeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE = comdat any

$_ZN5adept21gradient_out_of_rangeD0Ev = comdat any

$_ZNK5adept6ActiveIdE12get_gradientIdEEvRT_ = comdat any

$_ZNK5adept5Stack13get_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPS4_ = comdat any

$_ZTWN5adept21_stack_current_threadE = comdat any

$_ZTSN5adept17invalid_operationE = comdat any

$_ZTSN5adept15array_exceptionE = comdat any

$_ZTSN5adept9exceptionE = comdat any

$_ZTIN5adept9exceptionE = comdat any

$_ZTIN5adept15array_exceptionE = comdat any

$_ZTIN5adept17invalid_operationE = comdat any

$_ZTSN5adept20stack_already_activeE = comdat any

$_ZTSN5adept18autodiff_exceptionE = comdat any

$_ZTIN5adept18autodiff_exceptionE = comdat any

$_ZTIN5adept20stack_already_activeE = comdat any

$_ZTSN5adept25gradients_not_initializedE = comdat any

$_ZTIN5adept25gradients_not_initializedE = comdat any

$_ZTSN5adept21feature_not_availableE = comdat any

$_ZTIN5adept21feature_not_availableE = comdat any

$_ZTSN5adept41dependents_or_independents_not_identifiedE = comdat any

$_ZTIN5adept41dependents_or_independents_not_identifiedE = comdat any

$_ZTVN5adept17invalid_operationE = comdat any

$_ZTVN5adept15array_exceptionE = comdat any

$_ZTVN5adept9exceptionE = comdat any

$_ZTVN5adept20stack_already_activeE = comdat any

$_ZTVN5adept18autodiff_exceptionE = comdat any

$_ZTVN5adept25gradients_not_initializedE = comdat any

$_ZTVN5adept21feature_not_availableE = comdat any

$_ZTVN5adept41dependents_or_independents_not_identifiedE = comdat any

$_ZTSN5adept17invalid_dimensionE = comdat any

$_ZTIN5adept17invalid_dimensionE = comdat any

$_ZTVN5adept17invalid_dimensionE = comdat any

$_ZTSN5adept21gradient_out_of_rangeE = comdat any

$_ZTIN5adept21gradient_out_of_rangeE = comdat any

$_ZTVN5adept21gradient_out_of_rangeE = comdat any

@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c".txt\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"/\\\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"./\00", align 1
@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@.str.7 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"could not open file: %s\0A\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"%i %i %i\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"%lf %i\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"starting main\0A\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"-rep\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"data/1k\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"1k/\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"data/2.5k\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"2.5k/\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"data/10k\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"10k/\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"10k/gmm_d128_K200.txt\00", align 1
@.str.21 = private unnamed_addr constant [22 x i8] c"10k/gmm_d128_K100.txt\00", align 1
@.str.22 = private unnamed_addr constant [21 x i8] c"10k/gmm_d64_K200.txt\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"10k/gmm_d128_K50.txt\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"10k/gmm_d64_K100.txt\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"starting path %s\0A\00", align 1
@.str.26 = private unnamed_addr constant [6 x i8] c"data/\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"Tapenade combined %0.6f\0A\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"%f \00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZTISt9bad_alloc = external dso_local constant i8*
@.str.30 = private unnamed_addr constant [22 x i8] c"Adept combined %0.6f\0A\00", align 1
@.str.31 = private unnamed_addr constant [30 x i8] c"Adept combined 88888888 ooms\0A\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"Enzyme combined %0.6f\0A\00", align 1
@enzyme_const = external dso_local global i32, align 4
@enzyme_dup = external dso_local global i32, align 4
@enzyme_dupnoneed = external dso_local global i32, align 4
@_ZN5adept8internal21array_row_major_orderE = dso_local global i8 1, align 1
@_ZN5adept8internal17array_print_styleE = dso_local global i32 2, align 4
@_ZN5adept8internal16vector_separatorB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.34 = private unnamed_addr constant [3 x i8] c", \00", align 1
@_ZN5adept8internal19vector_print_beforeB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.36 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@_ZN5adept8internal18vector_print_afterB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.38 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZN5adept8internal21array_opening_bracketB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZN5adept8internal21array_closing_bracketB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZN5adept8internal26array_contiguous_separatorB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.43 = private unnamed_addr constant [3 x i8] c",\0A\00", align 1
@_ZN5adept8internal18array_print_beforeB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.45 = private unnamed_addr constant [3 x i8] c"\0A{\00", align 1
@_ZN5adept8internal17array_print_afterB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@_ZN5adept8internal24array_print_empty_beforeB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.48 = private unnamed_addr constant [13 x i8] c"(empty rank-\00", align 1
@_ZN5adept8internal23array_print_empty_afterB5cxx11E = dso_local global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str.50 = private unnamed_addr constant [8 x i8] c" array)\00", align 1
@_ZN5adept8internal18array_print_indentE = dso_local global i8 1, align 1
@_ZN5adept8internal22array_print_empty_rankE = dso_local global i8 1, align 1
@.str.51 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.52 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"empty\00", align 1
@.str.54 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@.str.57 = private unnamed_addr constant [33 x i8] c"Array print style not understood\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN5adept17invalid_operationE = linkonce_odr dso_local constant [28 x i8] c"N5adept17invalid_operationE\00", comdat, align 1
@_ZTSN5adept15array_exceptionE = linkonce_odr dso_local constant [26 x i8] c"N5adept15array_exceptionE\00", comdat, align 1
@_ZTSN5adept9exceptionE = linkonce_odr dso_local constant [19 x i8] c"N5adept9exceptionE\00", comdat, align 1
@_ZTISt9exception = external dso_local constant i8*
@_ZTIN5adept9exceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @_ZTSN5adept9exceptionE, i32 0, i32 0), i8* bitcast (i8** @_ZTISt9exception to i8*) }, comdat, align 8
@_ZTIN5adept15array_exceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN5adept15array_exceptionE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept9exceptionE to i8*) }, comdat, align 8
@_ZTIN5adept17invalid_operationE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN5adept17invalid_operationE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept15array_exceptionE to i8*) }, comdat, align 8
@_ZN5adept21_stack_current_threadE = dso_local thread_local global %"class.adept::Stack"* null, align 8
@_ZN5adept28_stack_current_thread_unsafeE = dso_local global %"class.adept::Stack"* null, align 8
@.str.58 = private unnamed_addr constant [78 x i8] c"Attempt to activate an adept::Stack when one is already active in this thread\00", align 1
@_ZTSN5adept20stack_already_activeE = linkonce_odr dso_local constant [31 x i8] c"N5adept20stack_already_activeE\00", comdat, align 1
@_ZTSN5adept18autodiff_exceptionE = linkonce_odr dso_local constant [29 x i8] c"N5adept18autodiff_exceptionE\00", comdat, align 1
@_ZTIN5adept18autodiff_exceptionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZTSN5adept18autodiff_exceptionE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept9exceptionE to i8*) }, comdat, align 8
@_ZTIN5adept20stack_already_activeE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @_ZTSN5adept20stack_already_activeE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*) }, comdat, align 8
@.str.59 = private unnamed_addr constant [107 x i8] c"Gradients not initialized: at least one call to set_gradient(s) is needed before a forward or reverse pass\00", align 1
@_ZTSN5adept25gradients_not_initializedE = linkonce_odr dso_local constant [36 x i8] c"N5adept25gradients_not_initializedE\00", comdat, align 1
@_ZTIN5adept25gradients_not_initializedE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @_ZTSN5adept25gradients_not_initializedE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*) }, comdat, align 8
@.str.60 = private unnamed_addr constant [5 x i8] c": d[\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"] = \00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"0\0A\00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c" + \00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"*d[\00", align 1
@.str.65 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.66 = private unnamed_addr constant [26 x i8] c"No gradients initialized\0A\00", align 1
@.str.67 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.68 = private unnamed_addr constant [42 x i8] c"Automatic Differentiation Stack (address \00", align 1
@.str.69 = private unnamed_addr constant [4 x i8] c"):\0A\00", align 1
@.str.70 = private unnamed_addr constant [37 x i8] c"   Currently attached - thread safe\0A\00", align 1
@.str.71 = private unnamed_addr constant [39 x i8] c"   Currently attached - thread unsafe\0A\00", align 1
@.str.72 = private unnamed_addr constant [23 x i8] c"   Currently detached\0A\00", align 1
@.str.73 = private unnamed_addr constant [22 x i8] c"   Recording status:\0A\00", align 1
@.str.74 = private unnamed_addr constant [23 x i8] c"      Recording is ON\0A\00", align 1
@.str.75 = private unnamed_addr constant [27 x i8] c"      Recording is PAUSED\0A\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"      \00", align 1
@.str.77 = private unnamed_addr constant [14 x i8] c" statements (\00", align 1
@.str.78 = private unnamed_addr constant [12 x i8] c" allocated)\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c" and \00", align 1
@.str.80 = private unnamed_addr constant [14 x i8] c" operations (\00", align 1
@.str.81 = private unnamed_addr constant [13 x i8] c" allocated)\0A\00", align 1
@.str.82 = private unnamed_addr constant [33 x i8] c" gradients currently registered \00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"and a total of \00", align 1
@.str.84 = private unnamed_addr constant [24 x i8] c" needed (current index \00", align 1
@.str.85 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.86 = private unnamed_addr constant [33 x i8] c"      Gradient list has no gaps\0A\00", align 1
@.str.87 = private unnamed_addr constant [25 x i8] c"      Gradient list has \00", align 1
@.str.88 = private unnamed_addr constant [8 x i8] c" gaps (\00", align 1
@.str.89 = private unnamed_addr constant [24 x i8] c"   Computation status:\0A\00", align 1
@.str.90 = private unnamed_addr constant [22 x i8] c" gradients assigned (\00", align 1
@.str.91 = private unnamed_addr constant [29 x i8] c"      0 gradients assigned (\00", align 1
@.str.92 = private unnamed_addr constant [22 x i8] c"      Jacobian size: \00", align 1
@.str.93 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.94 = private unnamed_addr constant [27 x i8] c"      Independent indices:\00", align 1
@.str.95 = private unnamed_addr constant [28 x i8] c"\0A      Dependent indices:  \00", align 1
@.str.96 = private unnamed_addr constant [51 x i8] c"      Parallel Jacobian calculation not available\0A\00", align 1
@_ZN5adept8internal26n_storage_objects_created_E = dso_local global i32 0, align 4
@_ZN5adept8internal26n_storage_objects_deleted_E = dso_local global i32 0, align 4
@.str.97 = private unnamed_addr constant [74 x i8] c"Cannot perform matrix-matrix multiplication because compiled without BLAS\00", align 1
@_ZTSN5adept21feature_not_availableE = linkonce_odr dso_local constant [32 x i8] c"N5adept21feature_not_availableE\00", comdat, align 1
@_ZTIN5adept21feature_not_availableE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZTSN5adept21feature_not_availableE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept9exceptionE to i8*) }, comdat, align 8
@.str.98 = private unnamed_addr constant [74 x i8] c"Cannot perform matrix-vector multiplication because compiled without BLAS\00", align 1
@.str.99 = private unnamed_addr constant [84 x i8] c"Cannot perform symmetric matrix-matrix multiplication because compiled without BLAS\00", align 1
@.str.100 = private unnamed_addr constant [84 x i8] c"Cannot perform symmetric matrix-vector multiplication because compiled without BLAS\00", align 1
@.str.101 = private unnamed_addr constant [79 x i8] c"Cannot perform band matrix-vector multiplication because compiled without BLAS\00", align 1
@_ZN5adept3endE = dso_local global %"struct.adept::internal::EndIndex" zeroinitializer, align 1
@_ZN5adept2__E = dso_local global %"class.adept::internal::AllIndex" zeroinitializer, align 1
@.str.102 = private unnamed_addr constant [53 x i8] c"Cannot invert matrix because compiled without LAPACK\00", align 1
@.str.103 = private unnamed_addr constant [80 x i8] c"Dependent or independent variables not identified before a Jacobian computation\00", align 1
@_ZTSN5adept41dependents_or_independents_not_identifiedE = linkonce_odr dso_local constant [52 x i8] c"N5adept41dependents_or_independents_not_identifiedE\00", comdat, align 1
@_ZTIN5adept41dependents_or_independents_not_identifiedE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @_ZTSN5adept41dependents_or_independents_not_identifiedE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*) }, comdat, align 8
@.str.104 = private unnamed_addr constant [6 x i8] c"2.0.6\00", align 1
@.str.105 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.106 = private unnamed_addr constant [9 x i8] c" [4.2.1]\00", align 1
@.str.107 = private unnamed_addr constant [15 x i8] c"Adept version \00", align 1
@.str.108 = private unnamed_addr constant [3 x i8] c":\0A\00", align 1
@.str.109 = private unnamed_addr constant [17 x i8] c"  Compiled with \00", align 1
@.str.110 = private unnamed_addr constant [19 x i8] c"  Compiler flags \22\00", align 1
@.str.111 = private unnamed_addr constant [3 x i8] c"\22\0A\00", align 1
@.str.112 = private unnamed_addr constant [41 x i8] c"  Jacobians processed in blocks of size \00", align 1
@.str.113 = private unnamed_addr constant [62 x i8] c"Cannot solve linear equations because compiled without LAPACK\00", align 1
@.str.114 = private unnamed_addr constant [47 x i8] c"linspace(x1,x2,n) with n=1 only valid if x1=x2\00", align 1
@_ZTVSt9bad_alloc = available_externally dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast (i8** @_ZTISt9bad_alloc to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD1Ev to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD0Ev to i8*), i8* bitcast (i8* (%"class.std::bad_alloc"*)* @_ZNKSt9bad_alloc4whatEv to i8*)] }, align 8
@_ZTVSt9exception = available_externally dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast (i8** @_ZTISt9exception to i8*), i8* bitcast (void (%"class.std::exception"*)* @_ZNSt9exceptionD1Ev to i8*), i8* bitcast (void (%"class.std::exception"*)* @_ZNSt9exceptionD0Ev to i8*), i8* bitcast (i8* (%"class.std::exception"*)* @_ZNKSt9exception4whatEv to i8*)] }, align 8
@.str.115 = private unnamed_addr constant [28 x i8] c"A misuse of arrays occurred\00", align 1
@_ZTVN5adept17invalid_operationE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_operationE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::invalid_operation"*)* @_ZN5adept17invalid_operationD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept15array_exceptionE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept15array_exceptionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::array_exception"*)* @_ZN5adept15array_exceptionD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept9exceptionE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept9exceptionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept20stack_already_activeE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept20stack_already_activeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::stack_already_active"*)* @_ZN5adept20stack_already_activeD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept18autodiff_exceptionE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::autodiff_exception"*)* @_ZN5adept18autodiff_exceptionD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept25gradients_not_initializedE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept25gradients_not_initializedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::gradients_not_initialized"*)* @_ZN5adept25gradients_not_initializedD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept21feature_not_availableE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::feature_not_available"*)* @_ZN5adept21feature_not_availableD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@_ZTVN5adept41dependents_or_independents_not_identifiedE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept41dependents_or_independents_not_identifiedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::dependents_or_independents_not_identified"*)* @_ZN5adept41dependents_or_independents_not_identifiedD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@.str.116 = private unnamed_addr constant [21 x i8] c"basic_string::append\00", align 1
@.str.117 = private unnamed_addr constant [42 x i8] c"basic_string::_M_construct null not valid\00", align 1
@.str.118 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@.str.119 = private unnamed_addr constant [21 x i8] c"basic_string::substr\00", align 1
@.str.120 = private unnamed_addr constant [55 x i8] c"%s: __pos (which is %zu) > this->size() (which is %zu)\00", align 1
@.str.121 = private unnamed_addr constant [27 x i8] c"basic_string::basic_string\00", align 1
@.str.122 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.123 = private unnamed_addr constant [49 x i8] c"cannot create std::vector larger than max_size()\00", align 1
@_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE = external dso_local unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVSt9basic_iosIcSt11char_traitsIcEE = external dso_local unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE = external dso_local unnamed_addr constant { [16 x i8*] }, align 8
@_ZTVSt15basic_streambufIcSt11char_traitsIcEE = external dso_local unnamed_addr constant { [16 x i8*] }, align 8
@.str.124 = private unnamed_addr constant [22 x i8] c"basic_string::replace\00", align 1
@.str.125 = private unnamed_addr constant [35 x i8] c"Negative array dimension requested\00", align 1
@.str.126 = private unnamed_addr constant [89 x i8] c"/localhome/mha157/Enzyme/enzyme/build/benchmarks/adept2/src/adept2/include/adept/Array.h\00", align 1
@_ZTSN5adept17invalid_dimensionE = linkonce_odr dso_local constant [28 x i8] c"N5adept17invalid_dimensionE\00", comdat, align 1
@_ZTIN5adept17invalid_dimensionE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @_ZTSN5adept17invalid_dimensionE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept15array_exceptionE to i8*) }, comdat, align 8
@.str.127 = private unnamed_addr constant [58 x i8] c"Attempt to remove more links to a storage object than set\00", align 1
@.str.128 = private unnamed_addr constant [91 x i8] c"/localhome/mha157/Enzyme/enzyme/build/benchmarks/adept2/src/adept2/include/adept/Storage.h\00", align 1
@.str.129 = private unnamed_addr constant [6 x i8] c" (in \00", align 1
@.str.130 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZTVN5adept17invalid_dimensionE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_dimensionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::invalid_dimension"*)* @_ZN5adept17invalid_dimensionD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@.str.131 = private unnamed_addr constant [99 x i8] c"Gradient index out of range: probably aReal objects have been created after a set_gradient(s) call\00", align 1
@_ZTSN5adept21gradient_out_of_rangeE = linkonce_odr dso_local constant [32 x i8] c"N5adept21gradient_out_of_rangeE\00", comdat, align 1
@_ZTIN5adept21gradient_out_of_rangeE = linkonce_odr dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZTSN5adept21gradient_out_of_rangeE, i32 0, i32 0), i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept18autodiff_exceptionE to i8*) }, comdat, align 8
@_ZTVN5adept21gradient_out_of_rangeE = linkonce_odr dso_local unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21gradient_out_of_rangeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*), i8* bitcast (void (%"class.adept::gradient_out_of_range"*)* @_ZN5adept21gradient_out_of_rangeD0Ev to i8*), i8* bitcast (i8* (%"class.adept::exception"*)* @_ZNK5adept9exception4whatEv to i8*)] }, comdat, align 8
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_gmm.cpp, i8* null }]

@_ZN5adept5StackD1Ev = dso_local unnamed_addr alias void (%"class.adept::Stack"*), void (%"class.adept::Stack"*)* @_ZN5adept5StackD2Ev
@_ZN5adept8internal16StackStorageOrigD1Ev = dso_local unnamed_addr alias void (%"class.adept::internal::StackStorageOrig"*), void (%"class.adept::internal::StackStorageOrig"*)* @_ZN5adept8internal16StackStorageOrigD2Ev

; Function Attrs: uwtable mustprogress
define dso_local void @_Z8getTestsRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEPKcS5_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %tests, i8* %name, %"class.std::__cxx11::basic_string"* %indent) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %tests.addr = alloca %"class.std::vector"*, align 8
  %name.addr = alloca i8*, align 8
  %dir = alloca %struct.__dirstream*, align 8
  %entry1 = alloca %struct.dirent*, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %path = alloca [1024 x i8], align 16
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %ref.tmp24 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp27 = alloca %"class.std::allocator.0", align 1
  %ref.tmp30 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp31 = alloca %"class.std::allocator.0", align 1
  %ref.tmp46 = alloca %"class.std::__cxx11::basic_string", align 8
  store %"class.std::vector"* %tests, %"class.std::vector"** %tests.addr, align 8, !tbaa !2
  store i8* %name, i8** %name.addr, align 8, !tbaa !2
  %0 = bitcast %struct.__dirstream** %dir to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = bitcast %struct.dirent** %entry1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load i8*, i8** %name.addr, align 8, !tbaa !2
  %call = call %struct.__dirstream* @opendir(i8* %2)
  store %struct.__dirstream* %call, %struct.__dirstream** %dir, align 8, !tbaa !2
  %tobool = icmp ne %struct.__dirstream* %call, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup56

if.end:                                           ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %if.end54, %cleanup, %if.end
  %3 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !tbaa !2
  %call2 = call %struct.dirent* @readdir(%struct.__dirstream* %3)
  store %struct.dirent* %call2, %struct.dirent** %entry1, align 8, !tbaa !2
  %cmp = icmp ne %struct.dirent* %call2, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %4 = load %struct.dirent*, %struct.dirent** %entry1, align 8, !tbaa !2
  %d_type = getelementptr inbounds %struct.dirent, %struct.dirent* %4, i32 0, i32 3
  %5 = load i8, i8* %d_type, align 2, !tbaa !6
  %conv = zext i8 %5 to i32
  %cmp3 = icmp eq i32 %conv, 4
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %while.body
  %6 = bitcast [1024 x i8]* %path to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* %6) #9
  %7 = load %struct.dirent*, %struct.dirent** %entry1, align 8, !tbaa !2
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %7, i32 0, i32 4
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0
  %call5 = call i32 @strcmp(i8* %arraydecay, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #28
  %cmp6 = icmp eq i32 %call5, 0
  br i1 %cmp6, label %if.then11, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then4
  %8 = load %struct.dirent*, %struct.dirent** %entry1, align 8, !tbaa !2
  %d_name7 = getelementptr inbounds %struct.dirent, %struct.dirent* %8, i32 0, i32 4
  %arraydecay8 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name7, i64 0, i64 0
  %call9 = call i32 @strcmp(i8* %arraydecay8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0)) #28
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %lor.lhs.false, %if.then4
  store i32 2, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !llvm.loop !10

if.end12:                                         ; preds = %lor.lhs.false
  %arraydecay13 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0
  %9 = load i8*, i8** %name.addr, align 8, !tbaa !2
  %10 = load %struct.dirent*, %struct.dirent** %entry1, align 8, !tbaa !2
  %d_name14 = getelementptr inbounds %struct.dirent, %struct.dirent* %10, i32 0, i32 4
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name14, i64 0, i64 0
  %call16 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay13, i64 1024, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8* %9, i8* %arraydecay15) #9
  %11 = load %"class.std::vector"*, %"class.std::vector"** %tests.addr, align 8, !tbaa !2
  %arraydecay17 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0
  %12 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %12) #9
  %13 = load %struct.dirent*, %struct.dirent** %entry1, align 8, !tbaa !2
  %d_name18 = getelementptr inbounds %struct.dirent, %struct.dirent* %13, i32 0, i32 4
  %arraydecay19 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name18, i64 0, i64 0
  call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %indent, i8* %arraydecay19)
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %agg.tmp, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.end12
  invoke void @_Z8getTestsRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEPKcS5_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %11, i8* %arraydecay17, %"class.std::__cxx11::basic_string"* %agg.tmp)
          to label %invoke.cont21 unwind label %lpad20

invoke.cont21:                                    ; preds = %invoke.cont
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp) #9
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  %14 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %14) #9
  store i32 0, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %invoke.cont21, %if.then11
  %15 = bitcast [1024 x i8]* %path to i8*
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* %15) #9
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 2, label %while.cond
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %if.end54

lpad:                                             ; preds = %if.end12
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %exn.slot, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad20:                                           ; preds = %invoke.cont
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %exn.slot, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad20, %lpad
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  %22 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %22) #9
  %23 = bitcast [1024 x i8]* %path to i8*
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* %23) #9
  br label %ehcleanup57

if.else:                                          ; preds = %while.body
  %24 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %24) #9
  %25 = load %struct.dirent*, %struct.dirent** %entry1, align 8, !tbaa !2
  %d_name25 = getelementptr inbounds %struct.dirent, %struct.dirent* %25, i32 0, i32 4
  %arraydecay26 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name25, i64 0, i64 0
  %26 = bitcast %"class.std::allocator.0"* %ref.tmp27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %26) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp27) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp24, i8* %arraydecay26, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp27)
          to label %invoke.cont29 unwind label %lpad28

invoke.cont29:                                    ; preds = %if.else
  %27 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %27) #9
  %28 = bitcast %"class.std::allocator.0"* %ref.tmp31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %28) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp31) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp31)
          to label %invoke.cont33 unwind label %lpad32

invoke.cont33:                                    ; preds = %invoke.cont29
  %call36 = invoke zeroext i1 @_Z9ends_withRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp24, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp30)
          to label %invoke.cont35 unwind label %lpad34

invoke.cont35:                                    ; preds = %invoke.cont33
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp30) #9
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp31) #9
  %29 = bitcast %"class.std::allocator.0"* %ref.tmp31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %29) #9
  %30 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %30) #9
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp24) #9
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp27) #9
  %31 = bitcast %"class.std::allocator.0"* %ref.tmp27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %31) #9
  %32 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %32) #9
  br i1 %call36, label %if.then45, label %if.end53

if.then45:                                        ; preds = %invoke.cont35
  %33 = load %"class.std::vector"*, %"class.std::vector"** %tests.addr, align 8, !tbaa !2
  %34 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %34) #9
  %35 = load %struct.dirent*, %struct.dirent** %entry1, align 8, !tbaa !2
  %d_name47 = getelementptr inbounds %struct.dirent, %struct.dirent* %35, i32 0, i32 4
  %arraydecay48 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name47, i64 0, i64 0
  call void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp46, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %indent, i8* %arraydecay48)
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_(%"class.std::vector"* nonnull dereferenceable(24) %33, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp46)
          to label %invoke.cont50 unwind label %lpad49

invoke.cont50:                                    ; preds = %if.then45
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp46) #9
  %36 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp46 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %36) #9
  br label %if.end53

lpad28:                                           ; preds = %if.else
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %exn.slot, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %ehselector.slot, align 4
  br label %ehcleanup42

lpad32:                                           ; preds = %invoke.cont29
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %exn.slot, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %ehselector.slot, align 4
  br label %ehcleanup38

lpad34:                                           ; preds = %invoke.cont33
  %43 = landingpad { i8*, i32 }
          cleanup
  %44 = extractvalue { i8*, i32 } %43, 0
  store i8* %44, i8** %exn.slot, align 8
  %45 = extractvalue { i8*, i32 } %43, 1
  store i32 %45, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp30) #9
  br label %ehcleanup38

ehcleanup38:                                      ; preds = %lpad34, %lpad32
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp31) #9
  %46 = bitcast %"class.std::allocator.0"* %ref.tmp31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %46) #9
  %47 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %47) #9
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp24) #9
  br label %ehcleanup42

ehcleanup42:                                      ; preds = %ehcleanup38, %lpad28
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp27) #9
  %48 = bitcast %"class.std::allocator.0"* %ref.tmp27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %48) #9
  %49 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %49) #9
  br label %ehcleanup57

lpad49:                                           ; preds = %if.then45
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %exn.slot, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp46) #9
  %53 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp46 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %53) #9
  br label %ehcleanup57

if.end53:                                         ; preds = %invoke.cont50, %invoke.cont35
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %cleanup.cont
  br label %while.cond, !llvm.loop !10

while.end:                                        ; preds = %while.cond
  %54 = load %struct.__dirstream*, %struct.__dirstream** %dir, align 8, !tbaa !2
  %call55 = call i32 @closedir(%struct.__dirstream* %54)
  store i32 0, i32* %cleanup.dest.slot, align 4
  br label %cleanup56

cleanup56:                                        ; preds = %while.end, %if.then
  %55 = bitcast %struct.dirent** %entry1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %55) #9
  %56 = bitcast %struct.__dirstream** %dir to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #9
  %cleanup.dest59 = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest59, label %unreachable [
    i32 0, label %cleanup.cont60
    i32 1, label %cleanup.cont60
  ]

cleanup.cont60:                                   ; preds = %cleanup56, %cleanup56
  ret void

ehcleanup57:                                      ; preds = %lpad49, %ehcleanup42, %ehcleanup
  %57 = bitcast %struct.dirent** %entry1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #9
  %58 = bitcast %struct.__dirstream** %dir to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #9
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup57
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val62 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val62

unreachable:                                      ; preds = %cleanup56, %cleanup
  unreachable
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dso_local %struct.__dirstream* @opendir(i8*) #2

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #2

; Function Attrs: nounwind readonly willreturn
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #4

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__lhs, i8* %__rhs) #5 comdat {
entry:
  %result.ptr = alloca i8*, align 8
  %__lhs.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__rhs.addr = alloca i8*, align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %__lhs, %"class.std::__cxx11::basic_string"** %__lhs.addr, align 8, !tbaa !2
  store i8* %__rhs, i8** %__rhs.addr, align 8, !tbaa !2
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__lhs.addr, align 8, !tbaa !2
  %2 = load i8*, i8** %__rhs.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %1, i8* %2)
  %call1 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %call) #9
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %call1) #9
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__lhs, i8* %__rhs) #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %__lhs.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__rhs.addr = alloca i8*, align 8
  %nrvo = alloca i1, align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %__lhs, %"class.std::__cxx11::basic_string"** %__lhs.addr, align 8, !tbaa !2
  store i8* %__rhs, i8** %__rhs.addr, align 8, !tbaa !2
  store i1 false, i1* %nrvo, align 1
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__lhs.addr, align 8, !tbaa !2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %1)
  %2 = load i8*, i8** %__rhs.addr, align 8, !tbaa !2
  %call = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result) #9
  br label %eh.resume

nrvo.unused:                                      ; preds = %invoke.cont
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result) #9
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %invoke.cont
  ret void

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) unnamed_addr #6 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.std::allocator.0"*)* @_ZNSaIcED2Ev to void (%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*)*)(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus) #9
  ret void

lpad:                                             ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null
  %1 = extractvalue { i8*, i32 } %0, 0
  store i8* %1, i8** %exn.slot, align 8
  %2 = extractvalue { i8*, i32 } %0, 1
  store i32 %2, i32* %ehselector.slot, align 4
  %_M_dataplus2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.std::allocator.0"*)* @_ZNSaIcED2Ev to void (%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*)*)(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus2) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_Z9ends_withRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %value, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ending) #5 comdat {
entry:
  %retval = alloca i1, align 1
  %value.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %ending.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %agg.tmp = alloca %"class.std::reverse_iterator", align 8
  %agg.tmp2 = alloca %"class.std::reverse_iterator", align 8
  %agg.tmp3 = alloca %"class.std::reverse_iterator", align 8
  store %"class.std::__cxx11::basic_string"* %value, %"class.std::__cxx11::basic_string"** %value.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %ending, %"class.std::__cxx11::basic_string"** %ending.addr, align 8, !tbaa !2
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %ending.addr, align 8, !tbaa !2
  %call = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %0) #9
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %value.addr, align 8, !tbaa !2
  %call1 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %1) #9
  %cmp = icmp ugt i64 %call, %call1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %entry
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %ending.addr, align 8, !tbaa !2
  call void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv(%"class.std::reverse_iterator"* sret(%"class.std::reverse_iterator") align 8 %agg.tmp, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %2) #9
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %ending.addr, align 8, !tbaa !2
  call void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv(%"class.std::reverse_iterator"* sret(%"class.std::reverse_iterator") align 8 %agg.tmp2, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %3) #9
  %4 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %value.addr, align 8, !tbaa !2
  call void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv(%"class.std::reverse_iterator"* sret(%"class.std::reverse_iterator") align 8 %agg.tmp3, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %4) #9
  %call4 = call zeroext i1 @_ZSt5equalISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESC_EbT_SD_T0_(%"class.std::reverse_iterator"* %agg.tmp, %"class.std::reverse_iterator"* %agg.tmp2, %"class.std::reverse_iterator"* %agg.tmp3)
  store i1 %call4, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1
  ret i1 %5
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %this, %"class.std::allocator.0"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.0"* %this1 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIcEC2Ev(%"class.__gnu_cxx::new_allocator.1"* nonnull dereferenceable(1) %0) #9
  ret void
}

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__s, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__s.addr = alloca i8*, align 8
  %__a.addr = alloca %"class.std::allocator.0"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  store %"class.std::allocator.0"* %__a, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0
  %call = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  %0 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus, i8* %call, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %0)
  %1 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %2 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %tobool = icmp ne i8* %2, null
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %4 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %call2 = call i64 @_ZNSt11char_traitsIcE6lengthEPKc(i8* %4)
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %call2
  br label %cond.end

cond.false:                                       ; preds = %entry
  %5 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %add.ptr3 = getelementptr inbounds i8, i8* %5, i64 -1
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %add.ptr3, %cond.false ]
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %1, i8* %cond)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %cond.end
  ret void

lpad:                                             ; preds = %cond.end
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.std::allocator.0"*)* @_ZNSaIcED2Ev to void (%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*)*)(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val4 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val4
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backEOS5_(%"class.std::vector"* nonnull dereferenceable(24) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__x) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__x.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__x, %"class.std::__cxx11::basic_string"** %__x.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__x.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0) #9
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_(%"class.std::vector"* nonnull dereferenceable(24) %this1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %call)
  ret void
}

declare dso_local i32 @closedir(%struct.__dirstream*) #2

; Function Attrs: nounwind uwtable mustprogress
define dso_local i64 @_Z15find_last_slashRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %filepath) #8 {
entry:
  %filepath.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %filepath, %"class.std::__cxx11::basic_string"** %filepath.addr, align 8, !tbaa !2
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %filepath.addr, align 8, !tbaa !2
  %call = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i64 -1) #9
  ret i64 %call
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__s, i64 %__pos) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__s.addr = alloca i8*, align 8
  %__pos.addr = alloca i64, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  store i64 %__pos, i64* %__pos.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %1 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  %2 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %call = call i64 @_ZNSt11char_traitsIcE6lengthEPKc(i8* %2)
  %call2 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %0, i64 %1, i64 %call) #9
  ret i64 %call2
}

; Function Attrs: uwtable mustprogress
define dso_local void @_Z20filepath_to_basenameRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %filepath) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %filepath.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %last_slash_position = alloca i64, align 8
  %filename = alloca %"class.std::__cxx11::basic_string", align 8
  %dot = alloca i64, align 8
  %nrvo = alloca i1, align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %filepath, %"class.std::__cxx11::basic_string"** %filepath.addr, align 8, !tbaa !2
  %1 = bitcast i64* %last_slash_position to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %filepath.addr, align 8, !tbaa !2
  %call = call i64 @_Z15find_last_slashRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2)
  store i64 %call, i64* %last_slash_position, align 8, !tbaa !13
  %3 = bitcast %"class.std::__cxx11::basic_string"* %filename to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %3) #9
  %4 = load i64, i64* %last_slash_position, align 8, !tbaa !13
  %cmp = icmp eq i64 %4, -1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %filepath.addr, align 8, !tbaa !2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filename, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5)
  br label %cond.end

cond.false:                                       ; preds = %entry
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %filepath.addr, align 8, !tbaa !2
  %7 = load i64, i64* %last_slash_position, align 8, !tbaa !13
  %add = add i64 %7, 1
  call void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %filename, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %6, i64 %add, i64 -1)
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %8 = bitcast i64* %dot to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #9
  %call1 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filename, i8 signext 46, i64 -1) #9
  store i64 %call1, i64* %dot, align 8, !tbaa !13
  store i1 false, i1* %nrvo, align 1
  %9 = load i64, i64* %dot, align 8, !tbaa !13
  %cmp2 = icmp eq i64 %9, -1
  br i1 %cmp2, label %cond.true3, label %cond.false4

cond.true3:                                       ; preds = %cond.end
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %filename)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %cond.true3
  br label %cond.end6

cond.false4:                                      ; preds = %cond.end
  %10 = load i64, i64* %dot, align 8, !tbaa !13
  invoke void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filename, i64 0, i64 %10)
          to label %invoke.cont5 unwind label %lpad

invoke.cont5:                                     ; preds = %cond.false4
  br label %cond.end6

cond.end6:                                        ; preds = %invoke.cont5, %invoke.cont
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused

lpad:                                             ; preds = %cond.false4, %cond.true3
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  store i8* %12, i8** %exn.slot, align 8
  %13 = extractvalue { i8*, i32 } %11, 1
  store i32 %13, i32* %ehselector.slot, align 4
  %14 = bitcast i64* %dot to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %14) #9
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filename) #9
  %15 = bitcast %"class.std::__cxx11::basic_string"* %filename to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %15) #9
  %16 = bitcast i64* %last_slash_position to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %16) #9
  br label %eh.resume

nrvo.unused:                                      ; preds = %cond.end6
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result) #9
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %cond.end6
  %17 = bitcast i64* %dot to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %filename) #9
  %18 = bitcast %"class.std::__cxx11::basic_string"* %filename to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %18) #9
  %19 = bitcast i64* %last_slash_position to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %19) #9
  ret void

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7
}

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__str) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__str.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__str, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0
  %call = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call2 = call nonnull align 1 dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %1)
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_(%"class.std::allocator.0"* sret(%"class.std::allocator.0") align 1 %ref.tmp, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %call2)
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus, i8* %call, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %2) #9
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call3 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %3)
  %4 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call4 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %4)
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call5 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %5) #9
  %add.ptr = getelementptr inbounds i8, i8* %call4, i64 %call5
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %call3, i8* %add.ptr)
          to label %invoke.cont7 unwind label %lpad6

invoke.cont7:                                     ; preds = %invoke.cont
  ret void

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  br label %eh.resume

lpad6:                                            ; preds = %invoke.cont
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %exn.slot, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.std::allocator.0"*)* @_ZNSaIcED2Ev to void (%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*)*)(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad6, %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val8 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val8
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i64 %__pos, i64 %__n) #0 align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__pos.addr = alloca i64, align 8
  %__n.addr = alloca i64, align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i64 %__pos, i64* %__pos.addr, align 8, !tbaa !13
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %1 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  %call = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.119, i64 0, i64 0))
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_mm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %this1, i64 %call, i64 %2)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8 signext %__c, i64 %__pos) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__c.addr = alloca i8, align 1
  %__pos.addr = alloca i64, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8 %__c, i8* %__c.addr, align 1, !tbaa !14
  store i64 %__pos, i64* %__pos.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i8, i8* %__c.addr, align 1, !tbaa !14
  %1 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  %call = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8 signext %0, i64 %1) #9
  ret i64 %call
}

; Function Attrs: uwtable mustprogress
define dso_local void @_Z19filepath_to_dirnameRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %filepath) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %filepath.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %last_slash_position = alloca i64, align 8
  %nrvo = alloca i1, align 1
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %cleanup.cond = alloca i1, align 1
  %cleanup.cond1 = alloca i1, align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %filepath, %"class.std::__cxx11::basic_string"** %filepath.addr, align 8, !tbaa !2
  %1 = bitcast i64* %last_slash_position to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %filepath.addr, align 8, !tbaa !2
  %call = call i64 @_Z15find_last_slashRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2)
  store i64 %call, i64* %last_slash_position, align 8, !tbaa !13
  store i1 false, i1* %nrvo, align 1
  %3 = load i64, i64* %last_slash_position, align 8, !tbaa !13
  %cmp = icmp eq i64 %3, -1
  store i1 false, i1* %cleanup.cond, align 1
  store i1 false, i1* %cleanup.cond1, align 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %4 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %4) #9
  store i1 true, i1* %cleanup.cond, align 1
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  store i1 true, i1* %cleanup.cond1, align 1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %cond.true
  br label %cond.end

cond.false:                                       ; preds = %entry
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %filepath.addr, align 8, !tbaa !2
  %6 = load i64, i64* %last_slash_position, align 8, !tbaa !13
  %add = add i64 %6, 1
  invoke void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %5, i64 0, i64 %add)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %cond.false
  br label %cond.end

cond.end:                                         ; preds = %invoke.cont2, %invoke.cont
  %cleanup.is_active = load i1, i1* %cleanup.cond1, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %cond.end
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %cond.end
  %cleanup.is_active6 = load i1, i1* %cleanup.cond, align 1
  br i1 %cleanup.is_active6, label %cleanup.action7, label %cleanup.done8

cleanup.action7:                                  ; preds = %cleanup.done
  %7 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #9
  br label %cleanup.done8

cleanup.done8:                                    ; preds = %cleanup.action7, %cleanup.done
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused

lpad:                                             ; preds = %cond.false, %cond.true
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot, align 4
  %cleanup.is_active3 = load i1, i1* %cleanup.cond1, align 1
  br i1 %cleanup.is_active3, label %cleanup.action4, label %cleanup.done5

cleanup.action4:                                  ; preds = %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  br label %cleanup.done5

cleanup.done5:                                    ; preds = %cleanup.action4, %lpad
  %cleanup.is_active9 = load i1, i1* %cleanup.cond, align 1
  br i1 %cleanup.is_active9, label %cleanup.action10, label %cleanup.done11

cleanup.action10:                                 ; preds = %cleanup.done5
  %11 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #9
  br label %cleanup.done11

cleanup.done11:                                   ; preds = %cleanup.action10, %cleanup.done5
  %12 = bitcast i64* %last_slash_position to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #9
  br label %eh.resume

nrvo.unused:                                      ; preds = %cleanup.done8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result) #9
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %cleanup.done8
  %13 = bitcast i64* %last_slash_position to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #9
  ret void

eh.resume:                                        ; preds = %cleanup.done11
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val12 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val12
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init() #7 section ".text.startup" {
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull dereferenceable(1) @_ZStL8__ioinit)
  %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #9
  ret void
}

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* nonnull dereferenceable(1)) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"* nonnull dereferenceable(1)) unnamed_addr #4

; Function Attrs: nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #9

; Function Attrs: nounwind uwtable mustprogress
define dso_local float @_Z5tdiffP7timevalS0_(%struct.timeval* %start, %struct.timeval* %end) #8 {
entry:
  %start.addr = alloca %struct.timeval*, align 8
  %end.addr = alloca %struct.timeval*, align 8
  store %struct.timeval* %start, %struct.timeval** %start.addr, align 8, !tbaa !2
  store %struct.timeval* %end, %struct.timeval** %end.addr, align 8, !tbaa !2
  %0 = load %struct.timeval*, %struct.timeval** %end.addr, align 8, !tbaa !2
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i32 0, i32 0
  %1 = load i64, i64* %tv_sec, align 8, !tbaa !15
  %2 = load %struct.timeval*, %struct.timeval** %start.addr, align 8, !tbaa !2
  %tv_sec1 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i32 0, i32 0
  %3 = load i64, i64* %tv_sec1, align 8, !tbaa !15
  %sub = sub nsw i64 %1, %3
  %conv = sitofp i64 %sub to double
  %4 = load %struct.timeval*, %struct.timeval** %end.addr, align 8, !tbaa !2
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 1
  %5 = load i64, i64* %tv_usec, align 8, !tbaa !17
  %6 = load %struct.timeval*, %struct.timeval** %start.addr, align 8, !tbaa !2
  %tv_usec2 = getelementptr inbounds %struct.timeval, %struct.timeval* %6, i32 0, i32 1
  %7 = load i64, i64* %tv_usec2, align 8, !tbaa !17
  %sub3 = sub nsw i64 %5, %7
  %conv4 = sitofp i64 %sub3 to double
  %mul = fmul fast double 0x3EB0C6F7A0B5ED8D, %conv4
  %add = fadd fast double %conv, %mul
  %conv5 = fptrunc double %add to float
  ret float %conv5
}

; Function Attrs: uwtable mustprogress
define dso_local void @_Z17read_gmm_instanceRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiS7_S7_RSt6vectorIdSaIdEESB_SB_SB_R7Wishartb(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %fn, i32* %d, i32* %k, i32* %n, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %alphas, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %means, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %icf, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %x, %struct.Wishart* nonnull align 8 dereferenceable(16) %wishart, i1 zeroext %replicate_point) #0 {
entry:
  %fn.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %d.addr = alloca i32*, align 8
  %k.addr = alloca i32*, align 8
  %n.addr = alloca i32*, align 8
  %alphas.addr = alloca %"class.std::vector.3"*, align 8
  %means.addr = alloca %"class.std::vector.3"*, align 8
  %icf.addr = alloca %"class.std::vector.3"*, align 8
  %x.addr = alloca %"class.std::vector.3"*, align 8
  %wishart.addr = alloca %struct.Wishart*, align 8
  %replicate_point.addr = alloca i8, align 1
  %fid = alloca %struct._IO_FILE*, align 8
  %d_ = alloca i32, align 4
  %k_ = alloca i32, align 4
  %n_ = alloca i32, align 4
  %icf_sz = alloca i32, align 4
  %i = alloca i32, align 4
  %i14 = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %j = alloca i32, align 4
  %i34 = alloca i32, align 4
  %j39 = alloca i32, align 4
  %j57 = alloca i32, align 4
  %i68 = alloca i32, align 4
  %i82 = alloca i32, align 4
  %j87 = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %fn, %"class.std::__cxx11::basic_string"** %fn.addr, align 8, !tbaa !2
  store i32* %d, i32** %d.addr, align 8, !tbaa !2
  store i32* %k, i32** %k.addr, align 8, !tbaa !2
  store i32* %n, i32** %n.addr, align 8, !tbaa !2
  store %"class.std::vector.3"* %alphas, %"class.std::vector.3"** %alphas.addr, align 8, !tbaa !2
  store %"class.std::vector.3"* %means, %"class.std::vector.3"** %means.addr, align 8, !tbaa !2
  store %"class.std::vector.3"* %icf, %"class.std::vector.3"** %icf.addr, align 8, !tbaa !2
  store %"class.std::vector.3"* %x, %"class.std::vector.3"** %x.addr, align 8, !tbaa !2
  store %struct.Wishart* %wishart, %struct.Wishart** %wishart.addr, align 8, !tbaa !2
  %frombool = zext i1 %replicate_point to i8
  store i8 %frombool, i8* %replicate_point.addr, align 1, !tbaa !18
  %0 = bitcast %struct._IO_FILE** %fid to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %fn.addr, align 8, !tbaa !2
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %1) #9
  %call1 = call %struct._IO_FILE* @fopen(i8* %call, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fid, align 8, !tbaa !2
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fid, align 8, !tbaa !2
  %tobool = icmp ne %struct._IO_FILE* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %fn.addr, align 8, !tbaa !2
  %call2 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %3) #9
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i8* %call2)
  call void @exit(i32 1) #29
  unreachable

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fid, align 8, !tbaa !2
  %5 = load i32*, i32** %d.addr, align 8, !tbaa !2
  %6 = load i32*, i32** %k.addr, align 8, !tbaa !2
  %7 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i32* %5, i32* %6, i32* %7)
  %8 = bitcast i32* %d_ to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #9
  %9 = load i32*, i32** %d.addr, align 8, !tbaa !2
  %10 = load i32, i32* %9, align 4, !tbaa !20
  store i32 %10, i32* %d_, align 4, !tbaa !20
  %11 = bitcast i32* %k_ to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #9
  %12 = load i32*, i32** %k.addr, align 8, !tbaa !2
  %13 = load i32, i32* %12, align 4, !tbaa !20
  store i32 %13, i32* %k_, align 4, !tbaa !20
  %14 = bitcast i32* %n_ to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %14) #9
  %15 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %16 = load i32, i32* %15, align 4, !tbaa !20
  store i32 %16, i32* %n_, align 4, !tbaa !20
  %17 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #9
  %18 = load i32, i32* %d_, align 4, !tbaa !20
  %19 = load i32, i32* %d_, align 4, !tbaa !20
  %add = add nsw i32 %19, 1
  %mul = mul nsw i32 %18, %add
  %div = sdiv i32 %mul, 2
  store i32 %div, i32* %icf_sz, align 4, !tbaa !20
  %20 = load %"class.std::vector.3"*, %"class.std::vector.3"** %alphas.addr, align 8, !tbaa !2
  %21 = load i32, i32* %k_, align 4, !tbaa !20
  %conv = sext i32 %21 to i64
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(%"class.std::vector.3"* nonnull dereferenceable(24) %20, i64 %conv)
  %22 = load %"class.std::vector.3"*, %"class.std::vector.3"** %means.addr, align 8, !tbaa !2
  %23 = load i32, i32* %d_, align 4, !tbaa !20
  %24 = load i32, i32* %k_, align 4, !tbaa !20
  %mul5 = mul nsw i32 %23, %24
  %conv6 = sext i32 %mul5 to i64
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(%"class.std::vector.3"* nonnull dereferenceable(24) %22, i64 %conv6)
  %25 = load %"class.std::vector.3"*, %"class.std::vector.3"** %icf.addr, align 8, !tbaa !2
  %26 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %27 = load i32, i32* %k_, align 4, !tbaa !20
  %mul7 = mul nsw i32 %26, %27
  %conv8 = sext i32 %mul7 to i64
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(%"class.std::vector.3"* nonnull dereferenceable(24) %25, i64 %conv8)
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %x.addr, align 8, !tbaa !2
  %29 = load i32, i32* %d_, align 4, !tbaa !20
  %30 = load i32, i32* %n_, align 4, !tbaa !20
  %mul9 = mul nsw i32 %29, %30
  %conv10 = sext i32 %mul9 to i64
  call void @_ZNSt6vectorIdSaIdEE6resizeEm(%"class.std::vector.3"* nonnull dereferenceable(24) %28, i64 %conv10)
  %31 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %32 = load i32, i32* %i, align 4, !tbaa !20
  %33 = load i32, i32* %k_, align 4, !tbaa !20
  %cmp = icmp slt i32 %32, %33
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %34 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %34) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %fid, align 8, !tbaa !2
  %36 = load %"class.std::vector.3"*, %"class.std::vector.3"** %alphas.addr, align 8, !tbaa !2
  %37 = load i32, i32* %i, align 4, !tbaa !20
  %conv11 = sext i32 %37 to i64
  %call12 = call nonnull align 8 dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.3"* nonnull dereferenceable(24) %36, i64 %conv11) #9
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* %call12)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !22

for.end:                                          ; preds = %for.cond.cleanup
  %39 = bitcast i32* %i14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %39) #9
  store i32 0, i32* %i14, align 4, !tbaa !20
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc31, %for.end
  %40 = load i32, i32* %i14, align 4, !tbaa !20
  %41 = load i32, i32* %k_, align 4, !tbaa !20
  %cmp16 = icmp slt i32 %40, %41
  br i1 %cmp16, label %for.body18, label %for.cond.cleanup17

for.cond.cleanup17:                               ; preds = %for.cond15
  store i32 5, i32* %cleanup.dest.slot, align 4
  %42 = bitcast i32* %i14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %42) #9
  br label %for.end33

for.body18:                                       ; preds = %for.cond15
  %43 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #9
  store i32 0, i32* %j, align 4, !tbaa !20
  br label %for.cond19

for.cond19:                                       ; preds = %for.inc28, %for.body18
  %44 = load i32, i32* %j, align 4, !tbaa !20
  %45 = load i32, i32* %d_, align 4, !tbaa !20
  %cmp20 = icmp slt i32 %44, %45
  br i1 %cmp20, label %for.body22, label %for.cond.cleanup21

for.cond.cleanup21:                               ; preds = %for.cond19
  store i32 8, i32* %cleanup.dest.slot, align 4
  %46 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %46) #9
  br label %for.end30

for.body22:                                       ; preds = %for.cond19
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %fid, align 8, !tbaa !2
  %48 = load %"class.std::vector.3"*, %"class.std::vector.3"** %means.addr, align 8, !tbaa !2
  %49 = load i32, i32* %i14, align 4, !tbaa !20
  %50 = load i32, i32* %d_, align 4, !tbaa !20
  %mul23 = mul nsw i32 %49, %50
  %51 = load i32, i32* %j, align 4, !tbaa !20
  %add24 = add nsw i32 %mul23, %51
  %conv25 = sext i32 %add24 to i64
  %call26 = call nonnull align 8 dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.3"* nonnull dereferenceable(24) %48, i64 %conv25) #9
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %47, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* %call26)
  br label %for.inc28

for.inc28:                                        ; preds = %for.body22
  %52 = load i32, i32* %j, align 4, !tbaa !20
  %inc29 = add nsw i32 %52, 1
  store i32 %inc29, i32* %j, align 4, !tbaa !20
  br label %for.cond19, !llvm.loop !23

for.end30:                                        ; preds = %for.cond.cleanup21
  br label %for.inc31

for.inc31:                                        ; preds = %for.end30
  %53 = load i32, i32* %i14, align 4, !tbaa !20
  %inc32 = add nsw i32 %53, 1
  store i32 %inc32, i32* %i14, align 4, !tbaa !20
  br label %for.cond15, !llvm.loop !24

for.end33:                                        ; preds = %for.cond.cleanup17
  %54 = bitcast i32* %i34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #9
  store i32 0, i32* %i34, align 4, !tbaa !20
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc52, %for.end33
  %55 = load i32, i32* %i34, align 4, !tbaa !20
  %56 = load i32, i32* %k_, align 4, !tbaa !20
  %cmp36 = icmp slt i32 %55, %56
  br i1 %cmp36, label %for.body38, label %for.cond.cleanup37

for.cond.cleanup37:                               ; preds = %for.cond35
  store i32 11, i32* %cleanup.dest.slot, align 4
  %57 = bitcast i32* %i34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %57) #9
  br label %for.end54

for.body38:                                       ; preds = %for.cond35
  %58 = bitcast i32* %j39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #9
  store i32 0, i32* %j39, align 4, !tbaa !20
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc49, %for.body38
  %59 = load i32, i32* %j39, align 4, !tbaa !20
  %60 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %cmp41 = icmp slt i32 %59, %60
  br i1 %cmp41, label %for.body43, label %for.cond.cleanup42

for.cond.cleanup42:                               ; preds = %for.cond40
  store i32 14, i32* %cleanup.dest.slot, align 4
  %61 = bitcast i32* %j39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #9
  br label %for.end51

for.body43:                                       ; preds = %for.cond40
  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %fid, align 8, !tbaa !2
  %63 = load %"class.std::vector.3"*, %"class.std::vector.3"** %icf.addr, align 8, !tbaa !2
  %64 = load i32, i32* %i34, align 4, !tbaa !20
  %65 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul44 = mul nsw i32 %64, %65
  %66 = load i32, i32* %j39, align 4, !tbaa !20
  %add45 = add nsw i32 %mul44, %66
  %conv46 = sext i32 %add45 to i64
  %call47 = call nonnull align 8 dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.3"* nonnull dereferenceable(24) %63, i64 %conv46) #9
  %call48 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %62, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* %call47)
  br label %for.inc49

for.inc49:                                        ; preds = %for.body43
  %67 = load i32, i32* %j39, align 4, !tbaa !20
  %inc50 = add nsw i32 %67, 1
  store i32 %inc50, i32* %j39, align 4, !tbaa !20
  br label %for.cond40, !llvm.loop !25

for.end51:                                        ; preds = %for.cond.cleanup42
  br label %for.inc52

for.inc52:                                        ; preds = %for.end51
  %68 = load i32, i32* %i34, align 4, !tbaa !20
  %inc53 = add nsw i32 %68, 1
  store i32 %inc53, i32* %i34, align 4, !tbaa !20
  br label %for.cond35, !llvm.loop !26

for.end54:                                        ; preds = %for.cond.cleanup37
  %69 = load i8, i8* %replicate_point.addr, align 1, !tbaa !18, !range !27
  %tobool55 = trunc i8 %69 to i1
  br i1 %tobool55, label %if.then56, label %if.else

if.then56:                                        ; preds = %for.end54
  %70 = bitcast i32* %j57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %70) #9
  store i32 0, i32* %j57, align 4, !tbaa !20
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc65, %if.then56
  %71 = load i32, i32* %j57, align 4, !tbaa !20
  %72 = load i32, i32* %d_, align 4, !tbaa !20
  %cmp59 = icmp slt i32 %71, %72
  br i1 %cmp59, label %for.body61, label %for.cond.cleanup60

for.cond.cleanup60:                               ; preds = %for.cond58
  store i32 17, i32* %cleanup.dest.slot, align 4
  %73 = bitcast i32* %j57 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %73) #9
  br label %for.end67

for.body61:                                       ; preds = %for.cond58
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %fid, align 8, !tbaa !2
  %75 = load %"class.std::vector.3"*, %"class.std::vector.3"** %x.addr, align 8, !tbaa !2
  %76 = load i32, i32* %j57, align 4, !tbaa !20
  %conv62 = sext i32 %76 to i64
  %call63 = call nonnull align 8 dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.3"* nonnull dereferenceable(24) %75, i64 %conv62) #9
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* %call63)
  br label %for.inc65

for.inc65:                                        ; preds = %for.body61
  %77 = load i32, i32* %j57, align 4, !tbaa !20
  %inc66 = add nsw i32 %77, 1
  store i32 %inc66, i32* %j57, align 4, !tbaa !20
  br label %for.cond58, !llvm.loop !28

for.end67:                                        ; preds = %for.cond.cleanup60
  %78 = bitcast i32* %i68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %78) #9
  store i32 0, i32* %i68, align 4, !tbaa !20
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc79, %for.end67
  %79 = load i32, i32* %i68, align 4, !tbaa !20
  %80 = load i32, i32* %n_, align 4, !tbaa !20
  %cmp70 = icmp slt i32 %79, %80
  br i1 %cmp70, label %for.body72, label %for.cond.cleanup71

for.cond.cleanup71:                               ; preds = %for.cond69
  store i32 20, i32* %cleanup.dest.slot, align 4
  %81 = bitcast i32* %i68 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %81) #9
  br label %for.end81

for.body72:                                       ; preds = %for.cond69
  %82 = load %"class.std::vector.3"*, %"class.std::vector.3"** %x.addr, align 8, !tbaa !2
  %83 = load i32, i32* %i68, align 4, !tbaa !20
  %84 = load i32, i32* %d_, align 4, !tbaa !20
  %mul73 = mul nsw i32 %83, %84
  %conv74 = sext i32 %mul73 to i64
  %call75 = call nonnull align 8 dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.3"* nonnull dereferenceable(24) %82, i64 %conv74) #9
  %85 = bitcast double* %call75 to i8*
  %86 = load %"class.std::vector.3"*, %"class.std::vector.3"** %x.addr, align 8, !tbaa !2
  %call76 = call nonnull align 8 dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.3"* nonnull dereferenceable(24) %86, i64 0) #9
  %87 = bitcast double* %call76 to i8*
  %88 = load i32, i32* %d_, align 4, !tbaa !20
  %conv77 = sext i32 %88 to i64
  %mul78 = mul i64 %conv77, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %87, i64 %mul78, i1 false)
  br label %for.inc79

for.inc79:                                        ; preds = %for.body72
  %89 = load i32, i32* %i68, align 4, !tbaa !20
  %inc80 = add nsw i32 %89, 1
  store i32 %inc80, i32* %i68, align 4, !tbaa !20
  br label %for.cond69, !llvm.loop !29

for.end81:                                        ; preds = %for.cond.cleanup71
  br label %if.end103

if.else:                                          ; preds = %for.end54
  %90 = bitcast i32* %i82 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %90) #9
  store i32 0, i32* %i82, align 4, !tbaa !20
  br label %for.cond83

for.cond83:                                       ; preds = %for.inc100, %if.else
  %91 = load i32, i32* %i82, align 4, !tbaa !20
  %92 = load i32, i32* %n_, align 4, !tbaa !20
  %cmp84 = icmp slt i32 %91, %92
  br i1 %cmp84, label %for.body86, label %for.cond.cleanup85

for.cond.cleanup85:                               ; preds = %for.cond83
  store i32 23, i32* %cleanup.dest.slot, align 4
  %93 = bitcast i32* %i82 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %93) #9
  br label %for.end102

for.body86:                                       ; preds = %for.cond83
  %94 = bitcast i32* %j87 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %94) #9
  store i32 0, i32* %j87, align 4, !tbaa !20
  br label %for.cond88

for.cond88:                                       ; preds = %for.inc97, %for.body86
  %95 = load i32, i32* %j87, align 4, !tbaa !20
  %96 = load i32, i32* %d_, align 4, !tbaa !20
  %cmp89 = icmp slt i32 %95, %96
  br i1 %cmp89, label %for.body91, label %for.cond.cleanup90

for.cond.cleanup90:                               ; preds = %for.cond88
  store i32 26, i32* %cleanup.dest.slot, align 4
  %97 = bitcast i32* %j87 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %97) #9
  br label %for.end99

for.body91:                                       ; preds = %for.cond88
  %98 = load %struct._IO_FILE*, %struct._IO_FILE** %fid, align 8, !tbaa !2
  %99 = load %"class.std::vector.3"*, %"class.std::vector.3"** %x.addr, align 8, !tbaa !2
  %100 = load i32, i32* %i82, align 4, !tbaa !20
  %101 = load i32, i32* %d_, align 4, !tbaa !20
  %mul92 = mul nsw i32 %100, %101
  %102 = load i32, i32* %j87, align 4, !tbaa !20
  %add93 = add nsw i32 %mul92, %102
  %conv94 = sext i32 %add93 to i64
  %call95 = call nonnull align 8 dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.3"* nonnull dereferenceable(24) %99, i64 %conv94) #9
  %call96 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %98, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), double* %call95)
  br label %for.inc97

for.inc97:                                        ; preds = %for.body91
  %103 = load i32, i32* %j87, align 4, !tbaa !20
  %inc98 = add nsw i32 %103, 1
  store i32 %inc98, i32* %j87, align 4, !tbaa !20
  br label %for.cond88, !llvm.loop !30

for.end99:                                        ; preds = %for.cond.cleanup90
  br label %for.inc100

for.inc100:                                       ; preds = %for.end99
  %104 = load i32, i32* %i82, align 4, !tbaa !20
  %inc101 = add nsw i32 %104, 1
  store i32 %inc101, i32* %i82, align 4, !tbaa !20
  br label %for.cond83, !llvm.loop !31

for.end102:                                       ; preds = %for.cond.cleanup85
  br label %if.end103

if.end103:                                        ; preds = %for.end102, %for.end81
  %105 = load %struct._IO_FILE*, %struct._IO_FILE** %fid, align 8, !tbaa !2
  %106 = load %struct.Wishart*, %struct.Wishart** %wishart.addr, align 8, !tbaa !2
  %gamma = getelementptr inbounds %struct.Wishart, %struct.Wishart* %106, i32 0, i32 0
  %107 = load %struct.Wishart*, %struct.Wishart** %wishart.addr, align 8, !tbaa !2
  %m = getelementptr inbounds %struct.Wishart, %struct.Wishart* %107, i32 0, i32 1
  %call104 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %105, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), double* %gamma, i32* %m)
  %108 = load %struct._IO_FILE*, %struct._IO_FILE** %fid, align 8, !tbaa !2
  %call105 = call i32 @fclose(%struct._IO_FILE* %108)
  %109 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %109) #9
  %110 = bitcast i32* %n_ to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %110) #9
  %111 = bitcast i32* %k_ to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %111) #9
  %112 = bitcast i32* %d_ to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %112) #9
  %113 = bitcast %struct._IO_FILE** %fid to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %113) #9
  ret void
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #2

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  ret i8* %call
}

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #10

declare dso_local i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEE6resizeEm(%"class.std::vector.3"* nonnull dereferenceable(24) %this, i64 %__new_size) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %__new_size.addr = alloca i64, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  store i64 %__new_size, i64* %__new_size.addr, align 8, !tbaa !13
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = load i64, i64* %__new_size.addr, align 8, !tbaa !13
  %call = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  %cmp = icmp ugt i64 %0, %call
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %__new_size.addr, align 8, !tbaa !13
  %call2 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  %sub = sub i64 %1, %call2
  call void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.3"* nonnull dereferenceable(24) %this1, i64 %sub)
  br label %if.end6

if.else:                                          ; preds = %entry
  %2 = load i64, i64* %__new_size.addr, align 8, !tbaa !13
  %call3 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  %cmp4 = icmp ult i64 %2, %call3
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.else
  %3 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %4, i32 0, i32 0
  %5 = load double*, double** %_M_start, align 8, !tbaa !32
  %6 = load i64, i64* %__new_size.addr, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds double, double* %5, i64 %6
  call void @_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd(%"class.std::vector.3"* nonnull dereferenceable(24) %this1, double* %add.ptr) #9
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.3"* nonnull dereferenceable(24) %this, i64 %__n) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load double*, double** %_M_start, align 8, !tbaa !32
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds double, double* %2, i64 %3
  ret double* %add.ptr
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: norecurse uwtable mustprogress
define dso_local i32 @main(i32 %argc, i8** %argv) #11 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %replicate_point = alloca i8, align 1
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %cleanup.cond = alloca i1, align 1
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %cleanup.cond2 = alloca i1, align 1
  %cleanup.cond3 = alloca i1, align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.cond4 = alloca i1, align 1
  %params = alloca %struct.GMMParameters, align 1
  %paths = alloca %"class.std::vector", align 8
  %agg.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp33 = alloca %"class.std::allocator.0", align 1
  %agg.tmp41 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp42 = alloca %"class.std::allocator.0", align 1
  %agg.tmp50 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp51 = alloca %"class.std::allocator.0", align 1
  %__range1 = alloca %"class.std::vector"*, align 8
  %__begin1 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__end1 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %cleanup.dest.slot = alloca i32, align 4
  %path = alloca %"class.std::__cxx11::basic_string", align 8
  %input = alloca %struct.GMMInput, align 8
  %ref.tmp83 = alloca %"class.std::__cxx11::basic_string", align 8
  %Jcols = alloca i32, align 4
  %result = alloca %struct.GMMOutput, align 8
  %ref.tmp97 = alloca %"class.std::allocator.5", align 1
  %start = alloca %struct.timeval, align 8
  %end = alloca %struct.timeval, align 8
  %i = alloca i32, align 4
  %input130 = alloca %struct.GMMInput, align 8
  %ref.tmp131 = alloca %"class.std::__cxx11::basic_string", align 8
  %Jcols148 = alloca i32, align 4
  %result157 = alloca %struct.GMMOutput, align 8
  %ref.tmp161 = alloca %"class.std::allocator.5", align 1
  %start166 = alloca %struct.timeval, align 8
  %end167 = alloca %struct.timeval, align 8
  %i176 = alloca i32, align 4
  %0 = alloca %"class.std::bad_alloc", align 8
  %input209 = alloca %struct.GMMInput, align 8
  %ref.tmp210 = alloca %"class.std::__cxx11::basic_string", align 8
  %Jcols227 = alloca i32, align 4
  %result236 = alloca %struct.GMMOutput, align 8
  %ref.tmp240 = alloca %"class.std::allocator.5", align 1
  %start245 = alloca %struct.timeval, align 8
  %end246 = alloca %struct.timeval, align 8
  %i255 = alloca i32, align 4
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !20
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0))
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %replicate_point) #9
  %1 = load i32, i32* %argc.addr, align 4, !tbaa !20
  %cmp = icmp sgt i32 %1, 9
  store i1 false, i1* %cleanup.cond, align 1
  store i1 false, i1* %cleanup.cond2, align 1
  store i1 false, i1* %cleanup.cond3, align 1
  store i1 false, i1* %cleanup.cond4, align 1
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  store i1 true, i1* %cleanup.cond, align 1
  %3 = load i8**, i8*** %argv.addr, align 8, !tbaa !2
  %arrayidx = getelementptr inbounds i8*, i8** %3, i64 9
  %4 = load i8*, i8** %arrayidx, align 8, !tbaa !2
  %5 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %5) #9
  store i1 true, i1* %cleanup.cond2, align 1
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  store i1 true, i1* %cleanup.cond3, align 1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* %4, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %land.rhs
  store i1 true, i1* %cleanup.cond4, align 1
  %call7 = invoke zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0))
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %invoke.cont
  br label %land.end

land.end:                                         ; preds = %invoke.cont6, %entry
  %6 = phi i1 [ false, %entry ], [ %call7, %invoke.cont6 ]
  %cleanup.is_active = load i1, i1* %cleanup.cond4, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %land.end
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %land.end
  %cleanup.is_active11 = load i1, i1* %cleanup.cond3, align 1
  br i1 %cleanup.is_active11, label %cleanup.action12, label %cleanup.done13

cleanup.action12:                                 ; preds = %cleanup.done
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  br label %cleanup.done13

cleanup.done13:                                   ; preds = %cleanup.action12, %cleanup.done
  %cleanup.is_active17 = load i1, i1* %cleanup.cond2, align 1
  br i1 %cleanup.is_active17, label %cleanup.action18, label %cleanup.done19

cleanup.action18:                                 ; preds = %cleanup.done13
  %7 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #9
  br label %cleanup.done19

cleanup.done19:                                   ; preds = %cleanup.action18, %cleanup.done13
  %cleanup.is_active24 = load i1, i1* %cleanup.cond, align 1
  br i1 %cleanup.is_active24, label %cleanup.action25, label %cleanup.done26

cleanup.action25:                                 ; preds = %cleanup.done19
  %8 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %8) #9
  br label %cleanup.done26

cleanup.done26:                                   ; preds = %cleanup.action25, %cleanup.done19
  %frombool = zext i1 %6 to i8
  store i8 %frombool, i8* %replicate_point, align 1, !tbaa !18
  %9 = bitcast %struct.GMMParameters* %params to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %9) #9
  %replicate_point31 = getelementptr inbounds %struct.GMMParameters, %struct.GMMParameters* %params, i32 0, i32 0
  %10 = load i8, i8* %replicate_point, align 1, !tbaa !18, !range !27
  %tobool = trunc i8 %10 to i1
  %frombool32 = zext i1 %tobool to i8
  store i8 %frombool32, i8* %replicate_point31, align 1, !tbaa !34
  %11 = bitcast %"class.std::vector"* %paths to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %11) #9
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev(%"class.std::vector"* nonnull dereferenceable(24) %paths) #9
  %12 = bitcast %"class.std::allocator.0"* %ref.tmp33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %12) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp33) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp33)
          to label %invoke.cont35 unwind label %lpad34

invoke.cont35:                                    ; preds = %cleanup.done26
  invoke void @_Z8getTestsRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEPKcS5_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %paths, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), %"class.std::__cxx11::basic_string"* %agg.tmp)
          to label %invoke.cont37 unwind label %lpad36

invoke.cont37:                                    ; preds = %invoke.cont35
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp) #9
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp33) #9
  %13 = bitcast %"class.std::allocator.0"* %ref.tmp33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %13) #9
  %14 = bitcast %"class.std::allocator.0"* %ref.tmp42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %14) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp42) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp41, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp42)
          to label %invoke.cont44 unwind label %lpad43

invoke.cont44:                                    ; preds = %invoke.cont37
  invoke void @_Z8getTestsRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEPKcS5_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %paths, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), %"class.std::__cxx11::basic_string"* %agg.tmp41)
          to label %invoke.cont46 unwind label %lpad45

invoke.cont46:                                    ; preds = %invoke.cont44
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp41) #9
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp42) #9
  %15 = bitcast %"class.std::allocator.0"* %ref.tmp42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #9
  %16 = bitcast %"class.std::allocator.0"* %ref.tmp51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %16) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp51) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp51)
          to label %invoke.cont53 unwind label %lpad52

invoke.cont53:                                    ; preds = %invoke.cont46
  invoke void @_Z8getTestsRSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEPKcS5_(%"class.std::vector"* nonnull align 8 dereferenceable(24) %paths, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0), %"class.std::__cxx11::basic_string"* %agg.tmp50)
          to label %invoke.cont55 unwind label %lpad54

invoke.cont55:                                    ; preds = %invoke.cont53
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp50) #9
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp51) #9
  %17 = bitcast %"class.std::allocator.0"* %ref.tmp51 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %17) #9
  %18 = bitcast %"class.std::vector"** %__range1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #9
  store %"class.std::vector"* %paths, %"class.std::vector"** %__range1, align 8, !tbaa !2
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__begin1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #9
  %20 = load %"class.std::vector"*, %"class.std::vector"** %__range1, align 8, !tbaa !2
  %call59 = call %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv(%"class.std::vector"* nonnull dereferenceable(24) %20) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__begin1, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %call59, %"class.std::__cxx11::basic_string"** %coerce.dive, align 8
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__end1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #9
  %22 = load %"class.std::vector"*, %"class.std::vector"** %__range1, align 8, !tbaa !2
  %call60 = call %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv(%"class.std::vector"* nonnull dereferenceable(24) %22) #9
  %coerce.dive61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__end1, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %call60, %"class.std::__cxx11::basic_string"** %coerce.dive61, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc282, %invoke.cont55
  %call62 = call zeroext i1 @_ZN9__gnu_cxxneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %__begin1, %"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %__end1) #9
  br i1 %call62, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__end1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #9
  %24 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__begin1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #9
  %25 = bitcast %"class.std::vector"** %__range1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #9
  br label %for.end290

lpad:                                             ; preds = %land.rhs
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %exn.slot, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad5:                                            ; preds = %invoke.cont
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %exn.slot, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %ehselector.slot, align 4
  %cleanup.is_active8 = load i1, i1* %cleanup.cond4, align 1
  br i1 %cleanup.is_active8, label %cleanup.action9, label %cleanup.done10

cleanup.action9:                                  ; preds = %lpad5
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %cleanup.done10

cleanup.done10:                                   ; preds = %cleanup.action9, %lpad5
  br label %ehcleanup

ehcleanup:                                        ; preds = %cleanup.done10, %lpad
  %cleanup.is_active14 = load i1, i1* %cleanup.cond3, align 1
  br i1 %cleanup.is_active14, label %cleanup.action15, label %cleanup.done16

cleanup.action15:                                 ; preds = %ehcleanup
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  br label %cleanup.done16

cleanup.done16:                                   ; preds = %cleanup.action15, %ehcleanup
  %cleanup.is_active21 = load i1, i1* %cleanup.cond2, align 1
  br i1 %cleanup.is_active21, label %cleanup.action22, label %cleanup.done23

cleanup.action22:                                 ; preds = %cleanup.done16
  %32 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %32) #9
  br label %cleanup.done23

cleanup.done23:                                   ; preds = %cleanup.action22, %cleanup.done16
  %cleanup.is_active28 = load i1, i1* %cleanup.cond, align 1
  br i1 %cleanup.is_active28, label %cleanup.action29, label %cleanup.done30

cleanup.action29:                                 ; preds = %cleanup.done23
  %33 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %33) #9
  br label %cleanup.done30

cleanup.done30:                                   ; preds = %cleanup.action29, %cleanup.done23
  br label %ehcleanup294

lpad34:                                           ; preds = %cleanup.done26
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %exn.slot, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %ehselector.slot, align 4
  br label %ehcleanup39

lpad36:                                           ; preds = %invoke.cont35
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %exn.slot, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp) #9
  br label %ehcleanup39

ehcleanup39:                                      ; preds = %lpad36, %lpad34
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp33) #9
  %40 = bitcast %"class.std::allocator.0"* %ref.tmp33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %40) #9
  br label %ehcleanup291

lpad43:                                           ; preds = %invoke.cont37
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %exn.slot, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %ehselector.slot, align 4
  br label %ehcleanup48

lpad45:                                           ; preds = %invoke.cont44
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %exn.slot, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp41) #9
  br label %ehcleanup48

ehcleanup48:                                      ; preds = %lpad45, %lpad43
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp42) #9
  %47 = bitcast %"class.std::allocator.0"* %ref.tmp42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %47) #9
  br label %ehcleanup291

lpad52:                                           ; preds = %invoke.cont46
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %exn.slot, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %ehselector.slot, align 4
  br label %ehcleanup57

lpad54:                                           ; preds = %invoke.cont53
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %exn.slot, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.tmp50) #9
  br label %ehcleanup57

ehcleanup57:                                      ; preds = %lpad54, %lpad52
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp51) #9
  %54 = bitcast %"class.std::allocator.0"* %ref.tmp51 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %54) #9
  br label %ehcleanup291

for.body:                                         ; preds = %for.cond
  %55 = bitcast %"class.std::__cxx11::basic_string"* %path to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %55) #9
  %call63 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %__begin1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %path, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %call63)
          to label %invoke.cont65 unwind label %lpad64

invoke.cont65:                                    ; preds = %for.body
  %call68 = invoke zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i64 0, i64 0))
          to label %invoke.cont67 unwind label %lpad66

invoke.cont67:                                    ; preds = %invoke.cont65
  br i1 %call68, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %invoke.cont67
  %call70 = invoke zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.21, i64 0, i64 0))
          to label %invoke.cont69 unwind label %lpad66

invoke.cont69:                                    ; preds = %lor.lhs.false
  br i1 %call70, label %if.then, label %lor.lhs.false71

lor.lhs.false71:                                  ; preds = %invoke.cont69
  %call73 = invoke zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0))
          to label %invoke.cont72 unwind label %lpad66

invoke.cont72:                                    ; preds = %lor.lhs.false71
  br i1 %call73, label %if.then, label %lor.lhs.false74

lor.lhs.false74:                                  ; preds = %invoke.cont72
  %call76 = invoke zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0))
          to label %invoke.cont75 unwind label %lpad66

invoke.cont75:                                    ; preds = %lor.lhs.false74
  br i1 %call76, label %if.then, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %invoke.cont75
  %call79 = invoke zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0))
          to label %invoke.cont78 unwind label %lpad66

invoke.cont78:                                    ; preds = %lor.lhs.false77
  br i1 %call79, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont78, %invoke.cont75, %invoke.cont72, %invoke.cont69, %invoke.cont67
  store i32 3, i32* %cleanup.dest.slot, align 4
  br label %cleanup

lpad64:                                           ; preds = %for.body
  %56 = landingpad { i8*, i32 }
          cleanup
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %exn.slot, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %ehselector.slot, align 4
  br label %ehcleanup281

lpad66:                                           ; preds = %if.end, %lor.lhs.false77, %lor.lhs.false74, %lor.lhs.false71, %lor.lhs.false, %invoke.cont65
  %59 = landingpad { i8*, i32 }
          cleanup
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %exn.slot, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %ehselector.slot, align 4
  br label %ehcleanup279

if.end:                                           ; preds = %invoke.cont78
  %call80 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %path) #9
  %call82 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i8* %call80)
          to label %invoke.cont81 unwind label %lpad66

invoke.cont81:                                    ; preds = %if.end
  %62 = bitcast %struct.GMMInput* %input to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* %62) #9
  call void @_ZN8GMMInputC2Ev(%struct.GMMInput* nonnull dereferenceable(128) %input) #9
  %63 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp83 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %63) #9
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp83, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path)
          to label %invoke.cont85 unwind label %lpad84

invoke.cont85:                                    ; preds = %invoke.cont81
  %d = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i32 0, i32 0
  %k = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i32 0, i32 1
  %n = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i32 0, i32 2
  %alphas = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i32 0, i32 3
  %means = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i32 0, i32 4
  %icf = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i32 0, i32 5
  %x = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i32 0, i32 6
  %wishart = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i32 0, i32 7
  %replicate_point86 = getelementptr inbounds %struct.GMMParameters, %struct.GMMParameters* %params, i32 0, i32 0
  %64 = load i8, i8* %replicate_point86, align 1, !tbaa !34, !range !27
  %tobool87 = trunc i8 %64 to i1
  invoke void @_Z17read_gmm_instanceRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiS7_S7_RSt6vectorIdSaIdEESB_SB_SB_R7Wishartb(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp83, i32* %d, i32* %k, i32* %n, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %alphas, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %means, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %icf, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %x, %struct.Wishart* nonnull align 8 dereferenceable(16) %wishart, i1 zeroext %tobool87)
          to label %invoke.cont89 unwind label %lpad88

invoke.cont89:                                    ; preds = %invoke.cont85
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp83) #9
  %65 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp83 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %65) #9
  %66 = bitcast i32* %Jcols to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %66) #9
  %k92 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i32 0, i32 1
  %67 = load i32, i32* %k92, align 4, !tbaa !36
  %d93 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i32 0, i32 0
  %68 = load i32, i32* %d93, align 8, !tbaa !41
  %add = add nsw i32 %68, 1
  %mul = mul nsw i32 %67, %add
  %d94 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input, i32 0, i32 0
  %69 = load i32, i32* %d94, align 8, !tbaa !41
  %add95 = add nsw i32 %69, 2
  %mul96 = mul nsw i32 %mul, %add95
  %div = sdiv i32 %mul96, 2
  store i32 %div, i32* %Jcols, align 4, !tbaa !20
  %70 = bitcast %struct.GMMOutput* %result to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %70) #9
  %objective = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %result, i32 0, i32 0
  store double 0.000000e+00, double* %objective, align 8, !tbaa !42
  %gradient = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %result, i32 0, i32 1
  %71 = load i32, i32* %Jcols, align 4, !tbaa !20
  %conv = sext i32 %71 to i64
  %72 = bitcast %"class.std::allocator.5"* %ref.tmp97 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %72) #9
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.5"* nonnull dereferenceable(1) %ref.tmp97) #9
  invoke void @_ZNSt6vectorIdSaIdEEC2EmRKS0_(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient, i64 %conv, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %ref.tmp97)
          to label %invoke.cont99 unwind label %lpad98

invoke.cont99:                                    ; preds = %invoke.cont89
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.6"*)* @_ZN9__gnu_cxx13new_allocatorIdED2Ev to void (%"class.std::allocator.5"*)*)(%"class.std::allocator.5"* nonnull dereferenceable(1) %ref.tmp97) #9
  %73 = bitcast %"class.std::allocator.5"* %ref.tmp97 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %73) #9
  %74 = bitcast %struct.timeval* %start to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %74) #9
  %75 = bitcast %struct.timeval* %end to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %75) #9
  %call102 = call i32 @gettimeofday(%struct.timeval* %start, i8* null) #9
  invoke void @_Z18calculate_jacobianIXadL_Z15gmm_objective_bEEEvR8GMMInputR9GMMOutput(%struct.GMMInput* nonnull align 8 dereferenceable(128) %input, %struct.GMMOutput* nonnull align 8 dereferenceable(32) %result)
          to label %invoke.cont104 unwind label %lpad103

invoke.cont104:                                   ; preds = %invoke.cont99
  %call105 = call i32 @gettimeofday(%struct.timeval* %end, i8* null) #9
  %call106 = call fast float @_Z5tdiffP7timevalS0_(%struct.timeval* %start, %struct.timeval* %end)
  %conv107 = fpext float %call106 to double
  %call109 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0), double %conv107)
          to label %invoke.cont108 unwind label %lpad103

invoke.cont108:                                   ; preds = %invoke.cont104
  %76 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %76) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond110

for.cond110:                                      ; preds = %for.inc, %invoke.cont108
  %77 = load i32, i32* %i, align 4, !tbaa !20
  %cmp111 = icmp ult i32 %77, 5
  br i1 %cmp111, label %for.body113, label %for.cond.cleanup112

for.cond.cleanup112:                              ; preds = %for.cond110
  store i32 4, i32* %cleanup.dest.slot, align 4
  %78 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %78) #9
  br label %for.end

lpad84:                                           ; preds = %invoke.cont81
  %79 = landingpad { i8*, i32 }
          cleanup
  %80 = extractvalue { i8*, i32 } %79, 0
  store i8* %80, i8** %exn.slot, align 8
  %81 = extractvalue { i8*, i32 } %79, 1
  store i32 %81, i32* %ehselector.slot, align 4
  br label %ehcleanup91

lpad88:                                           ; preds = %invoke.cont85
  %82 = landingpad { i8*, i32 }
          cleanup
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %exn.slot, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp83) #9
  br label %ehcleanup91

ehcleanup91:                                      ; preds = %lpad88, %lpad84
  %85 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp83 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %85) #9
  br label %ehcleanup128

lpad98:                                           ; preds = %invoke.cont89
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %exn.slot, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.6"*)* @_ZN9__gnu_cxx13new_allocatorIdED2Ev to void (%"class.std::allocator.5"*)*)(%"class.std::allocator.5"* nonnull dereferenceable(1) %ref.tmp97) #9
  %89 = bitcast %"class.std::allocator.5"* %ref.tmp97 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %89) #9
  br label %ehcleanup126

lpad103:                                          ; preds = %for.end, %invoke.cont104, %invoke.cont99
  %90 = landingpad { i8*, i32 }
          cleanup
  %91 = extractvalue { i8*, i32 } %90, 0
  store i8* %91, i8** %exn.slot, align 8
  %92 = extractvalue { i8*, i32 } %90, 1
  store i32 %92, i32* %ehselector.slot, align 4
  br label %ehcleanup123

for.body113:                                      ; preds = %for.cond110
  %gradient114 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %result, i32 0, i32 1
  %93 = load i32, i32* %i, align 4, !tbaa !20
  %conv115 = zext i32 %93 to i64
  %call116 = call nonnull align 8 dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient114, i64 %conv115) #9
  %94 = load double, double* %call116, align 8, !tbaa !44
  %call119 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), double %94)
          to label %invoke.cont118 unwind label %lpad117

invoke.cont118:                                   ; preds = %for.body113
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont118
  %95 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add i32 %95, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond110, !llvm.loop !45

lpad117:                                          ; preds = %for.body113
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %exn.slot, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %ehselector.slot, align 4
  %99 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %99) #9
  br label %ehcleanup123

for.end:                                          ; preds = %for.cond.cleanup112
  %call122 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
          to label %invoke.cont121 unwind label %lpad103

invoke.cont121:                                   ; preds = %for.end
  %100 = bitcast %struct.timeval* %end to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %100) #9
  %101 = bitcast %struct.timeval* %start to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %101) #9
  call void @_ZN9GMMOutputD2Ev(%struct.GMMOutput* nonnull dereferenceable(32) %result) #9
  %102 = bitcast %struct.GMMOutput* %result to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %102) #9
  %103 = bitcast i32* %Jcols to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %103) #9
  call void @_ZN8GMMInputD2Ev(%struct.GMMInput* nonnull dereferenceable(128) %input) #9
  %104 = bitcast %struct.GMMInput* %input to i8*
  call void @llvm.lifetime.end.p0i8(i64 128, i8* %104) #9
  %105 = bitcast %struct.GMMInput* %input130 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* %105) #9
  call void @_ZN8GMMInputC2Ev(%struct.GMMInput* nonnull dereferenceable(128) %input130) #9
  %106 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp131 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %106) #9
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp131, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path)
          to label %invoke.cont133 unwind label %lpad132

invoke.cont133:                                   ; preds = %invoke.cont121
  %d134 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i32 0, i32 0
  %k135 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i32 0, i32 1
  %n136 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i32 0, i32 2
  %alphas137 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i32 0, i32 3
  %means138 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i32 0, i32 4
  %icf139 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i32 0, i32 5
  %x140 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i32 0, i32 6
  %wishart141 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i32 0, i32 7
  %replicate_point142 = getelementptr inbounds %struct.GMMParameters, %struct.GMMParameters* %params, i32 0, i32 0
  %107 = load i8, i8* %replicate_point142, align 1, !tbaa !34, !range !27
  %tobool143 = trunc i8 %107 to i1
  invoke void @_Z17read_gmm_instanceRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiS7_S7_RSt6vectorIdSaIdEESB_SB_SB_R7Wishartb(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp131, i32* %d134, i32* %k135, i32* %n136, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %alphas137, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %means138, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %icf139, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %x140, %struct.Wishart* nonnull align 8 dereferenceable(16) %wishart141, i1 zeroext %tobool143)
          to label %invoke.cont145 unwind label %lpad144

invoke.cont145:                                   ; preds = %invoke.cont133
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp131) #9
  %108 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp131 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %108) #9
  %109 = bitcast i32* %Jcols148 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %109) #9
  %k149 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i32 0, i32 1
  %110 = load i32, i32* %k149, align 4, !tbaa !36
  %d150 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i32 0, i32 0
  %111 = load i32, i32* %d150, align 8, !tbaa !41
  %add151 = add nsw i32 %111, 1
  %mul152 = mul nsw i32 %110, %add151
  %d153 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input130, i32 0, i32 0
  %112 = load i32, i32* %d153, align 8, !tbaa !41
  %add154 = add nsw i32 %112, 2
  %mul155 = mul nsw i32 %mul152, %add154
  %div156 = sdiv i32 %mul155, 2
  store i32 %div156, i32* %Jcols148, align 4, !tbaa !20
  %113 = bitcast %struct.GMMOutput* %result157 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %113) #9
  %objective158 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %result157, i32 0, i32 0
  store double 0.000000e+00, double* %objective158, align 8, !tbaa !42
  %gradient159 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %result157, i32 0, i32 1
  %114 = load i32, i32* %Jcols148, align 4, !tbaa !20
  %conv160 = sext i32 %114 to i64
  %115 = bitcast %"class.std::allocator.5"* %ref.tmp161 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %115) #9
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.5"* nonnull dereferenceable(1) %ref.tmp161) #9
  invoke void @_ZNSt6vectorIdSaIdEEC2EmRKS0_(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient159, i64 %conv160, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %ref.tmp161)
          to label %invoke.cont163 unwind label %lpad162

invoke.cont163:                                   ; preds = %invoke.cont145
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.6"*)* @_ZN9__gnu_cxx13new_allocatorIdED2Ev to void (%"class.std::allocator.5"*)*)(%"class.std::allocator.5"* nonnull dereferenceable(1) %ref.tmp161) #9
  %116 = bitcast %"class.std::allocator.5"* %ref.tmp161 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %116) #9
  %117 = bitcast %struct.timeval* %start166 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %117) #9
  %118 = bitcast %struct.timeval* %end167 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %118) #9
  %call168 = call i32 @gettimeofday(%struct.timeval* %start166, i8* null) #9
  invoke void @_Z18calculate_jacobianIXadL_Z20adept_dgmm_objectiveEEEvR8GMMInputR9GMMOutput(%struct.GMMInput* nonnull align 8 dereferenceable(128) %input130, %struct.GMMOutput* nonnull align 8 dereferenceable(32) %result157)
          to label %invoke.cont170 unwind label %lpad169

invoke.cont170:                                   ; preds = %invoke.cont163
  %call171 = call i32 @gettimeofday(%struct.timeval* %end167, i8* null) #9
  %call172 = call fast float @_Z5tdiffP7timevalS0_(%struct.timeval* %start166, %struct.timeval* %end167)
  %conv173 = fpext float %call172 to double
  %call175 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.30, i64 0, i64 0), double %conv173)
          to label %invoke.cont174 unwind label %lpad169

invoke.cont174:                                   ; preds = %invoke.cont170
  %119 = bitcast i32* %i176 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %119) #9
  store i32 0, i32* %i176, align 4, !tbaa !20
  br label %for.cond177

for.cond177:                                      ; preds = %for.inc187, %invoke.cont174
  %120 = load i32, i32* %i176, align 4, !tbaa !20
  %cmp178 = icmp ult i32 %120, 5
  br i1 %cmp178, label %for.body180, label %for.cond.cleanup179

for.cond.cleanup179:                              ; preds = %for.cond177
  store i32 7, i32* %cleanup.dest.slot, align 4
  %121 = bitcast i32* %i176 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %121) #9
  br label %for.end190

ehcleanup123:                                     ; preds = %lpad117, %lpad103
  %122 = bitcast %struct.timeval* %end to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %122) #9
  %123 = bitcast %struct.timeval* %start to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %123) #9
  call void @_ZN9GMMOutputD2Ev(%struct.GMMOutput* nonnull dereferenceable(32) %result) #9
  br label %ehcleanup126

ehcleanup126:                                     ; preds = %ehcleanup123, %lpad98
  %124 = bitcast %struct.GMMOutput* %result to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %124) #9
  %125 = bitcast i32* %Jcols to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %125) #9
  br label %ehcleanup128

ehcleanup128:                                     ; preds = %ehcleanup126, %ehcleanup91
  call void @_ZN8GMMInputD2Ev(%struct.GMMInput* nonnull dereferenceable(128) %input) #9
  %126 = bitcast %struct.GMMInput* %input to i8*
  call void @llvm.lifetime.end.p0i8(i64 128, i8* %126) #9
  br label %ehcleanup279

lpad132:                                          ; preds = %invoke.cont121
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = extractvalue { i8*, i32 } %127, 0
  store i8* %128, i8** %exn.slot, align 8
  %129 = extractvalue { i8*, i32 } %127, 1
  store i32 %129, i32* %ehselector.slot, align 4
  br label %ehcleanup147

lpad144:                                          ; preds = %invoke.cont133
  %130 = landingpad { i8*, i32 }
          cleanup
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %exn.slot, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp131) #9
  br label %ehcleanup147

ehcleanup147:                                     ; preds = %lpad144, %lpad132
  %133 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp131 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %133) #9
  br label %ehcleanup207

lpad162:                                          ; preds = %invoke.cont145
  %134 = landingpad { i8*, i32 }
          cleanup
  %135 = extractvalue { i8*, i32 } %134, 0
  store i8* %135, i8** %exn.slot, align 8
  %136 = extractvalue { i8*, i32 } %134, 1
  store i32 %136, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.6"*)* @_ZN9__gnu_cxx13new_allocatorIdED2Ev to void (%"class.std::allocator.5"*)*)(%"class.std::allocator.5"* nonnull dereferenceable(1) %ref.tmp161) #9
  %137 = bitcast %"class.std::allocator.5"* %ref.tmp161 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %137) #9
  br label %ehcleanup205

lpad169:                                          ; preds = %for.end190, %invoke.cont170, %invoke.cont163
  %138 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast (i8** @_ZTISt9bad_alloc to i8*)
  %139 = extractvalue { i8*, i32 } %138, 0
  store i8* %139, i8** %exn.slot, align 8
  %140 = extractvalue { i8*, i32 } %138, 1
  store i32 %140, i32* %ehselector.slot, align 4
  br label %ehcleanup193

for.body180:                                      ; preds = %for.cond177
  %gradient181 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %result157, i32 0, i32 1
  %141 = load i32, i32* %i176, align 4, !tbaa !20
  %conv182 = zext i32 %141 to i64
  %call183 = call nonnull align 8 dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient181, i64 %conv182) #9
  %142 = load double, double* %call183, align 8, !tbaa !44
  %call186 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), double %142)
          to label %invoke.cont185 unwind label %lpad184

invoke.cont185:                                   ; preds = %for.body180
  br label %for.inc187

for.inc187:                                       ; preds = %invoke.cont185
  %143 = load i32, i32* %i176, align 4, !tbaa !20
  %inc188 = add i32 %143, 1
  store i32 %inc188, i32* %i176, align 4, !tbaa !20
  br label %for.cond177, !llvm.loop !46

lpad184:                                          ; preds = %for.body180
  %144 = landingpad { i8*, i32 }
          cleanup
          catch i8* bitcast (i8** @_ZTISt9bad_alloc to i8*)
  %145 = extractvalue { i8*, i32 } %144, 0
  store i8* %145, i8** %exn.slot, align 8
  %146 = extractvalue { i8*, i32 } %144, 1
  store i32 %146, i32* %ehselector.slot, align 4
  %147 = bitcast i32* %i176 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %147) #9
  br label %ehcleanup193

for.end190:                                       ; preds = %for.cond.cleanup179
  %call192 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
          to label %invoke.cont191 unwind label %lpad169

invoke.cont191:                                   ; preds = %for.end190
  %148 = bitcast %struct.timeval* %end167 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %148) #9
  %149 = bitcast %struct.timeval* %start166 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %149) #9
  br label %try.cont

ehcleanup193:                                     ; preds = %lpad184, %lpad169
  %150 = bitcast %struct.timeval* %end167 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %150) #9
  %151 = bitcast %struct.timeval* %start166 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %151) #9
  br label %catch.dispatch

catch.dispatch:                                   ; preds = %ehcleanup193
  %sel = load i32, i32* %ehselector.slot, align 4
  %152 = call i32 @llvm.eh.typeid.for(i8* bitcast (i8** @_ZTISt9bad_alloc to i8*)) #9
  %matches = icmp eq i32 %sel, %152
  br i1 %matches, label %catch, label %ehcleanup204

catch:                                            ; preds = %catch.dispatch
  %153 = bitcast %"class.std::bad_alloc"* %0 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %153) #9
  %exn = load i8*, i8** %exn.slot, align 8
  %154 = call i8* @__cxa_get_exception_ptr(i8* %exn) #9
  %155 = bitcast i8* %154 to %"class.std::bad_alloc"*
  call void @_ZNSt9bad_allocC2ERKS_(%"class.std::bad_alloc"* nonnull dereferenceable(8) %0, %"class.std::bad_alloc"* nonnull align 8 dereferenceable(8) %155) #9
  %156 = call i8* @__cxa_begin_catch(i8* %exn) #9
  %call197 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i64 0, i64 0))
          to label %invoke.cont196 unwind label %lpad195

invoke.cont196:                                   ; preds = %catch
  call void @_ZNSt9bad_allocD1Ev(%"class.std::bad_alloc"* nonnull dereferenceable(8) %0) #9
  invoke void @__cxa_end_catch()
          to label %invoke.cont200 unwind label %lpad199

invoke.cont200:                                   ; preds = %invoke.cont196
  %157 = bitcast %"class.std::bad_alloc"* %0 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %157) #9
  br label %try.cont

try.cont:                                         ; preds = %invoke.cont200, %invoke.cont191
  call void @_ZN9GMMOutputD2Ev(%struct.GMMOutput* nonnull dereferenceable(32) %result157) #9
  %158 = bitcast %struct.GMMOutput* %result157 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %158) #9
  %159 = bitcast i32* %Jcols148 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %159) #9
  call void @_ZN8GMMInputD2Ev(%struct.GMMInput* nonnull dereferenceable(128) %input130) #9
  %160 = bitcast %struct.GMMInput* %input130 to i8*
  call void @llvm.lifetime.end.p0i8(i64 128, i8* %160) #9
  %161 = bitcast %struct.GMMInput* %input209 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* %161) #9
  call void @_ZN8GMMInputC2Ev(%struct.GMMInput* nonnull dereferenceable(128) %input209) #9
  %162 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp210 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %162) #9
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp210, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.26, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %path)
          to label %invoke.cont212 unwind label %lpad211

invoke.cont212:                                   ; preds = %try.cont
  %d213 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i32 0, i32 0
  %k214 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i32 0, i32 1
  %n215 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i32 0, i32 2
  %alphas216 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i32 0, i32 3
  %means217 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i32 0, i32 4
  %icf218 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i32 0, i32 5
  %x219 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i32 0, i32 6
  %wishart220 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i32 0, i32 7
  %replicate_point221 = getelementptr inbounds %struct.GMMParameters, %struct.GMMParameters* %params, i32 0, i32 0
  %163 = load i8, i8* %replicate_point221, align 1, !tbaa !34, !range !27
  %tobool222 = trunc i8 %163 to i1
  invoke void @_Z17read_gmm_instanceRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPiS7_S7_RSt6vectorIdSaIdEESB_SB_SB_R7Wishartb(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp210, i32* %d213, i32* %k214, i32* %n215, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %alphas216, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %means217, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %icf218, %"class.std::vector.3"* nonnull align 8 dereferenceable(24) %x219, %struct.Wishart* nonnull align 8 dereferenceable(16) %wishart220, i1 zeroext %tobool222)
          to label %invoke.cont224 unwind label %lpad223

invoke.cont224:                                   ; preds = %invoke.cont212
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp210) #9
  %164 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp210 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %164) #9
  %165 = bitcast i32* %Jcols227 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %165) #9
  %k228 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i32 0, i32 1
  %166 = load i32, i32* %k228, align 4, !tbaa !36
  %d229 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i32 0, i32 0
  %167 = load i32, i32* %d229, align 8, !tbaa !41
  %add230 = add nsw i32 %167, 1
  %mul231 = mul nsw i32 %166, %add230
  %d232 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %input209, i32 0, i32 0
  %168 = load i32, i32* %d232, align 8, !tbaa !41
  %add233 = add nsw i32 %168, 2
  %mul234 = mul nsw i32 %mul231, %add233
  %div235 = sdiv i32 %mul234, 2
  store i32 %div235, i32* %Jcols227, align 4, !tbaa !20
  %169 = bitcast %struct.GMMOutput* %result236 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %169) #9
  %objective237 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %result236, i32 0, i32 0
  store double 0.000000e+00, double* %objective237, align 8, !tbaa !42
  %gradient238 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %result236, i32 0, i32 1
  %170 = load i32, i32* %Jcols227, align 4, !tbaa !20
  %conv239 = sext i32 %170 to i64
  %171 = bitcast %"class.std::allocator.5"* %ref.tmp240 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %171) #9
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.5"* nonnull dereferenceable(1) %ref.tmp240) #9
  invoke void @_ZNSt6vectorIdSaIdEEC2EmRKS0_(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient238, i64 %conv239, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %ref.tmp240)
          to label %invoke.cont242 unwind label %lpad241

invoke.cont242:                                   ; preds = %invoke.cont224
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.6"*)* @_ZN9__gnu_cxx13new_allocatorIdED2Ev to void (%"class.std::allocator.5"*)*)(%"class.std::allocator.5"* nonnull dereferenceable(1) %ref.tmp240) #9
  %172 = bitcast %"class.std::allocator.5"* %ref.tmp240 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %172) #9
  %173 = bitcast %struct.timeval* %start245 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %173) #9
  %174 = bitcast %struct.timeval* %end246 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %174) #9
  %call247 = call i32 @gettimeofday(%struct.timeval* %start245, i8* null) #9
  invoke void @_Z18calculate_jacobianIXadL_Z14dgmm_objectiveEEEvR8GMMInputR9GMMOutput(%struct.GMMInput* nonnull align 8 dereferenceable(128) %input209, %struct.GMMOutput* nonnull align 8 dereferenceable(32) %result236)
          to label %invoke.cont249 unwind label %lpad248

invoke.cont249:                                   ; preds = %invoke.cont242
  %call250 = call i32 @gettimeofday(%struct.timeval* %end246, i8* null) #9
  %call251 = call fast float @_Z5tdiffP7timevalS0_(%struct.timeval* %start245, %struct.timeval* %end246)
  %conv252 = fpext float %call251 to double
  %call254 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0), double %conv252)
          to label %invoke.cont253 unwind label %lpad248

invoke.cont253:                                   ; preds = %invoke.cont249
  %175 = bitcast i32* %i255 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %175) #9
  store i32 0, i32* %i255, align 4, !tbaa !20
  br label %for.cond256

for.cond256:                                      ; preds = %for.inc266, %invoke.cont253
  %176 = load i32, i32* %i255, align 4, !tbaa !20
  %cmp257 = icmp ult i32 %176, 5
  br i1 %cmp257, label %for.body259, label %for.cond.cleanup258

for.cond.cleanup258:                              ; preds = %for.cond256
  store i32 10, i32* %cleanup.dest.slot, align 4
  %177 = bitcast i32* %i255 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %177) #9
  br label %for.end269

lpad195:                                          ; preds = %catch
  %178 = landingpad { i8*, i32 }
          cleanup
  %179 = extractvalue { i8*, i32 } %178, 0
  store i8* %179, i8** %exn.slot, align 8
  %180 = extractvalue { i8*, i32 } %178, 1
  store i32 %180, i32* %ehselector.slot, align 4
  call void @_ZNSt9bad_allocD1Ev(%"class.std::bad_alloc"* nonnull dereferenceable(8) %0) #9
  invoke void @__cxa_end_catch()
          to label %invoke.cont202 unwind label %terminate.lpad

lpad199:                                          ; preds = %invoke.cont196
  %181 = landingpad { i8*, i32 }
          cleanup
  %182 = extractvalue { i8*, i32 } %181, 0
  store i8* %182, i8** %exn.slot, align 8
  %183 = extractvalue { i8*, i32 } %181, 1
  store i32 %183, i32* %ehselector.slot, align 4
  br label %ehcleanup203

invoke.cont202:                                   ; preds = %lpad195
  br label %ehcleanup203

ehcleanup203:                                     ; preds = %invoke.cont202, %lpad199
  %184 = bitcast %"class.std::bad_alloc"* %0 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %184) #9
  br label %ehcleanup204

ehcleanup204:                                     ; preds = %ehcleanup203, %catch.dispatch
  call void @_ZN9GMMOutputD2Ev(%struct.GMMOutput* nonnull dereferenceable(32) %result157) #9
  br label %ehcleanup205

ehcleanup205:                                     ; preds = %ehcleanup204, %lpad162
  %185 = bitcast %struct.GMMOutput* %result157 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %185) #9
  %186 = bitcast i32* %Jcols148 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %186) #9
  br label %ehcleanup207

ehcleanup207:                                     ; preds = %ehcleanup205, %ehcleanup147
  call void @_ZN8GMMInputD2Ev(%struct.GMMInput* nonnull dereferenceable(128) %input130) #9
  %187 = bitcast %struct.GMMInput* %input130 to i8*
  call void @llvm.lifetime.end.p0i8(i64 128, i8* %187) #9
  br label %ehcleanup279

lpad211:                                          ; preds = %try.cont
  %188 = landingpad { i8*, i32 }
          cleanup
  %189 = extractvalue { i8*, i32 } %188, 0
  store i8* %189, i8** %exn.slot, align 8
  %190 = extractvalue { i8*, i32 } %188, 1
  store i32 %190, i32* %ehselector.slot, align 4
  br label %ehcleanup226

lpad223:                                          ; preds = %invoke.cont212
  %191 = landingpad { i8*, i32 }
          cleanup
  %192 = extractvalue { i8*, i32 } %191, 0
  store i8* %192, i8** %exn.slot, align 8
  %193 = extractvalue { i8*, i32 } %191, 1
  store i32 %193, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp210) #9
  br label %ehcleanup226

ehcleanup226:                                     ; preds = %lpad223, %lpad211
  %194 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp210 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %194) #9
  br label %ehcleanup277

lpad241:                                          ; preds = %invoke.cont224
  %195 = landingpad { i8*, i32 }
          cleanup
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %exn.slot, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.6"*)* @_ZN9__gnu_cxx13new_allocatorIdED2Ev to void (%"class.std::allocator.5"*)*)(%"class.std::allocator.5"* nonnull dereferenceable(1) %ref.tmp240) #9
  %198 = bitcast %"class.std::allocator.5"* %ref.tmp240 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %198) #9
  br label %ehcleanup275

lpad248:                                          ; preds = %for.end269, %invoke.cont249, %invoke.cont242
  %199 = landingpad { i8*, i32 }
          cleanup
  %200 = extractvalue { i8*, i32 } %199, 0
  store i8* %200, i8** %exn.slot, align 8
  %201 = extractvalue { i8*, i32 } %199, 1
  store i32 %201, i32* %ehselector.slot, align 4
  br label %ehcleanup272

for.body259:                                      ; preds = %for.cond256
  %gradient260 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %result236, i32 0, i32 1
  %202 = load i32, i32* %i255, align 4, !tbaa !20
  %conv261 = zext i32 %202 to i64
  %call262 = call nonnull align 8 dereferenceable(8) double* @_ZNSt6vectorIdSaIdEEixEm(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient260, i64 %conv261) #9
  %203 = load double, double* %call262, align 8, !tbaa !44
  %call265 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), double %203)
          to label %invoke.cont264 unwind label %lpad263

invoke.cont264:                                   ; preds = %for.body259
  br label %for.inc266

for.inc266:                                       ; preds = %invoke.cont264
  %204 = load i32, i32* %i255, align 4, !tbaa !20
  %inc267 = add i32 %204, 1
  store i32 %inc267, i32* %i255, align 4, !tbaa !20
  br label %for.cond256, !llvm.loop !47

lpad263:                                          ; preds = %for.body259
  %205 = landingpad { i8*, i32 }
          cleanup
  %206 = extractvalue { i8*, i32 } %205, 0
  store i8* %206, i8** %exn.slot, align 8
  %207 = extractvalue { i8*, i32 } %205, 1
  store i32 %207, i32* %ehselector.slot, align 4
  %208 = bitcast i32* %i255 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %208) #9
  br label %ehcleanup272

for.end269:                                       ; preds = %for.cond.cleanup258
  %call271 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
          to label %invoke.cont270 unwind label %lpad248

invoke.cont270:                                   ; preds = %for.end269
  %209 = bitcast %struct.timeval* %end246 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %209) #9
  %210 = bitcast %struct.timeval* %start245 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %210) #9
  call void @_ZN9GMMOutputD2Ev(%struct.GMMOutput* nonnull dereferenceable(32) %result236) #9
  %211 = bitcast %struct.GMMOutput* %result236 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %211) #9
  %212 = bitcast i32* %Jcols227 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %212) #9
  call void @_ZN8GMMInputD2Ev(%struct.GMMInput* nonnull dereferenceable(128) %input209) #9
  %213 = bitcast %struct.GMMInput* %input209 to i8*
  call void @llvm.lifetime.end.p0i8(i64 128, i8* %213) #9
  store i32 0, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %invoke.cont270, %if.then
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %path) #9
  %214 = bitcast %"class.std::__cxx11::basic_string"* %path to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %214) #9
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 3, label %for.inc282
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc282

for.inc282:                                       ; preds = %cleanup.cont, %cleanup
  %call283 = call nonnull align 8 dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %__begin1) #9
  br label %for.cond, !llvm.loop !48

ehcleanup272:                                     ; preds = %lpad263, %lpad248
  %215 = bitcast %struct.timeval* %end246 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %215) #9
  %216 = bitcast %struct.timeval* %start245 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %216) #9
  call void @_ZN9GMMOutputD2Ev(%struct.GMMOutput* nonnull dereferenceable(32) %result236) #9
  br label %ehcleanup275

ehcleanup275:                                     ; preds = %ehcleanup272, %lpad241
  %217 = bitcast %struct.GMMOutput* %result236 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %217) #9
  %218 = bitcast i32* %Jcols227 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %218) #9
  br label %ehcleanup277

ehcleanup277:                                     ; preds = %ehcleanup275, %ehcleanup226
  call void @_ZN8GMMInputD2Ev(%struct.GMMInput* nonnull dereferenceable(128) %input209) #9
  %219 = bitcast %struct.GMMInput* %input209 to i8*
  call void @llvm.lifetime.end.p0i8(i64 128, i8* %219) #9
  br label %ehcleanup279

ehcleanup279:                                     ; preds = %ehcleanup277, %ehcleanup207, %ehcleanup128, %lpad66
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %path) #9
  br label %ehcleanup281

ehcleanup281:                                     ; preds = %ehcleanup279, %lpad64
  %220 = bitcast %"class.std::__cxx11::basic_string"* %path to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %220) #9
  %221 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__end1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %221) #9
  %222 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__begin1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %222) #9
  %223 = bitcast %"class.std::vector"** %__range1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %223) #9
  br label %ehcleanup291

for.end290:                                       ; preds = %for.cond.cleanup
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull dereferenceable(24) %paths) #9
  %224 = bitcast %"class.std::vector"* %paths to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %224) #9
  %225 = bitcast %struct.GMMParameters* %params to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %225) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %replicate_point) #9
  %226 = load i32, i32* %retval, align 4
  ret i32 %226

ehcleanup291:                                     ; preds = %ehcleanup281, %ehcleanup57, %ehcleanup48, %ehcleanup39
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull dereferenceable(24) %paths) #9
  %227 = bitcast %"class.std::vector"* %paths to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %227) #9
  %228 = bitcast %struct.GMMParameters* %params to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %228) #9
  br label %ehcleanup294

ehcleanup294:                                     ; preds = %ehcleanup291, %cleanup.done30
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %replicate_point) #9
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup294
  %exn295 = load i8*, i8** %exn.slot, align 8
  %sel296 = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn295, 0
  %lpad.val297 = insertvalue { i8*, i32 } %lpad.val, i32 %sel296, 1
  resume { i8*, i32 } %lpad.val297

terminate.lpad:                                   ; preds = %lpad195
  %229 = landingpad { i8*, i32 }
          catch i8* null
  %230 = extractvalue { i8*, i32 } %229, 0
  call void @__clang_call_terminate(i8* %230) #29
  unreachable

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZSteqIcSt11char_traitsIcESaIcEEbRKNSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__lhs, i8* %__rhs) #12 comdat {
entry:
  %__lhs.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__rhs.addr = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %__lhs, %"class.std::__cxx11::basic_string"** %__lhs.addr, align 8, !tbaa !2
  store i8* %__rhs, i8** %__rhs.addr, align 8, !tbaa !2
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__lhs.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %__rhs.addr, align 8, !tbaa !2
  %call = call i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %0, i8* %1) #9
  %cmp = icmp eq i32 %call, 0
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev(%"class.std::vector"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %0) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv(%"class.std::vector"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %1, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %retval, %"class.std::__cxx11::basic_string"** nonnull align 8 dereferenceable(8) %_M_start) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %retval, i32 0, i32 0
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %coerce.dive, align 8
  ret %"class.std::__cxx11::basic_string"* %2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv(%"class.std::vector"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %1, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %retval, %"class.std::__cxx11::basic_string"** nonnull align 8 dereferenceable(8) %_M_finish) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %retval, i32 0, i32 0
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %coerce.dive, align 8
  ret %"class.std::__cxx11::basic_string"* %2
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxxneIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEEbRKNS_17__normal_iteratorIT_T0_EESG_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %__rhs) #12 comdat {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %__lhs, %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, align 8, !tbaa !2
  store %"class.__gnu_cxx::__normal_iterator"* %__rhs, %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, align 8, !tbaa !2
  %0 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(8) %"class.std::__cxx11::basic_string"** @_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %0) #9
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %call, align 8, !tbaa !2
  %2 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(8) %"class.std::__cxx11::basic_string"** @_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %2) #9
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %call1, align 8, !tbaa !2
  %cmp = icmp ne %"class.std::__cxx11::basic_string"* %1, %3
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_current, align 8, !tbaa !49
  ret %"class.std::__cxx11::basic_string"* %0
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN8GMMInputC2Ev(%struct.GMMInput* nonnull dereferenceable(128) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %struct.GMMInput*, align 8
  store %struct.GMMInput* %this, %struct.GMMInput** %this.addr, align 8, !tbaa !2
  %this1 = load %struct.GMMInput*, %struct.GMMInput** %this.addr, align 8
  %alphas = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %this1, i32 0, i32 3
  call void @_ZNSt6vectorIdSaIdEEC2Ev(%"class.std::vector.3"* nonnull dereferenceable(24) %alphas) #9
  %means = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %this1, i32 0, i32 4
  call void @_ZNSt6vectorIdSaIdEEC2Ev(%"class.std::vector.3"* nonnull dereferenceable(24) %means) #9
  %icf = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %this1, i32 0, i32 5
  call void @_ZNSt6vectorIdSaIdEEC2Ev(%"class.std::vector.3"* nonnull dereferenceable(24) %icf) #9
  %x = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %this1, i32 0, i32 6
  call void @_ZNSt6vectorIdSaIdEEC2Ev(%"class.std::vector.3"* nonnull dereferenceable(24) %x) #9
  %wishart = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %this1, i32 0, i32 7
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, i8* %__lhs, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__rhs) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %__lhs.addr = alloca i8*, align 8
  %__rhs.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__len = alloca i64, align 8
  %nrvo = alloca i1, align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store i8* %__lhs, i8** %__lhs.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__rhs, %"class.std::__cxx11::basic_string"** %__rhs.addr, align 8, !tbaa !2
  %1 = bitcast i64* %__len to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load i8*, i8** %__lhs.addr, align 8, !tbaa !2
  %call = call i64 @_ZNSt11char_traitsIcE6lengthEPKc(i8* %2)
  store i64 %call, i64* %__len, align 8, !tbaa !13
  store i1 false, i1* %nrvo, align 1
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result) #9
  %3 = load i64, i64* %__len, align 8, !tbaa !13
  %4 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__rhs.addr, align 8, !tbaa !2
  %call1 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %4) #9
  %add = add i64 %3, %call1
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i64 %add)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %5 = load i8*, i8** %__lhs.addr, align 8, !tbaa !2
  %6 = load i64, i64* %__len, align 8, !tbaa !13
  %call3 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* %5, i64 %6)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %invoke.cont
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__rhs.addr, align 8, !tbaa !2
  %call5 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %7)
          to label %invoke.cont4 unwind label %lpad

invoke.cont4:                                     ; preds = %invoke.cont2
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused

lpad:                                             ; preds = %invoke.cont2, %invoke.cont, %entry
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result) #9
  %11 = bitcast i64* %__len to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #9
  br label %eh.resume

nrvo.unused:                                      ; preds = %invoke.cont4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result) #9
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %invoke.cont4
  %12 = bitcast i64* %__len to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #9
  ret void

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val6 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val6
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSaIdEC2Ev(%"class.std::allocator.5"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %this, %"class.std::allocator.5"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.5"* %this1 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIdEC2Ev(%"class.__gnu_cxx::new_allocator.6"* nonnull dereferenceable(1) %0) #9
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEEC2EmRKS0_(%"class.std::vector.3"* nonnull dereferenceable(24) %this, i64 %__n, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %__n.addr = alloca i64, align 8
  %__a.addr = alloca %"class.std::allocator.5"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store %"class.std::allocator.5"* %__a, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %2 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %call = call i64 @_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_(i64 %1, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %2)
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %0, i64 %call, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %3)
  %4 = load i64, i64* %__n.addr, align 8, !tbaa !13
  invoke void @_ZNSt6vectorIdSaIdEE21_M_default_initializeEm(%"class.std::vector.3"* nonnull dereferenceable(24) %this1, i64 %4)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  store i8* %6, i8** %exn.slot, align 8
  %7 = extractvalue { i8*, i32 } %5, 1
  store i32 %7, i32* %ehselector.slot, align 4
  %8 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %8) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIdED2Ev(%"class.__gnu_cxx::new_allocator.6"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %this, %"class.__gnu_cxx::new_allocator.6"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timeval*, i8*) #4

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_Z18calculate_jacobianIXadL_Z15gmm_objective_bEEEvR8GMMInputR9GMMOutput(%struct.GMMInput* nonnull align 8 dereferenceable(128) %input, %struct.GMMOutput* nonnull align 8 dereferenceable(32) %result) #0 comdat {
entry:
  %input.addr = alloca %struct.GMMInput*, align 8
  %result.addr = alloca %struct.GMMOutput*, align 8
  %alphas_gradient_part = alloca double*, align 8
  %means_gradient_part = alloca double*, align 8
  %icf_gradient_part = alloca double*, align 8
  %tmp = alloca double, align 8
  %errb = alloca double, align 8
  %agg.tmp = alloca %struct.Wishart, align 8
  store %struct.GMMInput* %input, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  store %struct.GMMOutput* %result, %struct.GMMOutput** %result.addr, align 8, !tbaa !2
  %0 = bitcast double** %alphas_gradient_part to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = load %struct.GMMOutput*, %struct.GMMOutput** %result.addr, align 8, !tbaa !2
  %gradient = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %1, i32 0, i32 1
  %call = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient) #9
  store double* %call, double** %alphas_gradient_part, align 8, !tbaa !2
  %2 = bitcast double** %means_gradient_part to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %3 = load %struct.GMMOutput*, %struct.GMMOutput** %result.addr, align 8, !tbaa !2
  %gradient1 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %3, i32 0, i32 1
  %call2 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient1) #9
  %4 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %alphas = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %4, i32 0, i32 3
  %call3 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %alphas) #9
  %add.ptr = getelementptr inbounds double, double* %call2, i64 %call3
  store double* %add.ptr, double** %means_gradient_part, align 8, !tbaa !2
  %5 = bitcast double** %icf_gradient_part to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %6 = load %struct.GMMOutput*, %struct.GMMOutput** %result.addr, align 8, !tbaa !2
  %gradient4 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %6, i32 0, i32 1
  %call5 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient4) #9
  %7 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %alphas6 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %7, i32 0, i32 3
  %call7 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %alphas6) #9
  %add.ptr8 = getelementptr inbounds double, double* %call5, i64 %call7
  %8 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %means = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %8, i32 0, i32 4
  %call9 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %means) #9
  %add.ptr10 = getelementptr inbounds double, double* %add.ptr8, i64 %call9
  store double* %add.ptr10, double** %icf_gradient_part, align 8, !tbaa !2
  %9 = bitcast double* %tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #9
  store double 0.000000e+00, double* %tmp, align 8, !tbaa !44
  %10 = bitcast double* %errb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #9
  store double 1.000000e+00, double* %errb, align 8, !tbaa !44
  %11 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %d = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %11, i32 0, i32 0
  %12 = load i32, i32* %d, align 8, !tbaa !41
  %13 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %k = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %13, i32 0, i32 1
  %14 = load i32, i32* %k, align 4, !tbaa !36
  %15 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %n = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %15, i32 0, i32 2
  %16 = load i32, i32* %n, align 8, !tbaa !51
  %17 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %alphas11 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %17, i32 0, i32 3
  %call12 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %alphas11) #9
  %18 = load double*, double** %alphas_gradient_part, align 8, !tbaa !2
  %19 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %means13 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %19, i32 0, i32 4
  %call14 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %means13) #9
  %20 = load double*, double** %means_gradient_part, align 8, !tbaa !2
  %21 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %icf = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %21, i32 0, i32 5
  %call15 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %icf) #9
  %22 = load double*, double** %icf_gradient_part, align 8, !tbaa !2
  %23 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %x = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %23, i32 0, i32 6
  %call16 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %x) #9
  %24 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %wishart = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %24, i32 0, i32 7
  %25 = bitcast %struct.Wishart* %agg.tmp to i8*
  %26 = bitcast %struct.Wishart* %wishart to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !tbaa.struct !52
  call void @gmm_objective_b(i32 %12, i32 %14, i32 %16, double* %call12, double* %18, double* %call14, double* %20, double* %call15, double* %22, double* %call16, %struct.Wishart* byval(%struct.Wishart) align 8 %agg.tmp, double* %tmp, double* %errb)
  %27 = bitcast double* %errb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #9
  %28 = bitcast double* %tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #9
  %29 = bitcast double** %icf_gradient_part to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #9
  %30 = bitcast double** %means_gradient_part to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #9
  %31 = bitcast double** %alphas_gradient_part to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31) #9
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN9GMMOutputD2Ev(%struct.GMMOutput* nonnull dereferenceable(32) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %struct.GMMOutput*, align 8
  store %struct.GMMOutput* %this, %struct.GMMOutput** %this.addr, align 8, !tbaa !2
  %this1 = load %struct.GMMOutput*, %struct.GMMOutput** %this.addr, align 8
  %gradient = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %this1, i32 0, i32 1
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient) #9
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN8GMMInputD2Ev(%struct.GMMInput* nonnull dereferenceable(128) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %struct.GMMInput*, align 8
  store %struct.GMMInput* %this, %struct.GMMInput** %this.addr, align 8, !tbaa !2
  %this1 = load %struct.GMMInput*, %struct.GMMInput** %this.addr, align 8
  %x = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %this1, i32 0, i32 6
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.3"* nonnull dereferenceable(24) %x) #9
  %icf = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %this1, i32 0, i32 5
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.3"* nonnull dereferenceable(24) %icf) #9
  %means = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %this1, i32 0, i32 4
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.3"* nonnull dereferenceable(24) %means) #9
  %alphas = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %this1, i32 0, i32 3
  call void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.3"* nonnull dereferenceable(24) %alphas) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_Z18calculate_jacobianIXadL_Z20adept_dgmm_objectiveEEEvR8GMMInputR9GMMOutput(%struct.GMMInput* nonnull align 8 dereferenceable(128) %input, %struct.GMMOutput* nonnull align 8 dereferenceable(32) %result) #0 comdat {
entry:
  %input.addr = alloca %struct.GMMInput*, align 8
  %result.addr = alloca %struct.GMMOutput*, align 8
  %alphas_gradient_part = alloca double*, align 8
  %means_gradient_part = alloca double*, align 8
  %icf_gradient_part = alloca double*, align 8
  %tmp = alloca double, align 8
  %errb = alloca double, align 8
  %agg.tmp = alloca %struct.Wishart, align 8
  store %struct.GMMInput* %input, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  store %struct.GMMOutput* %result, %struct.GMMOutput** %result.addr, align 8, !tbaa !2
  %0 = bitcast double** %alphas_gradient_part to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = load %struct.GMMOutput*, %struct.GMMOutput** %result.addr, align 8, !tbaa !2
  %gradient = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %1, i32 0, i32 1
  %call = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient) #9
  store double* %call, double** %alphas_gradient_part, align 8, !tbaa !2
  %2 = bitcast double** %means_gradient_part to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %3 = load %struct.GMMOutput*, %struct.GMMOutput** %result.addr, align 8, !tbaa !2
  %gradient1 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %3, i32 0, i32 1
  %call2 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient1) #9
  %4 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %alphas = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %4, i32 0, i32 3
  %call3 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %alphas) #9
  %add.ptr = getelementptr inbounds double, double* %call2, i64 %call3
  store double* %add.ptr, double** %means_gradient_part, align 8, !tbaa !2
  %5 = bitcast double** %icf_gradient_part to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %6 = load %struct.GMMOutput*, %struct.GMMOutput** %result.addr, align 8, !tbaa !2
  %gradient4 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %6, i32 0, i32 1
  %call5 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient4) #9
  %7 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %alphas6 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %7, i32 0, i32 3
  %call7 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %alphas6) #9
  %add.ptr8 = getelementptr inbounds double, double* %call5, i64 %call7
  %8 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %means = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %8, i32 0, i32 4
  %call9 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %means) #9
  %add.ptr10 = getelementptr inbounds double, double* %add.ptr8, i64 %call9
  store double* %add.ptr10, double** %icf_gradient_part, align 8, !tbaa !2
  %9 = bitcast double* %tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #9
  store double 0.000000e+00, double* %tmp, align 8, !tbaa !44
  %10 = bitcast double* %errb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #9
  store double 1.000000e+00, double* %errb, align 8, !tbaa !44
  %11 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %d = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %11, i32 0, i32 0
  %12 = load i32, i32* %d, align 8, !tbaa !41
  %13 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %k = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %13, i32 0, i32 1
  %14 = load i32, i32* %k, align 4, !tbaa !36
  %15 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %n = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %15, i32 0, i32 2
  %16 = load i32, i32* %n, align 8, !tbaa !51
  %17 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %alphas11 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %17, i32 0, i32 3
  %call12 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %alphas11) #9
  %18 = load double*, double** %alphas_gradient_part, align 8, !tbaa !2
  %19 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %means13 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %19, i32 0, i32 4
  %call14 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %means13) #9
  %20 = load double*, double** %means_gradient_part, align 8, !tbaa !2
  %21 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %icf = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %21, i32 0, i32 5
  %call15 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %icf) #9
  %22 = load double*, double** %icf_gradient_part, align 8, !tbaa !2
  %23 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %x = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %23, i32 0, i32 6
  %call16 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %x) #9
  %24 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %wishart = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %24, i32 0, i32 7
  %25 = bitcast %struct.Wishart* %agg.tmp to i8*
  %26 = bitcast %struct.Wishart* %wishart to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !tbaa.struct !52
  call void @adept_dgmm_objective(i32 %12, i32 %14, i32 %16, double* %call12, double* %18, double* %call14, double* %20, double* %call15, double* %22, double* %call16, %struct.Wishart* byval(%struct.Wishart) align 8 %agg.tmp, double* %tmp, double* %errb)
  %27 = bitcast double* %errb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #9
  %28 = bitcast double* %tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #9
  %29 = bitcast double** %icf_gradient_part to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #9
  %30 = bitcast double** %means_gradient_part to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #9
  %31 = bitcast double** %alphas_gradient_part to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31) #9
  ret void
}

; Function Attrs: nounwind readnone
declare i32 @llvm.eh.typeid.for(i8*) #14

declare dso_local i8* @__cxa_get_exception_ptr(i8*)

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt9bad_allocC2ERKS_(%"class.std::bad_alloc"* nonnull dereferenceable(8) %this, %"class.std::bad_alloc"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::bad_alloc"*, align 8
  %.addr = alloca %"class.std::bad_alloc"*, align 8
  store %"class.std::bad_alloc"* %this, %"class.std::bad_alloc"** %this.addr, align 8, !tbaa !2
  store %"class.std::bad_alloc"* %0, %"class.std::bad_alloc"** %.addr, align 8, !tbaa !2
  %this1 = load %"class.std::bad_alloc"*, %"class.std::bad_alloc"** %this.addr, align 8
  %1 = bitcast %"class.std::bad_alloc"* %this1 to %"class.std::exception"*
  %2 = load %"class.std::bad_alloc"*, %"class.std::bad_alloc"** %.addr, align 8, !tbaa !2
  %3 = bitcast %"class.std::bad_alloc"* %2 to %"class.std::exception"*
  call void @_ZNSt9exceptionC2ERKS_(%"class.std::exception"* nonnull dereferenceable(8) %1, %"class.std::exception"* nonnull align 8 dereferenceable(8) %3) #9
  %4 = bitcast %"class.std::bad_alloc"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !53
  ret void
}

declare dso_local i8* @__cxa_begin_catch(i8*)

; Function Attrs: nounwind
declare dso_local void @_ZNSt9bad_allocD1Ev(%"class.std::bad_alloc"* nonnull dereferenceable(8)) unnamed_addr #4

declare dso_local void @__cxa_end_catch()

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8* %0) #15 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #9
  call void @_ZSt9terminatev() #29
  unreachable
}

declare dso_local void @_ZSt9terminatev()

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_Z18calculate_jacobianIXadL_Z14dgmm_objectiveEEEvR8GMMInputR9GMMOutput(%struct.GMMInput* nonnull align 8 dereferenceable(128) %input, %struct.GMMOutput* nonnull align 8 dereferenceable(32) %result) #8 comdat {
entry:
  %input.addr = alloca %struct.GMMInput*, align 8
  %result.addr = alloca %struct.GMMOutput*, align 8
  %alphas_gradient_part = alloca double*, align 8
  %means_gradient_part = alloca double*, align 8
  %icf_gradient_part = alloca double*, align 8
  %tmp = alloca double, align 8
  %errb = alloca double, align 8
  %agg.tmp = alloca %struct.Wishart, align 8
  store %struct.GMMInput* %input, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  store %struct.GMMOutput* %result, %struct.GMMOutput** %result.addr, align 8, !tbaa !2
  %0 = bitcast double** %alphas_gradient_part to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = load %struct.GMMOutput*, %struct.GMMOutput** %result.addr, align 8, !tbaa !2
  %gradient = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %1, i32 0, i32 1
  %call = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient) #9
  store double* %call, double** %alphas_gradient_part, align 8, !tbaa !2
  %2 = bitcast double** %means_gradient_part to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %3 = load %struct.GMMOutput*, %struct.GMMOutput** %result.addr, align 8, !tbaa !2
  %gradient1 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %3, i32 0, i32 1
  %call2 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient1) #9
  %4 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %alphas = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %4, i32 0, i32 3
  %call3 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %alphas) #9
  %add.ptr = getelementptr inbounds double, double* %call2, i64 %call3
  store double* %add.ptr, double** %means_gradient_part, align 8, !tbaa !2
  %5 = bitcast double** %icf_gradient_part to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %6 = load %struct.GMMOutput*, %struct.GMMOutput** %result.addr, align 8, !tbaa !2
  %gradient4 = getelementptr inbounds %struct.GMMOutput, %struct.GMMOutput* %6, i32 0, i32 1
  %call5 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %gradient4) #9
  %7 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %alphas6 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %7, i32 0, i32 3
  %call7 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %alphas6) #9
  %add.ptr8 = getelementptr inbounds double, double* %call5, i64 %call7
  %8 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %means = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %8, i32 0, i32 4
  %call9 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %means) #9
  %add.ptr10 = getelementptr inbounds double, double* %add.ptr8, i64 %call9
  store double* %add.ptr10, double** %icf_gradient_part, align 8, !tbaa !2
  %9 = bitcast double* %tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #9
  store double 0.000000e+00, double* %tmp, align 8, !tbaa !44
  %10 = bitcast double* %errb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #9
  store double 1.000000e+00, double* %errb, align 8, !tbaa !44
  %11 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %d = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %11, i32 0, i32 0
  %12 = load i32, i32* %d, align 8, !tbaa !41
  %13 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %k = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %13, i32 0, i32 1
  %14 = load i32, i32* %k, align 4, !tbaa !36
  %15 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %n = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %15, i32 0, i32 2
  %16 = load i32, i32* %n, align 8, !tbaa !51
  %17 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %alphas11 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %17, i32 0, i32 3
  %call12 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %alphas11) #9
  %18 = load double*, double** %alphas_gradient_part, align 8, !tbaa !2
  %19 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %means13 = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %19, i32 0, i32 4
  %call14 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %means13) #9
  %20 = load double*, double** %means_gradient_part, align 8, !tbaa !2
  %21 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %icf = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %21, i32 0, i32 5
  %call15 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %icf) #9
  %22 = load double*, double** %icf_gradient_part, align 8, !tbaa !2
  %23 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %x = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %23, i32 0, i32 6
  %call16 = call double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %x) #9
  %24 = load %struct.GMMInput*, %struct.GMMInput** %input.addr, align 8, !tbaa !2
  %wishart = getelementptr inbounds %struct.GMMInput, %struct.GMMInput* %24, i32 0, i32 7
  %25 = bitcast %struct.Wishart* %agg.tmp to i8*
  %26 = bitcast %struct.Wishart* %wishart to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !tbaa.struct !52
  call void @dgmm_objective(i32 %12, i32 %14, i32 %16, double* %call12, double* %18, double* %call14, double* %20, double* %call15, double* %22, double* %call16, %struct.Wishart* byval(%struct.Wishart) align 8 %agg.tmp, double* %tmp, double* %errb)
  %27 = bitcast double* %errb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #9
  %28 = bitcast double* %tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #9
  %29 = bitcast double** %icf_gradient_part to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #9
  %30 = bitcast double** %means_gradient_part to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #9
  %31 = bitcast double** %alphas_gradient_part to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %31) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_current, align 8, !tbaa !49
  %incdec.ptr = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %0, i32 1
  store %"class.std::__cxx11::basic_string"* %incdec.ptr, %"class.std::__cxx11::basic_string"** %_M_current, align 8, !tbaa !49
  ret %"class.__gnu_cxx::__normal_iterator"* %this1
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_start, align 8, !tbaa !55
  %3 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %4, i32 0, i32 1
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish, align 8, !tbaa !57
  %6 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %6) #9
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"* %5, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %7 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %7) #9
  ret void

lpad:                                             ; preds = %entry
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot, align 4
  %11 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %11) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @arr_max(i32 %n, double* %x) #8 {
entry:
  %n.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %m = alloca double, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast double* %m to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load double*, double** %x.addr, align 8, !tbaa !2
  %arrayidx = getelementptr inbounds double, double* %2, i64 0
  %3 = load double, double* %arrayidx, align 8, !tbaa !44
  store double %3, double* %m, align 8, !tbaa !44
  store i32 1, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !tbaa !20
  %5 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load double, double* %m, align 8, !tbaa !44
  %7 = load double*, double** %x.addr, align 8, !tbaa !2
  %8 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %8 to i64
  %arrayidx1 = getelementptr inbounds double, double* %7, i64 %idxprom
  %9 = load double, double* %arrayidx1, align 8, !tbaa !44
  %cmp2 = fcmp fast olt double %6, %9
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %10 = load double*, double** %x.addr, align 8, !tbaa !2
  %11 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom3 = sext i32 %11 to i64
  %arrayidx4 = getelementptr inbounds double, double* %10, i64 %idxprom3
  %12 = load double, double* %arrayidx4, align 8, !tbaa !44
  store double %12, double* %m, align 8, !tbaa !44
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !58

for.end:                                          ; preds = %for.cond
  %14 = load double, double* %m, align 8, !tbaa !44
  %15 = bitcast double* %m to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %15) #9
  %16 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %16) #9
  ret double %14
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @sqnorm(i32 %n, double* %x) #8 {
entry:
  %n.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %res = alloca double, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast double* %res to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load double*, double** %x.addr, align 8, !tbaa !2
  %arrayidx = getelementptr inbounds double, double* %2, i64 0
  %3 = load double, double* %arrayidx, align 8, !tbaa !44
  %4 = load double*, double** %x.addr, align 8, !tbaa !2
  %arrayidx1 = getelementptr inbounds double, double* %4, i64 0
  %5 = load double, double* %arrayidx1, align 8, !tbaa !44
  %mul = fmul fast double %3, %5
  store double %mul, double* %res, align 8, !tbaa !44
  store i32 1, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !tbaa !20
  %7 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load double, double* %res, align 8, !tbaa !44
  %9 = load double*, double** %x.addr, align 8, !tbaa !2
  %10 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %10 to i64
  %arrayidx2 = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx2, align 8, !tbaa !44
  %12 = load double*, double** %x.addr, align 8, !tbaa !2
  %13 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom3 = sext i32 %13 to i64
  %arrayidx4 = getelementptr inbounds double, double* %12, i64 %idxprom3
  %14 = load double, double* %arrayidx4, align 8, !tbaa !44
  %mul5 = fmul fast double %11, %14
  %add = fadd fast double %8, %mul5
  store double %add, double* %res, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !59

for.end:                                          ; preds = %for.cond
  %16 = load double, double* %res, align 8, !tbaa !44
  %17 = bitcast double* %res to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  %18 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %18) #9
  ret double %16
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @subtract(i32 %d, double* %x, double* %y, double* %out) #8 {
entry:
  %d.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %y.addr = alloca double*, align 8
  %out.addr = alloca double*, align 8
  %id = alloca i32, align 4
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %y, double** %y.addr, align 8, !tbaa !2
  store double* %out, double** %out.addr, align 8, !tbaa !2
  %0 = bitcast i32* %id to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 0, i32* %id, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %id, align 4, !tbaa !20
  %2 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load double*, double** %x.addr, align 8, !tbaa !2
  %4 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8, !tbaa !44
  %6 = load double*, double** %y.addr, align 8, !tbaa !2
  %7 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom1 = sext i32 %7 to i64
  %arrayidx2 = getelementptr inbounds double, double* %6, i64 %idxprom1
  %8 = load double, double* %arrayidx2, align 8, !tbaa !44
  %sub = fsub fast double %5, %8
  %9 = load double*, double** %out.addr, align 8, !tbaa !2
  %10 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom3 = sext i32 %10 to i64
  %arrayidx4 = getelementptr inbounds double, double* %9, i64 %idxprom3
  store double %sub, double* %arrayidx4, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %id, align 4, !tbaa !20
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %id, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !60

for.end:                                          ; preds = %for.cond
  %12 = bitcast i32* %id to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %12) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @log_sum_exp(i32 %n, double* %x) #8 {
entry:
  %n.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %mx = alloca double, align 8
  %semx = alloca double, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast double* %mx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load i32, i32* %n.addr, align 4, !tbaa !20
  %3 = load double*, double** %x.addr, align 8, !tbaa !2
  %call = call fast double @arr_max(i32 %2, double* %3)
  store double %call, double* %mx, align 8, !tbaa !44
  %4 = bitcast double* %semx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  store double 0.000000e+00, double* %semx, align 8, !tbaa !44
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !tbaa !20
  %6 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %5, %6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load double, double* %semx, align 8, !tbaa !44
  %8 = load double*, double** %x.addr, align 8, !tbaa !2
  %9 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds double, double* %8, i64 %idxprom
  %10 = load double, double* %arrayidx, align 8, !tbaa !44
  %11 = load double, double* %mx, align 8, !tbaa !44
  %sub = fsub fast double %10, %11
  %12 = call fast double @llvm.exp.f64(double %sub)
  %add = fadd fast double %7, %12
  store double %add, double* %semx, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !61

for.end:                                          ; preds = %for.cond
  %14 = load double, double* %semx, align 8, !tbaa !44
  %15 = call fast double @llvm.log.f64(double %14)
  %16 = load double, double* %mx, align 8, !tbaa !44
  %add1 = fadd fast double %15, %16
  %17 = bitcast double* %semx to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  %18 = bitcast double* %mx to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #9
  %19 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %19) #9
  ret double %add1
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.exp.f64(double) #16

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare double @llvm.log.f64(double) #16

; Function Attrs: nounwind readnone uwtable willreturn mustprogress
define dso_local double @log_gamma_distrib(double %a, double %p) #17 {
entry:
  %a.addr = alloca double, align 8
  %p.addr = alloca double, align 8
  %j = alloca i32, align 4
  %out = alloca double, align 8
  store double %a, double* %a.addr, align 8, !tbaa !44
  store double %p, double* %p.addr, align 8, !tbaa !44
  %0 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast double* %out to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load double, double* %p.addr, align 8, !tbaa !44
  %mul = fmul fast double 2.500000e-01, %2
  %3 = load double, double* %p.addr, align 8, !tbaa !44
  %sub = fsub fast double %3, 1.000000e+00
  %mul1 = fmul fast double %mul, %sub
  %4 = call fast double @llvm.log.f64(double 0x400921FB54442EEA)
  %mul2 = fmul fast double %mul1, %4
  store double %mul2, double* %out, align 8, !tbaa !44
  store i32 1, i32* %j, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %j, align 4, !tbaa !20
  %conv = sitofp i32 %5 to double
  %6 = load double, double* %p.addr, align 8, !tbaa !44
  %cmp = fcmp fast ole double %conv, %6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load double, double* %out, align 8, !tbaa !44
  %8 = load double, double* %a.addr, align 8, !tbaa !44
  %9 = load i32, i32* %j, align 4, !tbaa !20
  %sub3 = sub nsw i32 1, %9
  %conv4 = sitofp i32 %sub3 to double
  %mul5 = fmul fast double 5.000000e-01, %conv4
  %add = fadd fast double %8, %mul5
  %call = call fast double @lgamma(double %add) #9
  %add6 = fadd fast double %7, %call
  store double %add6, double* %out, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %j, align 4, !tbaa !20
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %j, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !62

for.end:                                          ; preds = %for.cond
  %11 = load double, double* %out, align 8, !tbaa !44
  %12 = bitcast double* %out to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #9
  %13 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %13) #9
  ret double %11
}

; Function Attrs: nounwind
declare dso_local double @lgamma(double) #4

; Function Attrs: uwtable mustprogress
define dso_local double @log_wishart_prior(i32 %p, i32 %k, double %wishart.coerce0, i32 %wishart.coerce1, double* %sum_qs, double* %Qdiags, double* %icf) #0 {
entry:
  %wishart = alloca %struct.Wishart, align 8
  %p.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %sum_qs.addr = alloca double*, align 8
  %Qdiags.addr = alloca double*, align 8
  %icf.addr = alloca double*, align 8
  %ik = alloca i32, align 4
  %n = alloca i32, align 4
  %icf_sz = alloca i32, align 4
  %C = alloca double, align 8
  %out = alloca double, align 8
  %frobenius = alloca double, align 8
  %0 = bitcast %struct.Wishart* %wishart to { double, i32 }*
  %1 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 0
  store double %wishart.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 1
  store i32 %wishart.coerce1, i32* %2, align 8
  store i32 %p, i32* %p.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store double* %sum_qs, double** %sum_qs.addr, align 8, !tbaa !2
  store double* %Qdiags, double** %Qdiags.addr, align 8, !tbaa !2
  store double* %icf, double** %icf.addr, align 8, !tbaa !2
  %3 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #9
  %4 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #9
  %5 = load i32, i32* %p.addr, align 4, !tbaa !20
  %m = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 1
  %6 = load i32, i32* %m, align 8, !tbaa !63
  %add = add nsw i32 %5, %6
  %add1 = add nsw i32 %add, 1
  store i32 %add1, i32* %n, align 4, !tbaa !20
  %7 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #9
  %8 = load i32, i32* %p.addr, align 4, !tbaa !20
  %9 = load i32, i32* %p.addr, align 4, !tbaa !20
  %add2 = add nsw i32 %9, 1
  %mul = mul nsw i32 %8, %add2
  %div = sdiv i32 %mul, 2
  store i32 %div, i32* %icf_sz, align 4, !tbaa !20
  %10 = bitcast double* %C to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #9
  %11 = load i32, i32* %n, align 4, !tbaa !20
  %12 = load i32, i32* %p.addr, align 4, !tbaa !20
  %mul3 = mul nsw i32 %11, %12
  %conv = sitofp i32 %mul3 to double
  %gamma = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %13 = load double, double* %gamma, align 8, !tbaa !64
  %14 = call fast double @llvm.log.f64(double %13)
  %call = call fast double @_ZSt3logIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 2)
  %mul4 = fmul fast double 5.000000e-01, %call
  %sub = fsub fast double %14, %mul4
  %mul5 = fmul fast double %conv, %sub
  %15 = load i32, i32* %n, align 4, !tbaa !20
  %conv6 = sitofp i32 %15 to double
  %mul7 = fmul fast double 5.000000e-01, %conv6
  %16 = load i32, i32* %p.addr, align 4, !tbaa !20
  %conv8 = sitofp i32 %16 to double
  %call9 = call fast double @log_gamma_distrib(double %mul7, double %conv8) #30
  %sub10 = fsub fast double %mul5, %call9
  store double %sub10, double* %C, align 8, !tbaa !44
  %17 = bitcast double* %out to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #9
  store double 0.000000e+00, double* %out, align 8, !tbaa !44
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %18 = load i32, i32* %ik, align 4, !tbaa !20
  %19 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %18, %19
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %20 = bitcast double* %frobenius to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #9
  %21 = load i32, i32* %p.addr, align 4, !tbaa !20
  %22 = load double*, double** %Qdiags.addr, align 8, !tbaa !2
  %23 = load i32, i32* %ik, align 4, !tbaa !20
  %24 = load i32, i32* %p.addr, align 4, !tbaa !20
  %mul11 = mul nsw i32 %23, %24
  %idxprom = sext i32 %mul11 to i64
  %arrayidx = getelementptr inbounds double, double* %22, i64 %idxprom
  %call12 = call fast double @sqnorm(i32 %21, double* %arrayidx)
  %25 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %26 = load i32, i32* %p.addr, align 4, !tbaa !20
  %sub13 = sub nsw i32 %25, %26
  %27 = load double*, double** %icf.addr, align 8, !tbaa !2
  %28 = load i32, i32* %ik, align 4, !tbaa !20
  %29 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul14 = mul nsw i32 %28, %29
  %30 = load i32, i32* %p.addr, align 4, !tbaa !20
  %add15 = add nsw i32 %mul14, %30
  %idxprom16 = sext i32 %add15 to i64
  %arrayidx17 = getelementptr inbounds double, double* %27, i64 %idxprom16
  %call18 = call fast double @sqnorm(i32 %sub13, double* %arrayidx17)
  %add19 = fadd fast double %call12, %call18
  store double %add19, double* %frobenius, align 8, !tbaa !44
  %31 = load double, double* %out, align 8, !tbaa !44
  %gamma20 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %32 = load double, double* %gamma20, align 8, !tbaa !64
  %mul21 = fmul fast double 5.000000e-01, %32
  %gamma22 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %33 = load double, double* %gamma22, align 8, !tbaa !64
  %mul23 = fmul fast double %mul21, %33
  %34 = load double, double* %frobenius, align 8, !tbaa !44
  %mul24 = fmul fast double %mul23, %34
  %add25 = fadd fast double %31, %mul24
  %m26 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 1
  %35 = load i32, i32* %m26, align 8, !tbaa !63
  %conv27 = sitofp i32 %35 to double
  %36 = load double*, double** %sum_qs.addr, align 8, !tbaa !2
  %37 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom28 = sext i32 %37 to i64
  %arrayidx29 = getelementptr inbounds double, double* %36, i64 %idxprom28
  %38 = load double, double* %arrayidx29, align 8, !tbaa !44
  %mul30 = fmul fast double %conv27, %38
  %sub31 = fsub fast double %add25, %mul30
  store double %sub31, double* %out, align 8, !tbaa !44
  %39 = bitcast double* %frobenius to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %40 = load i32, i32* %ik, align 4, !tbaa !20
  %inc = add nsw i32 %40, 1
  store i32 %inc, i32* %ik, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !65

for.end:                                          ; preds = %for.cond
  %41 = load double, double* %out, align 8, !tbaa !44
  %42 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv32 = sitofp i32 %42 to double
  %43 = load double, double* %C, align 8, !tbaa !44
  %mul33 = fmul fast double %conv32, %43
  %sub34 = fsub fast double %41, %mul33
  %44 = bitcast double* %out to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #9
  %45 = bitcast double* %C to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #9
  %46 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %46) #9
  %47 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %47) #9
  %48 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %48) #9
  ret double %sub34
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZSt3logIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 %__x) #12 comdat {
entry:
  %__x.addr = alloca i32, align 4
  store i32 %__x, i32* %__x.addr, align 4, !tbaa !20
  %0 = load i32, i32* %__x.addr, align 4, !tbaa !20
  %conv = sitofp i32 %0 to double
  %1 = call fast double @llvm.log.f64(double %conv)
  ret double %1
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @preprocess_qs(i32 %d, i32 %k, double* %icf, double* %sum_qs, double* %Qdiags) #8 {
entry:
  %d.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %icf.addr = alloca double*, align 8
  %sum_qs.addr = alloca double*, align 8
  %Qdiags.addr = alloca double*, align 8
  %ik = alloca i32, align 4
  %id = alloca i32, align 4
  %icf_sz = alloca i32, align 4
  %q = alloca double, align 8
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store double* %icf, double** %icf.addr, align 8, !tbaa !2
  store double* %sum_qs, double** %sum_qs.addr, align 8, !tbaa !2
  store double* %Qdiags, double** %Qdiags.addr, align 8, !tbaa !2
  %0 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast i32* %id to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  %2 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #9
  %3 = load i32, i32* %d.addr, align 4, !tbaa !20
  %4 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add = add nsw i32 %4, 1
  %mul = mul nsw i32 %3, %add
  %div = sdiv i32 %mul, 2
  store i32 %div, i32* %icf_sz, align 4, !tbaa !20
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc17, %entry
  %5 = load i32, i32* %ik, align 4, !tbaa !20
  %6 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %5, %6
  br i1 %cmp, label %for.body, label %for.end19

for.body:                                         ; preds = %for.cond
  %7 = load double*, double** %sum_qs.addr, align 8, !tbaa !2
  %8 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds double, double* %7, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !44
  store i32 0, i32* %id, align 4, !tbaa !20
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %id, align 4, !tbaa !20
  %10 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp2 = icmp slt i32 %9, %10
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %11 = bitcast double* %q to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #9
  %12 = load double*, double** %icf.addr, align 8, !tbaa !2
  %13 = load i32, i32* %ik, align 4, !tbaa !20
  %14 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul4 = mul nsw i32 %13, %14
  %15 = load i32, i32* %id, align 4, !tbaa !20
  %add5 = add nsw i32 %mul4, %15
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds double, double* %12, i64 %idxprom6
  %16 = load double, double* %arrayidx7, align 8, !tbaa !44
  store double %16, double* %q, align 8, !tbaa !44
  %17 = load double*, double** %sum_qs.addr, align 8, !tbaa !2
  %18 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom8 = sext i32 %18 to i64
  %arrayidx9 = getelementptr inbounds double, double* %17, i64 %idxprom8
  %19 = load double, double* %arrayidx9, align 8, !tbaa !44
  %20 = load double, double* %q, align 8, !tbaa !44
  %add10 = fadd fast double %19, %20
  %21 = load double*, double** %sum_qs.addr, align 8, !tbaa !2
  %22 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom11 = sext i32 %22 to i64
  %arrayidx12 = getelementptr inbounds double, double* %21, i64 %idxprom11
  store double %add10, double* %arrayidx12, align 8, !tbaa !44
  %23 = load double, double* %q, align 8, !tbaa !44
  %24 = call fast double @llvm.exp.f64(double %23)
  %25 = load double*, double** %Qdiags.addr, align 8, !tbaa !2
  %26 = load i32, i32* %ik, align 4, !tbaa !20
  %27 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul13 = mul nsw i32 %26, %27
  %28 = load i32, i32* %id, align 4, !tbaa !20
  %add14 = add nsw i32 %mul13, %28
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds double, double* %25, i64 %idxprom15
  store double %24, double* %arrayidx16, align 8, !tbaa !44
  %29 = bitcast double* %q to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %30 = load i32, i32* %id, align 4, !tbaa !20
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %id, align 4, !tbaa !20
  br label %for.cond1, !llvm.loop !66

for.end:                                          ; preds = %for.cond1
  br label %for.inc17

for.inc17:                                        ; preds = %for.end
  %31 = load i32, i32* %ik, align 4, !tbaa !20
  %inc18 = add nsw i32 %31, 1
  store i32 %inc18, i32* %ik, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !67

for.end19:                                        ; preds = %for.cond
  %32 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %32) #9
  %33 = bitcast i32* %id to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %33) #9
  %34 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %34) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @Qtimesx(i32 %d, double* %Qdiag, double* %ltri, double* %x, double* %out) #8 {
entry:
  %d.addr = alloca i32, align 4
  %Qdiag.addr = alloca double*, align 8
  %ltri.addr = alloca double*, align 8
  %x.addr = alloca double*, align 8
  %out.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %Lparamsidx = alloca i32, align 4
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store double* %Qdiag, double** %Qdiag.addr, align 8, !tbaa !2
  store double* %ltri, double** %ltri.addr, align 8, !tbaa !2
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %out, double** %out.addr, align 8, !tbaa !2
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !tbaa !20
  %3 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load double*, double** %Qdiag.addr, align 8, !tbaa !2
  %5 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds double, double* %4, i64 %idxprom
  %6 = load double, double* %arrayidx, align 8, !tbaa !44
  %7 = load double*, double** %x.addr, align 8, !tbaa !2
  %8 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom1 = sext i32 %8 to i64
  %arrayidx2 = getelementptr inbounds double, double* %7, i64 %idxprom1
  %9 = load double, double* %arrayidx2, align 8, !tbaa !44
  %mul = fmul fast double %6, %9
  %10 = load double*, double** %out.addr, align 8, !tbaa !2
  %11 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom3 = sext i32 %11 to i64
  %arrayidx4 = getelementptr inbounds double, double* %10, i64 %idxprom3
  store double %mul, double* %arrayidx4, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !68

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc28, %for.end
  %13 = load i32, i32* %i, align 4, !tbaa !20
  %14 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp6 = icmp slt i32 %13, %14
  br i1 %cmp6, label %for.body7, label %for.end30

for.body7:                                        ; preds = %for.cond5
  %15 = bitcast i32* %Lparamsidx to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #9
  %16 = load i32, i32* %i, align 4, !tbaa !20
  %17 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul8 = mul nsw i32 2, %17
  %18 = load i32, i32* %i, align 4, !tbaa !20
  %sub = sub nsw i32 %mul8, %18
  %sub9 = sub nsw i32 %sub, 1
  %mul10 = mul nsw i32 %16, %sub9
  %div = sdiv i32 %mul10, 2
  store i32 %div, i32* %Lparamsidx, align 4, !tbaa !20
  %19 = load i32, i32* %i, align 4, !tbaa !20
  %add = add nsw i32 %19, 1
  store i32 %add, i32* %j, align 4, !tbaa !20
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc25, %for.body7
  %20 = load i32, i32* %j, align 4, !tbaa !20
  %21 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp12 = icmp slt i32 %20, %21
  br i1 %cmp12, label %for.body13, label %for.end27

for.body13:                                       ; preds = %for.cond11
  %22 = load double*, double** %out.addr, align 8, !tbaa !2
  %23 = load i32, i32* %j, align 4, !tbaa !20
  %idxprom14 = sext i32 %23 to i64
  %arrayidx15 = getelementptr inbounds double, double* %22, i64 %idxprom14
  %24 = load double, double* %arrayidx15, align 8, !tbaa !44
  %25 = load double*, double** %ltri.addr, align 8, !tbaa !2
  %26 = load i32, i32* %Lparamsidx, align 4, !tbaa !20
  %idxprom16 = sext i32 %26 to i64
  %arrayidx17 = getelementptr inbounds double, double* %25, i64 %idxprom16
  %27 = load double, double* %arrayidx17, align 8, !tbaa !44
  %28 = load double*, double** %x.addr, align 8, !tbaa !2
  %29 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom18 = sext i32 %29 to i64
  %arrayidx19 = getelementptr inbounds double, double* %28, i64 %idxprom18
  %30 = load double, double* %arrayidx19, align 8, !tbaa !44
  %mul20 = fmul fast double %27, %30
  %add21 = fadd fast double %24, %mul20
  %31 = load double*, double** %out.addr, align 8, !tbaa !2
  %32 = load i32, i32* %j, align 4, !tbaa !20
  %idxprom22 = sext i32 %32 to i64
  %arrayidx23 = getelementptr inbounds double, double* %31, i64 %idxprom22
  store double %add21, double* %arrayidx23, align 8, !tbaa !44
  %33 = load i32, i32* %Lparamsidx, align 4, !tbaa !20
  %inc24 = add nsw i32 %33, 1
  store i32 %inc24, i32* %Lparamsidx, align 4, !tbaa !20
  br label %for.inc25

for.inc25:                                        ; preds = %for.body13
  %34 = load i32, i32* %j, align 4, !tbaa !20
  %inc26 = add nsw i32 %34, 1
  store i32 %inc26, i32* %j, align 4, !tbaa !20
  br label %for.cond11, !llvm.loop !69

for.end27:                                        ; preds = %for.cond11
  %35 = bitcast i32* %Lparamsidx to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %35) #9
  br label %for.inc28

for.inc28:                                        ; preds = %for.end27
  %36 = load i32, i32* %i, align 4, !tbaa !20
  %inc29 = add nsw i32 %36, 1
  store i32 %inc29, i32* %i, align 4, !tbaa !20
  br label %for.cond5, !llvm.loop !70

for.end30:                                        ; preds = %for.cond5
  %37 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %37) #9
  %38 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %38) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @gmm_objective(i32 %d, i32 %k, i32 %n, double* noalias %alphas, double* noalias %means, double* noalias %icf, double* noalias %x, %struct.Wishart* byval(%struct.Wishart) align 8 %wishart, double* noalias %err) #0 {
entry:
  %d.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %alphas.addr = alloca double*, align 8
  %means.addr = alloca double*, align 8
  %icf.addr = alloca double*, align 8
  %x.addr = alloca double*, align 8
  %err.addr = alloca double*, align 8
  %ix = alloca i64, align 8
  %ik = alloca i64, align 8
  %CONSTANT = alloca double, align 8
  %icf_sz = alloca i64, align 8
  %Qdiags = alloca double*, align 8
  %sum_qs = alloca double*, align 8
  %xcentered = alloca double*, align 8
  %Qxcentered = alloca double*, align 8
  %main_term = alloca double*, align 8
  %slse = alloca double, align 8
  %lse_alphas = alloca double, align 8
  %agg.tmp = alloca %struct.Wishart, align 8
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %alphas, double** %alphas.addr, align 8, !tbaa !2
  store double* %means, double** %means.addr, align 8, !tbaa !2
  store double* %icf, double** %icf.addr, align 8, !tbaa !2
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %err, double** %err.addr, align 8, !tbaa !2
  %0 = bitcast i64* %ix to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = bitcast i64* %ik to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = bitcast double* %CONSTANT to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %3 = load i32, i32* %n.addr, align 4, !tbaa !20
  %sub = sub nsw i32 0, %3
  %4 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul = mul nsw i32 %sub, %4
  %conv = sitofp i32 %mul to double
  %mul1 = fmul fast double %conv, 5.000000e-01
  %5 = call fast double @llvm.log.f64(double 0x401921FB54442EEA)
  %mul2 = fmul fast double %mul1, %5
  store double %mul2, double* %CONSTANT, align 8, !tbaa !44
  %6 = bitcast i64* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #9
  %7 = load i32, i32* %d.addr, align 4, !tbaa !20
  %8 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add = add nsw i32 %8, 1
  %mul3 = mul nsw i32 %7, %add
  %div = sdiv i32 %mul3, 2
  %conv4 = sext i32 %div to i64
  store i64 %conv4, i64* %icf_sz, align 8, !tbaa !13
  %9 = bitcast double** %Qdiags to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #9
  %10 = load i32, i32* %d.addr, align 4, !tbaa !20
  %11 = load i32, i32* %k.addr, align 4, !tbaa !20
  %mul5 = mul nsw i32 %10, %11
  %conv6 = sext i32 %mul5 to i64
  %mul7 = mul i64 %conv6, 8
  %call = call noalias i8* @malloc(i64 %mul7) #9
  %12 = bitcast i8* %call to double*
  store double* %12, double** %Qdiags, align 8, !tbaa !2
  %13 = bitcast double** %sum_qs to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #9
  %14 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv8 = sext i32 %14 to i64
  %mul9 = mul i64 %conv8, 8
  %call10 = call noalias i8* @malloc(i64 %mul9) #9
  %15 = bitcast i8* %call10 to double*
  store double* %15, double** %sum_qs, align 8, !tbaa !2
  %16 = bitcast double** %xcentered to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #9
  %17 = load i32, i32* %d.addr, align 4, !tbaa !20
  %conv11 = sext i32 %17 to i64
  %mul12 = mul i64 %conv11, 8
  %call13 = call noalias i8* @malloc(i64 %mul12) #9
  %18 = bitcast i8* %call13 to double*
  store double* %18, double** %xcentered, align 8, !tbaa !2
  %19 = bitcast double** %Qxcentered to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #9
  %20 = load i32, i32* %d.addr, align 4, !tbaa !20
  %conv14 = sext i32 %20 to i64
  %mul15 = mul i64 %conv14, 8
  %call16 = call noalias i8* @malloc(i64 %mul15) #9
  %21 = bitcast i8* %call16 to double*
  store double* %21, double** %Qxcentered, align 8, !tbaa !2
  %22 = bitcast double** %main_term to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #9
  %23 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv17 = sext i32 %23 to i64
  %mul18 = mul i64 %conv17, 8
  %call19 = call noalias i8* @malloc(i64 %mul18) #9
  %24 = bitcast i8* %call19 to double*
  store double* %24, double** %main_term, align 8, !tbaa !2
  %25 = load i32, i32* %d.addr, align 4, !tbaa !20
  %26 = load i32, i32* %k.addr, align 4, !tbaa !20
  %27 = load double*, double** %icf.addr, align 8, !tbaa !2
  %28 = load double*, double** %sum_qs, align 8, !tbaa !2
  %arrayidx = getelementptr inbounds double, double* %28, i64 0
  %29 = load double*, double** %Qdiags, align 8, !tbaa !2
  %arrayidx20 = getelementptr inbounds double, double* %29, i64 0
  call void @preprocess_qs(i32 %25, i32 %26, double* %27, double* %arrayidx, double* %arrayidx20)
  %30 = bitcast double* %slse to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %30) #9
  store double 0.000000e+00, double* %slse, align 8, !tbaa !44
  store i64 0, i64* %ix, align 8, !tbaa !13
  br label %for.cond

for.cond:                                         ; preds = %for.inc53, %entry
  %31 = load i64, i64* %ix, align 8, !tbaa !13
  %32 = load i32, i32* %n.addr, align 4, !tbaa !20
  %conv21 = sext i32 %32 to i64
  %cmp = icmp slt i64 %31, %conv21
  br i1 %cmp, label %for.body, label %for.end55

for.body:                                         ; preds = %for.cond
  store i64 0, i64* %ik, align 8, !tbaa !13
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc, %for.body
  %33 = load i64, i64* %ik, align 8, !tbaa !13
  %34 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv23 = sext i32 %34 to i64
  %cmp24 = icmp slt i64 %33, %conv23
  br i1 %cmp24, label %for.body25, label %for.end

for.body25:                                       ; preds = %for.cond22
  %35 = load i32, i32* %d.addr, align 4, !tbaa !20
  %36 = load double*, double** %x.addr, align 8, !tbaa !2
  %37 = load i64, i64* %ix, align 8, !tbaa !13
  %38 = load i32, i32* %d.addr, align 4, !tbaa !20
  %conv26 = sext i32 %38 to i64
  %mul27 = mul nsw i64 %37, %conv26
  %arrayidx28 = getelementptr inbounds double, double* %36, i64 %mul27
  %39 = load double*, double** %means.addr, align 8, !tbaa !2
  %40 = load i64, i64* %ik, align 8, !tbaa !13
  %41 = load i32, i32* %d.addr, align 4, !tbaa !20
  %conv29 = sext i32 %41 to i64
  %mul30 = mul nsw i64 %40, %conv29
  %arrayidx31 = getelementptr inbounds double, double* %39, i64 %mul30
  %42 = load double*, double** %xcentered, align 8, !tbaa !2
  %arrayidx32 = getelementptr inbounds double, double* %42, i64 0
  call void @subtract(i32 %35, double* %arrayidx28, double* %arrayidx31, double* %arrayidx32)
  %43 = load i32, i32* %d.addr, align 4, !tbaa !20
  %44 = load double*, double** %Qdiags, align 8, !tbaa !2
  %45 = load i64, i64* %ik, align 8, !tbaa !13
  %46 = load i32, i32* %d.addr, align 4, !tbaa !20
  %conv33 = sext i32 %46 to i64
  %mul34 = mul nsw i64 %45, %conv33
  %arrayidx35 = getelementptr inbounds double, double* %44, i64 %mul34
  %47 = load double*, double** %icf.addr, align 8, !tbaa !2
  %48 = load i64, i64* %ik, align 8, !tbaa !13
  %49 = load i64, i64* %icf_sz, align 8, !tbaa !13
  %mul36 = mul nsw i64 %48, %49
  %50 = load i32, i32* %d.addr, align 4, !tbaa !20
  %conv37 = sext i32 %50 to i64
  %add38 = add nsw i64 %mul36, %conv37
  %arrayidx39 = getelementptr inbounds double, double* %47, i64 %add38
  %51 = load double*, double** %xcentered, align 8, !tbaa !2
  %arrayidx40 = getelementptr inbounds double, double* %51, i64 0
  %52 = load double*, double** %Qxcentered, align 8, !tbaa !2
  %arrayidx41 = getelementptr inbounds double, double* %52, i64 0
  call void @Qtimesx(i32 %43, double* %arrayidx35, double* %arrayidx39, double* %arrayidx40, double* %arrayidx41)
  %53 = load double*, double** %alphas.addr, align 8, !tbaa !2
  %54 = load i64, i64* %ik, align 8, !tbaa !13
  %arrayidx42 = getelementptr inbounds double, double* %53, i64 %54
  %55 = load double, double* %arrayidx42, align 8, !tbaa !44
  %56 = load double*, double** %sum_qs, align 8, !tbaa !2
  %57 = load i64, i64* %ik, align 8, !tbaa !13
  %arrayidx43 = getelementptr inbounds double, double* %56, i64 %57
  %58 = load double, double* %arrayidx43, align 8, !tbaa !44
  %add44 = fadd fast double %55, %58
  %59 = load i32, i32* %d.addr, align 4, !tbaa !20
  %60 = load double*, double** %Qxcentered, align 8, !tbaa !2
  %arrayidx45 = getelementptr inbounds double, double* %60, i64 0
  %call46 = call fast double @sqnorm(i32 %59, double* %arrayidx45)
  %mul47 = fmul fast double 5.000000e-01, %call46
  %sub48 = fsub fast double %add44, %mul47
  %61 = load double*, double** %main_term, align 8, !tbaa !2
  %62 = load i64, i64* %ik, align 8, !tbaa !13
  %arrayidx49 = getelementptr inbounds double, double* %61, i64 %62
  store double %sub48, double* %arrayidx49, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body25
  %63 = load i64, i64* %ik, align 8, !tbaa !13
  %inc = add nsw i64 %63, 1
  store i64 %inc, i64* %ik, align 8, !tbaa !13
  br label %for.cond22, !llvm.loop !71

for.end:                                          ; preds = %for.cond22
  %64 = load double, double* %slse, align 8, !tbaa !44
  %65 = load i32, i32* %k.addr, align 4, !tbaa !20
  %66 = load double*, double** %main_term, align 8, !tbaa !2
  %arrayidx50 = getelementptr inbounds double, double* %66, i64 0
  %call51 = call fast double @log_sum_exp(i32 %65, double* %arrayidx50)
  %add52 = fadd fast double %64, %call51
  store double %add52, double* %slse, align 8, !tbaa !44
  br label %for.inc53

for.inc53:                                        ; preds = %for.end
  %67 = load i64, i64* %ix, align 8, !tbaa !13
  %inc54 = add nsw i64 %67, 1
  store i64 %inc54, i64* %ix, align 8, !tbaa !13
  br label %for.cond, !llvm.loop !72

for.end55:                                        ; preds = %for.cond
  %68 = bitcast double* %lse_alphas to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %68) #9
  %69 = load i32, i32* %k.addr, align 4, !tbaa !20
  %70 = load double*, double** %alphas.addr, align 8, !tbaa !2
  %call56 = call fast double @log_sum_exp(i32 %69, double* %70)
  store double %call56, double* %lse_alphas, align 8, !tbaa !44
  %71 = load double, double* %CONSTANT, align 8, !tbaa !44
  %72 = load double, double* %slse, align 8, !tbaa !44
  %add57 = fadd fast double %71, %72
  %73 = load i32, i32* %n.addr, align 4, !tbaa !20
  %conv58 = sitofp i32 %73 to double
  %74 = load double, double* %lse_alphas, align 8, !tbaa !44
  %mul59 = fmul fast double %conv58, %74
  %sub60 = fsub fast double %add57, %mul59
  %75 = load i32, i32* %d.addr, align 4, !tbaa !20
  %76 = load i32, i32* %k.addr, align 4, !tbaa !20
  %77 = bitcast %struct.Wishart* %agg.tmp to i8*
  %78 = bitcast %struct.Wishart* %wishart to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 16, i1 false), !tbaa.struct !52
  %79 = load double*, double** %sum_qs, align 8, !tbaa !2
  %arrayidx61 = getelementptr inbounds double, double* %79, i64 0
  %80 = load double*, double** %Qdiags, align 8, !tbaa !2
  %arrayidx62 = getelementptr inbounds double, double* %80, i64 0
  %81 = load double*, double** %icf.addr, align 8, !tbaa !2
  %82 = bitcast %struct.Wishart* %agg.tmp to { double, i32 }*
  %83 = getelementptr inbounds { double, i32 }, { double, i32 }* %82, i32 0, i32 0
  %84 = load double, double* %83, align 8
  %85 = getelementptr inbounds { double, i32 }, { double, i32 }* %82, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %call63 = call fast double @log_wishart_prior(i32 %75, i32 %76, double %84, i32 %86, double* %arrayidx61, double* %arrayidx62, double* %81)
  %add64 = fadd fast double %sub60, %call63
  %87 = load double*, double** %err.addr, align 8, !tbaa !2
  store double %add64, double* %87, align 8, !tbaa !44
  %88 = load double*, double** %Qdiags, align 8, !tbaa !2
  %89 = bitcast double* %88 to i8*
  call void @free(i8* %89) #9
  %90 = load double*, double** %sum_qs, align 8, !tbaa !2
  %91 = bitcast double* %90 to i8*
  call void @free(i8* %91) #9
  %92 = load double*, double** %xcentered, align 8, !tbaa !2
  %93 = bitcast double* %92 to i8*
  call void @free(i8* %93) #9
  %94 = load double*, double** %Qxcentered, align 8, !tbaa !2
  %95 = bitcast double* %94 to i8*
  call void @free(i8* %95) #9
  %96 = load double*, double** %main_term, align 8, !tbaa !2
  %97 = bitcast double* %96 to i8*
  call void @free(i8* %97) #9
  %98 = bitcast double* %lse_alphas to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #9
  %99 = bitcast double* %slse to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #9
  %100 = bitcast double** %main_term to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #9
  %101 = bitcast double** %Qxcentered to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #9
  %102 = bitcast double** %xcentered to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #9
  %103 = bitcast double** %sum_qs to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #9
  %104 = bitcast double** %Qdiags to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %104) #9
  %105 = bitcast i64* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %105) #9
  %106 = bitcast double* %CONSTANT to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %106) #9
  %107 = bitcast i64* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %107) #9
  %108 = bitcast i64* %ix to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108) #9
  ret void
}

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #4

; Function Attrs: nounwind
declare dso_local void @free(i8*) #4

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @dgmm_objective(i32 %d, i32 %k, i32 %n, double* %alphas, double* %alphasb, double* %means, double* %meansb, double* %icf, double* %icfb, double* %x, %struct.Wishart* byval(%struct.Wishart) align 8 %wishart, double* %err, double* %errb) #8 {
entry:
  %d.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %alphas.addr = alloca double*, align 8
  %alphasb.addr = alloca double*, align 8
  %means.addr = alloca double*, align 8
  %meansb.addr = alloca double*, align 8
  %icf.addr = alloca double*, align 8
  %icfb.addr = alloca double*, align 8
  %x.addr = alloca double*, align 8
  %err.addr = alloca double*, align 8
  %errb.addr = alloca double*, align 8
  %agg.tmp = alloca %struct.Wishart, align 8
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %alphas, double** %alphas.addr, align 8, !tbaa !2
  store double* %alphasb, double** %alphasb.addr, align 8, !tbaa !2
  store double* %means, double** %means.addr, align 8, !tbaa !2
  store double* %meansb, double** %meansb.addr, align 8, !tbaa !2
  store double* %icf, double** %icf.addr, align 8, !tbaa !2
  store double* %icfb, double** %icfb.addr, align 8, !tbaa !2
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %err, double** %err.addr, align 8, !tbaa !2
  store double* %errb, double** %errb.addr, align 8, !tbaa !2
  %0 = load i32, i32* @enzyme_const, align 4, !tbaa !20
  %1 = load i32, i32* %d.addr, align 4, !tbaa !20
  %2 = load i32, i32* @enzyme_const, align 4, !tbaa !20
  %3 = load i32, i32* %k.addr, align 4, !tbaa !20
  %4 = load i32, i32* @enzyme_const, align 4, !tbaa !20
  %5 = load i32, i32* %n.addr, align 4, !tbaa !20
  %6 = load i32, i32* @enzyme_dup, align 4, !tbaa !20
  %7 = load double*, double** %alphas.addr, align 8, !tbaa !2
  %8 = load double*, double** %alphasb.addr, align 8, !tbaa !2
  %9 = load i32, i32* @enzyme_dup, align 4, !tbaa !20
  %10 = load double*, double** %means.addr, align 8, !tbaa !2
  %11 = load double*, double** %meansb.addr, align 8, !tbaa !2
  %12 = load i32, i32* @enzyme_dup, align 4, !tbaa !20
  %13 = load double*, double** %icf.addr, align 8, !tbaa !2
  %14 = load double*, double** %icfb.addr, align 8, !tbaa !2
  %15 = load i32, i32* @enzyme_const, align 4, !tbaa !20
  %16 = load double*, double** %x.addr, align 8, !tbaa !2
  %17 = load i32, i32* @enzyme_const, align 4, !tbaa !20
  %18 = bitcast %struct.Wishart* %agg.tmp to i8*
  %19 = bitcast %struct.Wishart* %wishart to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false), !tbaa.struct !52
  %20 = load i32, i32* @enzyme_dupnoneed, align 4, !tbaa !20
  %21 = load double*, double** %err.addr, align 8, !tbaa !2
  %22 = load double*, double** %errb.addr, align 8, !tbaa !2
  call void @diffegmm_objective(i32 %1, i32 %3, i32 %5, double* %7, double* %8, double* %10, double* %11, double* %13, double* %14, double* %16, %struct.Wishart* byval(%struct.Wishart) %agg.tmp, double* %21, double* %22)
  ret void
}

; Function Attrs: nounwind
declare dso_local void @__enzyme_autodiff(...) #4

; Function Attrs: uwtable mustprogress
define dso_local void @arr_max_b(i32 %n, double* %x, double* %xb, double %arr_maxb) #0 {
entry:
  %n.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %xb.addr = alloca double*, align 8
  %arr_maxb.addr = alloca double, align 8
  %i = alloca i32, align 4
  %m = alloca double, align 8
  %mb = alloca double, align 8
  %branch = alloca i32, align 4
  %arr_max = alloca double, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %xb, double** %xb.addr, align 8, !tbaa !2
  store double %arr_maxb, double* %arr_maxb.addr, align 8, !tbaa !44
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast double* %m to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load double*, double** %x.addr, align 8, !tbaa !2
  %arrayidx = getelementptr inbounds double, double* %2, i64 0
  %3 = load double, double* %arrayidx, align 8, !tbaa !44
  store double %3, double* %m, align 8, !tbaa !44
  %4 = bitcast double* %mb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  store double 0.000000e+00, double* %mb, align 8, !tbaa !44
  %5 = bitcast i32* %branch to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #9
  %6 = bitcast double* %arr_max to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #9
  store i32 1, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !tbaa !20
  %8 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load double, double* %m, align 8, !tbaa !44
  %10 = load double*, double** %x.addr, align 8, !tbaa !2
  %11 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %11 to i64
  %arrayidx1 = getelementptr inbounds double, double* %10, i64 %idxprom
  %12 = load double, double* %arrayidx1, align 8, !tbaa !44
  %cmp2 = fcmp fast olt double %9, %12
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %13 = load double*, double** %x.addr, align 8, !tbaa !2
  %14 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom3 = sext i32 %14 to i64
  %arrayidx4 = getelementptr inbounds double, double* %13, i64 %idxprom3
  %15 = load double, double* %arrayidx4, align 8, !tbaa !44
  store double %15, double* %m, align 8, !tbaa !44
  call void @pushControl1b(i32 1)
  br label %if.end

if.else:                                          ; preds = %for.body
  call void @pushControl1b(i32 0)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !73

for.end:                                          ; preds = %for.cond
  %17 = load double, double* %arr_maxb.addr, align 8, !tbaa !44
  store double %17, double* %mb, align 8, !tbaa !44
  %18 = load i32, i32* %n.addr, align 4, !tbaa !20
  %sub = sub nsw i32 %18, 1
  store i32 %sub, i32* %i, align 4, !tbaa !20
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc15, %for.end
  %19 = load i32, i32* %i, align 4, !tbaa !20
  %cmp6 = icmp sgt i32 %19, 0
  br i1 %cmp6, label %for.body7, label %for.end16

for.body7:                                        ; preds = %for.cond5
  call void @popControl1b(i32* %branch)
  %20 = load i32, i32* %branch, align 4, !tbaa !20
  %cmp8 = icmp ne i32 %20, 0
  br i1 %cmp8, label %if.then9, label %if.end14

if.then9:                                         ; preds = %for.body7
  %21 = load double*, double** %xb.addr, align 8, !tbaa !2
  %22 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom10 = sext i32 %22 to i64
  %arrayidx11 = getelementptr inbounds double, double* %21, i64 %idxprom10
  %23 = load double, double* %arrayidx11, align 8, !tbaa !44
  %24 = load double, double* %mb, align 8, !tbaa !44
  %add = fadd fast double %23, %24
  %25 = load double*, double** %xb.addr, align 8, !tbaa !2
  %26 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom12 = sext i32 %26 to i64
  %arrayidx13 = getelementptr inbounds double, double* %25, i64 %idxprom12
  store double %add, double* %arrayidx13, align 8, !tbaa !44
  store double 0.000000e+00, double* %mb, align 8, !tbaa !44
  br label %if.end14

if.end14:                                         ; preds = %if.then9, %for.body7
  br label %for.inc15

for.inc15:                                        ; preds = %if.end14
  %27 = load i32, i32* %i, align 4, !tbaa !20
  %dec = add nsw i32 %27, -1
  store i32 %dec, i32* %i, align 4, !tbaa !20
  br label %for.cond5, !llvm.loop !74

for.end16:                                        ; preds = %for.cond5
  %28 = load double*, double** %xb.addr, align 8, !tbaa !2
  %arrayidx17 = getelementptr inbounds double, double* %28, i64 0
  %29 = load double, double* %arrayidx17, align 8, !tbaa !44
  %30 = load double, double* %mb, align 8, !tbaa !44
  %add18 = fadd fast double %29, %30
  %31 = load double*, double** %xb.addr, align 8, !tbaa !2
  %arrayidx19 = getelementptr inbounds double, double* %31, i64 0
  store double %add18, double* %arrayidx19, align 8, !tbaa !44
  %32 = bitcast double* %arr_max to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %32) #9
  %33 = bitcast i32* %branch to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %33) #9
  %34 = bitcast double* %mb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #9
  %35 = bitcast double* %m to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #9
  %36 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %36) #9
  ret void
}

declare dso_local void @pushControl1b(i32) #2

declare dso_local void @popControl1b(i32*) #2

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @arr_max_nodiff(i32 %n, double* %x) #8 {
entry:
  %n.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %m = alloca double, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast double* %m to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load double*, double** %x.addr, align 8, !tbaa !2
  %arrayidx = getelementptr inbounds double, double* %2, i64 0
  %3 = load double, double* %arrayidx, align 8, !tbaa !44
  store double %3, double* %m, align 8, !tbaa !44
  store i32 1, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !tbaa !20
  %5 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load double, double* %m, align 8, !tbaa !44
  %7 = load double*, double** %x.addr, align 8, !tbaa !2
  %8 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %8 to i64
  %arrayidx1 = getelementptr inbounds double, double* %7, i64 %idxprom
  %9 = load double, double* %arrayidx1, align 8, !tbaa !44
  %cmp2 = fcmp fast olt double %6, %9
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %10 = load double*, double** %x.addr, align 8, !tbaa !2
  %11 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom3 = sext i32 %11 to i64
  %arrayidx4 = getelementptr inbounds double, double* %10, i64 %idxprom3
  %12 = load double, double* %arrayidx4, align 8, !tbaa !44
  store double %12, double* %m, align 8, !tbaa !44
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !75

for.end:                                          ; preds = %for.cond
  %14 = load double, double* %m, align 8, !tbaa !44
  %15 = bitcast double* %m to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %15) #9
  %16 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %16) #9
  ret double %14
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @sqnorm_b(i32 %n, double* %x, double* %xb, double %sqnormb) #8 {
entry:
  %n.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %xb.addr = alloca double*, align 8
  %sqnormb.addr = alloca double, align 8
  %i = alloca i32, align 4
  %res = alloca double, align 8
  %resb = alloca double, align 8
  %sqnorm = alloca double, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %xb, double** %xb.addr, align 8, !tbaa !2
  store double %sqnormb, double* %sqnormb.addr, align 8, !tbaa !44
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast double* %res to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load double*, double** %x.addr, align 8, !tbaa !2
  %arrayidx = getelementptr inbounds double, double* %2, i64 0
  %3 = load double, double* %arrayidx, align 8, !tbaa !44
  %4 = load double*, double** %x.addr, align 8, !tbaa !2
  %arrayidx1 = getelementptr inbounds double, double* %4, i64 0
  %5 = load double, double* %arrayidx1, align 8, !tbaa !44
  %mul = fmul fast double %3, %5
  store double %mul, double* %res, align 8, !tbaa !44
  %6 = bitcast double* %resb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #9
  store double 0.000000e+00, double* %resb, align 8, !tbaa !44
  %7 = bitcast double* %sqnorm to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #9
  %8 = load double, double* %sqnormb.addr, align 8, !tbaa !44
  store double %8, double* %resb, align 8, !tbaa !44
  %9 = load i32, i32* %n.addr, align 4, !tbaa !20
  %sub = sub nsw i32 %9, 1
  store i32 %sub, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !tbaa !20
  %cmp = icmp sgt i32 %10, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load double*, double** %xb.addr, align 8, !tbaa !2
  %12 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %12 to i64
  %arrayidx2 = getelementptr inbounds double, double* %11, i64 %idxprom
  %13 = load double, double* %arrayidx2, align 8, !tbaa !44
  %14 = load double*, double** %x.addr, align 8, !tbaa !2
  %15 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom3 = sext i32 %15 to i64
  %arrayidx4 = getelementptr inbounds double, double* %14, i64 %idxprom3
  %16 = load double, double* %arrayidx4, align 8, !tbaa !44
  %mul5 = fmul fast double 2.000000e+00, %16
  %17 = load double, double* %resb, align 8, !tbaa !44
  %mul6 = fmul fast double %mul5, %17
  %add = fadd fast double %13, %mul6
  %18 = load double*, double** %xb.addr, align 8, !tbaa !2
  %19 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom7 = sext i32 %19 to i64
  %arrayidx8 = getelementptr inbounds double, double* %18, i64 %idxprom7
  store double %add, double* %arrayidx8, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !tbaa !20
  %dec = add nsw i32 %20, -1
  store i32 %dec, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !76

for.end:                                          ; preds = %for.cond
  %21 = load double*, double** %xb.addr, align 8, !tbaa !2
  %arrayidx9 = getelementptr inbounds double, double* %21, i64 0
  %22 = load double, double* %arrayidx9, align 8, !tbaa !44
  %23 = load double*, double** %x.addr, align 8, !tbaa !2
  %arrayidx10 = getelementptr inbounds double, double* %23, i64 0
  %24 = load double, double* %arrayidx10, align 8, !tbaa !44
  %mul11 = fmul fast double 2.000000e+00, %24
  %25 = load double, double* %resb, align 8, !tbaa !44
  %mul12 = fmul fast double %mul11, %25
  %add13 = fadd fast double %22, %mul12
  %26 = load double*, double** %xb.addr, align 8, !tbaa !2
  %arrayidx14 = getelementptr inbounds double, double* %26, i64 0
  store double %add13, double* %arrayidx14, align 8, !tbaa !44
  %27 = bitcast double* %sqnorm to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #9
  %28 = bitcast double* %resb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #9
  %29 = bitcast double* %res to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #9
  %30 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %30) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @sqnorm_nodiff(i32 %n, double* %x) #8 {
entry:
  %n.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %res = alloca double, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast double* %res to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load double*, double** %x.addr, align 8, !tbaa !2
  %arrayidx = getelementptr inbounds double, double* %2, i64 0
  %3 = load double, double* %arrayidx, align 8, !tbaa !44
  %4 = load double*, double** %x.addr, align 8, !tbaa !2
  %arrayidx1 = getelementptr inbounds double, double* %4, i64 0
  %5 = load double, double* %arrayidx1, align 8, !tbaa !44
  %mul = fmul fast double %3, %5
  store double %mul, double* %res, align 8, !tbaa !44
  store i32 1, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !tbaa !20
  %7 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load double, double* %res, align 8, !tbaa !44
  %9 = load double*, double** %x.addr, align 8, !tbaa !2
  %10 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %10 to i64
  %arrayidx2 = getelementptr inbounds double, double* %9, i64 %idxprom
  %11 = load double, double* %arrayidx2, align 8, !tbaa !44
  %12 = load double*, double** %x.addr, align 8, !tbaa !2
  %13 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom3 = sext i32 %13 to i64
  %arrayidx4 = getelementptr inbounds double, double* %12, i64 %idxprom3
  %14 = load double, double* %arrayidx4, align 8, !tbaa !44
  %mul5 = fmul fast double %11, %14
  %add = fadd fast double %8, %mul5
  store double %add, double* %res, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !77

for.end:                                          ; preds = %for.cond
  %16 = load double, double* %res, align 8, !tbaa !44
  %17 = bitcast double* %res to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  %18 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %18) #9
  ret double %16
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @subtract_b(i32 %d, double* %x, double* %y, double* %yb, double* %out, double* %outb) #8 {
entry:
  %d.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %y.addr = alloca double*, align 8
  %yb.addr = alloca double*, align 8
  %out.addr = alloca double*, align 8
  %outb.addr = alloca double*, align 8
  %id = alloca i32, align 4
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %y, double** %y.addr, align 8, !tbaa !2
  store double* %yb, double** %yb.addr, align 8, !tbaa !2
  store double* %out, double** %out.addr, align 8, !tbaa !2
  store double* %outb, double** %outb.addr, align 8, !tbaa !2
  %0 = bitcast i32* %id to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = load i32, i32* %d.addr, align 4, !tbaa !20
  %sub = sub nsw i32 %1, 1
  store i32 %sub, i32* %id, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %id, align 4, !tbaa !20
  %cmp = icmp sgt i32 %2, -1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load double*, double** %yb.addr, align 8, !tbaa !2
  %4 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8, !tbaa !44
  %6 = load double*, double** %outb.addr, align 8, !tbaa !2
  %7 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom1 = sext i32 %7 to i64
  %arrayidx2 = getelementptr inbounds double, double* %6, i64 %idxprom1
  %8 = load double, double* %arrayidx2, align 8, !tbaa !44
  %sub3 = fsub fast double %5, %8
  %9 = load double*, double** %yb.addr, align 8, !tbaa !2
  %10 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom4 = sext i32 %10 to i64
  %arrayidx5 = getelementptr inbounds double, double* %9, i64 %idxprom4
  store double %sub3, double* %arrayidx5, align 8, !tbaa !44
  %11 = load double*, double** %outb.addr, align 8, !tbaa !2
  %12 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom6 = sext i32 %12 to i64
  %arrayidx7 = getelementptr inbounds double, double* %11, i64 %idxprom6
  store double 0.000000e+00, double* %arrayidx7, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %id, align 4, !tbaa !20
  %dec = add nsw i32 %13, -1
  store i32 %dec, i32* %id, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !78

for.end:                                          ; preds = %for.cond
  %14 = bitcast i32* %id to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %14) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @subtract_nodiff(i32 %d, double* %x, double* %y, double* %out) #8 {
entry:
  %d.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %y.addr = alloca double*, align 8
  %out.addr = alloca double*, align 8
  %id = alloca i32, align 4
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %y, double** %y.addr, align 8, !tbaa !2
  store double* %out, double** %out.addr, align 8, !tbaa !2
  %0 = bitcast i32* %id to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 0, i32* %id, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %id, align 4, !tbaa !20
  %2 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load double*, double** %x.addr, align 8, !tbaa !2
  %4 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds double, double* %3, i64 %idxprom
  %5 = load double, double* %arrayidx, align 8, !tbaa !44
  %6 = load double*, double** %y.addr, align 8, !tbaa !2
  %7 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom1 = sext i32 %7 to i64
  %arrayidx2 = getelementptr inbounds double, double* %6, i64 %idxprom1
  %8 = load double, double* %arrayidx2, align 8, !tbaa !44
  %sub = fsub fast double %5, %8
  %9 = load double*, double** %out.addr, align 8, !tbaa !2
  %10 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom3 = sext i32 %10 to i64
  %arrayidx4 = getelementptr inbounds double, double* %9, i64 %idxprom3
  store double %sub, double* %arrayidx4, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i32, i32* %id, align 4, !tbaa !20
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %id, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !79

for.end:                                          ; preds = %for.cond
  %12 = bitcast i32* %id to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %12) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @log_sum_exp_b(i32 %n, double* %x, double* %xb, double %log_sum_expb) #0 {
entry:
  %n.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %xb.addr = alloca double*, align 8
  %log_sum_expb.addr = alloca double, align 8
  %i = alloca i32, align 4
  %mx = alloca double, align 8
  %mxb = alloca double, align 8
  %tempb = alloca double, align 8
  %log_sum_exp = alloca double, align 8
  %semx = alloca double, align 8
  %semxb = alloca double, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %xb, double** %xb.addr, align 8, !tbaa !2
  store double %log_sum_expb, double* %log_sum_expb.addr, align 8, !tbaa !44
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast double* %mx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = bitcast double* %mxb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %3 = bitcast double* %tempb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #9
  %4 = bitcast double* %log_sum_exp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = load i32, i32* %n.addr, align 4, !tbaa !20
  %6 = load double*, double** %x.addr, align 8, !tbaa !2
  %call = call fast double @arr_max_nodiff(i32 %5, double* %6)
  store double %call, double* %mx, align 8, !tbaa !44
  %7 = bitcast double* %semx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #9
  store double 0.000000e+00, double* %semx, align 8, !tbaa !44
  %8 = bitcast double* %semxb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #9
  store double 0.000000e+00, double* %semxb, align 8, !tbaa !44
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !tbaa !20
  %10 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %9, %10
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load double, double* %semx, align 8, !tbaa !44
  %12 = load double*, double** %x.addr, align 8, !tbaa !2
  %13 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %13 to i64
  %arrayidx = getelementptr inbounds double, double* %12, i64 %idxprom
  %14 = load double, double* %arrayidx, align 8, !tbaa !44
  %15 = load double, double* %mx, align 8, !tbaa !44
  %sub = fsub fast double %14, %15
  %16 = call fast double @llvm.exp.f64(double %sub)
  %add = fadd fast double %11, %16
  store double %add, double* %semx, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !80

for.end:                                          ; preds = %for.cond
  %18 = load double, double* %log_sum_expb.addr, align 8, !tbaa !44
  %19 = load double, double* %semx, align 8, !tbaa !44
  %div = fdiv fast double %18, %19
  store double %div, double* %semxb, align 8, !tbaa !44
  %20 = load double, double* %log_sum_expb.addr, align 8, !tbaa !44
  store double %20, double* %mxb, align 8, !tbaa !44
  %21 = load i32, i32* %n.addr, align 4, !tbaa !20
  %sub1 = sub nsw i32 %21, 1
  store i32 %sub1, i32* %i, align 4, !tbaa !20
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc14, %for.end
  %22 = load i32, i32* %i, align 4, !tbaa !20
  %cmp3 = icmp sgt i32 %22, -1
  br i1 %cmp3, label %for.body4, label %for.end15

for.body4:                                        ; preds = %for.cond2
  %23 = load double*, double** %x.addr, align 8, !tbaa !2
  %24 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom5 = sext i32 %24 to i64
  %arrayidx6 = getelementptr inbounds double, double* %23, i64 %idxprom5
  %25 = load double, double* %arrayidx6, align 8, !tbaa !44
  %26 = load double, double* %mx, align 8, !tbaa !44
  %sub7 = fsub fast double %25, %26
  %27 = call fast double @llvm.exp.f64(double %sub7)
  %28 = load double, double* %semxb, align 8, !tbaa !44
  %mul = fmul fast double %27, %28
  store double %mul, double* %tempb, align 8, !tbaa !44
  %29 = load double*, double** %xb.addr, align 8, !tbaa !2
  %30 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom8 = sext i32 %30 to i64
  %arrayidx9 = getelementptr inbounds double, double* %29, i64 %idxprom8
  %31 = load double, double* %arrayidx9, align 8, !tbaa !44
  %32 = load double, double* %tempb, align 8, !tbaa !44
  %add10 = fadd fast double %31, %32
  %33 = load double*, double** %xb.addr, align 8, !tbaa !2
  %34 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom11 = sext i32 %34 to i64
  %arrayidx12 = getelementptr inbounds double, double* %33, i64 %idxprom11
  store double %add10, double* %arrayidx12, align 8, !tbaa !44
  %35 = load double, double* %mxb, align 8, !tbaa !44
  %36 = load double, double* %tempb, align 8, !tbaa !44
  %sub13 = fsub fast double %35, %36
  store double %sub13, double* %mxb, align 8, !tbaa !44
  br label %for.inc14

for.inc14:                                        ; preds = %for.body4
  %37 = load i32, i32* %i, align 4, !tbaa !20
  %dec = add nsw i32 %37, -1
  store i32 %dec, i32* %i, align 4, !tbaa !20
  br label %for.cond2, !llvm.loop !81

for.end15:                                        ; preds = %for.cond2
  %38 = load i32, i32* %n.addr, align 4, !tbaa !20
  %39 = load double*, double** %x.addr, align 8, !tbaa !2
  %40 = load double*, double** %xb.addr, align 8, !tbaa !2
  %41 = load double, double* %mxb, align 8, !tbaa !44
  call void @arr_max_b(i32 %38, double* %39, double* %40, double %41)
  %42 = bitcast double* %semxb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #9
  %43 = bitcast double* %semx to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #9
  %44 = bitcast double* %log_sum_exp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #9
  %45 = bitcast double* %tempb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #9
  %46 = bitcast double* %mxb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #9
  %47 = bitcast double* %mx to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #9
  %48 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %48) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @log_sum_exp_nodiff(i32 %n, double* %x) #8 {
entry:
  %n.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %mx = alloca double, align 8
  %semx = alloca double, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast double* %mx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load i32, i32* %n.addr, align 4, !tbaa !20
  %3 = load double*, double** %x.addr, align 8, !tbaa !2
  %call = call fast double @arr_max_nodiff(i32 %2, double* %3)
  store double %call, double* %mx, align 8, !tbaa !44
  %4 = bitcast double* %semx to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  store double 0.000000e+00, double* %semx, align 8, !tbaa !44
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !tbaa !20
  %6 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %5, %6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load double, double* %semx, align 8, !tbaa !44
  %8 = load double*, double** %x.addr, align 8, !tbaa !2
  %9 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds double, double* %8, i64 %idxprom
  %10 = load double, double* %arrayidx, align 8, !tbaa !44
  %11 = load double, double* %mx, align 8, !tbaa !44
  %sub = fsub fast double %10, %11
  %12 = call fast double @llvm.exp.f64(double %sub)
  %add = fadd fast double %7, %12
  store double %add, double* %semx, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !82

for.end:                                          ; preds = %for.cond
  %14 = load double, double* %semx, align 8, !tbaa !44
  %15 = call fast double @llvm.log.f64(double %14)
  %16 = load double, double* %mx, align 8, !tbaa !44
  %add1 = fadd fast double %15, %16
  %17 = bitcast double* %semx to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  %18 = bitcast double* %mx to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #9
  %19 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %19) #9
  ret double %add1
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @log_gamma_distrib_nodiff(double %a, double %p) #8 {
entry:
  %a.addr = alloca double, align 8
  %p.addr = alloca double, align 8
  %j = alloca i32, align 4
  %out = alloca double, align 8
  %arg1 = alloca double, align 8
  %result1 = alloca float, align 4
  store double %a, double* %a.addr, align 8, !tbaa !44
  store double %p, double* %p.addr, align 8, !tbaa !44
  %0 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast double* %out to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load double, double* %p.addr, align 8, !tbaa !44
  %mul = fmul fast double 2.500000e-01, %2
  %3 = load double, double* %p.addr, align 8, !tbaa !44
  %sub = fsub fast double %3, 1.000000e+00
  %mul1 = fmul fast double %mul, %sub
  %4 = call fast double @llvm.log.f64(double 0x400921FB54442EEA)
  %mul2 = fmul fast double %mul1, %4
  store double %mul2, double* %out, align 8, !tbaa !44
  %5 = bitcast double* %arg1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %6 = bitcast float* %result1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #9
  store i32 1, i32* %j, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %j, align 4, !tbaa !20
  %conv = sitofp i32 %7 to double
  %8 = load double, double* %p.addr, align 8, !tbaa !44
  %add = fadd fast double %8, 1.000000e+00
  %cmp = fcmp fast olt double %conv, %add
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load double, double* %a.addr, align 8, !tbaa !44
  %10 = load i32, i32* %j, align 4, !tbaa !20
  %sub3 = sub nsw i32 1, %10
  %conv4 = sitofp i32 %sub3 to double
  %mul5 = fmul fast double 5.000000e-01, %conv4
  %add6 = fadd fast double %9, %mul5
  store double %add6, double* %arg1, align 8, !tbaa !44
  %11 = load double, double* %arg1, align 8, !tbaa !44
  %call = call fast double @lgamma(double %11) #9
  %conv7 = fptrunc double %call to float
  store float %conv7, float* %result1, align 4, !tbaa !83
  %12 = load double, double* %out, align 8, !tbaa !44
  %13 = load float, float* %result1, align 4, !tbaa !83
  %conv8 = fpext float %13 to double
  %add9 = fadd fast double %12, %conv8
  store double %add9, double* %out, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %j, align 4, !tbaa !20
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %j, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !85

for.end:                                          ; preds = %for.cond
  %15 = load double, double* %out, align 8, !tbaa !44
  %16 = bitcast float* %result1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %16) #9
  %17 = bitcast double* %arg1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  %18 = bitcast double* %out to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #9
  %19 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %19) #9
  ret double %15
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @log_wishart_prior_b(i32 %p, i32 %k, double %wishart.coerce0, i32 %wishart.coerce1, double* %sum_qs, double* %sum_qsb, double* %Qdiags, double* %Qdiagsb, double* %icf, double* %icfb, double %log_wishart_priorb) #8 {
entry:
  %wishart = alloca %struct.Wishart, align 8
  %p.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %sum_qs.addr = alloca double*, align 8
  %sum_qsb.addr = alloca double*, align 8
  %Qdiags.addr = alloca double*, align 8
  %Qdiagsb.addr = alloca double*, align 8
  %icf.addr = alloca double*, align 8
  %icfb.addr = alloca double*, align 8
  %log_wishart_priorb.addr = alloca double, align 8
  %ik = alloca i32, align 4
  %n = alloca i32, align 4
  %icf_sz = alloca i32, align 4
  %C = alloca double, align 8
  %arg1 = alloca float, align 4
  %result1 = alloca double, align 8
  %out = alloca double, align 8
  %outb = alloca double, align 8
  %log_wishart_prior = alloca double, align 8
  %frobenius = alloca double, align 8
  %result13 = alloca double, align 8
  %arg14 = alloca i32, align 4
  %result2 = alloca double, align 8
  %frobenius32 = alloca double, align 8
  %frobeniusb = alloca double, align 8
  %result133 = alloca double, align 8
  %result1b = alloca double, align 8
  %arg134 = alloca i32, align 4
  %result235 = alloca double, align 8
  %result2b = alloca double, align 8
  %0 = bitcast %struct.Wishart* %wishart to { double, i32 }*
  %1 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 0
  store double %wishart.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 1
  store i32 %wishart.coerce1, i32* %2, align 8
  store i32 %p, i32* %p.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store double* %sum_qs, double** %sum_qs.addr, align 8, !tbaa !2
  store double* %sum_qsb, double** %sum_qsb.addr, align 8, !tbaa !2
  store double* %Qdiags, double** %Qdiags.addr, align 8, !tbaa !2
  store double* %Qdiagsb, double** %Qdiagsb.addr, align 8, !tbaa !2
  store double* %icf, double** %icf.addr, align 8, !tbaa !2
  store double* %icfb, double** %icfb.addr, align 8, !tbaa !2
  store double %log_wishart_priorb, double* %log_wishart_priorb.addr, align 8, !tbaa !44
  %3 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #9
  %4 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #9
  %5 = load i32, i32* %p.addr, align 4, !tbaa !20
  %m = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 1
  %6 = load i32, i32* %m, align 8, !tbaa !63
  %add = add nsw i32 %5, %6
  %add1 = add nsw i32 %add, 1
  store i32 %add1, i32* %n, align 4, !tbaa !20
  %7 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #9
  %8 = load i32, i32* %p.addr, align 4, !tbaa !20
  %9 = load i32, i32* %p.addr, align 4, !tbaa !20
  %add2 = add nsw i32 %9, 1
  %mul = mul nsw i32 %8, %add2
  %div = sdiv i32 %mul, 2
  store i32 %div, i32* %icf_sz, align 4, !tbaa !20
  %10 = bitcast double* %C to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #9
  %11 = bitcast float* %arg1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #9
  %12 = bitcast double* %result1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #9
  %13 = bitcast double* %out to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %13) #9
  store double 0.000000e+00, double* %out, align 8, !tbaa !44
  %14 = bitcast double* %outb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #9
  store double 0.000000e+00, double* %outb, align 8, !tbaa !44
  %15 = bitcast double* %log_wishart_prior to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #9
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %16 = load i32, i32* %ik, align 4, !tbaa !20
  %17 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %16, %17
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = bitcast double* %frobenius to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #9
  %19 = bitcast double* %result13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #9
  %20 = bitcast i32* %arg14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #9
  %21 = bitcast double* %result2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #9
  %22 = bitcast double* %result2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #9
  %23 = bitcast i32* %arg14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %23) #9
  %24 = bitcast double* %result13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #9
  %25 = bitcast double* %frobenius to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %26 = load i32, i32* %ik, align 4, !tbaa !20
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %ik, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !86

for.end:                                          ; preds = %for.cond
  %27 = load double, double* %log_wishart_priorb.addr, align 8, !tbaa !44
  store double %27, double* %outb, align 8, !tbaa !44
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc9, %for.end
  %28 = load i32, i32* %ik, align 4, !tbaa !20
  %29 = load i32, i32* %k.addr, align 4, !tbaa !20
  %30 = load i32, i32* %p.addr, align 4, !tbaa !20
  %mul6 = mul nsw i32 %29, %30
  %cmp7 = icmp slt i32 %28, %mul6
  br i1 %cmp7, label %for.body8, label %for.end11

for.body8:                                        ; preds = %for.cond5
  %31 = load double*, double** %Qdiagsb.addr, align 8, !tbaa !2
  %32 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom = sext i32 %32 to i64
  %arrayidx = getelementptr inbounds double, double* %31, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !44
  br label %for.inc9

for.inc9:                                         ; preds = %for.body8
  %33 = load i32, i32* %ik, align 4, !tbaa !20
  %inc10 = add nsw i32 %33, 1
  store i32 %inc10, i32* %ik, align 4, !tbaa !20
  br label %for.cond5, !llvm.loop !87

for.end11:                                        ; preds = %for.cond5
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc17, %for.end11
  %34 = load i32, i32* %ik, align 4, !tbaa !20
  %35 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp13 = icmp slt i32 %34, %35
  br i1 %cmp13, label %for.body14, label %for.end19

for.body14:                                       ; preds = %for.cond12
  %36 = load double*, double** %sum_qsb.addr, align 8, !tbaa !2
  %37 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom15 = sext i32 %37 to i64
  %arrayidx16 = getelementptr inbounds double, double* %36, i64 %idxprom15
  store double 0.000000e+00, double* %arrayidx16, align 8, !tbaa !44
  br label %for.inc17

for.inc17:                                        ; preds = %for.body14
  %38 = load i32, i32* %ik, align 4, !tbaa !20
  %inc18 = add nsw i32 %38, 1
  store i32 %inc18, i32* %ik, align 4, !tbaa !20
  br label %for.cond12, !llvm.loop !88

for.end19:                                        ; preds = %for.cond12
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond20

for.cond20:                                       ; preds = %for.inc26, %for.end19
  %39 = load i32, i32* %ik, align 4, !tbaa !20
  %40 = load i32, i32* %k.addr, align 4, !tbaa !20
  %41 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul21 = mul nsw i32 %40, %41
  %cmp22 = icmp slt i32 %39, %mul21
  br i1 %cmp22, label %for.body23, label %for.end28

for.body23:                                       ; preds = %for.cond20
  %42 = load double*, double** %icfb.addr, align 8, !tbaa !2
  %43 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom24 = sext i32 %43 to i64
  %arrayidx25 = getelementptr inbounds double, double* %42, i64 %idxprom24
  store double 0.000000e+00, double* %arrayidx25, align 8, !tbaa !44
  br label %for.inc26

for.inc26:                                        ; preds = %for.body23
  %44 = load i32, i32* %ik, align 4, !tbaa !20
  %inc27 = add nsw i32 %44, 1
  store i32 %inc27, i32* %ik, align 4, !tbaa !20
  br label %for.cond20, !llvm.loop !89

for.end28:                                        ; preds = %for.cond20
  %45 = load i32, i32* %k.addr, align 4, !tbaa !20
  %sub = sub nsw i32 %45, 1
  store i32 %sub, i32* %ik, align 4, !tbaa !20
  br label %for.cond29

for.cond29:                                       ; preds = %for.inc62, %for.end28
  %46 = load i32, i32* %ik, align 4, !tbaa !20
  %cmp30 = icmp sgt i32 %46, -1
  br i1 %cmp30, label %for.body31, label %for.end63

for.body31:                                       ; preds = %for.cond29
  %47 = bitcast double* %frobenius32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #9
  %48 = bitcast double* %frobeniusb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #9
  %49 = bitcast double* %result133 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #9
  %50 = bitcast double* %result1b to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #9
  %51 = bitcast i32* %arg134 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #9
  %52 = bitcast double* %result235 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #9
  %53 = bitcast double* %result2b to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #9
  %gamma = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %54 = load double, double* %gamma, align 8, !tbaa !64
  %gamma36 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %55 = load double, double* %gamma36, align 8, !tbaa !64
  %mul37 = fmul fast double %54, %55
  %mul38 = fmul fast double %mul37, 5.000000e-01
  %56 = load double, double* %outb, align 8, !tbaa !44
  %mul39 = fmul fast double %mul38, %56
  store double %mul39, double* %frobeniusb, align 8, !tbaa !44
  %57 = load double*, double** %sum_qsb.addr, align 8, !tbaa !2
  %58 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom40 = sext i32 %58 to i64
  %arrayidx41 = getelementptr inbounds double, double* %57, i64 %idxprom40
  %59 = load double, double* %arrayidx41, align 8, !tbaa !44
  %m42 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 1
  %60 = load i32, i32* %m42, align 8, !tbaa !63
  %conv = sitofp i32 %60 to double
  %61 = load double, double* %outb, align 8, !tbaa !44
  %mul43 = fmul fast double %conv, %61
  %sub44 = fsub fast double %59, %mul43
  %62 = load double*, double** %sum_qsb.addr, align 8, !tbaa !2
  %63 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom45 = sext i32 %63 to i64
  %arrayidx46 = getelementptr inbounds double, double* %62, i64 %idxprom45
  store double %sub44, double* %arrayidx46, align 8, !tbaa !44
  %64 = load double, double* %frobeniusb, align 8, !tbaa !44
  store double %64, double* %result1b, align 8, !tbaa !44
  %65 = load double, double* %frobeniusb, align 8, !tbaa !44
  store double %65, double* %result2b, align 8, !tbaa !44
  %66 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %67 = load i32, i32* %p.addr, align 4, !tbaa !20
  %sub47 = sub nsw i32 %66, %67
  store i32 %sub47, i32* %arg134, align 4, !tbaa !20
  %68 = load i32, i32* %arg134, align 4, !tbaa !20
  %69 = load double*, double** %icf.addr, align 8, !tbaa !2
  %70 = load i32, i32* %ik, align 4, !tbaa !20
  %71 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul48 = mul nsw i32 %70, %71
  %72 = load i32, i32* %p.addr, align 4, !tbaa !20
  %add49 = add nsw i32 %mul48, %72
  %idxprom50 = sext i32 %add49 to i64
  %arrayidx51 = getelementptr inbounds double, double* %69, i64 %idxprom50
  %73 = load double*, double** %icfb.addr, align 8, !tbaa !2
  %74 = load i32, i32* %ik, align 4, !tbaa !20
  %75 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul52 = mul nsw i32 %74, %75
  %76 = load i32, i32* %p.addr, align 4, !tbaa !20
  %add53 = add nsw i32 %mul52, %76
  %idxprom54 = sext i32 %add53 to i64
  %arrayidx55 = getelementptr inbounds double, double* %73, i64 %idxprom54
  %77 = load double, double* %result2b, align 8, !tbaa !44
  call void @sqnorm_b(i32 %68, double* %arrayidx51, double* %arrayidx55, double %77)
  %78 = load i32, i32* %p.addr, align 4, !tbaa !20
  %79 = load double*, double** %Qdiags.addr, align 8, !tbaa !2
  %80 = load i32, i32* %ik, align 4, !tbaa !20
  %81 = load i32, i32* %p.addr, align 4, !tbaa !20
  %mul56 = mul nsw i32 %80, %81
  %idxprom57 = sext i32 %mul56 to i64
  %arrayidx58 = getelementptr inbounds double, double* %79, i64 %idxprom57
  %82 = load double*, double** %Qdiagsb.addr, align 8, !tbaa !2
  %83 = load i32, i32* %ik, align 4, !tbaa !20
  %84 = load i32, i32* %p.addr, align 4, !tbaa !20
  %mul59 = mul nsw i32 %83, %84
  %idxprom60 = sext i32 %mul59 to i64
  %arrayidx61 = getelementptr inbounds double, double* %82, i64 %idxprom60
  %85 = load double, double* %result1b, align 8, !tbaa !44
  call void @sqnorm_b(i32 %78, double* %arrayidx58, double* %arrayidx61, double %85)
  %86 = bitcast double* %result2b to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #9
  %87 = bitcast double* %result235 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %87) #9
  %88 = bitcast i32* %arg134 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %88) #9
  %89 = bitcast double* %result1b to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %89) #9
  %90 = bitcast double* %result133 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %90) #9
  %91 = bitcast double* %frobeniusb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %91) #9
  %92 = bitcast double* %frobenius32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %92) #9
  br label %for.inc62

for.inc62:                                        ; preds = %for.body31
  %93 = load i32, i32* %ik, align 4, !tbaa !20
  %dec = add nsw i32 %93, -1
  store i32 %dec, i32* %ik, align 4, !tbaa !20
  br label %for.cond29, !llvm.loop !90

for.end63:                                        ; preds = %for.cond29
  %94 = bitcast double* %log_wishart_prior to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #9
  %95 = bitcast double* %outb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #9
  %96 = bitcast double* %out to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %96) #9
  %97 = bitcast double* %result1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %97) #9
  %98 = bitcast float* %arg1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %98) #9
  %99 = bitcast double* %C to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #9
  %100 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %100) #9
  %101 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %101) #9
  %102 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %102) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local double @log_wishart_prior_nodiff(i32 %p, i32 %k, double %wishart.coerce0, i32 %wishart.coerce1, double* %sum_qs, double* %Qdiags, double* %icf) #0 {
entry:
  %wishart = alloca %struct.Wishart, align 8
  %p.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %sum_qs.addr = alloca double*, align 8
  %Qdiags.addr = alloca double*, align 8
  %icf.addr = alloca double*, align 8
  %ik = alloca i32, align 4
  %n = alloca i32, align 4
  %icf_sz = alloca i32, align 4
  %C = alloca double, align 8
  %arg1 = alloca float, align 4
  %result1 = alloca double, align 8
  %out = alloca double, align 8
  %frobenius = alloca double, align 8
  %result113 = alloca double, align 8
  %arg114 = alloca i32, align 4
  %result2 = alloca double, align 8
  %0 = bitcast %struct.Wishart* %wishart to { double, i32 }*
  %1 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 0
  store double %wishart.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 1
  store i32 %wishart.coerce1, i32* %2, align 8
  store i32 %p, i32* %p.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store double* %sum_qs, double** %sum_qs.addr, align 8, !tbaa !2
  store double* %Qdiags, double** %Qdiags.addr, align 8, !tbaa !2
  store double* %icf, double** %icf.addr, align 8, !tbaa !2
  %3 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #9
  %4 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #9
  %5 = load i32, i32* %p.addr, align 4, !tbaa !20
  %m = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 1
  %6 = load i32, i32* %m, align 8, !tbaa !63
  %add = add nsw i32 %5, %6
  %add1 = add nsw i32 %add, 1
  store i32 %add1, i32* %n, align 4, !tbaa !20
  %7 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #9
  %8 = load i32, i32* %p.addr, align 4, !tbaa !20
  %9 = load i32, i32* %p.addr, align 4, !tbaa !20
  %add2 = add nsw i32 %9, 1
  %mul = mul nsw i32 %8, %add2
  %div = sdiv i32 %mul, 2
  store i32 %div, i32* %icf_sz, align 4, !tbaa !20
  %10 = bitcast double* %C to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #9
  %11 = bitcast float* %arg1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #9
  %12 = bitcast double* %result1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #9
  %13 = load i32, i32* %n, align 4, !tbaa !20
  %conv = sitofp i32 %13 to double
  %mul3 = fmul fast double 5.000000e-01, %conv
  %conv4 = fptrunc double %mul3 to float
  store float %conv4, float* %arg1, align 4, !tbaa !83
  %14 = load float, float* %arg1, align 4, !tbaa !83
  %conv5 = fpext float %14 to double
  %15 = load i32, i32* %p.addr, align 4, !tbaa !20
  %conv6 = sitofp i32 %15 to double
  %call = call fast double @log_gamma_distrib_nodiff(double %conv5, double %conv6)
  store double %call, double* %result1, align 8, !tbaa !44
  %16 = load i32, i32* %n, align 4, !tbaa !20
  %17 = load i32, i32* %p.addr, align 4, !tbaa !20
  %mul7 = mul nsw i32 %16, %17
  %conv8 = sitofp i32 %mul7 to double
  %gamma = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %18 = load double, double* %gamma, align 8, !tbaa !64
  %19 = call fast double @llvm.log.f64(double %18)
  %call9 = call fast double @_ZSt3logIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 2)
  %mul10 = fmul fast double 5.000000e-01, %call9
  %sub = fsub fast double %19, %mul10
  %mul11 = fmul fast double %conv8, %sub
  %20 = load double, double* %result1, align 8, !tbaa !44
  %sub12 = fsub fast double %mul11, %20
  store double %sub12, double* %C, align 8, !tbaa !44
  %21 = bitcast double* %out to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #9
  store double 0.000000e+00, double* %out, align 8, !tbaa !44
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %22 = load i32, i32* %ik, align 4, !tbaa !20
  %23 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %22, %23
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %24 = bitcast double* %frobenius to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #9
  %25 = bitcast double* %result113 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #9
  %26 = bitcast i32* %arg114 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #9
  %27 = bitcast double* %result2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #9
  %28 = load i32, i32* %p.addr, align 4, !tbaa !20
  %29 = load double*, double** %Qdiags.addr, align 8, !tbaa !2
  %30 = load i32, i32* %ik, align 4, !tbaa !20
  %31 = load i32, i32* %p.addr, align 4, !tbaa !20
  %mul15 = mul nsw i32 %30, %31
  %idxprom = sext i32 %mul15 to i64
  %arrayidx = getelementptr inbounds double, double* %29, i64 %idxprom
  %call16 = call fast double @sqnorm_nodiff(i32 %28, double* %arrayidx)
  store double %call16, double* %result113, align 8, !tbaa !44
  %32 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %33 = load i32, i32* %p.addr, align 4, !tbaa !20
  %sub17 = sub nsw i32 %32, %33
  store i32 %sub17, i32* %arg114, align 4, !tbaa !20
  %34 = load i32, i32* %arg114, align 4, !tbaa !20
  %35 = load double*, double** %icf.addr, align 8, !tbaa !2
  %36 = load i32, i32* %ik, align 4, !tbaa !20
  %37 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul18 = mul nsw i32 %36, %37
  %38 = load i32, i32* %p.addr, align 4, !tbaa !20
  %add19 = add nsw i32 %mul18, %38
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds double, double* %35, i64 %idxprom20
  %call22 = call fast double @sqnorm_nodiff(i32 %34, double* %arrayidx21)
  store double %call22, double* %result2, align 8, !tbaa !44
  %39 = load double, double* %result113, align 8, !tbaa !44
  %40 = load double, double* %result2, align 8, !tbaa !44
  %add23 = fadd fast double %39, %40
  store double %add23, double* %frobenius, align 8, !tbaa !44
  %41 = load double, double* %out, align 8, !tbaa !44
  %gamma24 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %42 = load double, double* %gamma24, align 8, !tbaa !64
  %mul25 = fmul fast double 5.000000e-01, %42
  %gamma26 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %43 = load double, double* %gamma26, align 8, !tbaa !64
  %mul27 = fmul fast double %mul25, %43
  %44 = load double, double* %frobenius, align 8, !tbaa !44
  %mul28 = fmul fast double %mul27, %44
  %add29 = fadd fast double %41, %mul28
  %m30 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 1
  %45 = load i32, i32* %m30, align 8, !tbaa !63
  %conv31 = sitofp i32 %45 to double
  %46 = load double*, double** %sum_qs.addr, align 8, !tbaa !2
  %47 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom32 = sext i32 %47 to i64
  %arrayidx33 = getelementptr inbounds double, double* %46, i64 %idxprom32
  %48 = load double, double* %arrayidx33, align 8, !tbaa !44
  %mul34 = fmul fast double %conv31, %48
  %sub35 = fsub fast double %add29, %mul34
  store double %sub35, double* %out, align 8, !tbaa !44
  %49 = bitcast double* %result2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #9
  %50 = bitcast i32* %arg114 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %50) #9
  %51 = bitcast double* %result113 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #9
  %52 = bitcast double* %frobenius to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %52) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %53 = load i32, i32* %ik, align 4, !tbaa !20
  %inc = add nsw i32 %53, 1
  store i32 %inc, i32* %ik, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !91

for.end:                                          ; preds = %for.cond
  %54 = load double, double* %out, align 8, !tbaa !44
  %55 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv36 = sitofp i32 %55 to double
  %56 = load double, double* %C, align 8, !tbaa !44
  %mul37 = fmul fast double %conv36, %56
  %sub38 = fsub fast double %54, %mul37
  %57 = bitcast double* %out to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #9
  %58 = bitcast double* %result1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #9
  %59 = bitcast float* %arg1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %59) #9
  %60 = bitcast double* %C to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %60) #9
  %61 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %61) #9
  %62 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %62) #9
  %63 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %63) #9
  ret double %sub38
}

; Function Attrs: uwtable mustprogress
define dso_local void @preprocess_qs_b(i32 %d, i32 %k, double* %icf, double* %icfb, double* %sum_qs, double* %sum_qsb, double* %Qdiags, double* %Qdiagsb) #0 {
entry:
  %d.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %icf.addr = alloca double*, align 8
  %icfb.addr = alloca double*, align 8
  %sum_qs.addr = alloca double*, align 8
  %sum_qsb.addr = alloca double*, align 8
  %Qdiags.addr = alloca double*, align 8
  %Qdiagsb.addr = alloca double*, align 8
  %ik = alloca i32, align 4
  %id = alloca i32, align 4
  %icf_sz = alloca i32, align 4
  %q = alloca double, align 8
  %q16 = alloca double, align 8
  %qb = alloca double, align 8
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store double* %icf, double** %icf.addr, align 8, !tbaa !2
  store double* %icfb, double** %icfb.addr, align 8, !tbaa !2
  store double* %sum_qs, double** %sum_qs.addr, align 8, !tbaa !2
  store double* %sum_qsb, double** %sum_qsb.addr, align 8, !tbaa !2
  store double* %Qdiags, double** %Qdiags.addr, align 8, !tbaa !2
  store double* %Qdiagsb, double** %Qdiagsb.addr, align 8, !tbaa !2
  %0 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast i32* %id to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  %2 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #9
  %3 = load i32, i32* %d.addr, align 4, !tbaa !20
  %4 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add = add nsw i32 %4, 1
  %mul = mul nsw i32 %3, %add
  %div = sdiv i32 %mul, 2
  store i32 %div, i32* %icf_sz, align 4, !tbaa !20
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry
  %5 = load i32, i32* %ik, align 4, !tbaa !20
  %6 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %5, %6
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %id, align 4, !tbaa !20
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %7 = load i32, i32* %id, align 4, !tbaa !20
  %8 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp2 = icmp slt i32 %7, %8
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %9 = bitcast double* %q to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #9
  %10 = load double*, double** %icf.addr, align 8, !tbaa !2
  %11 = load i32, i32* %ik, align 4, !tbaa !20
  %12 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul4 = mul nsw i32 %11, %12
  %13 = load i32, i32* %id, align 4, !tbaa !20
  %add5 = add nsw i32 %mul4, %13
  %idxprom = sext i32 %add5 to i64
  %arrayidx = getelementptr inbounds double, double* %10, i64 %idxprom
  %14 = load double, double* %arrayidx, align 8, !tbaa !44
  store double %14, double* %q, align 8, !tbaa !44
  %15 = load double, double* %q, align 8, !tbaa !44
  call void @pushReal8(double %15)
  %16 = bitcast double* %q to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %16) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %17 = load i32, i32* %id, align 4, !tbaa !20
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %id, align 4, !tbaa !20
  br label %for.cond1, !llvm.loop !92

for.end:                                          ; preds = %for.cond1
  br label %for.inc6

for.inc6:                                         ; preds = %for.end
  %18 = load i32, i32* %ik, align 4, !tbaa !20
  %inc7 = add nsw i32 %18, 1
  store i32 %inc7, i32* %ik, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !93

for.end8:                                         ; preds = %for.cond
  %19 = load i32, i32* %k.addr, align 4, !tbaa !20
  %sub = sub nsw i32 %19, 1
  store i32 %sub, i32* %ik, align 4, !tbaa !20
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc42, %for.end8
  %20 = load i32, i32* %ik, align 4, !tbaa !20
  %cmp10 = icmp sgt i32 %20, -1
  br i1 %cmp10, label %for.body11, label %for.end44

for.body11:                                       ; preds = %for.cond9
  %21 = load i32, i32* %d.addr, align 4, !tbaa !20
  %sub12 = sub nsw i32 %21, 1
  store i32 %sub12, i32* %id, align 4, !tbaa !20
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc38, %for.body11
  %22 = load i32, i32* %id, align 4, !tbaa !20
  %cmp14 = icmp sgt i32 %22, -1
  br i1 %cmp14, label %for.body15, label %for.end39

for.body15:                                       ; preds = %for.cond13
  %23 = bitcast double* %q16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #9
  %24 = bitcast double* %qb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %24) #9
  store double 0.000000e+00, double* %qb, align 8, !tbaa !44
  call void @popReal8(double* %q16)
  %25 = load double, double* %q16, align 8, !tbaa !44
  %26 = call fast double @llvm.exp.f64(double %25)
  %27 = load double*, double** %Qdiagsb.addr, align 8, !tbaa !2
  %28 = load i32, i32* %ik, align 4, !tbaa !20
  %29 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul17 = mul nsw i32 %28, %29
  %30 = load i32, i32* %id, align 4, !tbaa !20
  %add18 = add nsw i32 %mul17, %30
  %idxprom19 = sext i32 %add18 to i64
  %arrayidx20 = getelementptr inbounds double, double* %27, i64 %idxprom19
  %31 = load double, double* %arrayidx20, align 8, !tbaa !44
  %mul21 = fmul fast double %26, %31
  store double %mul21, double* %qb, align 8, !tbaa !44
  %32 = load double*, double** %Qdiagsb.addr, align 8, !tbaa !2
  %33 = load i32, i32* %ik, align 4, !tbaa !20
  %34 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul22 = mul nsw i32 %33, %34
  %35 = load i32, i32* %id, align 4, !tbaa !20
  %add23 = add nsw i32 %mul22, %35
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds double, double* %32, i64 %idxprom24
  store double 0.000000e+00, double* %arrayidx25, align 8, !tbaa !44
  %36 = load double, double* %qb, align 8, !tbaa !44
  %37 = load double*, double** %sum_qsb.addr, align 8, !tbaa !2
  %38 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom26 = sext i32 %38 to i64
  %arrayidx27 = getelementptr inbounds double, double* %37, i64 %idxprom26
  %39 = load double, double* %arrayidx27, align 8, !tbaa !44
  %add28 = fadd fast double %36, %39
  store double %add28, double* %qb, align 8, !tbaa !44
  %40 = load double*, double** %icfb.addr, align 8, !tbaa !2
  %41 = load i32, i32* %ik, align 4, !tbaa !20
  %42 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul29 = mul nsw i32 %41, %42
  %43 = load i32, i32* %id, align 4, !tbaa !20
  %add30 = add nsw i32 %mul29, %43
  %idxprom31 = sext i32 %add30 to i64
  %arrayidx32 = getelementptr inbounds double, double* %40, i64 %idxprom31
  %44 = load double, double* %arrayidx32, align 8, !tbaa !44
  %45 = load double, double* %qb, align 8, !tbaa !44
  %add33 = fadd fast double %44, %45
  %46 = load double*, double** %icfb.addr, align 8, !tbaa !2
  %47 = load i32, i32* %ik, align 4, !tbaa !20
  %48 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul34 = mul nsw i32 %47, %48
  %49 = load i32, i32* %id, align 4, !tbaa !20
  %add35 = add nsw i32 %mul34, %49
  %idxprom36 = sext i32 %add35 to i64
  %arrayidx37 = getelementptr inbounds double, double* %46, i64 %idxprom36
  store double %add33, double* %arrayidx37, align 8, !tbaa !44
  %50 = bitcast double* %qb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #9
  %51 = bitcast double* %q16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #9
  br label %for.inc38

for.inc38:                                        ; preds = %for.body15
  %52 = load i32, i32* %id, align 4, !tbaa !20
  %dec = add nsw i32 %52, -1
  store i32 %dec, i32* %id, align 4, !tbaa !20
  br label %for.cond13, !llvm.loop !94

for.end39:                                        ; preds = %for.cond13
  %53 = load double*, double** %sum_qsb.addr, align 8, !tbaa !2
  %54 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom40 = sext i32 %54 to i64
  %arrayidx41 = getelementptr inbounds double, double* %53, i64 %idxprom40
  store double 0.000000e+00, double* %arrayidx41, align 8, !tbaa !44
  br label %for.inc42

for.inc42:                                        ; preds = %for.end39
  %55 = load i32, i32* %ik, align 4, !tbaa !20
  %dec43 = add nsw i32 %55, -1
  store i32 %dec43, i32* %ik, align 4, !tbaa !20
  br label %for.cond9, !llvm.loop !95

for.end44:                                        ; preds = %for.cond9
  %56 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %56) #9
  %57 = bitcast i32* %id to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %57) #9
  %58 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %58) #9
  ret void
}

declare dso_local void @pushReal8(double) #2

declare dso_local void @popReal8(double*) #2

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @preprocess_qs_nodiff(i32 %d, i32 %k, double* %icf, double* %sum_qs, double* %Qdiags) #8 {
entry:
  %d.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %icf.addr = alloca double*, align 8
  %sum_qs.addr = alloca double*, align 8
  %Qdiags.addr = alloca double*, align 8
  %ik = alloca i32, align 4
  %id = alloca i32, align 4
  %icf_sz = alloca i32, align 4
  %q = alloca double, align 8
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store double* %icf, double** %icf.addr, align 8, !tbaa !2
  store double* %sum_qs, double** %sum_qs.addr, align 8, !tbaa !2
  store double* %Qdiags, double** %Qdiags.addr, align 8, !tbaa !2
  %0 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast i32* %id to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  %2 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #9
  %3 = load i32, i32* %d.addr, align 4, !tbaa !20
  %4 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add = add nsw i32 %4, 1
  %mul = mul nsw i32 %3, %add
  %div = sdiv i32 %mul, 2
  store i32 %div, i32* %icf_sz, align 4, !tbaa !20
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc17, %entry
  %5 = load i32, i32* %ik, align 4, !tbaa !20
  %6 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %5, %6
  br i1 %cmp, label %for.body, label %for.end19

for.body:                                         ; preds = %for.cond
  %7 = load double*, double** %sum_qs.addr, align 8, !tbaa !2
  %8 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds double, double* %7, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !44
  store i32 0, i32* %id, align 4, !tbaa !20
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %9 = load i32, i32* %id, align 4, !tbaa !20
  %10 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp2 = icmp slt i32 %9, %10
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %11 = bitcast double* %q to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #9
  %12 = load double*, double** %icf.addr, align 8, !tbaa !2
  %13 = load i32, i32* %ik, align 4, !tbaa !20
  %14 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul4 = mul nsw i32 %13, %14
  %15 = load i32, i32* %id, align 4, !tbaa !20
  %add5 = add nsw i32 %mul4, %15
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds double, double* %12, i64 %idxprom6
  %16 = load double, double* %arrayidx7, align 8, !tbaa !44
  store double %16, double* %q, align 8, !tbaa !44
  %17 = load double*, double** %sum_qs.addr, align 8, !tbaa !2
  %18 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom8 = sext i32 %18 to i64
  %arrayidx9 = getelementptr inbounds double, double* %17, i64 %idxprom8
  %19 = load double, double* %arrayidx9, align 8, !tbaa !44
  %20 = load double, double* %q, align 8, !tbaa !44
  %add10 = fadd fast double %19, %20
  %21 = load double*, double** %sum_qs.addr, align 8, !tbaa !2
  %22 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom11 = sext i32 %22 to i64
  %arrayidx12 = getelementptr inbounds double, double* %21, i64 %idxprom11
  store double %add10, double* %arrayidx12, align 8, !tbaa !44
  %23 = load double, double* %q, align 8, !tbaa !44
  %24 = call fast double @llvm.exp.f64(double %23)
  %25 = load double*, double** %Qdiags.addr, align 8, !tbaa !2
  %26 = load i32, i32* %ik, align 4, !tbaa !20
  %27 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul13 = mul nsw i32 %26, %27
  %28 = load i32, i32* %id, align 4, !tbaa !20
  %add14 = add nsw i32 %mul13, %28
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds double, double* %25, i64 %idxprom15
  store double %24, double* %arrayidx16, align 8, !tbaa !44
  %29 = bitcast double* %q to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %30 = load i32, i32* %id, align 4, !tbaa !20
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %id, align 4, !tbaa !20
  br label %for.cond1, !llvm.loop !96

for.end:                                          ; preds = %for.cond1
  br label %for.inc17

for.inc17:                                        ; preds = %for.end
  %31 = load i32, i32* %ik, align 4, !tbaa !20
  %inc18 = add nsw i32 %31, 1
  store i32 %inc18, i32* %ik, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !97

for.end19:                                        ; preds = %for.cond
  %32 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %32) #9
  %33 = bitcast i32* %id to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %33) #9
  %34 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %34) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @Qtimesx_b(i32 %d, double* %Qdiag, double* %Qdiagb, double* %ltri, double* %ltrib, double* %x, double* %xb, double* %out, double* %outb) #0 {
entry:
  %d.addr = alloca i32, align 4
  %Qdiag.addr = alloca double*, align 8
  %Qdiagb.addr = alloca double*, align 8
  %ltri.addr = alloca double*, align 8
  %ltrib.addr = alloca double*, align 8
  %x.addr = alloca double*, align 8
  %xb.addr = alloca double*, align 8
  %out.addr = alloca double*, align 8
  %outb.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %adFrom = alloca i32, align 4
  %Lparamsidx = alloca i32, align 4
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store double* %Qdiag, double** %Qdiag.addr, align 8, !tbaa !2
  store double* %Qdiagb, double** %Qdiagb.addr, align 8, !tbaa !2
  store double* %ltri, double** %ltri.addr, align 8, !tbaa !2
  store double* %ltrib, double** %ltrib.addr, align 8, !tbaa !2
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %xb, double** %xb.addr, align 8, !tbaa !2
  store double* %out, double** %out.addr, align 8, !tbaa !2
  store double* %outb, double** %outb.addr, align 8, !tbaa !2
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  %2 = bitcast i32* %adFrom to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #9
  %3 = bitcast i32* %Lparamsidx to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #9
  store i32 0, i32* %Lparamsidx, align 4, !tbaa !20
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc5, %entry
  %4 = load i32, i32* %i, align 4, !tbaa !20
  %5 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.end7

for.body:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !tbaa !20
  %add = add nsw i32 %6, 1
  store i32 %add, i32* %adFrom, align 4, !tbaa !20
  %7 = load i32, i32* %adFrom, align 4, !tbaa !20
  store i32 %7, i32* %j, align 4, !tbaa !20
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %8 = load i32, i32* %j, align 4, !tbaa !20
  %9 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp2 = icmp slt i32 %8, %9
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %10 = load i32, i32* %Lparamsidx, align 4, !tbaa !20
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %Lparamsidx, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %11 = load i32, i32* %j, align 4, !tbaa !20
  %inc4 = add nsw i32 %11, 1
  store i32 %inc4, i32* %j, align 4, !tbaa !20
  br label %for.cond1, !llvm.loop !98

for.end:                                          ; preds = %for.cond1
  %12 = load i32, i32* %adFrom, align 4, !tbaa !20
  call void @pushInteger4(i32 %12)
  br label %for.inc5

for.inc5:                                         ; preds = %for.end
  %13 = load i32, i32* %i, align 4, !tbaa !20
  %inc6 = add nsw i32 %13, 1
  store i32 %inc6, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !99

for.end7:                                         ; preds = %for.cond
  %14 = load i32, i32* %d.addr, align 4, !tbaa !20
  %sub = sub nsw i32 %14, 1
  store i32 %sub, i32* %i, align 4, !tbaa !20
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc36, %for.end7
  %15 = load i32, i32* %i, align 4, !tbaa !20
  %cmp9 = icmp sgt i32 %15, -1
  br i1 %cmp9, label %for.body10, label %for.end38

for.body10:                                       ; preds = %for.cond8
  call void @popInteger4(i32* %adFrom)
  %16 = load i32, i32* %d.addr, align 4, !tbaa !20
  %sub11 = sub nsw i32 %16, 1
  store i32 %sub11, i32* %j, align 4, !tbaa !20
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc33, %for.body10
  %17 = load i32, i32* %j, align 4, !tbaa !20
  %18 = load i32, i32* %adFrom, align 4, !tbaa !20
  %sub13 = sub nsw i32 %18, 1
  %cmp14 = icmp sgt i32 %17, %sub13
  br i1 %cmp14, label %for.body15, label %for.end35

for.body15:                                       ; preds = %for.cond12
  %19 = load i32, i32* %Lparamsidx, align 4, !tbaa !20
  %dec = add nsw i32 %19, -1
  store i32 %dec, i32* %Lparamsidx, align 4, !tbaa !20
  %20 = load double*, double** %ltrib.addr, align 8, !tbaa !2
  %21 = load i32, i32* %Lparamsidx, align 4, !tbaa !20
  %idxprom = sext i32 %21 to i64
  %arrayidx = getelementptr inbounds double, double* %20, i64 %idxprom
  %22 = load double, double* %arrayidx, align 8, !tbaa !44
  %23 = load double*, double** %x.addr, align 8, !tbaa !2
  %24 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom16 = sext i32 %24 to i64
  %arrayidx17 = getelementptr inbounds double, double* %23, i64 %idxprom16
  %25 = load double, double* %arrayidx17, align 8, !tbaa !44
  %26 = load double*, double** %outb.addr, align 8, !tbaa !2
  %27 = load i32, i32* %j, align 4, !tbaa !20
  %idxprom18 = sext i32 %27 to i64
  %arrayidx19 = getelementptr inbounds double, double* %26, i64 %idxprom18
  %28 = load double, double* %arrayidx19, align 8, !tbaa !44
  %mul = fmul fast double %25, %28
  %add20 = fadd fast double %22, %mul
  %29 = load double*, double** %ltrib.addr, align 8, !tbaa !2
  %30 = load i32, i32* %Lparamsidx, align 4, !tbaa !20
  %idxprom21 = sext i32 %30 to i64
  %arrayidx22 = getelementptr inbounds double, double* %29, i64 %idxprom21
  store double %add20, double* %arrayidx22, align 8, !tbaa !44
  %31 = load double*, double** %xb.addr, align 8, !tbaa !2
  %32 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom23 = sext i32 %32 to i64
  %arrayidx24 = getelementptr inbounds double, double* %31, i64 %idxprom23
  %33 = load double, double* %arrayidx24, align 8, !tbaa !44
  %34 = load double*, double** %ltri.addr, align 8, !tbaa !2
  %35 = load i32, i32* %Lparamsidx, align 4, !tbaa !20
  %idxprom25 = sext i32 %35 to i64
  %arrayidx26 = getelementptr inbounds double, double* %34, i64 %idxprom25
  %36 = load double, double* %arrayidx26, align 8, !tbaa !44
  %37 = load double*, double** %outb.addr, align 8, !tbaa !2
  %38 = load i32, i32* %j, align 4, !tbaa !20
  %idxprom27 = sext i32 %38 to i64
  %arrayidx28 = getelementptr inbounds double, double* %37, i64 %idxprom27
  %39 = load double, double* %arrayidx28, align 8, !tbaa !44
  %mul29 = fmul fast double %36, %39
  %add30 = fadd fast double %33, %mul29
  %40 = load double*, double** %xb.addr, align 8, !tbaa !2
  %41 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom31 = sext i32 %41 to i64
  %arrayidx32 = getelementptr inbounds double, double* %40, i64 %idxprom31
  store double %add30, double* %arrayidx32, align 8, !tbaa !44
  br label %for.inc33

for.inc33:                                        ; preds = %for.body15
  %42 = load i32, i32* %j, align 4, !tbaa !20
  %dec34 = add nsw i32 %42, -1
  store i32 %dec34, i32* %j, align 4, !tbaa !20
  br label %for.cond12, !llvm.loop !100

for.end35:                                        ; preds = %for.cond12
  br label %for.inc36

for.inc36:                                        ; preds = %for.end35
  %43 = load i32, i32* %i, align 4, !tbaa !20
  %dec37 = add nsw i32 %43, -1
  store i32 %dec37, i32* %i, align 4, !tbaa !20
  br label %for.cond8, !llvm.loop !101

for.end38:                                        ; preds = %for.cond8
  %44 = load i32, i32* %d.addr, align 4, !tbaa !20
  %sub39 = sub nsw i32 %44, 1
  store i32 %sub39, i32* %i, align 4, !tbaa !20
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc65, %for.end38
  %45 = load i32, i32* %i, align 4, !tbaa !20
  %cmp41 = icmp sgt i32 %45, -1
  br i1 %cmp41, label %for.body42, label %for.end67

for.body42:                                       ; preds = %for.cond40
  %46 = load double*, double** %Qdiagb.addr, align 8, !tbaa !2
  %47 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom43 = sext i32 %47 to i64
  %arrayidx44 = getelementptr inbounds double, double* %46, i64 %idxprom43
  %48 = load double, double* %arrayidx44, align 8, !tbaa !44
  %49 = load double*, double** %x.addr, align 8, !tbaa !2
  %50 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom45 = sext i32 %50 to i64
  %arrayidx46 = getelementptr inbounds double, double* %49, i64 %idxprom45
  %51 = load double, double* %arrayidx46, align 8, !tbaa !44
  %52 = load double*, double** %outb.addr, align 8, !tbaa !2
  %53 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom47 = sext i32 %53 to i64
  %arrayidx48 = getelementptr inbounds double, double* %52, i64 %idxprom47
  %54 = load double, double* %arrayidx48, align 8, !tbaa !44
  %mul49 = fmul fast double %51, %54
  %add50 = fadd fast double %48, %mul49
  %55 = load double*, double** %Qdiagb.addr, align 8, !tbaa !2
  %56 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom51 = sext i32 %56 to i64
  %arrayidx52 = getelementptr inbounds double, double* %55, i64 %idxprom51
  store double %add50, double* %arrayidx52, align 8, !tbaa !44
  %57 = load double*, double** %xb.addr, align 8, !tbaa !2
  %58 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom53 = sext i32 %58 to i64
  %arrayidx54 = getelementptr inbounds double, double* %57, i64 %idxprom53
  %59 = load double, double* %arrayidx54, align 8, !tbaa !44
  %60 = load double*, double** %Qdiag.addr, align 8, !tbaa !2
  %61 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom55 = sext i32 %61 to i64
  %arrayidx56 = getelementptr inbounds double, double* %60, i64 %idxprom55
  %62 = load double, double* %arrayidx56, align 8, !tbaa !44
  %63 = load double*, double** %outb.addr, align 8, !tbaa !2
  %64 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom57 = sext i32 %64 to i64
  %arrayidx58 = getelementptr inbounds double, double* %63, i64 %idxprom57
  %65 = load double, double* %arrayidx58, align 8, !tbaa !44
  %mul59 = fmul fast double %62, %65
  %add60 = fadd fast double %59, %mul59
  %66 = load double*, double** %xb.addr, align 8, !tbaa !2
  %67 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom61 = sext i32 %67 to i64
  %arrayidx62 = getelementptr inbounds double, double* %66, i64 %idxprom61
  store double %add60, double* %arrayidx62, align 8, !tbaa !44
  %68 = load double*, double** %outb.addr, align 8, !tbaa !2
  %69 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom63 = sext i32 %69 to i64
  %arrayidx64 = getelementptr inbounds double, double* %68, i64 %idxprom63
  store double 0.000000e+00, double* %arrayidx64, align 8, !tbaa !44
  br label %for.inc65

for.inc65:                                        ; preds = %for.body42
  %70 = load i32, i32* %i, align 4, !tbaa !20
  %dec66 = add nsw i32 %70, -1
  store i32 %dec66, i32* %i, align 4, !tbaa !20
  br label %for.cond40, !llvm.loop !102

for.end67:                                        ; preds = %for.cond40
  %71 = bitcast i32* %Lparamsidx to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %71) #9
  %72 = bitcast i32* %adFrom to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %72) #9
  %73 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %73) #9
  %74 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %74) #9
  ret void
}

declare dso_local void @pushInteger4(i32) #2

declare dso_local void @popInteger4(i32*) #2

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @Qtimesx_nodiff(i32 %d, double* %Qdiag, double* %ltri, double* %x, double* %out) #8 {
entry:
  %d.addr = alloca i32, align 4
  %Qdiag.addr = alloca double*, align 8
  %ltri.addr = alloca double*, align 8
  %x.addr = alloca double*, align 8
  %out.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %Lparamsidx = alloca i32, align 4
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store double* %Qdiag, double** %Qdiag.addr, align 8, !tbaa !2
  store double* %ltri, double** %ltri.addr, align 8, !tbaa !2
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %out, double** %out.addr, align 8, !tbaa !2
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !tbaa !20
  %3 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load double*, double** %Qdiag.addr, align 8, !tbaa !2
  %5 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds double, double* %4, i64 %idxprom
  %6 = load double, double* %arrayidx, align 8, !tbaa !44
  %7 = load double*, double** %x.addr, align 8, !tbaa !2
  %8 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom1 = sext i32 %8 to i64
  %arrayidx2 = getelementptr inbounds double, double* %7, i64 %idxprom1
  %9 = load double, double* %arrayidx2, align 8, !tbaa !44
  %mul = fmul fast double %6, %9
  %10 = load double*, double** %out.addr, align 8, !tbaa !2
  %11 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom3 = sext i32 %11 to i64
  %arrayidx4 = getelementptr inbounds double, double* %10, i64 %idxprom3
  store double %mul, double* %arrayidx4, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !103

for.end:                                          ; preds = %for.cond
  %13 = bitcast i32* %Lparamsidx to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #9
  store i32 0, i32* %Lparamsidx, align 4, !tbaa !20
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc25, %for.end
  %14 = load i32, i32* %i, align 4, !tbaa !20
  %15 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp6 = icmp slt i32 %14, %15
  br i1 %cmp6, label %for.body7, label %for.end27

for.body7:                                        ; preds = %for.cond5
  %16 = load i32, i32* %i, align 4, !tbaa !20
  %add = add nsw i32 %16, 1
  store i32 %add, i32* %j, align 4, !tbaa !20
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc22, %for.body7
  %17 = load i32, i32* %j, align 4, !tbaa !20
  %18 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp9 = icmp slt i32 %17, %18
  br i1 %cmp9, label %for.body10, label %for.end24

for.body10:                                       ; preds = %for.cond8
  %19 = load double*, double** %out.addr, align 8, !tbaa !2
  %20 = load i32, i32* %j, align 4, !tbaa !20
  %idxprom11 = sext i32 %20 to i64
  %arrayidx12 = getelementptr inbounds double, double* %19, i64 %idxprom11
  %21 = load double, double* %arrayidx12, align 8, !tbaa !44
  %22 = load double*, double** %ltri.addr, align 8, !tbaa !2
  %23 = load i32, i32* %Lparamsidx, align 4, !tbaa !20
  %idxprom13 = sext i32 %23 to i64
  %arrayidx14 = getelementptr inbounds double, double* %22, i64 %idxprom13
  %24 = load double, double* %arrayidx14, align 8, !tbaa !44
  %25 = load double*, double** %x.addr, align 8, !tbaa !2
  %26 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom15 = sext i32 %26 to i64
  %arrayidx16 = getelementptr inbounds double, double* %25, i64 %idxprom15
  %27 = load double, double* %arrayidx16, align 8, !tbaa !44
  %mul17 = fmul fast double %24, %27
  %add18 = fadd fast double %21, %mul17
  %28 = load double*, double** %out.addr, align 8, !tbaa !2
  %29 = load i32, i32* %j, align 4, !tbaa !20
  %idxprom19 = sext i32 %29 to i64
  %arrayidx20 = getelementptr inbounds double, double* %28, i64 %idxprom19
  store double %add18, double* %arrayidx20, align 8, !tbaa !44
  %30 = load i32, i32* %Lparamsidx, align 4, !tbaa !20
  %inc21 = add nsw i32 %30, 1
  store i32 %inc21, i32* %Lparamsidx, align 4, !tbaa !20
  br label %for.inc22

for.inc22:                                        ; preds = %for.body10
  %31 = load i32, i32* %j, align 4, !tbaa !20
  %inc23 = add nsw i32 %31, 1
  store i32 %inc23, i32* %j, align 4, !tbaa !20
  br label %for.cond8, !llvm.loop !104

for.end24:                                        ; preds = %for.cond8
  br label %for.inc25

for.inc25:                                        ; preds = %for.end24
  %32 = load i32, i32* %i, align 4, !tbaa !20
  %inc26 = add nsw i32 %32, 1
  store i32 %inc26, i32* %i, align 4, !tbaa !20
  br label %for.cond5, !llvm.loop !105

for.end27:                                        ; preds = %for.cond5
  %33 = bitcast i32* %Lparamsidx to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %33) #9
  %34 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %34) #9
  %35 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %35) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @gmm_objective_b(i32 %d, i32 %k, i32 %n, double* %alphas, double* %alphasb, double* %means, double* %meansb, double* %icf, double* %icfb, double* %x, %struct.Wishart* byval(%struct.Wishart) align 8 %wishart, double* %err, double* %errb) #0 {
entry:
  %d.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %alphas.addr = alloca double*, align 8
  %alphasb.addr = alloca double*, align 8
  %means.addr = alloca double*, align 8
  %meansb.addr = alloca double*, align 8
  %icf.addr = alloca double*, align 8
  %icfb.addr = alloca double*, align 8
  %x.addr = alloca double*, align 8
  %err.addr = alloca double*, align 8
  %errb.addr = alloca double*, align 8
  %ix = alloca i32, align 4
  %ik = alloca i32, align 4
  %CONSTANT = alloca double, align 8
  %icf_sz = alloca i32, align 4
  %Qdiags = alloca double*, align 8
  %Qdiagsb = alloca double*, align 8
  %result1 = alloca double, align 8
  %result1b = alloca double, align 8
  %ii1 = alloca i32, align 4
  %sum_qs = alloca double*, align 8
  %sum_qsb = alloca double*, align 8
  %xcentered = alloca double*, align 8
  %xcenteredb = alloca double*, align 8
  %Qxcentered = alloca double*, align 8
  %Qxcenteredb = alloca double*, align 8
  %main_term = alloca double*, align 8
  %main_termb = alloca double*, align 8
  %slse = alloca double, align 8
  %slseb = alloca double, align 8
  %lse_alphas = alloca double, align 8
  %lse_alphasb = alloca double, align 8
  %agg.tmp = alloca %struct.Wishart, align 8
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %alphas, double** %alphas.addr, align 8, !tbaa !2
  store double* %alphasb, double** %alphasb.addr, align 8, !tbaa !2
  store double* %means, double** %means.addr, align 8, !tbaa !2
  store double* %meansb, double** %meansb.addr, align 8, !tbaa !2
  store double* %icf, double** %icf.addr, align 8, !tbaa !2
  store double* %icfb, double** %icfb.addr, align 8, !tbaa !2
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %err, double** %err.addr, align 8, !tbaa !2
  store double* %errb, double** %errb.addr, align 8, !tbaa !2
  %0 = bitcast i32* %ix to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  %2 = bitcast double* %CONSTANT to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %3 = load i32, i32* %n.addr, align 4, !tbaa !20
  %sub = sub nsw i32 0, %3
  %4 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul = mul nsw i32 %sub, %4
  %conv = sitofp i32 %mul to double
  %mul1 = fmul fast double %conv, 5.000000e-01
  %5 = call fast double @llvm.log.f64(double 0x401921FB54442EEA)
  %mul2 = fmul fast double %mul1, %5
  store double %mul2, double* %CONSTANT, align 8, !tbaa !44
  %6 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #9
  %7 = load i32, i32* %d.addr, align 4, !tbaa !20
  %8 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add = add nsw i32 %8, 1
  %mul3 = mul nsw i32 %7, %add
  %div = sdiv i32 %mul3, 2
  store i32 %div, i32* %icf_sz, align 4, !tbaa !20
  %9 = bitcast double** %Qdiags to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #9
  %10 = bitcast double** %Qdiagsb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #9
  %11 = bitcast double* %result1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #9
  %12 = bitcast double* %result1b to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #9
  %13 = bitcast i32* %ii1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #9
  %14 = load i32, i32* %d.addr, align 4, !tbaa !20
  %15 = load i32, i32* %k.addr, align 4, !tbaa !20
  %mul4 = mul nsw i32 %14, %15
  %conv5 = sext i32 %mul4 to i64
  %mul6 = mul i64 %conv5, 8
  %call = call noalias i8* @malloc(i64 %mul6) #9
  %16 = bitcast i8* %call to double*
  store double* %16, double** %Qdiagsb, align 8, !tbaa !2
  store i32 0, i32* %ii1, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %17 = load i32, i32* %ii1, align 4, !tbaa !20
  %18 = load i32, i32* %d.addr, align 4, !tbaa !20
  %19 = load i32, i32* %k.addr, align 4, !tbaa !20
  %mul7 = mul nsw i32 %18, %19
  %cmp = icmp slt i32 %17, %mul7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %20 = load double*, double** %Qdiagsb, align 8, !tbaa !2
  %21 = load i32, i32* %ii1, align 4, !tbaa !20
  %idxprom = sext i32 %21 to i64
  %arrayidx = getelementptr inbounds double, double* %20, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %ii1, align 4, !tbaa !20
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %ii1, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !106

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* %d.addr, align 4, !tbaa !20
  %24 = load i32, i32* %k.addr, align 4, !tbaa !20
  %mul8 = mul nsw i32 %23, %24
  %conv9 = sext i32 %mul8 to i64
  %mul10 = mul i64 %conv9, 8
  %call11 = call noalias i8* @malloc(i64 %mul10) #9
  %25 = bitcast i8* %call11 to double*
  store double* %25, double** %Qdiags, align 8, !tbaa !2
  %26 = bitcast double** %sum_qs to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #9
  %27 = bitcast double** %sum_qsb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %27) #9
  %28 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv12 = sext i32 %28 to i64
  %mul13 = mul i64 %conv12, 8
  %call14 = call noalias i8* @malloc(i64 %mul13) #9
  %29 = bitcast i8* %call14 to double*
  store double* %29, double** %sum_qsb, align 8, !tbaa !2
  store i32 0, i32* %ii1, align 4, !tbaa !20
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc20, %for.end
  %30 = load i32, i32* %ii1, align 4, !tbaa !20
  %31 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp16 = icmp slt i32 %30, %31
  br i1 %cmp16, label %for.body17, label %for.end22

for.body17:                                       ; preds = %for.cond15
  %32 = load double*, double** %sum_qsb, align 8, !tbaa !2
  %33 = load i32, i32* %ii1, align 4, !tbaa !20
  %idxprom18 = sext i32 %33 to i64
  %arrayidx19 = getelementptr inbounds double, double* %32, i64 %idxprom18
  store double 0.000000e+00, double* %arrayidx19, align 8, !tbaa !44
  br label %for.inc20

for.inc20:                                        ; preds = %for.body17
  %34 = load i32, i32* %ii1, align 4, !tbaa !20
  %inc21 = add nsw i32 %34, 1
  store i32 %inc21, i32* %ii1, align 4, !tbaa !20
  br label %for.cond15, !llvm.loop !107

for.end22:                                        ; preds = %for.cond15
  %35 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv23 = sext i32 %35 to i64
  %mul24 = mul i64 %conv23, 8
  %call25 = call noalias i8* @malloc(i64 %mul24) #9
  %36 = bitcast i8* %call25 to double*
  store double* %36, double** %sum_qs, align 8, !tbaa !2
  %37 = bitcast double** %xcentered to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #9
  %38 = bitcast double** %xcenteredb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #9
  %39 = load i32, i32* %d.addr, align 4, !tbaa !20
  %conv26 = sext i32 %39 to i64
  %mul27 = mul i64 %conv26, 8
  %call28 = call noalias i8* @malloc(i64 %mul27) #9
  %40 = bitcast i8* %call28 to double*
  store double* %40, double** %xcenteredb, align 8, !tbaa !2
  store i32 0, i32* %ii1, align 4, !tbaa !20
  br label %for.cond29

for.cond29:                                       ; preds = %for.inc34, %for.end22
  %41 = load i32, i32* %ii1, align 4, !tbaa !20
  %42 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp30 = icmp slt i32 %41, %42
  br i1 %cmp30, label %for.body31, label %for.end36

for.body31:                                       ; preds = %for.cond29
  %43 = load double*, double** %xcenteredb, align 8, !tbaa !2
  %44 = load i32, i32* %ii1, align 4, !tbaa !20
  %idxprom32 = sext i32 %44 to i64
  %arrayidx33 = getelementptr inbounds double, double* %43, i64 %idxprom32
  store double 0.000000e+00, double* %arrayidx33, align 8, !tbaa !44
  br label %for.inc34

for.inc34:                                        ; preds = %for.body31
  %45 = load i32, i32* %ii1, align 4, !tbaa !20
  %inc35 = add nsw i32 %45, 1
  store i32 %inc35, i32* %ii1, align 4, !tbaa !20
  br label %for.cond29, !llvm.loop !108

for.end36:                                        ; preds = %for.cond29
  %46 = load i32, i32* %d.addr, align 4, !tbaa !20
  %conv37 = sext i32 %46 to i64
  %mul38 = mul i64 %conv37, 8
  %call39 = call noalias i8* @malloc(i64 %mul38) #9
  %47 = bitcast i8* %call39 to double*
  store double* %47, double** %xcentered, align 8, !tbaa !2
  %48 = bitcast double** %Qxcentered to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #9
  %49 = bitcast double** %Qxcenteredb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #9
  %50 = load i32, i32* %d.addr, align 4, !tbaa !20
  %conv40 = sext i32 %50 to i64
  %mul41 = mul i64 %conv40, 8
  %call42 = call noalias i8* @malloc(i64 %mul41) #9
  %51 = bitcast i8* %call42 to double*
  store double* %51, double** %Qxcenteredb, align 8, !tbaa !2
  store i32 0, i32* %ii1, align 4, !tbaa !20
  br label %for.cond43

for.cond43:                                       ; preds = %for.inc48, %for.end36
  %52 = load i32, i32* %ii1, align 4, !tbaa !20
  %53 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp44 = icmp slt i32 %52, %53
  br i1 %cmp44, label %for.body45, label %for.end50

for.body45:                                       ; preds = %for.cond43
  %54 = load double*, double** %Qxcenteredb, align 8, !tbaa !2
  %55 = load i32, i32* %ii1, align 4, !tbaa !20
  %idxprom46 = sext i32 %55 to i64
  %arrayidx47 = getelementptr inbounds double, double* %54, i64 %idxprom46
  store double 0.000000e+00, double* %arrayidx47, align 8, !tbaa !44
  br label %for.inc48

for.inc48:                                        ; preds = %for.body45
  %56 = load i32, i32* %ii1, align 4, !tbaa !20
  %inc49 = add nsw i32 %56, 1
  store i32 %inc49, i32* %ii1, align 4, !tbaa !20
  br label %for.cond43, !llvm.loop !109

for.end50:                                        ; preds = %for.cond43
  %57 = load i32, i32* %d.addr, align 4, !tbaa !20
  %conv51 = sext i32 %57 to i64
  %mul52 = mul i64 %conv51, 8
  %call53 = call noalias i8* @malloc(i64 %mul52) #9
  %58 = bitcast i8* %call53 to double*
  store double* %58, double** %Qxcentered, align 8, !tbaa !2
  %59 = bitcast double** %main_term to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %59) #9
  %60 = bitcast double** %main_termb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60) #9
  %61 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv54 = sext i32 %61 to i64
  %mul55 = mul i64 %conv54, 8
  %call56 = call noalias i8* @malloc(i64 %mul55) #9
  %62 = bitcast i8* %call56 to double*
  store double* %62, double** %main_termb, align 8, !tbaa !2
  store i32 0, i32* %ii1, align 4, !tbaa !20
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc62, %for.end50
  %63 = load i32, i32* %ii1, align 4, !tbaa !20
  %64 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp58 = icmp slt i32 %63, %64
  br i1 %cmp58, label %for.body59, label %for.end64

for.body59:                                       ; preds = %for.cond57
  %65 = load double*, double** %main_termb, align 8, !tbaa !2
  %66 = load i32, i32* %ii1, align 4, !tbaa !20
  %idxprom60 = sext i32 %66 to i64
  %arrayidx61 = getelementptr inbounds double, double* %65, i64 %idxprom60
  store double 0.000000e+00, double* %arrayidx61, align 8, !tbaa !44
  br label %for.inc62

for.inc62:                                        ; preds = %for.body59
  %67 = load i32, i32* %ii1, align 4, !tbaa !20
  %inc63 = add nsw i32 %67, 1
  store i32 %inc63, i32* %ii1, align 4, !tbaa !20
  br label %for.cond57, !llvm.loop !110

for.end64:                                        ; preds = %for.cond57
  %68 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv65 = sext i32 %68 to i64
  %mul66 = mul i64 %conv65, 8
  %call67 = call noalias i8* @malloc(i64 %mul66) #9
  %69 = bitcast i8* %call67 to double*
  store double* %69, double** %main_term, align 8, !tbaa !2
  %70 = load i32, i32* %d.addr, align 4, !tbaa !20
  %71 = load i32, i32* %k.addr, align 4, !tbaa !20
  %72 = load double*, double** %icf.addr, align 8, !tbaa !2
  %73 = load double*, double** %sum_qs, align 8, !tbaa !2
  %arrayidx68 = getelementptr inbounds double, double* %73, i64 0
  %74 = load double*, double** %Qdiags, align 8, !tbaa !2
  %arrayidx69 = getelementptr inbounds double, double* %74, i64 0
  call void @preprocess_qs_nodiff(i32 %70, i32 %71, double* %72, double* %arrayidx68, double* %arrayidx69)
  %75 = bitcast double* %slse to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %75) #9
  store double 0.000000e+00, double* %slse, align 8, !tbaa !44
  %76 = bitcast double* %slseb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %76) #9
  store double 0.000000e+00, double* %slseb, align 8, !tbaa !44
  store i32 0, i32* %ix, align 4, !tbaa !20
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc108, %for.end64
  %77 = load i32, i32* %ix, align 4, !tbaa !20
  %78 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp71 = icmp slt i32 %77, %78
  br i1 %cmp71, label %for.body72, label %for.end110

for.body72:                                       ; preds = %for.cond70
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond73

for.cond73:                                       ; preds = %for.inc105, %for.body72
  %79 = load i32, i32* %ik, align 4, !tbaa !20
  %80 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp74 = icmp slt i32 %79, %80
  br i1 %cmp74, label %for.body75, label %for.end107

for.body75:                                       ; preds = %for.cond73
  %81 = load double*, double** %xcentered, align 8, !tbaa !2
  %82 = load i32, i32* %d.addr, align 4, !tbaa !20
  call void @pushReal8Array(double* %81, i32 %82)
  %83 = load i32, i32* %d.addr, align 4, !tbaa !20
  %84 = load double*, double** %x.addr, align 8, !tbaa !2
  %85 = load i32, i32* %ix, align 4, !tbaa !20
  %86 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul76 = mul nsw i32 %85, %86
  %idxprom77 = sext i32 %mul76 to i64
  %arrayidx78 = getelementptr inbounds double, double* %84, i64 %idxprom77
  %87 = load double*, double** %means.addr, align 8, !tbaa !2
  %88 = load i32, i32* %ik, align 4, !tbaa !20
  %89 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul79 = mul nsw i32 %88, %89
  %idxprom80 = sext i32 %mul79 to i64
  %arrayidx81 = getelementptr inbounds double, double* %87, i64 %idxprom80
  %90 = load double*, double** %xcentered, align 8, !tbaa !2
  %arrayidx82 = getelementptr inbounds double, double* %90, i64 0
  call void @subtract_nodiff(i32 %83, double* %arrayidx78, double* %arrayidx81, double* %arrayidx82)
  %91 = load double*, double** %Qxcentered, align 8, !tbaa !2
  %92 = load i32, i32* %d.addr, align 4, !tbaa !20
  call void @pushReal8Array(double* %91, i32 %92)
  %93 = load i32, i32* %d.addr, align 4, !tbaa !20
  %94 = load double*, double** %Qdiags, align 8, !tbaa !2
  %95 = load i32, i32* %ik, align 4, !tbaa !20
  %96 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul83 = mul nsw i32 %95, %96
  %idxprom84 = sext i32 %mul83 to i64
  %arrayidx85 = getelementptr inbounds double, double* %94, i64 %idxprom84
  %97 = load double*, double** %icf.addr, align 8, !tbaa !2
  %98 = load i32, i32* %ik, align 4, !tbaa !20
  %99 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul86 = mul nsw i32 %98, %99
  %100 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add87 = add nsw i32 %mul86, %100
  %idxprom88 = sext i32 %add87 to i64
  %arrayidx89 = getelementptr inbounds double, double* %97, i64 %idxprom88
  %101 = load double*, double** %xcentered, align 8, !tbaa !2
  %arrayidx90 = getelementptr inbounds double, double* %101, i64 0
  %102 = load double*, double** %Qxcentered, align 8, !tbaa !2
  %arrayidx91 = getelementptr inbounds double, double* %102, i64 0
  call void @Qtimesx_nodiff(i32 %93, double* %arrayidx85, double* %arrayidx89, double* %arrayidx90, double* %arrayidx91)
  %103 = load i32, i32* %d.addr, align 4, !tbaa !20
  %104 = load double*, double** %Qxcentered, align 8, !tbaa !2
  %arrayidx92 = getelementptr inbounds double, double* %104, i64 0
  %call93 = call fast double @sqnorm_nodiff(i32 %103, double* %arrayidx92)
  store double %call93, double* %result1, align 8, !tbaa !44
  %105 = load double*, double** %main_term, align 8, !tbaa !2
  %106 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom94 = sext i32 %106 to i64
  %arrayidx95 = getelementptr inbounds double, double* %105, i64 %idxprom94
  %107 = load double, double* %arrayidx95, align 8, !tbaa !44
  call void @pushReal8(double %107)
  %108 = load double*, double** %alphas.addr, align 8, !tbaa !2
  %109 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom96 = sext i32 %109 to i64
  %arrayidx97 = getelementptr inbounds double, double* %108, i64 %idxprom96
  %110 = load double, double* %arrayidx97, align 8, !tbaa !44
  %111 = load double*, double** %sum_qs, align 8, !tbaa !2
  %112 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom98 = sext i32 %112 to i64
  %arrayidx99 = getelementptr inbounds double, double* %111, i64 %idxprom98
  %113 = load double, double* %arrayidx99, align 8, !tbaa !44
  %add100 = fadd fast double %110, %113
  %114 = load double, double* %result1, align 8, !tbaa !44
  %mul101 = fmul fast double 5.000000e-01, %114
  %sub102 = fsub fast double %add100, %mul101
  %115 = load double*, double** %main_term, align 8, !tbaa !2
  %116 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom103 = sext i32 %116 to i64
  %arrayidx104 = getelementptr inbounds double, double* %115, i64 %idxprom103
  store double %sub102, double* %arrayidx104, align 8, !tbaa !44
  br label %for.inc105

for.inc105:                                       ; preds = %for.body75
  %117 = load i32, i32* %ik, align 4, !tbaa !20
  %inc106 = add nsw i32 %117, 1
  store i32 %inc106, i32* %ik, align 4, !tbaa !20
  br label %for.cond73, !llvm.loop !111

for.end107:                                       ; preds = %for.cond73
  br label %for.inc108

for.inc108:                                       ; preds = %for.end107
  %118 = load i32, i32* %ix, align 4, !tbaa !20
  %inc109 = add nsw i32 %118, 1
  store i32 %inc109, i32* %ix, align 4, !tbaa !20
  br label %for.cond70, !llvm.loop !112

for.end110:                                       ; preds = %for.cond70
  %119 = bitcast double* %lse_alphas to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %119) #9
  %120 = bitcast double* %lse_alphasb to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %120) #9
  %121 = load double*, double** %errb.addr, align 8, !tbaa !2
  %122 = load double, double* %121, align 8, !tbaa !44
  store double %122, double* %slseb, align 8, !tbaa !44
  %123 = load i32, i32* %n.addr, align 4, !tbaa !20
  %conv111 = sitofp i32 %123 to double
  %124 = load double*, double** %errb.addr, align 8, !tbaa !2
  %125 = load double, double* %124, align 8, !tbaa !44
  %mul112 = fmul fast double %conv111, %125
  %fneg = fneg fast double %mul112
  store double %fneg, double* %lse_alphasb, align 8, !tbaa !44
  %126 = load double*, double** %errb.addr, align 8, !tbaa !2
  %127 = load double, double* %126, align 8, !tbaa !44
  store double %127, double* %result1b, align 8, !tbaa !44
  %128 = load double*, double** %errb.addr, align 8, !tbaa !2
  store double 0.000000e+00, double* %128, align 8, !tbaa !44
  %129 = load i32, i32* %d.addr, align 4, !tbaa !20
  %130 = load i32, i32* %k.addr, align 4, !tbaa !20
  %131 = bitcast %struct.Wishart* %agg.tmp to i8*
  %132 = bitcast %struct.Wishart* %wishart to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false), !tbaa.struct !52
  %133 = load double*, double** %sum_qs, align 8, !tbaa !2
  %arrayidx113 = getelementptr inbounds double, double* %133, i64 0
  %134 = load double*, double** %sum_qsb, align 8, !tbaa !2
  %arrayidx114 = getelementptr inbounds double, double* %134, i64 0
  %135 = load double*, double** %Qdiags, align 8, !tbaa !2
  %arrayidx115 = getelementptr inbounds double, double* %135, i64 0
  %136 = load double*, double** %Qdiagsb, align 8, !tbaa !2
  %arrayidx116 = getelementptr inbounds double, double* %136, i64 0
  %137 = load double*, double** %icf.addr, align 8, !tbaa !2
  %138 = load double*, double** %icfb.addr, align 8, !tbaa !2
  %139 = load double, double* %result1b, align 8, !tbaa !44
  %140 = bitcast %struct.Wishart* %agg.tmp to { double, i32 }*
  %141 = getelementptr inbounds { double, i32 }, { double, i32 }* %140, i32 0, i32 0
  %142 = load double, double* %141, align 8
  %143 = getelementptr inbounds { double, i32 }, { double, i32 }* %140, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  call void @log_wishart_prior_b(i32 %129, i32 %130, double %142, i32 %144, double* %arrayidx113, double* %arrayidx114, double* %arrayidx115, double* %arrayidx116, double* %137, double* %138, double %139)
  store i32 0, i32* %ii1, align 4, !tbaa !20
  br label %for.cond117

for.cond117:                                      ; preds = %for.inc122, %for.end110
  %145 = load i32, i32* %ii1, align 4, !tbaa !20
  %146 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp118 = icmp slt i32 %145, %146
  br i1 %cmp118, label %for.body119, label %for.end124

for.body119:                                      ; preds = %for.cond117
  %147 = load double*, double** %alphasb.addr, align 8, !tbaa !2
  %148 = load i32, i32* %ii1, align 4, !tbaa !20
  %idxprom120 = sext i32 %148 to i64
  %arrayidx121 = getelementptr inbounds double, double* %147, i64 %idxprom120
  store double 0.000000e+00, double* %arrayidx121, align 8, !tbaa !44
  br label %for.inc122

for.inc122:                                       ; preds = %for.body119
  %149 = load i32, i32* %ii1, align 4, !tbaa !20
  %inc123 = add nsw i32 %149, 1
  store i32 %inc123, i32* %ii1, align 4, !tbaa !20
  br label %for.cond117, !llvm.loop !113

for.end124:                                       ; preds = %for.cond117
  %150 = load i32, i32* %k.addr, align 4, !tbaa !20
  %151 = load double*, double** %alphas.addr, align 8, !tbaa !2
  %152 = load double*, double** %alphasb.addr, align 8, !tbaa !2
  %153 = load double, double* %lse_alphasb, align 8, !tbaa !44
  call void @log_sum_exp_b(i32 %150, double* %151, double* %152, double %153)
  store i32 0, i32* %ii1, align 4, !tbaa !20
  br label %for.cond125

for.cond125:                                      ; preds = %for.inc131, %for.end124
  %154 = load i32, i32* %ii1, align 4, !tbaa !20
  %155 = load i32, i32* %d.addr, align 4, !tbaa !20
  %156 = load i32, i32* %k.addr, align 4, !tbaa !20
  %mul126 = mul nsw i32 %155, %156
  %cmp127 = icmp slt i32 %154, %mul126
  br i1 %cmp127, label %for.body128, label %for.end133

for.body128:                                      ; preds = %for.cond125
  %157 = load double*, double** %meansb.addr, align 8, !tbaa !2
  %158 = load i32, i32* %ii1, align 4, !tbaa !20
  %idxprom129 = sext i32 %158 to i64
  %arrayidx130 = getelementptr inbounds double, double* %157, i64 %idxprom129
  store double 0.000000e+00, double* %arrayidx130, align 8, !tbaa !44
  br label %for.inc131

for.inc131:                                       ; preds = %for.body128
  %159 = load i32, i32* %ii1, align 4, !tbaa !20
  %inc132 = add nsw i32 %159, 1
  store i32 %inc132, i32* %ii1, align 4, !tbaa !20
  br label %for.cond125, !llvm.loop !114

for.end133:                                       ; preds = %for.cond125
  %160 = load i32, i32* %n.addr, align 4, !tbaa !20
  %sub134 = sub nsw i32 %160, 1
  store i32 %sub134, i32* %ix, align 4, !tbaa !20
  br label %for.cond135

for.cond135:                                      ; preds = %for.inc199, %for.end133
  %161 = load i32, i32* %ix, align 4, !tbaa !20
  %cmp136 = icmp sgt i32 %161, -1
  br i1 %cmp136, label %for.body137, label %for.end201

for.body137:                                      ; preds = %for.cond135
  %162 = load double, double* %slseb, align 8, !tbaa !44
  store double %162, double* %result1b, align 8, !tbaa !44
  %163 = load i32, i32* %k.addr, align 4, !tbaa !20
  %164 = load double*, double** %main_term, align 8, !tbaa !2
  %arrayidx138 = getelementptr inbounds double, double* %164, i64 0
  %165 = load double*, double** %main_termb, align 8, !tbaa !2
  %arrayidx139 = getelementptr inbounds double, double* %165, i64 0
  %166 = load double, double* %result1b, align 8, !tbaa !44
  call void @log_sum_exp_b(i32 %163, double* %arrayidx138, double* %arrayidx139, double %166)
  %167 = load i32, i32* %k.addr, align 4, !tbaa !20
  %sub140 = sub nsw i32 %167, 1
  store i32 %sub140, i32* %ik, align 4, !tbaa !20
  br label %for.cond141

for.cond141:                                      ; preds = %for.inc197, %for.body137
  %168 = load i32, i32* %ik, align 4, !tbaa !20
  %cmp142 = icmp sgt i32 %168, -1
  br i1 %cmp142, label %for.body143, label %for.end198

for.body143:                                      ; preds = %for.cond141
  %169 = load double*, double** %main_term, align 8, !tbaa !2
  %170 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom144 = sext i32 %170 to i64
  %arrayidx145 = getelementptr inbounds double, double* %169, i64 %idxprom144
  call void @popReal8(double* %arrayidx145)
  %171 = load double*, double** %alphasb.addr, align 8, !tbaa !2
  %172 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom146 = sext i32 %172 to i64
  %arrayidx147 = getelementptr inbounds double, double* %171, i64 %idxprom146
  %173 = load double, double* %arrayidx147, align 8, !tbaa !44
  %174 = load double*, double** %main_termb, align 8, !tbaa !2
  %175 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom148 = sext i32 %175 to i64
  %arrayidx149 = getelementptr inbounds double, double* %174, i64 %idxprom148
  %176 = load double, double* %arrayidx149, align 8, !tbaa !44
  %add150 = fadd fast double %173, %176
  %177 = load double*, double** %alphasb.addr, align 8, !tbaa !2
  %178 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom151 = sext i32 %178 to i64
  %arrayidx152 = getelementptr inbounds double, double* %177, i64 %idxprom151
  store double %add150, double* %arrayidx152, align 8, !tbaa !44
  %179 = load double*, double** %sum_qsb, align 8, !tbaa !2
  %180 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom153 = sext i32 %180 to i64
  %arrayidx154 = getelementptr inbounds double, double* %179, i64 %idxprom153
  %181 = load double, double* %arrayidx154, align 8, !tbaa !44
  %182 = load double*, double** %main_termb, align 8, !tbaa !2
  %183 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom155 = sext i32 %183 to i64
  %arrayidx156 = getelementptr inbounds double, double* %182, i64 %idxprom155
  %184 = load double, double* %arrayidx156, align 8, !tbaa !44
  %add157 = fadd fast double %181, %184
  %185 = load double*, double** %sum_qsb, align 8, !tbaa !2
  %186 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom158 = sext i32 %186 to i64
  %arrayidx159 = getelementptr inbounds double, double* %185, i64 %idxprom158
  store double %add157, double* %arrayidx159, align 8, !tbaa !44
  %187 = load double*, double** %main_termb, align 8, !tbaa !2
  %188 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom160 = sext i32 %188 to i64
  %arrayidx161 = getelementptr inbounds double, double* %187, i64 %idxprom160
  %189 = load double, double* %arrayidx161, align 8, !tbaa !44
  %mul162 = fmul fast double 5.000000e-01, %189
  %fneg163 = fneg fast double %mul162
  store double %fneg163, double* %result1b, align 8, !tbaa !44
  %190 = load double*, double** %main_termb, align 8, !tbaa !2
  %191 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom164 = sext i32 %191 to i64
  %arrayidx165 = getelementptr inbounds double, double* %190, i64 %idxprom164
  store double 0.000000e+00, double* %arrayidx165, align 8, !tbaa !44
  %192 = load i32, i32* %d.addr, align 4, !tbaa !20
  %193 = load double*, double** %Qxcentered, align 8, !tbaa !2
  %arrayidx166 = getelementptr inbounds double, double* %193, i64 0
  %194 = load double*, double** %Qxcenteredb, align 8, !tbaa !2
  %arrayidx167 = getelementptr inbounds double, double* %194, i64 0
  %195 = load double, double* %result1b, align 8, !tbaa !44
  call void @sqnorm_b(i32 %192, double* %arrayidx166, double* %arrayidx167, double %195)
  %196 = load double*, double** %Qxcentered, align 8, !tbaa !2
  %197 = load i32, i32* %d.addr, align 4, !tbaa !20
  call void @popReal8Array(double* %196, i32 %197)
  %198 = load i32, i32* %d.addr, align 4, !tbaa !20
  %199 = load double*, double** %Qdiags, align 8, !tbaa !2
  %200 = load i32, i32* %ik, align 4, !tbaa !20
  %201 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul168 = mul nsw i32 %200, %201
  %idxprom169 = sext i32 %mul168 to i64
  %arrayidx170 = getelementptr inbounds double, double* %199, i64 %idxprom169
  %202 = load double*, double** %Qdiagsb, align 8, !tbaa !2
  %203 = load i32, i32* %ik, align 4, !tbaa !20
  %204 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul171 = mul nsw i32 %203, %204
  %idxprom172 = sext i32 %mul171 to i64
  %arrayidx173 = getelementptr inbounds double, double* %202, i64 %idxprom172
  %205 = load double*, double** %icf.addr, align 8, !tbaa !2
  %206 = load i32, i32* %ik, align 4, !tbaa !20
  %207 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul174 = mul nsw i32 %206, %207
  %208 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add175 = add nsw i32 %mul174, %208
  %idxprom176 = sext i32 %add175 to i64
  %arrayidx177 = getelementptr inbounds double, double* %205, i64 %idxprom176
  %209 = load double*, double** %icfb.addr, align 8, !tbaa !2
  %210 = load i32, i32* %ik, align 4, !tbaa !20
  %211 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul178 = mul nsw i32 %210, %211
  %212 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add179 = add nsw i32 %mul178, %212
  %idxprom180 = sext i32 %add179 to i64
  %arrayidx181 = getelementptr inbounds double, double* %209, i64 %idxprom180
  %213 = load double*, double** %xcentered, align 8, !tbaa !2
  %arrayidx182 = getelementptr inbounds double, double* %213, i64 0
  %214 = load double*, double** %xcenteredb, align 8, !tbaa !2
  %arrayidx183 = getelementptr inbounds double, double* %214, i64 0
  %215 = load double*, double** %Qxcentered, align 8, !tbaa !2
  %arrayidx184 = getelementptr inbounds double, double* %215, i64 0
  %216 = load double*, double** %Qxcenteredb, align 8, !tbaa !2
  %arrayidx185 = getelementptr inbounds double, double* %216, i64 0
  call void @Qtimesx_b(i32 %198, double* %arrayidx170, double* %arrayidx173, double* %arrayidx177, double* %arrayidx181, double* %arrayidx182, double* %arrayidx183, double* %arrayidx184, double* %arrayidx185)
  %217 = load double*, double** %xcentered, align 8, !tbaa !2
  %218 = load i32, i32* %d.addr, align 4, !tbaa !20
  call void @popReal8Array(double* %217, i32 %218)
  %219 = load i32, i32* %d.addr, align 4, !tbaa !20
  %220 = load double*, double** %x.addr, align 8, !tbaa !2
  %221 = load i32, i32* %ix, align 4, !tbaa !20
  %222 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul186 = mul nsw i32 %221, %222
  %idxprom187 = sext i32 %mul186 to i64
  %arrayidx188 = getelementptr inbounds double, double* %220, i64 %idxprom187
  %223 = load double*, double** %means.addr, align 8, !tbaa !2
  %224 = load i32, i32* %ik, align 4, !tbaa !20
  %225 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul189 = mul nsw i32 %224, %225
  %idxprom190 = sext i32 %mul189 to i64
  %arrayidx191 = getelementptr inbounds double, double* %223, i64 %idxprom190
  %226 = load double*, double** %meansb.addr, align 8, !tbaa !2
  %227 = load i32, i32* %ik, align 4, !tbaa !20
  %228 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul192 = mul nsw i32 %227, %228
  %idxprom193 = sext i32 %mul192 to i64
  %arrayidx194 = getelementptr inbounds double, double* %226, i64 %idxprom193
  %229 = load double*, double** %xcentered, align 8, !tbaa !2
  %arrayidx195 = getelementptr inbounds double, double* %229, i64 0
  %230 = load double*, double** %xcenteredb, align 8, !tbaa !2
  %arrayidx196 = getelementptr inbounds double, double* %230, i64 0
  call void @subtract_b(i32 %219, double* %arrayidx188, double* %arrayidx191, double* %arrayidx194, double* %arrayidx195, double* %arrayidx196)
  br label %for.inc197

for.inc197:                                       ; preds = %for.body143
  %231 = load i32, i32* %ik, align 4, !tbaa !20
  %dec = add nsw i32 %231, -1
  store i32 %dec, i32* %ik, align 4, !tbaa !20
  br label %for.cond141, !llvm.loop !115

for.end198:                                       ; preds = %for.cond141
  br label %for.inc199

for.inc199:                                       ; preds = %for.end198
  %232 = load i32, i32* %ix, align 4, !tbaa !20
  %dec200 = add nsw i32 %232, -1
  store i32 %dec200, i32* %ix, align 4, !tbaa !20
  br label %for.cond135, !llvm.loop !116

for.end201:                                       ; preds = %for.cond135
  %233 = load i32, i32* %d.addr, align 4, !tbaa !20
  %234 = load i32, i32* %k.addr, align 4, !tbaa !20
  %235 = load double*, double** %icf.addr, align 8, !tbaa !2
  %236 = load double*, double** %icfb.addr, align 8, !tbaa !2
  %237 = load double*, double** %sum_qs, align 8, !tbaa !2
  %arrayidx202 = getelementptr inbounds double, double* %237, i64 0
  %238 = load double*, double** %sum_qsb, align 8, !tbaa !2
  %arrayidx203 = getelementptr inbounds double, double* %238, i64 0
  %239 = load double*, double** %Qdiags, align 8, !tbaa !2
  %arrayidx204 = getelementptr inbounds double, double* %239, i64 0
  %240 = load double*, double** %Qdiagsb, align 8, !tbaa !2
  %arrayidx205 = getelementptr inbounds double, double* %240, i64 0
  call void @preprocess_qs_b(i32 %233, i32 %234, double* %235, double* %236, double* %arrayidx202, double* %arrayidx203, double* %arrayidx204, double* %arrayidx205)
  %241 = load double*, double** %main_term, align 8, !tbaa !2
  %242 = bitcast double* %241 to i8*
  call void @free(i8* %242) #9
  %243 = load double*, double** %main_termb, align 8, !tbaa !2
  %244 = bitcast double* %243 to i8*
  call void @free(i8* %244) #9
  %245 = load double*, double** %Qxcentered, align 8, !tbaa !2
  %246 = bitcast double* %245 to i8*
  call void @free(i8* %246) #9
  %247 = load double*, double** %Qxcenteredb, align 8, !tbaa !2
  %248 = bitcast double* %247 to i8*
  call void @free(i8* %248) #9
  %249 = load double*, double** %xcentered, align 8, !tbaa !2
  %250 = bitcast double* %249 to i8*
  call void @free(i8* %250) #9
  %251 = load double*, double** %xcenteredb, align 8, !tbaa !2
  %252 = bitcast double* %251 to i8*
  call void @free(i8* %252) #9
  %253 = load double*, double** %sum_qs, align 8, !tbaa !2
  %254 = bitcast double* %253 to i8*
  call void @free(i8* %254) #9
  %255 = load double*, double** %sum_qsb, align 8, !tbaa !2
  %256 = bitcast double* %255 to i8*
  call void @free(i8* %256) #9
  %257 = load double*, double** %Qdiags, align 8, !tbaa !2
  %258 = bitcast double* %257 to i8*
  call void @free(i8* %258) #9
  %259 = load double*, double** %Qdiagsb, align 8, !tbaa !2
  %260 = bitcast double* %259 to i8*
  call void @free(i8* %260) #9
  %261 = bitcast double* %lse_alphasb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %261) #9
  %262 = bitcast double* %lse_alphas to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %262) #9
  %263 = bitcast double* %slseb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %263) #9
  %264 = bitcast double* %slse to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %264) #9
  %265 = bitcast double** %main_termb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %265) #9
  %266 = bitcast double** %main_term to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %266) #9
  %267 = bitcast double** %Qxcenteredb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %267) #9
  %268 = bitcast double** %Qxcentered to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %268) #9
  %269 = bitcast double** %xcenteredb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %269) #9
  %270 = bitcast double** %xcentered to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %270) #9
  %271 = bitcast double** %sum_qsb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %271) #9
  %272 = bitcast double** %sum_qs to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %272) #9
  %273 = bitcast i32* %ii1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %273) #9
  %274 = bitcast double* %result1b to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %274) #9
  %275 = bitcast double* %result1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %275) #9
  %276 = bitcast double** %Qdiagsb to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %276) #9
  %277 = bitcast double** %Qdiags to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %277) #9
  %278 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %278) #9
  %279 = bitcast double* %CONSTANT to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %279) #9
  %280 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %280) #9
  %281 = bitcast i32* %ix to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %281) #9
  ret void
}

declare dso_local void @pushReal8Array(double*, i32) #2

declare dso_local void @popReal8Array(double*, i32) #2

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.33() #7 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  %2 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal16vector_separatorB5cxx11E to i8*), i8* @__dso_handle) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.35() #7 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  %2 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal19vector_print_beforeB5cxx11E to i8*), i8* @__dso_handle) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.37() #7 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  %2 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal18vector_print_afterB5cxx11E to i8*), i8* @__dso_handle) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.39() #7 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  %2 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_opening_bracketB5cxx11E to i8*), i8* @__dso_handle) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.40() #7 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  %2 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal21array_closing_bracketB5cxx11E to i8*), i8* @__dso_handle) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.41() #7 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  %2 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal26array_contiguous_separatorB5cxx11E to i8*), i8* @__dso_handle) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.42() #7 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  %2 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E to i8*), i8* @__dso_handle) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.44() #7 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  %2 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal18array_print_beforeB5cxx11E to i8*), i8* @__dso_handle) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.46() #7 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  %2 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal17array_print_afterB5cxx11E to i8*), i8* @__dso_handle) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.47() #7 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  %2 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal24array_print_empty_beforeB5cxx11E to i8*), i8* @__dso_handle) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable
define internal void @__cxx_global_var_init.49() #7 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  %2 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_ZN5adept8internal23array_print_empty_afterB5cxx11E to i8*), i8* @__dso_handle) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept21set_array_print_styleENS_15ArrayPrintStyleE(i32 %ps) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %ps.addr = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp47 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  store i32 %ps, i32* %ps.addr, align 4, !tbaa !117
  %0 = load i32, i32* %ps.addr, align 4, !tbaa !117
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb11
    i32 3, label %sw.bb23
    i32 2, label %sw.bb35
  ]

sw.bb:                                            ; preds = %entry
  %call = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0))
  %call1 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call2 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call3 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call4 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call5 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0))
  %call6 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
  %call7 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call8 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call9 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i64 0, i64 0))
  %call10 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0))
  store i8 0, i8* @_ZN5adept8internal18array_print_indentE, align 1, !tbaa !18
  store i8 1, i8* @_ZN5adept8internal22array_print_empty_rankE, align 1, !tbaa !18
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  %call12 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0))
  %call13 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call14 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call15 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call16 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call17 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0))
  %call18 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
  %call19 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call20 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call21 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0))
  %call22 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  store i8 0, i8* @_ZN5adept8internal18array_print_indentE, align 1, !tbaa !18
  store i8 0, i8* @_ZN5adept8internal22array_print_empty_rankE, align 1, !tbaa !18
  br label %sw.epilog

sw.bb23:                                          ; preds = %entry
  %call24 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0))
  %call25 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0))
  %call26 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0))
  %call27 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call28 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.52, i64 0, i64 0))
  %call29 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0))
  %call30 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i64 0, i64 0))
  %call31 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0))
  %call32 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0))
  %call33 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.54, i64 0, i64 0))
  %call34 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0))
  store i8 1, i8* @_ZN5adept8internal18array_print_indentE, align 1, !tbaa !18
  store i8 0, i8* @_ZN5adept8internal22array_print_empty_rankE, align 1, !tbaa !18
  br label %sw.epilog

sw.bb35:                                          ; preds = %entry
  %call36 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal16vector_separatorB5cxx11E, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0))
  %call37 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal19vector_print_beforeB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0))
  %call38 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18vector_print_afterB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0))
  %call39 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_opening_bracketB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0))
  %call40 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal21array_closing_bracketB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0))
  %call41 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal26array_contiguous_separatorB5cxx11E, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.34, i64 0, i64 0))
  %call42 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal30array_non_contiguous_separatorB5cxx11E, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0))
  %call43 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal18array_print_beforeB5cxx11E, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.45, i64 0, i64 0))
  %call44 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal17array_print_afterB5cxx11E, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0))
  %call45 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal24array_print_empty_beforeB5cxx11E, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i64 0, i64 0))
  %call46 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) @_ZN5adept8internal23array_print_empty_afterB5cxx11E, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0))
  store i8 1, i8* @_ZN5adept8internal18array_print_indentE, align 1, !tbaa !18
  store i8 1, i8* @_ZN5adept8internal22array_print_empty_rankE, align 1, !tbaa !18
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::invalid_operation"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp47) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp47)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %sw.default
  invoke void @_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont49 unwind label %lpad48

invoke.cont49:                                    ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_operationE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad48

lpad:                                             ; preds = %sw.default
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad48:                                           ; preds = %invoke.cont49, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad48, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp47) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp47 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

sw.epilog:                                        ; preds = %sw.bb35, %sw.bb23, %sw.bb11, %sw.bb
  %12 = load i32, i32* %ps.addr, align 4, !tbaa !117
  store i32 %12, i32* @_ZN5adept8internal17array_print_styleE, align 4, !tbaa !117
  ret void

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val53 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val53

unreachable:                                      ; preds = %invoke.cont49
  unreachable
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__s) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__s.addr = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %0)
  ret %"class.std::__cxx11::basic_string"* %call
}

declare dso_local i8* @__cxa_allocate_exception(i64)

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::invalid_operation"*, align 8
  %message.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp2 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.adept::invalid_operation"* %this, %"class.adept::invalid_operation"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %message, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::invalid_operation"*, %"class.adept::invalid_operation"** %this.addr, align 8
  %0 = bitcast %"class.adept::invalid_operation"* %this1 to %"class.adept::array_exception"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp2) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.115, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept15array_exceptionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::array_exception"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %3) #9
  %4 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %4) #9
  %5 = bitcast %"class.adept::invalid_operation"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept17invalid_operationE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !53
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %7 = bitcast %"class.adept::invalid_operation"* %this1 to %"class.adept::exception"*
  %message_ = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %7, i32 0, i32 1
  %call = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %invoke.cont4
  ret void

lpad:                                             ; preds = %entry
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad3:                                            ; preds = %invoke.cont
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  store i8* %12, i8** %exn.slot, align 8
  %13 = extractvalue { i8*, i32 } %11, 1
  store i32 %13, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad3, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp2) #9
  %14 = bitcast %"class.std::allocator.0"* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %14) #9
  %15 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %15) #9
  br label %eh.resume

lpad7:                                            ; preds = %invoke.cont4
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %exn.slot, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %ehselector.slot, align 4
  %19 = bitcast %"class.adept::invalid_operation"* %this1 to %"class.adept::array_exception"*
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::array_exception"*)*)(%"class.adept::array_exception"* nonnull dereferenceable(40) %19) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad7, %ehcleanup
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val10 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val10
}

declare dso_local void @__cxa_throw(i8*, i8*, i8*)

declare dso_local void @__cxa_free_exception(i8*)

; Function Attrs: nounwind uwtable
define dso_local void @_ZN5adept5StackD2Ev(%"class.adept::Stack"* nonnull dereferenceable(149) %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %is_thread_unsafe_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 11
  %0 = load i8, i8* %is_thread_unsafe_, align 1, !tbaa !119, !range !27
  %tobool = trunc i8 %0 to i1
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8, !tbaa !2
  %cmp = icmp eq %"class.adept::Stack"* %1, %this1
  br i1 %cmp, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  store %"class.adept::Stack"* null, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8, !tbaa !2
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end6

if.else:                                          ; preds = %entry
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %cmp3 = icmp eq %"class.adept::Stack"* %2, %this1
  br i1 %cmp3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.else
  store %"class.adept::Stack"* null, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end5, %if.end
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %3 = load double*, double** %gradient_, align 8, !tbaa !124
  %tobool7 = icmp ne double* %3, null
  br i1 %tobool7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end6
  %gradient_9 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %4 = load double*, double** %gradient_9, align 8, !tbaa !124
  %isnull = icmp eq double* %4, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then8
  %5 = bitcast double* %4 to i8*
  call void @_ZdaPv(i8* %5) #32
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then8
  br label %if.end10

if.end10:                                         ; preds = %delete.end, %if.end6
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void bitcast (void (%"class.std::__cxx11::_List_base"*)* @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev to void (%"class.std::__cxx11::list"*)*)(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_) #9
  %dependent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_) #9
  %independent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_) #9
  %6 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrigD2Ev(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %6) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdaPv(i8*) #18

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %this, %"class.std::__cxx11::_List_base"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %this.addr, align 8
  call void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE8_M_clearEv(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %this1) #9
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.14"*)* @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEED2Ev to void (%"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"*)*)(%"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* nonnull dereferenceable(24) %_M_impl) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load i32*, i32** %_M_start, align 8, !tbaa !125
  %3 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %4, i32 0, i32 1
  %5 = load i32*, i32** %_M_finish, align 8, !tbaa !127
  %6 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* nonnull dereferenceable(24) %6) #9
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %2, i32* %5, %"class.std::allocator.10"* nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %7 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* nonnull dereferenceable(24) %7) #9
  ret void

lpad:                                             ; preds = %entry
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot, align 4
  %11 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* nonnull dereferenceable(24) %11) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN5adept8internal16StackStorageOrigD2Ev(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::StackStorageOrig"*, align 8
  store %"class.adept::internal::StackStorageOrig"* %this, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 0
  %0 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !128
  %tobool = icmp ne %"struct.adept::internal::Statement"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %statement_2 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 0
  %1 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_2, align 8, !tbaa !128
  %isnull = icmp eq %"struct.adept::internal::Statement"* %1, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then
  %2 = bitcast %"struct.adept::internal::Statement"* %1 to i8*
  call void @_ZdaPv(i8* %2) #32
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then
  br label %if.end

if.end:                                           ; preds = %delete.end, %entry
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 1
  %3 = load double*, double** %multiplier_, align 8, !tbaa !130
  %tobool3 = icmp ne double* %3, null
  br i1 %tobool3, label %if.then4, label %if.end9

if.then4:                                         ; preds = %if.end
  %multiplier_5 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 1
  %4 = load double*, double** %multiplier_5, align 8, !tbaa !130
  %isnull6 = icmp eq double* %4, null
  br i1 %isnull6, label %delete.end8, label %delete.notnull7

delete.notnull7:                                  ; preds = %if.then4
  %5 = bitcast double* %4 to i8*
  call void @_ZdaPv(i8* %5) #32
  br label %delete.end8

delete.end8:                                      ; preds = %delete.notnull7, %if.then4
  br label %if.end9

if.end9:                                          ; preds = %delete.end8, %if.end
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 2
  %6 = load i32*, i32** %index_, align 8, !tbaa !131
  %tobool10 = icmp ne i32* %6, null
  br i1 %tobool10, label %if.then11, label %if.end16

if.then11:                                        ; preds = %if.end9
  %index_12 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 2
  %7 = load i32*, i32** %index_12, align 8, !tbaa !131
  %isnull13 = icmp eq i32* %7, null
  br i1 %isnull13, label %delete.end15, label %delete.notnull14

delete.notnull14:                                 ; preds = %if.then11
  %8 = bitcast i32* %7 to i8*
  call void @_ZdaPv(i8* %8) #32
  br label %delete.end15

delete.end15:                                     ; preds = %delete.notnull14, %if.then11
  br label %if.end16

if.end16:                                         ; preds = %delete.end15, %if.end9
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack8activateEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp10 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %is_thread_unsafe_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 11
  %0 = load i8, i8* %is_thread_unsafe_, align 1, !tbaa !119, !range !27
  %tobool = trunc i8 %0 to i1
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8, !tbaa !2
  %tobool2 = icmp ne %"class.adept::Stack"* %1, null
  br i1 %tobool2, label %land.lhs.true3, label %lor.lhs.false

land.lhs.true3:                                   ; preds = %land.lhs.true
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8, !tbaa !2
  %cmp = icmp ne %"class.adept::Stack"* %2, %this1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true3, %land.lhs.true, %entry
  %is_thread_unsafe_4 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 11
  %3 = load i8, i8* %is_thread_unsafe_4, align 1, !tbaa !119, !range !27
  %tobool5 = trunc i8 %3 to i1
  br i1 %tobool5, label %if.else, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %lor.lhs.false
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %tobool7 = icmp ne %"class.adept::Stack"* %4, null
  br i1 %tobool7, label %land.lhs.true8, label %if.else

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %5 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %cmp9 = icmp ne %"class.adept::Stack"* %5, %this1
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true8, %land.lhs.true3
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %6 = bitcast i8* %exception to %"class.adept::stack_already_active"*
  %7 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %7) #9
  %8 = bitcast %"class.std::allocator.0"* %ref.tmp10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %8) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp10) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.58, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp10)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  invoke void @_ZN5adept20stack_already_activeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::stack_already_active"* nonnull dereferenceable(40) %6, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept20stack_already_activeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad11

lpad:                                             ; preds = %if.then
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %exn.slot, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad11:                                           ; preds = %invoke.cont12, %invoke.cont
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  store i8* %13, i8** %exn.slot, align 8
  %14 = extractvalue { i8*, i32 } %12, 1
  store i32 %14, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad11, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp10) #9
  %15 = bitcast %"class.std::allocator.0"* %ref.tmp10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #9
  %16 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %16) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

if.else:                                          ; preds = %land.lhs.true8, %land.lhs.true6, %lor.lhs.false
  %is_thread_unsafe_16 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 11
  %17 = load i8, i8* %is_thread_unsafe_16, align 1, !tbaa !119, !range !27
  %tobool17 = trunc i8 %17 to i1
  br i1 %tobool17, label %if.else19, label %if.then18

if.then18:                                        ; preds = %if.else
  store %"class.adept::Stack"* %this1, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  br label %if.end

if.else19:                                        ; preds = %if.else
  store %"class.adept::Stack"* %this1, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8, !tbaa !2
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then18
  br label %if.end20

if.end20:                                         ; preds = %if.end
  ret void

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val21 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val21

unreachable:                                      ; preds = %invoke.cont12
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept20stack_already_activeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::stack_already_active"* nonnull dereferenceable(40) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::stack_already_active"*, align 8
  %message.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.adept::stack_already_active"* %this, %"class.adept::stack_already_active"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %message, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::stack_already_active"*, %"class.adept::stack_already_active"** %this.addr, align 8
  %0 = bitcast %"class.adept::stack_already_active"* %this1 to %"class.adept::autodiff_exception"*
  call void @_ZN5adept18autodiff_exceptionC2Ev(%"class.adept::autodiff_exception"* nonnull dereferenceable(40) %0) #9
  %1 = bitcast %"class.adept::stack_already_active"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept20stack_already_activeE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !53
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %3 = bitcast %"class.adept::stack_already_active"* %this1 to %"class.adept::exception"*
  %message_ = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %3, i32 0, i32 1
  %call = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  %7 = bitcast %"class.adept::stack_already_active"* %this1 to %"class.adept::autodiff_exception"*
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::autodiff_exception"*)*)(%"class.adept::autodiff_exception"* nonnull dereferenceable(40) %7) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local i32 @_ZN5adept5Stack24set_max_jacobian_threadsEi(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32 %n) #8 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %n.addr = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  ret i32 1
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local i32 @_ZNK5adept5Stack20max_jacobian_threadsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  ret i32 1
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack15compute_adjointEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %ist = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %statement = alloca %"struct.adept::internal::Statement"*, align 8
  %a = alloca double, align 8
  %i = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp28 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %call = call zeroext i1 @_ZNK5adept5Stack25gradients_are_initializedEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  br i1 %call, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %1, i32 0, i32 3
  %2 = load i32, i32* %n_statements_, align 8, !tbaa !132
  %sub = sub nsw i32 %2, 1
  store i32 %sub, i32* %ist, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc26, %if.then
  %3 = load i32, i32* %ist, align 4, !tbaa !20
  %cmp = icmp sgt i32 %3, 0
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  %4 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4) #9
  br label %for.end27

for.body:                                         ; preds = %for.cond
  %5 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %6, i32 0, i32 0
  %7 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !128
  %8 = load i32, i32* %ist, align 4, !tbaa !20
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %7, i64 %idxprom
  store %"struct.adept::internal::Statement"* %arrayidx, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %9 = bitcast double* %a to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #9
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %10 = load double*, double** %gradient_, align 8, !tbaa !124
  %11 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %11, i32 0, i32 0
  %12 = load i32, i32* %index, align 4, !tbaa !133
  %idxprom2 = sext i32 %12 to i64
  %arrayidx3 = getelementptr inbounds double, double* %10, i64 %idxprom2
  %13 = load double, double* %arrayidx3, align 8, !tbaa !44
  store double %13, double* %a, align 8, !tbaa !44
  %gradient_4 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %14 = load double*, double** %gradient_4, align 8, !tbaa !124
  %15 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %index5 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %15, i32 0, i32 0
  %16 = load i32, i32* %index5, align 4, !tbaa !133
  %idxprom6 = sext i32 %16 to i64
  %arrayidx7 = getelementptr inbounds double, double* %14, i64 %idxprom6
  store double 0.000000e+00, double* %arrayidx7, align 8, !tbaa !44
  %17 = load double, double* %a, align 8, !tbaa !44
  %cmp8 = fcmp fast une double %17, 0.000000e+00
  br i1 %cmp8, label %if.then9, label %if.end

if.then9:                                         ; preds = %for.body
  %18 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #9
  %19 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_10 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %19, i32 0, i32 0
  %20 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_10, align 8, !tbaa !128
  %21 = load i32, i32* %ist, align 4, !tbaa !20
  %sub11 = sub nsw i32 %21, 1
  %idxprom12 = sext i32 %sub11 to i64
  %arrayidx13 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %20, i64 %idxprom12
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayidx13, i32 0, i32 1
  %22 = load i32, i32* %end_plus_one, align 4, !tbaa !135
  store i32 %22, i32* %i, align 4, !tbaa !20
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc, %if.then9
  %23 = load i32, i32* %i, align 4, !tbaa !20
  %24 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %end_plus_one15 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %24, i32 0, i32 1
  %25 = load i32, i32* %end_plus_one15, align 4, !tbaa !135
  %cmp16 = icmp slt i32 %23, %25
  br i1 %cmp16, label %for.body18, label %for.cond.cleanup17

for.cond.cleanup17:                               ; preds = %for.cond14
  store i32 5, i32* %cleanup.dest.slot, align 4
  %26 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %26) #9
  br label %for.end

for.body18:                                       ; preds = %for.cond14
  %27 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %27, i32 0, i32 1
  %28 = load double*, double** %multiplier_, align 8, !tbaa !130
  %29 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom19 = sext i32 %29 to i64
  %arrayidx20 = getelementptr inbounds double, double* %28, i64 %idxprom19
  %30 = load double, double* %arrayidx20, align 8, !tbaa !44
  %31 = load double, double* %a, align 8, !tbaa !44
  %mul = fmul fast double %30, %31
  %gradient_21 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %32 = load double*, double** %gradient_21, align 8, !tbaa !124
  %33 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %33, i32 0, i32 2
  %34 = load i32*, i32** %index_, align 8, !tbaa !131
  %35 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom22 = sext i32 %35 to i64
  %arrayidx23 = getelementptr inbounds i32, i32* %34, i64 %idxprom22
  %36 = load i32, i32* %arrayidx23, align 4, !tbaa !20
  %idxprom24 = sext i32 %36 to i64
  %arrayidx25 = getelementptr inbounds double, double* %32, i64 %idxprom24
  %37 = load double, double* %arrayidx25, align 8, !tbaa !44
  %add = fadd fast double %37, %mul
  store double %add, double* %arrayidx25, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body18
  %38 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond14, !llvm.loop !136

for.end:                                          ; preds = %for.cond.cleanup17
  br label %if.end

if.end:                                           ; preds = %for.end, %for.body
  %39 = bitcast double* %a to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #9
  %40 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #9
  br label %for.inc26

for.inc26:                                        ; preds = %if.end
  %41 = load i32, i32* %ist, align 4, !tbaa !20
  %dec = add nsw i32 %41, -1
  store i32 %dec, i32* %ist, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !137

for.end27:                                        ; preds = %for.cond.cleanup
  br label %if.end34

if.else:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %42 = bitcast i8* %exception to %"class.adept::gradients_not_initialized"*
  %43 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %43) #9
  %44 = bitcast %"class.std::allocator.0"* %ref.tmp28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %44) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp28) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.59, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp28)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.else
  invoke void @_ZN5adept25gradients_not_initializedC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::gradients_not_initialized"* nonnull dereferenceable(40) %42, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont30 unwind label %lpad29

invoke.cont30:                                    ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept25gradients_not_initializedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad29

lpad:                                             ; preds = %if.else
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %exn.slot, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad29:                                           ; preds = %invoke.cont30, %invoke.cont
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %exn.slot, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad29, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp28) #9
  %51 = bitcast %"class.std::allocator.0"* %ref.tmp28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %51) #9
  %52 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %52) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

if.end34:                                         ; preds = %for.end27
  ret void

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val35 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val35

unreachable:                                      ; preds = %invoke.cont30
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZNK5adept5Stack25gradients_are_initializedEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %gradients_initialized_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 10
  %0 = load i8, i8* %gradients_initialized_, align 8, !tbaa !138, !range !27
  %tobool = trunc i8 %0 to i1
  ret i1 %tobool
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept25gradients_not_initializedC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::gradients_not_initialized"* nonnull dereferenceable(40) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::gradients_not_initialized"*, align 8
  %message.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.adept::gradients_not_initialized"* %this, %"class.adept::gradients_not_initialized"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %message, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::gradients_not_initialized"*, %"class.adept::gradients_not_initialized"** %this.addr, align 8
  %0 = bitcast %"class.adept::gradients_not_initialized"* %this1 to %"class.adept::autodiff_exception"*
  call void @_ZN5adept18autodiff_exceptionC2Ev(%"class.adept::autodiff_exception"* nonnull dereferenceable(40) %0) #9
  %1 = bitcast %"class.adept::gradients_not_initialized"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept25gradients_not_initializedE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !53
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %3 = bitcast %"class.adept::gradients_not_initialized"* %this1 to %"class.adept::exception"*
  %message_ = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %3, i32 0, i32 1
  %call = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  %7 = bitcast %"class.adept::gradients_not_initialized"* %this1 to %"class.adept::autodiff_exception"*
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::autodiff_exception"*)*)(%"class.adept::autodiff_exception"* nonnull dereferenceable(40) %7) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack22compute_tangent_linearEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %ist = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %statement = alloca %"struct.adept::internal::Statement"*, align 8
  %a = alloca double, align 8
  %i = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp22 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %call = call zeroext i1 @_ZNK5adept5Stack25gradients_are_initializedEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  br i1 %call, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 1, i32* %ist, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc19, %if.then
  %1 = load i32, i32* %ist, align 4, !tbaa !20
  %2 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %2, i32 0, i32 3
  %3 = load i32, i32* %n_statements_, align 8, !tbaa !132
  %cmp = icmp slt i32 %1, %3
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  %4 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4) #9
  br label %for.end21

for.body:                                         ; preds = %for.cond
  %5 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %6, i32 0, i32 0
  %7 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !128
  %8 = load i32, i32* %ist, align 4, !tbaa !20
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %7, i64 %idxprom
  store %"struct.adept::internal::Statement"* %arrayidx, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %9 = bitcast double* %a to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #9
  store double 0.000000e+00, double* %a, align 8, !tbaa !44
  %10 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #9
  %11 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_2 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %11, i32 0, i32 0
  %12 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_2, align 8, !tbaa !128
  %13 = load i32, i32* %ist, align 4, !tbaa !20
  %sub = sub nsw i32 %13, 1
  %idxprom3 = sext i32 %sub to i64
  %arrayidx4 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %12, i64 %idxprom3
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayidx4, i32 0, i32 1
  %14 = load i32, i32* %end_plus_one, align 4, !tbaa !135
  store i32 %14, i32* %i, align 4, !tbaa !20
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %for.body
  %15 = load i32, i32* %i, align 4, !tbaa !20
  %16 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %end_plus_one6 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %16, i32 0, i32 1
  %17 = load i32, i32* %end_plus_one6, align 4, !tbaa !135
  %cmp7 = icmp slt i32 %15, %17
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond5
  store i32 5, i32* %cleanup.dest.slot, align 4
  %18 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %18) #9
  br label %for.end

for.body9:                                        ; preds = %for.cond5
  %19 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %19, i32 0, i32 1
  %20 = load double*, double** %multiplier_, align 8, !tbaa !130
  %21 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom10 = sext i32 %21 to i64
  %arrayidx11 = getelementptr inbounds double, double* %20, i64 %idxprom10
  %22 = load double, double* %arrayidx11, align 8, !tbaa !44
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %23 = load double*, double** %gradient_, align 8, !tbaa !124
  %24 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %24, i32 0, i32 2
  %25 = load i32*, i32** %index_, align 8, !tbaa !131
  %26 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom12 = sext i32 %26 to i64
  %arrayidx13 = getelementptr inbounds i32, i32* %25, i64 %idxprom12
  %27 = load i32, i32* %arrayidx13, align 4, !tbaa !20
  %idxprom14 = sext i32 %27 to i64
  %arrayidx15 = getelementptr inbounds double, double* %23, i64 %idxprom14
  %28 = load double, double* %arrayidx15, align 8, !tbaa !44
  %mul = fmul fast double %22, %28
  %29 = load double, double* %a, align 8, !tbaa !44
  %add = fadd fast double %29, %mul
  store double %add, double* %a, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body9
  %30 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond5, !llvm.loop !139

for.end:                                          ; preds = %for.cond.cleanup8
  %31 = load double, double* %a, align 8, !tbaa !44
  %gradient_16 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %32 = load double*, double** %gradient_16, align 8, !tbaa !124
  %33 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %33, i32 0, i32 0
  %34 = load i32, i32* %index, align 4, !tbaa !133
  %idxprom17 = sext i32 %34 to i64
  %arrayidx18 = getelementptr inbounds double, double* %32, i64 %idxprom17
  store double %31, double* %arrayidx18, align 8, !tbaa !44
  %35 = bitcast double* %a to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #9
  %36 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #9
  br label %for.inc19

for.inc19:                                        ; preds = %for.end
  %37 = load i32, i32* %ist, align 4, !tbaa !20
  %inc20 = add nsw i32 %37, 1
  store i32 %inc20, i32* %ist, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !140

for.end21:                                        ; preds = %for.cond.cleanup
  br label %if.end

if.else:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %38 = bitcast i8* %exception to %"class.adept::gradients_not_initialized"*
  %39 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %39) #9
  %40 = bitcast %"class.std::allocator.0"* %ref.tmp22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %40) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp22) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.59, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp22)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.else
  invoke void @_ZN5adept25gradients_not_initializedC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::gradients_not_initialized"* nonnull dereferenceable(40) %38, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont24 unwind label %lpad23

invoke.cont24:                                    ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept25gradients_not_initializedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad23

lpad:                                             ; preds = %if.else
  %41 = landingpad { i8*, i32 }
          cleanup
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %exn.slot, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad23:                                           ; preds = %invoke.cont24, %invoke.cont
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %exn.slot, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad23, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp22) #9
  %47 = bitcast %"class.std::allocator.0"* %ref.tmp22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %47) #9
  %48 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %48) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

if.end:                                           ; preds = %for.end21
  ret void

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val28 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val28

unreachable:                                      ; preds = %invoke.cont24
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local i32 @_ZN5adept5Stack21do_register_gradientsERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32* nonnull align 4 dereferenceable(4) %n) #8 align 2 {
entry:
  %retval = alloca i32, align 4
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %n.addr = alloca i32*, align 8
  %return_val = alloca i32, align 4
  %it = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp = alloca %"struct.std::_List_iterator", align 8
  %cleanup.dest.slot = alloca i32, align 4
  %len = alloca i32, align 4
  %agg.tmp = alloca %"struct.std::_List_const_iterator", align 8
  %coerce = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp27 = alloca %"struct.std::_List_iterator", align 8
  %agg.tmp34 = alloca %"struct.std::_List_const_iterator", align 8
  %coerce37 = alloca %"struct.std::_List_iterator", align 8
  %coerce42 = alloca %"struct.std::_List_iterator", align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store i32* %n, i32** %n.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %1 = load i32, i32* %0, align 4, !tbaa !20
  %n_gradients_registered_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 9
  %2 = load i32, i32* %n_gradients_registered_, align 4, !tbaa !141
  %add = add nsw i32 %2, %1
  store i32 %add, i32* %n_gradients_registered_, align 4, !tbaa !141
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call = call zeroext i1 @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE5emptyEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_) #9
  br i1 %call, label %if.end49, label %if.then

if.then:                                          ; preds = %entry
  %3 = bitcast i32* %return_val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #9
  %4 = bitcast %"struct.std::_List_iterator"* %it to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %gap_list_2 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call3 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_2) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %it, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call3, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %gap_list_4 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call5 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_4) #9
  %coerce.dive6 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call5, %"struct.std::__detail::_List_node_base"** %coerce.dive6, align 8
  %call7 = call zeroext i1 @_ZStneRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %ref.tmp) #9
  %6 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #9
  br i1 %call7, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  br label %cleanup44

for.body:                                         ; preds = %for.cond
  %7 = bitcast i32* %len to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #9
  %call8 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it) #9
  %end = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call8, i32 0, i32 1
  %8 = load i32, i32* %end, align 4, !tbaa !142
  %add9 = add nsw i32 %8, 1
  %call10 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it) #9
  %start = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call10, i32 0, i32 0
  %9 = load i32, i32* %start, align 4, !tbaa !144
  %sub = sub nsw i32 %add9, %9
  store i32 %sub, i32* %len, align 4, !tbaa !20
  %10 = load i32, i32* %len, align 4, !tbaa !20
  %11 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %12 = load i32, i32* %11, align 4, !tbaa !20
  %cmp = icmp sgt i32 %10, %12
  br i1 %cmp, label %if.then11, label %if.else

if.then11:                                        ; preds = %for.body
  %call12 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it) #9
  %start13 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call12, i32 0, i32 0
  %13 = load i32, i32* %start13, align 4, !tbaa !144
  store i32 %13, i32* %return_val, align 4, !tbaa !20
  %14 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %15 = load i32, i32* %14, align 4, !tbaa !20
  %call14 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it) #9
  %start15 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call14, i32 0, i32 0
  %16 = load i32, i32* %start15, align 4, !tbaa !144
  %add16 = add nsw i32 %16, %15
  store i32 %add16, i32* %start15, align 4, !tbaa !144
  %17 = load i32, i32* %return_val, align 4, !tbaa !20
  store i32 %17, i32* %retval, align 4
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.else:                                          ; preds = %for.body
  %18 = load i32, i32* %len, align 4, !tbaa !20
  %19 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %20 = load i32, i32* %19, align 4, !tbaa !20
  %cmp17 = icmp eq i32 %18, %20
  br i1 %cmp17, label %if.then18, label %if.end39

if.then18:                                        ; preds = %if.else
  %call19 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it) #9
  %start20 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call19, i32 0, i32 0
  %21 = load i32, i32* %start20, align 4, !tbaa !144
  store i32 %21, i32* %return_val, align 4, !tbaa !20
  %most_recent_gap_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call21 = call zeroext i1 @_ZSteqRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %most_recent_gap_, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it) #9
  br i1 %call21, label %if.then22, label %if.else32

if.then22:                                        ; preds = %if.then18
  %gap_list_23 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void @_ZNSt20_List_const_iteratorIN5adept3GapEEC2ERKSt14_List_iteratorIS1_E(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %agg.tmp, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it) #9
  %coerce.dive24 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %agg.tmp, i32 0, i32 0
  %22 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive24, align 8
  %call25 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5eraseESt20_List_const_iteratorIS2_E(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_23, %"struct.std::__detail::_List_node_base"* %22) #9
  %coerce.dive26 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call25, %"struct.std::__detail::_List_node_base"** %coerce.dive26, align 8
  %23 = bitcast %"struct.std::_List_iterator"* %ref.tmp27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #9
  %gap_list_28 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call29 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_28) #9
  %coerce.dive30 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp27, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call29, %"struct.std::__detail::_List_node_base"** %coerce.dive30, align 8
  %most_recent_gap_31 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %24 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_31 to i8*
  %25 = bitcast %"struct.std::_List_iterator"* %ref.tmp27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 8, i1 false), !tbaa.struct !145
  %26 = bitcast %"struct.std::_List_iterator"* %ref.tmp27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %26) #9
  br label %if.end

if.else32:                                        ; preds = %if.then18
  %gap_list_33 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void @_ZNSt20_List_const_iteratorIN5adept3GapEEC2ERKSt14_List_iteratorIS1_E(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %agg.tmp34, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it) #9
  %coerce.dive35 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %agg.tmp34, i32 0, i32 0
  %27 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive35, align 8
  %call36 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5eraseESt20_List_const_iteratorIS2_E(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_33, %"struct.std::__detail::_List_node_base"* %27) #9
  %coerce.dive38 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce37, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call36, %"struct.std::__detail::_List_node_base"** %coerce.dive38, align 8
  br label %if.end

if.end:                                           ; preds = %if.else32, %if.then22
  %28 = load i32, i32* %return_val, align 4, !tbaa !20
  store i32 %28, i32* %retval, align 4
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end39:                                         ; preds = %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39
  store i32 0, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end40, %if.end, %if.then11
  %29 = bitcast i32* %len to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %29) #9
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %cleanup44 [
    i32 0, label %cleanup.cont
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc

for.inc:                                          ; preds = %cleanup.cont
  %call41 = call %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEppEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it, i32 0) #9
  %coerce.dive43 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce42, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call41, %"struct.std::__detail::_List_node_base"** %coerce.dive43, align 8
  br label %for.cond, !llvm.loop !146

cleanup44:                                        ; preds = %cleanup, %for.cond.cleanup
  %30 = bitcast %"struct.std::_List_iterator"* %it to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %30) #9
  %cleanup.dest45 = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest45, label %cleanup46 [
    i32 2, label %for.end
  ]

for.end:                                          ; preds = %cleanup44
  store i32 0, i32* %cleanup.dest.slot, align 4
  br label %cleanup46

cleanup46:                                        ; preds = %for.end, %cleanup44
  %31 = bitcast i32* %return_val to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %31) #9
  %cleanup.dest47 = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest47, label %unreachable [
    i32 0, label %cleanup.cont48
    i32 1, label %return
  ]

cleanup.cont48:                                   ; preds = %cleanup46
  br label %if.end49

if.end49:                                         ; preds = %cleanup.cont48, %entry
  %32 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %33 = load i32, i32* %32, align 4, !tbaa !20
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %34 = load i32, i32* %i_gradient_, align 8, !tbaa !147
  %add50 = add nsw i32 %34, %33
  store i32 %add50, i32* %i_gradient_, align 8, !tbaa !147
  %i_gradient_51 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %35 = load i32, i32* %i_gradient_51, align 8, !tbaa !147
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %36 = load i32, i32* %max_gradient_, align 8, !tbaa !148
  %cmp52 = icmp sgt i32 %35, %36
  br i1 %cmp52, label %if.then53, label %if.end56

if.then53:                                        ; preds = %if.end49
  %i_gradient_54 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %37 = load i32, i32* %i_gradient_54, align 8, !tbaa !147
  %max_gradient_55 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  store i32 %37, i32* %max_gradient_55, align 8, !tbaa !148
  br label %if.end56

if.end56:                                         ; preds = %if.then53, %if.end49
  %i_gradient_57 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %38 = load i32, i32* %i_gradient_57, align 8, !tbaa !147
  %39 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %40 = load i32, i32* %39, align 4, !tbaa !20
  %sub58 = sub nsw i32 %38, %40
  store i32 %sub58, i32* %retval, align 4
  br label %return

return:                                           ; preds = %if.end56, %cleanup46
  %41 = load i32, i32* %retval, align 4
  ret i32 %41

unreachable:                                      ; preds = %cleanup46
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE5emptyEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %0, i32 0, i32 0
  %_M_node = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl, i32 0, i32 0
  %1 = bitcast %"struct.std::__detail::_List_node_header"* %_M_node to %"struct.std::__detail::_List_node_base"*
  %_M_next = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %1, i32 0, i32 0
  %2 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next, align 8, !tbaa !149
  %3 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  %_M_impl2 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %3, i32 0, i32 0
  %_M_node3 = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl2, i32 0, i32 0
  %4 = bitcast %"struct.std::__detail::_List_node_header"* %_M_node3 to %"struct.std::__detail::_List_node_base"*
  %cmp = icmp eq %"struct.std::__detail::_List_node_base"* %2, %4
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %retval = alloca %"struct.std::_List_iterator", align 8
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %0, i32 0, i32 0
  %_M_node = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl, i32 0, i32 0
  %1 = bitcast %"struct.std::__detail::_List_node_header"* %_M_node to %"struct.std::__detail::_List_node_base"*
  %_M_next = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %1, i32 0, i32 0
  %2 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next, align 8, !tbaa !149
  call void @_ZNSt14_List_iteratorIN5adept3GapEEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %retval, %"struct.std::__detail::_List_node_base"* %2) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %retval, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  ret %"struct.std::__detail::_List_node_base"* %3
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZStneRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %__x, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %__y) #8 comdat {
entry:
  %__x.addr = alloca %"struct.std::_List_iterator"*, align 8
  %__y.addr = alloca %"struct.std::_List_iterator"*, align 8
  store %"struct.std::_List_iterator"* %__x, %"struct.std::_List_iterator"** %__x.addr, align 8, !tbaa !2
  store %"struct.std::_List_iterator"* %__y, %"struct.std::_List_iterator"** %__y.addr, align 8, !tbaa !2
  %0 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %__x.addr, align 8, !tbaa !2
  %_M_node = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %0, i32 0, i32 0
  %1 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !151
  %2 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %__y.addr, align 8, !tbaa !2
  %_M_node1 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %2, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node1, align 8, !tbaa !151
  %cmp = icmp ne %"struct.std::__detail::_List_node_base"* %1, %3
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %retval = alloca %"struct.std::_List_iterator", align 8
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %0, i32 0, i32 0
  %_M_node = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl, i32 0, i32 0
  %1 = bitcast %"struct.std::__detail::_List_node_header"* %_M_node to %"struct.std::__detail::_List_node_base"*
  call void @_ZNSt14_List_iteratorIN5adept3GapEEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %retval, %"struct.std::__detail::_List_node_base"* %1) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %retval, i32 0, i32 0
  %2 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  ret %"struct.std::__detail::_List_node_base"* %2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_List_iterator"*, align 8
  store %"struct.std::_List_iterator"* %this, %"struct.std::_List_iterator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !151
  %1 = bitcast %"struct.std::__detail::_List_node_base"* %0 to %"struct.std::_List_node"*
  %call = call %"struct.adept::Gap"* @_ZNSt10_List_nodeIN5adept3GapEE9_M_valptrEv(%"struct.std::_List_node"* nonnull dereferenceable(24) %1)
  ret %"struct.adept::Gap"* %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZSteqRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %__x, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %__y) #8 comdat {
entry:
  %__x.addr = alloca %"struct.std::_List_iterator"*, align 8
  %__y.addr = alloca %"struct.std::_List_iterator"*, align 8
  store %"struct.std::_List_iterator"* %__x, %"struct.std::_List_iterator"** %__x.addr, align 8, !tbaa !2
  store %"struct.std::_List_iterator"* %__y, %"struct.std::_List_iterator"** %__y.addr, align 8, !tbaa !2
  %0 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %__x.addr, align 8, !tbaa !2
  %_M_node = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %0, i32 0, i32 0
  %1 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !151
  %2 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %__y.addr, align 8, !tbaa !2
  %_M_node1 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %2, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node1, align 8, !tbaa !151
  %cmp = icmp eq %"struct.std::__detail::_List_node_base"* %1, %3
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5eraseESt20_List_const_iteratorIS2_E(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this, %"struct.std::__detail::_List_node_base"* %__position.coerce) #8 comdat align 2 {
entry:
  %retval = alloca %"struct.std::_List_iterator", align 8
  %__position = alloca %"struct.std::_List_const_iterator", align 8
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  %agg.tmp = alloca %"struct.std::_List_iterator", align 8
  %coerce.dive = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %__position, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %__position.coerce, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %__position, i32 0, i32 0
  %0 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !152
  %_M_next = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %0, i32 0, i32 0
  %1 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next, align 8, !tbaa !149
  call void @_ZNSt14_List_iteratorIN5adept3GapEEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %retval, %"struct.std::__detail::_List_node_base"* %1) #9
  %call = call %"struct.std::__detail::_List_node_base"* @_ZNKSt20_List_const_iteratorIN5adept3GapEE13_M_const_castEv(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %__position) #9
  %coerce.dive2 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %agg.tmp, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call, %"struct.std::__detail::_List_node_base"** %coerce.dive2, align 8
  %coerce.dive3 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %agg.tmp, i32 0, i32 0
  %2 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive3, align 8
  call void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE8_M_eraseESt14_List_iteratorIS2_E(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this1, %"struct.std::__detail::_List_node_base"* %2) #9
  %coerce.dive4 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %retval, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive4, align 8
  ret %"struct.std::__detail::_List_node_base"* %3
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt20_List_const_iteratorIN5adept3GapEEC2ERKSt14_List_iteratorIS1_E(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %this, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %__x) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_List_const_iterator"*, align 8
  %__x.addr = alloca %"struct.std::_List_iterator"*, align 8
  store %"struct.std::_List_const_iterator"* %this, %"struct.std::_List_const_iterator"** %this.addr, align 8, !tbaa !2
  store %"struct.std::_List_iterator"* %__x, %"struct.std::_List_iterator"** %__x.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %__x.addr, align 8, !tbaa !2
  %_M_node2 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %0, i32 0, i32 0
  %1 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node2, align 8, !tbaa !151
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !152
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEppEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %this, i32 %0) #8 comdat align 2 {
entry:
  %retval = alloca %"struct.std::_List_iterator", align 8
  %this.addr = alloca %"struct.std::_List_iterator"*, align 8
  %.addr = alloca i32, align 4
  store %"struct.std::_List_iterator"* %this, %"struct.std::_List_iterator"** %this.addr, align 8, !tbaa !2
  store i32 %0, i32* %.addr, align 4, !tbaa !20
  %this1 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %this.addr, align 8
  %1 = bitcast %"struct.std::_List_iterator"* %retval to i8*
  %2 = bitcast %"struct.std::_List_iterator"* %this1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false), !tbaa.struct !145
  %_M_node = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %this1, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !151
  %_M_next = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %3, i32 0, i32 0
  %4 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next, align 8, !tbaa !149
  %_M_node2 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %this1, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %4, %"struct.std::__detail::_List_node_base"** %_M_node2, align 8, !tbaa !151
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %retval, i32 0, i32 0
  %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  ret %"struct.std::__detail::_List_node_base"* %5
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack27unregister_gradient_not_topERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32* nonnull align 4 dereferenceable(4) %gradient_index) #0 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %gradient_index.addr = alloca i32*, align 8
  %status = alloca i32, align 4
  %ref.tmp = alloca %"struct.std::_List_iterator", align 8
  %current_gap = alloca %"struct.adept::Gap"*, align 8
  %it = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp19 = alloca %"struct.std::_List_iterator", align 8
  %cleanup.dest.slot = alloca i32, align 4
  %ref.tmp49 = alloca %"struct.std::_List_iterator", align 8
  %agg.tmp = alloca %"struct.std::_List_const_iterator", align 8
  %ref.tmp51 = alloca %"struct.adept::Gap", align 4
  %coerce = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp64 = alloca %"struct.adept::Gap", align 4
  %ref.tmp65 = alloca %"struct.std::_List_iterator", align 8
  %coerce72 = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp79 = alloca %"struct.std::_List_iterator", align 8
  %it86 = alloca %"struct.std::_List_iterator", align 8
  %coerce89 = alloca %"struct.std::_List_iterator", align 8
  %agg.tmp105 = alloca %"struct.std::_List_const_iterator", align 8
  %coerce108 = alloca %"struct.std::_List_iterator", align 8
  %it114 = alloca %"struct.std::_List_iterator", align 8
  %coerce117 = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp119 = alloca %"struct.std::_List_iterator", align 8
  %agg.tmp140 = alloca %"struct.std::_List_const_iterator", align 8
  %coerce143 = alloca %"struct.std::_List_iterator", align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store i32* %gradient_index, i32** %gradient_index.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast i32* %status to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 3, i32* %status, align 4, !tbaa !14
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call = call zeroext i1 @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE5emptyEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_) #9
  %1 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  br i1 %call, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %entry
  %most_recent_gap_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %gap_list_2 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call3 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_2) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call3, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  %call4 = call zeroext i1 @_ZStneRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %most_recent_gap_, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %ref.tmp) #9
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %call4, %land.rhs ]
  %3 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #9
  br i1 %2, label %if.then, label %if.end13

if.then:                                          ; preds = %land.end
  %4 = bitcast %"struct.adept::Gap"** %current_gap to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %most_recent_gap_5 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call6 = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEdeEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %most_recent_gap_5) #9
  store %"struct.adept::Gap"* %call6, %"struct.adept::Gap"** %current_gap, align 8, !tbaa !2
  %5 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %6 = load i32, i32* %5, align 4, !tbaa !20
  %7 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %current_gap, align 8, !tbaa !2
  %start = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %7, i32 0, i32 0
  %8 = load i32, i32* %start, align 4, !tbaa !144
  %sub = sub nsw i32 %8, 1
  %cmp = icmp eq i32 %6, %sub
  br i1 %cmp, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.then
  %9 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %current_gap, align 8, !tbaa !2
  %start8 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %9, i32 0, i32 0
  %10 = load i32, i32* %start8, align 4, !tbaa !144
  %dec = add nsw i32 %10, -1
  store i32 %dec, i32* %start8, align 4, !tbaa !144
  store i32 0, i32* %status, align 4, !tbaa !14
  br label %if.end12

if.else:                                          ; preds = %if.then
  %11 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %12 = load i32, i32* %11, align 4, !tbaa !20
  %13 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %current_gap, align 8, !tbaa !2
  %end = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %13, i32 0, i32 1
  %14 = load i32, i32* %end, align 4, !tbaa !142
  %add = add nsw i32 %14, 1
  %cmp9 = icmp eq i32 %12, %add
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.else
  %15 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %current_gap, align 8, !tbaa !2
  %end11 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %15, i32 0, i32 1
  %16 = load i32, i32* %end11, align 4, !tbaa !142
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %end11, align 4, !tbaa !142
  store i32 1, i32* %status, align 4, !tbaa !14
  br label %if.end

if.end:                                           ; preds = %if.then10, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end, %if.then7
  %17 = bitcast %"struct.adept::Gap"** %current_gap to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %land.end
  %18 = load i32, i32* %status, align 4, !tbaa !14
  %cmp14 = icmp eq i32 %18, 3
  br i1 %cmp14, label %if.then15, label %if.end75

if.then15:                                        ; preds = %if.end13
  %19 = bitcast %"struct.std::_List_iterator"* %it to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #9
  %gap_list_16 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call17 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_16) #9
  %coerce.dive18 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %it, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call17, %"struct.std::__detail::_List_node_base"** %coerce.dive18, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then15
  %20 = bitcast %"struct.std::_List_iterator"* %ref.tmp19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #9
  %gap_list_20 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call21 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_20) #9
  %coerce.dive22 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp19, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call21, %"struct.std::__detail::_List_node_base"** %coerce.dive22, align 8
  %call23 = call zeroext i1 @_ZStneRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %ref.tmp19) #9
  %21 = bitcast %"struct.std::_List_iterator"* %ref.tmp19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #9
  br i1 %call23, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  br label %cleanup

for.body:                                         ; preds = %for.cond
  %22 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %23 = load i32, i32* %22, align 4, !tbaa !20
  %call24 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it) #9
  %end25 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call24, i32 0, i32 1
  %24 = load i32, i32* %end25, align 4, !tbaa !142
  %add26 = add nsw i32 %24, 1
  %cmp27 = icmp sle i32 %23, %add26
  br i1 %cmp27, label %if.then28, label %if.end58

if.then28:                                        ; preds = %for.body
  %25 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %26 = load i32, i32* %25, align 4, !tbaa !20
  %call29 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it) #9
  %start30 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call29, i32 0, i32 0
  %27 = load i32, i32* %start30, align 4, !tbaa !144
  %sub31 = sub nsw i32 %27, 1
  %cmp32 = icmp eq i32 %26, %sub31
  br i1 %cmp32, label %if.then33, label %if.else38

if.then33:                                        ; preds = %if.then28
  store i32 0, i32* %status, align 4, !tbaa !14
  %call34 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it) #9
  %start35 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call34, i32 0, i32 0
  %28 = load i32, i32* %start35, align 4, !tbaa !144
  %dec36 = add nsw i32 %28, -1
  store i32 %dec36, i32* %start35, align 4, !tbaa !144
  %most_recent_gap_37 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %29 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_37 to i8*
  %30 = bitcast %"struct.std::_List_iterator"* %it to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 8, i1 false), !tbaa.struct !145
  br label %if.end57

if.else38:                                        ; preds = %if.then28
  %31 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %32 = load i32, i32* %31, align 4, !tbaa !20
  %call39 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it) #9
  %end40 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call39, i32 0, i32 1
  %33 = load i32, i32* %end40, align 4, !tbaa !142
  %add41 = add nsw i32 %33, 1
  %cmp42 = icmp eq i32 %32, %add41
  br i1 %cmp42, label %if.then43, label %if.else48

if.then43:                                        ; preds = %if.else38
  store i32 1, i32* %status, align 4, !tbaa !14
  %call44 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it) #9
  %end45 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call44, i32 0, i32 1
  %34 = load i32, i32* %end45, align 4, !tbaa !142
  %inc46 = add nsw i32 %34, 1
  store i32 %inc46, i32* %end45, align 4, !tbaa !142
  %most_recent_gap_47 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %35 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_47 to i8*
  %36 = bitcast %"struct.std::_List_iterator"* %it to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 8, i1 false), !tbaa.struct !145
  br label %if.end56

if.else48:                                        ; preds = %if.else38
  %37 = bitcast %"struct.std::_List_iterator"* %ref.tmp49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #9
  %gap_list_50 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void @_ZNSt20_List_const_iteratorIN5adept3GapEEC2ERKSt14_List_iteratorIS1_E(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %agg.tmp, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it) #9
  %38 = bitcast %"struct.adept::Gap"* %ref.tmp51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #9
  %39 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %40 = load i32, i32* %39, align 4, !tbaa !20
  call void @_ZN5adept3GapC2Ei(%"struct.adept::Gap"* nonnull dereferenceable(8) %ref.tmp51, i32 %40)
  %coerce.dive52 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %agg.tmp, i32 0, i32 0
  %41 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive52, align 8
  %call53 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE6insertESt20_List_const_iteratorIS2_EOS2_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_50, %"struct.std::__detail::_List_node_base"* %41, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %ref.tmp51)
  %coerce.dive54 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp49, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call53, %"struct.std::__detail::_List_node_base"** %coerce.dive54, align 8
  %most_recent_gap_55 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %42 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_55 to i8*
  %43 = bitcast %"struct.std::_List_iterator"* %ref.tmp49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 8, i1 false), !tbaa.struct !145
  %44 = bitcast %"struct.adept::Gap"* %ref.tmp51 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #9
  %45 = bitcast %"struct.std::_List_iterator"* %ref.tmp49 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %45) #9
  store i32 2, i32* %status, align 4, !tbaa !14
  br label %if.end56

if.end56:                                         ; preds = %if.else48, %if.then43
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then33
  store i32 2, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end58:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end58
  %call59 = call %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEppEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it, i32 0) #9
  %coerce.dive60 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call59, %"struct.std::__detail::_List_node_base"** %coerce.dive60, align 8
  br label %for.cond, !llvm.loop !154

cleanup:                                          ; preds = %if.end57, %for.cond.cleanup
  %46 = bitcast %"struct.std::_List_iterator"* %it to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #9
  br label %for.end

for.end:                                          ; preds = %cleanup
  %47 = load i32, i32* %status, align 4, !tbaa !14
  %cmp61 = icmp eq i32 %47, 3
  br i1 %cmp61, label %if.then62, label %if.end74

if.then62:                                        ; preds = %for.end
  %gap_list_63 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %48 = bitcast %"struct.adept::Gap"* %ref.tmp64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #9
  %49 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %50 = load i32, i32* %49, align 4, !tbaa !20
  call void @_ZN5adept3GapC2Ei(%"struct.adept::Gap"* nonnull dereferenceable(8) %ref.tmp64, i32 %50)
  call void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE9push_backEOS2_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_63, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %ref.tmp64)
  %51 = bitcast %"struct.adept::Gap"* %ref.tmp64 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #9
  %52 = bitcast %"struct.std::_List_iterator"* %ref.tmp65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %52) #9
  %gap_list_66 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call67 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_66) #9
  %coerce.dive68 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp65, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call67, %"struct.std::__detail::_List_node_base"** %coerce.dive68, align 8
  %most_recent_gap_69 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %53 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_69 to i8*
  %54 = bitcast %"struct.std::_List_iterator"* %ref.tmp65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 8, i1 false), !tbaa.struct !145
  %55 = bitcast %"struct.std::_List_iterator"* %ref.tmp65 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %55) #9
  %most_recent_gap_70 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call71 = call %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEmmEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %most_recent_gap_70, i32 0) #9
  %coerce.dive73 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce72, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call71, %"struct.std::__detail::_List_node_base"** %coerce.dive73, align 8
  br label %if.end74

if.end74:                                         ; preds = %if.then62, %for.end
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.end13
  %56 = load i32, i32* %status, align 4, !tbaa !14
  %cmp76 = icmp eq i32 %56, 0
  %57 = bitcast %"struct.std::_List_iterator"* %ref.tmp79 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %57) #9
  br i1 %cmp76, label %land.rhs77, label %land.end84

land.rhs77:                                       ; preds = %if.end75
  %most_recent_gap_78 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %gap_list_80 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call81 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_80) #9
  %coerce.dive82 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp79, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call81, %"struct.std::__detail::_List_node_base"** %coerce.dive82, align 8
  %call83 = call zeroext i1 @_ZStneRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %most_recent_gap_78, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %ref.tmp79) #9
  br label %land.end84

land.end84:                                       ; preds = %land.rhs77, %if.end75
  %58 = phi i1 [ false, %if.end75 ], [ %call83, %land.rhs77 ]
  %59 = bitcast %"struct.std::_List_iterator"* %ref.tmp79 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %59) #9
  br i1 %58, label %if.then85, label %if.else111

if.then85:                                        ; preds = %land.end84
  %60 = bitcast %"struct.std::_List_iterator"* %it86 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %60) #9
  %most_recent_gap_87 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %61 = bitcast %"struct.std::_List_iterator"* %it86 to i8*
  %62 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 8, i1 false), !tbaa.struct !145
  %call88 = call %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEmmEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it86, i32 0) #9
  %coerce.dive90 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce89, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call88, %"struct.std::__detail::_List_node_base"** %coerce.dive90, align 8
  %call91 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it86) #9
  %end92 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call91, i32 0, i32 1
  %63 = load i32, i32* %end92, align 4, !tbaa !142
  %most_recent_gap_93 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call94 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %most_recent_gap_93) #9
  %start95 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call94, i32 0, i32 0
  %64 = load i32, i32* %start95, align 4, !tbaa !144
  %sub96 = sub nsw i32 %64, 1
  %cmp97 = icmp eq i32 %63, %sub96
  br i1 %cmp97, label %if.then98, label %if.end110

if.then98:                                        ; preds = %if.then85
  %call99 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it86) #9
  %start100 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call99, i32 0, i32 0
  %65 = load i32, i32* %start100, align 4, !tbaa !144
  %most_recent_gap_101 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call102 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %most_recent_gap_101) #9
  %start103 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call102, i32 0, i32 0
  store i32 %65, i32* %start103, align 4, !tbaa !144
  %gap_list_104 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void @_ZNSt20_List_const_iteratorIN5adept3GapEEC2ERKSt14_List_iteratorIS1_E(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %agg.tmp105, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it86) #9
  %coerce.dive106 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %agg.tmp105, i32 0, i32 0
  %66 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive106, align 8
  %call107 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5eraseESt20_List_const_iteratorIS2_E(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_104, %"struct.std::__detail::_List_node_base"* %66) #9
  %coerce.dive109 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce108, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call107, %"struct.std::__detail::_List_node_base"** %coerce.dive109, align 8
  br label %if.end110

if.end110:                                        ; preds = %if.then98, %if.then85
  %67 = bitcast %"struct.std::_List_iterator"* %it86 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %67) #9
  br label %if.end147

if.else111:                                       ; preds = %land.end84
  %68 = load i32, i32* %status, align 4, !tbaa !14
  %cmp112 = icmp eq i32 %68, 1
  br i1 %cmp112, label %if.then113, label %if.end146

if.then113:                                       ; preds = %if.else111
  %69 = bitcast %"struct.std::_List_iterator"* %it114 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %69) #9
  %most_recent_gap_115 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %70 = bitcast %"struct.std::_List_iterator"* %it114 to i8*
  %71 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_115 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 8, i1 false), !tbaa.struct !145
  %call116 = call %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEppEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it114, i32 0) #9
  %coerce.dive118 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce117, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call116, %"struct.std::__detail::_List_node_base"** %coerce.dive118, align 8
  %72 = bitcast %"struct.std::_List_iterator"* %ref.tmp119 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %72) #9
  %gap_list_120 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call121 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_120) #9
  %coerce.dive122 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp119, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call121, %"struct.std::__detail::_List_node_base"** %coerce.dive122, align 8
  %call123 = call zeroext i1 @_ZStneRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it114, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %ref.tmp119) #9
  br i1 %call123, label %land.rhs124, label %land.end132

land.rhs124:                                      ; preds = %if.then113
  %call125 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it114) #9
  %start126 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call125, i32 0, i32 0
  %73 = load i32, i32* %start126, align 4, !tbaa !144
  %most_recent_gap_127 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call128 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %most_recent_gap_127) #9
  %end129 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call128, i32 0, i32 1
  %74 = load i32, i32* %end129, align 4, !tbaa !142
  %add130 = add nsw i32 %74, 1
  %cmp131 = icmp eq i32 %73, %add130
  br label %land.end132

land.end132:                                      ; preds = %land.rhs124, %if.then113
  %75 = phi i1 [ false, %if.then113 ], [ %cmp131, %land.rhs124 ]
  %76 = bitcast %"struct.std::_List_iterator"* %ref.tmp119 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #9
  br i1 %75, label %if.then133, label %if.end145

if.then133:                                       ; preds = %land.end132
  %call134 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it114) #9
  %end135 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call134, i32 0, i32 1
  %77 = load i32, i32* %end135, align 4, !tbaa !142
  %most_recent_gap_136 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call137 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %most_recent_gap_136) #9
  %end138 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call137, i32 0, i32 1
  store i32 %77, i32* %end138, align 4, !tbaa !142
  %gap_list_139 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void @_ZNSt20_List_const_iteratorIN5adept3GapEEC2ERKSt14_List_iteratorIS1_E(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %agg.tmp140, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it114) #9
  %coerce.dive141 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %agg.tmp140, i32 0, i32 0
  %78 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive141, align 8
  %call142 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5eraseESt20_List_const_iteratorIS2_E(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_139, %"struct.std::__detail::_List_node_base"* %78) #9
  %coerce.dive144 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce143, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call142, %"struct.std::__detail::_List_node_base"** %coerce.dive144, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.then133, %land.end132
  %79 = bitcast %"struct.std::_List_iterator"* %it114 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %79) #9
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.else111
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.end110
  %80 = bitcast i32* %status to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %80) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEdeEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_List_iterator"*, align 8
  store %"struct.std::_List_iterator"* %this, %"struct.std::_List_iterator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !151
  %1 = bitcast %"struct.std::__detail::_List_node_base"* %0 to %"struct.std::_List_node"*
  %call = call %"struct.adept::Gap"* @_ZNSt10_List_nodeIN5adept3GapEE9_M_valptrEv(%"struct.std::_List_node"* nonnull dereferenceable(24) %1)
  ret %"struct.adept::Gap"* %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE6insertESt20_List_const_iteratorIS2_EOS2_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this, %"struct.std::__detail::_List_node_base"* %__position.coerce, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %__x) #0 comdat align 2 {
entry:
  %retval = alloca %"struct.std::_List_iterator", align 8
  %__position = alloca %"struct.std::_List_const_iterator", align 8
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  %__x.addr = alloca %"struct.adept::Gap"*, align 8
  %agg.tmp = alloca %"struct.std::_List_const_iterator", align 8
  %coerce.dive = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %__position, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %__position.coerce, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Gap"* %__x, %"struct.adept::Gap"** %__x.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"struct.std::_List_const_iterator"* %agg.tmp to i8*
  %1 = bitcast %"struct.std::_List_const_iterator"* %__position to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false), !tbaa.struct !145
  %2 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__x.addr, align 8, !tbaa !2
  %call = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZSt4moveIRN5adept3GapEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %2) #9
  %coerce.dive2 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %agg.tmp, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive2, align 8
  %call3 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE7emplaceIJS2_EEESt14_List_iteratorIS2_ESt20_List_const_iteratorIS2_EDpOT_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this1, %"struct.std::__detail::_List_node_base"* %3, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %call)
  %coerce.dive4 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %retval, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call3, %"struct.std::__detail::_List_node_base"** %coerce.dive4, align 8
  %coerce.dive5 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %retval, i32 0, i32 0
  %4 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive5, align 8
  ret %"struct.std::__detail::_List_node_base"* %4
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept3GapC2Ei(%"struct.adept::Gap"* nonnull dereferenceable(8) %this, i32 %value) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Gap"*, align 8
  %value.addr = alloca i32, align 4
  store %"struct.adept::Gap"* %this, %"struct.adept::Gap"** %this.addr, align 8, !tbaa !2
  store i32 %value, i32* %value.addr, align 4, !tbaa !20
  %this1 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %this.addr, align 8
  %start = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %this1, i32 0, i32 0
  %0 = load i32, i32* %value.addr, align 4, !tbaa !20
  store i32 %0, i32* %start, align 4, !tbaa !144
  %end = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %this1, i32 0, i32 1
  %1 = load i32, i32* %value.addr, align 4, !tbaa !20
  store i32 %1, i32* %end, align 4, !tbaa !142
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE9push_backEOS2_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %__x) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  %__x.addr = alloca %"struct.adept::Gap"*, align 8
  %agg.tmp = alloca %"struct.std::_List_iterator", align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Gap"* %__x, %"struct.adept::Gap"** %__x.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %call = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this1) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %agg.tmp, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  %0 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__x.addr, align 8, !tbaa !2
  %call2 = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZSt4moveIRN5adept3GapEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %0) #9
  %coerce.dive3 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %agg.tmp, i32 0, i32 0
  %1 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive3, align 8
  call void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE9_M_insertIJS2_EEEvSt14_List_iteratorIS2_EDpOT_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this1, %"struct.std::__detail::_List_node_base"* %1, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %call2)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEmmEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %this, i32 %0) #8 comdat align 2 {
entry:
  %retval = alloca %"struct.std::_List_iterator", align 8
  %this.addr = alloca %"struct.std::_List_iterator"*, align 8
  %.addr = alloca i32, align 4
  store %"struct.std::_List_iterator"* %this, %"struct.std::_List_iterator"** %this.addr, align 8, !tbaa !2
  store i32 %0, i32* %.addr, align 4, !tbaa !20
  %this1 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %this.addr, align 8
  %1 = bitcast %"struct.std::_List_iterator"* %retval to i8*
  %2 = bitcast %"struct.std::_List_iterator"* %this1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false), !tbaa.struct !145
  %_M_node = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %this1, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !151
  %_M_prev = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %3, i32 0, i32 1
  %4 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_prev, align 8, !tbaa !155
  %_M_node2 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %this1, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %4, %"struct.std::__detail::_List_node_base"** %_M_node2, align 8, !tbaa !151
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %retval, i32 0, i32 0
  %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  ret %"struct.std::__detail::_List_node_base"* %5
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack20unregister_gradientsERKiS2_(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32* nonnull align 4 dereferenceable(4) %gradient_index, i32* nonnull align 4 dereferenceable(4) %n) #0 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %gradient_index.addr = alloca i32*, align 8
  %n.addr = alloca i32*, align 8
  %last_gap = alloca %"struct.adept::Gap"*, align 8
  %it = alloca %"struct.std::_List_iterator", align 8
  %coerce = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp = alloca %"struct.std::_List_iterator", align 8
  %status = alloca i32, align 4
  %ref.tmp28 = alloca %"struct.std::_List_iterator", align 8
  %current_gap = alloca %"struct.adept::Gap"*, align 8
  %it54 = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp58 = alloca %"struct.std::_List_iterator", align 8
  %cleanup.dest.slot = alloca i32, align 4
  %ref.tmp88 = alloca %"struct.std::_List_iterator", align 8
  %agg.tmp = alloca %"struct.std::_List_const_iterator", align 8
  %ref.tmp90 = alloca %"struct.adept::Gap", align 4
  %coerce101 = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp106 = alloca %"struct.adept::Gap", align 4
  %ref.tmp109 = alloca %"struct.std::_List_iterator", align 8
  %coerce116 = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp123 = alloca %"struct.std::_List_iterator", align 8
  %it130 = alloca %"struct.std::_List_iterator", align 8
  %coerce133 = alloca %"struct.std::_List_iterator", align 8
  %agg.tmp149 = alloca %"struct.std::_List_const_iterator", align 8
  %coerce152 = alloca %"struct.std::_List_iterator", align 8
  %it158 = alloca %"struct.std::_List_iterator", align 8
  %coerce161 = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp163 = alloca %"struct.std::_List_iterator", align 8
  %agg.tmp184 = alloca %"struct.std::_List_const_iterator", align 8
  %coerce187 = alloca %"struct.std::_List_iterator", align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store i32* %gradient_index, i32** %gradient_index.addr, align 8, !tbaa !2
  store i32* %n, i32** %n.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %1 = load i32, i32* %0, align 4, !tbaa !20
  %n_gradients_registered_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 9
  %2 = load i32, i32* %n_gradients_registered_, align 4, !tbaa !141
  %sub = sub nsw i32 %2, %1
  store i32 %sub, i32* %n_gradients_registered_, align 4, !tbaa !141
  %3 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %4 = load i32, i32* %3, align 4, !tbaa !20
  %5 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %6 = load i32, i32* %5, align 4, !tbaa !20
  %add = add nsw i32 %4, %6
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %7 = load i32, i32* %i_gradient_, align 8, !tbaa !147
  %cmp = icmp eq i32 %add, %7
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %8 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %9 = load i32, i32* %8, align 4, !tbaa !20
  %i_gradient_2 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %10 = load i32, i32* %i_gradient_2, align 8, !tbaa !147
  %sub3 = sub nsw i32 %10, %9
  store i32 %sub3, i32* %i_gradient_2, align 8, !tbaa !147
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call = call zeroext i1 @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE5emptyEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_) #9
  br i1 %call, label %if.end24, label %if.then4

if.then4:                                         ; preds = %if.then
  %11 = bitcast %"struct.adept::Gap"** %last_gap to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #9
  %gap_list_5 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call6 = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE4backEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_5) #9
  store %"struct.adept::Gap"* %call6, %"struct.adept::Gap"** %last_gap, align 8, !tbaa !2
  %i_gradient_7 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %12 = load i32, i32* %i_gradient_7, align 8, !tbaa !147
  %13 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %last_gap, align 8, !tbaa !2
  %end = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %13, i32 0, i32 1
  %14 = load i32, i32* %end, align 4, !tbaa !142
  %add8 = add nsw i32 %14, 1
  %cmp9 = icmp eq i32 %12, %add8
  br i1 %cmp9, label %if.then10, label %if.end23

if.then10:                                        ; preds = %if.then4
  %15 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %last_gap, align 8, !tbaa !2
  %start = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %15, i32 0, i32 0
  %16 = load i32, i32* %start, align 4, !tbaa !144
  %i_gradient_11 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  store i32 %16, i32* %i_gradient_11, align 8, !tbaa !147
  %17 = bitcast %"struct.std::_List_iterator"* %it to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #9
  %gap_list_12 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call13 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_12) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %it, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call13, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  %call14 = call %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEmmEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it, i32 0) #9
  %coerce.dive15 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call14, %"struct.std::__detail::_List_node_base"** %coerce.dive15, align 8
  %most_recent_gap_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call16 = call zeroext i1 @_ZSteqRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %most_recent_gap_, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it) #9
  br i1 %call16, label %if.then17, label %if.end

if.then17:                                        ; preds = %if.then10
  %18 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #9
  %gap_list_18 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call19 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_18) #9
  %coerce.dive20 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call19, %"struct.std::__detail::_List_node_base"** %coerce.dive20, align 8
  %most_recent_gap_21 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %19 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_21 to i8*
  %20 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 8, i1 false), !tbaa.struct !145
  %21 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #9
  br label %if.end

if.end:                                           ; preds = %if.then17, %if.then10
  %gap_list_22 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE8pop_backEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_22) #9
  %22 = bitcast %"struct.std::_List_iterator"* %it to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #9
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then4
  %23 = bitcast %"struct.adept::Gap"** %last_gap to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #9
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then
  br label %if.end192

if.else:                                          ; preds = %entry
  %24 = bitcast i32* %status to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #9
  store i32 3, i32* %status, align 4, !tbaa !14
  %gap_list_25 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call26 = call zeroext i1 @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE5emptyEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_25) #9
  %25 = bitcast %"struct.std::_List_iterator"* %ref.tmp28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #9
  br i1 %call26, label %land.end, label %land.rhs

land.rhs:                                         ; preds = %if.else
  %most_recent_gap_27 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %gap_list_29 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call30 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_29) #9
  %coerce.dive31 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp28, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call30, %"struct.std::__detail::_List_node_base"** %coerce.dive31, align 8
  %call32 = call zeroext i1 @_ZStneRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %most_recent_gap_27, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %ref.tmp28) #9
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.else
  %26 = phi i1 [ false, %if.else ], [ %call32, %land.rhs ]
  %27 = bitcast %"struct.std::_List_iterator"* %ref.tmp28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %27) #9
  br i1 %26, label %if.then33, label %if.end51

if.then33:                                        ; preds = %land.end
  %28 = bitcast %"struct.adept::Gap"** %current_gap to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %28) #9
  %most_recent_gap_34 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call35 = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEdeEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %most_recent_gap_34) #9
  store %"struct.adept::Gap"* %call35, %"struct.adept::Gap"** %current_gap, align 8, !tbaa !2
  %29 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %30 = load i32, i32* %29, align 4, !tbaa !20
  %31 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %current_gap, align 8, !tbaa !2
  %start36 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %31, i32 0, i32 0
  %32 = load i32, i32* %start36, align 4, !tbaa !144
  %33 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %34 = load i32, i32* %33, align 4, !tbaa !20
  %sub37 = sub nsw i32 %32, %34
  %cmp38 = icmp eq i32 %30, %sub37
  br i1 %cmp38, label %if.then39, label %if.else42

if.then39:                                        ; preds = %if.then33
  %35 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %36 = load i32, i32* %35, align 4, !tbaa !20
  %37 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %current_gap, align 8, !tbaa !2
  %start40 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %37, i32 0, i32 0
  %38 = load i32, i32* %start40, align 4, !tbaa !144
  %sub41 = sub nsw i32 %38, %36
  store i32 %sub41, i32* %start40, align 4, !tbaa !144
  store i32 0, i32* %status, align 4, !tbaa !14
  br label %if.end50

if.else42:                                        ; preds = %if.then33
  %39 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %40 = load i32, i32* %39, align 4, !tbaa !20
  %41 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %current_gap, align 8, !tbaa !2
  %end43 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %41, i32 0, i32 1
  %42 = load i32, i32* %end43, align 4, !tbaa !142
  %add44 = add nsw i32 %42, 1
  %cmp45 = icmp eq i32 %40, %add44
  br i1 %cmp45, label %if.then46, label %if.end49

if.then46:                                        ; preds = %if.else42
  %43 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %44 = load i32, i32* %43, align 4, !tbaa !20
  %45 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %current_gap, align 8, !tbaa !2
  %end47 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %45, i32 0, i32 1
  %46 = load i32, i32* %end47, align 4, !tbaa !142
  %add48 = add nsw i32 %46, %44
  store i32 %add48, i32* %end47, align 4, !tbaa !142
  store i32 1, i32* %status, align 4, !tbaa !14
  br label %if.end49

if.end49:                                         ; preds = %if.then46, %if.else42
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then39
  %47 = bitcast %"struct.adept::Gap"** %current_gap to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #9
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %land.end
  %48 = load i32, i32* %status, align 4, !tbaa !14
  %cmp52 = icmp eq i32 %48, 3
  br i1 %cmp52, label %if.then53, label %if.end119

if.then53:                                        ; preds = %if.end51
  %49 = bitcast %"struct.std::_List_iterator"* %it54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %49) #9
  %gap_list_55 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call56 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_55) #9
  %coerce.dive57 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %it54, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call56, %"struct.std::__detail::_List_node_base"** %coerce.dive57, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then53
  %50 = bitcast %"struct.std::_List_iterator"* %ref.tmp58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #9
  %gap_list_59 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call60 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_59) #9
  %coerce.dive61 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp58, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call60, %"struct.std::__detail::_List_node_base"** %coerce.dive61, align 8
  %call62 = call zeroext i1 @_ZStneRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it54, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %ref.tmp58) #9
  %51 = bitcast %"struct.std::_List_iterator"* %ref.tmp58 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #9
  br i1 %call62, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  br label %cleanup

for.body:                                         ; preds = %for.cond
  %52 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %53 = load i32, i32* %52, align 4, !tbaa !20
  %call63 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it54) #9
  %end64 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call63, i32 0, i32 1
  %54 = load i32, i32* %end64, align 4, !tbaa !142
  %add65 = add nsw i32 %54, 1
  %cmp66 = icmp sle i32 %53, %add65
  br i1 %cmp66, label %if.then67, label %if.end99

if.then67:                                        ; preds = %for.body
  %55 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %56 = load i32, i32* %55, align 4, !tbaa !20
  %call68 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it54) #9
  %start69 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call68, i32 0, i32 0
  %57 = load i32, i32* %start69, align 4, !tbaa !144
  %58 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %59 = load i32, i32* %58, align 4, !tbaa !20
  %sub70 = sub nsw i32 %57, %59
  %cmp71 = icmp eq i32 %56, %sub70
  br i1 %cmp71, label %if.then72, label %if.else77

if.then72:                                        ; preds = %if.then67
  store i32 0, i32* %status, align 4, !tbaa !14
  %60 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %61 = load i32, i32* %60, align 4, !tbaa !20
  %call73 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it54) #9
  %start74 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call73, i32 0, i32 0
  %62 = load i32, i32* %start74, align 4, !tbaa !144
  %sub75 = sub nsw i32 %62, %61
  store i32 %sub75, i32* %start74, align 4, !tbaa !144
  %most_recent_gap_76 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %63 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_76 to i8*
  %64 = bitcast %"struct.std::_List_iterator"* %it54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 8, i1 false), !tbaa.struct !145
  br label %if.end98

if.else77:                                        ; preds = %if.then67
  %65 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %66 = load i32, i32* %65, align 4, !tbaa !20
  %call78 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it54) #9
  %end79 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call78, i32 0, i32 1
  %67 = load i32, i32* %end79, align 4, !tbaa !142
  %add80 = add nsw i32 %67, 1
  %cmp81 = icmp eq i32 %66, %add80
  br i1 %cmp81, label %if.then82, label %if.else87

if.then82:                                        ; preds = %if.else77
  store i32 1, i32* %status, align 4, !tbaa !14
  %68 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %69 = load i32, i32* %68, align 4, !tbaa !20
  %call83 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it54) #9
  %end84 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call83, i32 0, i32 1
  %70 = load i32, i32* %end84, align 4, !tbaa !142
  %add85 = add nsw i32 %70, %69
  store i32 %add85, i32* %end84, align 4, !tbaa !142
  %most_recent_gap_86 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %71 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_86 to i8*
  %72 = bitcast %"struct.std::_List_iterator"* %it54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 8, i1 false), !tbaa.struct !145
  br label %if.end97

if.else87:                                        ; preds = %if.else77
  %73 = bitcast %"struct.std::_List_iterator"* %ref.tmp88 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %73) #9
  %gap_list_89 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void @_ZNSt20_List_const_iteratorIN5adept3GapEEC2ERKSt14_List_iteratorIS1_E(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %agg.tmp, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it54) #9
  %74 = bitcast %"struct.adept::Gap"* %ref.tmp90 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %74) #9
  %75 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %76 = load i32, i32* %75, align 4, !tbaa !20
  %77 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %78 = load i32, i32* %77, align 4, !tbaa !20
  %79 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %80 = load i32, i32* %79, align 4, !tbaa !20
  %add91 = add nsw i32 %78, %80
  %sub92 = sub nsw i32 %add91, 1
  call void @_ZN5adept3GapC2Eii(%"struct.adept::Gap"* nonnull dereferenceable(8) %ref.tmp90, i32 %76, i32 %sub92)
  %coerce.dive93 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %agg.tmp, i32 0, i32 0
  %81 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive93, align 8
  %call94 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE6insertESt20_List_const_iteratorIS2_EOS2_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_89, %"struct.std::__detail::_List_node_base"* %81, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %ref.tmp90)
  %coerce.dive95 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp88, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call94, %"struct.std::__detail::_List_node_base"** %coerce.dive95, align 8
  %most_recent_gap_96 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %82 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_96 to i8*
  %83 = bitcast %"struct.std::_List_iterator"* %ref.tmp88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 8, i1 false), !tbaa.struct !145
  %84 = bitcast %"struct.adept::Gap"* %ref.tmp90 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %84) #9
  %85 = bitcast %"struct.std::_List_iterator"* %ref.tmp88 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %85) #9
  store i32 2, i32* %status, align 4, !tbaa !14
  br label %if.end97

if.end97:                                         ; preds = %if.else87, %if.then82
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then72
  store i32 2, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end99:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end99
  %call100 = call %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEppEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it54, i32 0) #9
  %coerce.dive102 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce101, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call100, %"struct.std::__detail::_List_node_base"** %coerce.dive102, align 8
  br label %for.cond, !llvm.loop !156

cleanup:                                          ; preds = %if.end98, %for.cond.cleanup
  %86 = bitcast %"struct.std::_List_iterator"* %it54 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %86) #9
  br label %for.end

for.end:                                          ; preds = %cleanup
  %87 = load i32, i32* %status, align 4, !tbaa !14
  %cmp103 = icmp eq i32 %87, 3
  br i1 %cmp103, label %if.then104, label %if.end118

if.then104:                                       ; preds = %for.end
  %gap_list_105 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %88 = bitcast %"struct.adept::Gap"* %ref.tmp106 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %88) #9
  %89 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %90 = load i32, i32* %89, align 4, !tbaa !20
  %91 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %92 = load i32, i32* %91, align 4, !tbaa !20
  %93 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %94 = load i32, i32* %93, align 4, !tbaa !20
  %add107 = add nsw i32 %92, %94
  %sub108 = sub nsw i32 %add107, 1
  call void @_ZN5adept3GapC2Eii(%"struct.adept::Gap"* nonnull dereferenceable(8) %ref.tmp106, i32 %90, i32 %sub108)
  call void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE9push_backEOS2_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_105, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %ref.tmp106)
  %95 = bitcast %"struct.adept::Gap"* %ref.tmp106 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %95) #9
  %96 = bitcast %"struct.std::_List_iterator"* %ref.tmp109 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %96) #9
  %gap_list_110 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call111 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_110) #9
  %coerce.dive112 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp109, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call111, %"struct.std::__detail::_List_node_base"** %coerce.dive112, align 8
  %most_recent_gap_113 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %97 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_113 to i8*
  %98 = bitcast %"struct.std::_List_iterator"* %ref.tmp109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 8, i1 false), !tbaa.struct !145
  %99 = bitcast %"struct.std::_List_iterator"* %ref.tmp109 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #9
  %most_recent_gap_114 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call115 = call %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEmmEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %most_recent_gap_114, i32 0) #9
  %coerce.dive117 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce116, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call115, %"struct.std::__detail::_List_node_base"** %coerce.dive117, align 8
  br label %if.end118

if.end118:                                        ; preds = %if.then104, %for.end
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.end51
  %100 = load i32, i32* %status, align 4, !tbaa !14
  %cmp120 = icmp eq i32 %100, 0
  %101 = bitcast %"struct.std::_List_iterator"* %ref.tmp123 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %101) #9
  br i1 %cmp120, label %land.rhs121, label %land.end128

land.rhs121:                                      ; preds = %if.end119
  %most_recent_gap_122 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %gap_list_124 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call125 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_124) #9
  %coerce.dive126 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp123, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call125, %"struct.std::__detail::_List_node_base"** %coerce.dive126, align 8
  %call127 = call zeroext i1 @_ZStneRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %most_recent_gap_122, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %ref.tmp123) #9
  br label %land.end128

land.end128:                                      ; preds = %land.rhs121, %if.end119
  %102 = phi i1 [ false, %if.end119 ], [ %call127, %land.rhs121 ]
  %103 = bitcast %"struct.std::_List_iterator"* %ref.tmp123 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %103) #9
  br i1 %102, label %if.then129, label %if.else155

if.then129:                                       ; preds = %land.end128
  %104 = bitcast %"struct.std::_List_iterator"* %it130 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %104) #9
  %most_recent_gap_131 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %105 = bitcast %"struct.std::_List_iterator"* %it130 to i8*
  %106 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 8, i1 false), !tbaa.struct !145
  %call132 = call %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEmmEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it130, i32 0) #9
  %coerce.dive134 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce133, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call132, %"struct.std::__detail::_List_node_base"** %coerce.dive134, align 8
  %call135 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it130) #9
  %end136 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call135, i32 0, i32 1
  %107 = load i32, i32* %end136, align 4, !tbaa !142
  %most_recent_gap_137 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call138 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %most_recent_gap_137) #9
  %start139 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call138, i32 0, i32 0
  %108 = load i32, i32* %start139, align 4, !tbaa !144
  %sub140 = sub nsw i32 %108, 1
  %cmp141 = icmp eq i32 %107, %sub140
  br i1 %cmp141, label %if.then142, label %if.end154

if.then142:                                       ; preds = %if.then129
  %call143 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it130) #9
  %start144 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call143, i32 0, i32 0
  %109 = load i32, i32* %start144, align 4, !tbaa !144
  %most_recent_gap_145 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call146 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %most_recent_gap_145) #9
  %start147 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call146, i32 0, i32 0
  store i32 %109, i32* %start147, align 4, !tbaa !144
  %gap_list_148 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void @_ZNSt20_List_const_iteratorIN5adept3GapEEC2ERKSt14_List_iteratorIS1_E(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %agg.tmp149, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it130) #9
  %coerce.dive150 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %agg.tmp149, i32 0, i32 0
  %110 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive150, align 8
  %call151 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5eraseESt20_List_const_iteratorIS2_E(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_148, %"struct.std::__detail::_List_node_base"* %110) #9
  %coerce.dive153 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce152, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call151, %"struct.std::__detail::_List_node_base"** %coerce.dive153, align 8
  br label %if.end154

if.end154:                                        ; preds = %if.then142, %if.then129
  %111 = bitcast %"struct.std::_List_iterator"* %it130 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %111) #9
  br label %if.end191

if.else155:                                       ; preds = %land.end128
  %112 = load i32, i32* %status, align 4, !tbaa !14
  %cmp156 = icmp eq i32 %112, 1
  br i1 %cmp156, label %if.then157, label %if.end190

if.then157:                                       ; preds = %if.else155
  %113 = bitcast %"struct.std::_List_iterator"* %it158 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %113) #9
  %most_recent_gap_159 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %114 = bitcast %"struct.std::_List_iterator"* %it158 to i8*
  %115 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 8, i1 false), !tbaa.struct !145
  %call160 = call %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEppEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it158, i32 0) #9
  %coerce.dive162 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce161, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call160, %"struct.std::__detail::_List_node_base"** %coerce.dive162, align 8
  %116 = bitcast %"struct.std::_List_iterator"* %ref.tmp163 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %116) #9
  %gap_list_164 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call165 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_164) #9
  %coerce.dive166 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp163, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call165, %"struct.std::__detail::_List_node_base"** %coerce.dive166, align 8
  %call167 = call zeroext i1 @_ZStneRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it158, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %ref.tmp163) #9
  br i1 %call167, label %land.rhs168, label %land.end176

land.rhs168:                                      ; preds = %if.then157
  %call169 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it158) #9
  %start170 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call169, i32 0, i32 0
  %117 = load i32, i32* %start170, align 4, !tbaa !144
  %most_recent_gap_171 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call172 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %most_recent_gap_171) #9
  %end173 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call172, i32 0, i32 1
  %118 = load i32, i32* %end173, align 4, !tbaa !142
  %add174 = add nsw i32 %118, 1
  %cmp175 = icmp eq i32 %117, %add174
  br label %land.end176

land.end176:                                      ; preds = %land.rhs168, %if.then157
  %119 = phi i1 [ false, %if.then157 ], [ %cmp175, %land.rhs168 ]
  %120 = bitcast %"struct.std::_List_iterator"* %ref.tmp163 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %120) #9
  br i1 %119, label %if.then177, label %if.end189

if.then177:                                       ; preds = %land.end176
  %call178 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it158) #9
  %end179 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call178, i32 0, i32 1
  %121 = load i32, i32* %end179, align 4, !tbaa !142
  %most_recent_gap_180 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call181 = call %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEptEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %most_recent_gap_180) #9
  %end182 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call181, i32 0, i32 1
  store i32 %121, i32* %end182, align 4, !tbaa !142
  %gap_list_183 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void @_ZNSt20_List_const_iteratorIN5adept3GapEEC2ERKSt14_List_iteratorIS1_E(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %agg.tmp184, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it158) #9
  %coerce.dive185 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %agg.tmp184, i32 0, i32 0
  %122 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive185, align 8
  %call186 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5eraseESt20_List_const_iteratorIS2_E(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_183, %"struct.std::__detail::_List_node_base"* %122) #9
  %coerce.dive188 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce187, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call186, %"struct.std::__detail::_List_node_base"** %coerce.dive188, align 8
  br label %if.end189

if.end189:                                        ; preds = %if.then177, %land.end176
  %123 = bitcast %"struct.std::_List_iterator"* %it158 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #9
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.else155
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.end154
  %124 = bitcast i32* %status to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %124) #9
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.end24
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE4backEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  %__tmp = alloca %"struct.std::_List_iterator", align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"struct.std::_List_iterator"* %__tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %call = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this1) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %__tmp, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  %call2 = call nonnull align 8 dereferenceable(8) %"struct.std::_List_iterator"* @_ZNSt14_List_iteratorIN5adept3GapEEmmEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %__tmp) #9
  %call3 = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEdeEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %__tmp) #9
  %1 = bitcast %"struct.std::_List_iterator"* %__tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1) #9
  ret %"struct.adept::Gap"* %call3
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE8pop_backEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  %agg.tmp = alloca %"struct.std::_List_iterator", align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %0, i32 0, i32 0
  %_M_node = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl, i32 0, i32 0
  %1 = bitcast %"struct.std::__detail::_List_node_header"* %_M_node to %"struct.std::__detail::_List_node_base"*
  %_M_prev = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %1, i32 0, i32 1
  %2 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_prev, align 8, !tbaa !155
  call void @_ZNSt14_List_iteratorIN5adept3GapEEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %agg.tmp, %"struct.std::__detail::_List_node_base"* %2) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %agg.tmp, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  call void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE8_M_eraseESt14_List_iteratorIS2_E(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this1, %"struct.std::__detail::_List_node_base"* %3) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept3GapC2Eii(%"struct.adept::Gap"* nonnull dereferenceable(8) %this, i32 %start_, i32 %end_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Gap"*, align 8
  %start_.addr = alloca i32, align 4
  %end_.addr = alloca i32, align 4
  store %"struct.adept::Gap"* %this, %"struct.adept::Gap"** %this.addr, align 8, !tbaa !2
  store i32 %start_, i32* %start_.addr, align 4, !tbaa !20
  store i32 %end_, i32* %end_.addr, align 4, !tbaa !20
  %this1 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %this.addr, align 8
  %start = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %this1, i32 0, i32 0
  %0 = load i32, i32* %start_.addr, align 4, !tbaa !20
  store i32 %0, i32* %start, align 4, !tbaa !144
  %end = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %this1, i32 0, i32 1
  %1 = load i32, i32* %end_.addr, align 4, !tbaa !20
  store i32 %1, i32* %end, align 4, !tbaa !142
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZNK5adept5Stack16print_statementsERSo(%"class.adept::Stack"* nonnull dereferenceable(149) %this, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os) #0 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %os.addr = alloca %"class.std::basic_ostream"*, align 8
  %ist = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %statement = alloca %"struct.adept::internal::Statement"*, align 8
  %i = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store %"class.std::basic_ostream"* %os, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 1, i32* %ist, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc34, %entry
  %1 = load i32, i32* %ist, align 4, !tbaa !20
  %2 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %2, i32 0, i32 3
  %3 = load i32, i32* %n_statements_, align 8, !tbaa !132
  %cmp = icmp slt i32 %1, %3
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  %4 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4) #9
  br label %for.end36

for.body:                                         ; preds = %for.cond
  %5 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %6, i32 0, i32 0
  %7 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !128
  %8 = load i32, i32* %ist, align 4, !tbaa !20
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %7, i64 %idxprom
  store %"struct.adept::internal::Statement"* %arrayidx, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %9 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %10 = load i32, i32* %ist, align 4, !tbaa !20
  %call = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %9, i32 %10)
  %call2 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0))
  %11 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %11, i32 0, i32 0
  %12 = load i32, i32* %index, align 4, !tbaa !133
  %call3 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call2, i32 %12)
  %call4 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0))
  %13 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_5 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %13, i32 0, i32 0
  %14 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_5, align 8, !tbaa !128
  %15 = load i32, i32* %ist, align 4, !tbaa !20
  %sub = sub nsw i32 %15, 1
  %idxprom6 = sext i32 %sub to i64
  %arrayidx7 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %14, i64 %idxprom6
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayidx7, i32 0, i32 1
  %16 = load i32, i32* %end_plus_one, align 4, !tbaa !135
  %17 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_8 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %17, i32 0, i32 0
  %18 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_8, align 8, !tbaa !128
  %19 = load i32, i32* %ist, align 4, !tbaa !20
  %idxprom9 = sext i32 %19 to i64
  %arrayidx10 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %18, i64 %idxprom9
  %end_plus_one11 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayidx10, i32 0, i32 1
  %20 = load i32, i32* %end_plus_one11, align 4, !tbaa !135
  %cmp12 = icmp eq i32 %16, %20
  br i1 %cmp12, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %21 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call13 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0))
  br label %if.end

if.else:                                          ; preds = %for.body
  %22 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #9
  %23 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_14 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %23, i32 0, i32 0
  %24 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_14, align 8, !tbaa !128
  %25 = load i32, i32* %ist, align 4, !tbaa !20
  %sub15 = sub nsw i32 %25, 1
  %idxprom16 = sext i32 %sub15 to i64
  %arrayidx17 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %24, i64 %idxprom16
  %end_plus_one18 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayidx17, i32 0, i32 1
  %26 = load i32, i32* %end_plus_one18, align 4, !tbaa !135
  store i32 %26, i32* %i, align 4, !tbaa !20
  br label %for.cond19

for.cond19:                                       ; preds = %for.inc, %if.else
  %27 = load i32, i32* %i, align 4, !tbaa !20
  %28 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %end_plus_one20 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %28, i32 0, i32 1
  %29 = load i32, i32* %end_plus_one20, align 4, !tbaa !135
  %cmp21 = icmp slt i32 %27, %29
  br i1 %cmp21, label %for.body23, label %for.cond.cleanup22

for.cond.cleanup22:                               ; preds = %for.cond19
  store i32 5, i32* %cleanup.dest.slot, align 4
  %30 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %30) #9
  br label %for.end

for.body23:                                       ; preds = %for.cond19
  %31 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call24 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %31, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0))
  %32 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %32, i32 0, i32 1
  %33 = load double*, double** %multiplier_, align 8, !tbaa !130
  %34 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom25 = sext i32 %34 to i64
  %arrayidx26 = getelementptr inbounds double, double* %33, i64 %idxprom25
  %35 = load double, double* %arrayidx26, align 8, !tbaa !44
  %call27 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEd(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call24, double %35)
  %call28 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i64 0, i64 0))
  %36 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %36, i32 0, i32 2
  %37 = load i32*, i32** %index_, align 8, !tbaa !131
  %38 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom29 = sext i32 %38 to i64
  %arrayidx30 = getelementptr inbounds i32, i32* %37, i64 %idxprom29
  %39 = load i32, i32* %arrayidx30, align 4, !tbaa !20
  %call31 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call28, i32 %39)
  %call32 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call31, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0))
  br label %for.inc

for.inc:                                          ; preds = %for.body23
  %40 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %40, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond19, !llvm.loop !157

for.end:                                          ; preds = %for.cond.cleanup22
  %41 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call33 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  %42 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #9
  br label %for.inc34

for.inc34:                                        ; preds = %if.end
  %43 = load i32, i32* %ist, align 4, !tbaa !20
  %inc35 = add nsw i32 %43, 1
  store i32 %inc35, i32* %ist, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !158

for.end36:                                        ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %__out, i8* %__s) #5 {
entry:
  %__out.addr = alloca %"class.std::basic_ostream"*, align 8
  %__s.addr = alloca i8*, align 8
  store %"class.std::basic_ostream"* %__out, %"class.std::basic_ostream"** %__out.addr, align 8, !tbaa !2
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %__out.addr, align 8, !tbaa !2
  %2 = bitcast %"class.std::basic_ostream"* %1 to i8**
  %vtable = load i8*, i8** %2, align 8, !tbaa !53
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -24
  %3 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64, i64* %3, align 8
  %4 = bitcast %"class.std::basic_ostream"* %1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %vbase.offset
  %5 = bitcast i8* %add.ptr to %"class.std::basic_ios"*
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate(%"class.std::basic_ios"* nonnull dereferenceable(264) %5, i32 1)
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %__out.addr, align 8, !tbaa !2
  %7 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %8 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %call = call i64 @_ZNSt11char_traitsIcE6lengthEPKc(i8* %8)
  %call1 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %6, i8* %7, i64 %call)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %__out.addr, align 8, !tbaa !2
  ret %"class.std::basic_ostream"* %9
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8), i32) #2

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEd(%"class.std::basic_ostream"* nonnull dereferenceable(8) %this, double %__f) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_ostream"*, align 8
  %__f.addr = alloca double, align 8
  store %"class.std::basic_ostream"* %this, %"class.std::basic_ostream"** %this.addr, align 8, !tbaa !2
  store double %__f, double* %__f.addr, align 8, !tbaa !44
  %this1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %this.addr, align 8
  %0 = load double, double* %__f.addr, align 8, !tbaa !44
  %call = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8) %this1, double %0)
  ret %"class.std::basic_ostream"* %call
}

; Function Attrs: uwtable mustprogress
define dso_local zeroext i1 @_ZNK5adept5Stack15print_gradientsERSo(%"class.adept::Stack"* nonnull dereferenceable(149) %this, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os) #0 align 2 {
entry:
  %retval = alloca i1, align 1
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %os.addr = alloca %"class.std::basic_ostream"*, align 8
  %i = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store %"class.std::basic_ostream"* %os, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %call = call zeroext i1 @_ZNK5adept5Stack25gradients_are_initializedEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  br i1 %call, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %i, align 4, !tbaa !20
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %2 = load i32, i32* %max_gradient_, align 8, !tbaa !148
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !tbaa !20
  %rem = srem i32 %4, 10
  %cmp2 = icmp eq i32 %rem, 0
  br i1 %cmp2, label %if.then3, label %if.end9

if.then3:                                         ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !tbaa !20
  %cmp4 = icmp ne i32 %5, 0
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then3
  %6 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call6 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.then5, %if.then3
  %7 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %8 = load i32, i32* %i, align 4, !tbaa !20
  %call7 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %7, i32 %8)
  %call8 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i64 0, i64 0))
  br label %if.end9

if.end9:                                          ; preds = %if.end, %for.body
  %9 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call10 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0))
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %10 = load double*, double** %gradient_, align 8, !tbaa !124
  %11 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %11 to i64
  %arrayidx = getelementptr inbounds double, double* %10, i64 %idxprom
  %12 = load double, double* %arrayidx, align 8, !tbaa !44
  %call11 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEd(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call10, double %12)
  br label %for.inc

for.inc:                                          ; preds = %if.end9
  %13 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !159

for.end:                                          ; preds = %for.cond.cleanup
  %14 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call12 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
  store i1 true, i1* %retval, align 1
  br label %return

if.else:                                          ; preds = %entry
  %15 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call13 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %15, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.66, i64 0, i64 0))
  store i1 false, i1* %retval, align 1
  br label %return

return:                                           ; preds = %if.else, %for.end
  %16 = load i1, i1* %retval, align 1
  ret i1 %16
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZNK5adept5Stack10print_gapsERSo(%"class.adept::Stack"* nonnull dereferenceable(149) %this, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os) #0 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %os.addr = alloca %"class.std::basic_ostream"*, align 8
  %it = alloca %"struct.std::_List_const_iterator", align 8
  %ref.tmp = alloca %"struct.std::_List_const_iterator", align 8
  %coerce = alloca %"struct.std::_List_const_iterator", align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store %"class.std::basic_ostream"* %os, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast %"struct.std::_List_const_iterator"* %it to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call = call %"struct.std::__detail::_List_node_base"* @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %it, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = bitcast %"struct.std::_List_const_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %gap_list_2 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call3 = call %"struct.std::__detail::_List_node_base"* @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_2) #9
  %coerce.dive4 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %ref.tmp, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call3, %"struct.std::__detail::_List_node_base"** %coerce.dive4, align 8
  %call5 = call zeroext i1 @_ZStneRKSt20_List_const_iteratorIN5adept3GapEES4_(%"struct.std::_List_const_iterator"* nonnull align 8 dereferenceable(8) %it, %"struct.std::_List_const_iterator"* nonnull align 8 dereferenceable(8) %ref.tmp) #9
  %2 = bitcast %"struct.std::_List_const_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #9
  br i1 %call5, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %3 = bitcast %"struct.std::_List_const_iterator"* %it to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call6 = call %"struct.adept::Gap"* @_ZNKSt20_List_const_iteratorIN5adept3GapEEptEv(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %it) #9
  %start = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call6, i32 0, i32 0
  %5 = load i32, i32* %start, align 4, !tbaa !144
  %call7 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %4, i32 %5)
  %call8 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.67, i64 0, i64 0))
  %call9 = call %"struct.adept::Gap"* @_ZNKSt20_List_const_iteratorIN5adept3GapEEptEv(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %it) #9
  %end = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %call9, i32 0, i32 1
  %6 = load i32, i32* %end, align 4, !tbaa !142
  %call10 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call8, i32 %6)
  %call11 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0))
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %call12 = call %"struct.std::__detail::_List_node_base"* @_ZNSt20_List_const_iteratorIN5adept3GapEEppEi(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %it, i32 0) #9
  %coerce.dive13 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %coerce, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call12, %"struct.std::__detail::_List_node_base"** %coerce.dive13, align 8
  br label %for.cond, !llvm.loop !160

for.end:                                          ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.std::__detail::_List_node_base"* @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %retval = alloca %"struct.std::_List_const_iterator", align 8
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %0, i32 0, i32 0
  %_M_node = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl, i32 0, i32 0
  %1 = bitcast %"struct.std::__detail::_List_node_header"* %_M_node to %"struct.std::__detail::_List_node_base"*
  %_M_next = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %1, i32 0, i32 0
  %2 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next, align 8, !tbaa !149
  call void @_ZNSt20_List_const_iteratorIN5adept3GapEEC2EPKNSt8__detail15_List_node_baseE(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %retval, %"struct.std::__detail::_List_node_base"* %2) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %retval, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  ret %"struct.std::__detail::_List_node_base"* %3
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZStneRKSt20_List_const_iteratorIN5adept3GapEES4_(%"struct.std::_List_const_iterator"* nonnull align 8 dereferenceable(8) %__x, %"struct.std::_List_const_iterator"* nonnull align 8 dereferenceable(8) %__y) #8 comdat {
entry:
  %__x.addr = alloca %"struct.std::_List_const_iterator"*, align 8
  %__y.addr = alloca %"struct.std::_List_const_iterator"*, align 8
  store %"struct.std::_List_const_iterator"* %__x, %"struct.std::_List_const_iterator"** %__x.addr, align 8, !tbaa !2
  store %"struct.std::_List_const_iterator"* %__y, %"struct.std::_List_const_iterator"** %__y.addr, align 8, !tbaa !2
  %0 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %__x.addr, align 8, !tbaa !2
  %_M_node = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %0, i32 0, i32 0
  %1 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !152
  %2 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %__y.addr, align 8, !tbaa !2
  %_M_node1 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %2, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node1, align 8, !tbaa !152
  %cmp = icmp ne %"struct.std::__detail::_List_node_base"* %1, %3
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.std::__detail::_List_node_base"* @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %retval = alloca %"struct.std::_List_const_iterator", align 8
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %0, i32 0, i32 0
  %_M_node = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl, i32 0, i32 0
  %1 = bitcast %"struct.std::__detail::_List_node_header"* %_M_node to %"struct.std::__detail::_List_node_base"*
  call void @_ZNSt20_List_const_iteratorIN5adept3GapEEC2EPKNSt8__detail15_List_node_baseE(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %retval, %"struct.std::__detail::_List_node_base"* %1) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %retval, i32 0, i32 0
  %2 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  ret %"struct.std::__detail::_List_node_base"* %2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Gap"* @_ZNKSt20_List_const_iteratorIN5adept3GapEEptEv(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %this) #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_List_const_iterator"*, align 8
  store %"struct.std::_List_const_iterator"* %this, %"struct.std::_List_const_iterator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !152
  %1 = bitcast %"struct.std::__detail::_List_node_base"* %0 to %"struct.std::_List_node"*
  %call = invoke %"struct.adept::Gap"* @_ZNKSt10_List_nodeIN5adept3GapEE9_M_valptrEv(%"struct.std::_List_node"* nonnull dereferenceable(24) %1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret %"struct.adept::Gap"* %call

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #29
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.std::__detail::_List_node_base"* @_ZNSt20_List_const_iteratorIN5adept3GapEEppEi(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %this, i32 %0) #8 comdat align 2 {
entry:
  %retval = alloca %"struct.std::_List_const_iterator", align 8
  %this.addr = alloca %"struct.std::_List_const_iterator"*, align 8
  %.addr = alloca i32, align 4
  store %"struct.std::_List_const_iterator"* %this, %"struct.std::_List_const_iterator"** %this.addr, align 8, !tbaa !2
  store i32 %0, i32* %.addr, align 4, !tbaa !20
  %this1 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %this.addr, align 8
  %1 = bitcast %"struct.std::_List_const_iterator"* %retval to i8*
  %2 = bitcast %"struct.std::_List_const_iterator"* %this1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false), !tbaa.struct !145
  %_M_node = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %this1, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !152
  %_M_next = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %3, i32 0, i32 0
  %4 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next, align 8, !tbaa !149
  %_M_node2 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %this1, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %4, %"struct.std::__detail::_List_node_base"** %_M_node2, align 8, !tbaa !152
  %coerce.dive = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %retval, i32 0, i32 0
  %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  ret %"struct.std::__detail::_List_node_base"* %5
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack20initialize_gradientsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #0 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %i = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %0 = load i32, i32* %max_gradient_, align 8, !tbaa !148
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end15

if.then:                                          ; preds = %entry
  %n_allocated_gradients_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 7
  %1 = load i32, i32* %n_allocated_gradients_, align 4, !tbaa !161
  %max_gradient_2 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %2 = load i32, i32* %max_gradient_2, align 8, !tbaa !148
  %cmp3 = icmp slt i32 %1, %2
  br i1 %cmp3, label %if.then4, label %if.end11

if.then4:                                         ; preds = %if.then
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %3 = load double*, double** %gradient_, align 8, !tbaa !124
  %tobool = icmp ne double* %3, null
  br i1 %tobool, label %if.then5, label %if.end

if.then5:                                         ; preds = %if.then4
  %gradient_6 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %4 = load double*, double** %gradient_6, align 8, !tbaa !124
  %isnull = icmp eq double* %4, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then5
  %5 = bitcast double* %4 to i8*
  call void @_ZdaPv(i8* %5) #32
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then5
  br label %if.end

if.end:                                           ; preds = %delete.end, %if.then4
  %max_gradient_7 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %6 = load i32, i32* %max_gradient_7, align 8, !tbaa !148
  %conv = sext i32 %6 to i64
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 8)
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  %10 = select i1 %8, i64 -1, i64 %9
  %call = call noalias nonnull i8* @_Znam(i64 %10) #33
  %11 = bitcast i8* %call to double*
  %gradient_8 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  store double* %11, double** %gradient_8, align 8, !tbaa !124
  %max_gradient_9 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %12 = load i32, i32* %max_gradient_9, align 8, !tbaa !148
  %n_allocated_gradients_10 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 7
  store i32 %12, i32* %n_allocated_gradients_10, align 4, !tbaa !161
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %13 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end11
  %14 = load i32, i32* %i, align 4, !tbaa !20
  %max_gradient_12 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %15 = load i32, i32* %max_gradient_12, align 8, !tbaa !148
  %cmp13 = icmp slt i32 %14, %15
  br i1 %cmp13, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %16 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %16) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %gradient_14 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %17 = load double*, double** %gradient_14, align 8, !tbaa !124
  %18 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %18 to i64
  %arrayidx = getelementptr inbounds double, double* %17, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !162

for.end:                                          ; preds = %for.cond.cleanup
  br label %if.end15

if.end15:                                         ; preds = %for.end, %entry
  %gradients_initialized_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 10
  store i8 1, i8* %gradients_initialized_, align 8, !tbaa !138
  ret void
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #16

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znam(i64) #19

; Function Attrs: uwtable mustprogress
define dso_local void @_ZNK5adept5Stack12print_statusERSo(%"class.adept::Stack"* nonnull dereferenceable(149) %this, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %os) #0 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %os.addr = alloca %"class.std::basic_ostream"*, align 8
  %i = alloca i64, align 8
  %i94 = alloca i64, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store %"class.std::basic_ostream"* %os, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.68, i64 0, i64 0))
  %1 = bitcast %"class.adept::Stack"* %this1 to i8*
  %call2 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEPKv(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call, i8* %1)
  %call3 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.69, i64 0, i64 0))
  %is_thread_unsafe_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 11
  %2 = load i8, i8* %is_thread_unsafe_, align 1, !tbaa !119, !range !27
  %tobool = trunc i8 %2 to i1
  br i1 %tobool, label %if.else, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %cmp = icmp eq %"class.adept::Stack"* %3, %this1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %4 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call4 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.70, i64 0, i64 0))
  br label %if.end13

if.else:                                          ; preds = %land.lhs.true, %entry
  %is_thread_unsafe_5 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 11
  %5 = load i8, i8* %is_thread_unsafe_5, align 1, !tbaa !119, !range !27
  %tobool6 = trunc i8 %5 to i1
  br i1 %tobool6, label %land.lhs.true7, label %if.else11

land.lhs.true7:                                   ; preds = %if.else
  %6 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept28_stack_current_thread_unsafeE, align 8, !tbaa !2
  %cmp8 = icmp eq %"class.adept::Stack"* %6, %this1
  br i1 %cmp8, label %if.then9, label %if.else11

if.then9:                                         ; preds = %land.lhs.true7
  %7 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call10 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %7, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.71, i64 0, i64 0))
  br label %if.end

if.else11:                                        ; preds = %land.lhs.true7, %if.else
  %8 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call12 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.72, i64 0, i64 0))
  br label %if.end

if.end:                                           ; preds = %if.else11, %if.then9
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then
  %9 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call14 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %9, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.73, i64 0, i64 0))
  %is_recording_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 12
  %10 = load i8, i8* %is_recording_, align 2, !tbaa !163, !range !27
  %tobool15 = trunc i8 %10 to i1
  br i1 %tobool15, label %if.then16, label %if.else18

if.then16:                                        ; preds = %if.end13
  %11 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call17 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.74, i64 0, i64 0))
  br label %if.end20

if.else18:                                        ; preds = %if.end13
  %12 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call19 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %12, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0))
  br label %if.end20

if.end20:                                         ; preds = %if.else18, %if.then16
  %13 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call21 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0))
  %call22 = call i32 @_ZNK5adept5Stack12n_statementsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %sub = sub nsw i32 %call22, 1
  %call23 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call21, i32 %sub)
  %call24 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call23, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.77, i64 0, i64 0))
  %call25 = call i32 @_ZNK5adept5Stack22n_allocated_statementsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %call26 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call24, i32 %call25)
  %call27 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call26, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.78, i64 0, i64 0))
  %14 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call28 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0))
  %call29 = call i32 @_ZNK5adept5Stack12n_operationsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %call30 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call28, i32 %call29)
  %call31 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.80, i64 0, i64 0))
  %call32 = call i32 @_ZNK5adept5Stack22n_allocated_operationsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %call33 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call31, i32 %call32)
  %call34 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call33, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0))
  %15 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call35 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0))
  %call36 = call i32 @_ZNK5adept5Stack22n_gradients_registeredEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %call37 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call35, i32 %call36)
  %call38 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call37, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.82, i64 0, i64 0))
  %16 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call39 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i64 0, i64 0))
  %call40 = call i32 @_ZNK5adept5Stack13max_gradientsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %call41 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call39, i32 %call40)
  %call42 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call41, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.84, i64 0, i64 0))
  %call43 = call i32 @_ZNK5adept5Stack10i_gradientEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %call44 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call42, i32 %call43)
  %call45 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i64 0, i64 0))
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call46 = call zeroext i1 @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE5emptyEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_) #9
  br i1 %call46, label %if.then47, label %if.else49

if.then47:                                        ; preds = %if.end20
  %17 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call48 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %17, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.86, i64 0, i64 0))
  br label %if.end56

if.else49:                                        ; preds = %if.end20
  %18 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call50 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %18, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.87, i64 0, i64 0))
  %gap_list_51 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call52 = call i64 @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE4sizeEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_51) #9
  %call53 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEm(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call50, i64 %call52)
  %call54 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call53, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.88, i64 0, i64 0))
  %19 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  call void @_ZNK5adept5Stack10print_gapsERSo(%"class.adept::Stack"* nonnull dereferenceable(149) %this1, %"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %19)
  %20 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call55 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.85, i64 0, i64 0))
  br label %if.end56

if.end56:                                         ; preds = %if.else49, %if.then47
  %21 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call57 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %21, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.89, i64 0, i64 0))
  %call58 = call zeroext i1 @_ZNK5adept5Stack25gradients_are_initializedEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  br i1 %call58, label %if.then59, label %if.else67

if.then59:                                        ; preds = %if.end56
  %22 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call60 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i64 0, i64 0))
  %call61 = call i32 @_ZNK5adept5Stack13max_gradientsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %call62 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call60, i32 %call61)
  %call63 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call62, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.90, i64 0, i64 0))
  %call64 = call i32 @_ZNK5adept5Stack21n_allocated_gradientsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %call65 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call63, i32 %call64)
  %call66 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call65, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0))
  br label %if.end72

if.else67:                                        ; preds = %if.end56
  %23 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call68 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %23, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.91, i64 0, i64 0))
  %call69 = call i32 @_ZNK5adept5Stack21n_allocated_gradientsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %call70 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call68, i32 %call69)
  %call71 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call70, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i64 0, i64 0))
  br label %if.end72

if.end72:                                         ; preds = %if.else67, %if.then59
  %24 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call73 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.92, i64 0, i64 0))
  %call74 = call i32 @_ZNK5adept5Stack12n_dependentsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %call75 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call73, i32 %call74)
  %call76 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call75, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.93, i64 0, i64 0))
  %call77 = call i32 @_ZNK5adept5Stack14n_independentsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %call78 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call76, i32 %call77)
  %call79 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call78, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
  %call80 = call i32 @_ZNK5adept5Stack12n_dependentsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %cmp81 = icmp sle i32 %call80, 10
  br i1 %cmp81, label %land.lhs.true82, label %if.end108

land.lhs.true82:                                  ; preds = %if.end72
  %call83 = call i32 @_ZNK5adept5Stack14n_independentsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %cmp84 = icmp sle i32 %call83, 10
  br i1 %cmp84, label %if.then85, label %if.end108

if.then85:                                        ; preds = %land.lhs.true82
  %25 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call86 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %25, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.94, i64 0, i64 0))
  %26 = bitcast i64* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %26) #9
  store i64 0, i64* %i, align 8, !tbaa !13
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then85
  %27 = load i64, i64* %i, align 8, !tbaa !13
  %independent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  %call87 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_) #9
  %cmp88 = icmp ult i64 %27, %call87
  br i1 %cmp88, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %28 = bitcast i64* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %29 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call89 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0))
  %independent_index_90 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  %30 = load i64, i64* %i, align 8, !tbaa !13
  %call91 = call nonnull align 4 dereferenceable(4) i32* @_ZNKSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_90, i64 %30) #9
  %31 = load i32, i32* %call91, align 4, !tbaa !20
  %call92 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call89, i32 %31)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %32 = load i64, i64* %i, align 8, !tbaa !13
  %inc = add i64 %32, 1
  store i64 %inc, i64* %i, align 8, !tbaa !13
  br label %for.cond, !llvm.loop !164

for.end:                                          ; preds = %for.cond.cleanup
  %33 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call93 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %33, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.95, i64 0, i64 0))
  %34 = bitcast i64* %i94 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #9
  store i64 0, i64* %i94, align 8, !tbaa !13
  br label %for.cond95

for.cond95:                                       ; preds = %for.inc104, %for.end
  %35 = load i64, i64* %i94, align 8, !tbaa !13
  %dependent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  %call96 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_) #9
  %cmp97 = icmp ult i64 %35, %call96
  br i1 %cmp97, label %for.body99, label %for.cond.cleanup98

for.cond.cleanup98:                               ; preds = %for.cond95
  %36 = bitcast i64* %i94 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #9
  br label %for.end106

for.body99:                                       ; preds = %for.cond95
  %37 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call100 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %37, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.51, i64 0, i64 0))
  %dependent_index_101 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  %38 = load i64, i64* %i94, align 8, !tbaa !13
  %call102 = call nonnull align 4 dereferenceable(4) i32* @_ZNKSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_101, i64 %38) #9
  %39 = load i32, i32* %call102, align 4, !tbaa !20
  %call103 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call100, i32 %39)
  br label %for.inc104

for.inc104:                                       ; preds = %for.body99
  %40 = load i64, i64* %i94, align 8, !tbaa !13
  %inc105 = add i64 %40, 1
  store i64 %inc105, i64* %i94, align 8, !tbaa !13
  br label %for.cond95, !llvm.loop !165

for.end106:                                       ; preds = %for.cond.cleanup98
  %41 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call107 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %41, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
  br label %if.end108

if.end108:                                        ; preds = %for.end106, %land.lhs.true82, %if.end72
  %42 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %os.addr, align 8, !tbaa !2
  %call109 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %42, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.96, i64 0, i64 0))
  ret void
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEPKv(%"class.std::basic_ostream"* nonnull dereferenceable(8) %this, i8* %__p) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_ostream"*, align 8
  %__p.addr = alloca i8*, align 8
  store %"class.std::basic_ostream"* %this, %"class.std::basic_ostream"** %this.addr, align 8, !tbaa !2
  store i8* %__p, i8** %__p.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %this.addr, align 8
  %0 = load i8*, i8** %__p.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIPKvEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8) %this1, i8* %0)
  ret %"class.std::basic_ostream"* %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5Stack12n_statementsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i32 0, i32 3
  %1 = load i32, i32* %n_statements_, align 8, !tbaa !132
  ret i32 %1
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5Stack22n_allocated_statementsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %n_allocated_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i32 0, i32 4
  %1 = load i32, i32* %n_allocated_statements_, align 4, !tbaa !166
  ret i32 %1
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5Stack12n_operationsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %n_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i32 0, i32 5
  %1 = load i32, i32* %n_operations_, align 8, !tbaa !167
  ret i32 %1
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5Stack22n_allocated_operationsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %n_allocated_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %0, i32 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_, align 4, !tbaa !168
  ret i32 %1
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5Stack22n_gradients_registeredEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %n_gradients_registered_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 9
  %0 = load i32, i32* %n_gradients_registered_, align 4, !tbaa !141
  ret i32 %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5Stack13max_gradientsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %0 = load i32, i32* %max_gradient_, align 8, !tbaa !148
  ret i32 %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5Stack10i_gradientEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %0 = load i32, i32* %i_gradient_, align 8, !tbaa !147
  ret i32 %0
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEm(%"class.std::basic_ostream"* nonnull dereferenceable(8) %this, i64 %__n) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_ostream"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::basic_ostream"* %this, %"class.std::basic_ostream"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8) %this1, i64 %0)
  ret %"class.std::basic_ostream"* %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE4sizeEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this) #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %call = invoke i64 @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE13_M_node_countEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret i64 %call

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null
  %1 = extractvalue { i8*, i32 } %0, 0
  call void @__clang_call_terminate(i8* %1) #29
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5Stack21n_allocated_gradientsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %n_allocated_gradients_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 7
  %0 = load i32, i32* %n_allocated_gradients_, align 4, !tbaa !161
  ret i32 %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5Stack12n_dependentsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %dependent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  %call = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_) #9
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5Stack14n_independentsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %independent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  %call = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_) #9
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %1, i32 0, i32 1
  %2 = load i32*, i32** %_M_finish, align 8, !tbaa !127
  %3 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %4, i32 0, i32 0
  %5 = load i32*, i32** %_M_start, align 8, !tbaa !125
  %sub.ptr.lhs.cast = ptrtoint i32* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  ret i64 %sub.ptr.div
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 4 dereferenceable(4) i32* @_ZNKSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %this, i64 %__n) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load i32*, i32** %_M_start, align 8, !tbaa !125
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds i32, i32* %2, i64 %3
  ret i32* %add.ptr
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this, i32 %min) #0 align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::StackStorageOrig"*, align 8
  %min.addr = alloca i32, align 4
  %new_size = alloca i32, align 4
  %new_multiplier = alloca double*, align 8
  %new_index = alloca i32*, align 8
  store %"class.adept::internal::StackStorageOrig"* %this, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8, !tbaa !2
  store i32 %min, i32* %min.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8
  %0 = bitcast i32* %new_size to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %n_allocated_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 6
  %1 = load i32, i32* %n_allocated_operations_, align 4, !tbaa !168
  %mul = mul nsw i32 2, %1
  store i32 %mul, i32* %new_size, align 4, !tbaa !20
  %2 = load i32, i32* %min.addr, align 4, !tbaa !20
  %cmp = icmp sgt i32 %2, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %new_size, align 4, !tbaa !20
  %n_allocated_operations_2 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 6
  %4 = load i32, i32* %n_allocated_operations_2, align 4, !tbaa !168
  %5 = load i32, i32* %min.addr, align 4, !tbaa !20
  %add = add nsw i32 %4, %5
  %cmp3 = icmp slt i32 %3, %add
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, i32* %min.addr, align 4, !tbaa !20
  %7 = load i32, i32* %new_size, align 4, !tbaa !20
  %add4 = add nsw i32 %7, %6
  store i32 %add4, i32* %new_size, align 4, !tbaa !20
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = bitcast double** %new_multiplier to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #9
  %9 = load i32, i32* %new_size, align 4, !tbaa !20
  %conv = sext i32 %9 to i64
  %10 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 8)
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = select i1 %11, i64 -1, i64 %12
  %call = call noalias nonnull i8* @_Znam(i64 %13) #33
  %14 = bitcast i8* %call to double*
  store double* %14, double** %new_multiplier, align 8, !tbaa !2
  %15 = bitcast i32** %new_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #9
  %16 = load i32, i32* %new_size, align 4, !tbaa !20
  %conv5 = sext i32 %16 to i64
  %17 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv5, i64 4)
  %18 = extractvalue { i64, i1 } %17, 1
  %19 = extractvalue { i64, i1 } %17, 0
  %20 = select i1 %18, i64 -1, i64 %19
  %call6 = call noalias nonnull i8* @_Znam(i64 %20) #33
  %21 = bitcast i8* %call6 to i32*
  store i32* %21, i32** %new_index, align 8, !tbaa !2
  %22 = load double*, double** %new_multiplier, align 8, !tbaa !2
  %23 = bitcast double* %22 to i8*
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 1
  %24 = load double*, double** %multiplier_, align 8, !tbaa !130
  %25 = bitcast double* %24 to i8*
  %n_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 5
  %26 = load i32, i32* %n_operations_, align 8, !tbaa !167
  %conv7 = sext i32 %26 to i64
  %mul8 = mul i64 %conv7, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %25, i64 %mul8, i1 false)
  %27 = load i32*, i32** %new_index, align 8, !tbaa !2
  %28 = bitcast i32* %27 to i8*
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 2
  %29 = load i32*, i32** %index_, align 8, !tbaa !131
  %30 = bitcast i32* %29 to i8*
  %n_operations_9 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 5
  %31 = load i32, i32* %n_operations_9, align 8, !tbaa !167
  %conv10 = sext i32 %31 to i64
  %mul11 = mul i64 %conv10, 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %30, i64 %mul11, i1 false)
  %multiplier_12 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 1
  %32 = load double*, double** %multiplier_12, align 8, !tbaa !130
  %isnull = icmp eq double* %32, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.end
  %33 = bitcast double* %32 to i8*
  call void @_ZdaPv(i8* %33) #32
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.end
  %index_13 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 2
  %34 = load i32*, i32** %index_13, align 8, !tbaa !131
  %isnull14 = icmp eq i32* %34, null
  br i1 %isnull14, label %delete.end16, label %delete.notnull15

delete.notnull15:                                 ; preds = %delete.end
  %35 = bitcast i32* %34 to i8*
  call void @_ZdaPv(i8* %35) #32
  br label %delete.end16

delete.end16:                                     ; preds = %delete.notnull15, %delete.end
  %36 = load double*, double** %new_multiplier, align 8, !tbaa !2
  %multiplier_17 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 1
  store double* %36, double** %multiplier_17, align 8, !tbaa !130
  %37 = load i32*, i32** %new_index, align 8, !tbaa !2
  %index_18 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 2
  store i32* %37, i32** %index_18, align 8, !tbaa !131
  %38 = load i32, i32* %new_size, align 4, !tbaa !20
  %n_allocated_operations_19 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 6
  store i32 %38, i32* %n_allocated_operations_19, align 4, !tbaa !168
  %39 = bitcast i32** %new_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #9
  %40 = bitcast double** %new_multiplier to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #9
  %41 = bitcast i32* %new_size to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %41) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this, i32 %min) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::internal::StackStorageOrig"*, align 8
  %min.addr = alloca i32, align 4
  %new_size = alloca i32, align 4
  %new_statement = alloca %"struct.adept::internal::Statement"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.adept::internal::StackStorageOrig"* %this, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8, !tbaa !2
  store i32 %min, i32* %min.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8
  %0 = bitcast i32* %new_size to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %n_allocated_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 4
  %1 = load i32, i32* %n_allocated_statements_, align 4, !tbaa !166
  %mul = mul nsw i32 2, %1
  store i32 %mul, i32* %new_size, align 4, !tbaa !20
  %2 = load i32, i32* %min.addr, align 4, !tbaa !20
  %cmp = icmp sgt i32 %2, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %new_size, align 4, !tbaa !20
  %n_allocated_statements_2 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 4
  %4 = load i32, i32* %n_allocated_statements_2, align 4, !tbaa !166
  %5 = load i32, i32* %min.addr, align 4, !tbaa !20
  %add = add nsw i32 %4, %5
  %cmp3 = icmp slt i32 %3, %add
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %6 = load i32, i32* %min.addr, align 4, !tbaa !20
  %7 = load i32, i32* %new_size, align 4, !tbaa !20
  %add4 = add nsw i32 %7, %6
  store i32 %add4, i32* %new_size, align 4, !tbaa !20
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = bitcast %"struct.adept::internal::Statement"** %new_statement to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #9
  %9 = load i32, i32* %new_size, align 4, !tbaa !20
  %conv = sext i32 %9 to i64
  %10 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 8)
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = select i1 %11, i64 -1, i64 %12
  %call = call noalias nonnull i8* @_Znam(i64 %13) #33
  %14 = bitcast i8* %call to %"struct.adept::internal::Statement"*
  %isempty = icmp eq i64 %conv, 0
  br i1 %isempty, label %arrayctor.cont, label %new.ctorloop

new.ctorloop:                                     ; preds = %if.end
  %arrayctor.end = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %14, i64 %conv
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %invoke.cont, %new.ctorloop
  %arrayctor.cur = phi %"struct.adept::internal::Statement"* [ %14, %new.ctorloop ], [ %arrayctor.next, %invoke.cont ]
  invoke void @_ZN5adept8internal9StatementC2Ev(%"struct.adept::internal::Statement"* nonnull dereferenceable(8) %arrayctor.cur)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %arrayctor.loop
  %arrayctor.next = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %"struct.adept::internal::Statement"* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %invoke.cont, %if.end
  store %"struct.adept::internal::Statement"* %14, %"struct.adept::internal::Statement"** %new_statement, align 8, !tbaa !2
  %15 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %new_statement, align 8, !tbaa !2
  %16 = bitcast %"struct.adept::internal::Statement"* %15 to i8*
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 0
  %17 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !128
  %18 = bitcast %"struct.adept::internal::Statement"* %17 to i8*
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 3
  %19 = load i32, i32* %n_statements_, align 8, !tbaa !132
  %conv5 = sext i32 %19 to i64
  %mul6 = mul i64 %conv5, 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 4 %18, i64 %mul6, i1 false)
  %statement_7 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 0
  %20 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_7, align 8, !tbaa !128
  %isnull = icmp eq %"struct.adept::internal::Statement"* %20, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %arrayctor.cont
  %21 = bitcast %"struct.adept::internal::Statement"* %20 to i8*
  call void @_ZdaPv(i8* %21) #32
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %arrayctor.cont
  %22 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %new_statement, align 8, !tbaa !2
  %statement_8 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 0
  store %"struct.adept::internal::Statement"* %22, %"struct.adept::internal::Statement"** %statement_8, align 8, !tbaa !128
  %23 = load i32, i32* %new_size, align 4, !tbaa !20
  %n_allocated_statements_9 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 4
  store i32 %23, i32* %n_allocated_statements_9, align 4, !tbaa !166
  %24 = bitcast %"struct.adept::internal::Statement"** %new_statement to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #9
  %25 = bitcast i32* %new_size to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %25) #9
  ret void

lpad:                                             ; preds = %arrayctor.loop
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %exn.slot, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %ehselector.slot, align 4
  call void @_ZdaPv(i8* %call) #32
  %29 = bitcast %"struct.adept::internal::Statement"** %new_statement to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %29) #9
  %30 = bitcast i32* %new_size to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %30) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val10 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val10
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal9StatementC2Ev(%"struct.adept::internal::Statement"* nonnull dereferenceable(8) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Statement"*, align 8
  store %"struct.adept::internal::Statement"* %this, %"struct.adept::internal::Statement"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %this.addr, align 8
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal12cppblas_gemmEbcciiidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %TransA, i8 signext %TransB, i32 %M, i32 %N, i32 %K, double %alpha, double* %A, i32 %lda, double* %B, i32 %ldb, double %beta, double* %C, i32 %ldc) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %Order.addr = alloca i8, align 1
  %TransA.addr = alloca i8, align 1
  %TransB.addr = alloca i8, align 1
  %M.addr = alloca i32, align 4
  %N.addr = alloca i32, align 4
  %K.addr = alloca i32, align 4
  %alpha.addr = alloca double, align 8
  %A.addr = alloca double*, align 8
  %lda.addr = alloca i32, align 4
  %B.addr = alloca double*, align 8
  %ldb.addr = alloca i32, align 4
  %beta.addr = alloca double, align 8
  %C.addr = alloca double*, align 8
  %ldc.addr = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %frombool = zext i1 %Order to i8
  store i8 %frombool, i8* %Order.addr, align 1, !tbaa !18
  store i8 %TransA, i8* %TransA.addr, align 1, !tbaa !14
  store i8 %TransB, i8* %TransB.addr, align 1, !tbaa !14
  store i32 %M, i32* %M.addr, align 4, !tbaa !20
  store i32 %N, i32* %N.addr, align 4, !tbaa !20
  store i32 %K, i32* %K.addr, align 4, !tbaa !20
  store double %alpha, double* %alpha.addr, align 8, !tbaa !44
  store double* %A, double** %A.addr, align 8, !tbaa !2
  store i32 %lda, i32* %lda.addr, align 4, !tbaa !20
  store double* %B, double** %B.addr, align 8, !tbaa !2
  store i32 %ldb, i32* %ldb.addr, align 4, !tbaa !20
  store double %beta, double* %beta.addr, align 8, !tbaa !44
  store double* %C, double** %C.addr, align 8, !tbaa !2
  store i32 %ldc, i32* %ldc.addr, align 4, !tbaa !20
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.97, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::feature_not_available"*, align 8
  %message.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.adept::feature_not_available"* %this, %"class.adept::feature_not_available"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %message, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::feature_not_available"*, %"class.adept::feature_not_available"** %this.addr, align 8
  %0 = bitcast %"class.adept::feature_not_available"* %this1 to %"class.adept::exception"*
  call void @_ZN5adept9exceptionC2Ev(%"class.adept::exception"* nonnull dereferenceable(40) %0) #9
  %1 = bitcast %"class.adept::feature_not_available"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21feature_not_availableE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !53
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %3 = bitcast %"class.adept::feature_not_available"* %this1 to %"class.adept::exception"*
  %message_ = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %3, i32 0, i32 1
  %call = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  %7 = bitcast %"class.adept::feature_not_available"* %this1 to %"class.adept::exception"*
  call void @_ZN5adept9exceptionD2Ev(%"class.adept::exception"* nonnull dereferenceable(40) %7) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept9exceptionD2Ev(%"class.adept::exception"* nonnull dereferenceable(40) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::exception"*, align 8
  store %"class.adept::exception"* %this, %"class.adept::exception"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::exception"*, %"class.adept::exception"** %this.addr, align 8
  %0 = bitcast %"class.adept::exception"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !53
  %message_ = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this1, i32 0, i32 1
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_) #9
  %1 = bitcast %"class.adept::exception"* %this1 to %"class.std::exception"*
  call void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8) %1) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal12cppblas_gemmEbcciiifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %TransA, i8 signext %TransB, i32 %M, i32 %N, i32 %K, float %alpha, float* %A, i32 %lda, float* %B, i32 %ldb, float %beta, float* %C, i32 %ldc) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %Order.addr = alloca i8, align 1
  %TransA.addr = alloca i8, align 1
  %TransB.addr = alloca i8, align 1
  %M.addr = alloca i32, align 4
  %N.addr = alloca i32, align 4
  %K.addr = alloca i32, align 4
  %alpha.addr = alloca float, align 4
  %A.addr = alloca float*, align 8
  %lda.addr = alloca i32, align 4
  %B.addr = alloca float*, align 8
  %ldb.addr = alloca i32, align 4
  %beta.addr = alloca float, align 4
  %C.addr = alloca float*, align 8
  %ldc.addr = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %frombool = zext i1 %Order to i8
  store i8 %frombool, i8* %Order.addr, align 1, !tbaa !18
  store i8 %TransA, i8* %TransA.addr, align 1, !tbaa !14
  store i8 %TransB, i8* %TransB.addr, align 1, !tbaa !14
  store i32 %M, i32* %M.addr, align 4, !tbaa !20
  store i32 %N, i32* %N.addr, align 4, !tbaa !20
  store i32 %K, i32* %K.addr, align 4, !tbaa !20
  store float %alpha, float* %alpha.addr, align 4, !tbaa !83
  store float* %A, float** %A.addr, align 8, !tbaa !2
  store i32 %lda, i32* %lda.addr, align 4, !tbaa !20
  store float* %B, float** %B.addr, align 8, !tbaa !2
  store i32 %ldb, i32* %ldb.addr, align 4, !tbaa !20
  store float %beta, float* %beta.addr, align 4, !tbaa !83
  store float* %C, float** %C.addr, align 8, !tbaa !2
  store i32 %ldc, i32* %ldc.addr, align 4, !tbaa !20
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.97, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal12cppblas_gemvEbciidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %TransA, i32 %M, i32 %N, double %alpha, double* %A, i32 %lda, double* %X, i32 %incX, double %beta, double* %Y, i32 %incY) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %Order.addr = alloca i8, align 1
  %TransA.addr = alloca i8, align 1
  %M.addr = alloca i32, align 4
  %N.addr = alloca i32, align 4
  %alpha.addr = alloca double, align 8
  %A.addr = alloca double*, align 8
  %lda.addr = alloca i32, align 4
  %X.addr = alloca double*, align 8
  %incX.addr = alloca i32, align 4
  %beta.addr = alloca double, align 8
  %Y.addr = alloca double*, align 8
  %incY.addr = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %frombool = zext i1 %Order to i8
  store i8 %frombool, i8* %Order.addr, align 1, !tbaa !18
  store i8 %TransA, i8* %TransA.addr, align 1, !tbaa !14
  store i32 %M, i32* %M.addr, align 4, !tbaa !20
  store i32 %N, i32* %N.addr, align 4, !tbaa !20
  store double %alpha, double* %alpha.addr, align 8, !tbaa !44
  store double* %A, double** %A.addr, align 8, !tbaa !2
  store i32 %lda, i32* %lda.addr, align 4, !tbaa !20
  store double* %X, double** %X.addr, align 8, !tbaa !2
  store i32 %incX, i32* %incX.addr, align 4, !tbaa !20
  store double %beta, double* %beta.addr, align 8, !tbaa !44
  store double* %Y, double** %Y.addr, align 8, !tbaa !2
  store i32 %incY, i32* %incY.addr, align 4, !tbaa !20
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.98, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal12cppblas_gemvEbciifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %TransA, i32 %M, i32 %N, float %alpha, float* %A, i32 %lda, float* %X, i32 %incX, float %beta, float* %Y, i32 %incY) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %Order.addr = alloca i8, align 1
  %TransA.addr = alloca i8, align 1
  %M.addr = alloca i32, align 4
  %N.addr = alloca i32, align 4
  %alpha.addr = alloca float, align 4
  %A.addr = alloca float*, align 8
  %lda.addr = alloca i32, align 4
  %X.addr = alloca float*, align 8
  %incX.addr = alloca i32, align 4
  %beta.addr = alloca float, align 4
  %Y.addr = alloca float*, align 8
  %incY.addr = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %frombool = zext i1 %Order to i8
  store i8 %frombool, i8* %Order.addr, align 1, !tbaa !18
  store i8 %TransA, i8* %TransA.addr, align 1, !tbaa !14
  store i32 %M, i32* %M.addr, align 4, !tbaa !20
  store i32 %N, i32* %N.addr, align 4, !tbaa !20
  store float %alpha, float* %alpha.addr, align 4, !tbaa !83
  store float* %A, float** %A.addr, align 8, !tbaa !2
  store i32 %lda, i32* %lda.addr, align 4, !tbaa !20
  store float* %X, float** %X.addr, align 8, !tbaa !2
  store i32 %incX, i32* %incX.addr, align 4, !tbaa !20
  store float %beta, float* %beta.addr, align 4, !tbaa !83
  store float* %Y, float** %Y.addr, align 8, !tbaa !2
  store i32 %incY, i32* %incY.addr, align 4, !tbaa !20
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.98, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal12cppblas_symmEbcciidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %Side, i8 signext %Uplo, i32 %M, i32 %N, double %alpha, double* %A, i32 %lda, double* %B, i32 %ldb, double %beta, double* %C, i32 %ldc) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %Order.addr = alloca i8, align 1
  %Side.addr = alloca i8, align 1
  %Uplo.addr = alloca i8, align 1
  %M.addr = alloca i32, align 4
  %N.addr = alloca i32, align 4
  %alpha.addr = alloca double, align 8
  %A.addr = alloca double*, align 8
  %lda.addr = alloca i32, align 4
  %B.addr = alloca double*, align 8
  %ldb.addr = alloca i32, align 4
  %beta.addr = alloca double, align 8
  %C.addr = alloca double*, align 8
  %ldc.addr = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %frombool = zext i1 %Order to i8
  store i8 %frombool, i8* %Order.addr, align 1, !tbaa !18
  store i8 %Side, i8* %Side.addr, align 1, !tbaa !14
  store i8 %Uplo, i8* %Uplo.addr, align 1, !tbaa !14
  store i32 %M, i32* %M.addr, align 4, !tbaa !20
  store i32 %N, i32* %N.addr, align 4, !tbaa !20
  store double %alpha, double* %alpha.addr, align 8, !tbaa !44
  store double* %A, double** %A.addr, align 8, !tbaa !2
  store i32 %lda, i32* %lda.addr, align 4, !tbaa !20
  store double* %B, double** %B.addr, align 8, !tbaa !2
  store i32 %ldb, i32* %ldb.addr, align 4, !tbaa !20
  store double %beta, double* %beta.addr, align 8, !tbaa !44
  store double* %C, double** %C.addr, align 8, !tbaa !2
  store i32 %ldc, i32* %ldc.addr, align 4, !tbaa !20
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.99, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal12cppblas_symmEbcciifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %Side, i8 signext %Uplo, i32 %M, i32 %N, float %alpha, float* %A, i32 %lda, float* %B, i32 %ldb, float %beta, float* %C, i32 %ldc) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %Order.addr = alloca i8, align 1
  %Side.addr = alloca i8, align 1
  %Uplo.addr = alloca i8, align 1
  %M.addr = alloca i32, align 4
  %N.addr = alloca i32, align 4
  %alpha.addr = alloca float, align 4
  %A.addr = alloca float*, align 8
  %lda.addr = alloca i32, align 4
  %B.addr = alloca float*, align 8
  %ldb.addr = alloca i32, align 4
  %beta.addr = alloca float, align 4
  %C.addr = alloca float*, align 8
  %ldc.addr = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %frombool = zext i1 %Order to i8
  store i8 %frombool, i8* %Order.addr, align 1, !tbaa !18
  store i8 %Side, i8* %Side.addr, align 1, !tbaa !14
  store i8 %Uplo, i8* %Uplo.addr, align 1, !tbaa !14
  store i32 %M, i32* %M.addr, align 4, !tbaa !20
  store i32 %N, i32* %N.addr, align 4, !tbaa !20
  store float %alpha, float* %alpha.addr, align 4, !tbaa !83
  store float* %A, float** %A.addr, align 8, !tbaa !2
  store i32 %lda, i32* %lda.addr, align 4, !tbaa !20
  store float* %B, float** %B.addr, align 8, !tbaa !2
  store i32 %ldb, i32* %ldb.addr, align 4, !tbaa !20
  store float %beta, float* %beta.addr, align 4, !tbaa !83
  store float* %C, float** %C.addr, align 8, !tbaa !2
  store i32 %ldc, i32* %ldc.addr, align 4, !tbaa !20
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.99, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal12cppblas_symvEbcidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %Uplo, i32 %N, double %alpha, double* %A, i32 %lda, double* %X, i32 %incX, double %beta, double* %Y, i32 %incY) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %Order.addr = alloca i8, align 1
  %Uplo.addr = alloca i8, align 1
  %N.addr = alloca i32, align 4
  %alpha.addr = alloca double, align 8
  %A.addr = alloca double*, align 8
  %lda.addr = alloca i32, align 4
  %X.addr = alloca double*, align 8
  %incX.addr = alloca i32, align 4
  %beta.addr = alloca double, align 8
  %Y.addr = alloca double*, align 8
  %incY.addr = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %frombool = zext i1 %Order to i8
  store i8 %frombool, i8* %Order.addr, align 1, !tbaa !18
  store i8 %Uplo, i8* %Uplo.addr, align 1, !tbaa !14
  store i32 %N, i32* %N.addr, align 4, !tbaa !20
  store double %alpha, double* %alpha.addr, align 8, !tbaa !44
  store double* %A, double** %A.addr, align 8, !tbaa !2
  store i32 %lda, i32* %lda.addr, align 4, !tbaa !20
  store double* %X, double** %X.addr, align 8, !tbaa !2
  store i32 %incX, i32* %incX.addr, align 4, !tbaa !20
  store double %beta, double* %beta.addr, align 8, !tbaa !44
  store double* %Y, double** %Y.addr, align 8, !tbaa !2
  store i32 %incY, i32* %incY.addr, align 4, !tbaa !20
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.100, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal12cppblas_symvEbcifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %Uplo, i32 %N, float %alpha, float* %A, i32 %lda, float* %X, i32 %incX, float %beta, float* %Y, i32 %incY) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %Order.addr = alloca i8, align 1
  %Uplo.addr = alloca i8, align 1
  %N.addr = alloca i32, align 4
  %alpha.addr = alloca float, align 4
  %A.addr = alloca float*, align 8
  %lda.addr = alloca i32, align 4
  %X.addr = alloca float*, align 8
  %incX.addr = alloca i32, align 4
  %beta.addr = alloca float, align 4
  %Y.addr = alloca float*, align 8
  %incY.addr = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %frombool = zext i1 %Order to i8
  store i8 %frombool, i8* %Order.addr, align 1, !tbaa !18
  store i8 %Uplo, i8* %Uplo.addr, align 1, !tbaa !14
  store i32 %N, i32* %N.addr, align 4, !tbaa !20
  store float %alpha, float* %alpha.addr, align 4, !tbaa !83
  store float* %A, float** %A.addr, align 8, !tbaa !2
  store i32 %lda, i32* %lda.addr, align 4, !tbaa !20
  store float* %X, float** %X.addr, align 8, !tbaa !2
  store i32 %incX, i32* %incX.addr, align 4, !tbaa !20
  store float %beta, float* %beta.addr, align 4, !tbaa !83
  store float* %Y, float** %Y.addr, align 8, !tbaa !2
  store i32 %incY, i32* %incY.addr, align 4, !tbaa !20
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.100, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal12cppblas_gbmvEbciiiidPKdiS2_idPdi(i1 zeroext %Order, i8 signext %TransA, i32 %M, i32 %N, i32 %KL, i32 %KU, double %alpha, double* %A, i32 %lda, double* %X, i32 %incX, double %beta, double* %Y, i32 %incY) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %Order.addr = alloca i8, align 1
  %TransA.addr = alloca i8, align 1
  %M.addr = alloca i32, align 4
  %N.addr = alloca i32, align 4
  %KL.addr = alloca i32, align 4
  %KU.addr = alloca i32, align 4
  %alpha.addr = alloca double, align 8
  %A.addr = alloca double*, align 8
  %lda.addr = alloca i32, align 4
  %X.addr = alloca double*, align 8
  %incX.addr = alloca i32, align 4
  %beta.addr = alloca double, align 8
  %Y.addr = alloca double*, align 8
  %incY.addr = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %frombool = zext i1 %Order to i8
  store i8 %frombool, i8* %Order.addr, align 1, !tbaa !18
  store i8 %TransA, i8* %TransA.addr, align 1, !tbaa !14
  store i32 %M, i32* %M.addr, align 4, !tbaa !20
  store i32 %N, i32* %N.addr, align 4, !tbaa !20
  store i32 %KL, i32* %KL.addr, align 4, !tbaa !20
  store i32 %KU, i32* %KU.addr, align 4, !tbaa !20
  store double %alpha, double* %alpha.addr, align 8, !tbaa !44
  store double* %A, double** %A.addr, align 8, !tbaa !2
  store i32 %lda, i32* %lda.addr, align 4, !tbaa !20
  store double* %X, double** %X.addr, align 8, !tbaa !2
  store i32 %incX, i32* %incX.addr, align 4, !tbaa !20
  store double %beta, double* %beta.addr, align 8, !tbaa !44
  store double* %Y, double** %Y.addr, align 8, !tbaa !2
  store i32 %incY, i32* %incY.addr, align 4, !tbaa !20
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.101, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8internal12cppblas_gbmvEbciiiifPKfiS2_ifPfi(i1 zeroext %Order, i8 signext %TransA, i32 %M, i32 %N, i32 %KL, i32 %KU, float %alpha, float* %A, i32 %lda, float* %X, i32 %incX, float %beta, float* %Y, i32 %incY) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %Order.addr = alloca i8, align 1
  %TransA.addr = alloca i8, align 1
  %M.addr = alloca i32, align 4
  %N.addr = alloca i32, align 4
  %KL.addr = alloca i32, align 4
  %KU.addr = alloca i32, align 4
  %alpha.addr = alloca float, align 4
  %A.addr = alloca float*, align 8
  %lda.addr = alloca i32, align 4
  %X.addr = alloca float*, align 8
  %incX.addr = alloca i32, align 4
  %beta.addr = alloca float, align 4
  %Y.addr = alloca float*, align 8
  %incY.addr = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %frombool = zext i1 %Order to i8
  store i8 %frombool, i8* %Order.addr, align 1, !tbaa !18
  store i8 %TransA, i8* %TransA.addr, align 1, !tbaa !14
  store i32 %M, i32* %M.addr, align 4, !tbaa !20
  store i32 %N, i32* %N.addr, align 4, !tbaa !20
  store i32 %KL, i32* %KL.addr, align 4, !tbaa !20
  store i32 %KU, i32* %KU.addr, align 4, !tbaa !20
  store float %alpha, float* %alpha.addr, align 4, !tbaa !83
  store float* %A, float** %A.addr, align 8, !tbaa !2
  store i32 %lda, i32* %lda.addr, align 4, !tbaa !20
  store float* %X, float** %X.addr, align 8, !tbaa !2
  store i32 %incX, i32* %incX.addr, align 4, !tbaa !20
  store float %beta, float* %beta.addr, align 4, !tbaa !83
  store float* %Y, float** %Y.addr, align 8, !tbaa !2
  store i32 %incY, i32* %incY.addr, align 4, !tbaa !20
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.101, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept3invIfEENS_5ArrayILi2ET_Lb0EEERKS3_(%"class.adept::Array"* noalias sret(%"class.adept::Array") align 8 %agg.result, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %A) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::Array"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::Array"* %A, %"class.adept::Array"** %A.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept3invIfLNS_8internal21SymmMatrixOrientationE0EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_(%"class.adept::SpecialMatrix"* noalias sret(%"class.adept::SpecialMatrix") align 8 %agg.result, %"class.adept::SpecialMatrix"* nonnull align 8 dereferenceable(24) %A) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::SpecialMatrix"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::SpecialMatrix"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::SpecialMatrix"* %A, %"class.adept::SpecialMatrix"** %A.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept3invIfLNS_8internal21SymmMatrixOrientationE1EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_(%"class.adept::SpecialMatrix.19"* noalias sret(%"class.adept::SpecialMatrix.19") align 8 %agg.result, %"class.adept::SpecialMatrix.19"* nonnull align 8 dereferenceable(24) %A) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::SpecialMatrix.19"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::SpecialMatrix.19"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::SpecialMatrix.19"* %A, %"class.adept::SpecialMatrix.19"** %A.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept3invIdEENS_5ArrayILi2ET_Lb0EEERKS3_(%"class.adept::Array.22"* noalias sret(%"class.adept::Array.22") align 8 %agg.result, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %A) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::Array.22"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array.22"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::Array.22"* %A, %"class.adept::Array.22"** %A.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept3invIdLNS_8internal21SymmMatrixOrientationE0EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_(%"class.adept::SpecialMatrix.25"* noalias sret(%"class.adept::SpecialMatrix.25") align 8 %agg.result, %"class.adept::SpecialMatrix.25"* nonnull align 8 dereferenceable(24) %A) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::SpecialMatrix.25"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::SpecialMatrix.25"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::SpecialMatrix.25"* %A, %"class.adept::SpecialMatrix.25"** %A.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept3invIdLNS_8internal21SymmMatrixOrientationE1EEENS_13SpecialMatrixIT_NS1_10SymmEngineIXT0_EEELb0EEERKS7_(%"class.adept::SpecialMatrix.27"* noalias sret(%"class.adept::SpecialMatrix.27") align 8 %agg.result, %"class.adept::SpecialMatrix.27"* nonnull align 8 dereferenceable(24) %A) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::SpecialMatrix.27"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::SpecialMatrix.27"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::SpecialMatrix.27"* %A, %"class.adept::SpecialMatrix.27"** %A.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.102, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZNK5adept5Stack23jacobian_forward_kernelEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this, double* noalias %gradient_multipass_b) #20 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %gradient_multipass_b.addr = alloca double*, align 8
  %ist = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %statement = alloca %"struct.adept::internal::Statement"*, align 8
  %a = alloca %"struct.adept::internal::Packet", align 16
  %iop = alloca i32, align 4
  %g = alloca %"struct.adept::internal::Packet", align 16
  %m = alloca %"struct.adept::internal::Packet", align 16
  %ref.tmp = alloca %"struct.adept::internal::Packet", align 16
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store double* %gradient_multipass_b, double** %gradient_multipass_b.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 1, i32* %ist, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc18, %entry
  %1 = load i32, i32* %ist, align 4, !tbaa !20
  %2 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %2, i32 0, i32 3
  %3 = load i32, i32* %n_statements_, align 8, !tbaa !132
  %cmp = icmp slt i32 %1, %3
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  %4 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4) #9
  br label %for.end20

for.body:                                         ; preds = %for.cond
  %5 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %6, i32 0, i32 0
  %7 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !128
  %8 = load i32, i32* %ist, align 4, !tbaa !20
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %7, i64 %idxprom
  store %"struct.adept::internal::Statement"* %arrayidx, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %9 = bitcast %"struct.adept::internal::Packet"* %a to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %9) #9
  call void @_ZN5adept8internal6PacketIdEC2Ev(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %a)
  %10 = bitcast i32* %iop to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #9
  %11 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_2 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %11, i32 0, i32 0
  %12 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_2, align 8, !tbaa !128
  %13 = load i32, i32* %ist, align 4, !tbaa !20
  %sub = sub nsw i32 %13, 1
  %idxprom3 = sext i32 %sub to i64
  %arrayidx4 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %12, i64 %idxprom3
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayidx4, i32 0, i32 1
  %14 = load i32, i32* %end_plus_one, align 4, !tbaa !135
  store i32 %14, i32* %iop, align 4, !tbaa !20
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %for.body
  %15 = load i32, i32* %iop, align 4, !tbaa !20
  %16 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %end_plus_one6 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %16, i32 0, i32 1
  %17 = load i32, i32* %end_plus_one6, align 4, !tbaa !135
  %cmp7 = icmp slt i32 %15, %17
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond5
  store i32 5, i32* %cleanup.dest.slot, align 4
  %18 = bitcast i32* %iop to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %18) #9
  br label %for.end

for.body9:                                        ; preds = %for.cond5
  %19 = bitcast %"struct.adept::internal::Packet"* %g to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %19) #9
  %20 = load double*, double** %gradient_multipass_b.addr, align 8, !tbaa !2
  %21 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %21, i32 0, i32 2
  %22 = load i32*, i32** %index_, align 8, !tbaa !131
  %23 = load i32, i32* %iop, align 4, !tbaa !20
  %idxprom10 = sext i32 %23 to i64
  %arrayidx11 = getelementptr inbounds i32, i32* %22, i64 %idxprom10
  %24 = load i32, i32* %arrayidx11, align 4, !tbaa !20
  %mul = mul nsw i32 %24, 2
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds double, double* %20, i64 %idx.ext
  call void @_ZN5adept8internal6PacketIdEC2EPKd(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %g, double* %add.ptr)
  %25 = bitcast %"struct.adept::internal::Packet"* %m to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %25) #9
  %26 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %26, i32 0, i32 1
  %27 = load double*, double** %multiplier_, align 8, !tbaa !130
  %28 = load i32, i32* %iop, align 4, !tbaa !20
  %idxprom12 = sext i32 %28 to i64
  %arrayidx13 = getelementptr inbounds double, double* %27, i64 %idxprom12
  %29 = load double, double* %arrayidx13, align 8, !tbaa !44
  call void @_ZN5adept8internal6PacketIdEC2Ed(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %m, double %29)
  %30 = bitcast %"struct.adept::internal::Packet"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %30) #9
  %call = call fast <2 x double> @_ZN5adept8internalmlERKNS0_6PacketIdEES4_(%"struct.adept::internal::Packet"* nonnull align 16 dereferenceable(16) %m, %"struct.adept::internal::Packet"* nonnull align 16 dereferenceable(16) %g)
  %coerce.dive = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %ref.tmp, i32 0, i32 0
  %coerce.dive14 = getelementptr inbounds %union.anon.29, %union.anon.29* %coerce.dive, i32 0, i32 0
  store <2 x double> %call, <2 x double>* %coerce.dive14, align 16
  call void @_ZN5adept8internal6PacketIdEpLERKS2_(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %a, %"struct.adept::internal::Packet"* nonnull align 16 dereferenceable(16) %ref.tmp)
  %31 = bitcast %"struct.adept::internal::Packet"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %31) #9
  %32 = bitcast %"struct.adept::internal::Packet"* %m to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %32) #9
  %33 = bitcast %"struct.adept::internal::Packet"* %g to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %33) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body9
  %34 = load i32, i32* %iop, align 4, !tbaa !20
  %inc = add nsw i32 %34, 1
  store i32 %inc, i32* %iop, align 4, !tbaa !20
  br label %for.cond5, !llvm.loop !169

for.end:                                          ; preds = %for.cond.cleanup8
  %35 = load double*, double** %gradient_multipass_b.addr, align 8, !tbaa !2
  %36 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %36, i32 0, i32 0
  %37 = load i32, i32* %index, align 4, !tbaa !133
  %mul15 = mul nsw i32 %37, 2
  %idx.ext16 = sext i32 %mul15 to i64
  %add.ptr17 = getelementptr inbounds double, double* %35, i64 %idx.ext16
  call void @_ZNK5adept8internal6PacketIdE3putEPd(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %a, double* %add.ptr17)
  %38 = bitcast %"struct.adept::internal::Packet"* %a to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %38) #9
  %39 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #9
  br label %for.inc18

for.inc18:                                        ; preds = %for.end
  %40 = load i32, i32* %ist, align 4, !tbaa !20
  %inc19 = add nsw i32 %40, 1
  store i32 %inc19, i32* %ist, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !170

for.end20:                                        ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept8internal6PacketIdEC2Ev(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %this) unnamed_addr #21 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Packet"*, align 8
  store %"struct.adept::internal::Packet"* %this, %"struct.adept::internal::Packet"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Packet"*, %"struct.adept::internal::Packet"** %this.addr, align 8
  %0 = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %this1, i32 0, i32 0
  %data = bitcast %union.anon.29* %0 to <2 x double>*
  %call = call fast <2 x double> @_ZL14_mm_setzero_pdv()
  store <2 x double> %call, <2 x double>* %data, align 16, !tbaa !14
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept8internal6PacketIdEC2EPKd(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %this, double* %d) unnamed_addr #21 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Packet"*, align 8
  %d.addr = alloca double*, align 8
  store %"struct.adept::internal::Packet"* %this, %"struct.adept::internal::Packet"** %this.addr, align 8, !tbaa !2
  store double* %d, double** %d.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Packet"*, %"struct.adept::internal::Packet"** %this.addr, align 8
  %0 = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %this1, i32 0, i32 0
  %data = bitcast %union.anon.29* %0 to <2 x double>*
  %1 = load double*, double** %d.addr, align 8, !tbaa !2
  %call = call fast <2 x double> @_ZL11_mm_load_pdPKd(double* %1)
  store <2 x double> %call, <2 x double>* %data, align 16, !tbaa !14
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept8internal6PacketIdEC2Ed(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %this, double %d) unnamed_addr #21 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Packet"*, align 8
  %d.addr = alloca double, align 8
  store %"struct.adept::internal::Packet"* %this, %"struct.adept::internal::Packet"** %this.addr, align 8, !tbaa !2
  store double %d, double* %d.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::Packet"*, %"struct.adept::internal::Packet"** %this.addr, align 8
  %0 = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %this1, i32 0, i32 0
  %data = bitcast %union.anon.29* %0 to <2 x double>*
  %1 = load double, double* %d.addr, align 8, !tbaa !44
  %call = call fast <2 x double> @_ZL11_mm_set1_pdd(double %1)
  store <2 x double> %call, <2 x double>* %data, align 16, !tbaa !14
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local <2 x double> @_ZN5adept8internalmlERKNS0_6PacketIdEES4_(%"struct.adept::internal::Packet"* noalias nonnull align 16 dereferenceable(16) %x, %"struct.adept::internal::Packet"* noalias nonnull align 16 dereferenceable(16) %y) #22 comdat {
entry:
  %retval = alloca %"struct.adept::internal::Packet", align 16
  %x.addr = alloca %"struct.adept::internal::Packet"*, align 8
  %y.addr = alloca %"struct.adept::internal::Packet"*, align 8
  store %"struct.adept::internal::Packet"* %x, %"struct.adept::internal::Packet"** %x.addr, align 8, !tbaa !2
  store %"struct.adept::internal::Packet"* %y, %"struct.adept::internal::Packet"** %y.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::internal::Packet"*, %"struct.adept::internal::Packet"** %x.addr, align 8, !tbaa !2
  %1 = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %0, i32 0, i32 0
  %data = bitcast %union.anon.29* %1 to <2 x double>*
  %2 = load <2 x double>, <2 x double>* %data, align 16, !tbaa !14
  %3 = load %"struct.adept::internal::Packet"*, %"struct.adept::internal::Packet"** %y.addr, align 8, !tbaa !2
  %4 = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %3, i32 0, i32 0
  %data1 = bitcast %union.anon.29* %4 to <2 x double>*
  %5 = load <2 x double>, <2 x double>* %data1, align 16, !tbaa !14
  %call = call fast <2 x double> @_ZL10_mm_mul_pdDv2_dS_(<2 x double> %2, <2 x double> %5)
  call void @_ZN5adept8internal6PacketIdEC2EDv2_d(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %retval, <2 x double> %call)
  %coerce.dive = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %retval, i32 0, i32 0
  %coerce.dive2 = getelementptr inbounds %union.anon.29, %union.anon.29* %coerce.dive, i32 0, i32 0
  %6 = load <2 x double>, <2 x double>* %coerce.dive2, align 16
  ret <2 x double> %6
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal6PacketIdEpLERKS2_(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %this, %"struct.adept::internal::Packet"* noalias nonnull align 16 dereferenceable(16) %d) #20 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Packet"*, align 8
  %d.addr = alloca %"struct.adept::internal::Packet"*, align 8
  store %"struct.adept::internal::Packet"* %this, %"struct.adept::internal::Packet"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::internal::Packet"* %d, %"struct.adept::internal::Packet"** %d.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Packet"*, %"struct.adept::internal::Packet"** %this.addr, align 8
  %0 = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %this1, i32 0, i32 0
  %data = bitcast %union.anon.29* %0 to <2 x double>*
  %1 = load <2 x double>, <2 x double>* %data, align 16, !tbaa !14
  %2 = load %"struct.adept::internal::Packet"*, %"struct.adept::internal::Packet"** %d.addr, align 8, !tbaa !2
  %3 = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %2, i32 0, i32 0
  %data2 = bitcast %union.anon.29* %3 to <2 x double>*
  %4 = load <2 x double>, <2 x double>* %data2, align 16, !tbaa !14
  %call = call fast <2 x double> @_ZL10_mm_add_pdDv2_dS_(<2 x double> %1, <2 x double> %4)
  %5 = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %this1, i32 0, i32 0
  %data3 = bitcast %union.anon.29* %5 to <2 x double>*
  store <2 x double> %call, <2 x double>* %data3, align 16, !tbaa !14
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal6PacketIdE3putEPd(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %this, double* noalias %d) #20 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Packet"*, align 8
  %d.addr = alloca double*, align 8
  store %"struct.adept::internal::Packet"* %this, %"struct.adept::internal::Packet"** %this.addr, align 8, !tbaa !2
  store double* %d, double** %d.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Packet"*, %"struct.adept::internal::Packet"** %this.addr, align 8
  %0 = load double*, double** %d.addr, align 8, !tbaa !2
  %1 = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %this1, i32 0, i32 0
  %data = bitcast %union.anon.29* %1 to <2 x double>*
  %2 = load <2 x double>, <2 x double>* %data, align 16, !tbaa !14
  call void @_ZL12_mm_store_pdPdDv2_d(double* %0, <2 x double> %2)
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi(%"class.adept::Stack"* nonnull dereferenceable(149) %this, double* noalias %gradient_multipass_b, i32 %n_extra) #0 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %gradient_multipass_b.addr = alloca double*, align 8
  %n_extra.addr = alloca i32, align 4
  %ist = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %statement = alloca %"struct.adept::internal::Statement"*, align 8
  %a = alloca %"struct.adept::Block", align 8
  %iop = alloca i32, align 4
  %i = alloca i32, align 4
  %i25 = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store double* %gradient_multipass_b, double** %gradient_multipass_b.addr, align 8, !tbaa !2
  store i32 %n_extra, i32* %n_extra.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 1, i32* %ist, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc38, %entry
  %1 = load i32, i32* %ist, align 4, !tbaa !20
  %2 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %2, i32 0, i32 3
  %3 = load i32, i32* %n_statements_, align 8, !tbaa !132
  %cmp = icmp slt i32 %1, %3
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  %4 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4) #9
  br label %for.end40

for.body:                                         ; preds = %for.cond
  %5 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %6, i32 0, i32 0
  %7 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !128
  %8 = load i32, i32* %ist, align 4, !tbaa !20
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %7, i64 %idxprom
  store %"struct.adept::internal::Statement"* %arrayidx, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %9 = bitcast %"struct.adept::Block"* %a to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %9) #9
  call void @_ZN5adept5BlockILi2EdEC2Ev(%"struct.adept::Block"* nonnull dereferenceable(16) %a)
  %10 = bitcast i32* %iop to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #9
  %11 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_2 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %11, i32 0, i32 0
  %12 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_2, align 8, !tbaa !128
  %13 = load i32, i32* %ist, align 4, !tbaa !20
  %sub = sub nsw i32 %13, 1
  %idxprom3 = sext i32 %sub to i64
  %arrayidx4 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %12, i64 %idxprom3
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayidx4, i32 0, i32 1
  %14 = load i32, i32* %end_plus_one, align 4, !tbaa !135
  store i32 %14, i32* %iop, align 4, !tbaa !20
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc22, %for.body
  %15 = load i32, i32* %iop, align 4, !tbaa !20
  %16 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %end_plus_one6 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %16, i32 0, i32 1
  %17 = load i32, i32* %end_plus_one6, align 4, !tbaa !135
  %cmp7 = icmp slt i32 %15, %17
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond5
  store i32 5, i32* %cleanup.dest.slot, align 4
  %18 = bitcast i32* %iop to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %18) #9
  br label %for.end24

for.body9:                                        ; preds = %for.cond5
  %19 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc, %for.body9
  %20 = load i32, i32* %i, align 4, !tbaa !20
  %21 = load i32, i32* %n_extra.addr, align 4, !tbaa !20
  %cmp11 = icmp slt i32 %20, %21
  br i1 %cmp11, label %for.body13, label %for.cond.cleanup12

for.cond.cleanup12:                               ; preds = %for.cond10
  store i32 8, i32* %cleanup.dest.slot, align 4
  %22 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %22) #9
  br label %for.end

for.body13:                                       ; preds = %for.cond10
  %23 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %23, i32 0, i32 1
  %24 = load double*, double** %multiplier_, align 8, !tbaa !130
  %25 = load i32, i32* %iop, align 4, !tbaa !20
  %idxprom14 = sext i32 %25 to i64
  %arrayidx15 = getelementptr inbounds double, double* %24, i64 %idxprom14
  %26 = load double, double* %arrayidx15, align 8, !tbaa !44
  %27 = load double*, double** %gradient_multipass_b.addr, align 8, !tbaa !2
  %28 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %28, i32 0, i32 2
  %29 = load i32*, i32** %index_, align 8, !tbaa !131
  %30 = load i32, i32* %iop, align 4, !tbaa !20
  %idxprom16 = sext i32 %30 to i64
  %arrayidx17 = getelementptr inbounds i32, i32* %29, i64 %idxprom16
  %31 = load i32, i32* %arrayidx17, align 4, !tbaa !20
  %mul = mul nsw i32 %31, 2
  %32 = load i32, i32* %i, align 4, !tbaa !20
  %add = add nsw i32 %mul, %32
  %idxprom18 = sext i32 %add to i64
  %arrayidx19 = getelementptr inbounds double, double* %27, i64 %idxprom18
  %33 = load double, double* %arrayidx19, align 8, !tbaa !44
  %mul20 = fmul fast double %26, %33
  %34 = load i32, i32* %i, align 4, !tbaa !20
  %call = call nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %a, i32 %34)
  %35 = load double, double* %call, align 8, !tbaa !44
  %add21 = fadd fast double %35, %mul20
  store double %add21, double* %call, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body13
  %36 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %36, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond10, !llvm.loop !171

for.end:                                          ; preds = %for.cond.cleanup12
  br label %for.inc22

for.inc22:                                        ; preds = %for.end
  %37 = load i32, i32* %iop, align 4, !tbaa !20
  %inc23 = add nsw i32 %37, 1
  store i32 %inc23, i32* %iop, align 4, !tbaa !20
  br label %for.cond5, !llvm.loop !172

for.end24:                                        ; preds = %for.cond.cleanup8
  %38 = bitcast i32* %i25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #9
  store i32 0, i32* %i25, align 4, !tbaa !20
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc35, %for.end24
  %39 = load i32, i32* %i25, align 4, !tbaa !20
  %40 = load i32, i32* %n_extra.addr, align 4, !tbaa !20
  %cmp27 = icmp slt i32 %39, %40
  br i1 %cmp27, label %for.body29, label %for.cond.cleanup28

for.cond.cleanup28:                               ; preds = %for.cond26
  store i32 11, i32* %cleanup.dest.slot, align 4
  %41 = bitcast i32* %i25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %41) #9
  br label %for.end37

for.body29:                                       ; preds = %for.cond26
  %42 = load i32, i32* %i25, align 4, !tbaa !20
  %call30 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %a, i32 %42)
  %43 = load double, double* %call30, align 8, !tbaa !44
  %44 = load double*, double** %gradient_multipass_b.addr, align 8, !tbaa !2
  %45 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %45, i32 0, i32 0
  %46 = load i32, i32* %index, align 4, !tbaa !133
  %mul31 = mul nsw i32 %46, 2
  %47 = load i32, i32* %i25, align 4, !tbaa !20
  %add32 = add nsw i32 %mul31, %47
  %idxprom33 = sext i32 %add32 to i64
  %arrayidx34 = getelementptr inbounds double, double* %44, i64 %idxprom33
  store double %43, double* %arrayidx34, align 8, !tbaa !44
  br label %for.inc35

for.inc35:                                        ; preds = %for.body29
  %48 = load i32, i32* %i25, align 4, !tbaa !20
  %inc36 = add nsw i32 %48, 1
  store i32 %inc36, i32* %i25, align 4, !tbaa !20
  br label %for.cond26, !llvm.loop !173

for.end37:                                        ; preds = %for.cond.cleanup28
  %49 = bitcast %"struct.adept::Block"* %a to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %49) #9
  %50 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #9
  br label %for.inc38

for.inc38:                                        ; preds = %for.end37
  %51 = load i32, i32* %ist, align 4, !tbaa !20
  %inc39 = add nsw i32 %51, 1
  store i32 %inc39, i32* %ist, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !174

for.end40:                                        ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept5BlockILi2EdEC2Ev(%"struct.adept::Block"* nonnull dereferenceable(16) %this) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Block"*, align 8
  store %"struct.adept::Block"* %this, %"struct.adept::Block"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Block"*, %"struct.adept::Block"** %this.addr, align 8
  call void @_ZN5adept5BlockILi2EdE4zeroEv(%"struct.adept::Block"* nonnull dereferenceable(16) %this1)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %this, i32 %i) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Block"*, align 8
  %i.addr = alloca i32, align 4
  store %"struct.adept::Block"* %this, %"struct.adept::Block"** %this.addr, align 8, !tbaa !2
  store i32 %i, i32* %i.addr, align 4, !tbaa !20
  %this1 = load %"struct.adept::Block"*, %"struct.adept::Block"** %this.addr, align 8
  %data = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %this1, i32 0, i32 0
  %0 = load i32, i32* %i.addr, align 4, !tbaa !20
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %data, i64 0, i64 %idxprom
  ret double* %arrayidx
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZNK5adept5Stack23jacobian_forward_openmpEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this, double* %jacobian_out) #0 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %jacobian_out.addr = alloca double*, align 8
  %n_block = alloca i32, align 4
  %n_extra = alloca i32, align 4
  %iblock = alloca i32, align 4
  %gradient_multipass_size = alloca i32, align 4
  %gradient_multipass_b = alloca double*, align 8
  %i_independent = alloca i32, align 4
  %block_size = alloca i32, align 4
  %i = alloca i32, align 4
  %i11 = alloca i32, align 4
  %idep = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %i30 = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store double* %jacobian_out, double** %jacobian_out.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast i32* %n_block to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %call = call i32 @_ZNK5adept5Stack13n_independentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %add = add nsw i32 %call, 2
  %sub = sub nsw i32 %add, 1
  %div = sdiv i32 %sub, 2
  store i32 %div, i32* %n_block, align 4, !tbaa !20
  %1 = bitcast i32* %n_extra to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  %call2 = call i32 @_ZNK5adept5Stack13n_independentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %rem = srem i32 %call2, 2
  store i32 %rem, i32* %n_extra, align 4, !tbaa !20
  %2 = bitcast i32* %iblock to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #9
  %3 = bitcast i32* %gradient_multipass_size to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #9
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %4 = load i32, i32* %max_gradient_, align 8, !tbaa !148
  %mul = mul nsw i32 %4, 2
  store i32 %mul, i32* %gradient_multipass_size, align 4, !tbaa !20
  %5 = bitcast double** %gradient_multipass_b to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %6 = load i32, i32* %gradient_multipass_size, align 4, !tbaa !20
  %call3 = call double* @_ZN5adept8internal13alloc_alignedIdEEPT_i(i32 %6)
  store double* %call3, double** %gradient_multipass_b, align 8, !tbaa !2
  store i32 0, i32* %iblock, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc53, %entry
  %7 = load i32, i32* %iblock, align 4, !tbaa !20
  %8 = load i32, i32* %n_block, align 4, !tbaa !20
  %cmp = icmp slt i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end55

for.body:                                         ; preds = %for.cond
  %9 = bitcast i32* %i_independent to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #9
  %10 = load i32, i32* %iblock, align 4, !tbaa !20
  %mul4 = mul nsw i32 2, %10
  store i32 %mul4, i32* %i_independent, align 4, !tbaa !20
  %11 = bitcast i32* %block_size to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #9
  store i32 2, i32* %block_size, align 4, !tbaa !20
  %12 = load i32, i32* %iblock, align 4, !tbaa !20
  %13 = load i32, i32* %n_block, align 4, !tbaa !20
  %sub5 = sub nsw i32 %13, 1
  %cmp6 = icmp eq i32 %12, %sub5
  br i1 %cmp6, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %14 = load i32, i32* %n_extra, align 4, !tbaa !20
  %cmp7 = icmp sgt i32 %14, 0
  br i1 %cmp7, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %15 = load i32, i32* %n_extra, align 4, !tbaa !20
  store i32 %15, i32* %block_size, align 4, !tbaa !20
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %16 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc, %if.end
  %17 = load i32, i32* %i, align 4, !tbaa !20
  %18 = load i32, i32* %gradient_multipass_size, align 4, !tbaa !20
  %cmp9 = icmp slt i32 %17, %18
  br i1 %cmp9, label %for.body10, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond8
  %19 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %19) #9
  br label %for.end

for.body10:                                       ; preds = %for.cond8
  %20 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  %21 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %21 to i64
  %arrayidx = getelementptr inbounds double, double* %20, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body10
  %22 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond8, !llvm.loop !175

for.end:                                          ; preds = %for.cond.cleanup
  %23 = bitcast i32* %i11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #9
  store i32 0, i32* %i11, align 4, !tbaa !20
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc22, %for.end
  %24 = load i32, i32* %i11, align 4, !tbaa !20
  %25 = load i32, i32* %block_size, align 4, !tbaa !20
  %cmp13 = icmp slt i32 %24, %25
  br i1 %cmp13, label %for.body15, label %for.cond.cleanup14

for.cond.cleanup14:                               ; preds = %for.cond12
  %26 = bitcast i32* %i11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %26) #9
  br label %for.end24

for.body15:                                       ; preds = %for.cond12
  %27 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  %independent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  %28 = load i32, i32* %i_independent, align 4, !tbaa !20
  %29 = load i32, i32* %i11, align 4, !tbaa !20
  %add16 = add nsw i32 %28, %29
  %conv = sext i32 %add16 to i64
  %call17 = call nonnull align 4 dereferenceable(4) i32* @_ZNKSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_, i64 %conv) #9
  %30 = load i32, i32* %call17, align 4, !tbaa !20
  %mul18 = mul nsw i32 %30, 2
  %31 = load i32, i32* %i11, align 4, !tbaa !20
  %add19 = add nsw i32 %mul18, %31
  %idxprom20 = sext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds double, double* %27, i64 %idxprom20
  store double 1.000000e+00, double* %arrayidx21, align 8, !tbaa !44
  br label %for.inc22

for.inc22:                                        ; preds = %for.body15
  %32 = load i32, i32* %i11, align 4, !tbaa !20
  %inc23 = add nsw i32 %32, 1
  store i32 %inc23, i32* %i11, align 4, !tbaa !20
  br label %for.cond12, !llvm.loop !176

for.end24:                                        ; preds = %for.cond.cleanup14
  %33 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  call void @_ZNK5adept5Stack23jacobian_forward_kernelEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this1, double* %33)
  %34 = bitcast i32* %idep to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #9
  store i32 0, i32* %idep, align 4, !tbaa !20
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc50, %for.end24
  %35 = load i32, i32* %idep, align 4, !tbaa !20
  %call26 = call i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %cmp27 = icmp slt i32 %35, %call26
  br i1 %cmp27, label %for.body29, label %for.cond.cleanup28

for.cond.cleanup28:                               ; preds = %for.cond25
  store i32 11, i32* %cleanup.dest.slot, align 4
  %36 = bitcast i32* %idep to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %36) #9
  br label %for.end52

for.body29:                                       ; preds = %for.cond25
  %37 = bitcast i32* %i30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #9
  store i32 0, i32* %i30, align 4, !tbaa !20
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc47, %for.body29
  %38 = load i32, i32* %i30, align 4, !tbaa !20
  %39 = load i32, i32* %block_size, align 4, !tbaa !20
  %cmp32 = icmp slt i32 %38, %39
  br i1 %cmp32, label %for.body34, label %for.cond.cleanup33

for.cond.cleanup33:                               ; preds = %for.cond31
  store i32 14, i32* %cleanup.dest.slot, align 4
  %40 = bitcast i32* %i30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %40) #9
  br label %for.end49

for.body34:                                       ; preds = %for.cond31
  %41 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  %dependent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  %42 = load i32, i32* %idep, align 4, !tbaa !20
  %conv35 = sext i32 %42 to i64
  %call36 = call nonnull align 4 dereferenceable(4) i32* @_ZNKSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_, i64 %conv35) #9
  %43 = load i32, i32* %call36, align 4, !tbaa !20
  %mul37 = mul nsw i32 %43, 2
  %44 = load i32, i32* %i30, align 4, !tbaa !20
  %add38 = add nsw i32 %mul37, %44
  %idxprom39 = sext i32 %add38 to i64
  %arrayidx40 = getelementptr inbounds double, double* %41, i64 %idxprom39
  %45 = load double, double* %arrayidx40, align 8, !tbaa !44
  %46 = load double*, double** %jacobian_out.addr, align 8, !tbaa !2
  %47 = load i32, i32* %i_independent, align 4, !tbaa !20
  %48 = load i32, i32* %i30, align 4, !tbaa !20
  %add41 = add nsw i32 %47, %48
  %call42 = call i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %mul43 = mul nsw i32 %add41, %call42
  %49 = load i32, i32* %idep, align 4, !tbaa !20
  %add44 = add nsw i32 %mul43, %49
  %idxprom45 = sext i32 %add44 to i64
  %arrayidx46 = getelementptr inbounds double, double* %46, i64 %idxprom45
  store double %45, double* %arrayidx46, align 8, !tbaa !44
  br label %for.inc47

for.inc47:                                        ; preds = %for.body34
  %50 = load i32, i32* %i30, align 4, !tbaa !20
  %inc48 = add nsw i32 %50, 1
  store i32 %inc48, i32* %i30, align 4, !tbaa !20
  br label %for.cond31, !llvm.loop !177

for.end49:                                        ; preds = %for.cond.cleanup33
  br label %for.inc50

for.inc50:                                        ; preds = %for.end49
  %51 = load i32, i32* %idep, align 4, !tbaa !20
  %inc51 = add nsw i32 %51, 1
  store i32 %inc51, i32* %idep, align 4, !tbaa !20
  br label %for.cond25, !llvm.loop !178

for.end52:                                        ; preds = %for.cond.cleanup28
  %52 = bitcast i32* %block_size to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %52) #9
  %53 = bitcast i32* %i_independent to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %53) #9
  br label %for.inc53

for.inc53:                                        ; preds = %for.end52
  %54 = load i32, i32* %iblock, align 4, !tbaa !20
  %inc54 = add nsw i32 %54, 1
  store i32 %inc54, i32* %iblock, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !179

for.end55:                                        ; preds = %for.cond
  %55 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  call void @_ZN5adept8internal12free_alignedIdEEvPT_(double* %55)
  %56 = bitcast double** %gradient_multipass_b to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #9
  %57 = bitcast i32* %gradient_multipass_size to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %57) #9
  %58 = bitcast i32* %iblock to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %58) #9
  %59 = bitcast i32* %n_extra to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %59) #9
  %60 = bitcast i32* %n_block to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %60) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5Stack13n_independentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %independent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  %call = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_) #9
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local double* @_ZN5adept8internal13alloc_alignedIdEEPT_i(i32 %n) #5 comdat {
entry:
  %retval = alloca double*, align 8
  %n.addr = alloca i32, align 4
  %n_align = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  %result = alloca double*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  %0 = bitcast i64* %n_align to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  store i64 16, i64* %n_align, align 8, !tbaa !13
  %1 = load i64, i64* %n_align, align 8, !tbaa !13
  %cmp = icmp ult i64 %1, 8
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %n.addr, align 4, !tbaa !20
  %conv = sext i32 %2 to i64
  %3 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 8)
  %4 = extractvalue { i64, i1 } %3, 1
  %5 = extractvalue { i64, i1 } %3, 0
  %6 = select i1 %4, i64 -1, i64 %5
  %call = call noalias nonnull i8* @_Znam(i64 %6) #33
  %7 = bitcast i8* %call to double*
  store double* %7, double** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.else:                                          ; preds = %entry
  %8 = bitcast double** %result to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #9
  %9 = bitcast double** %result to i8**
  %10 = load i64, i64* %n_align, align 8, !tbaa !13
  %11 = load i32, i32* %n.addr, align 4, !tbaa !20
  %conv1 = sext i32 %11 to i64
  %mul = mul i64 %conv1, 8
  %call2 = call i32 @posix_memalign(i8** %9, i64 %10, i64 %mul) #9
  %cmp3 = icmp ne i32 %call2, 0
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  %exception = call i8* @__cxa_allocate_exception(i64 8) #9
  %12 = bitcast i8* %exception to %"class.std::bad_alloc"*
  call void @_ZNSt9bad_allocC2Ev(%"class.std::bad_alloc"* nonnull dereferenceable(8) %12) #9
  call void @__cxa_throw(i8* %exception, i8* bitcast (i8** @_ZTISt9bad_alloc to i8*), i8* bitcast (void (%"class.std::bad_alloc"*)* @_ZNSt9bad_allocD1Ev to i8*)) #31
  unreachable

if.end:                                           ; preds = %if.else
  %13 = load double*, double** %result, align 8, !tbaa !2
  store double* %13, double** %retval, align 8
  store i32 1, i32* %cleanup.dest.slot, align 4
  %14 = bitcast double** %result to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %14) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %15 = bitcast i64* %n_align to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %15) #9
  %16 = load double*, double** %retval, align 8
  ret double* %16
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %dependent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  %call = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_) #9
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal12free_alignedIdEEvPT_(double* %data) #12 comdat {
entry:
  %data.addr = alloca double*, align 8
  store double* %data, double** %data.addr, align 8, !tbaa !2
  %0 = load double*, double** %data.addr, align 8, !tbaa !2
  %1 = bitcast double* %0 to i8*
  call void @free(i8* %1) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack16jacobian_forwardEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this, double* %jacobian_out) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %jacobian_out.addr = alloca double*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp3 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %n_block = alloca i32, align 4
  %n_extra = alloca i32, align 4
  %gradient_multipass_size = alloca i32, align 4
  %gradient_multipass_b = alloca double*, align 8
  %iblock = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %i_independent = alloca i32, align 4
  %i = alloca i32, align 4
  %i17 = alloca i32, align 4
  %idep = alloca i32, align 4
  %i36 = alloca i32, align 4
  %i_independent66 = alloca i32, align 4
  %i68 = alloca i32, align 4
  %i78 = alloca i32, align 4
  %idep94 = alloca i32, align 4
  %i100 = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store double* %jacobian_out, double** %jacobian_out.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %independent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  %call = call zeroext i1 @_ZNKSt6vectorIiSaIiEE5emptyEv(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_) #9
  br i1 %call, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %dependent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  %call2 = call zeroext i1 @_ZNKSt6vectorIiSaIiEE5emptyEv(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_) #9
  br i1 %call2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::dependents_or_independents_not_identified"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp3) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.103, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp3)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  invoke void @_ZN5adept41dependents_or_independents_not_identifiedC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::dependents_or_independents_not_identified"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont5 unwind label %lpad4

invoke.cont5:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept41dependents_or_independents_not_identifiedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad4

lpad:                                             ; preds = %if.then
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad4:                                            ; preds = %invoke.cont5, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad4, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp3) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

if.end:                                           ; preds = %lor.lhs.false
  %11 = bitcast i32* %n_block to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #9
  %call9 = call i32 @_ZNK5adept5Stack13n_independentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %div = sdiv i32 %call9, 2
  store i32 %div, i32* %n_block, align 4, !tbaa !20
  %12 = bitcast i32* %n_extra to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #9
  %call10 = call i32 @_ZNK5adept5Stack13n_independentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %rem = srem i32 %call10, 2
  store i32 %rem, i32* %n_extra, align 4, !tbaa !20
  %13 = bitcast i32* %gradient_multipass_size to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #9
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %14 = load i32, i32* %max_gradient_, align 8, !tbaa !148
  %mul = mul nsw i32 %14, 2
  store i32 %mul, i32* %gradient_multipass_size, align 4, !tbaa !20
  %15 = bitcast double** %gradient_multipass_b to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #9
  %16 = load i32, i32* %gradient_multipass_size, align 4, !tbaa !20
  %call11 = call double* @_ZN5adept8internal13alloc_alignedIdEEPT_i(i32 %16)
  store double* %call11, double** %gradient_multipass_b, align 8, !tbaa !2
  %17 = bitcast i32* %iblock to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #9
  store i32 0, i32* %iblock, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc61, %if.end
  %18 = load i32, i32* %iblock, align 4, !tbaa !20
  %19 = load i32, i32* %n_block, align 4, !tbaa !20
  %cmp = icmp slt i32 %18, %19
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  %20 = bitcast i32* %iblock to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %20) #9
  br label %for.end63

for.body:                                         ; preds = %for.cond
  %21 = bitcast i32* %i_independent to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #9
  %22 = load i32, i32* %iblock, align 4, !tbaa !20
  %mul12 = mul nsw i32 2, %22
  store i32 %mul12, i32* %i_independent, align 4, !tbaa !20
  %23 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc, %for.body
  %24 = load i32, i32* %i, align 4, !tbaa !20
  %25 = load i32, i32* %gradient_multipass_size, align 4, !tbaa !20
  %cmp14 = icmp slt i32 %24, %25
  br i1 %cmp14, label %for.body16, label %for.cond.cleanup15

for.cond.cleanup15:                               ; preds = %for.cond13
  store i32 5, i32* %cleanup.dest.slot, align 4
  %26 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %26) #9
  br label %for.end

for.body16:                                       ; preds = %for.cond13
  %27 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  %28 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %28 to i64
  %arrayidx = getelementptr inbounds double, double* %27, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body16
  %29 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %29, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond13, !llvm.loop !180

for.end:                                          ; preds = %for.cond.cleanup15
  %30 = bitcast i32* %i17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #9
  store i32 0, i32* %i17, align 4, !tbaa !20
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc28, %for.end
  %31 = load i32, i32* %i17, align 4, !tbaa !20
  %cmp19 = icmp slt i32 %31, 2
  br i1 %cmp19, label %for.body21, label %for.cond.cleanup20

for.cond.cleanup20:                               ; preds = %for.cond18
  store i32 8, i32* %cleanup.dest.slot, align 4
  %32 = bitcast i32* %i17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %32) #9
  br label %for.end30

for.body21:                                       ; preds = %for.cond18
  %33 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  %independent_index_22 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  %34 = load i32, i32* %i_independent, align 4, !tbaa !20
  %35 = load i32, i32* %i17, align 4, !tbaa !20
  %add = add nsw i32 %34, %35
  %conv = sext i32 %add to i64
  %call23 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_22, i64 %conv) #9
  %36 = load i32, i32* %call23, align 4, !tbaa !20
  %mul24 = mul nsw i32 %36, 2
  %37 = load i32, i32* %i17, align 4, !tbaa !20
  %add25 = add nsw i32 %mul24, %37
  %idxprom26 = sext i32 %add25 to i64
  %arrayidx27 = getelementptr inbounds double, double* %33, i64 %idxprom26
  store double 1.000000e+00, double* %arrayidx27, align 8, !tbaa !44
  br label %for.inc28

for.inc28:                                        ; preds = %for.body21
  %38 = load i32, i32* %i17, align 4, !tbaa !20
  %inc29 = add nsw i32 %38, 1
  store i32 %inc29, i32* %i17, align 4, !tbaa !20
  br label %for.cond18, !llvm.loop !181

for.end30:                                        ; preds = %for.cond.cleanup20
  %39 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  call void @_ZNK5adept5Stack23jacobian_forward_kernelEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this1, double* %39)
  %40 = bitcast i32* %idep to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #9
  store i32 0, i32* %idep, align 4, !tbaa !20
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc57, %for.end30
  %41 = load i32, i32* %idep, align 4, !tbaa !20
  %call32 = call i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %cmp33 = icmp slt i32 %41, %call32
  br i1 %cmp33, label %for.body35, label %for.cond.cleanup34

for.cond.cleanup34:                               ; preds = %for.cond31
  store i32 11, i32* %cleanup.dest.slot, align 4
  %42 = bitcast i32* %idep to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %42) #9
  br label %for.end59

for.body35:                                       ; preds = %for.cond31
  %43 = bitcast i32* %i36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #9
  store i32 0, i32* %i36, align 4, !tbaa !20
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc54, %for.body35
  %44 = load i32, i32* %i36, align 4, !tbaa !20
  %cmp38 = icmp slt i32 %44, 2
  br i1 %cmp38, label %for.body40, label %for.cond.cleanup39

for.cond.cleanup39:                               ; preds = %for.cond37
  store i32 14, i32* %cleanup.dest.slot, align 4
  %45 = bitcast i32* %i36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %45) #9
  br label %for.end56

for.body40:                                       ; preds = %for.cond37
  %46 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  %dependent_index_41 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  %47 = load i32, i32* %idep, align 4, !tbaa !20
  %conv42 = sext i32 %47 to i64
  %call43 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_41, i64 %conv42) #9
  %48 = load i32, i32* %call43, align 4, !tbaa !20
  %mul44 = mul nsw i32 %48, 2
  %49 = load i32, i32* %i36, align 4, !tbaa !20
  %add45 = add nsw i32 %mul44, %49
  %idxprom46 = sext i32 %add45 to i64
  %arrayidx47 = getelementptr inbounds double, double* %46, i64 %idxprom46
  %50 = load double, double* %arrayidx47, align 8, !tbaa !44
  %51 = load double*, double** %jacobian_out.addr, align 8, !tbaa !2
  %52 = load i32, i32* %i_independent, align 4, !tbaa !20
  %53 = load i32, i32* %i36, align 4, !tbaa !20
  %add48 = add nsw i32 %52, %53
  %call49 = call i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %mul50 = mul nsw i32 %add48, %call49
  %54 = load i32, i32* %idep, align 4, !tbaa !20
  %add51 = add nsw i32 %mul50, %54
  %idxprom52 = sext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds double, double* %51, i64 %idxprom52
  store double %50, double* %arrayidx53, align 8, !tbaa !44
  br label %for.inc54

for.inc54:                                        ; preds = %for.body40
  %55 = load i32, i32* %i36, align 4, !tbaa !20
  %inc55 = add nsw i32 %55, 1
  store i32 %inc55, i32* %i36, align 4, !tbaa !20
  br label %for.cond37, !llvm.loop !182

for.end56:                                        ; preds = %for.cond.cleanup39
  br label %for.inc57

for.inc57:                                        ; preds = %for.end56
  %56 = load i32, i32* %idep, align 4, !tbaa !20
  %inc58 = add nsw i32 %56, 1
  store i32 %inc58, i32* %idep, align 4, !tbaa !20
  br label %for.cond31, !llvm.loop !183

for.end59:                                        ; preds = %for.cond.cleanup34
  %57 = load i32, i32* %i_independent, align 4, !tbaa !20
  %add60 = add nsw i32 %57, 2
  store i32 %add60, i32* %i_independent, align 4, !tbaa !20
  %58 = bitcast i32* %i_independent to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %58) #9
  br label %for.inc61

for.inc61:                                        ; preds = %for.end59
  %59 = load i32, i32* %iblock, align 4, !tbaa !20
  %inc62 = add nsw i32 %59, 1
  store i32 %inc62, i32* %iblock, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !184

for.end63:                                        ; preds = %for.cond.cleanup
  %60 = load i32, i32* %n_extra, align 4, !tbaa !20
  %cmp64 = icmp sgt i32 %60, 0
  br i1 %cmp64, label %if.then65, label %if.end124

if.then65:                                        ; preds = %for.end63
  %61 = bitcast i32* %i_independent66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %61) #9
  %62 = load i32, i32* %n_block, align 4, !tbaa !20
  %mul67 = mul nsw i32 2, %62
  store i32 %mul67, i32* %i_independent66, align 4, !tbaa !20
  %63 = bitcast i32* %i68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %63) #9
  store i32 0, i32* %i68, align 4, !tbaa !20
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc75, %if.then65
  %64 = load i32, i32* %i68, align 4, !tbaa !20
  %65 = load i32, i32* %gradient_multipass_size, align 4, !tbaa !20
  %cmp70 = icmp slt i32 %64, %65
  br i1 %cmp70, label %for.body72, label %for.cond.cleanup71

for.cond.cleanup71:                               ; preds = %for.cond69
  store i32 17, i32* %cleanup.dest.slot, align 4
  %66 = bitcast i32* %i68 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #9
  br label %for.end77

for.body72:                                       ; preds = %for.cond69
  %67 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  %68 = load i32, i32* %i68, align 4, !tbaa !20
  %idxprom73 = sext i32 %68 to i64
  %arrayidx74 = getelementptr inbounds double, double* %67, i64 %idxprom73
  store double 0.000000e+00, double* %arrayidx74, align 8, !tbaa !44
  br label %for.inc75

for.inc75:                                        ; preds = %for.body72
  %69 = load i32, i32* %i68, align 4, !tbaa !20
  %inc76 = add nsw i32 %69, 1
  store i32 %inc76, i32* %i68, align 4, !tbaa !20
  br label %for.cond69, !llvm.loop !185

for.end77:                                        ; preds = %for.cond.cleanup71
  %70 = bitcast i32* %i78 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %70) #9
  store i32 0, i32* %i78, align 4, !tbaa !20
  br label %for.cond79

for.cond79:                                       ; preds = %for.inc91, %for.end77
  %71 = load i32, i32* %i78, align 4, !tbaa !20
  %72 = load i32, i32* %n_extra, align 4, !tbaa !20
  %cmp80 = icmp slt i32 %71, %72
  br i1 %cmp80, label %for.body82, label %for.cond.cleanup81

for.cond.cleanup81:                               ; preds = %for.cond79
  store i32 20, i32* %cleanup.dest.slot, align 4
  %73 = bitcast i32* %i78 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %73) #9
  br label %for.end93

for.body82:                                       ; preds = %for.cond79
  %74 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  %independent_index_83 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  %75 = load i32, i32* %i_independent66, align 4, !tbaa !20
  %76 = load i32, i32* %i78, align 4, !tbaa !20
  %add84 = add nsw i32 %75, %76
  %conv85 = sext i32 %add84 to i64
  %call86 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_83, i64 %conv85) #9
  %77 = load i32, i32* %call86, align 4, !tbaa !20
  %mul87 = mul nsw i32 %77, 2
  %78 = load i32, i32* %i78, align 4, !tbaa !20
  %add88 = add nsw i32 %mul87, %78
  %idxprom89 = sext i32 %add88 to i64
  %arrayidx90 = getelementptr inbounds double, double* %74, i64 %idxprom89
  store double 1.000000e+00, double* %arrayidx90, align 8, !tbaa !44
  br label %for.inc91

for.inc91:                                        ; preds = %for.body82
  %79 = load i32, i32* %i78, align 4, !tbaa !20
  %inc92 = add nsw i32 %79, 1
  store i32 %inc92, i32* %i78, align 4, !tbaa !20
  br label %for.cond79, !llvm.loop !186

for.end93:                                        ; preds = %for.cond.cleanup81
  %80 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  %81 = load i32, i32* %n_extra, align 4, !tbaa !20
  call void @_ZNK5adept5Stack29jacobian_forward_kernel_extraEPdi(%"class.adept::Stack"* nonnull dereferenceable(149) %this1, double* %80, i32 %81)
  %82 = bitcast i32* %idep94 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %82) #9
  store i32 0, i32* %idep94, align 4, !tbaa !20
  br label %for.cond95

for.cond95:                                       ; preds = %for.inc121, %for.end93
  %83 = load i32, i32* %idep94, align 4, !tbaa !20
  %call96 = call i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %cmp97 = icmp slt i32 %83, %call96
  br i1 %cmp97, label %for.body99, label %for.cond.cleanup98

for.cond.cleanup98:                               ; preds = %for.cond95
  store i32 23, i32* %cleanup.dest.slot, align 4
  %84 = bitcast i32* %idep94 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %84) #9
  br label %for.end123

for.body99:                                       ; preds = %for.cond95
  %85 = bitcast i32* %i100 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %85) #9
  store i32 0, i32* %i100, align 4, !tbaa !20
  br label %for.cond101

for.cond101:                                      ; preds = %for.inc118, %for.body99
  %86 = load i32, i32* %i100, align 4, !tbaa !20
  %87 = load i32, i32* %n_extra, align 4, !tbaa !20
  %cmp102 = icmp slt i32 %86, %87
  br i1 %cmp102, label %for.body104, label %for.cond.cleanup103

for.cond.cleanup103:                              ; preds = %for.cond101
  store i32 26, i32* %cleanup.dest.slot, align 4
  %88 = bitcast i32* %i100 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %88) #9
  br label %for.end120

for.body104:                                      ; preds = %for.cond101
  %89 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  %dependent_index_105 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  %90 = load i32, i32* %idep94, align 4, !tbaa !20
  %conv106 = sext i32 %90 to i64
  %call107 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_105, i64 %conv106) #9
  %91 = load i32, i32* %call107, align 4, !tbaa !20
  %mul108 = mul nsw i32 %91, 2
  %92 = load i32, i32* %i100, align 4, !tbaa !20
  %add109 = add nsw i32 %mul108, %92
  %idxprom110 = sext i32 %add109 to i64
  %arrayidx111 = getelementptr inbounds double, double* %89, i64 %idxprom110
  %93 = load double, double* %arrayidx111, align 8, !tbaa !44
  %94 = load double*, double** %jacobian_out.addr, align 8, !tbaa !2
  %95 = load i32, i32* %i_independent66, align 4, !tbaa !20
  %96 = load i32, i32* %i100, align 4, !tbaa !20
  %add112 = add nsw i32 %95, %96
  %call113 = call i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %mul114 = mul nsw i32 %add112, %call113
  %97 = load i32, i32* %idep94, align 4, !tbaa !20
  %add115 = add nsw i32 %mul114, %97
  %idxprom116 = sext i32 %add115 to i64
  %arrayidx117 = getelementptr inbounds double, double* %94, i64 %idxprom116
  store double %93, double* %arrayidx117, align 8, !tbaa !44
  br label %for.inc118

for.inc118:                                       ; preds = %for.body104
  %98 = load i32, i32* %i100, align 4, !tbaa !20
  %inc119 = add nsw i32 %98, 1
  store i32 %inc119, i32* %i100, align 4, !tbaa !20
  br label %for.cond101, !llvm.loop !187

for.end120:                                       ; preds = %for.cond.cleanup103
  br label %for.inc121

for.inc121:                                       ; preds = %for.end120
  %99 = load i32, i32* %idep94, align 4, !tbaa !20
  %inc122 = add nsw i32 %99, 1
  store i32 %inc122, i32* %idep94, align 4, !tbaa !20
  br label %for.cond95, !llvm.loop !188

for.end123:                                       ; preds = %for.cond.cleanup98
  %100 = bitcast i32* %i_independent66 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %100) #9
  br label %if.end124

if.end124:                                        ; preds = %for.end123, %for.end63
  %101 = load double*, double** %gradient_multipass_b, align 8, !tbaa !2
  call void @_ZN5adept8internal12free_alignedIdEEvPT_(double* %101)
  %102 = bitcast double** %gradient_multipass_b to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #9
  %103 = bitcast i32* %gradient_multipass_size to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %103) #9
  %104 = bitcast i32* %n_extra to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %104) #9
  %105 = bitcast i32* %n_block to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %105) #9
  ret void

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val125 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val125

unreachable:                                      ; preds = %invoke.cont5
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZNKSt6vectorIiSaIiEE5emptyEv(%"class.std::vector.8"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator.44", align 8
  %ref.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator.44", align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %0 = bitcast %"class.__gnu_cxx::__normal_iterator.44"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %call = call i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.8"* nonnull dereferenceable(24) %this1) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.44", %"class.__gnu_cxx::__normal_iterator.44"* %ref.tmp, i32 0, i32 0
  store i32* %call, i32** %coerce.dive, align 8
  %1 = bitcast %"class.__gnu_cxx::__normal_iterator.44"* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %call3 = call i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.8"* nonnull dereferenceable(24) %this1) #9
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.44", %"class.__gnu_cxx::__normal_iterator.44"* %ref.tmp2, i32 0, i32 0
  store i32* %call3, i32** %coerce.dive4, align 8
  %call5 = call zeroext i1 @_ZN9__gnu_cxxeqIPKiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator.44"* nonnull align 8 dereferenceable(8) %ref.tmp, %"class.__gnu_cxx::__normal_iterator.44"* nonnull align 8 dereferenceable(8) %ref.tmp2) #9
  %2 = bitcast %"class.__gnu_cxx::__normal_iterator.44"* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #9
  %3 = bitcast %"class.__gnu_cxx::__normal_iterator.44"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #9
  ret i1 %call5
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept41dependents_or_independents_not_identifiedC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::dependents_or_independents_not_identified"* nonnull dereferenceable(40) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::dependents_or_independents_not_identified"*, align 8
  %message.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.adept::dependents_or_independents_not_identified"* %this, %"class.adept::dependents_or_independents_not_identified"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %message, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::dependents_or_independents_not_identified"*, %"class.adept::dependents_or_independents_not_identified"** %this.addr, align 8
  %0 = bitcast %"class.adept::dependents_or_independents_not_identified"* %this1 to %"class.adept::autodiff_exception"*
  call void @_ZN5adept18autodiff_exceptionC2Ev(%"class.adept::autodiff_exception"* nonnull dereferenceable(40) %0) #9
  %1 = bitcast %"class.adept::dependents_or_independents_not_identified"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept41dependents_or_independents_not_identifiedE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !53
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %3 = bitcast %"class.adept::dependents_or_independents_not_identified"* %this1 to %"class.adept::exception"*
  %message_ = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %3, i32 0, i32 1
  %call = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  %7 = bitcast %"class.adept::dependents_or_independents_not_identified"* %this1 to %"class.adept::autodiff_exception"*
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::autodiff_exception"*)*)(%"class.adept::autodiff_exception"* nonnull dereferenceable(40) %7) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 4 dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %this, i64 %__n) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load i32*, i32** %_M_start, align 8, !tbaa !125
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds i32, i32* %2, i64 %3
  ret i32* %add.ptr
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZNK5adept5Stack23jacobian_reverse_openmpEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this, double* %jacobian_out) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %jacobian_out.addr = alloca double*, align 8
  %n_block = alloca i32, align 4
  %n_extra = alloca i32, align 4
  %iblock = alloca i32, align 4
  %gradient_multipass_b = alloca %"class.std::vector.30", align 8
  %ref.tmp = alloca %"class.std::allocator.32", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %i_dependent = alloca i32, align 4
  %block_size = alloca i32, align 4
  %i = alloca i64, align 8
  %i13 = alloca i32, align 4
  %ist = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %statement = alloca %"struct.adept::internal::Statement"*, align 8
  %a = alloca [2 x double], align 16
  %n_non_zero = alloca i32, align 4
  %i34 = alloca i32, align 4
  %iop = alloca i32, align 4
  %multiplier = alloca double, align 8
  %gradient_multipass = alloca double*, align 8
  %i78 = alloca i32, align 4
  %iindep = alloca i32, align 4
  %i108 = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store double* %jacobian_out, double** %jacobian_out.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast i32* %n_block to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %call = call i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %add = add nsw i32 %call, 2
  %sub = sub nsw i32 %add, 1
  %div = sdiv i32 %sub, 2
  store i32 %div, i32* %n_block, align 4, !tbaa !20
  %1 = bitcast i32* %n_extra to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  %call2 = call i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %rem = srem i32 %call2, 2
  store i32 %rem, i32* %n_extra, align 4, !tbaa !20
  %2 = bitcast i32* %iblock to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #9
  %3 = bitcast %"class.std::vector.30"* %gradient_multipass_b to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %3) #9
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %4 = load i32, i32* %max_gradient_, align 8, !tbaa !148
  %conv = sext i32 %4 to i64
  %5 = bitcast %"class.std::allocator.32"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %5) #9
  call void @_ZNSaIN5adept5BlockILi2EdEEEC2Ev(%"class.std::allocator.32"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEC2EmRKS3_(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.33"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEED2Ev to void (%"class.std::allocator.32"*)*)(%"class.std::allocator.32"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.32"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  store i32 0, i32* %iblock, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc137, %invoke.cont
  %7 = load i32, i32* %iblock, align 4, !tbaa !20
  %8 = load i32, i32* %n_block, align 4, !tbaa !20
  %cmp = icmp slt i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end139

for.body:                                         ; preds = %for.cond
  %9 = bitcast i32* %i_dependent to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #9
  %10 = load i32, i32* %iblock, align 4, !tbaa !20
  %mul = mul nsw i32 2, %10
  store i32 %mul, i32* %i_dependent, align 4, !tbaa !20
  %11 = bitcast i32* %block_size to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #9
  store i32 2, i32* %block_size, align 4, !tbaa !20
  %12 = load i32, i32* %iblock, align 4, !tbaa !20
  %13 = load i32, i32* %n_block, align 4, !tbaa !20
  %sub3 = sub nsw i32 %13, 1
  %cmp4 = icmp eq i32 %12, %sub3
  br i1 %cmp4, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %14 = load i32, i32* %n_extra, align 4, !tbaa !20
  %cmp5 = icmp sgt i32 %14, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %15 = load i32, i32* %n_extra, align 4, !tbaa !20
  store i32 %15, i32* %block_size, align 4, !tbaa !20
  br label %if.end

lpad:                                             ; preds = %entry
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %exn.slot, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.33"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEED2Ev to void (%"class.std::allocator.32"*)*)(%"class.std::allocator.32"* nonnull dereferenceable(1) %ref.tmp) #9
  %19 = bitcast %"class.std::allocator.32"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #9
  br label %ehcleanup141

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %20 = bitcast i64* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #9
  store i64 0, i64* %i, align 8, !tbaa !13
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %if.end
  %21 = load i64, i64* %i, align 8, !tbaa !13
  %call7 = call i64 @_ZNKSt6vectorIN5adept5BlockILi2EdEESaIS2_EE4sizeEv(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b) #9
  %cmp8 = icmp ult i64 %21, %call7
  br i1 %cmp8, label %for.body9, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond6
  %22 = bitcast i64* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #9
  br label %for.end

for.body9:                                        ; preds = %for.cond6
  %23 = load i64, i64* %i, align 8, !tbaa !13
  %call10 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %23) #9
  invoke void @_ZN5adept5BlockILi2EdE4zeroEv(%"struct.adept::Block"* nonnull dereferenceable(16) %call10)
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %for.body9
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont12
  %24 = load i64, i64* %i, align 8, !tbaa !13
  %inc = add i64 %24, 1
  store i64 %inc, i64* %i, align 8, !tbaa !13
  br label %for.cond6, !llvm.loop !189

lpad11:                                           ; preds = %for.body9
  %25 = landingpad { i8*, i32 }
          cleanup
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %exn.slot, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %ehselector.slot, align 4
  %28 = bitcast i64* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #9
  br label %ehcleanup135

for.end:                                          ; preds = %for.cond.cleanup
  %29 = bitcast i32* %i13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #9
  store i32 0, i32* %i13, align 4, !tbaa !20
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc26, %for.end
  %30 = load i32, i32* %i13, align 4, !tbaa !20
  %31 = load i32, i32* %block_size, align 4, !tbaa !20
  %cmp15 = icmp slt i32 %30, %31
  br i1 %cmp15, label %for.body17, label %for.cond.cleanup16

for.cond.cleanup16:                               ; preds = %for.cond14
  %32 = bitcast i32* %i13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %32) #9
  br label %for.end28

for.body17:                                       ; preds = %for.cond14
  %dependent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  %33 = load i32, i32* %i_dependent, align 4, !tbaa !20
  %34 = load i32, i32* %i13, align 4, !tbaa !20
  %add18 = add nsw i32 %33, %34
  %conv19 = sext i32 %add18 to i64
  %call20 = call nonnull align 4 dereferenceable(4) i32* @_ZNKSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_, i64 %conv19) #9
  %35 = load i32, i32* %call20, align 4, !tbaa !20
  %conv21 = sext i32 %35 to i64
  %call22 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv21) #9
  %36 = load i32, i32* %i13, align 4, !tbaa !20
  %call25 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call22, i32 %36)
          to label %invoke.cont24 unwind label %lpad23

invoke.cont24:                                    ; preds = %for.body17
  store double 1.000000e+00, double* %call25, align 8, !tbaa !44
  br label %for.inc26

for.inc26:                                        ; preds = %invoke.cont24
  %37 = load i32, i32* %i13, align 4, !tbaa !20
  %inc27 = add nsw i32 %37, 1
  store i32 %inc27, i32* %i13, align 4, !tbaa !20
  br label %for.cond14, !llvm.loop !190

lpad23:                                           ; preds = %for.body17
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %exn.slot, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %ehselector.slot, align 4
  %41 = bitcast i32* %i13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %41) #9
  br label %ehcleanup135

for.end28:                                        ; preds = %for.cond.cleanup16
  %42 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %42) #9
  %43 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %43, i32 0, i32 3
  %44 = load i32, i32* %n_statements_, align 8, !tbaa !132
  %sub29 = sub nsw i32 %44, 1
  store i32 %sub29, i32* %ist, align 4, !tbaa !20
  br label %for.cond30

for.cond30:                                       ; preds = %for.inc98, %for.end28
  %45 = load i32, i32* %ist, align 4, !tbaa !20
  %cmp31 = icmp sgt i32 %45, 0
  br i1 %cmp31, label %for.body33, label %for.cond.cleanup32

for.cond.cleanup32:                               ; preds = %for.cond30
  store i32 11, i32* %cleanup.dest.slot, align 4
  %46 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %46) #9
  br label %for.end100

for.body33:                                       ; preds = %for.cond30
  %47 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %47) #9
  %48 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %48, i32 0, i32 0
  %49 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !128
  %50 = load i32, i32* %ist, align 4, !tbaa !20
  %idxprom = sext i32 %50 to i64
  %arrayidx = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %49, i64 %idxprom
  store %"struct.adept::internal::Statement"* %arrayidx, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %51 = bitcast [2 x double]* %a to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %51) #9
  %52 = bitcast i32* %n_non_zero to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #9
  store i32 0, i32* %n_non_zero, align 4, !tbaa !20
  %53 = bitcast i32* %i34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #9
  store i32 0, i32* %i34, align 4, !tbaa !20
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc56, %for.body33
  %54 = load i32, i32* %i34, align 4, !tbaa !20
  %55 = load i32, i32* %block_size, align 4, !tbaa !20
  %cmp36 = icmp slt i32 %54, %55
  br i1 %cmp36, label %for.body38, label %for.cond.cleanup37

for.cond.cleanup37:                               ; preds = %for.cond35
  store i32 14, i32* %cleanup.dest.slot, align 4
  %56 = bitcast i32* %i34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %56) #9
  br label %for.end58

for.body38:                                       ; preds = %for.cond35
  %57 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %57, i32 0, i32 0
  %58 = load i32, i32* %index, align 4, !tbaa !133
  %conv39 = sext i32 %58 to i64
  %call40 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv39) #9
  %59 = load i32, i32* %i34, align 4, !tbaa !20
  %call43 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call40, i32 %59)
          to label %invoke.cont42 unwind label %lpad41

invoke.cont42:                                    ; preds = %for.body38
  %60 = load double, double* %call43, align 8, !tbaa !44
  %61 = load i32, i32* %i34, align 4, !tbaa !20
  %idxprom44 = sext i32 %61 to i64
  %arrayidx45 = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 %idxprom44
  store double %60, double* %arrayidx45, align 8, !tbaa !44
  %62 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %index46 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %62, i32 0, i32 0
  %63 = load i32, i32* %index46, align 4, !tbaa !133
  %conv47 = sext i32 %63 to i64
  %call48 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv47) #9
  %64 = load i32, i32* %i34, align 4, !tbaa !20
  %call50 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call48, i32 %64)
          to label %invoke.cont49 unwind label %lpad41

invoke.cont49:                                    ; preds = %invoke.cont42
  store double 0.000000e+00, double* %call50, align 8, !tbaa !44
  %65 = load i32, i32* %i34, align 4, !tbaa !20
  %idxprom51 = sext i32 %65 to i64
  %arrayidx52 = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 %idxprom51
  %66 = load double, double* %arrayidx52, align 8, !tbaa !44
  %cmp53 = fcmp fast une double %66, 0.000000e+00
  br i1 %cmp53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %invoke.cont49
  store i32 1, i32* %n_non_zero, align 4, !tbaa !20
  br label %if.end55

lpad41:                                           ; preds = %invoke.cont42, %for.body38
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %exn.slot, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %ehselector.slot, align 4
  %70 = bitcast i32* %i34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %70) #9
  br label %ehcleanup

if.end55:                                         ; preds = %if.then54, %invoke.cont49
  br label %for.inc56

for.inc56:                                        ; preds = %if.end55
  %71 = load i32, i32* %i34, align 4, !tbaa !20
  %inc57 = add nsw i32 %71, 1
  store i32 %inc57, i32* %i34, align 4, !tbaa !20
  br label %for.cond35, !llvm.loop !191

for.end58:                                        ; preds = %for.cond.cleanup37
  %72 = load i32, i32* %n_non_zero, align 4, !tbaa !20
  %tobool = icmp ne i32 %72, 0
  br i1 %tobool, label %if.then59, label %if.end95

if.then59:                                        ; preds = %for.end58
  %73 = bitcast i32* %iop to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %73) #9
  %74 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_60 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %74, i32 0, i32 0
  %75 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_60, align 8, !tbaa !128
  %76 = load i32, i32* %ist, align 4, !tbaa !20
  %sub61 = sub nsw i32 %76, 1
  %idxprom62 = sext i32 %sub61 to i64
  %arrayidx63 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %75, i64 %idxprom62
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayidx63, i32 0, i32 1
  %77 = load i32, i32* %end_plus_one, align 4, !tbaa !135
  store i32 %77, i32* %iop, align 4, !tbaa !20
  br label %for.cond64

for.cond64:                                       ; preds = %for.inc92, %if.then59
  %78 = load i32, i32* %iop, align 4, !tbaa !20
  %79 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %end_plus_one65 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %79, i32 0, i32 1
  %80 = load i32, i32* %end_plus_one65, align 4, !tbaa !135
  %cmp66 = icmp slt i32 %78, %80
  br i1 %cmp66, label %for.body68, label %for.cond.cleanup67

for.cond.cleanup67:                               ; preds = %for.cond64
  store i32 17, i32* %cleanup.dest.slot, align 4
  %81 = bitcast i32* %iop to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %81) #9
  br label %for.end94

for.body68:                                       ; preds = %for.cond64
  %82 = bitcast double* %multiplier to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %82) #9
  %83 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %83, i32 0, i32 1
  %84 = load double*, double** %multiplier_, align 8, !tbaa !130
  %85 = load i32, i32* %iop, align 4, !tbaa !20
  %idxprom69 = sext i32 %85 to i64
  %arrayidx70 = getelementptr inbounds double, double* %84, i64 %idxprom69
  %86 = load double, double* %arrayidx70, align 8, !tbaa !44
  store double %86, double* %multiplier, align 8, !tbaa !44
  %87 = bitcast double** %gradient_multipass to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %87) #9
  %88 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %88, i32 0, i32 2
  %89 = load i32*, i32** %index_, align 8, !tbaa !131
  %90 = load i32, i32* %iop, align 4, !tbaa !20
  %idxprom71 = sext i32 %90 to i64
  %arrayidx72 = getelementptr inbounds i32, i32* %89, i64 %idxprom71
  %91 = load i32, i32* %arrayidx72, align 4, !tbaa !20
  %conv73 = sext i32 %91 to i64
  %call74 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv73) #9
  %call77 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call74, i32 0)
          to label %invoke.cont76 unwind label %lpad75

invoke.cont76:                                    ; preds = %for.body68
  store double* %call77, double** %gradient_multipass, align 8, !tbaa !2
  %92 = bitcast i32* %i78 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %92) #9
  store i32 0, i32* %i78, align 4, !tbaa !20
  br label %for.cond79

for.cond79:                                       ; preds = %for.inc89, %invoke.cont76
  %93 = load i32, i32* %i78, align 4, !tbaa !20
  %94 = load i32, i32* %block_size, align 4, !tbaa !20
  %cmp80 = icmp slt i32 %93, %94
  br i1 %cmp80, label %for.body82, label %for.cond.cleanup81

for.cond.cleanup81:                               ; preds = %for.cond79
  store i32 20, i32* %cleanup.dest.slot, align 4
  %95 = bitcast i32* %i78 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %95) #9
  br label %for.end91

lpad75:                                           ; preds = %for.body68
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %exn.slot, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %ehselector.slot, align 4
  %99 = bitcast double** %gradient_multipass to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %99) #9
  %100 = bitcast double* %multiplier to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #9
  %101 = bitcast i32* %iop to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %101) #9
  br label %ehcleanup

for.body82:                                       ; preds = %for.cond79
  %102 = load double, double* %multiplier, align 8, !tbaa !44
  %103 = load i32, i32* %i78, align 4, !tbaa !20
  %idxprom83 = sext i32 %103 to i64
  %arrayidx84 = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 %idxprom83
  %104 = load double, double* %arrayidx84, align 8, !tbaa !44
  %mul85 = fmul fast double %102, %104
  %105 = load double*, double** %gradient_multipass, align 8, !tbaa !2
  %106 = load i32, i32* %i78, align 4, !tbaa !20
  %idxprom86 = sext i32 %106 to i64
  %arrayidx87 = getelementptr inbounds double, double* %105, i64 %idxprom86
  %107 = load double, double* %arrayidx87, align 8, !tbaa !44
  %add88 = fadd fast double %107, %mul85
  store double %add88, double* %arrayidx87, align 8, !tbaa !44
  br label %for.inc89

for.inc89:                                        ; preds = %for.body82
  %108 = load i32, i32* %i78, align 4, !tbaa !20
  %inc90 = add nsw i32 %108, 1
  store i32 %inc90, i32* %i78, align 4, !tbaa !20
  br label %for.cond79, !llvm.loop !192

for.end91:                                        ; preds = %for.cond.cleanup81
  %109 = bitcast double** %gradient_multipass to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %109) #9
  %110 = bitcast double* %multiplier to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %110) #9
  br label %for.inc92

for.inc92:                                        ; preds = %for.end91
  %111 = load i32, i32* %iop, align 4, !tbaa !20
  %inc93 = add nsw i32 %111, 1
  store i32 %inc93, i32* %iop, align 4, !tbaa !20
  br label %for.cond64, !llvm.loop !193

for.end94:                                        ; preds = %for.cond.cleanup67
  br label %if.end95

if.end95:                                         ; preds = %for.end94, %for.end58
  %112 = bitcast i32* %n_non_zero to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %112) #9
  %113 = bitcast [2 x double]* %a to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %113) #9
  %114 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #9
  br label %for.inc98

for.inc98:                                        ; preds = %if.end95
  %115 = load i32, i32* %ist, align 4, !tbaa !20
  %dec = add nsw i32 %115, -1
  store i32 %dec, i32* %ist, align 4, !tbaa !20
  br label %for.cond30, !llvm.loop !194

ehcleanup:                                        ; preds = %lpad75, %lpad41
  %116 = bitcast i32* %n_non_zero to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %116) #9
  %117 = bitcast [2 x double]* %a to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %117) #9
  %118 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %118) #9
  %119 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %119) #9
  br label %ehcleanup135

for.end100:                                       ; preds = %for.cond.cleanup32
  %120 = bitcast i32* %iindep to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %120) #9
  store i32 0, i32* %iindep, align 4, !tbaa !20
  br label %for.cond101

for.cond101:                                      ; preds = %for.inc131, %for.end100
  %121 = load i32, i32* %iindep, align 4, !tbaa !20
  %call104 = invoke i32 @_ZNK5adept5Stack13n_independentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
          to label %invoke.cont103 unwind label %lpad102

invoke.cont103:                                   ; preds = %for.cond101
  %cmp105 = icmp slt i32 %121, %call104
  br i1 %cmp105, label %for.body107, label %for.cond.cleanup106

for.cond.cleanup106:                              ; preds = %invoke.cont103
  store i32 23, i32* %cleanup.dest.slot, align 4
  %122 = bitcast i32* %iindep to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %122) #9
  br label %for.end134

lpad102:                                          ; preds = %for.cond101
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %exn.slot, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %ehselector.slot, align 4
  br label %ehcleanup133

for.body107:                                      ; preds = %invoke.cont103
  %126 = bitcast i32* %i108 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %126) #9
  store i32 0, i32* %i108, align 4, !tbaa !20
  br label %for.cond109

for.cond109:                                      ; preds = %for.inc127, %for.body107
  %127 = load i32, i32* %i108, align 4, !tbaa !20
  %128 = load i32, i32* %block_size, align 4, !tbaa !20
  %cmp110 = icmp slt i32 %127, %128
  br i1 %cmp110, label %for.body112, label %for.cond.cleanup111

for.cond.cleanup111:                              ; preds = %for.cond109
  store i32 26, i32* %cleanup.dest.slot, align 4
  %129 = bitcast i32* %i108 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %129) #9
  br label %for.end130

for.body112:                                      ; preds = %for.cond109
  %independent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  %130 = load i32, i32* %iindep, align 4, !tbaa !20
  %conv113 = sext i32 %130 to i64
  %call114 = call nonnull align 4 dereferenceable(4) i32* @_ZNKSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_, i64 %conv113) #9
  %131 = load i32, i32* %call114, align 4, !tbaa !20
  %conv115 = sext i32 %131 to i64
  %call116 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv115) #9
  %132 = load i32, i32* %i108, align 4, !tbaa !20
  %call119 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call116, i32 %132)
          to label %invoke.cont118 unwind label %lpad117

invoke.cont118:                                   ; preds = %for.body112
  %133 = load double, double* %call119, align 8, !tbaa !44
  %134 = load double*, double** %jacobian_out.addr, align 8, !tbaa !2
  %135 = load i32, i32* %iindep, align 4, !tbaa !20
  %call121 = invoke i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
          to label %invoke.cont120 unwind label %lpad117

invoke.cont120:                                   ; preds = %invoke.cont118
  %mul122 = mul nsw i32 %135, %call121
  %136 = load i32, i32* %i_dependent, align 4, !tbaa !20
  %add123 = add nsw i32 %mul122, %136
  %137 = load i32, i32* %i108, align 4, !tbaa !20
  %add124 = add nsw i32 %add123, %137
  %idxprom125 = sext i32 %add124 to i64
  %arrayidx126 = getelementptr inbounds double, double* %134, i64 %idxprom125
  store double %133, double* %arrayidx126, align 8, !tbaa !44
  br label %for.inc127

for.inc127:                                       ; preds = %invoke.cont120
  %138 = load i32, i32* %i108, align 4, !tbaa !20
  %inc128 = add nsw i32 %138, 1
  store i32 %inc128, i32* %i108, align 4, !tbaa !20
  br label %for.cond109, !llvm.loop !195

lpad117:                                          ; preds = %invoke.cont118, %for.body112
  %139 = landingpad { i8*, i32 }
          cleanup
  %140 = extractvalue { i8*, i32 } %139, 0
  store i8* %140, i8** %exn.slot, align 8
  %141 = extractvalue { i8*, i32 } %139, 1
  store i32 %141, i32* %ehselector.slot, align 4
  %142 = bitcast i32* %i108 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %142) #9
  br label %ehcleanup133

for.end130:                                       ; preds = %for.cond.cleanup111
  br label %for.inc131

for.inc131:                                       ; preds = %for.end130
  %143 = load i32, i32* %iindep, align 4, !tbaa !20
  %inc132 = add nsw i32 %143, 1
  store i32 %inc132, i32* %iindep, align 4, !tbaa !20
  br label %for.cond101, !llvm.loop !196

ehcleanup133:                                     ; preds = %lpad117, %lpad102
  %144 = bitcast i32* %iindep to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %144) #9
  br label %ehcleanup135

for.end134:                                       ; preds = %for.cond.cleanup106
  %145 = bitcast i32* %block_size to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %145) #9
  %146 = bitcast i32* %i_dependent to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %146) #9
  br label %for.inc137

for.inc137:                                       ; preds = %for.end134
  %147 = load i32, i32* %iblock, align 4, !tbaa !20
  %inc138 = add nsw i32 %147, 1
  store i32 %inc138, i32* %iblock, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !197

ehcleanup135:                                     ; preds = %ehcleanup133, %ehcleanup, %lpad23, %lpad11
  %148 = bitcast i32* %block_size to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %148) #9
  %149 = bitcast i32* %i_dependent to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %149) #9
  call void @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b) #9
  br label %ehcleanup141

for.end139:                                       ; preds = %for.cond
  call void @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b) #9
  %150 = bitcast %"class.std::vector.30"* %gradient_multipass_b to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %150) #9
  %151 = bitcast i32* %iblock to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %151) #9
  %152 = bitcast i32* %n_extra to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %152) #9
  %153 = bitcast i32* %n_block to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %153) #9
  ret void

ehcleanup141:                                     ; preds = %ehcleanup135, %lpad
  %154 = bitcast %"class.std::vector.30"* %gradient_multipass_b to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %154) #9
  %155 = bitcast i32* %iblock to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %155) #9
  %156 = bitcast i32* %n_extra to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %156) #9
  %157 = bitcast i32* %n_block to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %157) #9
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup141
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val145 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val145
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSaIN5adept5BlockILi2EdEEEC2Ev(%"class.std::allocator.32"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.32"*, align 8
  store %"class.std::allocator.32"* %this, %"class.std::allocator.32"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.32"* %this1 to %"class.__gnu_cxx::new_allocator.33"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEEC2Ev(%"class.__gnu_cxx::new_allocator.33"* nonnull dereferenceable(1) %0) #9
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEC2EmRKS3_(%"class.std::vector.30"* nonnull dereferenceable(24) %this, i64 %__n, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.30"*, align 8
  %__n.addr = alloca i64, align 8
  %__a.addr = alloca %"class.std::allocator.32"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::vector.30"* %this, %"class.std::vector.30"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store %"class.std::allocator.32"* %__a, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.30"*, %"class.std::vector.30"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %2 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %call = call i64 @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_(i64 %1, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %2)
  %3 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %0, i64 %call, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %3)
  %4 = load i64, i64* %__n.addr, align 8, !tbaa !13
  invoke void @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE21_M_default_initializeEm(%"class.std::vector.30"* nonnull dereferenceable(24) %this1, i64 %4)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  store i8* %6, i8** %exn.slot, align 8
  %7 = extractvalue { i8*, i32 } %5, 1
  store i32 %7, i32* %ehselector.slot, align 4
  %8 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  call void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EED2Ev(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %8) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNKSt6vectorIN5adept5BlockILi2EdEESaIS2_EE4sizeEv(%"class.std::vector.30"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.30"*, align 8
  store %"class.std::vector.30"* %this, %"class.std::vector.30"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.30"*, %"class.std::vector.30"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %1, i32 0, i32 1
  %2 = load %"struct.adept::Block"*, %"struct.adept::Block"** %_M_finish, align 8, !tbaa !198
  %3 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %4, i32 0, i32 0
  %5 = load %"struct.adept::Block"*, %"struct.adept::Block"** %_M_start, align 8, !tbaa !200
  %sub.ptr.lhs.cast = ptrtoint %"struct.adept::Block"* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.adept::Block"* %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  ret i64 %sub.ptr.div
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %this, i64 %__n) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.30"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.30"* %this, %"class.std::vector.30"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::vector.30"*, %"class.std::vector.30"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load %"struct.adept::Block"*, %"struct.adept::Block"** %_M_start, align 8, !tbaa !200
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %2, i64 %3
  ret %"struct.adept::Block"* %add.ptr
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5BlockILi2EdE4zeroEv(%"struct.adept::Block"* nonnull dereferenceable(16) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Block"*, align 8
  %i = alloca i32, align 4
  store %"struct.adept::Block"* %this, %"struct.adept::Block"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Block"*, %"struct.adept::Block"** %this.addr, align 8
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !20
  %cmp = icmp slt i32 %1, 2
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %2) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %data = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %this1, i32 0, i32 0
  %3 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %data, i64 0, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !201

for.end:                                          ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev(%"class.std::vector.30"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.30"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::vector.30"* %this, %"class.std::vector.30"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.30"*, %"class.std::vector.30"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load %"struct.adept::Block"*, %"struct.adept::Block"** %_M_start, align 8, !tbaa !200
  %3 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %4, i32 0, i32 1
  %5 = load %"struct.adept::Block"*, %"struct.adept::Block"** %_M_finish, align 8, !tbaa !198
  %6 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.32"* @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %6) #9
  invoke void @_ZSt8_DestroyIPN5adept5BlockILi2EdEES2_EvT_S4_RSaIT0_E(%"struct.adept::Block"* %2, %"struct.adept::Block"* %5, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %7 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  call void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EED2Ev(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %7) #9
  ret void

lpad:                                             ; preds = %entry
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot, align 4
  %11 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  call void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EED2Ev(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %11) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack16jacobian_reverseEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this, double* %jacobian_out) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %jacobian_out.addr = alloca double*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp3 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %gradient_multipass_b = alloca %"class.std::vector.30", align 8
  %ref.tmp9 = alloca %"class.std::allocator.32", align 1
  %n_block = alloca i32, align 4
  %n_extra = alloca i32, align 4
  %i_dependent = alloca i32, align 4
  %iblock = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %i = alloca i64, align 8
  %i29 = alloca i32, align 4
  %ist = alloca i32, align 4
  %statement = alloca %"struct.adept::internal::Statement"*, align 8
  %a = alloca [2 x double], align 16
  %n_non_zero = alloca i32, align 4
  %i50 = alloca i32, align 4
  %iop = alloca i32, align 4
  %multiplier = alloca double, align 8
  %gradient_multipass = alloca double*, align 8
  %i95 = alloca i32, align 4
  %iindep = alloca i32, align 4
  %i128 = alloca i32, align 4
  %i163 = alloca i64, align 8
  %i176 = alloca i32, align 4
  %ist194 = alloca i32, align 4
  %statement201 = alloca %"struct.adept::internal::Statement"*, align 8
  %a205 = alloca [2 x double], align 16
  %n_non_zero206 = alloca i32, align 4
  %i207 = alloca i32, align 4
  %iop236 = alloca i32, align 4
  %multiplier247 = alloca double, align 8
  %gradient_multipass251 = alloca double*, align 8
  %i260 = alloca i32, align 4
  %iindep288 = alloca i32, align 4
  %i296 = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store double* %jacobian_out, double** %jacobian_out.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %independent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  %call = call zeroext i1 @_ZNKSt6vectorIiSaIiEE5emptyEv(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_) #9
  br i1 %call, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %dependent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  %call2 = call zeroext i1 @_ZNKSt6vectorIiSaIiEE5emptyEv(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_) #9
  br i1 %call2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::dependents_or_independents_not_identified"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp3) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.103, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp3)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  invoke void @_ZN5adept41dependents_or_independents_not_identifiedC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::dependents_or_independents_not_identified"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont5 unwind label %lpad4

invoke.cont5:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept41dependents_or_independents_not_identifiedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad4

lpad:                                             ; preds = %if.then
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad4:                                            ; preds = %invoke.cont5, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad4, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp3) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

if.end:                                           ; preds = %lor.lhs.false
  %11 = bitcast %"class.std::vector.30"* %gradient_multipass_b to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %11) #9
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %12 = load i32, i32* %max_gradient_, align 8, !tbaa !148
  %conv = sext i32 %12 to i64
  %13 = bitcast %"class.std::allocator.32"* %ref.tmp9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %13) #9
  call void @_ZNSaIN5adept5BlockILi2EdEEEC2Ev(%"class.std::allocator.32"* nonnull dereferenceable(1) %ref.tmp9) #9
  invoke void @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEC2EmRKS3_(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %ref.tmp9)
          to label %invoke.cont11 unwind label %lpad10

invoke.cont11:                                    ; preds = %if.end
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.33"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEED2Ev to void (%"class.std::allocator.32"*)*)(%"class.std::allocator.32"* nonnull dereferenceable(1) %ref.tmp9) #9
  %14 = bitcast %"class.std::allocator.32"* %ref.tmp9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %14) #9
  %15 = bitcast i32* %n_block to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #9
  %call16 = invoke i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
          to label %invoke.cont15 unwind label %lpad14

invoke.cont15:                                    ; preds = %invoke.cont11
  %div = sdiv i32 %call16, 2
  store i32 %div, i32* %n_block, align 4, !tbaa !20
  %16 = bitcast i32* %n_extra to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #9
  %call19 = invoke i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
          to label %invoke.cont18 unwind label %lpad17

invoke.cont18:                                    ; preds = %invoke.cont15
  %rem = srem i32 %call19, 2
  store i32 %rem, i32* %n_extra, align 4, !tbaa !20
  %17 = bitcast i32* %i_dependent to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %17) #9
  store i32 0, i32* %i_dependent, align 4, !tbaa !20
  %18 = bitcast i32* %iblock to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #9
  store i32 0, i32* %iblock, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc157, %invoke.cont18
  %19 = load i32, i32* %iblock, align 4, !tbaa !20
  %20 = load i32, i32* %n_block, align 4, !tbaa !20
  %cmp = icmp slt i32 %19, %20
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  %21 = bitcast i32* %iblock to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #9
  br label %for.end160

lpad10:                                           ; preds = %if.end
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %exn.slot, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.33"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEED2Ev to void (%"class.std::allocator.32"*)*)(%"class.std::allocator.32"* nonnull dereferenceable(1) %ref.tmp9) #9
  %25 = bitcast %"class.std::allocator.32"* %ref.tmp9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %25) #9
  br label %ehcleanup329

lpad14:                                           ; preds = %invoke.cont11
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %exn.slot, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %ehselector.slot, align 4
  br label %ehcleanup327

lpad17:                                           ; preds = %invoke.cont15
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %exn.slot, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %ehselector.slot, align 4
  br label %ehcleanup326

for.body:                                         ; preds = %for.cond
  %32 = bitcast i64* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #9
  store i64 0, i64* %i, align 8, !tbaa !13
  br label %for.cond20

for.cond20:                                       ; preds = %for.inc, %for.body
  %33 = load i64, i64* %i, align 8, !tbaa !13
  %call21 = call i64 @_ZNKSt6vectorIN5adept5BlockILi2EdEESaIS2_EE4sizeEv(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b) #9
  %cmp22 = icmp ult i64 %33, %call21
  br i1 %cmp22, label %for.body24, label %for.cond.cleanup23

for.cond.cleanup23:                               ; preds = %for.cond20
  store i32 5, i32* %cleanup.dest.slot, align 4
  %34 = bitcast i64* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %34) #9
  br label %for.end

for.body24:                                       ; preds = %for.cond20
  %35 = load i64, i64* %i, align 8, !tbaa !13
  %call25 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %35) #9
  invoke void @_ZN5adept5BlockILi2EdE4zeroEv(%"struct.adept::Block"* nonnull dereferenceable(16) %call25)
          to label %invoke.cont27 unwind label %lpad26

invoke.cont27:                                    ; preds = %for.body24
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont27
  %36 = load i64, i64* %i, align 8, !tbaa !13
  %inc = add i64 %36, 1
  store i64 %inc, i64* %i, align 8, !tbaa !13
  br label %for.cond20, !llvm.loop !202

lpad26:                                           ; preds = %for.body24
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %exn.slot, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %ehselector.slot, align 4
  %40 = bitcast i64* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #9
  br label %ehcleanup159

for.end:                                          ; preds = %for.cond.cleanup23
  %41 = bitcast i32* %i29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #9
  store i32 0, i32* %i29, align 4, !tbaa !20
  br label %for.cond30

for.cond30:                                       ; preds = %for.inc42, %for.end
  %42 = load i32, i32* %i29, align 4, !tbaa !20
  %cmp31 = icmp slt i32 %42, 2
  br i1 %cmp31, label %for.body33, label %for.cond.cleanup32

for.cond.cleanup32:                               ; preds = %for.cond30
  store i32 8, i32* %cleanup.dest.slot, align 4
  %43 = bitcast i32* %i29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %43) #9
  br label %for.end45

for.body33:                                       ; preds = %for.cond30
  %dependent_index_34 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  %44 = load i32, i32* %i_dependent, align 4, !tbaa !20
  %45 = load i32, i32* %i29, align 4, !tbaa !20
  %add = add nsw i32 %44, %45
  %conv35 = sext i32 %add to i64
  %call36 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_34, i64 %conv35) #9
  %46 = load i32, i32* %call36, align 4, !tbaa !20
  %conv37 = sext i32 %46 to i64
  %call38 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv37) #9
  %47 = load i32, i32* %i29, align 4, !tbaa !20
  %call41 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call38, i32 %47)
          to label %invoke.cont40 unwind label %lpad39

invoke.cont40:                                    ; preds = %for.body33
  store double 1.000000e+00, double* %call41, align 8, !tbaa !44
  br label %for.inc42

for.inc42:                                        ; preds = %invoke.cont40
  %48 = load i32, i32* %i29, align 4, !tbaa !20
  %inc43 = add nsw i32 %48, 1
  store i32 %inc43, i32* %i29, align 4, !tbaa !20
  br label %for.cond30, !llvm.loop !203

lpad39:                                           ; preds = %for.body33
  %49 = landingpad { i8*, i32 }
          cleanup
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %exn.slot, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %ehselector.slot, align 4
  %52 = bitcast i32* %i29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %52) #9
  br label %ehcleanup159

for.end45:                                        ; preds = %for.cond.cleanup32
  %53 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %53) #9
  %54 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %54, i32 0, i32 3
  %55 = load i32, i32* %n_statements_, align 8, !tbaa !132
  %sub = sub nsw i32 %55, 1
  store i32 %sub, i32* %ist, align 4, !tbaa !20
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc118, %for.end45
  %56 = load i32, i32* %ist, align 4, !tbaa !20
  %cmp47 = icmp sgt i32 %56, 0
  br i1 %cmp47, label %for.body49, label %for.cond.cleanup48

for.cond.cleanup48:                               ; preds = %for.cond46
  store i32 11, i32* %cleanup.dest.slot, align 4
  %57 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %57) #9
  br label %for.end120

for.body49:                                       ; preds = %for.cond46
  %58 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %58) #9
  %59 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %59, i32 0, i32 0
  %60 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !128
  %61 = load i32, i32* %ist, align 4, !tbaa !20
  %idxprom = sext i32 %61 to i64
  %arrayidx = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %60, i64 %idxprom
  store %"struct.adept::internal::Statement"* %arrayidx, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %62 = bitcast [2 x double]* %a to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %62) #9
  %63 = bitcast i32* %n_non_zero to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %63) #9
  store i32 0, i32* %n_non_zero, align 4, !tbaa !20
  %64 = bitcast i32* %i50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %64) #9
  store i32 0, i32* %i50, align 4, !tbaa !20
  br label %for.cond51

for.cond51:                                       ; preds = %for.inc72, %for.body49
  %65 = load i32, i32* %i50, align 4, !tbaa !20
  %cmp52 = icmp slt i32 %65, 2
  br i1 %cmp52, label %for.body54, label %for.cond.cleanup53

for.cond.cleanup53:                               ; preds = %for.cond51
  store i32 14, i32* %cleanup.dest.slot, align 4
  %66 = bitcast i32* %i50 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %66) #9
  br label %for.end75

for.body54:                                       ; preds = %for.cond51
  %67 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %67, i32 0, i32 0
  %68 = load i32, i32* %index, align 4, !tbaa !133
  %conv55 = sext i32 %68 to i64
  %call56 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv55) #9
  %69 = load i32, i32* %i50, align 4, !tbaa !20
  %call59 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call56, i32 %69)
          to label %invoke.cont58 unwind label %lpad57

invoke.cont58:                                    ; preds = %for.body54
  %70 = load double, double* %call59, align 8, !tbaa !44
  %71 = load i32, i32* %i50, align 4, !tbaa !20
  %idxprom60 = sext i32 %71 to i64
  %arrayidx61 = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 %idxprom60
  store double %70, double* %arrayidx61, align 8, !tbaa !44
  %72 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %index62 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %72, i32 0, i32 0
  %73 = load i32, i32* %index62, align 4, !tbaa !133
  %conv63 = sext i32 %73 to i64
  %call64 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv63) #9
  %74 = load i32, i32* %i50, align 4, !tbaa !20
  %call66 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call64, i32 %74)
          to label %invoke.cont65 unwind label %lpad57

invoke.cont65:                                    ; preds = %invoke.cont58
  store double 0.000000e+00, double* %call66, align 8, !tbaa !44
  %75 = load i32, i32* %i50, align 4, !tbaa !20
  %idxprom67 = sext i32 %75 to i64
  %arrayidx68 = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 %idxprom67
  %76 = load double, double* %arrayidx68, align 8, !tbaa !44
  %cmp69 = fcmp fast une double %76, 0.000000e+00
  br i1 %cmp69, label %if.then70, label %if.end71

if.then70:                                        ; preds = %invoke.cont65
  store i32 1, i32* %n_non_zero, align 4, !tbaa !20
  br label %if.end71

lpad57:                                           ; preds = %invoke.cont58, %for.body54
  %77 = landingpad { i8*, i32 }
          cleanup
  %78 = extractvalue { i8*, i32 } %77, 0
  store i8* %78, i8** %exn.slot, align 8
  %79 = extractvalue { i8*, i32 } %77, 1
  store i32 %79, i32* %ehselector.slot, align 4
  %80 = bitcast i32* %i50 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %80) #9
  br label %ehcleanup115

if.end71:                                         ; preds = %if.then70, %invoke.cont65
  br label %for.inc72

for.inc72:                                        ; preds = %if.end71
  %81 = load i32, i32* %i50, align 4, !tbaa !20
  %inc73 = add nsw i32 %81, 1
  store i32 %inc73, i32* %i50, align 4, !tbaa !20
  br label %for.cond51, !llvm.loop !204

for.end75:                                        ; preds = %for.cond.cleanup53
  %82 = load i32, i32* %n_non_zero, align 4, !tbaa !20
  %tobool = icmp ne i32 %82, 0
  br i1 %tobool, label %if.then76, label %if.end114

if.then76:                                        ; preds = %for.end75
  %83 = bitcast i32* %iop to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %83) #9
  %84 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_77 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %84, i32 0, i32 0
  %85 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_77, align 8, !tbaa !128
  %86 = load i32, i32* %ist, align 4, !tbaa !20
  %sub78 = sub nsw i32 %86, 1
  %idxprom79 = sext i32 %sub78 to i64
  %arrayidx80 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %85, i64 %idxprom79
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayidx80, i32 0, i32 1
  %87 = load i32, i32* %end_plus_one, align 4, !tbaa !135
  store i32 %87, i32* %iop, align 4, !tbaa !20
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc110, %if.then76
  %88 = load i32, i32* %iop, align 4, !tbaa !20
  %89 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement, align 8, !tbaa !2
  %end_plus_one82 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %89, i32 0, i32 1
  %90 = load i32, i32* %end_plus_one82, align 4, !tbaa !135
  %cmp83 = icmp slt i32 %88, %90
  br i1 %cmp83, label %for.body85, label %for.cond.cleanup84

for.cond.cleanup84:                               ; preds = %for.cond81
  store i32 17, i32* %cleanup.dest.slot, align 4
  %91 = bitcast i32* %iop to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %91) #9
  br label %for.end113

for.body85:                                       ; preds = %for.cond81
  %92 = bitcast double* %multiplier to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %92) #9
  %93 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %93, i32 0, i32 1
  %94 = load double*, double** %multiplier_, align 8, !tbaa !130
  %95 = load i32, i32* %iop, align 4, !tbaa !20
  %idxprom86 = sext i32 %95 to i64
  %arrayidx87 = getelementptr inbounds double, double* %94, i64 %idxprom86
  %96 = load double, double* %arrayidx87, align 8, !tbaa !44
  store double %96, double* %multiplier, align 8, !tbaa !44
  %97 = bitcast double** %gradient_multipass to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %97) #9
  %98 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %98, i32 0, i32 2
  %99 = load i32*, i32** %index_, align 8, !tbaa !131
  %100 = load i32, i32* %iop, align 4, !tbaa !20
  %idxprom88 = sext i32 %100 to i64
  %arrayidx89 = getelementptr inbounds i32, i32* %99, i64 %idxprom88
  %101 = load i32, i32* %arrayidx89, align 4, !tbaa !20
  %conv90 = sext i32 %101 to i64
  %call91 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv90) #9
  %call94 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call91, i32 0)
          to label %invoke.cont93 unwind label %lpad92

invoke.cont93:                                    ; preds = %for.body85
  store double* %call94, double** %gradient_multipass, align 8, !tbaa !2
  %102 = bitcast i32* %i95 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %102) #9
  store i32 0, i32* %i95, align 4, !tbaa !20
  br label %for.cond96

for.cond96:                                       ; preds = %for.inc105, %invoke.cont93
  %103 = load i32, i32* %i95, align 4, !tbaa !20
  %cmp97 = icmp slt i32 %103, 2
  br i1 %cmp97, label %for.body99, label %for.cond.cleanup98

for.cond.cleanup98:                               ; preds = %for.cond96
  store i32 20, i32* %cleanup.dest.slot, align 4
  %104 = bitcast i32* %i95 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %104) #9
  br label %for.end107

lpad92:                                           ; preds = %for.body85
  %105 = landingpad { i8*, i32 }
          cleanup
  %106 = extractvalue { i8*, i32 } %105, 0
  store i8* %106, i8** %exn.slot, align 8
  %107 = extractvalue { i8*, i32 } %105, 1
  store i32 %107, i32* %ehselector.slot, align 4
  %108 = bitcast double** %gradient_multipass to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %108) #9
  %109 = bitcast double* %multiplier to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %109) #9
  %110 = bitcast i32* %iop to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %110) #9
  br label %ehcleanup115

for.body99:                                       ; preds = %for.cond96
  %111 = load double, double* %multiplier, align 8, !tbaa !44
  %112 = load i32, i32* %i95, align 4, !tbaa !20
  %idxprom100 = sext i32 %112 to i64
  %arrayidx101 = getelementptr inbounds [2 x double], [2 x double]* %a, i64 0, i64 %idxprom100
  %113 = load double, double* %arrayidx101, align 8, !tbaa !44
  %mul = fmul fast double %111, %113
  %114 = load double*, double** %gradient_multipass, align 8, !tbaa !2
  %115 = load i32, i32* %i95, align 4, !tbaa !20
  %idxprom102 = sext i32 %115 to i64
  %arrayidx103 = getelementptr inbounds double, double* %114, i64 %idxprom102
  %116 = load double, double* %arrayidx103, align 8, !tbaa !44
  %add104 = fadd fast double %116, %mul
  store double %add104, double* %arrayidx103, align 8, !tbaa !44
  br label %for.inc105

for.inc105:                                       ; preds = %for.body99
  %117 = load i32, i32* %i95, align 4, !tbaa !20
  %inc106 = add nsw i32 %117, 1
  store i32 %inc106, i32* %i95, align 4, !tbaa !20
  br label %for.cond96, !llvm.loop !205

for.end107:                                       ; preds = %for.cond.cleanup98
  %118 = bitcast double** %gradient_multipass to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %118) #9
  %119 = bitcast double* %multiplier to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %119) #9
  br label %for.inc110

for.inc110:                                       ; preds = %for.end107
  %120 = load i32, i32* %iop, align 4, !tbaa !20
  %inc111 = add nsw i32 %120, 1
  store i32 %inc111, i32* %iop, align 4, !tbaa !20
  br label %for.cond81, !llvm.loop !206

for.end113:                                       ; preds = %for.cond.cleanup84
  br label %if.end114

if.end114:                                        ; preds = %for.end113, %for.end75
  %121 = bitcast i32* %n_non_zero to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %121) #9
  %122 = bitcast [2 x double]* %a to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %122) #9
  %123 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #9
  br label %for.inc118

for.inc118:                                       ; preds = %if.end114
  %124 = load i32, i32* %ist, align 4, !tbaa !20
  %dec = add nsw i32 %124, -1
  store i32 %dec, i32* %ist, align 4, !tbaa !20
  br label %for.cond46, !llvm.loop !207

ehcleanup115:                                     ; preds = %lpad92, %lpad57
  %125 = bitcast i32* %n_non_zero to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %125) #9
  %126 = bitcast [2 x double]* %a to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %126) #9
  %127 = bitcast %"struct.adept::internal::Statement"** %statement to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %127) #9
  %128 = bitcast i32* %ist to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %128) #9
  br label %ehcleanup159

for.end120:                                       ; preds = %for.cond.cleanup48
  %129 = bitcast i32* %iindep to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %129) #9
  store i32 0, i32* %iindep, align 4, !tbaa !20
  br label %for.cond121

for.cond121:                                      ; preds = %for.inc152, %for.end120
  %130 = load i32, i32* %iindep, align 4, !tbaa !20
  %call124 = invoke i32 @_ZNK5adept5Stack13n_independentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
          to label %invoke.cont123 unwind label %lpad122

invoke.cont123:                                   ; preds = %for.cond121
  %cmp125 = icmp slt i32 %130, %call124
  br i1 %cmp125, label %for.body127, label %for.cond.cleanup126

for.cond.cleanup126:                              ; preds = %invoke.cont123
  store i32 23, i32* %cleanup.dest.slot, align 4
  %131 = bitcast i32* %iindep to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %131) #9
  br label %for.end155

lpad122:                                          ; preds = %for.cond121
  %132 = landingpad { i8*, i32 }
          cleanup
  %133 = extractvalue { i8*, i32 } %132, 0
  store i8* %133, i8** %exn.slot, align 8
  %134 = extractvalue { i8*, i32 } %132, 1
  store i32 %134, i32* %ehselector.slot, align 4
  br label %ehcleanup154

for.body127:                                      ; preds = %invoke.cont123
  %135 = bitcast i32* %i128 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %135) #9
  store i32 0, i32* %i128, align 4, !tbaa !20
  br label %for.cond129

for.cond129:                                      ; preds = %for.inc148, %for.body127
  %136 = load i32, i32* %i128, align 4, !tbaa !20
  %cmp130 = icmp slt i32 %136, 2
  br i1 %cmp130, label %for.body132, label %for.cond.cleanup131

for.cond.cleanup131:                              ; preds = %for.cond129
  store i32 26, i32* %cleanup.dest.slot, align 4
  %137 = bitcast i32* %i128 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %137) #9
  br label %for.end151

for.body132:                                      ; preds = %for.cond129
  %independent_index_133 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  %138 = load i32, i32* %iindep, align 4, !tbaa !20
  %conv134 = sext i32 %138 to i64
  %call135 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_133, i64 %conv134) #9
  %139 = load i32, i32* %call135, align 4, !tbaa !20
  %conv136 = sext i32 %139 to i64
  %call137 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv136) #9
  %140 = load i32, i32* %i128, align 4, !tbaa !20
  %call140 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call137, i32 %140)
          to label %invoke.cont139 unwind label %lpad138

invoke.cont139:                                   ; preds = %for.body132
  %141 = load double, double* %call140, align 8, !tbaa !44
  %142 = load double*, double** %jacobian_out.addr, align 8, !tbaa !2
  %143 = load i32, i32* %iindep, align 4, !tbaa !20
  %call142 = invoke i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
          to label %invoke.cont141 unwind label %lpad138

invoke.cont141:                                   ; preds = %invoke.cont139
  %mul143 = mul nsw i32 %143, %call142
  %144 = load i32, i32* %i_dependent, align 4, !tbaa !20
  %add144 = add nsw i32 %mul143, %144
  %145 = load i32, i32* %i128, align 4, !tbaa !20
  %add145 = add nsw i32 %add144, %145
  %idxprom146 = sext i32 %add145 to i64
  %arrayidx147 = getelementptr inbounds double, double* %142, i64 %idxprom146
  store double %141, double* %arrayidx147, align 8, !tbaa !44
  br label %for.inc148

for.inc148:                                       ; preds = %invoke.cont141
  %146 = load i32, i32* %i128, align 4, !tbaa !20
  %inc149 = add nsw i32 %146, 1
  store i32 %inc149, i32* %i128, align 4, !tbaa !20
  br label %for.cond129, !llvm.loop !208

lpad138:                                          ; preds = %invoke.cont139, %for.body132
  %147 = landingpad { i8*, i32 }
          cleanup
  %148 = extractvalue { i8*, i32 } %147, 0
  store i8* %148, i8** %exn.slot, align 8
  %149 = extractvalue { i8*, i32 } %147, 1
  store i32 %149, i32* %ehselector.slot, align 4
  %150 = bitcast i32* %i128 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %150) #9
  br label %ehcleanup154

for.end151:                                       ; preds = %for.cond.cleanup131
  br label %for.inc152

for.inc152:                                       ; preds = %for.end151
  %151 = load i32, i32* %iindep, align 4, !tbaa !20
  %inc153 = add nsw i32 %151, 1
  store i32 %inc153, i32* %iindep, align 4, !tbaa !20
  br label %for.cond121, !llvm.loop !209

ehcleanup154:                                     ; preds = %lpad138, %lpad122
  %152 = bitcast i32* %iindep to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %152) #9
  br label %ehcleanup159

for.end155:                                       ; preds = %for.cond.cleanup126
  %153 = load i32, i32* %i_dependent, align 4, !tbaa !20
  %add156 = add nsw i32 %153, 2
  store i32 %add156, i32* %i_dependent, align 4, !tbaa !20
  br label %for.inc157

for.inc157:                                       ; preds = %for.end155
  %154 = load i32, i32* %iblock, align 4, !tbaa !20
  %inc158 = add nsw i32 %154, 1
  store i32 %inc158, i32* %iblock, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !210

ehcleanup159:                                     ; preds = %ehcleanup154, %ehcleanup115, %lpad39, %lpad26
  %155 = bitcast i32* %iblock to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %155) #9
  br label %ehcleanup325

for.end160:                                       ; preds = %for.cond.cleanup
  %156 = load i32, i32* %n_extra, align 4, !tbaa !20
  %cmp161 = icmp sgt i32 %156, 0
  br i1 %cmp161, label %if.then162, label %if.end324

if.then162:                                       ; preds = %for.end160
  %157 = bitcast i64* %i163 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %157) #9
  store i64 0, i64* %i163, align 8, !tbaa !13
  br label %for.cond164

for.cond164:                                      ; preds = %for.inc172, %if.then162
  %158 = load i64, i64* %i163, align 8, !tbaa !13
  %call165 = call i64 @_ZNKSt6vectorIN5adept5BlockILi2EdEESaIS2_EE4sizeEv(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b) #9
  %cmp166 = icmp ult i64 %158, %call165
  br i1 %cmp166, label %for.body168, label %for.cond.cleanup167

for.cond.cleanup167:                              ; preds = %for.cond164
  store i32 29, i32* %cleanup.dest.slot, align 4
  %159 = bitcast i64* %i163 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %159) #9
  br label %for.end175

for.body168:                                      ; preds = %for.cond164
  %160 = load i64, i64* %i163, align 8, !tbaa !13
  %call169 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %160) #9
  invoke void @_ZN5adept5BlockILi2EdE4zeroEv(%"struct.adept::Block"* nonnull dereferenceable(16) %call169)
          to label %invoke.cont171 unwind label %lpad170

invoke.cont171:                                   ; preds = %for.body168
  br label %for.inc172

for.inc172:                                       ; preds = %invoke.cont171
  %161 = load i64, i64* %i163, align 8, !tbaa !13
  %inc173 = add i64 %161, 1
  store i64 %inc173, i64* %i163, align 8, !tbaa !13
  br label %for.cond164, !llvm.loop !211

lpad170:                                          ; preds = %for.body168
  %162 = landingpad { i8*, i32 }
          cleanup
  %163 = extractvalue { i8*, i32 } %162, 0
  store i8* %163, i8** %exn.slot, align 8
  %164 = extractvalue { i8*, i32 } %162, 1
  store i32 %164, i32* %ehselector.slot, align 4
  %165 = bitcast i64* %i163 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %165) #9
  br label %ehcleanup325

for.end175:                                       ; preds = %for.cond.cleanup167
  %166 = bitcast i32* %i176 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %166) #9
  store i32 0, i32* %i176, align 4, !tbaa !20
  br label %for.cond177

for.cond177:                                      ; preds = %for.inc190, %for.end175
  %167 = load i32, i32* %i176, align 4, !tbaa !20
  %168 = load i32, i32* %n_extra, align 4, !tbaa !20
  %cmp178 = icmp slt i32 %167, %168
  br i1 %cmp178, label %for.body180, label %for.cond.cleanup179

for.cond.cleanup179:                              ; preds = %for.cond177
  store i32 32, i32* %cleanup.dest.slot, align 4
  %169 = bitcast i32* %i176 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %169) #9
  br label %for.end193

for.body180:                                      ; preds = %for.cond177
  %dependent_index_181 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  %170 = load i32, i32* %i_dependent, align 4, !tbaa !20
  %171 = load i32, i32* %i176, align 4, !tbaa !20
  %add182 = add nsw i32 %170, %171
  %conv183 = sext i32 %add182 to i64
  %call184 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_181, i64 %conv183) #9
  %172 = load i32, i32* %call184, align 4, !tbaa !20
  %conv185 = sext i32 %172 to i64
  %call186 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv185) #9
  %173 = load i32, i32* %i176, align 4, !tbaa !20
  %call189 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call186, i32 %173)
          to label %invoke.cont188 unwind label %lpad187

invoke.cont188:                                   ; preds = %for.body180
  store double 1.000000e+00, double* %call189, align 8, !tbaa !44
  br label %for.inc190

for.inc190:                                       ; preds = %invoke.cont188
  %174 = load i32, i32* %i176, align 4, !tbaa !20
  %inc191 = add nsw i32 %174, 1
  store i32 %inc191, i32* %i176, align 4, !tbaa !20
  br label %for.cond177, !llvm.loop !212

lpad187:                                          ; preds = %for.body180
  %175 = landingpad { i8*, i32 }
          cleanup
  %176 = extractvalue { i8*, i32 } %175, 0
  store i8* %176, i8** %exn.slot, align 8
  %177 = extractvalue { i8*, i32 } %175, 1
  store i32 %177, i32* %ehselector.slot, align 4
  %178 = bitcast i32* %i176 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %178) #9
  br label %ehcleanup325

for.end193:                                       ; preds = %for.cond.cleanup179
  %179 = bitcast i32* %ist194 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %179) #9
  %180 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %n_statements_195 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %180, i32 0, i32 3
  %181 = load i32, i32* %n_statements_195, align 8, !tbaa !132
  %sub196 = sub nsw i32 %181, 1
  store i32 %sub196, i32* %ist194, align 4, !tbaa !20
  br label %for.cond197

for.cond197:                                      ; preds = %for.inc284, %for.end193
  %182 = load i32, i32* %ist194, align 4, !tbaa !20
  %cmp198 = icmp sgt i32 %182, 0
  br i1 %cmp198, label %for.body200, label %for.cond.cleanup199

for.cond.cleanup199:                              ; preds = %for.cond197
  store i32 35, i32* %cleanup.dest.slot, align 4
  %183 = bitcast i32* %ist194 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %183) #9
  br label %for.end287

for.body200:                                      ; preds = %for.cond197
  %184 = bitcast %"struct.adept::internal::Statement"** %statement201 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %184) #9
  %185 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_202 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %185, i32 0, i32 0
  %186 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_202, align 8, !tbaa !128
  %187 = load i32, i32* %ist194, align 4, !tbaa !20
  %idxprom203 = sext i32 %187 to i64
  %arrayidx204 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %186, i64 %idxprom203
  store %"struct.adept::internal::Statement"* %arrayidx204, %"struct.adept::internal::Statement"** %statement201, align 8, !tbaa !2
  %188 = bitcast [2 x double]* %a205 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %188) #9
  %189 = bitcast i32* %n_non_zero206 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %189) #9
  store i32 0, i32* %n_non_zero206, align 4, !tbaa !20
  %190 = bitcast i32* %i207 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %190) #9
  store i32 0, i32* %i207, align 4, !tbaa !20
  br label %for.cond208

for.cond208:                                      ; preds = %for.inc230, %for.body200
  %191 = load i32, i32* %i207, align 4, !tbaa !20
  %192 = load i32, i32* %n_extra, align 4, !tbaa !20
  %cmp209 = icmp slt i32 %191, %192
  br i1 %cmp209, label %for.body211, label %for.cond.cleanup210

for.cond.cleanup210:                              ; preds = %for.cond208
  store i32 38, i32* %cleanup.dest.slot, align 4
  %193 = bitcast i32* %i207 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %193) #9
  br label %for.end233

for.body211:                                      ; preds = %for.cond208
  %194 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement201, align 8, !tbaa !2
  %index212 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %194, i32 0, i32 0
  %195 = load i32, i32* %index212, align 4, !tbaa !133
  %conv213 = sext i32 %195 to i64
  %call214 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv213) #9
  %196 = load i32, i32* %i207, align 4, !tbaa !20
  %call217 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call214, i32 %196)
          to label %invoke.cont216 unwind label %lpad215

invoke.cont216:                                   ; preds = %for.body211
  %197 = load double, double* %call217, align 8, !tbaa !44
  %198 = load i32, i32* %i207, align 4, !tbaa !20
  %idxprom218 = sext i32 %198 to i64
  %arrayidx219 = getelementptr inbounds [2 x double], [2 x double]* %a205, i64 0, i64 %idxprom218
  store double %197, double* %arrayidx219, align 8, !tbaa !44
  %199 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement201, align 8, !tbaa !2
  %index220 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %199, i32 0, i32 0
  %200 = load i32, i32* %index220, align 4, !tbaa !133
  %conv221 = sext i32 %200 to i64
  %call222 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv221) #9
  %201 = load i32, i32* %i207, align 4, !tbaa !20
  %call224 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call222, i32 %201)
          to label %invoke.cont223 unwind label %lpad215

invoke.cont223:                                   ; preds = %invoke.cont216
  store double 0.000000e+00, double* %call224, align 8, !tbaa !44
  %202 = load i32, i32* %i207, align 4, !tbaa !20
  %idxprom225 = sext i32 %202 to i64
  %arrayidx226 = getelementptr inbounds [2 x double], [2 x double]* %a205, i64 0, i64 %idxprom225
  %203 = load double, double* %arrayidx226, align 8, !tbaa !44
  %cmp227 = fcmp fast une double %203, 0.000000e+00
  br i1 %cmp227, label %if.then228, label %if.end229

if.then228:                                       ; preds = %invoke.cont223
  store i32 1, i32* %n_non_zero206, align 4, !tbaa !20
  br label %if.end229

lpad215:                                          ; preds = %invoke.cont216, %for.body211
  %204 = landingpad { i8*, i32 }
          cleanup
  %205 = extractvalue { i8*, i32 } %204, 0
  store i8* %205, i8** %exn.slot, align 8
  %206 = extractvalue { i8*, i32 } %204, 1
  store i32 %206, i32* %ehselector.slot, align 4
  %207 = bitcast i32* %i207 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %207) #9
  br label %ehcleanup281

if.end229:                                        ; preds = %if.then228, %invoke.cont223
  br label %for.inc230

for.inc230:                                       ; preds = %if.end229
  %208 = load i32, i32* %i207, align 4, !tbaa !20
  %inc231 = add nsw i32 %208, 1
  store i32 %inc231, i32* %i207, align 4, !tbaa !20
  br label %for.cond208, !llvm.loop !213

for.end233:                                       ; preds = %for.cond.cleanup210
  %209 = load i32, i32* %n_non_zero206, align 4, !tbaa !20
  %tobool234 = icmp ne i32 %209, 0
  br i1 %tobool234, label %if.then235, label %if.end280

if.then235:                                       ; preds = %for.end233
  %210 = bitcast i32* %iop236 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %210) #9
  %211 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %statement_237 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %211, i32 0, i32 0
  %212 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_237, align 8, !tbaa !128
  %213 = load i32, i32* %ist194, align 4, !tbaa !20
  %sub238 = sub nsw i32 %213, 1
  %idxprom239 = sext i32 %sub238 to i64
  %arrayidx240 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %212, i64 %idxprom239
  %end_plus_one241 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayidx240, i32 0, i32 1
  %214 = load i32, i32* %end_plus_one241, align 4, !tbaa !135
  store i32 %214, i32* %iop236, align 4, !tbaa !20
  br label %for.cond242

for.cond242:                                      ; preds = %for.inc276, %if.then235
  %215 = load i32, i32* %iop236, align 4, !tbaa !20
  %216 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement201, align 8, !tbaa !2
  %end_plus_one243 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %216, i32 0, i32 1
  %217 = load i32, i32* %end_plus_one243, align 4, !tbaa !135
  %cmp244 = icmp slt i32 %215, %217
  br i1 %cmp244, label %for.body246, label %for.cond.cleanup245

for.cond.cleanup245:                              ; preds = %for.cond242
  store i32 41, i32* %cleanup.dest.slot, align 4
  %218 = bitcast i32* %iop236 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %218) #9
  br label %for.end279

for.body246:                                      ; preds = %for.cond242
  %219 = bitcast double* %multiplier247 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %219) #9
  %220 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %multiplier_248 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %220, i32 0, i32 1
  %221 = load double*, double** %multiplier_248, align 8, !tbaa !130
  %222 = load i32, i32* %iop236, align 4, !tbaa !20
  %idxprom249 = sext i32 %222 to i64
  %arrayidx250 = getelementptr inbounds double, double* %221, i64 %idxprom249
  %223 = load double, double* %arrayidx250, align 8, !tbaa !44
  store double %223, double* %multiplier247, align 8, !tbaa !44
  %224 = bitcast double** %gradient_multipass251 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %224) #9
  %225 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %index_252 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %225, i32 0, i32 2
  %226 = load i32*, i32** %index_252, align 8, !tbaa !131
  %227 = load i32, i32* %iop236, align 4, !tbaa !20
  %idxprom253 = sext i32 %227 to i64
  %arrayidx254 = getelementptr inbounds i32, i32* %226, i64 %idxprom253
  %228 = load i32, i32* %arrayidx254, align 4, !tbaa !20
  %conv255 = sext i32 %228 to i64
  %call256 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv255) #9
  %call259 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call256, i32 0)
          to label %invoke.cont258 unwind label %lpad257

invoke.cont258:                                   ; preds = %for.body246
  store double* %call259, double** %gradient_multipass251, align 8, !tbaa !2
  %229 = bitcast i32* %i260 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %229) #9
  store i32 0, i32* %i260, align 4, !tbaa !20
  br label %for.cond261

for.cond261:                                      ; preds = %for.inc271, %invoke.cont258
  %230 = load i32, i32* %i260, align 4, !tbaa !20
  %231 = load i32, i32* %n_extra, align 4, !tbaa !20
  %cmp262 = icmp slt i32 %230, %231
  br i1 %cmp262, label %for.body264, label %for.cond.cleanup263

for.cond.cleanup263:                              ; preds = %for.cond261
  store i32 44, i32* %cleanup.dest.slot, align 4
  %232 = bitcast i32* %i260 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %232) #9
  br label %for.end273

lpad257:                                          ; preds = %for.body246
  %233 = landingpad { i8*, i32 }
          cleanup
  %234 = extractvalue { i8*, i32 } %233, 0
  store i8* %234, i8** %exn.slot, align 8
  %235 = extractvalue { i8*, i32 } %233, 1
  store i32 %235, i32* %ehselector.slot, align 4
  %236 = bitcast double** %gradient_multipass251 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %236) #9
  %237 = bitcast double* %multiplier247 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %237) #9
  %238 = bitcast i32* %iop236 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %238) #9
  br label %ehcleanup281

for.body264:                                      ; preds = %for.cond261
  %239 = load double, double* %multiplier247, align 8, !tbaa !44
  %240 = load i32, i32* %i260, align 4, !tbaa !20
  %idxprom265 = sext i32 %240 to i64
  %arrayidx266 = getelementptr inbounds [2 x double], [2 x double]* %a205, i64 0, i64 %idxprom265
  %241 = load double, double* %arrayidx266, align 8, !tbaa !44
  %mul267 = fmul fast double %239, %241
  %242 = load double*, double** %gradient_multipass251, align 8, !tbaa !2
  %243 = load i32, i32* %i260, align 4, !tbaa !20
  %idxprom268 = sext i32 %243 to i64
  %arrayidx269 = getelementptr inbounds double, double* %242, i64 %idxprom268
  %244 = load double, double* %arrayidx269, align 8, !tbaa !44
  %add270 = fadd fast double %244, %mul267
  store double %add270, double* %arrayidx269, align 8, !tbaa !44
  br label %for.inc271

for.inc271:                                       ; preds = %for.body264
  %245 = load i32, i32* %i260, align 4, !tbaa !20
  %inc272 = add nsw i32 %245, 1
  store i32 %inc272, i32* %i260, align 4, !tbaa !20
  br label %for.cond261, !llvm.loop !214

for.end273:                                       ; preds = %for.cond.cleanup263
  %246 = bitcast double** %gradient_multipass251 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %246) #9
  %247 = bitcast double* %multiplier247 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %247) #9
  br label %for.inc276

for.inc276:                                       ; preds = %for.end273
  %248 = load i32, i32* %iop236, align 4, !tbaa !20
  %inc277 = add nsw i32 %248, 1
  store i32 %inc277, i32* %iop236, align 4, !tbaa !20
  br label %for.cond242, !llvm.loop !215

for.end279:                                       ; preds = %for.cond.cleanup245
  br label %if.end280

if.end280:                                        ; preds = %for.end279, %for.end233
  %249 = bitcast i32* %n_non_zero206 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %249) #9
  %250 = bitcast [2 x double]* %a205 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %250) #9
  %251 = bitcast %"struct.adept::internal::Statement"** %statement201 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %251) #9
  br label %for.inc284

for.inc284:                                       ; preds = %if.end280
  %252 = load i32, i32* %ist194, align 4, !tbaa !20
  %dec285 = add nsw i32 %252, -1
  store i32 %dec285, i32* %ist194, align 4, !tbaa !20
  br label %for.cond197, !llvm.loop !216

ehcleanup281:                                     ; preds = %lpad257, %lpad215
  %253 = bitcast i32* %n_non_zero206 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %253) #9
  %254 = bitcast [2 x double]* %a205 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %254) #9
  %255 = bitcast %"struct.adept::internal::Statement"** %statement201 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %255) #9
  %256 = bitcast i32* %ist194 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %256) #9
  br label %ehcleanup325

for.end287:                                       ; preds = %for.cond.cleanup199
  %257 = bitcast i32* %iindep288 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %257) #9
  store i32 0, i32* %iindep288, align 4, !tbaa !20
  br label %for.cond289

for.cond289:                                      ; preds = %for.inc320, %for.end287
  %258 = load i32, i32* %iindep288, align 4, !tbaa !20
  %call292 = invoke i32 @_ZNK5adept5Stack13n_independentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
          to label %invoke.cont291 unwind label %lpad290

invoke.cont291:                                   ; preds = %for.cond289
  %cmp293 = icmp slt i32 %258, %call292
  br i1 %cmp293, label %for.body295, label %for.cond.cleanup294

for.cond.cleanup294:                              ; preds = %invoke.cont291
  store i32 47, i32* %cleanup.dest.slot, align 4
  %259 = bitcast i32* %iindep288 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %259) #9
  br label %for.end323

lpad290:                                          ; preds = %for.cond289
  %260 = landingpad { i8*, i32 }
          cleanup
  %261 = extractvalue { i8*, i32 } %260, 0
  store i8* %261, i8** %exn.slot, align 8
  %262 = extractvalue { i8*, i32 } %260, 1
  store i32 %262, i32* %ehselector.slot, align 4
  br label %ehcleanup322

for.body295:                                      ; preds = %invoke.cont291
  %263 = bitcast i32* %i296 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %263) #9
  store i32 0, i32* %i296, align 4, !tbaa !20
  br label %for.cond297

for.cond297:                                      ; preds = %for.inc316, %for.body295
  %264 = load i32, i32* %i296, align 4, !tbaa !20
  %265 = load i32, i32* %n_extra, align 4, !tbaa !20
  %cmp298 = icmp slt i32 %264, %265
  br i1 %cmp298, label %for.body300, label %for.cond.cleanup299

for.cond.cleanup299:                              ; preds = %for.cond297
  store i32 50, i32* %cleanup.dest.slot, align 4
  %266 = bitcast i32* %i296 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %266) #9
  br label %for.end319

for.body300:                                      ; preds = %for.cond297
  %independent_index_301 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  %267 = load i32, i32* %iindep288, align 4, !tbaa !20
  %conv302 = sext i32 %267 to i64
  %call303 = call nonnull align 4 dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_301, i64 %conv302) #9
  %268 = load i32, i32* %call303, align 4, !tbaa !20
  %conv304 = sext i32 %268 to i64
  %call305 = call nonnull align 8 dereferenceable(16) %"struct.adept::Block"* @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EEixEm(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b, i64 %conv304) #9
  %269 = load i32, i32* %i296, align 4, !tbaa !20
  %call308 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5BlockILi2EdEixEi(%"struct.adept::Block"* nonnull dereferenceable(16) %call305, i32 %269)
          to label %invoke.cont307 unwind label %lpad306

invoke.cont307:                                   ; preds = %for.body300
  %270 = load double, double* %call308, align 8, !tbaa !44
  %271 = load double*, double** %jacobian_out.addr, align 8, !tbaa !2
  %272 = load i32, i32* %iindep288, align 4, !tbaa !20
  %call310 = invoke i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
          to label %invoke.cont309 unwind label %lpad306

invoke.cont309:                                   ; preds = %invoke.cont307
  %mul311 = mul nsw i32 %272, %call310
  %273 = load i32, i32* %i_dependent, align 4, !tbaa !20
  %add312 = add nsw i32 %mul311, %273
  %274 = load i32, i32* %i296, align 4, !tbaa !20
  %add313 = add nsw i32 %add312, %274
  %idxprom314 = sext i32 %add313 to i64
  %arrayidx315 = getelementptr inbounds double, double* %271, i64 %idxprom314
  store double %270, double* %arrayidx315, align 8, !tbaa !44
  br label %for.inc316

for.inc316:                                       ; preds = %invoke.cont309
  %275 = load i32, i32* %i296, align 4, !tbaa !20
  %inc317 = add nsw i32 %275, 1
  store i32 %inc317, i32* %i296, align 4, !tbaa !20
  br label %for.cond297, !llvm.loop !217

lpad306:                                          ; preds = %invoke.cont307, %for.body300
  %276 = landingpad { i8*, i32 }
          cleanup
  %277 = extractvalue { i8*, i32 } %276, 0
  store i8* %277, i8** %exn.slot, align 8
  %278 = extractvalue { i8*, i32 } %276, 1
  store i32 %278, i32* %ehselector.slot, align 4
  %279 = bitcast i32* %i296 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %279) #9
  br label %ehcleanup322

for.end319:                                       ; preds = %for.cond.cleanup299
  br label %for.inc320

for.inc320:                                       ; preds = %for.end319
  %280 = load i32, i32* %iindep288, align 4, !tbaa !20
  %inc321 = add nsw i32 %280, 1
  store i32 %inc321, i32* %iindep288, align 4, !tbaa !20
  br label %for.cond289, !llvm.loop !218

ehcleanup322:                                     ; preds = %lpad306, %lpad290
  %281 = bitcast i32* %iindep288 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %281) #9
  br label %ehcleanup325

for.end323:                                       ; preds = %for.cond.cleanup294
  br label %if.end324

if.end324:                                        ; preds = %for.end323, %for.end160
  %282 = bitcast i32* %i_dependent to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %282) #9
  %283 = bitcast i32* %n_extra to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %283) #9
  %284 = bitcast i32* %n_block to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %284) #9
  call void @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b) #9
  %285 = bitcast %"class.std::vector.30"* %gradient_multipass_b to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %285) #9
  ret void

ehcleanup325:                                     ; preds = %ehcleanup322, %ehcleanup281, %lpad187, %lpad170, %ehcleanup159
  %286 = bitcast i32* %i_dependent to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %286) #9
  br label %ehcleanup326

ehcleanup326:                                     ; preds = %ehcleanup325, %lpad17
  %287 = bitcast i32* %n_extra to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %287) #9
  br label %ehcleanup327

ehcleanup327:                                     ; preds = %ehcleanup326, %lpad14
  %288 = bitcast i32* %n_block to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %288) #9
  call void @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EED2Ev(%"class.std::vector.30"* nonnull dereferenceable(24) %gradient_multipass_b) #9
  br label %ehcleanup329

ehcleanup329:                                     ; preds = %ehcleanup327, %lpad10
  %289 = bitcast %"class.std::vector.30"* %gradient_multipass_b to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %289) #9
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup329, %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val330 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val330

unreachable:                                      ; preds = %invoke.cont5
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept5Stack8jacobianEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this, double* %jacobian_out) #0 align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %jacobian_out.addr = alloca double*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store double* %jacobian_out, double** %jacobian_out.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %call = call i32 @_ZNK5adept5Stack13n_independentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %call2 = call i32 @_ZNK5adept5Stack11n_dependentEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %cmp = icmp sle i32 %call, %call2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = load double*, double** %jacobian_out.addr, align 8, !tbaa !2
  call void @_ZN5adept5Stack16jacobian_forwardEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this1, double* %0)
  br label %if.end

if.else:                                          ; preds = %entry
  %1 = load double*, double** %jacobian_out.addr, align 8, !tbaa !2
  call void @_ZN5adept5Stack16jacobian_reverseEPd(%"class.adept::Stack"* nonnull dereferenceable(149) %this1, double* %1)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept7versionB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %2) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept16compiler_versionB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %nrvo = alloca i1, align 1
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store i1 false, i1* %nrvo, align 1
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %2) #9
  %call = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.106, i64 0, i64 0))
          to label %invoke.cont2 unwind label %lpad1

invoke.cont2:                                     ; preds = %invoke.cont
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

lpad1:                                            ; preds = %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result) #9
  br label %eh.resume

nrvo.unused:                                      ; preds = %invoke.cont2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result) #9
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %invoke.cont2
  ret void

eh.resume:                                        ; preds = %lpad1, %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val3 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val3
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__s) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__s.addr = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %0)
  ret %"class.std::__cxx11::basic_string"* %call
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept14compiler_flagsB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %2) #9
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %6 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept13configurationB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %s = alloca %"class.std::__cxx11::basic_stringstream", align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp11 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp24 = alloca %"class.std::__cxx11::basic_string", align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  %1 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 392, i8* %1) #9
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %s)
  %2 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 16
  %3 = bitcast i8* %add.ptr to %"class.std::basic_ostream"*
  %call = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.107, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %4 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %4) #9
  invoke void @_ZN5adept7versionB5cxx11Ev(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp)
          to label %invoke.cont2 unwind label %lpad1

invoke.cont2:                                     ; preds = %invoke.cont
  %call5 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont2
  %call7 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.108, i64 0, i64 0))
          to label %invoke.cont6 unwind label %lpad3

invoke.cont6:                                     ; preds = %invoke.cont4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  %5 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %5) #9
  %6 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  %add.ptr8 = getelementptr inbounds i8, i8* %6, i64 16
  %7 = bitcast i8* %add.ptr8 to %"class.std::basic_ostream"*
  %call10 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.109, i64 0, i64 0))
          to label %invoke.cont9 unwind label %lpad

invoke.cont9:                                     ; preds = %invoke.cont6
  %8 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %8) #9
  invoke void @_ZN5adept16compiler_versionB5cxx11Ev(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp11)
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %invoke.cont9
  %call16 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call10, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp11)
          to label %invoke.cont15 unwind label %lpad14

invoke.cont15:                                    ; preds = %invoke.cont13
  %call18 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
          to label %invoke.cont17 unwind label %lpad14

invoke.cont17:                                    ; preds = %invoke.cont15
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp11) #9
  %9 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  %add.ptr21 = getelementptr inbounds i8, i8* %10, i64 16
  %11 = bitcast i8* %add.ptr21 to %"class.std::basic_ostream"*
  %call23 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.110, i64 0, i64 0))
          to label %invoke.cont22 unwind label %lpad

invoke.cont22:                                    ; preds = %invoke.cont17
  %12 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %12) #9
  invoke void @_ZN5adept14compiler_flagsB5cxx11Ev(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp24)
          to label %invoke.cont26 unwind label %lpad25

invoke.cont26:                                    ; preds = %invoke.cont22
  %call29 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call23, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp24)
          to label %invoke.cont28 unwind label %lpad27

invoke.cont28:                                    ; preds = %invoke.cont26
  %call31 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.111, i64 0, i64 0))
          to label %invoke.cont30 unwind label %lpad27

invoke.cont30:                                    ; preds = %invoke.cont28
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp24) #9
  %13 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %13) #9
  %14 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  %add.ptr34 = getelementptr inbounds i8, i8* %14, i64 16
  %15 = bitcast i8* %add.ptr34 to %"class.std::basic_ostream"*
  %call36 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %15, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.112, i64 0, i64 0))
          to label %invoke.cont35 unwind label %lpad

invoke.cont35:                                    ; preds = %invoke.cont30
  %call38 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call36, i32 4)
          to label %invoke.cont37 unwind label %lpad

invoke.cont37:                                    ; preds = %invoke.cont35
  %call40 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
          to label %invoke.cont39 unwind label %lpad

invoke.cont39:                                    ; preds = %invoke.cont37
  invoke void @_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %s)
          to label %invoke.cont41 unwind label %lpad

invoke.cont41:                                    ; preds = %invoke.cont39
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %s) #9
  %16 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  call void @llvm.lifetime.end.p0i8(i64 392, i8* %16) #9
  ret void

lpad:                                             ; preds = %invoke.cont39, %invoke.cont37, %invoke.cont35, %invoke.cont30, %invoke.cont17, %invoke.cont6, %entry
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %exn.slot, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %ehselector.slot, align 4
  br label %ehcleanup42

lpad1:                                            ; preds = %invoke.cont
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %exn.slot, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad3:                                            ; preds = %invoke.cont4, %invoke.cont2
  %23 = landingpad { i8*, i32 }
          cleanup
  %24 = extractvalue { i8*, i32 } %23, 0
  store i8* %24, i8** %exn.slot, align 8
  %25 = extractvalue { i8*, i32 } %23, 1
  store i32 %25, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad3, %lpad1
  %26 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %26) #9
  br label %ehcleanup42

lpad12:                                           ; preds = %invoke.cont9
  %27 = landingpad { i8*, i32 }
          cleanup
  %28 = extractvalue { i8*, i32 } %27, 0
  store i8* %28, i8** %exn.slot, align 8
  %29 = extractvalue { i8*, i32 } %27, 1
  store i32 %29, i32* %ehselector.slot, align 4
  br label %ehcleanup20

lpad14:                                           ; preds = %invoke.cont15, %invoke.cont13
  %30 = landingpad { i8*, i32 }
          cleanup
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %exn.slot, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp11) #9
  br label %ehcleanup20

ehcleanup20:                                      ; preds = %lpad14, %lpad12
  %33 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %33) #9
  br label %ehcleanup42

lpad25:                                           ; preds = %invoke.cont22
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %exn.slot, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %ehselector.slot, align 4
  br label %ehcleanup33

lpad27:                                           ; preds = %invoke.cont28, %invoke.cont26
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %exn.slot, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp24) #9
  br label %ehcleanup33

ehcleanup33:                                      ; preds = %lpad27, %lpad25
  %40 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %40) #9
  br label %ehcleanup42

ehcleanup42:                                      ; preds = %ehcleanup33, %ehcleanup20, %ehcleanup, %lpad
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %s) #9
  %41 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  call void @llvm.lifetime.end.p0i8(i64 392, i8* %41) #9
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup42
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val44 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val44
}

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %this) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_stringstream"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_stringstream"* %this, %"class.std::__cxx11::basic_stringstream"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_stringstream"*, %"class.std::__cxx11::basic_stringstream"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 128
  %2 = bitcast i8* %1 to %"class.std::basic_ios"*
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev(%"class.std::basic_ios"* nonnull dereferenceable(264) %2)
  %3 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to %"class.std::basic_iostream"*
  invoke void @_ZNSdC2Ev(%"class.std::basic_iostream"* nonnull dereferenceable(24) %3, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 1))
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %4 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i32 0, inrange i32 0, i32 3) to i32 (...)**), i32 (...)*** %4, align 8, !tbaa !53
  %5 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 128
  %6 = bitcast i8* %add.ptr to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i32 0, inrange i32 2, i32 3) to i32 (...)**), i32 (...)*** %6, align 8, !tbaa !53
  %7 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i8*
  %add.ptr2 = getelementptr inbounds i8, i8* %7, i64 16
  %8 = bitcast i8* %add.ptr2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i32 0, inrange i32 1, i32 3) to i32 (...)**), i32 (...)*** %8, align 8, !tbaa !53
  %_M_stringbuf = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %this1, i32 0, i32 1
  %call = invoke i32 @_ZStorSt13_Ios_OpenmodeS_(i32 16, i32 8)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont
  invoke void @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode(%"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104) %_M_stringbuf, i32 %call)
          to label %invoke.cont5 unwind label %lpad3

invoke.cont5:                                     ; preds = %invoke.cont4
  %9 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i8**
  %vtable = load i8*, i8** %9, align 8, !tbaa !53
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -24
  %10 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64, i64* %10, align 8
  %11 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i8*
  %add.ptr6 = getelementptr inbounds i8, i8* %11, i64 %vbase.offset
  %12 = bitcast i8* %add.ptr6 to %"class.std::basic_ios"*
  %_M_stringbuf7 = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %this1, i32 0, i32 1
  %13 = bitcast %"class.std::__cxx11::basic_stringbuf"* %_M_stringbuf7 to %"class.std::basic_streambuf"*
  invoke void @_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E(%"class.std::basic_ios"* nonnull dereferenceable(264) %12, %"class.std::basic_streambuf"* %13)
          to label %invoke.cont9 unwind label %lpad8

invoke.cont9:                                     ; preds = %invoke.cont5
  ret void

lpad:                                             ; preds = %entry
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %exn.slot, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %ehselector.slot, align 4
  br label %ehcleanup10

lpad3:                                            ; preds = %invoke.cont4, %invoke.cont
  %17 = landingpad { i8*, i32 }
          cleanup
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %exn.slot, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad8:                                            ; preds = %invoke.cont5
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %exn.slot, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104) %_M_stringbuf) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad8, %lpad3
  %23 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to %"class.std::basic_iostream"*
  call void @_ZNSdD2Ev(%"class.std::basic_iostream"* nonnull dereferenceable(24) %23, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 1)) #9
  br label %ehcleanup10

ehcleanup10:                                      ; preds = %ehcleanup, %lpad
  %24 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i8*
  %25 = getelementptr inbounds i8, i8* %24, i64 128
  %26 = bitcast i8* %25 to %"class.std::basic_ios"*
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev(%"class.std::basic_ios"* nonnull dereferenceable(264) %26) #9
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup10
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val11 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val11
}

; Function Attrs: inlinehint uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %__os, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__str) #5 {
entry:
  %__os.addr = alloca %"class.std::basic_ostream"*, align 8
  %__str.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::basic_ostream"* %__os, %"class.std::basic_ostream"** %__os.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__str, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %0 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %__os.addr, align 8, !tbaa !2
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %1) #9
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call1 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %2) #9
  %call2 = call nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %0, i8* %call, i64 %call1)
  ret %"class.std::basic_ostream"* %call2
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local void @_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %this) #0 align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.std::__cxx11::basic_stringstream"*, align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_stringstream"* %this, %"class.std::__cxx11::basic_stringstream"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_stringstream"*, %"class.std::__cxx11::basic_stringstream"** %this.addr, align 8
  %_M_stringbuf = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %this1, i32 0, i32 1
  call void @_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104) %_M_stringbuf)
  ret void
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_stringstream"*, align 8
  store %"class.std::__cxx11::basic_stringstream"* %this, %"class.std::__cxx11::basic_stringstream"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_stringstream"*, %"class.std::__cxx11::basic_stringstream"** %this.addr, align 8
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %this1, i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEE, i64 0, i64 0)) #9
  %0 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 128
  %2 = bitcast i8* %1 to %"class.std::basic_ios"*
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev(%"class.std::basic_ios"* nonnull dereferenceable(264) %2) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local i32 @_ZN5adept16max_blas_threadsEv() #8 {
entry:
  ret i32 1
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local i32 @_ZN5adept20set_max_blas_threadsEi(i32 %n) #8 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  ret i32 1
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local zeroext i1 @_ZN5adept26have_matrix_multiplicationEv() #8 {
entry:
  ret i1 false
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local zeroext i1 @_ZN5adept19have_linear_algebraEv() #8 {
entry:
  ret i1 false
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept5solveIfEENS_5ArrayILi1ET_Lb0EEERKNS1_ILi2ES2_Lb0EEERKS3_(%"class.adept::Array.35"* noalias sret(%"class.adept::Array.35") align 8 %agg.result, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %A, %"class.adept::Array.35"* nonnull align 8 dereferenceable(24) %b) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::Array"*, align 8
  %b.addr = alloca %"class.adept::Array.35"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array.35"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::Array"* %A, %"class.adept::Array"** %A.addr, align 8, !tbaa !2
  store %"class.adept::Array.35"* %b, %"class.adept::Array.35"** %b.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.35"* noalias sret(%"class.adept::Array.35") align 8 %agg.result, %"class.adept::SpecialMatrix"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.35"* nonnull align 8 dereferenceable(24) %b) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::SpecialMatrix"*, align 8
  %b.addr = alloca %"class.adept::Array.35"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array.35"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::SpecialMatrix"* %A, %"class.adept::SpecialMatrix"** %A.addr, align 8, !tbaa !2
  store %"class.adept::Array.35"* %b, %"class.adept::Array.35"** %b.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.35"* noalias sret(%"class.adept::Array.35") align 8 %agg.result, %"class.adept::SpecialMatrix.19"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.35"* nonnull align 8 dereferenceable(24) %b) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::SpecialMatrix.19"*, align 8
  %b.addr = alloca %"class.adept::Array.35"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array.35"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::SpecialMatrix.19"* %A, %"class.adept::SpecialMatrix.19"** %A.addr, align 8, !tbaa !2
  store %"class.adept::Array.35"* %b, %"class.adept::Array.35"** %b.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept5solveIfEENS_5ArrayILi2ET_Lb0EEERKS3_S5_(%"class.adept::Array"* noalias sret(%"class.adept::Array") align 8 %agg.result, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %A, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %B) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::Array"*, align 8
  %B.addr = alloca %"class.adept::Array"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::Array"* %A, %"class.adept::Array"** %A.addr, align 8, !tbaa !2
  store %"class.adept::Array"* %B, %"class.adept::Array"** %B.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array"* noalias sret(%"class.adept::Array") align 8 %agg.result, %"class.adept::SpecialMatrix"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %B) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::SpecialMatrix"*, align 8
  %B.addr = alloca %"class.adept::Array"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::SpecialMatrix"* %A, %"class.adept::SpecialMatrix"** %A.addr, align 8, !tbaa !2
  store %"class.adept::Array"* %B, %"class.adept::Array"** %B.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept5solveIfLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array"* noalias sret(%"class.adept::Array") align 8 %agg.result, %"class.adept::SpecialMatrix.19"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array"* nonnull align 8 dereferenceable(32) %B) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::SpecialMatrix.19"*, align 8
  %B.addr = alloca %"class.adept::Array"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::SpecialMatrix.19"* %A, %"class.adept::SpecialMatrix.19"** %A.addr, align 8, !tbaa !2
  store %"class.adept::Array"* %B, %"class.adept::Array"** %B.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept5solveIdEENS_5ArrayILi1ET_Lb0EEERKNS1_ILi2ES2_Lb0EEERKS3_(%"class.adept::Array.38"* noalias sret(%"class.adept::Array.38") align 8 %agg.result, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %A, %"class.adept::Array.38"* nonnull align 8 dereferenceable(24) %b) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::Array.22"*, align 8
  %b.addr = alloca %"class.adept::Array.38"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array.38"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::Array.22"* %A, %"class.adept::Array.22"** %A.addr, align 8, !tbaa !2
  store %"class.adept::Array.38"* %b, %"class.adept::Array.38"** %b.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.38"* noalias sret(%"class.adept::Array.38") align 8 %agg.result, %"class.adept::SpecialMatrix.25"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.38"* nonnull align 8 dereferenceable(24) %b) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::SpecialMatrix.25"*, align 8
  %b.addr = alloca %"class.adept::Array.38"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array.38"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::SpecialMatrix.25"* %A, %"class.adept::SpecialMatrix.25"** %A.addr, align 8, !tbaa !2
  store %"class.adept::Array.38"* %b, %"class.adept::Array.38"** %b.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi1ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.38"* noalias sret(%"class.adept::Array.38") align 8 %agg.result, %"class.adept::SpecialMatrix.27"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.38"* nonnull align 8 dereferenceable(24) %b) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::SpecialMatrix.27"*, align 8
  %b.addr = alloca %"class.adept::Array.38"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array.38"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::SpecialMatrix.27"* %A, %"class.adept::SpecialMatrix.27"** %A.addr, align 8, !tbaa !2
  store %"class.adept::Array.38"* %b, %"class.adept::Array.38"** %b.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept5solveIdEENS_5ArrayILi2ET_Lb0EEERKS3_S5_(%"class.adept::Array.22"* noalias sret(%"class.adept::Array.22") align 8 %agg.result, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %A, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %B) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::Array.22"*, align 8
  %B.addr = alloca %"class.adept::Array.22"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array.22"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::Array.22"* %A, %"class.adept::Array.22"** %A.addr, align 8, !tbaa !2
  store %"class.adept::Array.22"* %B, %"class.adept::Array.22"** %B.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE0EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.22"* noalias sret(%"class.adept::Array.22") align 8 %agg.result, %"class.adept::SpecialMatrix.25"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %B) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::SpecialMatrix.25"*, align 8
  %B.addr = alloca %"class.adept::Array.22"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array.22"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::SpecialMatrix.25"* %A, %"class.adept::SpecialMatrix.25"** %A.addr, align 8, !tbaa !2
  store %"class.adept::Array.22"* %B, %"class.adept::Array.22"** %B.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define weak_odr dso_local void @_ZN5adept5solveIdLNS_8internal21SymmMatrixOrientationE1EEENS_5ArrayILi2ET_Lb0EEERKNS_13SpecialMatrixIS4_NS1_10SymmEngineIXT0_EEELb0EEERKS5_(%"class.adept::Array.22"* noalias sret(%"class.adept::Array.22") align 8 %agg.result, %"class.adept::SpecialMatrix.27"* nonnull align 8 dereferenceable(24) %A, %"class.adept::Array.22"* nonnull align 8 dereferenceable(32) %B) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %A.addr = alloca %"class.adept::SpecialMatrix.27"*, align 8
  %B.addr = alloca %"class.adept::Array.22"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp1 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array.22"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.adept::SpecialMatrix.27"* %A, %"class.adept::SpecialMatrix.27"** %A.addr, align 8, !tbaa !2
  store %"class.adept::Array.22"* %B, %"class.adept::Array.22"** %B.addr, align 8, !tbaa !2
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::feature_not_available"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.113, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept21feature_not_availableC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21feature_not_availableE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad2

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad2:                                            ; preds = %invoke.cont3, %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad2, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp1) #9
  %10 = bitcast %"class.std::allocator.0"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %10) #9
  %11 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %11) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val7 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val7

unreachable:                                      ; preds = %invoke.cont3
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @_ZN5adept8linspaceEddi(%"class.adept::Array.38"* noalias sret(%"class.adept::Array.38") align 8 %agg.result, double %x1, double %x2, i32 %n) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %x1.addr = alloca double, align 8
  %x2.addr = alloca double, align 8
  %n.addr = alloca i32, align 4
  %nrvo = alloca i1, align 1
  %i = alloca i32, align 4
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp13 = alloca %"class.std::allocator.0", align 1
  %cleanup.isactive = alloca i1, align 1
  %0 = bitcast %"class.adept::Array.38"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store double %x1, double* %x1.addr, align 8, !tbaa !44
  store double %x2, double* %x2.addr, align 8, !tbaa !44
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store i1 false, i1* %nrvo, align 1
  %1 = load i32, i32* %n.addr, align 4, !tbaa !20
  call void @_ZN5adept5ArrayILi1EdLb0EEC2Ei(%"class.adept::Array.38"* nonnull dereferenceable(24) %agg.result, i32 %1)
  %2 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp sgt i32 %2, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %4 = load i32, i32* %i, align 4, !tbaa !20
  %5 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp1 = icmp slt i32 %4, %5
  br i1 %cmp1, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %6 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %6) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load double, double* %x1.addr, align 8, !tbaa !44
  %8 = load double, double* %x2.addr, align 8, !tbaa !44
  %9 = load double, double* %x1.addr, align 8, !tbaa !44
  %sub = fsub fast double %8, %9
  %10 = load i32, i32* %i, align 4, !tbaa !20
  %conv = sitofp i32 %10 to double
  %mul = fmul fast double %sub, %conv
  %11 = load i32, i32* %n.addr, align 4, !tbaa !20
  %sub2 = sub nsw i32 %11, 1
  %conv3 = sitofp i32 %sub2 to double
  %div = fdiv fast double %mul, %conv3
  %add = fadd fast double %7, %div
  %12 = load i32, i32* %i, align 4, !tbaa !20
  %call = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5ArrayILi1EdLb0EEclIiEENS_8internal9enable_ifIXaaaaeqLi1ELi1Esr15all_scalar_intsILi1ET_EE5valuentLb0EERdE4typeES5_(%"class.adept::Array.38"* nonnull dereferenceable(24) %agg.result, i32 %12)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body
  store double %add, double* %call, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont
  %13 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !219

lpad:                                             ; preds = %for.body
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %exn.slot, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %ehselector.slot, align 4
  %17 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %17) #9
  br label %ehcleanup23

for.end:                                          ; preds = %for.cond.cleanup
  br label %if.end22

if.else:                                          ; preds = %entry
  %18 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp4 = icmp eq i32 %18, 1
  br i1 %cmp4, label %land.lhs.true, label %if.else10

land.lhs.true:                                    ; preds = %if.else
  %19 = load double, double* %x1.addr, align 8, !tbaa !44
  %20 = load double, double* %x2.addr, align 8, !tbaa !44
  %cmp5 = fcmp fast oeq double %19, %20
  br i1 %cmp5, label %if.then6, label %if.else10

if.then6:                                         ; preds = %land.lhs.true
  %21 = load double, double* %x1.addr, align 8, !tbaa !44
  %call9 = invoke nonnull align 8 dereferenceable(8) double* @_ZN5adept5ArrayILi1EdLb0EEclIiEENS_8internal9enable_ifIXaaaaeqLi1ELi1Esr15all_scalar_intsILi1ET_EE5valuentLb0EERdE4typeES5_(%"class.adept::Array.38"* nonnull dereferenceable(24) %agg.result, i32 0)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %if.then6
  store double %21, double* %call9, align 8, !tbaa !44
  store i1 true, i1* %nrvo, align 1
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

lpad7:                                            ; preds = %if.then6
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %exn.slot, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %ehselector.slot, align 4
  br label %ehcleanup23

if.else10:                                        ; preds = %land.lhs.true, %if.else
  %25 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp11 = icmp eq i32 %25, 1
  br i1 %cmp11, label %if.then12, label %if.end

if.then12:                                        ; preds = %if.else10
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %26 = bitcast i8* %exception to %"class.adept::invalid_operation"*
  %27 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %27) #9
  %28 = bitcast %"class.std::allocator.0"* %ref.tmp13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %28) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp13) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.114, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp13)
          to label %invoke.cont15 unwind label %lpad14

invoke.cont15:                                    ; preds = %if.then12
  invoke void @_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %26, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont17 unwind label %lpad16

invoke.cont17:                                    ; preds = %invoke.cont15
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_operationE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad16

lpad14:                                           ; preds = %if.then12
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %exn.slot, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad16:                                           ; preds = %invoke.cont17, %invoke.cont15
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  store i8* %33, i8** %exn.slot, align 8
  %34 = extractvalue { i8*, i32 } %32, 1
  store i32 %34, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad16, %lpad14
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp13) #9
  %35 = bitcast %"class.std::allocator.0"* %ref.tmp13 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %35) #9
  %36 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %36) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %ehcleanup23

if.end:                                           ; preds = %if.else10
  br label %if.end21

if.end21:                                         ; preds = %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %for.end
  store i1 true, i1* %nrvo, align 1
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end22, %invoke.cont8
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused

nrvo.unused:                                      ; preds = %cleanup
  call void @_ZN5adept5ArrayILi1EdLb0EED2Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %agg.result) #9
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %cleanup
  ret void

ehcleanup23:                                      ; preds = %cleanup.done, %lpad7, %lpad
  call void @_ZN5adept5ArrayILi1EdLb0EED2Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %agg.result) #9
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup23
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val24 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val24

unreachable:                                      ; preds = %invoke.cont17
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept5ArrayILi1EdLb0EEC2Ei(%"class.adept::Array.38"* nonnull dereferenceable(24) %this, i32 %m0) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Array.38"*, align 8
  %m0.addr = alloca i32, align 4
  store %"class.adept::Array.38"* %this, %"class.adept::Array.38"** %this.addr, align 8, !tbaa !2
  store i32 %m0, i32* %m0.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::Array.38"*, %"class.adept::Array.38"** %this.addr, align 8
  %0 = bitcast %"class.adept::Array.38"* %this1 to %"struct.adept::Expression.39"*
  %1 = bitcast %"class.adept::Array.38"* %this1 to %"struct.adept::internal::GradientIndex"*
  call void @_ZN5adept8internal13GradientIndexILb0EEC2Ei(%"struct.adept::internal::GradientIndex"* nonnull dereferenceable(1) %1, i32 -9999)
  %storage_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 1
  store %"class.adept::Storage.24"* null, %"class.adept::Storage.24"** %storage_, align 8, !tbaa !220
  %dimensions_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 2
  call void @_ZN5adept14ExpressionSizeILi1EEC2Ev(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %dimensions_)
  %offset_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 3
  call void @_ZN5adept14ExpressionSizeILi1EEC2Ev(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %offset_)
  %2 = load i32, i32* %m0.addr, align 4, !tbaa !20
  call void @_ZN5adept5ArrayILi1EdLb0EE7resize_ILi1EEENS_8internal9enable_ifIXeqLi1ET_EvE4typeEiiiiiii(%"class.adept::Array.38"* nonnull dereferenceable(24) %this1, i32 %2, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) double* @_ZN5adept5ArrayILi1EdLb0EEclIiEENS_8internal9enable_ifIXaaaaeqLi1ELi1Esr15all_scalar_intsILi1ET_EE5valuentLb0EERdE4typeES5_(%"class.adept::Array.38"* nonnull dereferenceable(24) %this, i32 %i0) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Array.38"*, align 8
  %i0.addr = alloca i32, align 4
  store %"class.adept::Array.38"* %this, %"class.adept::Array.38"** %this.addr, align 8, !tbaa !2
  store i32 %i0, i32* %i0.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::Array.38"*, %"class.adept::Array.38"** %this.addr, align 8
  %data_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 0
  %0 = load double*, double** %data_, align 8, !tbaa !223
  %1 = load i32, i32* %i0.addr, align 4, !tbaa !20
  %dimensions_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 2
  %call = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %dimensions_, i32 0)
  %2 = load i32, i32* %call, align 4, !tbaa !20
  %call2 = call i32 @_ZN5adept8internal18get_index_with_lenEii(i32 %1, i32 %2)
  %offset_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 3
  %call3 = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %offset_, i32 0)
  %3 = load i32, i32* %call3, align 4, !tbaa !20
  %mul = mul nsw i32 %call2, %3
  %idxprom = sext i32 %mul to i64
  %arrayidx = getelementptr inbounds double, double* %0, i64 %idxprom
  ret double* %arrayidx
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept5ArrayILi1EdLb0EED2Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Array.38"*, align 8
  store %"class.adept::Array.38"* %this, %"class.adept::Array.38"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Array.38"*, %"class.adept::Array.38"** %this.addr, align 8
  %storage_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 1
  %0 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %storage_, align 8, !tbaa !220
  %tobool = icmp ne %"class.adept::Storage.24"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %storage_2 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %storage_2, align 8, !tbaa !220
  invoke void @_ZN5adept7StorageIdE11remove_linkEv(%"class.adept::Storage.24"* nonnull dereferenceable(20) %1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #29
  unreachable
}

; Function Attrs: uwtable mustprogress
define dso_local void @adept_dgmm_objective(i32 %d, i32 %k, i32 %n, double* %alphas, double* %alphasb, double* %means, double* %meansb, double* %icf, double* %icfb, double* %x, %struct.Wishart* byval(%struct.Wishart) align 8 %wishart, double* %err, double* %errb) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %d.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %alphas.addr = alloca double*, align 8
  %alphasb.addr = alloca double*, align 8
  %means.addr = alloca double*, align 8
  %meansb.addr = alloca double*, align 8
  %icf.addr = alloca double*, align 8
  %icfb.addr = alloca double*, align 8
  %x.addr = alloca double*, align 8
  %err.addr = alloca double*, align 8
  %errb.addr = alloca double*, align 8
  %icf_sz = alloca i32, align 4
  %Jrows = alloca i32, align 4
  %Jcols = alloca i32, align 4
  %stack = alloca %"class.adept::Stack", align 8
  %aalphas = alloca %"class.adept::Active"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %ameans = alloca %"class.adept::Active"*, align 8
  %aicf = alloca %"class.adept::Active"*, align 8
  %aerr = alloca %"class.adept::Active", align 8
  %agg.tmp = alloca %struct.Wishart, align 8
  %ref.tmp = alloca double, align 8
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %alphas, double** %alphas.addr, align 8, !tbaa !2
  store double* %alphasb, double** %alphasb.addr, align 8, !tbaa !2
  store double* %means, double** %means.addr, align 8, !tbaa !2
  store double* %meansb, double** %meansb.addr, align 8, !tbaa !2
  store double* %icf, double** %icf.addr, align 8, !tbaa !2
  store double* %icfb, double** %icfb.addr, align 8, !tbaa !2
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store double* %err, double** %err.addr, align 8, !tbaa !2
  store double* %errb, double** %errb.addr, align 8, !tbaa !2
  %0 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = load i32, i32* %d.addr, align 4, !tbaa !20
  %2 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add = add nsw i32 %2, 1
  %mul = mul nsw i32 %1, %add
  %div = sdiv i32 %mul, 2
  store i32 %div, i32* %icf_sz, align 4, !tbaa !20
  %3 = bitcast i32* %Jrows to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #9
  store i32 1, i32* %Jrows, align 4, !tbaa !20
  %4 = bitcast i32* %Jcols to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #9
  %5 = load i32, i32* %k.addr, align 4, !tbaa !20
  %6 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add1 = add nsw i32 %6, 1
  %mul2 = mul nsw i32 %5, %add1
  %7 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add3 = add nsw i32 %7, 2
  %mul4 = mul nsw i32 %mul2, %add3
  %div5 = sdiv i32 %mul4, 2
  store i32 %div5, i32* %Jcols, align 4, !tbaa !20
  %8 = bitcast %"class.adept::Stack"* %stack to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* %8) #9
  call void @_ZN5adept5StackC2Eb(%"class.adept::Stack"* nonnull dereferenceable(149) %stack, i1 zeroext true)
  %9 = bitcast %"class.adept::Active"** %aalphas to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #9
  %10 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv = sext i32 %10 to i64
  %11 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 16)
  %12 = extractvalue { i64, i1 } %11, 1
  %13 = extractvalue { i64, i1 } %11, 0
  %14 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 8)
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = or i1 %12, %15
  %17 = extractvalue { i64, i1 } %14, 0
  %18 = select i1 %16, i64 -1, i64 %17
  %call = invoke noalias nonnull i8* @_Znam(i64 %18) #33
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %19 = bitcast i8* %call to i64*
  store i64 %conv, i64* %19, align 16
  %20 = getelementptr inbounds i8, i8* %call, i64 8
  %21 = bitcast i8* %20 to %"class.adept::Active"*
  %isempty = icmp eq i64 %conv, 0
  br i1 %isempty, label %arrayctor.cont, label %new.ctorloop

new.ctorloop:                                     ; preds = %invoke.cont
  %arrayctor.end = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %21, i64 %conv
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %invoke.cont7, %new.ctorloop
  %arrayctor.cur = phi %"class.adept::Active"* [ %21, %new.ctorloop ], [ %arrayctor.next, %invoke.cont7 ]
  invoke void @_ZN5adept6ActiveIdEC2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arrayctor.cur)
          to label %invoke.cont7 unwind label %lpad6

invoke.cont7:                                     ; preds = %arrayctor.loop
  %arrayctor.next = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %"class.adept::Active"* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %invoke.cont7, %invoke.cont
  store %"class.adept::Active"* %21, %"class.adept::Active"** %aalphas, align 8, !tbaa !2
  %22 = bitcast %"class.adept::Active"** %ameans to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #9
  %23 = load i32, i32* %d.addr, align 4, !tbaa !20
  %24 = load i32, i32* %k.addr, align 4, !tbaa !20
  %mul9 = mul nsw i32 %23, %24
  %conv10 = sext i32 %mul9 to i64
  %25 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv10, i64 16)
  %26 = extractvalue { i64, i1 } %25, 1
  %27 = extractvalue { i64, i1 } %25, 0
  %28 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %27, i64 8)
  %29 = extractvalue { i64, i1 } %28, 1
  %30 = or i1 %26, %29
  %31 = extractvalue { i64, i1 } %28, 0
  %32 = select i1 %30, i64 -1, i64 %31
  %call13 = invoke noalias nonnull i8* @_Znam(i64 %32) #33
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %arrayctor.cont
  %33 = bitcast i8* %call13 to i64*
  store i64 %conv10, i64* %33, align 16
  %34 = getelementptr inbounds i8, i8* %call13, i64 8
  %35 = bitcast i8* %34 to %"class.adept::Active"*
  %isempty14 = icmp eq i64 %conv10, 0
  br i1 %isempty14, label %arrayctor.cont29, label %new.ctorloop15

new.ctorloop15:                                   ; preds = %invoke.cont12
  %arrayctor.end16 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %35, i64 %conv10
  br label %arrayctor.loop17

arrayctor.loop17:                                 ; preds = %invoke.cont20, %new.ctorloop15
  %arrayctor.cur18 = phi %"class.adept::Active"* [ %35, %new.ctorloop15 ], [ %arrayctor.next27, %invoke.cont20 ]
  invoke void @_ZN5adept6ActiveIdEC2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arrayctor.cur18)
          to label %invoke.cont20 unwind label %lpad19

invoke.cont20:                                    ; preds = %arrayctor.loop17
  %arrayctor.next27 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur18, i64 1
  %arrayctor.done28 = icmp eq %"class.adept::Active"* %arrayctor.next27, %arrayctor.end16
  br i1 %arrayctor.done28, label %arrayctor.cont29, label %arrayctor.loop17

arrayctor.cont29:                                 ; preds = %invoke.cont20, %invoke.cont12
  store %"class.adept::Active"* %35, %"class.adept::Active"** %ameans, align 8, !tbaa !2
  %36 = bitcast %"class.adept::Active"** %aicf to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %36) #9
  %37 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %38 = load i32, i32* %k.addr, align 4, !tbaa !20
  %mul30 = mul nsw i32 %37, %38
  %conv31 = sext i32 %mul30 to i64
  %39 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv31, i64 16)
  %40 = extractvalue { i64, i1 } %39, 1
  %41 = extractvalue { i64, i1 } %39, 0
  %42 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %41, i64 8)
  %43 = extractvalue { i64, i1 } %42, 1
  %44 = or i1 %40, %43
  %45 = extractvalue { i64, i1 } %42, 0
  %46 = select i1 %44, i64 -1, i64 %45
  %call34 = invoke noalias nonnull i8* @_Znam(i64 %46) #33
          to label %invoke.cont33 unwind label %lpad32

invoke.cont33:                                    ; preds = %arrayctor.cont29
  %47 = bitcast i8* %call34 to i64*
  store i64 %conv31, i64* %47, align 16
  %48 = getelementptr inbounds i8, i8* %call34, i64 8
  %49 = bitcast i8* %48 to %"class.adept::Active"*
  %isempty35 = icmp eq i64 %conv31, 0
  br i1 %isempty35, label %arrayctor.cont50, label %new.ctorloop36

new.ctorloop36:                                   ; preds = %invoke.cont33
  %arrayctor.end37 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %49, i64 %conv31
  br label %arrayctor.loop38

arrayctor.loop38:                                 ; preds = %invoke.cont41, %new.ctorloop36
  %arrayctor.cur39 = phi %"class.adept::Active"* [ %49, %new.ctorloop36 ], [ %arrayctor.next48, %invoke.cont41 ]
  invoke void @_ZN5adept6ActiveIdEC2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arrayctor.cur39)
          to label %invoke.cont41 unwind label %lpad40

invoke.cont41:                                    ; preds = %arrayctor.loop38
  %arrayctor.next48 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arrayctor.cur39, i64 1
  %arrayctor.done49 = icmp eq %"class.adept::Active"* %arrayctor.next48, %arrayctor.end37
  br i1 %arrayctor.done49, label %arrayctor.cont50, label %arrayctor.loop38

arrayctor.cont50:                                 ; preds = %invoke.cont41, %invoke.cont33
  store %"class.adept::Active"* %49, %"class.adept::Active"** %aicf, align 8, !tbaa !2
  %50 = load %"class.adept::Active"*, %"class.adept::Active"** %aalphas, align 8, !tbaa !2
  %51 = load i32, i32* %k.addr, align 4, !tbaa !20
  %52 = load double*, double** %alphas.addr, align 8, !tbaa !2
  invoke void @_ZN5adept10set_valuesIdEEvPNS_6ActiveIT_EEiPKS2_(%"class.adept::Active"* %50, i32 %51, double* %52)
          to label %invoke.cont51 unwind label %lpad32

invoke.cont51:                                    ; preds = %arrayctor.cont50
  %53 = load %"class.adept::Active"*, %"class.adept::Active"** %ameans, align 8, !tbaa !2
  %54 = load i32, i32* %d.addr, align 4, !tbaa !20
  %55 = load i32, i32* %k.addr, align 4, !tbaa !20
  %mul52 = mul nsw i32 %54, %55
  %56 = load double*, double** %means.addr, align 8, !tbaa !2
  invoke void @_ZN5adept10set_valuesIdEEvPNS_6ActiveIT_EEiPKS2_(%"class.adept::Active"* %53, i32 %mul52, double* %56)
          to label %invoke.cont53 unwind label %lpad32

invoke.cont53:                                    ; preds = %invoke.cont51
  %57 = load %"class.adept::Active"*, %"class.adept::Active"** %aicf, align 8, !tbaa !2
  %58 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %59 = load i32, i32* %k.addr, align 4, !tbaa !20
  %mul54 = mul nsw i32 %58, %59
  %60 = load double*, double** %icf.addr, align 8, !tbaa !2
  invoke void @_ZN5adept10set_valuesIdEEvPNS_6ActiveIT_EEiPKS2_(%"class.adept::Active"* %57, i32 %mul54, double* %60)
          to label %invoke.cont55 unwind label %lpad32

invoke.cont55:                                    ; preds = %invoke.cont53
  invoke void @_ZN5adept5Stack13new_recordingEv(%"class.adept::Stack"* nonnull dereferenceable(149) %stack)
          to label %invoke.cont56 unwind label %lpad32

invoke.cont56:                                    ; preds = %invoke.cont55
  %61 = bitcast %"class.adept::Active"* %aerr to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %61) #9
  invoke void @_ZN5adept6ActiveIdEC2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %aerr)
          to label %invoke.cont58 unwind label %lpad57

invoke.cont58:                                    ; preds = %invoke.cont56
  %62 = load i32, i32* %d.addr, align 4, !tbaa !20
  %63 = load i32, i32* %k.addr, align 4, !tbaa !20
  %64 = load i32, i32* %n.addr, align 4, !tbaa !20
  %65 = load %"class.adept::Active"*, %"class.adept::Active"** %aalphas, align 8, !tbaa !2
  %66 = load %"class.adept::Active"*, %"class.adept::Active"** %ameans, align 8, !tbaa !2
  %67 = load %"class.adept::Active"*, %"class.adept::Active"** %aicf, align 8, !tbaa !2
  %68 = load double*, double** %x.addr, align 8, !tbaa !2
  %69 = bitcast %struct.Wishart* %agg.tmp to i8*
  %70 = bitcast %struct.Wishart* %wishart to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %70, i64 16, i1 false), !tbaa.struct !52
  invoke void @_ZN9adeptTest13gmm_objectiveIN5adept6ActiveIdEEEEviiiPKT_S6_S6_PKd7WishartPS4_(i32 %62, i32 %63, i32 %64, %"class.adept::Active"* %65, %"class.adept::Active"* %66, %"class.adept::Active"* %67, double* %68, %struct.Wishart* byval(%struct.Wishart) align 8 %agg.tmp, %"class.adept::Active"* %aerr)
          to label %invoke.cont60 unwind label %lpad59

invoke.cont60:                                    ; preds = %invoke.cont58
  %71 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %71) #9
  store double 1.000000e+00, double* %ref.tmp, align 8, !tbaa !44
  invoke void @_ZNK5adept6ActiveIdE12set_gradientIdEEvRKT_(%"class.adept::Active"* nonnull dereferenceable(12) %aerr, double* nonnull align 8 dereferenceable(8) %ref.tmp)
          to label %invoke.cont62 unwind label %lpad61

invoke.cont62:                                    ; preds = %invoke.cont60
  %72 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %72) #9
  invoke void @_ZN5adept5Stack15compute_adjointEv(%"class.adept::Stack"* nonnull dereferenceable(149) %stack)
          to label %invoke.cont63 unwind label %lpad59

invoke.cont63:                                    ; preds = %invoke.cont62
  %73 = load %"class.adept::Active"*, %"class.adept::Active"** %aalphas, align 8, !tbaa !2
  %74 = load i32, i32* %k.addr, align 4, !tbaa !20
  %75 = load double*, double** %alphasb.addr, align 8, !tbaa !2
  invoke void @_ZN5adept13get_gradientsIdEEvPKNS_6ActiveIT_EEiPS2_(%"class.adept::Active"* %73, i32 %74, double* %75)
          to label %invoke.cont64 unwind label %lpad59

invoke.cont64:                                    ; preds = %invoke.cont63
  %76 = load %"class.adept::Active"*, %"class.adept::Active"** %ameans, align 8, !tbaa !2
  %77 = load i32, i32* %d.addr, align 4, !tbaa !20
  %78 = load i32, i32* %k.addr, align 4, !tbaa !20
  %mul65 = mul nsw i32 %77, %78
  %79 = load double*, double** %meansb.addr, align 8, !tbaa !2
  invoke void @_ZN5adept13get_gradientsIdEEvPKNS_6ActiveIT_EEiPS2_(%"class.adept::Active"* %76, i32 %mul65, double* %79)
          to label %invoke.cont66 unwind label %lpad59

invoke.cont66:                                    ; preds = %invoke.cont64
  %80 = load %"class.adept::Active"*, %"class.adept::Active"** %aicf, align 8, !tbaa !2
  %81 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %82 = load i32, i32* %k.addr, align 4, !tbaa !20
  %mul67 = mul nsw i32 %81, %82
  %83 = load double*, double** %icfb.addr, align 8, !tbaa !2
  invoke void @_ZN5adept13get_gradientsIdEEvPKNS_6ActiveIT_EEiPS2_(%"class.adept::Active"* %80, i32 %mul67, double* %83)
          to label %invoke.cont68 unwind label %lpad59

invoke.cont68:                                    ; preds = %invoke.cont66
  %84 = load %"class.adept::Active"*, %"class.adept::Active"** %aalphas, align 8, !tbaa !2
  %isnull = icmp eq %"class.adept::Active"* %84, null
  br i1 %isnull, label %delete.end75, label %delete.notnull

delete.notnull:                                   ; preds = %invoke.cont68
  %85 = bitcast %"class.adept::Active"* %84 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 -8
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %delete.end = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %84, i64 %88
  %arraydestroy.isempty69 = icmp eq %"class.adept::Active"* %84, %delete.end
  br i1 %arraydestroy.isempty69, label %arraydestroy.done74, label %arraydestroy.body70

arraydestroy.body70:                              ; preds = %arraydestroy.body70, %delete.notnull
  %arraydestroy.elementPast71 = phi %"class.adept::Active"* [ %delete.end, %delete.notnull ], [ %arraydestroy.element72, %arraydestroy.body70 ]
  %arraydestroy.element72 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arraydestroy.elementPast71, i64 -1
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arraydestroy.element72) #9
  %arraydestroy.done73 = icmp eq %"class.adept::Active"* %arraydestroy.element72, %84
  br i1 %arraydestroy.done73, label %arraydestroy.done74, label %arraydestroy.body70

arraydestroy.done74:                              ; preds = %arraydestroy.body70, %delete.notnull
  call void @_ZdaPv(i8* %86) #32
  br label %delete.end75

delete.end75:                                     ; preds = %arraydestroy.done74, %invoke.cont68
  %89 = load %"class.adept::Active"*, %"class.adept::Active"** %ameans, align 8, !tbaa !2
  %isnull76 = icmp eq %"class.adept::Active"* %89, null
  br i1 %isnull76, label %delete.end85, label %delete.notnull77

delete.notnull77:                                 ; preds = %delete.end75
  %90 = bitcast %"class.adept::Active"* %89 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 -8
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %delete.end78 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %89, i64 %93
  %arraydestroy.isempty79 = icmp eq %"class.adept::Active"* %89, %delete.end78
  br i1 %arraydestroy.isempty79, label %arraydestroy.done84, label %arraydestroy.body80

arraydestroy.body80:                              ; preds = %arraydestroy.body80, %delete.notnull77
  %arraydestroy.elementPast81 = phi %"class.adept::Active"* [ %delete.end78, %delete.notnull77 ], [ %arraydestroy.element82, %arraydestroy.body80 ]
  %arraydestroy.element82 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arraydestroy.elementPast81, i64 -1
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arraydestroy.element82) #9
  %arraydestroy.done83 = icmp eq %"class.adept::Active"* %arraydestroy.element82, %89
  br i1 %arraydestroy.done83, label %arraydestroy.done84, label %arraydestroy.body80

arraydestroy.done84:                              ; preds = %arraydestroy.body80, %delete.notnull77
  call void @_ZdaPv(i8* %91) #32
  br label %delete.end85

delete.end85:                                     ; preds = %arraydestroy.done84, %delete.end75
  %94 = load %"class.adept::Active"*, %"class.adept::Active"** %aicf, align 8, !tbaa !2
  %isnull86 = icmp eq %"class.adept::Active"* %94, null
  br i1 %isnull86, label %delete.end95, label %delete.notnull87

delete.notnull87:                                 ; preds = %delete.end85
  %95 = bitcast %"class.adept::Active"* %94 to i8*
  %96 = getelementptr inbounds i8, i8* %95, i64 -8
  %97 = bitcast i8* %96 to i64*
  %98 = load i64, i64* %97, align 8
  %delete.end88 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %94, i64 %98
  %arraydestroy.isempty89 = icmp eq %"class.adept::Active"* %94, %delete.end88
  br i1 %arraydestroy.isempty89, label %arraydestroy.done94, label %arraydestroy.body90

arraydestroy.body90:                              ; preds = %arraydestroy.body90, %delete.notnull87
  %arraydestroy.elementPast91 = phi %"class.adept::Active"* [ %delete.end88, %delete.notnull87 ], [ %arraydestroy.element92, %arraydestroy.body90 ]
  %arraydestroy.element92 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arraydestroy.elementPast91, i64 -1
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arraydestroy.element92) #9
  %arraydestroy.done93 = icmp eq %"class.adept::Active"* %arraydestroy.element92, %94
  br i1 %arraydestroy.done93, label %arraydestroy.done94, label %arraydestroy.body90

arraydestroy.done94:                              ; preds = %arraydestroy.body90, %delete.notnull87
  call void @_ZdaPv(i8* %96) #32
  br label %delete.end95

delete.end95:                                     ; preds = %arraydestroy.done94, %delete.end85
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %aerr) #9
  %99 = bitcast %"class.adept::Active"* %aerr to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %99) #9
  %100 = bitcast %"class.adept::Active"** %aicf to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %100) #9
  %101 = bitcast %"class.adept::Active"** %ameans to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #9
  %102 = bitcast %"class.adept::Active"** %aalphas to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %102) #9
  call void @_ZN5adept5StackD1Ev(%"class.adept::Stack"* nonnull dereferenceable(149) %stack) #9
  %103 = bitcast %"class.adept::Stack"* %stack to i8*
  call void @llvm.lifetime.end.p0i8(i64 152, i8* %103) #9
  %104 = bitcast i32* %Jcols to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %104) #9
  %105 = bitcast i32* %Jrows to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %105) #9
  %106 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %106) #9
  ret void

lpad:                                             ; preds = %entry
  %107 = landingpad { i8*, i32 }
          cleanup
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %exn.slot, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %ehselector.slot, align 4
  br label %ehcleanup99

lpad6:                                            ; preds = %arrayctor.loop
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %exn.slot, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %ehselector.slot, align 4
  %arraydestroy.isempty = icmp eq %"class.adept::Active"* %21, %arrayctor.cur
  br i1 %arraydestroy.isempty, label %arraydestroy.done8, label %arraydestroy.body

arraydestroy.body:                                ; preds = %arraydestroy.body, %lpad6
  %arraydestroy.elementPast = phi %"class.adept::Active"* [ %arrayctor.cur, %lpad6 ], [ %arraydestroy.element, %arraydestroy.body ]
  %arraydestroy.element = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arraydestroy.elementPast, i64 -1
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arraydestroy.element) #9
  %arraydestroy.done = icmp eq %"class.adept::Active"* %arraydestroy.element, %21
  br i1 %arraydestroy.done, label %arraydestroy.done8, label %arraydestroy.body

arraydestroy.done8:                               ; preds = %arraydestroy.body, %lpad6
  call void @_ZdaPv(i8* %call) #32
  br label %ehcleanup99

lpad11:                                           ; preds = %arrayctor.cont
  %113 = landingpad { i8*, i32 }
          cleanup
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %exn.slot, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %ehselector.slot, align 4
  br label %ehcleanup98

lpad19:                                           ; preds = %arrayctor.loop17
  %116 = landingpad { i8*, i32 }
          cleanup
  %117 = extractvalue { i8*, i32 } %116, 0
  store i8* %117, i8** %exn.slot, align 8
  %118 = extractvalue { i8*, i32 } %116, 1
  store i32 %118, i32* %ehselector.slot, align 4
  %arraydestroy.isempty21 = icmp eq %"class.adept::Active"* %35, %arrayctor.cur18
  br i1 %arraydestroy.isempty21, label %arraydestroy.done26, label %arraydestroy.body22

arraydestroy.body22:                              ; preds = %arraydestroy.body22, %lpad19
  %arraydestroy.elementPast23 = phi %"class.adept::Active"* [ %arrayctor.cur18, %lpad19 ], [ %arraydestroy.element24, %arraydestroy.body22 ]
  %arraydestroy.element24 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arraydestroy.elementPast23, i64 -1
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arraydestroy.element24) #9
  %arraydestroy.done25 = icmp eq %"class.adept::Active"* %arraydestroy.element24, %35
  br i1 %arraydestroy.done25, label %arraydestroy.done26, label %arraydestroy.body22

arraydestroy.done26:                              ; preds = %arraydestroy.body22, %lpad19
  call void @_ZdaPv(i8* %call13) #32
  br label %ehcleanup98

lpad32:                                           ; preds = %invoke.cont55, %invoke.cont53, %invoke.cont51, %arrayctor.cont50, %arrayctor.cont29
  %119 = landingpad { i8*, i32 }
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %exn.slot, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %ehselector.slot, align 4
  br label %ehcleanup97

lpad40:                                           ; preds = %arrayctor.loop38
  %122 = landingpad { i8*, i32 }
          cleanup
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %exn.slot, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %ehselector.slot, align 4
  %arraydestroy.isempty42 = icmp eq %"class.adept::Active"* %49, %arrayctor.cur39
  br i1 %arraydestroy.isempty42, label %arraydestroy.done47, label %arraydestroy.body43

arraydestroy.body43:                              ; preds = %arraydestroy.body43, %lpad40
  %arraydestroy.elementPast44 = phi %"class.adept::Active"* [ %arrayctor.cur39, %lpad40 ], [ %arraydestroy.element45, %arraydestroy.body43 ]
  %arraydestroy.element45 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %arraydestroy.elementPast44, i64 -1
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %arraydestroy.element45) #9
  %arraydestroy.done46 = icmp eq %"class.adept::Active"* %arraydestroy.element45, %49
  br i1 %arraydestroy.done46, label %arraydestroy.done47, label %arraydestroy.body43

arraydestroy.done47:                              ; preds = %arraydestroy.body43, %lpad40
  call void @_ZdaPv(i8* %call34) #32
  br label %ehcleanup97

lpad57:                                           ; preds = %invoke.cont56
  %125 = landingpad { i8*, i32 }
          cleanup
  %126 = extractvalue { i8*, i32 } %125, 0
  store i8* %126, i8** %exn.slot, align 8
  %127 = extractvalue { i8*, i32 } %125, 1
  store i32 %127, i32* %ehselector.slot, align 4
  br label %ehcleanup96

lpad59:                                           ; preds = %invoke.cont66, %invoke.cont64, %invoke.cont63, %invoke.cont62, %invoke.cont58
  %128 = landingpad { i8*, i32 }
          cleanup
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %exn.slot, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad61:                                           ; preds = %invoke.cont60
  %131 = landingpad { i8*, i32 }
          cleanup
  %132 = extractvalue { i8*, i32 } %131, 0
  store i8* %132, i8** %exn.slot, align 8
  %133 = extractvalue { i8*, i32 } %131, 1
  store i32 %133, i32* %ehselector.slot, align 4
  %134 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %134) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad61, %lpad59
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %aerr) #9
  br label %ehcleanup96

ehcleanup96:                                      ; preds = %ehcleanup, %lpad57
  %135 = bitcast %"class.adept::Active"* %aerr to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %135) #9
  br label %ehcleanup97

ehcleanup97:                                      ; preds = %ehcleanup96, %arraydestroy.done47, %lpad32
  %136 = bitcast %"class.adept::Active"** %aicf to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %136) #9
  br label %ehcleanup98

ehcleanup98:                                      ; preds = %ehcleanup97, %arraydestroy.done26, %lpad11
  %137 = bitcast %"class.adept::Active"** %ameans to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %137) #9
  br label %ehcleanup99

ehcleanup99:                                      ; preds = %ehcleanup98, %arraydestroy.done8, %lpad
  %138 = bitcast %"class.adept::Active"** %aalphas to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %138) #9
  call void @_ZN5adept5StackD1Ev(%"class.adept::Stack"* nonnull dereferenceable(149) %stack) #9
  %139 = bitcast %"class.adept::Stack"* %stack to i8*
  call void @llvm.lifetime.end.p0i8(i64 152, i8* %139) #9
  %140 = bitcast i32* %Jcols to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %140) #9
  %141 = bitcast i32* %Jrows to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %141) #9
  %142 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %142) #9
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup99
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val105 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val105
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept5StackC2Eb(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i1 zeroext %activate_immediately) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %activate_immediately.addr = alloca i8, align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %frombool = zext i1 %activate_immediately to i8
  store i8 %frombool, i8* %activate_immediately.addr, align 1, !tbaa !18
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrigC2Ev(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0)
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  store double* null, double** %gradient_, align 8, !tbaa !124
  %independent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_) #9
  %dependent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_) #9
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EEC2Ev(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_) #9
  %most_recent_gap_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %gap_list_2 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_2) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %most_recent_gap_, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  store i32 0, i32* %i_gradient_, align 8, !tbaa !147
  %n_allocated_gradients_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 7
  store i32 0, i32* %n_allocated_gradients_, align 4, !tbaa !161
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  store i32 0, i32* %max_gradient_, align 8, !tbaa !148
  %n_gradients_registered_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 9
  store i32 0, i32* %n_gradients_registered_, align 4, !tbaa !141
  %gradients_initialized_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 10
  store i8 0, i8* %gradients_initialized_, align 8, !tbaa !138
  %is_thread_unsafe_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 11
  store i8 0, i8* %is_thread_unsafe_, align 1, !tbaa !119
  %is_recording_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 12
  store i8 1, i8* %is_recording_, align 2, !tbaa !163
  %have_openmp_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 13
  store i8 0, i8* %have_openmp_, align 1, !tbaa !224
  %openmp_manually_disabled_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 14
  store i8 0, i8* %openmp_manually_disabled_, align 4, !tbaa !225
  %1 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  invoke void @_ZN5adept8internal16StackStorageOrig10initializeEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, i32 1048576)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept5Stack13new_recordingEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
          to label %invoke.cont3 unwind label %lpad

invoke.cont3:                                     ; preds = %invoke.cont
  %2 = load i8, i8* %activate_immediately.addr, align 1, !tbaa !18, !range !27
  %tobool = trunc i8 %2 to i1
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont3
  invoke void @_ZN5adept5Stack8activateEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
          to label %invoke.cont4 unwind label %lpad

invoke.cont4:                                     ; preds = %if.then
  br label %if.end

lpad:                                             ; preds = %if.then, %invoke.cont, %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.std::__cxx11::_List_base"*)* @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EED2Ev to void (%"class.std::__cxx11::list"*)*)(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_) #9
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_) #9
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_) #9
  %6 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrigD2Ev(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %6) #9
  br label %eh.resume

if.end:                                           ; preds = %invoke.cont4, %invoke.cont3
  ret void

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val5 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val5
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #16

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %this) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = bitcast %"class.adept::Active"* %this1 to %"struct.adept::Expression.40"*
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double 0.000000e+00, double* %val_, align 8, !tbaa !226
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call i32 @_ZN5adept5Stack17register_gradientEv(%"class.adept::Stack"* nonnull dereferenceable(149) %1)
  store i32 %call, i32* %gradient_index_, align 8, !tbaa !228
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  invoke void @_ZN5adept5Stack19unregister_gradientERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %0, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { i8*, i32 }
          catch i8* null
  %2 = extractvalue { i8*, i32 } %1, 0
  call void @__clang_call_terminate(i8* %2) #29
  unreachable
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept10set_valuesIdEEvPNS_6ActiveIT_EEiPKS2_(%"class.adept::Active"* %a, i32 %n, double* %data) #5 comdat {
entry:
  %a.addr = alloca %"class.adept::Active"*, align 8
  %n.addr = alloca i32, align 4
  %data.addr = alloca double*, align 8
  %i = alloca i32, align 4
  store %"class.adept::Active"* %a, %"class.adept::Active"** %a.addr, align 8, !tbaa !2
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %data, double** %data.addr, align 8, !tbaa !2
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !20
  %2 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %"class.adept::Active"*, %"class.adept::Active"** %a.addr, align 8, !tbaa !2
  %5 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %4, i64 %idxprom
  %6 = load double*, double** %data.addr, align 8, !tbaa !2
  %7 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom1 = sext i32 %7 to i64
  %arrayidx2 = getelementptr inbounds double, double* %6, i64 %idxprom1
  call void @_ZN5adept6ActiveIdE9set_valueIdEEvRKT_(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx, double* nonnull align 8 dereferenceable(8) %arrayidx2)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !229

for.end:                                          ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5Stack13new_recordingEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %ref.tmp = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig11clear_stackEv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %0)
  call void @_ZN5adept5Stack18clear_independentsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  call void @_ZN5adept5Stack16clear_dependentsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  call void @_ZN5adept5Stack15clear_gradientsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %1 = load i32, i32* %i_gradient_, align 8, !tbaa !147
  %add = add nsw i32 %1, 1
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  store i32 %add, i32* %max_gradient_, align 8, !tbaa !148
  %2 = bitcast %"class.adept::Stack"* %this1 to %"class.adept::internal::StackStorageOrig"*
  %3 = bitcast i32* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #9
  store i32 -1, i32* %ref.tmp, align 4, !tbaa !20
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %2, i32* nonnull align 4 dereferenceable(4) %ref.tmp)
  %4 = bitcast i32* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN9adeptTest13gmm_objectiveIN5adept6ActiveIdEEEEviiiPKT_S6_S6_PKd7WishartPS4_(i32 %d, i32 %k, i32 %n, %"class.adept::Active"* %alphas, %"class.adept::Active"* %means, %"class.adept::Active"* %icf, double* %x, %struct.Wishart* byval(%struct.Wishart) align 8 %wishart, %"class.adept::Active"* %err) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %d.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  %alphas.addr = alloca %"class.adept::Active"*, align 8
  %means.addr = alloca %"class.adept::Active"*, align 8
  %icf.addr = alloca %"class.adept::Active"*, align 8
  %x.addr = alloca double*, align 8
  %err.addr = alloca %"class.adept::Active"*, align 8
  %CONSTANT = alloca double, align 8
  %icf_sz = alloca i32, align 4
  %Qdiags = alloca %"class.std::vector.45", align 8
  %ref.tmp = alloca %"class.std::allocator.47", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %sum_qs = alloca %"class.std::vector.45", align 8
  %ref.tmp7 = alloca %"class.std::allocator.47", align 1
  %xcentered = alloca %"class.std::vector.45", align 8
  %ref.tmp11 = alloca %"class.std::allocator.47", align 1
  %Qxcentered = alloca %"class.std::vector.45", align 8
  %ref.tmp15 = alloca %"class.std::allocator.47", align 1
  %main_term = alloca %"class.std::vector.45", align 8
  %ref.tmp19 = alloca %"class.std::allocator.47", align 1
  %slse = alloca %"class.adept::Active", align 8
  %ref.tmp25 = alloca double, align 8
  %ix = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %ik = alloca i32, align 4
  %ref.tmp49 = alloca %"struct.adept::internal::BinaryOperation", align 8
  %ref.tmp50 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %ref.tmp58 = alloca %"struct.adept::internal::BinaryOpScalarLeft", align 16
  %ref.tmp59 = alloca double, align 8
  %ref.tmp60 = alloca %"class.adept::Active", align 8
  %ref.tmp76 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %ref.tmp77 = alloca %"class.adept::Active", align 8
  %lse_alphas = alloca %"class.adept::Active", align 8
  %ref.tmp95 = alloca %"struct.adept::internal::BinaryOperation.54", align 8
  %ref.tmp96 = alloca %"struct.adept::internal::BinaryOpScalarLeft.56", align 16
  %ref.tmp99 = alloca %"struct.adept::internal::BinaryOpScalarLeft.59", align 8
  %ref.tmp110 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %ref.tmp111 = alloca %"class.adept::Active", align 8
  %agg.tmp = alloca %struct.Wishart, align 8
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store %"class.adept::Active"* %alphas, %"class.adept::Active"** %alphas.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %means, %"class.adept::Active"** %means.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %icf, %"class.adept::Active"** %icf.addr, align 8, !tbaa !2
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %err, %"class.adept::Active"** %err.addr, align 8, !tbaa !2
  %0 = bitcast double* %CONSTANT to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = load i32, i32* %n.addr, align 4, !tbaa !20
  %sub = sub nsw i32 0, %1
  %2 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul = mul nsw i32 %sub, %2
  %conv = sitofp i32 %mul to double
  %mul1 = fmul fast double %conv, 5.000000e-01
  %3 = call fast double @llvm.log.f64(double 0x401921FB54442EEA)
  %mul2 = fmul fast double %mul1, %3
  store double %mul2, double* %CONSTANT, align 8, !tbaa !44
  %4 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #9
  %5 = load i32, i32* %d.addr, align 4, !tbaa !20
  %6 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add = add nsw i32 %6, 1
  %mul3 = mul nsw i32 %5, %add
  %div = sdiv i32 %mul3, 2
  store i32 %div, i32* %icf_sz, align 4, !tbaa !20
  %7 = bitcast %"class.std::vector.45"* %Qdiags to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %7) #9
  %8 = load i32, i32* %d.addr, align 4, !tbaa !20
  %9 = load i32, i32* %k.addr, align 4, !tbaa !20
  %mul4 = mul nsw i32 %8, %9
  %conv5 = sext i32 %mul4 to i64
  %10 = bitcast %"class.std::allocator.47"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %10) #9
  call void @_ZNSaIN5adept6ActiveIdEEEC2Ev(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"class.std::vector.45"* nonnull dereferenceable(24) %Qdiags, i64 %conv5, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"class.std::allocator.47"*)*)(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp) #9
  %11 = bitcast %"class.std::allocator.47"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #9
  %12 = bitcast %"class.std::vector.45"* %sum_qs to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %12) #9
  %13 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv6 = sext i32 %13 to i64
  %14 = bitcast %"class.std::allocator.47"* %ref.tmp7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %14) #9
  call void @_ZNSaIN5adept6ActiveIdEEEC2Ev(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp7) #9
  invoke void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"class.std::vector.45"* nonnull dereferenceable(24) %sum_qs, i64 %conv6, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %ref.tmp7)
          to label %invoke.cont9 unwind label %lpad8

invoke.cont9:                                     ; preds = %invoke.cont
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"class.std::allocator.47"*)*)(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp7) #9
  %15 = bitcast %"class.std::allocator.47"* %ref.tmp7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #9
  %16 = bitcast %"class.std::vector.45"* %xcentered to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %16) #9
  %17 = load i32, i32* %d.addr, align 4, !tbaa !20
  %conv10 = sext i32 %17 to i64
  %18 = bitcast %"class.std::allocator.47"* %ref.tmp11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %18) #9
  call void @_ZNSaIN5adept6ActiveIdEEEC2Ev(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp11) #9
  invoke void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"class.std::vector.45"* nonnull dereferenceable(24) %xcentered, i64 %conv10, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %ref.tmp11)
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %invoke.cont9
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"class.std::allocator.47"*)*)(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp11) #9
  %19 = bitcast %"class.std::allocator.47"* %ref.tmp11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %19) #9
  %20 = bitcast %"class.std::vector.45"* %Qxcentered to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %20) #9
  %21 = load i32, i32* %d.addr, align 4, !tbaa !20
  %conv14 = sext i32 %21 to i64
  %22 = bitcast %"class.std::allocator.47"* %ref.tmp15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %22) #9
  call void @_ZNSaIN5adept6ActiveIdEEEC2Ev(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp15) #9
  invoke void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"class.std::vector.45"* nonnull dereferenceable(24) %Qxcentered, i64 %conv14, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %ref.tmp15)
          to label %invoke.cont17 unwind label %lpad16

invoke.cont17:                                    ; preds = %invoke.cont13
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"class.std::allocator.47"*)*)(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp15) #9
  %23 = bitcast %"class.std::allocator.47"* %ref.tmp15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %23) #9
  %24 = bitcast %"class.std::vector.45"* %main_term to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %24) #9
  %25 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv18 = sext i32 %25 to i64
  %26 = bitcast %"class.std::allocator.47"* %ref.tmp19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %26) #9
  call void @_ZNSaIN5adept6ActiveIdEEEC2Ev(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp19) #9
  invoke void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"class.std::vector.45"* nonnull dereferenceable(24) %main_term, i64 %conv18, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %ref.tmp19)
          to label %invoke.cont21 unwind label %lpad20

invoke.cont21:                                    ; preds = %invoke.cont17
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"class.std::allocator.47"*)*)(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp19) #9
  %27 = bitcast %"class.std::allocator.47"* %ref.tmp19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %27) #9
  %28 = load i32, i32* %d.addr, align 4, !tbaa !20
  %29 = load i32, i32* %k.addr, align 4, !tbaa !20
  %30 = load %"class.adept::Active"*, %"class.adept::Active"** %icf.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %sum_qs, i64 0) #9
  %call22 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %Qdiags, i64 0) #9
  invoke void @_ZN9adeptTest13preprocess_qsIN5adept6ActiveIdEEEEviiPKT_PS4_S7_(i32 %28, i32 %29, %"class.adept::Active"* %30, %"class.adept::Active"* %call, %"class.adept::Active"* %call22)
          to label %invoke.cont24 unwind label %lpad23

invoke.cont24:                                    ; preds = %invoke.cont21
  %31 = bitcast %"class.adept::Active"* %slse to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %31) #9
  %32 = bitcast double* %ref.tmp25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %32) #9
  store double 0.000000e+00, double* %ref.tmp25, align 8, !tbaa !44
  invoke void @_ZN5adept6ActiveIdEC2IdEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %slse, double* nonnull align 8 dereferenceable(8) %ref.tmp25, i8* null)
          to label %invoke.cont27 unwind label %lpad26

invoke.cont27:                                    ; preds = %invoke.cont24
  %33 = bitcast double* %ref.tmp25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %33) #9
  %34 = bitcast i32* %ix to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #9
  store i32 0, i32* %ix, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc89, %invoke.cont27
  %35 = load i32, i32* %ix, align 4, !tbaa !20
  %36 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %35, %36
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  %37 = bitcast i32* %ix to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %37) #9
  br label %for.end92

lpad:                                             ; preds = %entry
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %exn.slot, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"class.std::allocator.47"*)*)(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp) #9
  %41 = bitcast %"class.std::allocator.47"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %41) #9
  br label %ehcleanup137

lpad8:                                            ; preds = %invoke.cont
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %exn.slot, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"class.std::allocator.47"*)*)(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp7) #9
  %45 = bitcast %"class.std::allocator.47"* %ref.tmp7 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %45) #9
  br label %ehcleanup135

lpad12:                                           ; preds = %invoke.cont9
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %exn.slot, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"class.std::allocator.47"*)*)(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp11) #9
  %49 = bitcast %"class.std::allocator.47"* %ref.tmp11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %49) #9
  br label %ehcleanup133

lpad16:                                           ; preds = %invoke.cont13
  %50 = landingpad { i8*, i32 }
          cleanup
  %51 = extractvalue { i8*, i32 } %50, 0
  store i8* %51, i8** %exn.slot, align 8
  %52 = extractvalue { i8*, i32 } %50, 1
  store i32 %52, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"class.std::allocator.47"*)*)(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp15) #9
  %53 = bitcast %"class.std::allocator.47"* %ref.tmp15 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %53) #9
  br label %ehcleanup131

lpad20:                                           ; preds = %invoke.cont17
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %exn.slot, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"class.std::allocator.47"*)*)(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp19) #9
  %57 = bitcast %"class.std::allocator.47"* %ref.tmp19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %57) #9
  br label %ehcleanup129

lpad23:                                           ; preds = %invoke.cont21
  %58 = landingpad { i8*, i32 }
          cleanup
  %59 = extractvalue { i8*, i32 } %58, 0
  store i8* %59, i8** %exn.slot, align 8
  %60 = extractvalue { i8*, i32 } %58, 1
  store i32 %60, i32* %ehselector.slot, align 4
  br label %ehcleanup128

lpad26:                                           ; preds = %invoke.cont24
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %exn.slot, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %ehselector.slot, align 4
  %64 = bitcast double* %ref.tmp25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %64) #9
  br label %ehcleanup127

for.body:                                         ; preds = %for.cond
  %65 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %65) #9
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc, %for.body
  %66 = load i32, i32* %ik, align 4, !tbaa !20
  %67 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp29 = icmp slt i32 %66, %67
  br i1 %cmp29, label %for.body31, label %for.cond.cleanup30

for.cond.cleanup30:                               ; preds = %for.cond28
  store i32 5, i32* %cleanup.dest.slot, align 4
  %68 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %68) #9
  br label %for.end

for.body31:                                       ; preds = %for.cond28
  %69 = load i32, i32* %d.addr, align 4, !tbaa !20
  %70 = load double*, double** %x.addr, align 8, !tbaa !2
  %71 = load i32, i32* %ix, align 4, !tbaa !20
  %72 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul32 = mul nsw i32 %71, %72
  %idxprom = sext i32 %mul32 to i64
  %arrayidx = getelementptr inbounds double, double* %70, i64 %idxprom
  %73 = load %"class.adept::Active"*, %"class.adept::Active"** %means.addr, align 8, !tbaa !2
  %74 = load i32, i32* %ik, align 4, !tbaa !20
  %75 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul33 = mul nsw i32 %74, %75
  %idxprom34 = sext i32 %mul33 to i64
  %arrayidx35 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %73, i64 %idxprom34
  %call36 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %xcentered, i64 0) #9
  invoke void @_ZN9adeptTest8subtractIdN5adept6ActiveIdEES3_EEviPKT_PKT0_PT1_(i32 %69, double* %arrayidx, %"class.adept::Active"* %arrayidx35, %"class.adept::Active"* %call36)
          to label %invoke.cont38 unwind label %lpad37

invoke.cont38:                                    ; preds = %for.body31
  %76 = load i32, i32* %d.addr, align 4, !tbaa !20
  %77 = load i32, i32* %ik, align 4, !tbaa !20
  %78 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul39 = mul nsw i32 %77, %78
  %conv40 = sext i32 %mul39 to i64
  %call41 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %Qdiags, i64 %conv40) #9
  %79 = load %"class.adept::Active"*, %"class.adept::Active"** %icf.addr, align 8, !tbaa !2
  %80 = load i32, i32* %ik, align 4, !tbaa !20
  %81 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul42 = mul nsw i32 %80, %81
  %82 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add43 = add nsw i32 %mul42, %82
  %idxprom44 = sext i32 %add43 to i64
  %arrayidx45 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %79, i64 %idxprom44
  %call46 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %xcentered, i64 0) #9
  %call47 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %Qxcentered, i64 0) #9
  invoke void @_ZN9adeptTest7QtimesxIN5adept6ActiveIdEEEEviPKT_S6_S6_PS4_(i32 %76, %"class.adept::Active"* %call41, %"class.adept::Active"* %arrayidx45, %"class.adept::Active"* %call46, %"class.adept::Active"* %call47)
          to label %invoke.cont48 unwind label %lpad37

invoke.cont48:                                    ; preds = %invoke.cont38
  %83 = bitcast %"struct.adept::internal::BinaryOperation"* %ref.tmp49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %83) #9
  %84 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %84) #9
  %85 = load %"class.adept::Active"*, %"class.adept::Active"** %alphas.addr, align 8, !tbaa !2
  %86 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom51 = sext i32 %86 to i64
  %arrayidx52 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %85, i64 %idxprom51
  %87 = bitcast %"class.adept::Active"* %arrayidx52 to %"struct.adept::Expression.40"*
  %88 = load i32, i32* %ik, align 4, !tbaa !20
  %conv53 = sext i32 %88 to i64
  %call54 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %sum_qs, i64 %conv53) #9
  %89 = bitcast %"class.adept::Active"* %call54 to %"struct.adept::Expression.40"*
  %call57 = invoke { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptplINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_3AddES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %87, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %89)
          to label %invoke.cont56 unwind label %lpad55

invoke.cont56:                                    ; preds = %invoke.cont48
  %90 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp50 to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %91 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %90, i32 0, i32 0
  %92 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call57, 0
  store %"class.adept::Active"* %92, %"class.adept::Active"** %91, align 8
  %93 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %90, i32 0, i32 1
  %94 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call57, 1
  store %"class.adept::Active"* %94, %"class.adept::Active"** %93, align 8
  %95 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp50 to %"struct.adept::Expression.52"*
  %96 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %ref.tmp58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %96) #9
  %97 = bitcast double* %ref.tmp59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %97) #9
  store double 5.000000e-01, double* %ref.tmp59, align 8, !tbaa !44
  %98 = bitcast %"class.adept::Active"* %ref.tmp60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %98) #9
  %99 = load i32, i32* %d.addr, align 4, !tbaa !20
  %call61 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %Qxcentered, i64 0) #9
  invoke void @_ZN9adeptTest6sqnormIN5adept6ActiveIdEEEET_iPKS4_(%"class.adept::Active"* sret(%"class.adept::Active") align 8 %ref.tmp60, i32 %99, %"class.adept::Active"* %call61)
          to label %invoke.cont63 unwind label %lpad62

invoke.cont63:                                    ; preds = %invoke.cont56
  %100 = bitcast %"class.adept::Active"* %ref.tmp60 to %"struct.adept::Expression.40"*
  invoke void @_ZN5adeptmlIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8MultiplyES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE(%"struct.adept::internal::BinaryOpScalarLeft"* sret(%"struct.adept::internal::BinaryOpScalarLeft") align 16 %ref.tmp58, double* nonnull align 8 dereferenceable(8) %ref.tmp59, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %100)
          to label %invoke.cont65 unwind label %lpad64

invoke.cont65:                                    ; preds = %invoke.cont63
  %101 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %ref.tmp58 to %"struct.adept::Expression.53"*
  invoke void @_ZN5adeptmiINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINSB_4typeENSC_4typeEE4typeESB_NS1_8SubtractESC_EEE4typeERKNS_10ExpressionISE_SB_EERKNSM_ISF_SC_EE(%"struct.adept::internal::BinaryOperation"* sret(%"struct.adept::internal::BinaryOperation") align 8 %ref.tmp49, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %95, %"struct.adept::Expression.53"* nonnull align 1 dereferenceable(1) %101)
          to label %invoke.cont66 unwind label %lpad64

invoke.cont66:                                    ; preds = %invoke.cont65
  %102 = bitcast %"struct.adept::internal::BinaryOperation"* %ref.tmp49 to %"struct.adept::Expression.50"*
  %103 = load i32, i32* %ik, align 4, !tbaa !20
  %conv67 = sext i32 %103 to i64
  %call68 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %main_term, i64 %conv67) #9
  %call70 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_3AddES1_EENS3_8SubtractENS3_18BinaryOpScalarLeftIddNS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE(%"class.adept::Active"* nonnull dereferenceable(12) %call68, %"struct.adept::Expression.50"* nonnull align 1 dereferenceable(1) %102)
          to label %invoke.cont69 unwind label %lpad64

invoke.cont69:                                    ; preds = %invoke.cont66
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp60) #9
  %104 = bitcast %"class.adept::Active"* %ref.tmp60 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %104) #9
  %105 = bitcast double* %ref.tmp59 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %105) #9
  %106 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %ref.tmp58 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %106) #9
  %107 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp50 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %107) #9
  %108 = bitcast %"struct.adept::internal::BinaryOperation"* %ref.tmp49 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %108) #9
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont69
  %109 = load i32, i32* %ik, align 4, !tbaa !20
  %inc = add nsw i32 %109, 1
  store i32 %inc, i32* %ik, align 4, !tbaa !20
  br label %for.cond28, !llvm.loop !230

lpad37:                                           ; preds = %invoke.cont38, %for.body31
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %exn.slot, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %ehselector.slot, align 4
  br label %ehcleanup75

lpad55:                                           ; preds = %invoke.cont48
  %113 = landingpad { i8*, i32 }
          cleanup
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %exn.slot, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %ehselector.slot, align 4
  br label %ehcleanup73

lpad62:                                           ; preds = %invoke.cont56
  %116 = landingpad { i8*, i32 }
          cleanup
  %117 = extractvalue { i8*, i32 } %116, 0
  store i8* %117, i8** %exn.slot, align 8
  %118 = extractvalue { i8*, i32 } %116, 1
  store i32 %118, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad64:                                           ; preds = %invoke.cont66, %invoke.cont65, %invoke.cont63
  %119 = landingpad { i8*, i32 }
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %exn.slot, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %ehselector.slot, align 4
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp60) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad64, %lpad62
  %122 = bitcast %"class.adept::Active"* %ref.tmp60 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %122) #9
  %123 = bitcast double* %ref.tmp59 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %123) #9
  %124 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %ref.tmp58 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %124) #9
  br label %ehcleanup73

ehcleanup73:                                      ; preds = %ehcleanup, %lpad55
  %125 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp50 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %125) #9
  %126 = bitcast %"struct.adept::internal::BinaryOperation"* %ref.tmp49 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %126) #9
  br label %ehcleanup75

ehcleanup75:                                      ; preds = %ehcleanup73, %lpad37
  %127 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %127) #9
  br label %ehcleanup91

for.end:                                          ; preds = %for.cond.cleanup30
  %128 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %128) #9
  %129 = bitcast %"class.adept::Active"* %slse to %"struct.adept::Expression.40"*
  %130 = bitcast %"class.adept::Active"* %ref.tmp77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %130) #9
  %131 = load i32, i32* %k.addr, align 4, !tbaa !20
  %call78 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %main_term, i64 0) #9
  invoke void @_ZN9adeptTest9logsumexpIN5adept6ActiveIdEEEET_iPKS4_(%"class.adept::Active"* sret(%"class.adept::Active") align 8 %ref.tmp77, i32 %131, %"class.adept::Active"* %call78)
          to label %invoke.cont80 unwind label %lpad79

invoke.cont80:                                    ; preds = %for.end
  %132 = bitcast %"class.adept::Active"* %ref.tmp77 to %"struct.adept::Expression.40"*
  %call83 = invoke { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptplINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_3AddES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %129, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %132)
          to label %invoke.cont82 unwind label %lpad81

invoke.cont82:                                    ; preds = %invoke.cont80
  %133 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp76 to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %134 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %133, i32 0, i32 0
  %135 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call83, 0
  store %"class.adept::Active"* %135, %"class.adept::Active"** %134, align 8
  %136 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %133, i32 0, i32 1
  %137 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call83, 1
  store %"class.adept::Active"* %137, %"class.adept::Active"** %136, align 8
  %138 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp76 to %"struct.adept::Expression.52"*
  %call85 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %slse, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %138)
          to label %invoke.cont84 unwind label %lpad81

invoke.cont84:                                    ; preds = %invoke.cont82
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp77) #9
  %139 = bitcast %"class.adept::Active"* %ref.tmp77 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %139) #9
  %140 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp76 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %140) #9
  br label %for.inc89

for.inc89:                                        ; preds = %invoke.cont84
  %141 = load i32, i32* %ix, align 4, !tbaa !20
  %inc90 = add nsw i32 %141, 1
  store i32 %inc90, i32* %ix, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !231

lpad79:                                           ; preds = %for.end
  %142 = landingpad { i8*, i32 }
          cleanup
  %143 = extractvalue { i8*, i32 } %142, 0
  store i8* %143, i8** %exn.slot, align 8
  %144 = extractvalue { i8*, i32 } %142, 1
  store i32 %144, i32* %ehselector.slot, align 4
  br label %ehcleanup87

lpad81:                                           ; preds = %invoke.cont82, %invoke.cont80
  %145 = landingpad { i8*, i32 }
          cleanup
  %146 = extractvalue { i8*, i32 } %145, 0
  store i8* %146, i8** %exn.slot, align 8
  %147 = extractvalue { i8*, i32 } %145, 1
  store i32 %147, i32* %ehselector.slot, align 4
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp77) #9
  br label %ehcleanup87

ehcleanup87:                                      ; preds = %lpad81, %lpad79
  %148 = bitcast %"class.adept::Active"* %ref.tmp77 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %148) #9
  %149 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp76 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %149) #9
  br label %ehcleanup91

ehcleanup91:                                      ; preds = %ehcleanup87, %ehcleanup75
  %150 = bitcast i32* %ix to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %150) #9
  br label %ehcleanup126

for.end92:                                        ; preds = %for.cond.cleanup
  %151 = bitcast %"class.adept::Active"* %lse_alphas to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %151) #9
  %152 = load i32, i32* %k.addr, align 4, !tbaa !20
  %153 = load %"class.adept::Active"*, %"class.adept::Active"** %alphas.addr, align 8, !tbaa !2
  invoke void @_ZN9adeptTest9logsumexpIN5adept6ActiveIdEEEET_iPKS4_(%"class.adept::Active"* sret(%"class.adept::Active") align 8 %lse_alphas, i32 %152, %"class.adept::Active"* %153)
          to label %invoke.cont94 unwind label %lpad93

invoke.cont94:                                    ; preds = %for.end92
  %154 = bitcast %"struct.adept::internal::BinaryOperation.54"* %ref.tmp95 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %154) #9
  %155 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.56"* %ref.tmp96 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %155) #9
  %156 = bitcast %"class.adept::Active"* %slse to %"struct.adept::Expression.40"*
  invoke void @_ZN5adeptplIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_3AddES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE(%"struct.adept::internal::BinaryOpScalarLeft.56"* sret(%"struct.adept::internal::BinaryOpScalarLeft.56") align 16 %ref.tmp96, double* nonnull align 8 dereferenceable(8) %CONSTANT, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %156)
          to label %invoke.cont98 unwind label %lpad97

invoke.cont98:                                    ; preds = %invoke.cont94
  %157 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.56"* %ref.tmp96 to %"struct.adept::Expression.57"*
  %158 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp99 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %158) #9
  %159 = bitcast %"class.adept::Active"* %lse_alphas to %"struct.adept::Expression.40"*
  %call102 = invoke { i32, %"class.adept::Active"* } @_ZN5adeptmlIiNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8MultiplyES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE(i32* nonnull align 4 dereferenceable(4) %n.addr, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %159)
          to label %invoke.cont101 unwind label %lpad100

invoke.cont101:                                   ; preds = %invoke.cont98
  %160 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp99 to { i32, %"class.adept::Active"* }*
  %161 = getelementptr inbounds { i32, %"class.adept::Active"* }, { i32, %"class.adept::Active"* }* %160, i32 0, i32 0
  %162 = extractvalue { i32, %"class.adept::Active"* } %call102, 0
  store i32 %162, i32* %161, align 8
  %163 = getelementptr inbounds { i32, %"class.adept::Active"* }, { i32, %"class.adept::Active"* }* %160, i32 0, i32 1
  %164 = extractvalue { i32, %"class.adept::Active"* } %call102, 1
  store %"class.adept::Active"* %164, %"class.adept::Active"** %163, align 8
  %165 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp99 to %"struct.adept::Expression.60"*
  %call104 = invoke { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* } @_ZN5adeptmiINS_8internal18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEENS2_IdiNS1_8MultiplyES5_EEEENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS1_15BinaryOperationINS1_7promoteINSA_4typeENSB_4typeEE4typeESA_NS1_8SubtractESB_EEE4typeERKNS_10ExpressionISE_SA_EERKNSM_ISF_SB_EE(%"struct.adept::Expression.57"* nonnull align 1 dereferenceable(1) %157, %"struct.adept::Expression.60"* nonnull align 1 dereferenceable(1) %165)
          to label %invoke.cont103 unwind label %lpad100

invoke.cont103:                                   ; preds = %invoke.cont101
  %166 = bitcast %"struct.adept::internal::BinaryOperation.54"* %ref.tmp95 to { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* }*
  %167 = getelementptr inbounds { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* }, { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* }* %166, i32 0, i32 0
  %168 = extractvalue { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* } %call104, 0
  store %"struct.adept::internal::BinaryOpScalarLeft.56"* %168, %"struct.adept::internal::BinaryOpScalarLeft.56"** %167, align 8
  %169 = getelementptr inbounds { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* }, { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* }* %166, i32 0, i32 1
  %170 = extractvalue { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* } %call104, 1
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %170, %"struct.adept::internal::BinaryOpScalarLeft.59"** %169, align 8
  %171 = bitcast %"struct.adept::internal::BinaryOperation.54"* %ref.tmp95 to %"struct.adept::Expression.55"*
  %172 = load %"class.adept::Active"*, %"class.adept::Active"** %err.addr, align 8, !tbaa !2
  %call106 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS3_18BinaryOpScalarLeftIddNS3_3AddES1_EENS3_8SubtractENS5_IdiNS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE(%"class.adept::Active"* nonnull dereferenceable(12) %172, %"struct.adept::Expression.55"* nonnull align 1 dereferenceable(1) %171)
          to label %invoke.cont105 unwind label %lpad100

invoke.cont105:                                   ; preds = %invoke.cont103
  %173 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp99 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %173) #9
  %174 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.56"* %ref.tmp96 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %174) #9
  %175 = bitcast %"struct.adept::internal::BinaryOperation.54"* %ref.tmp95 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %175) #9
  %176 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp110 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %176) #9
  %177 = load %"class.adept::Active"*, %"class.adept::Active"** %err.addr, align 8, !tbaa !2
  %178 = bitcast %"class.adept::Active"* %177 to %"struct.adept::Expression.40"*
  %179 = bitcast %"class.adept::Active"* %ref.tmp111 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %179) #9
  %180 = load i32, i32* %d.addr, align 4, !tbaa !20
  %181 = load i32, i32* %k.addr, align 4, !tbaa !20
  %182 = bitcast %struct.Wishart* %agg.tmp to i8*
  %183 = bitcast %struct.Wishart* %wishart to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 16, i1 false), !tbaa.struct !52
  %call112 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %sum_qs, i64 0) #9
  %call113 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %Qdiags, i64 0) #9
  %184 = load %"class.adept::Active"*, %"class.adept::Active"** %icf.addr, align 8, !tbaa !2
  %185 = bitcast %struct.Wishart* %agg.tmp to { double, i32 }*
  %186 = getelementptr inbounds { double, i32 }, { double, i32 }* %185, i32 0, i32 0
  %187 = load double, double* %186, align 8
  %188 = getelementptr inbounds { double, i32 }, { double, i32 }* %185, i32 0, i32 1
  %189 = load i32, i32* %188, align 8
  invoke void @_ZN9adeptTest17log_wishart_priorIN5adept6ActiveIdEEEET_ii7WishartPKS4_S7_S7_(%"class.adept::Active"* sret(%"class.adept::Active") align 8 %ref.tmp111, i32 %180, i32 %181, double %187, i32 %189, %"class.adept::Active"* %call112, %"class.adept::Active"* %call113, %"class.adept::Active"* %184)
          to label %invoke.cont115 unwind label %lpad114

invoke.cont115:                                   ; preds = %invoke.cont105
  %190 = bitcast %"class.adept::Active"* %ref.tmp111 to %"struct.adept::Expression.40"*
  %call118 = invoke { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptplINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_3AddES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %178, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %190)
          to label %invoke.cont117 unwind label %lpad116

invoke.cont117:                                   ; preds = %invoke.cont115
  %191 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp110 to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %192 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %191, i32 0, i32 0
  %193 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call118, 0
  store %"class.adept::Active"* %193, %"class.adept::Active"** %192, align 8
  %194 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %191, i32 0, i32 1
  %195 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call118, 1
  store %"class.adept::Active"* %195, %"class.adept::Active"** %194, align 8
  %196 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp110 to %"struct.adept::Expression.52"*
  %197 = load %"class.adept::Active"*, %"class.adept::Active"** %err.addr, align 8, !tbaa !2
  %call120 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %197, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %196)
          to label %invoke.cont119 unwind label %lpad116

invoke.cont119:                                   ; preds = %invoke.cont117
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp111) #9
  %198 = bitcast %"class.adept::Active"* %ref.tmp111 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %198) #9
  %199 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp110 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %199) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %lse_alphas) #9
  %200 = bitcast %"class.adept::Active"* %lse_alphas to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %200) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %slse) #9
  %201 = bitcast %"class.adept::Active"* %slse to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %201) #9
  call void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev(%"class.std::vector.45"* nonnull dereferenceable(24) %main_term) #9
  %202 = bitcast %"class.std::vector.45"* %main_term to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %202) #9
  call void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev(%"class.std::vector.45"* nonnull dereferenceable(24) %Qxcentered) #9
  %203 = bitcast %"class.std::vector.45"* %Qxcentered to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %203) #9
  call void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev(%"class.std::vector.45"* nonnull dereferenceable(24) %xcentered) #9
  %204 = bitcast %"class.std::vector.45"* %xcentered to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %204) #9
  call void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev(%"class.std::vector.45"* nonnull dereferenceable(24) %sum_qs) #9
  %205 = bitcast %"class.std::vector.45"* %sum_qs to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %205) #9
  call void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev(%"class.std::vector.45"* nonnull dereferenceable(24) %Qdiags) #9
  %206 = bitcast %"class.std::vector.45"* %Qdiags to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %206) #9
  %207 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %207) #9
  %208 = bitcast double* %CONSTANT to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %208) #9
  ret void

lpad93:                                           ; preds = %for.end92
  %209 = landingpad { i8*, i32 }
          cleanup
  %210 = extractvalue { i8*, i32 } %209, 0
  store i8* %210, i8** %exn.slot, align 8
  %211 = extractvalue { i8*, i32 } %209, 1
  store i32 %211, i32* %ehselector.slot, align 4
  br label %ehcleanup125

lpad97:                                           ; preds = %invoke.cont94
  %212 = landingpad { i8*, i32 }
          cleanup
  %213 = extractvalue { i8*, i32 } %212, 0
  store i8* %213, i8** %exn.slot, align 8
  %214 = extractvalue { i8*, i32 } %212, 1
  store i32 %214, i32* %ehselector.slot, align 4
  br label %ehcleanup108

lpad100:                                          ; preds = %invoke.cont103, %invoke.cont101, %invoke.cont98
  %215 = landingpad { i8*, i32 }
          cleanup
  %216 = extractvalue { i8*, i32 } %215, 0
  store i8* %216, i8** %exn.slot, align 8
  %217 = extractvalue { i8*, i32 } %215, 1
  store i32 %217, i32* %ehselector.slot, align 4
  %218 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp99 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %218) #9
  br label %ehcleanup108

ehcleanup108:                                     ; preds = %lpad100, %lpad97
  %219 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.56"* %ref.tmp96 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %219) #9
  %220 = bitcast %"struct.adept::internal::BinaryOperation.54"* %ref.tmp95 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %220) #9
  br label %ehcleanup124

lpad114:                                          ; preds = %invoke.cont105
  %221 = landingpad { i8*, i32 }
          cleanup
  %222 = extractvalue { i8*, i32 } %221, 0
  store i8* %222, i8** %exn.slot, align 8
  %223 = extractvalue { i8*, i32 } %221, 1
  store i32 %223, i32* %ehselector.slot, align 4
  br label %ehcleanup122

lpad116:                                          ; preds = %invoke.cont117, %invoke.cont115
  %224 = landingpad { i8*, i32 }
          cleanup
  %225 = extractvalue { i8*, i32 } %224, 0
  store i8* %225, i8** %exn.slot, align 8
  %226 = extractvalue { i8*, i32 } %224, 1
  store i32 %226, i32* %ehselector.slot, align 4
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp111) #9
  br label %ehcleanup122

ehcleanup122:                                     ; preds = %lpad116, %lpad114
  %227 = bitcast %"class.adept::Active"* %ref.tmp111 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %227) #9
  %228 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp110 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %228) #9
  br label %ehcleanup124

ehcleanup124:                                     ; preds = %ehcleanup122, %ehcleanup108
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %lse_alphas) #9
  br label %ehcleanup125

ehcleanup125:                                     ; preds = %ehcleanup124, %lpad93
  %229 = bitcast %"class.adept::Active"* %lse_alphas to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %229) #9
  br label %ehcleanup126

ehcleanup126:                                     ; preds = %ehcleanup125, %ehcleanup91
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %slse) #9
  br label %ehcleanup127

ehcleanup127:                                     ; preds = %ehcleanup126, %lpad26
  %230 = bitcast %"class.adept::Active"* %slse to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %230) #9
  br label %ehcleanup128

ehcleanup128:                                     ; preds = %ehcleanup127, %lpad23
  call void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev(%"class.std::vector.45"* nonnull dereferenceable(24) %main_term) #9
  br label %ehcleanup129

ehcleanup129:                                     ; preds = %ehcleanup128, %lpad20
  %231 = bitcast %"class.std::vector.45"* %main_term to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %231) #9
  call void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev(%"class.std::vector.45"* nonnull dereferenceable(24) %Qxcentered) #9
  br label %ehcleanup131

ehcleanup131:                                     ; preds = %ehcleanup129, %lpad16
  %232 = bitcast %"class.std::vector.45"* %Qxcentered to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %232) #9
  call void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev(%"class.std::vector.45"* nonnull dereferenceable(24) %xcentered) #9
  br label %ehcleanup133

ehcleanup133:                                     ; preds = %ehcleanup131, %lpad12
  %233 = bitcast %"class.std::vector.45"* %xcentered to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %233) #9
  call void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev(%"class.std::vector.45"* nonnull dereferenceable(24) %sum_qs) #9
  br label %ehcleanup135

ehcleanup135:                                     ; preds = %ehcleanup133, %lpad8
  %234 = bitcast %"class.std::vector.45"* %sum_qs to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %234) #9
  call void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev(%"class.std::vector.45"* nonnull dereferenceable(24) %Qdiags) #9
  br label %ehcleanup137

ehcleanup137:                                     ; preds = %ehcleanup135, %lpad
  %235 = bitcast %"class.std::vector.45"* %Qdiags to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %235) #9
  %236 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %236) #9
  %237 = bitcast double* %CONSTANT to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %237) #9
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup137
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val140 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val140
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept6ActiveIdE12set_gradientIdEEvRKT_(%"class.adept::Active"* nonnull dereferenceable(12) %this, double* nonnull align 8 dereferenceable(8) %gradient) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %gradient.addr = alloca double*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store double* %gradient, double** %gradient.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  %1 = load i32, i32* %gradient_index_, align 8, !tbaa !228
  %gradient_index_2 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  %2 = load i32, i32* %gradient_index_2, align 8, !tbaa !228
  %add = add nsw i32 %2, 1
  %3 = load double*, double** %gradient.addr, align 8, !tbaa !2
  call void @_ZN5adept5Stack13set_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPKS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %0, i32 %1, i32 %add, double* %3)
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept13get_gradientsIdEEvPKNS_6ActiveIT_EEiPS2_(%"class.adept::Active"* %a, i32 %n, double* %data) #5 comdat {
entry:
  %a.addr = alloca %"class.adept::Active"*, align 8
  %n.addr = alloca i32, align 4
  %data.addr = alloca double*, align 8
  %i = alloca i32, align 4
  store %"class.adept::Active"* %a, %"class.adept::Active"** %a.addr, align 8, !tbaa !2
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store double* %data, double** %data.addr, align 8, !tbaa !2
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !20
  %2 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %"class.adept::Active"*, %"class.adept::Active"** %a.addr, align 8, !tbaa !2
  %5 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %4, i64 %idxprom
  %6 = load double*, double** %data.addr, align 8, !tbaa !2
  %7 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom1 = sext i32 %7 to i64
  %arrayidx2 = getelementptr inbounds double, double* %6, i64 %idxprom1
  call void @_ZNK5adept6ActiveIdE12get_gradientIdEEvRT_(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx, double* nonnull align 8 dereferenceable(8) %arrayidx2)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !232

for.end:                                          ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_string_length = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 1
  %0 = load i64, i64* %_M_string_length, align 8, !tbaa !233
  ret i64 %0
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZSt5equalISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEESC_EbT_SD_T0_(%"class.std::reverse_iterator"* %__first1, %"class.std::reverse_iterator"* %__last1, %"class.std::reverse_iterator"* %__first2) #5 comdat {
entry:
  %agg.tmp = alloca %"class.std::reverse_iterator.42", align 8
  %agg.tmp1 = alloca %"class.std::reverse_iterator", align 8
  %agg.tmp2 = alloca %"class.std::reverse_iterator.42", align 8
  %agg.tmp3 = alloca %"class.std::reverse_iterator", align 8
  %agg.tmp4 = alloca %"class.std::reverse_iterator.42", align 8
  %agg.tmp5 = alloca %"class.std::reverse_iterator", align 8
  call void @_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ERKSB_(%"class.std::reverse_iterator"* nonnull dereferenceable(8) %agg.tmp1, %"class.std::reverse_iterator"* nonnull align 8 dereferenceable(8) %__first1)
  call void @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEDTcl23__make_reverse_iteratorcl12__niter_basecldtfp_4baseEEEESt16reverse_iteratorIT_E(%"class.std::reverse_iterator.42"* sret(%"class.std::reverse_iterator.42") align 8 %agg.tmp, %"class.std::reverse_iterator"* %agg.tmp1)
  call void @_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ERKSB_(%"class.std::reverse_iterator"* nonnull dereferenceable(8) %agg.tmp3, %"class.std::reverse_iterator"* nonnull align 8 dereferenceable(8) %__last1)
  call void @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEDTcl23__make_reverse_iteratorcl12__niter_basecldtfp_4baseEEEESt16reverse_iteratorIT_E(%"class.std::reverse_iterator.42"* sret(%"class.std::reverse_iterator.42") align 8 %agg.tmp2, %"class.std::reverse_iterator"* %agg.tmp3)
  call void @_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ERKSB_(%"class.std::reverse_iterator"* nonnull dereferenceable(8) %agg.tmp5, %"class.std::reverse_iterator"* nonnull align 8 dereferenceable(8) %__first2)
  call void @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEDTcl23__make_reverse_iteratorcl12__niter_basecldtfp_4baseEEEESt16reverse_iteratorIT_E(%"class.std::reverse_iterator.42"* sret(%"class.std::reverse_iterator.42") align 8 %agg.tmp4, %"class.std::reverse_iterator"* %agg.tmp5)
  %call = call zeroext i1 @_ZSt11__equal_auxISt16reverse_iteratorIPKcES3_EbT_S4_T0_(%"class.std::reverse_iterator.42"* %agg.tmp, %"class.std::reverse_iterator.42"* %agg.tmp2, %"class.std::reverse_iterator.42"* %agg.tmp4)
  ret i1 %call
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv(%"class.std::reverse_iterator"* noalias sret(%"class.std::reverse_iterator") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.41", align 8
  %0 = bitcast %"class.std::reverse_iterator"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %agg.tmp, i32 0, i32 0
  store i8* %call, i8** %coerce.dive, align 8
  %coerce.dive2 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %agg.tmp, i32 0, i32 0
  %1 = load i8*, i8** %coerce.dive2, align 8
  invoke void @_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ESA_(%"class.std::reverse_iterator"* nonnull dereferenceable(8) %agg.result, i8* %1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #29
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv(%"class.std::reverse_iterator"* noalias sret(%"class.std::reverse_iterator") align 8 %agg.result, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.41", align 8
  %0 = bitcast %"class.std::reverse_iterator"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %agg.tmp, i32 0, i32 0
  store i8* %call, i8** %coerce.dive, align 8
  %coerce.dive2 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %agg.tmp, i32 0, i32 0
  %1 = load i8*, i8** %coerce.dive2, align 8
  invoke void @_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ESA_(%"class.std::reverse_iterator"* nonnull dereferenceable(8) %agg.result, i8* %1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #29
  unreachable
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZSt11__equal_auxISt16reverse_iteratorIPKcES3_EbT_S4_T0_(%"class.std::reverse_iterator.42"* %__first1, %"class.std::reverse_iterator.42"* %__last1, %"class.std::reverse_iterator.42"* %__first2) #5 comdat {
entry:
  %__simple = alloca i8, align 1
  %agg.tmp = alloca %"class.std::reverse_iterator.42", align 8
  %agg.tmp1 = alloca %"class.std::reverse_iterator.42", align 8
  %agg.tmp2 = alloca %"class.std::reverse_iterator.42", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %__simple) #9
  store i8 0, i8* %__simple, align 1, !tbaa !18
  call void @_ZNSt16reverse_iteratorIPKcEC2ERKS2_(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %agg.tmp, %"class.std::reverse_iterator.42"* nonnull align 8 dereferenceable(8) %__first1)
  call void @_ZNSt16reverse_iteratorIPKcEC2ERKS2_(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %agg.tmp1, %"class.std::reverse_iterator.42"* nonnull align 8 dereferenceable(8) %__last1)
  call void @_ZNSt16reverse_iteratorIPKcEC2ERKS2_(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %agg.tmp2, %"class.std::reverse_iterator.42"* nonnull align 8 dereferenceable(8) %__first2)
  %call = call zeroext i1 @_ZNSt7__equalILb0EE5equalISt16reverse_iteratorIPKcES5_EEbT_S6_T0_(%"class.std::reverse_iterator.42"* %agg.tmp, %"class.std::reverse_iterator.42"* %agg.tmp1, %"class.std::reverse_iterator.42"* %agg.tmp2)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %__simple) #9
  ret i1 %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEDTcl23__make_reverse_iteratorcl12__niter_basecldtfp_4baseEEEESt16reverse_iteratorIT_E(%"class.std::reverse_iterator.42"* noalias sret(%"class.std::reverse_iterator.42") align 8 %agg.result, %"class.std::reverse_iterator"* %__it) #0 comdat {
entry:
  %result.ptr = alloca i8*, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.41", align 8
  %0 = bitcast %"class.std::reverse_iterator.42"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  %call = call i8* @_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE4baseEv(%"class.std::reverse_iterator"* nonnull dereferenceable(8) %__it)
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %agg.tmp, i32 0, i32 0
  store i8* %call, i8** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %agg.tmp, i32 0, i32 0
  %1 = load i8*, i8** %coerce.dive1, align 8
  %call2 = call i8* @_ZSt12__niter_baseIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE(i8* %1) #9
  call void @_ZSt23__make_reverse_iteratorIPKcESt16reverse_iteratorIT_ES3_(%"class.std::reverse_iterator.42"* sret(%"class.std::reverse_iterator.42") align 8 %agg.result, i8* %call2)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ERKSB_(%"class.std::reverse_iterator"* nonnull dereferenceable(8) %this, %"class.std::reverse_iterator"* nonnull align 8 dereferenceable(8) %__x) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::reverse_iterator"*, align 8
  %__x.addr = alloca %"class.std::reverse_iterator"*, align 8
  store %"class.std::reverse_iterator"* %this, %"class.std::reverse_iterator"** %this.addr, align 8, !tbaa !2
  store %"class.std::reverse_iterator"* %__x, %"class.std::reverse_iterator"** %__x.addr, align 8, !tbaa !2
  %this1 = load %"class.std::reverse_iterator"*, %"class.std::reverse_iterator"** %this.addr, align 8
  %0 = bitcast %"class.std::reverse_iterator"* %this1 to %"struct.std::iterator"*
  %current = getelementptr inbounds %"class.std::reverse_iterator", %"class.std::reverse_iterator"* %this1, i32 0, i32 0
  %1 = load %"class.std::reverse_iterator"*, %"class.std::reverse_iterator"** %__x.addr, align 8, !tbaa !2
  %current2 = getelementptr inbounds %"class.std::reverse_iterator", %"class.std::reverse_iterator"* %1, i32 0, i32 0
  %2 = bitcast %"class.__gnu_cxx::__normal_iterator.41"* %current to i8*
  %3 = bitcast %"class.__gnu_cxx::__normal_iterator.41"* %current2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false), !tbaa.struct !145
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZNSt7__equalILb0EE5equalISt16reverse_iteratorIPKcES5_EEbT_S6_T0_(%"class.std::reverse_iterator.42"* %__first1, %"class.std::reverse_iterator.42"* %__last1, %"class.std::reverse_iterator.42"* %__first2) #0 comdat align 2 {
entry:
  %retval = alloca i1, align 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i1 @_ZStneIPKcEbRKSt16reverse_iteratorIT_ES6_(%"class.std::reverse_iterator.42"* nonnull align 8 dereferenceable(8) %__first1, %"class.std::reverse_iterator.42"* nonnull align 8 dereferenceable(8) %__last1)
  br i1 %call, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call1 = call nonnull align 1 dereferenceable(1) i8* @_ZNKSt16reverse_iteratorIPKcEdeEv(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %__first1)
  %0 = load i8, i8* %call1, align 1, !tbaa !14
  %conv = sext i8 %0 to i32
  %call2 = call nonnull align 1 dereferenceable(1) i8* @_ZNKSt16reverse_iteratorIPKcEdeEv(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %__first2)
  %1 = load i8, i8* %call2, align 1, !tbaa !14
  %conv3 = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, %conv3
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  store i1 false, i1* %retval, align 1
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %call4 = call nonnull align 8 dereferenceable(8) %"class.std::reverse_iterator.42"* @_ZNSt16reverse_iteratorIPKcEppEv(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %__first1)
  %call5 = call nonnull align 8 dereferenceable(8) %"class.std::reverse_iterator.42"* @_ZNSt16reverse_iteratorIPKcEppEv(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %__first2)
  br label %for.cond, !llvm.loop !236

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %retval, align 1
  br label %return

return:                                           ; preds = %for.end, %if.then
  %2 = load i1, i1* %retval, align 1
  ret i1 %2
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt16reverse_iteratorIPKcEC2ERKS2_(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %this, %"class.std::reverse_iterator.42"* nonnull align 8 dereferenceable(8) %__x) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::reverse_iterator.42"*, align 8
  %__x.addr = alloca %"class.std::reverse_iterator.42"*, align 8
  store %"class.std::reverse_iterator.42"* %this, %"class.std::reverse_iterator.42"** %this.addr, align 8, !tbaa !2
  store %"class.std::reverse_iterator.42"* %__x, %"class.std::reverse_iterator.42"** %__x.addr, align 8, !tbaa !2
  %this1 = load %"class.std::reverse_iterator.42"*, %"class.std::reverse_iterator.42"** %this.addr, align 8
  %0 = bitcast %"class.std::reverse_iterator.42"* %this1 to %"struct.std::iterator"*
  %current = getelementptr inbounds %"class.std::reverse_iterator.42", %"class.std::reverse_iterator.42"* %this1, i32 0, i32 0
  %1 = load %"class.std::reverse_iterator.42"*, %"class.std::reverse_iterator.42"** %__x.addr, align 8, !tbaa !2
  %current2 = getelementptr inbounds %"class.std::reverse_iterator.42", %"class.std::reverse_iterator.42"* %1, i32 0, i32 0
  %2 = load i8*, i8** %current2, align 8, !tbaa !237
  store i8* %2, i8** %current, align 8, !tbaa !237
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZStneIPKcEbRKSt16reverse_iteratorIT_ES6_(%"class.std::reverse_iterator.42"* nonnull align 8 dereferenceable(8) %__x, %"class.std::reverse_iterator.42"* nonnull align 8 dereferenceable(8) %__y) #5 comdat {
entry:
  %__x.addr = alloca %"class.std::reverse_iterator.42"*, align 8
  %__y.addr = alloca %"class.std::reverse_iterator.42"*, align 8
  store %"class.std::reverse_iterator.42"* %__x, %"class.std::reverse_iterator.42"** %__x.addr, align 8, !tbaa !2
  store %"class.std::reverse_iterator.42"* %__y, %"class.std::reverse_iterator.42"** %__y.addr, align 8, !tbaa !2
  %0 = load %"class.std::reverse_iterator.42"*, %"class.std::reverse_iterator.42"** %__x.addr, align 8, !tbaa !2
  %1 = load %"class.std::reverse_iterator.42"*, %"class.std::reverse_iterator.42"** %__y.addr, align 8, !tbaa !2
  %call = call zeroext i1 @_ZSteqIPKcEbRKSt16reverse_iteratorIT_ES6_(%"class.std::reverse_iterator.42"* nonnull align 8 dereferenceable(8) %0, %"class.std::reverse_iterator.42"* nonnull align 8 dereferenceable(8) %1)
  %lnot = xor i1 %call, true
  ret i1 %lnot
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) i8* @_ZNKSt16reverse_iteratorIPKcEdeEv(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::reverse_iterator.42"*, align 8
  %__tmp = alloca i8*, align 8
  store %"class.std::reverse_iterator.42"* %this, %"class.std::reverse_iterator.42"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::reverse_iterator.42"*, %"class.std::reverse_iterator.42"** %this.addr, align 8
  %0 = bitcast i8** %__tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %current = getelementptr inbounds %"class.std::reverse_iterator.42", %"class.std::reverse_iterator.42"* %this1, i32 0, i32 0
  %1 = load i8*, i8** %current, align 8, !tbaa !237
  store i8* %1, i8** %__tmp, align 8, !tbaa !2
  %2 = load i8*, i8** %__tmp, align 8, !tbaa !2
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 -1
  store i8* %incdec.ptr, i8** %__tmp, align 8, !tbaa !2
  %3 = bitcast i8** %__tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #9
  ret i8* %incdec.ptr
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) %"class.std::reverse_iterator.42"* @_ZNSt16reverse_iteratorIPKcEppEv(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::reverse_iterator.42"*, align 8
  store %"class.std::reverse_iterator.42"* %this, %"class.std::reverse_iterator.42"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::reverse_iterator.42"*, %"class.std::reverse_iterator.42"** %this.addr, align 8
  %current = getelementptr inbounds %"class.std::reverse_iterator.42", %"class.std::reverse_iterator.42"* %this1, i32 0, i32 0
  %0 = load i8*, i8** %current, align 8, !tbaa !237
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i32 -1
  store i8* %incdec.ptr, i8** %current, align 8, !tbaa !237
  ret %"class.std::reverse_iterator.42"* %this1
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZSteqIPKcEbRKSt16reverse_iteratorIT_ES6_(%"class.std::reverse_iterator.42"* nonnull align 8 dereferenceable(8) %__x, %"class.std::reverse_iterator.42"* nonnull align 8 dereferenceable(8) %__y) #5 comdat {
entry:
  %__x.addr = alloca %"class.std::reverse_iterator.42"*, align 8
  %__y.addr = alloca %"class.std::reverse_iterator.42"*, align 8
  store %"class.std::reverse_iterator.42"* %__x, %"class.std::reverse_iterator.42"** %__x.addr, align 8, !tbaa !2
  store %"class.std::reverse_iterator.42"* %__y, %"class.std::reverse_iterator.42"** %__y.addr, align 8, !tbaa !2
  %0 = load %"class.std::reverse_iterator.42"*, %"class.std::reverse_iterator.42"** %__x.addr, align 8, !tbaa !2
  %call = call i8* @_ZNKSt16reverse_iteratorIPKcE4baseEv(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %0)
  %1 = load %"class.std::reverse_iterator.42"*, %"class.std::reverse_iterator.42"** %__y.addr, align 8, !tbaa !2
  %call1 = call i8* @_ZNKSt16reverse_iteratorIPKcE4baseEv(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %1)
  %cmp = icmp eq i8* %call, %call1
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZNKSt16reverse_iteratorIPKcE4baseEv(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::reverse_iterator.42"*, align 8
  store %"class.std::reverse_iterator.42"* %this, %"class.std::reverse_iterator.42"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::reverse_iterator.42"*, %"class.std::reverse_iterator.42"** %this.addr, align 8
  %current = getelementptr inbounds %"class.std::reverse_iterator.42", %"class.std::reverse_iterator.42"* %this1, i32 0, i32 0
  %0 = load i8*, i8** %current, align 8, !tbaa !237
  ret i8* %0
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt23__make_reverse_iteratorIPKcESt16reverse_iteratorIT_ES3_(%"class.std::reverse_iterator.42"* noalias sret(%"class.std::reverse_iterator.42") align 8 %agg.result, i8* %__i) #5 comdat {
entry:
  %result.ptr = alloca i8*, align 8
  %__i.addr = alloca i8*, align 8
  %0 = bitcast %"class.std::reverse_iterator.42"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store i8* %__i, i8** %__i.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %__i.addr, align 8, !tbaa !2
  call void @_ZNSt16reverse_iteratorIPKcEC2ES1_(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %agg.result, i8* %1)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZSt12__niter_baseIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_N9__gnu_cxx17__normal_iteratorIS8_T0_EE(i8* %__it.coerce) #8 comdat {
entry:
  %__it = alloca %"class.__gnu_cxx::__normal_iterator.41", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %__it, i32 0, i32 0
  store i8* %__it.coerce, i8** %coerce.dive, align 8
  %call = call nonnull align 8 dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.41"* nonnull dereferenceable(8) %__it) #9
  %0 = load i8*, i8** %call, align 8, !tbaa !2
  ret i8* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZNKSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEE4baseEv(%"class.std::reverse_iterator"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.41", align 8
  %this.addr = alloca %"class.std::reverse_iterator"*, align 8
  store %"class.std::reverse_iterator"* %this, %"class.std::reverse_iterator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::reverse_iterator"*, %"class.std::reverse_iterator"** %this.addr, align 8
  %current = getelementptr inbounds %"class.std::reverse_iterator", %"class.std::reverse_iterator"* %this1, i32 0, i32 0
  %0 = bitcast %"class.__gnu_cxx::__normal_iterator.41"* %retval to i8*
  %1 = bitcast %"class.__gnu_cxx::__normal_iterator.41"* %current to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false), !tbaa.struct !145
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %retval, i32 0, i32 0
  %2 = load i8*, i8** %coerce.dive, align 8
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt16reverse_iteratorIPKcEC2ES1_(%"class.std::reverse_iterator.42"* nonnull dereferenceable(8) %this, i8* %__x) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::reverse_iterator.42"*, align 8
  %__x.addr = alloca i8*, align 8
  store %"class.std::reverse_iterator.42"* %this, %"class.std::reverse_iterator.42"** %this.addr, align 8, !tbaa !2
  store i8* %__x, i8** %__x.addr, align 8, !tbaa !2
  %this1 = load %"class.std::reverse_iterator.42"*, %"class.std::reverse_iterator.42"** %this.addr, align 8
  %0 = bitcast %"class.std::reverse_iterator.42"* %this1 to %"struct.std::iterator"*
  %current = getelementptr inbounds %"class.std::reverse_iterator.42", %"class.std::reverse_iterator.42"* %this1, i32 0, i32 0
  %1 = load i8*, i8** %__x.addr, align 8, !tbaa !2
  store i8* %1, i8** %current, align 8, !tbaa !237
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.41"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.41"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.41"* %this, %"class.__gnu_cxx::__normal_iterator.41"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::__normal_iterator.41"*, %"class.__gnu_cxx::__normal_iterator.41"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %this1, i32 0, i32 0
  ret i8** %_M_current
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.41", align 8
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %ref.tmp = alloca i8*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = bitcast i8** %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %call = invoke i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %call2 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 %call2
  store i8* %add.ptr, i8** %ref.tmp, align 8, !tbaa !2
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.41"* nonnull dereferenceable(8) %retval, i8** nonnull align 8 dereferenceable(8) %ref.tmp) #9
  %1 = bitcast i8** %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %retval, i32 0, i32 0
  %2 = load i8*, i8** %coerce.dive, align 8
  ret i8* %2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  %6 = bitcast i8** %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEC2ESA_(%"class.std::reverse_iterator"* nonnull dereferenceable(8) %this, i8* %__x.coerce) unnamed_addr #6 comdat align 2 {
entry:
  %__x = alloca %"class.__gnu_cxx::__normal_iterator.41", align 8
  %this.addr = alloca %"class.std::reverse_iterator"*, align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %__x, i32 0, i32 0
  store i8* %__x.coerce, i8** %coerce.dive, align 8
  store %"class.std::reverse_iterator"* %this, %"class.std::reverse_iterator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::reverse_iterator"*, %"class.std::reverse_iterator"** %this.addr, align 8
  %0 = bitcast %"class.std::reverse_iterator"* %this1 to %"struct.std::iterator"*
  %current = getelementptr inbounds %"class.std::reverse_iterator", %"class.std::reverse_iterator"* %this1, i32 0, i32 0
  %1 = bitcast %"class.__gnu_cxx::__normal_iterator.41"* %current to i8*
  %2 = bitcast %"class.__gnu_cxx::__normal_iterator.41"* %__x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false), !tbaa.struct !145
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0
  %_M_p = getelementptr inbounds %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %_M_dataplus, i32 0, i32 0
  %0 = load i8*, i8** %_M_p, align 8, !tbaa !239
  ret i8* %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.41"* nonnull dereferenceable(8) %this, i8** nonnull align 8 dereferenceable(8) %__i) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.41"*, align 8
  %__i.addr = alloca i8**, align 8
  store %"class.__gnu_cxx::__normal_iterator.41"* %this, %"class.__gnu_cxx::__normal_iterator.41"** %this.addr, align 8, !tbaa !2
  store i8** %__i, i8*** %__i.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::__normal_iterator.41"*, %"class.__gnu_cxx::__normal_iterator.41"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %this1, i32 0, i32 0
  %0 = load i8**, i8*** %__i.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %0, align 8, !tbaa !2
  store i8* %1, i8** %_M_current, align 8, !tbaa !240
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.41", align 8
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %ref.tmp = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = bitcast i8** %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  store i8* %call, i8** %ref.tmp, align 8, !tbaa !2
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.41"* nonnull dereferenceable(8) %retval, i8** nonnull align 8 dereferenceable(8) %ref.tmp) #9
  %1 = bitcast i8** %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %retval, i32 0, i32 0
  %2 = load i8*, i8** %coerce.dive, align 8
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2Ev(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %this, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"*, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %this1 to %"class.std::allocator"*
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.std::allocator"* nonnull dereferenceable(1) %0) #9
  %1 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %this1 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* nonnull dereferenceable(24) %1) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.std::allocator"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %this, %"class.std::allocator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::allocator"*, %"class.std::allocator"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator"* %this1 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %0) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %this, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"** %this.addr, align 8
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %this1, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %_M_start, align 8, !tbaa !55
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %this1, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %_M_finish, align 8, !tbaa !57
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %this1, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %_M_end_of_storage, align 8, !tbaa !242
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEEC2Ev(%"class.std::vector.3"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIdSaIdEEC2Ev(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %0) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIdSaIdEEC2Ev(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev(%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2Ev(%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %this, %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %this1 to %"class.std::allocator.5"*
  call void @_ZNSaIdEC2Ev(%"class.std::allocator.5"* nonnull dereferenceable(1) %0) #9
  %1 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %this1 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  call void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* nonnull dereferenceable(24) %1) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %this, %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*, %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"** %this.addr, align 8
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %this1, i32 0, i32 0
  store double* null, double** %_M_start, align 8, !tbaa !32
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %this1, i32 0, i32 1
  store double* null, double** %_M_finish, align 8, !tbaa !243
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %this1, i32 0, i32 2
  store double* null, double** %_M_end_of_storage, align 8, !tbaa !244
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIdEC2Ev(%"class.__gnu_cxx::new_allocator.6"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %this, %"class.__gnu_cxx::new_allocator.6"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEED2Ev(%"class.std::vector.3"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load double*, double** %_M_start, align 8, !tbaa !32
  %3 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %4, i32 0, i32 1
  %5 = load double*, double** %_M_finish, align 8, !tbaa !243
  %6 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %6) #9
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %2, double* %5, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %7 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %7) #9
  ret void

lpad:                                             ; preds = %entry
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot, align 4
  %11 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %11) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %__first, double* %__last, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %0) #5 comdat {
entry:
  %__first.addr = alloca double*, align 8
  %__last.addr = alloca double*, align 8
  %.addr = alloca %"class.std::allocator.5"*, align 8
  store double* %__first, double** %__first.addr, align 8, !tbaa !2
  store double* %__last, double** %__last.addr, align 8, !tbaa !2
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %.addr, align 8, !tbaa !2
  %1 = load double*, double** %__first.addr, align 8, !tbaa !2
  %2 = load double*, double** %__last.addr, align 8, !tbaa !2
  call void @_ZSt8_DestroyIPdEvT_S1_(double* %1, double* %2)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIdSaIdEED2Ev(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %0, i32 0, i32 0
  %1 = load double*, double** %_M_start, align 8, !tbaa !32
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %2, i32 0, i32 2
  %3 = load double*, double** %_M_end_of_storage, align 8, !tbaa !244
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl3 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %4, i32 0, i32 0
  %5 = load double*, double** %_M_start4, align 8, !tbaa !32
  %sub.ptr.lhs.cast = ptrtoint double* %3 to i64
  %sub.ptr.rhs.cast = ptrtoint double* %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %this1, double* %1, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.6"*)* @_ZN9__gnu_cxx13new_allocatorIdED2Ev to void (%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl5) #9
  ret void

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.6"*)* @_ZN9__gnu_cxx13new_allocatorIdED2Ev to void (%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl6) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt8_DestroyIPdEvT_S1_(double* %__first, double* %__last) #5 comdat {
entry:
  %__first.addr = alloca double*, align 8
  %__last.addr = alloca double*, align 8
  store double* %__first, double** %__first.addr, align 8, !tbaa !2
  store double* %__last, double** %__last.addr, align 8, !tbaa !2
  %0 = load double*, double** %__first.addr, align 8, !tbaa !2
  %1 = load double*, double** %__last.addr, align 8, !tbaa !2
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double* %0, double* %1)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPdEEvT_S3_(double* %0, double* %1) #8 comdat align 2 {
entry:
  %.addr = alloca double*, align 8
  %.addr1 = alloca double*, align 8
  store double* %0, double** %.addr, align 8, !tbaa !2
  store double* %1, double** %.addr1, align 8, !tbaa !2
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %this, double* %__p, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  %__p.addr = alloca double*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8, !tbaa !2
  store double* %__p, double** %__p.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %0 = load double*, double** %__p.addr, align 8, !tbaa !2
  %tobool = icmp ne double* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"class.std::allocator.5"*
  %2 = load double*, double** %__p.addr, align 8, !tbaa !2
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm(%"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %1, double* %2, i64 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIdEE10deallocateERS0_Pdm(%"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %__a, double* %__p, i64 %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.5"*, align 8
  %__p.addr = alloca double*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.5"* %__a, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  store double* %__p, double** %__p.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.5"* %0 to %"class.__gnu_cxx::new_allocator.6"*
  %2 = load double*, double** %__p.addr, align 8, !tbaa !2
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.6"* nonnull dereferenceable(1) %1, double* %2, i64 %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIdE10deallocateEPdm(%"class.__gnu_cxx::new_allocator.6"* nonnull dereferenceable(1) %this, double* %__p, i64 %0) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %__p.addr = alloca double*, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %this, %"class.__gnu_cxx::new_allocator.6"** %this.addr, align 8, !tbaa !2
  store double* %__p, double** %__p.addr, align 8, !tbaa !2
  store i64 %0, i64* %.addr, align 8, !tbaa !13
  %this1 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %this.addr, align 8
  %1 = load double*, double** %__p.addr, align 8, !tbaa !2
  %2 = bitcast double* %1 to i8*
  call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) #18

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt9exceptionC2ERKS_(%"class.std::exception"* nonnull dereferenceable(8) %this, %"class.std::exception"* nonnull align 8 dereferenceable(8) %0) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::exception"*, align 8
  %.addr = alloca %"class.std::exception"*, align 8
  store %"class.std::exception"* %this, %"class.std::exception"** %this.addr, align 8, !tbaa !2
  store %"class.std::exception"* %0, %"class.std::exception"** %.addr, align 8, !tbaa !2
  %this1 = load %"class.std::exception"*, %"class.std::exception"** %this.addr, align 8
  %1 = bitcast %"class.std::exception"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9exception, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !53
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt9bad_allocD0Ev(%"class.std::bad_alloc"* nonnull dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare dso_local i8* @_ZNKSt9bad_alloc4whatEv(%"class.std::bad_alloc"* nonnull dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare dso_local void @_ZNSt9exceptionD1Ev(%"class.std::exception"* nonnull dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare dso_local void @_ZNSt9exceptionD0Ev(%"class.std::exception"* nonnull dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare dso_local i8* @_ZNKSt9exception4whatEv(%"class.std::exception"* nonnull dereferenceable(8)) unnamed_addr #4

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept15array_exceptionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::array_exception"* nonnull dereferenceable(40) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::array_exception"*, align 8
  %message.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.adept::array_exception"* %this, %"class.adept::array_exception"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %message, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::array_exception"*, %"class.adept::array_exception"** %this.addr, align 8
  %0 = bitcast %"class.adept::array_exception"* %this1 to %"class.adept::exception"*
  call void @_ZN5adept9exceptionC2Ev(%"class.adept::exception"* nonnull dereferenceable(40) %0) #9
  %1 = bitcast %"class.adept::array_exception"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept15array_exceptionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !53
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %3 = bitcast %"class.adept::array_exception"* %this1 to %"class.adept::exception"*
  %message_ = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %3, i32 0, i32 1
  %call = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  %7 = bitcast %"class.adept::array_exception"* %this1 to %"class.adept::exception"*
  call void @_ZN5adept9exceptionD2Ev(%"class.adept::exception"* nonnull dereferenceable(40) %7) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__str) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__str.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__str, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0)
  ret %"class.std::__cxx11::basic_string"* %call
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept17invalid_operationD0Ev(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::invalid_operation"*, align 8
  store %"class.adept::invalid_operation"* %this, %"class.adept::invalid_operation"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::invalid_operation"*, %"class.adept::invalid_operation"** %this.addr, align 8
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::invalid_operation"*)*)(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %this1) #9
  %0 = bitcast %"class.adept::invalid_operation"* %this1 to i8*
  call void @_ZdlPv(i8* %0) #32
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZNK5adept9exception4whatEv(%"class.adept::exception"* nonnull dereferenceable(40) %this) unnamed_addr #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::exception"*, align 8
  store %"class.adept::exception"* %this, %"class.adept::exception"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::exception"*, %"class.adept::exception"** %this.addr, align 8
  %message_ = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this1, i32 0, i32 1
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_) #9
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept9exceptionC2Ev(%"class.adept::exception"* nonnull dereferenceable(40) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::exception"*, align 8
  store %"class.adept::exception"* %this, %"class.adept::exception"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::exception"*, %"class.adept::exception"** %this.addr, align 8
  %0 = bitcast %"class.adept::exception"* %this1 to %"class.std::exception"*
  call void @_ZNSt9exceptionC2Ev(%"class.std::exception"* nonnull dereferenceable(8) %0) #9
  %1 = bitcast %"class.adept::exception"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept9exceptionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !53
  %message_ = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %this1, i32 0, i32 1
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_) #9
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept15array_exceptionD0Ev(%"class.adept::array_exception"* nonnull dereferenceable(40) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::array_exception"*, align 8
  store %"class.adept::array_exception"* %this, %"class.adept::array_exception"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::array_exception"*, %"class.adept::array_exception"** %this.addr, align 8
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::array_exception"*)*)(%"class.adept::array_exception"* nonnull dereferenceable(40) %this1) #9
  %0 = bitcast %"class.adept::array_exception"* %this1 to i8*
  call void @_ZdlPv(i8* %0) #32
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt9exceptionC2Ev(%"class.std::exception"* nonnull dereferenceable(8) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::exception"*, align 8
  store %"class.std::exception"* %this, %"class.std::exception"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::exception"*, %"class.std::exception"** %this.addr, align 8
  %0 = bitcast %"class.std::exception"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9exception, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !53
  ret void
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) unnamed_addr #6 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0
  %call = invoke i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus, i8* %call, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %invoke.cont
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 0)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont2
  ret void

lpad:                                             ; preds = %invoke.cont
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %5 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %5) #9
  br label %terminate.handler

lpad3:                                            ; preds = %invoke.cont2
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.std::allocator.0"*)* @_ZNSaIcED2Ev to void (%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*)*)(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus) #9
  br label %terminate.handler

terminate.lpad:                                   ; preds = %entry
  %9 = landingpad { i8*, i32 }
          catch i8* null
  %10 = extractvalue { i8*, i32 } %9, 0
  call void @__clang_call_terminate(i8* %10) #29
  unreachable

terminate.handler:                                ; preds = %lpad3, %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept9exceptionD0Ev(%"class.adept::exception"* nonnull dereferenceable(40) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::exception"*, align 8
  store %"class.adept::exception"* %this, %"class.adept::exception"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::exception"*, %"class.adept::exception"** %this.addr, align 8
  call void @_ZN5adept9exceptionD2Ev(%"class.adept::exception"* nonnull dereferenceable(40) %this1) #9
  %0 = bitcast %"class.adept::exception"* %this1 to i8*
  call void @_ZdlPv(i8* %0) #32
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 2
  %_M_local_buf = bitcast %union.anon* %0 to [16 x i8]*
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %_M_local_buf, i64 0, i64 0
  %call = call i8* @_ZNSt14pointer_traitsIPcE10pointer_toERc(i8* nonnull align 1 dereferenceable(1) %arraydecay) #9
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %this, i8* %__dat, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*, align 8
  %__dat.addr = alloca i8*, align 8
  %__a.addr = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %this, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"** %this.addr, align 8, !tbaa !2
  store i8* %__dat, i8** %__dat.addr, align 8, !tbaa !2
  store %"class.std::allocator.0"* %__a, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"** %this.addr, align 8
  %0 = bitcast %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %this1 to %"class.std::allocator.0"*
  %1 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.0"* @_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %1) #9
  call void @_ZNSaIcEC2ERKS_(%"class.std::allocator.0"* nonnull dereferenceable(1) %0, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %call) #9
  %_M_p = getelementptr inbounds %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %this1, i32 0, i32 0
  %2 = load i8*, i8** %__dat.addr, align 8, !tbaa !2
  store i8* %2, i8** %_M_p, align 8, !tbaa !245
  ret void
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i64 %__n) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__n.addr = alloca i64, align 8
  %ref.tmp = alloca i8, align 1
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %0)
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 %1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %ref.tmp) #9
  store i8 0, i8* %ref.tmp, align 1, !tbaa !14
  call void @_ZNSt11char_traitsIcE6assignERcRKc(i8* nonnull align 1 dereferenceable(1) %arrayidx, i8* nonnull align 1 dereferenceable(1) %ref.tmp) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %ref.tmp) #9
  ret void
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %this, %"class.std::allocator.0"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.0"* %this1 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIcED2Ev(%"class.__gnu_cxx::new_allocator.1"* nonnull dereferenceable(1) %0) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZNSt14pointer_traitsIPcE10pointer_toERc(i8* nonnull align 1 dereferenceable(1) %__r) #8 comdat align 2 {
entry:
  %__r.addr = alloca i8*, align 8
  store i8* %__r, i8** %__r.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__r.addr, align 8, !tbaa !2
  %call = call i8* @_ZSt9addressofIcEPT_RS0_(i8* nonnull align 1 dereferenceable(1) %0) #9
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZSt9addressofIcEPT_RS0_(i8* nonnull align 1 dereferenceable(1) %__r) #12 comdat {
entry:
  %__r.addr = alloca i8*, align 8
  store i8* %__r, i8** %__r.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__r.addr, align 8, !tbaa !2
  %call = call i8* @_ZSt11__addressofIcEPT_RS0_(i8* nonnull align 1 dereferenceable(1) %0) #9
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZSt11__addressofIcEPT_RS0_(i8* nonnull align 1 dereferenceable(1) %__r) #12 comdat {
entry:
  %__r.addr = alloca i8*, align 8
  store i8* %__r, i8** %__r.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__r.addr, align 8, !tbaa !2
  ret i8* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator.0"* @_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %__t) #8 comdat {
entry:
  %__t.addr = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %__t, %"class.std::allocator.0"** %__t.addr, align 8, !tbaa !2
  %0 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %__t.addr, align 8, !tbaa !2
  ret %"class.std::allocator.0"* %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_(%"class.__gnu_cxx::new_allocator.1"* nonnull dereferenceable(1) %this, %"class.__gnu_cxx::new_allocator.1"* nonnull align 1 dereferenceable(1) %0) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %.addr = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %this, %"class.__gnu_cxx::new_allocator.1"** %this.addr, align 8, !tbaa !2
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i64 %__length) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__length.addr = alloca i64, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i64 %__length, i64* %__length.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i64, i64* %__length.addr, align 8, !tbaa !13
  %_M_string_length = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 1
  store i64 %0, i64* %_M_string_length, align 8, !tbaa !233
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt11char_traitsIcE6assignERcRKc(i8* nonnull align 1 dereferenceable(1) %__c1, i8* nonnull align 1 dereferenceable(1) %__c2) #8 comdat align 2 {
entry:
  %__c1.addr = alloca i8*, align 8
  %__c2.addr = alloca i8*, align 8
  store i8* %__c1, i8** %__c1.addr, align 8, !tbaa !2
  store i8* %__c2, i8** %__c2.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__c2.addr, align 8, !tbaa !2
  %1 = load i8, i8* %0, align 1, !tbaa !14
  %2 = load i8*, i8** %__c1.addr, align 8, !tbaa !2
  store i8 %1, i8* %2, align 1, !tbaa !14
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIcED2Ev(%"class.__gnu_cxx::new_allocator.1"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %this, %"class.__gnu_cxx::new_allocator.1"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt9exceptionD2Ev(%"class.std::exception"* nonnull dereferenceable(8)) unnamed_addr #4

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__str) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__str.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__str, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %0)
  ret %"class.std::__cxx11::basic_string"* %this1
}

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32)) #2

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE8_M_clearEv(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %this) #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::_List_base"*, align 8
  %__cur = alloca %"struct.std::__detail::_List_node_base"*, align 8
  %__tmp = alloca %"struct.std::_List_node"*, align 8
  %__val = alloca %"struct.adept::Gap"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::_List_base"* %this, %"class.std::__cxx11::_List_base"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %this.addr, align 8
  %0 = bitcast %"struct.std::__detail::_List_node_base"** %__cur to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %this1, i32 0, i32 0
  %_M_node = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl, i32 0, i32 0
  %1 = bitcast %"struct.std::__detail::_List_node_header"* %_M_node to %"struct.std::__detail::_List_node_base"*
  %_M_next = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %1, i32 0, i32 0
  %2 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next, align 8, !tbaa !149
  store %"struct.std::__detail::_List_node_base"* %2, %"struct.std::__detail::_List_node_base"** %__cur, align 8, !tbaa !2
  br label %while.cond

while.cond:                                       ; preds = %invoke.cont, %entry
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %__cur, align 8, !tbaa !2
  %_M_impl2 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %this1, i32 0, i32 0
  %_M_node3 = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl2, i32 0, i32 0
  %4 = bitcast %"struct.std::__detail::_List_node_header"* %_M_node3 to %"struct.std::__detail::_List_node_base"*
  %cmp = icmp ne %"struct.std::__detail::_List_node_base"* %3, %4
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = bitcast %"struct.std::_List_node"** %__tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %6 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %__cur, align 8, !tbaa !2
  %7 = bitcast %"struct.std::__detail::_List_node_base"* %6 to %"struct.std::_List_node"*
  store %"struct.std::_List_node"* %7, %"struct.std::_List_node"** %__tmp, align 8, !tbaa !2
  %8 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__tmp, align 8, !tbaa !2
  %9 = bitcast %"struct.std::_List_node"* %8 to %"struct.std::__detail::_List_node_base"*
  %_M_next4 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %9, i32 0, i32 0
  %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_next4, align 8, !tbaa !149
  store %"struct.std::__detail::_List_node_base"* %10, %"struct.std::__detail::_List_node_base"** %__cur, align 8, !tbaa !2
  %11 = bitcast %"struct.adept::Gap"** %__val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #9
  %12 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__tmp, align 8, !tbaa !2
  %call = invoke %"struct.adept::Gap"* @_ZNSt10_List_nodeIN5adept3GapEE9_M_valptrEv(%"struct.std::_List_node"* nonnull dereferenceable(24) %12)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %while.body
  store %"struct.adept::Gap"* %call, %"struct.adept::Gap"** %__val, align 8, !tbaa !2
  %call5 = call nonnull align 1 dereferenceable(1) %"class.std::allocator.13"* @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %this1) #9
  %13 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__val, align 8, !tbaa !2
  call void @_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE7destroyIS2_EEvRS4_PT_(%"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %call5, %"struct.adept::Gap"* %13) #9
  %14 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__tmp, align 8, !tbaa !2
  call void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %this1, %"struct.std::_List_node"* %14) #9
  %15 = bitcast %"struct.adept::Gap"** %__val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %15) #9
  %16 = bitcast %"struct.std::_List_node"** %__tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %16) #9
  br label %while.cond, !llvm.loop !246

lpad:                                             ; preds = %while.body
  %17 = landingpad { i8*, i32 }
          catch i8* null
  %18 = extractvalue { i8*, i32 } %17, 0
  store i8* %18, i8** %exn.slot, align 8
  %19 = extractvalue { i8*, i32 } %17, 1
  store i32 %19, i32* %ehselector.slot, align 4
  %20 = bitcast %"struct.adept::Gap"** %__val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #9
  %21 = bitcast %"struct.std::_List_node"** %__tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #9
  %22 = bitcast %"struct.std::__detail::_List_node_base"** %__cur to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #9
  br label %terminate.handler

while.end:                                        ; preds = %while.cond
  %23 = bitcast %"struct.std::__detail::_List_node_base"** %__cur to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #9
  ret void

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEED2Ev(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %this, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Gap"* @_ZNSt10_List_nodeIN5adept3GapEE9_M_valptrEv(%"struct.std::_List_node"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_List_node"*, align 8
  store %"struct.std::_List_node"* %this, %"struct.std::_List_node"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %this.addr, align 8
  %_M_storage = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %this1, i32 0, i32 1
  %call = call %"struct.adept::Gap"* @_ZN9__gnu_cxx16__aligned_membufIN5adept3GapEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* nonnull dereferenceable(8) %_M_storage) #9
  ret %"struct.adept::Gap"* %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE7destroyIS2_EEvRS4_PT_(%"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %__a, %"struct.adept::Gap"* %__p) #8 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.13"*, align 8
  %__p.addr = alloca %"struct.adept::Gap"*, align 8
  store %"class.std::allocator.13"* %__a, %"class.std::allocator.13"** %__a.addr, align 8, !tbaa !2
  store %"struct.adept::Gap"* %__p, %"struct.adept::Gap"** %__p.addr, align 8, !tbaa !2
  %0 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.13"* %0 to %"class.__gnu_cxx::new_allocator.14"*
  %2 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__p.addr, align 8, !tbaa !2
  call void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %1, %"struct.adept::Gap"* %2) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator.13"* @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %this, %"class.std::__cxx11::_List_base"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl to %"class.std::allocator.13"*
  ret %"class.std::allocator.13"* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %this, %"struct.std::_List_node"* %__p) #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::_List_base"*, align 8
  %__p.addr = alloca %"struct.std::_List_node"*, align 8
  store %"class.std::__cxx11::_List_base"* %this, %"class.std::__cxx11::_List_base"** %this.addr, align 8, !tbaa !2
  store %"struct.std::_List_node"* %__p, %"struct.std::_List_node"** %__p.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl to %"class.std::allocator.13"*
  %1 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__p.addr, align 8, !tbaa !2
  invoke void @_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE10deallocateERS4_PS3_m(%"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %0, %"struct.std::_List_node"* %1, i64 1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %2 = landingpad { i8*, i32 }
          catch i8* null
  %3 = extractvalue { i8*, i32 } %2, 0
  call void @__clang_call_terminate(i8* %3) #29
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Gap"* @_ZN9__gnu_cxx16__aligned_membufIN5adept3GapEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %this, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8
  %call = call i8* @_ZN9__gnu_cxx16__aligned_membufIN5adept3GapEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* nonnull dereferenceable(8) %this1) #9
  %0 = bitcast i8* %call to %"struct.adept::Gap"*
  ret %"struct.adept::Gap"* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZN9__gnu_cxx16__aligned_membufIN5adept3GapEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %this, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8
  %_M_storage = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %this1, i32 0, i32 0
  %0 = bitcast [8 x i8]* %_M_storage to i8*
  ret i8* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %this, %"struct.adept::Gap"* %__p) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %__p.addr = alloca %"struct.adept::Gap"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %this, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Gap"* %__p, %"struct.adept::Gap"** %__p.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8
  %0 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__p.addr, align 8, !tbaa !2
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE10deallocateERS4_PS3_m(%"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %__a, %"struct.std::_List_node"* %__p, i64 %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.13"*, align 8
  %__p.addr = alloca %"struct.std::_List_node"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.13"* %__a, %"class.std::allocator.13"** %__a.addr, align 8, !tbaa !2
  store %"struct.std::_List_node"* %__p, %"struct.std::_List_node"** %__p.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.13"* %0 to %"class.__gnu_cxx::new_allocator.14"*
  %2 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__p.addr, align 8, !tbaa !2
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %1, %"struct.std::_List_node"* %2, i64 %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %this, %"struct.std::_List_node"* %__p, i64 %0) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %__p.addr = alloca %"struct.std::_List_node"*, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %this, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8, !tbaa !2
  store %"struct.std::_List_node"* %__p, %"struct.std::_List_node"** %__p.addr, align 8, !tbaa !2
  store i64 %0, i64* %.addr, align 8, !tbaa !13
  %this1 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8
  %1 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__p.addr, align 8, !tbaa !2
  %2 = bitcast %"struct.std::_List_node"* %1 to i8*
  call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept18autodiff_exceptionC2Ev(%"class.adept::autodiff_exception"* nonnull dereferenceable(40) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::autodiff_exception"*, align 8
  store %"class.adept::autodiff_exception"* %this, %"class.adept::autodiff_exception"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::autodiff_exception"*, %"class.adept::autodiff_exception"** %this.addr, align 8
  %0 = bitcast %"class.adept::autodiff_exception"* %this1 to %"class.adept::exception"*
  call void @_ZN5adept9exceptionC2Ev(%"class.adept::exception"* nonnull dereferenceable(40) %0) #9
  %1 = bitcast %"class.adept::autodiff_exception"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept18autodiff_exceptionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !53
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept20stack_already_activeD0Ev(%"class.adept::stack_already_active"* nonnull dereferenceable(40) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::stack_already_active"*, align 8
  store %"class.adept::stack_already_active"* %this, %"class.adept::stack_already_active"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::stack_already_active"*, %"class.adept::stack_already_active"** %this.addr, align 8
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::stack_already_active"*)*)(%"class.adept::stack_already_active"* nonnull dereferenceable(40) %this1) #9
  %0 = bitcast %"class.adept::stack_already_active"* %this1 to i8*
  call void @_ZdlPv(i8* %0) #32
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept18autodiff_exceptionD0Ev(%"class.adept::autodiff_exception"* nonnull dereferenceable(40) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::autodiff_exception"*, align 8
  store %"class.adept::autodiff_exception"* %this, %"class.adept::autodiff_exception"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::autodiff_exception"*, %"class.adept::autodiff_exception"** %this.addr, align 8
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::autodiff_exception"*)*)(%"class.adept::autodiff_exception"* nonnull dereferenceable(40) %this1) #9
  %0 = bitcast %"class.adept::autodiff_exception"* %this1 to i8*
  call void @_ZdlPv(i8* %0) #32
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept25gradients_not_initializedD0Ev(%"class.adept::gradients_not_initialized"* nonnull dereferenceable(40) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::gradients_not_initialized"*, align 8
  store %"class.adept::gradients_not_initialized"* %this, %"class.adept::gradients_not_initialized"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::gradients_not_initialized"*, %"class.adept::gradients_not_initialized"** %this.addr, align 8
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::gradients_not_initialized"*)*)(%"class.adept::gradients_not_initialized"* nonnull dereferenceable(40) %this1) #9
  %0 = bitcast %"class.adept::gradients_not_initialized"* %this1 to i8*
  call void @_ZdlPv(i8* %0) #32
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept21feature_not_availableD0Ev(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::feature_not_available"*, align 8
  store %"class.adept::feature_not_available"* %this, %"class.adept::feature_not_available"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::feature_not_available"*, %"class.adept::feature_not_available"** %this.addr, align 8
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::feature_not_available"*)*)(%"class.adept::feature_not_available"* nonnull dereferenceable(40) %this1) #9
  %0 = bitcast %"class.adept::feature_not_available"* %this1 to i8*
  call void @_ZdlPv(i8* %0) #32
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable mustprogress
define internal <2 x double> @_ZL14_mm_setzero_pdv() #23 {
entry:
  %.compoundliteral = alloca <2 x double>, align 16
  store <2 x double> zeroinitializer, <2 x double>* %.compoundliteral, align 16, !tbaa !14
  %0 = load <2 x double>, <2 x double>* %.compoundliteral, align 16, !tbaa !14
  ret <2 x double> %0
}

; Function Attrs: alwaysinline nounwind uwtable mustprogress
define internal <2 x double> @_ZL11_mm_load_pdPKd(double* %__dp) #23 {
entry:
  %__dp.addr = alloca double*, align 8
  store double* %__dp, double** %__dp.addr, align 8, !tbaa !2
  %0 = load double*, double** %__dp.addr, align 8, !tbaa !2
  %1 = bitcast double* %0 to <2 x double>*
  %2 = load <2 x double>, <2 x double>* %1, align 16, !tbaa !14
  ret <2 x double> %2
}

; Function Attrs: alwaysinline nounwind uwtable mustprogress
define internal <2 x double> @_ZL11_mm_set1_pdd(double %__w) #23 {
entry:
  %__w.addr = alloca double, align 8
  %.compoundliteral = alloca <2 x double>, align 16
  store double %__w, double* %__w.addr, align 8, !tbaa !44
  %0 = load double, double* %__w.addr, align 8, !tbaa !44
  %vecinit = insertelement <2 x double> undef, double %0, i32 0
  %1 = load double, double* %__w.addr, align 8, !tbaa !44
  %vecinit1 = insertelement <2 x double> %vecinit, double %1, i32 1
  store <2 x double> %vecinit1, <2 x double>* %.compoundliteral, align 16, !tbaa !14
  %2 = load <2 x double>, <2 x double>* %.compoundliteral, align 16, !tbaa !14
  ret <2 x double> %2
}

; Function Attrs: alwaysinline nounwind uwtable mustprogress
define internal <2 x double> @_ZL10_mm_mul_pdDv2_dS_(<2 x double> %__a, <2 x double> %__b) #23 {
entry:
  %__a.addr = alloca <2 x double>, align 16
  %__b.addr = alloca <2 x double>, align 16
  store <2 x double> %__a, <2 x double>* %__a.addr, align 16, !tbaa !14
  store <2 x double> %__b, <2 x double>* %__b.addr, align 16, !tbaa !14
  %0 = load <2 x double>, <2 x double>* %__a.addr, align 16, !tbaa !14
  %1 = load <2 x double>, <2 x double>* %__b.addr, align 16, !tbaa !14
  %mul = fmul fast <2 x double> %0, %1
  ret <2 x double> %mul
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal6PacketIdEC2EDv2_d(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %this, <2 x double> %d) unnamed_addr #24 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Packet"*, align 8
  %d.addr = alloca <2 x double>, align 16
  store %"struct.adept::internal::Packet"* %this, %"struct.adept::internal::Packet"** %this.addr, align 8, !tbaa !2
  store <2 x double> %d, <2 x double>* %d.addr, align 16, !tbaa !14
  %this1 = load %"struct.adept::internal::Packet"*, %"struct.adept::internal::Packet"** %this.addr, align 8
  %0 = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %this1, i32 0, i32 0
  %data = bitcast %union.anon.29* %0 to <2 x double>*
  %1 = load <2 x double>, <2 x double>* %d.addr, align 16, !tbaa !14
  store <2 x double> %1, <2 x double>* %data, align 16, !tbaa !14
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable mustprogress
define internal <2 x double> @_ZL10_mm_add_pdDv2_dS_(<2 x double> %__a, <2 x double> %__b) #23 {
entry:
  %__a.addr = alloca <2 x double>, align 16
  %__b.addr = alloca <2 x double>, align 16
  store <2 x double> %__a, <2 x double>* %__a.addr, align 16, !tbaa !14
  store <2 x double> %__b, <2 x double>* %__b.addr, align 16, !tbaa !14
  %0 = load <2 x double>, <2 x double>* %__a.addr, align 16, !tbaa !14
  %1 = load <2 x double>, <2 x double>* %__b.addr, align 16, !tbaa !14
  %add = fadd fast <2 x double> %0, %1
  ret <2 x double> %add
}

; Function Attrs: alwaysinline nounwind uwtable mustprogress
define internal void @_ZL12_mm_store_pdPdDv2_d(double* %__dp, <2 x double> %__a) #23 {
entry:
  %__dp.addr = alloca double*, align 8
  %__a.addr = alloca <2 x double>, align 16
  store double* %__dp, double** %__dp.addr, align 8, !tbaa !2
  store <2 x double> %__a, <2 x double>* %__a.addr, align 16, !tbaa !14
  %0 = load <2 x double>, <2 x double>* %__a.addr, align 16, !tbaa !14
  %1 = load double*, double** %__dp.addr, align 8, !tbaa !2
  %2 = bitcast double* %1 to <2 x double>*
  store <2 x double> %0, <2 x double>* %2, align 16, !tbaa !14
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept41dependents_or_independents_not_identifiedD0Ev(%"class.adept::dependents_or_independents_not_identified"* nonnull dereferenceable(40) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::dependents_or_independents_not_identified"*, align 8
  store %"class.adept::dependents_or_independents_not_identified"* %this, %"class.adept::dependents_or_independents_not_identified"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::dependents_or_independents_not_identified"*, %"class.adept::dependents_or_independents_not_identified"** %this.addr, align 8
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::dependents_or_independents_not_identified"*)*)(%"class.adept::dependents_or_independents_not_identified"* nonnull dereferenceable(40) %this1) #9
  %0 = bitcast %"class.adept::dependents_or_independents_not_identified"* %this1 to i8*
  call void @_ZdlPv(i8* %0) #32
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal16StackStorageOrigC2Ev(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::StackStorageOrig"*, align 8
  store %"class.adept::internal::StackStorageOrig"* %this, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 0
  store %"struct.adept::internal::Statement"* null, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !128
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 1
  store double* null, double** %multiplier_, align 8, !tbaa !130
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 2
  store i32* null, i32** %index_, align 8, !tbaa !131
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 3
  store i32 0, i32* %n_statements_, align 8, !tbaa !132
  %n_allocated_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 4
  store i32 0, i32* %n_allocated_statements_, align 4, !tbaa !166
  %n_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 5
  store i32 0, i32* %n_operations_, align 8, !tbaa !167
  %n_allocated_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 6
  store i32 0, i32* %n_allocated_operations_, align 4, !tbaa !168
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.9"* nonnull dereferenceable(24) %0) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EEC2Ev(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EEC2Ev(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %0) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal16StackStorageOrig10initializeEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this, i32 %n) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::internal::StackStorageOrig"*, align 8
  %n.addr = alloca i32, align 4
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.adept::internal::StackStorageOrig"* %this, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8, !tbaa !2
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8
  %0 = load i32, i32* %n.addr, align 4, !tbaa !20
  %conv = sext i32 %0 to i64
  %1 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv, i64 8)
  %2 = extractvalue { i64, i1 } %1, 1
  %3 = extractvalue { i64, i1 } %1, 0
  %4 = select i1 %2, i64 -1, i64 %3
  %call = call noalias nonnull i8* @_Znam(i64 %4) #33
  %5 = bitcast i8* %call to double*
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 1
  store double* %5, double** %multiplier_, align 8, !tbaa !130
  %6 = load i32, i32* %n.addr, align 4, !tbaa !20
  %conv2 = sext i32 %6 to i64
  %7 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv2, i64 4)
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  %10 = select i1 %8, i64 -1, i64 %9
  %call3 = call noalias nonnull i8* @_Znam(i64 %10) #33
  %11 = bitcast i8* %call3 to i32*
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 2
  store i32* %11, i32** %index_, align 8, !tbaa !131
  %12 = load i32, i32* %n.addr, align 4, !tbaa !20
  %n_allocated_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 6
  store i32 %12, i32* %n_allocated_operations_, align 4, !tbaa !168
  %13 = load i32, i32* %n.addr, align 4, !tbaa !20
  %conv4 = sext i32 %13 to i64
  %14 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %conv4, i64 8)
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %call5 = call noalias nonnull i8* @_Znam(i64 %17) #33
  %18 = bitcast i8* %call5 to %"struct.adept::internal::Statement"*
  %isempty = icmp eq i64 %conv4, 0
  br i1 %isempty, label %arrayctor.cont, label %new.ctorloop

new.ctorloop:                                     ; preds = %entry
  %arrayctor.end = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %18, i64 %conv4
  br label %arrayctor.loop

arrayctor.loop:                                   ; preds = %invoke.cont, %new.ctorloop
  %arrayctor.cur = phi %"struct.adept::internal::Statement"* [ %18, %new.ctorloop ], [ %arrayctor.next, %invoke.cont ]
  invoke void @_ZN5adept8internal9StatementC2Ev(%"struct.adept::internal::Statement"* nonnull dereferenceable(8) %arrayctor.cur)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %arrayctor.loop
  %arrayctor.next = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayctor.cur, i64 1
  %arrayctor.done = icmp eq %"struct.adept::internal::Statement"* %arrayctor.next, %arrayctor.end
  br i1 %arrayctor.done, label %arrayctor.cont, label %arrayctor.loop

arrayctor.cont:                                   ; preds = %invoke.cont, %entry
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 0
  store %"struct.adept::internal::Statement"* %18, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !128
  %19 = load i32, i32* %n.addr, align 4, !tbaa !20
  %n_allocated_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 4
  store i32 %19, i32* %n_allocated_statements_, align 4, !tbaa !166
  ret void

lpad:                                             ; preds = %arrayctor.loop
  %20 = landingpad { i8*, i32 }
          cleanup
  %21 = extractvalue { i8*, i32 } %20, 0
  store i8* %21, i8** %exn.slot, align 8
  %22 = extractvalue { i8*, i32 } %20, 1
  store i32 %22, i32* %ehselector.slot, align 4
  call void @_ZdaPv(i8* %call5) #32
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val6 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val6
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.9"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %this, %"struct.std::_Vector_base.9"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %this, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %this1 to %"class.std::allocator.10"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* nonnull dereferenceable(1) %0) #9
  %1 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %this1 to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  call void @_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* nonnull dereferenceable(24) %1) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %this, %"class.std::allocator.10"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.10"* %this1 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.11"* nonnull dereferenceable(1) %0) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %this, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*, %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"** %this.addr, align 8
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %this1, i32 0, i32 0
  store i32* null, i32** %_M_start, align 8, !tbaa !125
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %this1, i32 0, i32 1
  store i32* null, i32** %_M_finish, align 8, !tbaa !127
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %this1, i32 0, i32 2
  store i32* null, i32** %_M_end_of_storage, align 8, !tbaa !247
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.11"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %this, %"class.__gnu_cxx::new_allocator.11"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EEC2Ev(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %this, %"class.std::__cxx11::_List_base"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %this1, i32 0, i32 0
  call void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE10_List_implC2Ev(%"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* nonnull dereferenceable(24) %_M_impl) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE10_List_implC2Ev(%"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"*, align 8
  store %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %this, %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"*, %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %this1 to %"class.std::allocator.13"*
  call void @_ZNSaISt10_List_nodeIN5adept3GapEEEC2Ev(%"class.std::allocator.13"* nonnull dereferenceable(1) %0) #9
  %_M_node = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %this1, i32 0, i32 0
  call void @_ZNSt8__detail17_List_node_headerC2Ev(%"struct.std::__detail::_List_node_header"* nonnull dereferenceable(24) %_M_node) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSaISt10_List_nodeIN5adept3GapEEEC2Ev(%"class.std::allocator.13"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %this, %"class.std::allocator.13"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.13"* %this1 to %"class.__gnu_cxx::new_allocator.14"*
  call void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %0) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt8__detail17_List_node_headerC2Ev(%"struct.std::__detail::_List_node_header"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::__detail::_List_node_header"*, align 8
  store %"struct.std::__detail::_List_node_header"* %this, %"struct.std::__detail::_List_node_header"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::__detail::_List_node_header"*, %"struct.std::__detail::_List_node_header"** %this.addr, align 8
  %0 = bitcast %"struct.std::__detail::_List_node_header"* %this1 to %"struct.std::__detail::_List_node_base"*
  call void @_ZNSt8__detail17_List_node_header7_M_initEv(%"struct.std::__detail::_List_node_header"* nonnull dereferenceable(24) %this1) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEEC2Ev(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %this, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt8__detail17_List_node_header7_M_initEv(%"struct.std::__detail::_List_node_header"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::__detail::_List_node_header"*, align 8
  store %"struct.std::__detail::_List_node_header"* %this, %"struct.std::__detail::_List_node_header"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::__detail::_List_node_header"*, %"struct.std::__detail::_List_node_header"** %this.addr, align 8
  %0 = bitcast %"struct.std::__detail::_List_node_header"* %this1 to %"struct.std::__detail::_List_node_base"*
  %1 = bitcast %"struct.std::__detail::_List_node_header"* %this1 to %"struct.std::__detail::_List_node_base"*
  %_M_prev = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %1, i32 0, i32 1
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %_M_prev, align 8, !tbaa !155
  %2 = bitcast %"struct.std::__detail::_List_node_header"* %this1 to %"struct.std::__detail::_List_node_base"*
  %_M_next = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %2, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %_M_next, align 8, !tbaa !149
  %_M_size = getelementptr inbounds %"struct.std::__detail::_List_node_header", %"struct.std::__detail::_List_node_header"* %this1, i32 0, i32 1
  store i64 0, i64* %_M_size, align 8, !tbaa !248
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal16StackStorageOrig11clear_stackEv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::StackStorageOrig"*, align 8
  store %"class.adept::internal::StackStorageOrig"* %this, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8
  %n_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 5
  store i32 0, i32* %n_operations_, align 8, !tbaa !167
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 3
  store i32 0, i32* %n_statements_, align 8, !tbaa !132
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5Stack18clear_independentsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %independent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEE5clearEv(%"class.std::vector.8"* nonnull dereferenceable(24) %independent_index_) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5Stack16clear_dependentsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %dependent_index_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEE5clearEv(%"class.std::vector.8"* nonnull dereferenceable(24) %dependent_index_) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5Stack15clear_gradientsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %gradients_initialized_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 10
  store i8 0, i8* %gradients_initialized_, align 8, !tbaa !138
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this, i32* nonnull align 4 dereferenceable(4) %gradient_index) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::StackStorageOrig"*, align 8
  %gradient_index.addr = alloca i32*, align 8
  store %"class.adept::internal::StackStorageOrig"* %this, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8, !tbaa !2
  store i32* %gradient_index, i32** %gradient_index.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8
  %n_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 3
  %0 = load i32, i32* %n_statements_, align 8, !tbaa !132
  %n_allocated_statements_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 4
  %1 = load i32, i32* %n_allocated_statements_, align 4, !tbaa !166
  %cmp = icmp sge i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZN5adept8internal16StackStorageOrig20grow_statement_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this1, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %3 = load i32, i32* %2, align 4, !tbaa !20
  %statement_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 0
  %4 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_, align 8, !tbaa !128
  %n_statements_2 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 3
  %5 = load i32, i32* %n_statements_2, align 8, !tbaa !132
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %4, i64 %idxprom
  %index = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayidx, i32 0, i32 0
  store i32 %3, i32* %index, align 4, !tbaa !133
  %n_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 5
  %6 = load i32, i32* %n_operations_, align 8, !tbaa !167
  %statement_3 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 0
  %7 = load %"struct.adept::internal::Statement"*, %"struct.adept::internal::Statement"** %statement_3, align 8, !tbaa !128
  %n_statements_4 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 3
  %8 = load i32, i32* %n_statements_4, align 8, !tbaa !132
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %n_statements_4, align 8, !tbaa !132
  %idxprom5 = sext i32 %8 to i64
  %arrayidx6 = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %7, i64 %idxprom5
  %end_plus_one = getelementptr inbounds %"struct.adept::internal::Statement", %"struct.adept::internal::Statement"* %arrayidx6, i32 0, i32 1
  store i32 %6, i32* %end_plus_one, align 4, !tbaa !135
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE5clearEv(%"class.std::vector.8"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load i32*, i32** %_M_start, align 8, !tbaa !125
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.8"* nonnull dereferenceable(24) %this1, i32* %2) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.8"* nonnull dereferenceable(24) %this, i32* %__pos) #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.8"*, align 8
  %__pos.addr = alloca i32*, align 8
  %__n = alloca i64, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8, !tbaa !2
  store i32* %__pos, i32** %__pos.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %0 = bitcast i64* %__n to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %1, i32 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %2, i32 0, i32 1
  %3 = load i32*, i32** %_M_finish, align 8, !tbaa !127
  %4 = load i32*, i32** %__pos.addr, align 8, !tbaa !2
  %sub.ptr.lhs.cast = ptrtoint i32* %3 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  store i64 %sub.ptr.div, i64* %__n, align 8, !tbaa !13
  %5 = load i64, i64* %__n, align 8, !tbaa !13
  %tobool = icmp ne i64 %5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i32*, i32** %__pos.addr, align 8, !tbaa !2
  %7 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %7, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_finish3 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %8, i32 0, i32 1
  %9 = load i32*, i32** %_M_finish3, align 8, !tbaa !127
  %10 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* nonnull dereferenceable(24) %10) #9
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %6, i32* %9, %"class.std::allocator.10"* nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  %11 = load i32*, i32** %__pos.addr, align 8, !tbaa !2
  %12 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %12, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl4 to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_finish5 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %13, i32 0, i32 1
  store i32* %11, i32** %_M_finish5, align 8, !tbaa !127
  br label %if.end

lpad:                                             ; preds = %if.then
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %exn.slot, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %ehselector.slot, align 4
  %17 = bitcast i64* %__n to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  br label %terminate.handler

if.end:                                           ; preds = %invoke.cont, %entry
  %18 = bitcast i64* %__n to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #9
  ret void

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %__first, i32* %__last, %"class.std::allocator.10"* nonnull align 1 dereferenceable(1) %0) #5 comdat {
entry:
  %__first.addr = alloca i32*, align 8
  %__last.addr = alloca i32*, align 8
  %.addr = alloca %"class.std::allocator.10"*, align 8
  store i32* %__first, i32** %__first.addr, align 8, !tbaa !2
  store i32* %__last, i32** %__last.addr, align 8, !tbaa !2
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %.addr, align 8, !tbaa !2
  %1 = load i32*, i32** %__first.addr, align 8, !tbaa !2
  %2 = load i32*, i32** %__last.addr, align 8, !tbaa !2
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %1, i32* %2)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %this, %"struct.std::_Vector_base.9"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %0
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt8_DestroyIPiEvT_S1_(i32* %__first, i32* %__last) #5 comdat {
entry:
  %__first.addr = alloca i32*, align 8
  %__last.addr = alloca i32*, align 8
  store i32* %__first, i32** %__first.addr, align 8, !tbaa !2
  store i32* %__last, i32** %__last.addr, align 8, !tbaa !2
  %0 = load i32*, i32** %__first.addr, align 8, !tbaa !2
  %1 = load i32*, i32** %__last.addr, align 8, !tbaa !2
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %0, i32* %1)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %0, i32* %1) #8 comdat align 2 {
entry:
  %.addr = alloca i32*, align 8
  %.addr1 = alloca i32*, align 8
  store i32* %0, i32** %.addr, align 8, !tbaa !2
  store i32* %1, i32** %.addr1, align 8, !tbaa !2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIcEC2Ev(%"class.__gnu_cxx::new_allocator.1"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %this, %"class.__gnu_cxx::new_allocator.1"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %this.addr, align 8
  ret void
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = call zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 2
  %_M_allocated_capacity = bitcast %union.anon* %0 to i64*
  %1 = load i64, i64* %_M_allocated_capacity, align 8, !tbaa !14
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %1) #9
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  %call2 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  %cmp = icmp eq i8* %call, %call2
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i64 %__size) #8 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__size.addr = alloca i64, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i64 %__size, i64* %__size.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = invoke nonnull align 1 dereferenceable(1) %"class.std::allocator.0"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %call2 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  %0 = load i64, i64* %__size.addr, align 8, !tbaa !13
  %add = add i64 %0, 1
  invoke void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %call, i8* %call2, i64 %add)
          to label %invoke.cont3 unwind label %lpad

invoke.cont3:                                     ; preds = %invoke.cont
  ret void

lpad:                                             ; preds = %invoke.cont, %entry
  %1 = landingpad { i8*, i32 }
          filter [0 x i8*] zeroinitializer
  %2 = extractvalue { i8*, i32 } %1, 0
  store i8* %2, i8** %exn.slot, align 8
  %3 = extractvalue { i8*, i32 } %1, 1
  store i32 %3, i32* %ehselector.slot, align 4
  br label %filter.dispatch

filter.dispatch:                                  ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__cxa_call_unexpected(i8* %exn) #31
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 2
  %_M_local_buf = bitcast %union.anon* %0 to [16 x i8]*
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %_M_local_buf, i64 0, i64 0
  %call = call i8* @_ZNSt14pointer_traitsIPKcE10pointer_toERS0_(i8* nonnull align 1 dereferenceable(1) %arraydecay) #9
  ret i8* %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZNSt14pointer_traitsIPKcE10pointer_toERS0_(i8* nonnull align 1 dereferenceable(1) %__r) #8 comdat align 2 {
entry:
  %__r.addr = alloca i8*, align 8
  store i8* %__r, i8** %__r.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__r.addr, align 8, !tbaa !2
  %call = call i8* @_ZSt9addressofIKcEPT_RS1_(i8* nonnull align 1 dereferenceable(1) %0) #9
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZSt9addressofIKcEPT_RS1_(i8* nonnull align 1 dereferenceable(1) %__r) #12 comdat {
entry:
  %__r.addr = alloca i8*, align 8
  store i8* %__r, i8** %__r.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__r.addr, align 8, !tbaa !2
  %call = call i8* @_ZSt11__addressofIKcEPT_RS1_(i8* nonnull align 1 dereferenceable(1) %0) #9
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZSt11__addressofIKcEPT_RS1_(i8* nonnull align 1 dereferenceable(1) %__r) #12 comdat {
entry:
  %__r.addr = alloca i8*, align 8
  store i8* %__r, i8** %__r.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__r.addr, align 8, !tbaa !2
  ret i8* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %__a, i8* %__p, i64 %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.0"*, align 8
  %__p.addr = alloca i8*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.0"* %__a, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  store i8* %__p, i8** %__p.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.0"* %0 to %"class.__gnu_cxx::new_allocator.1"*
  %2 = load i8*, i8** %__p.addr, align 8, !tbaa !2
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm(%"class.__gnu_cxx::new_allocator.1"* nonnull dereferenceable(1) %1, i8* %2, i64 %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator.0"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %_M_dataplus to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %0
}

declare dso_local void @__cxa_call_unexpected(i8*)

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm(%"class.__gnu_cxx::new_allocator.1"* nonnull dereferenceable(1) %this, i8* %__p, i64 %0) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %__p.addr = alloca i8*, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %this, %"class.__gnu_cxx::new_allocator.1"** %this.addr, align 8, !tbaa !2
  store i8* %__p, i8** %__p.addr, align 8, !tbaa !2
  store i64 %0, i64* %.addr, align 8, !tbaa !13
  %this1 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %this.addr, align 8
  %1 = load i8*, i8** %__p.addr, align 8, !tbaa !2
  call void @_ZdlPv(i8* %1) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__s) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__s.addr = alloca i8*, align 8
  %__n = alloca i64, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = bitcast i64* %__n to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %call = call i64 @_ZNSt11char_traitsIcE6lengthEPKc(i8* %1)
  store i64 %call, i64* %__n, align 8, !tbaa !13
  %2 = load i64, i64* %__n, align 8, !tbaa !13
  call void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 0, i64 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i64 0, i64 0))
  %3 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %4 = load i64, i64* %__n, align 8, !tbaa !13
  %call2 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %3, i64 %4)
  %5 = bitcast i64* %__n to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  ret %"class.std::__cxx11::basic_string"* %call2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt11char_traitsIcE6lengthEPKc(i8* %__s) #8 comdat align 2 {
entry:
  %__s.addr = alloca i8*, align 8
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %call = call i64 @strlen(i8* %0) #9
  ret i64 %call
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i64 %__n1, i64 %__n2, i8* %__s) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__n1.addr = alloca i64, align 8
  %__n2.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i64 %__n1, i64* %__n1.addr, align 8, !tbaa !13
  store i64 %__n2, i64* %__n2.addr, align 8, !tbaa !13
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  %call2 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  %0 = load i64, i64* %__n1.addr, align 8, !tbaa !13
  %sub = sub i64 %call2, %0
  %sub3 = sub i64 %call, %sub
  %1 = load i64, i64* %__n2.addr, align 8, !tbaa !13
  %cmp = icmp ult i64 %sub3, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  call void @_ZSt20__throw_length_errorPKc(i8* %2) #31
  unreachable

if.end:                                           ; preds = %entry
  ret void
}

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i64 @strlen(i8*) #4

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = invoke nonnull align 1 dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %call2 = call i64 @_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %call) #9
  %sub = sub i64 %call2, 1
  %div = udiv i64 %sub, 2
  ret i64 %div

terminate.lpad:                                   ; preds = %entry
  %0 = landingpad { i8*, i32 }
          catch i8* null
  %1 = extractvalue { i8*, i32 } %0, 0
  call void @__clang_call_terminate(i8* %1) #29
  unreachable
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) #25

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %__a) #8 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %__a, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  %0 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.0"* %0 to %"class.__gnu_cxx::new_allocator.1"*
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* nonnull dereferenceable(1) %1) #9
  ret i64 %call
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %_M_dataplus to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %this, %"class.__gnu_cxx::new_allocator.1"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %this.addr, align 8
  ret i64 9223372036854775807
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_(%"class.std::allocator.0"* noalias sret(%"class.std::allocator.0") align 1 %agg.result, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %__a) #0 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %__a.addr = alloca %"class.std::allocator.0"*, align 8
  %0 = bitcast %"class.std::allocator.0"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::allocator.0"* %__a, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  %1 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.0"* sret(%"class.std::allocator.0") align 1 %agg.result, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %1)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__beg, i8* %__end) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__beg.addr = alloca i8*, align 8
  %__end.addr = alloca i8*, align 8
  %agg.tmp = alloca %"struct.std::__false_type", align 1
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__beg, i8** %__beg.addr, align 8, !tbaa !2
  store i8* %__end, i8** %__end.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i8*, i8** %__beg.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %__end.addr, align 8, !tbaa !2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %0, i8* %1)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_string_length = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 1
  %0 = load i64, i64* %_M_string_length, align 8, !tbaa !233
  ret i64 %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_(%"class.std::allocator.0"* noalias sret(%"class.std::allocator.0") align 1 %agg.result, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %__rhs) #8 comdat align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %__rhs.addr = alloca %"class.std::allocator.0"*, align 8
  %0 = bitcast %"class.std::allocator.0"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::allocator.0"* %__rhs, %"class.std::allocator.0"** %__rhs.addr, align 8, !tbaa !2
  %1 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %__rhs.addr, align 8, !tbaa !2
  call void @_ZNSaIcEC2ERKS_(%"class.std::allocator.0"* nonnull dereferenceable(1) %agg.result, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %1) #9
  ret void
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSaIcEC2ERKS_(%"class.std::allocator.0"* nonnull dereferenceable(1) %this, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.0"*, align 8
  %__a.addr = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %this, %"class.std::allocator.0"** %this.addr, align 8, !tbaa !2
  store %"class.std::allocator.0"* %__a, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.0"* %this1 to %"class.__gnu_cxx::new_allocator.1"*
  %1 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  %2 = bitcast %"class.std::allocator.0"* %1 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_(%"class.__gnu_cxx::new_allocator.1"* nonnull dereferenceable(1) %0, %"class.__gnu_cxx::new_allocator.1"* nonnull align 1 dereferenceable(1) %2) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPcEEvT_S7_St12__false_type(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__beg, i8* %__end) #0 comdat align 2 {
entry:
  %0 = alloca %"struct.std::__false_type", align 1
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__beg.addr = alloca i8*, align 8
  %__end.addr = alloca i8*, align 8
  %agg.tmp = alloca %"struct.std::forward_iterator_tag", align 1
  %ref.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__beg, i8** %__beg.addr, align 8, !tbaa !2
  store i8* %__end, i8** %__end.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %1 = load i8*, i8** %__beg.addr, align 8, !tbaa !2
  %2 = load i8*, i8** %__end.addr, align 8, !tbaa !2
  %3 = bitcast %"struct.std::random_access_iterator_tag"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  %4 = bitcast %"struct.std::random_access_iterator_tag"* %ref.tmp to %"struct.std::forward_iterator_tag"*
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %1, i8* %2)
  %5 = bitcast %"struct.std::random_access_iterator_tag"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %5) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__beg, i8* %__end) #0 comdat align 2 {
entry:
  %0 = alloca %"struct.std::forward_iterator_tag", align 1
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__beg.addr = alloca i8*, align 8
  %__end.addr = alloca i8*, align 8
  %__dnew = alloca i64, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__beg, i8** %__beg.addr, align 8, !tbaa !2
  store i8* %__end, i8** %__end.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %1 = load i8*, i8** %__beg.addr, align 8, !tbaa !2
  %call = call zeroext i1 @_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_(i8* %1)
  br i1 %call, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %__beg.addr, align 8, !tbaa !2
  %3 = load i8*, i8** %__end.addr, align 8, !tbaa !2
  %cmp = icmp ne i8* %2, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.117, i64 0, i64 0)) #31
  unreachable

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = bitcast i64* %__dnew to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = load i8*, i8** %__beg.addr, align 8, !tbaa !2
  %6 = load i8*, i8** %__end.addr, align 8, !tbaa !2
  %call2 = call i64 @_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_(i8* %5, i8* %6)
  store i64 %call2, i64* %__dnew, align 8, !tbaa !13
  %7 = load i64, i64* %__dnew, align 8, !tbaa !13
  %cmp3 = icmp ugt i64 %7, 15
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %call5 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64* nonnull align 8 dereferenceable(8) %__dnew, i64 0)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %call5)
  %8 = load i64, i64* %__dnew, align 8, !tbaa !13
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %8)
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  %call7 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  %9 = load i8*, i8** %__beg.addr, align 8, !tbaa !2
  %10 = load i8*, i8** %__end.addr, align 8, !tbaa !2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_(i8* %call7, i8* %9, i8* %10) #9
  %11 = load i64, i64* %__dnew, align 8, !tbaa !13
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %11)
  %12 = bitcast i64* %__dnew to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #9
  ret void
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxx17__is_null_pointerIcEEbPT_(i8* %__ptr) #12 comdat {
entry:
  %__ptr.addr = alloca i8*, align 8
  store i8* %__ptr, i8** %__ptr.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__ptr.addr, align 8, !tbaa !2
  %cmp = icmp eq i8* %0, null
  ret i1 %cmp
}

; Function Attrs: noreturn
declare dso_local void @_ZSt19__throw_logic_errorPKc(i8*) #25

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local i64 @_ZSt8distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_(i8* %__first, i8* %__last) #5 comdat {
entry:
  %__first.addr = alloca i8*, align 8
  %__last.addr = alloca i8*, align 8
  %agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  %undef.agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store i8* %__first, i8** %__first.addr, align 8, !tbaa !2
  store i8* %__last, i8** %__last.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__first.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %__last.addr, align 8, !tbaa !2
  call void @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i8** nonnull align 8 dereferenceable(8) %__first.addr)
  %call = call i64 @_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i8* %0, i8* %1)
  ret i64 %call
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__p) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__p.addr = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__p, i8** %__p.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i8*, i8** %__p.addr, align 8, !tbaa !2
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0
  %_M_p = getelementptr inbounds %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %_M_dataplus, i32 0, i32 0
  store i8* %0, i8** %_M_p, align 8, !tbaa !239
  ret void
}

declare dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i64* nonnull align 8 dereferenceable(8), i64) #2

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i64 %__capacity) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__capacity.addr = alloca i64, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i64 %__capacity, i64* %__capacity.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i64, i64* %__capacity.addr, align 8, !tbaa !13
  %1 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 2
  %_M_allocated_capacity = bitcast %union.anon* %1 to i64*
  store i64 %0, i64* %_M_allocated_capacity, align 8, !tbaa !14
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_(i8* %__p, i8* %__k1, i8* %__k2) #8 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__p.addr = alloca i8*, align 8
  %__k1.addr = alloca i8*, align 8
  %__k2.addr = alloca i8*, align 8
  store i8* %__p, i8** %__p.addr, align 8, !tbaa !2
  store i8* %__k1, i8** %__k1.addr, align 8, !tbaa !2
  store i8* %__k2, i8** %__k2.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__p.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %__k1.addr, align 8, !tbaa !2
  %2 = load i8*, i8** %__k2.addr, align 8, !tbaa !2
  %3 = load i8*, i8** %__k1.addr, align 8, !tbaa !2
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm(i8* %0, i8* %1, i64 %sub.ptr.sub)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #29
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZSt10__distanceIPcENSt15iterator_traitsIT_E15difference_typeES2_S2_St26random_access_iterator_tag(i8* %__first, i8* %__last) #12 comdat {
entry:
  %0 = alloca %"struct.std::random_access_iterator_tag", align 1
  %__first.addr = alloca i8*, align 8
  %__last.addr = alloca i8*, align 8
  store i8* %__first, i8** %__first.addr, align 8, !tbaa !2
  store i8* %__last, i8** %__last.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %__last.addr, align 8, !tbaa !2
  %2 = load i8*, i8** %__first.addr, align 8, !tbaa !2
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  ret i64 %sub.ptr.sub
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZSt19__iterator_categoryIPcENSt15iterator_traitsIT_E17iterator_categoryERKS2_(i8** nonnull align 8 dereferenceable(8) %0) #12 comdat {
entry:
  %.addr = alloca i8**, align 8
  store i8** %0, i8*** %.addr, align 8, !tbaa !2
  ret void
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm(i8* %__d, i8* %__s, i64 %__n) #0 align 2 {
entry:
  %__d.addr = alloca i8*, align 8
  %__s.addr = alloca i8*, align 8
  %__n.addr = alloca i64, align 8
  store i8* %__d, i8** %__d.addr, align 8, !tbaa !2
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %cmp = icmp eq i64 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__d.addr, align 8, !tbaa !2
  %2 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  call void @_ZNSt11char_traitsIcE6assignERcRKc(i8* nonnull align 1 dereferenceable(1) %1, i8* nonnull align 1 dereferenceable(1) %2) #9
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %__d.addr, align 8, !tbaa !2
  %4 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %5 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call i8* @_ZNSt11char_traitsIcE4copyEPcPKcm(i8* %3, i8* %4, i64 %5)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZNSt11char_traitsIcE4copyEPcPKcm(i8* %__s1, i8* %__s2, i64 %__n) #8 comdat align 2 {
entry:
  %retval = alloca i8*, align 8
  %__s1.addr = alloca i8*, align 8
  %__s2.addr = alloca i8*, align 8
  %__n.addr = alloca i64, align 8
  store i8* %__s1, i8** %__s1.addr, align 8, !tbaa !2
  store i8* %__s2, i8** %__s2.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %cmp = icmp eq i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s1.addr, align 8, !tbaa !2
  store i8* %1, i8** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %__s1.addr, align 8, !tbaa !2
  %3 = load i8*, i8** %__s2.addr, align 8, !tbaa !2
  %4 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 %3, i64 %4, i1 false)
  store i8* %2, i8** %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8
  ret i8* %5
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__t) #8 comdat {
entry:
  %__t.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %__t, %"class.std::__cxx11::basic_string"** %__t.addr, align 8, !tbaa !2
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__t.addr, align 8, !tbaa !2
  ret %"class.std::__cxx11::basic_string"* %0
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__str) unnamed_addr #6 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__str.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__str, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0
  %call = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call2 = call nonnull align 1 dereferenceable(1) %"class.std::allocator.0"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %0)
  %call3 = call nonnull align 1 dereferenceable(1) %"class.std::allocator.0"* @_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %call2) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus, i8* %call, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %call3)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call5 = invoke zeroext i1 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %1)
          to label %invoke.cont4 unwind label %lpad

invoke.cont4:                                     ; preds = %invoke.cont
  br i1 %call5, label %if.then, label %if.else

if.then:                                          ; preds = %invoke.cont4
  %2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 2
  %_M_local_buf = bitcast %union.anon* %2 to [16 x i8]*
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %_M_local_buf, i64 0, i64 0
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %4 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i32 0, i32 2
  %_M_local_buf6 = bitcast %union.anon* %4 to [16 x i8]*
  %arraydecay7 = getelementptr inbounds [16 x i8], [16 x i8]* %_M_local_buf6, i64 0, i64 0
  %call8 = call i8* @_ZNSt11char_traitsIcE4copyEPcPKcm(i8* %arraydecay, i8* %arraydecay7, i64 16)
  br label %if.end

lpad:                                             ; preds = %if.end, %invoke.cont
  %5 = landingpad { i8*, i32 }
          catch i8* null
  %6 = extractvalue { i8*, i32 } %5, 0
  store i8* %6, i8** %exn.slot, align 8
  %7 = extractvalue { i8*, i32 } %5, 1
  store i32 %7, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.std::allocator.0"*)* @_ZNSaIcED2Ev to void (%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*)*)(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus) #9
  br label %terminate.handler

if.else:                                          ; preds = %invoke.cont4
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call9 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %8)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %call9)
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %10 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %9, i32 0, i32 2
  %_M_allocated_capacity = bitcast %union.anon* %10 to i64*
  %11 = load i64, i64* %_M_allocated_capacity, align 8, !tbaa !14
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %11)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call10 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %12) #9
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %call10)
  %13 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %14 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call11 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %14)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %13, i8* %call11)
  %15 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %15, i64 0)
          to label %invoke.cont12 unwind label %lpad

invoke.cont12:                                    ; preds = %if.end
  ret void

terminate.lpad:                                   ; preds = %entry
  %16 = landingpad { i8*, i32 }
          catch i8* null
  %17 = extractvalue { i8*, i32 } %16, 0
  call void @__clang_call_terminate(i8* %17) #29
  unreachable

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %this, i8* %__dat, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*, align 8
  %__dat.addr = alloca i8*, align 8
  %__a.addr = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %this, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"** %this.addr, align 8, !tbaa !2
  store i8* %__dat, i8** %__dat.addr, align 8, !tbaa !2
  store %"class.std::allocator.0"* %__a, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*, %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"** %this.addr, align 8
  %0 = bitcast %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %this1 to %"class.std::allocator.0"*
  %1 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSaIcEC2ERKS_(%"class.std::allocator.0"* nonnull dereferenceable(1) %0, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %1) #9
  %_M_p = getelementptr inbounds %"struct.std::__cxx11::basic_string<char>::_Alloc_hider", %"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* %this1, i32 0, i32 0
  %2 = load i8*, i8** %__dat.addr, align 8, !tbaa !2
  store i8* %2, i8** %_M_p, align 8, !tbaa !245
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__beg, i8* %__end) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__beg.addr = alloca i8*, align 8
  %__end.addr = alloca i8*, align 8
  %agg.tmp = alloca %"struct.std::__false_type", align 1
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__beg, i8** %__beg.addr, align 8, !tbaa !2
  store i8* %__end, i8** %__end.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i8*, i8** %__beg.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %__end.addr, align 8, !tbaa !2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %0, i8* %1)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_construct_auxIPKcEEvT_S8_St12__false_type(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__beg, i8* %__end) #0 comdat align 2 {
entry:
  %0 = alloca %"struct.std::__false_type", align 1
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__beg.addr = alloca i8*, align 8
  %__end.addr = alloca i8*, align 8
  %agg.tmp = alloca %"struct.std::forward_iterator_tag", align 1
  %ref.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__beg, i8** %__beg.addr, align 8, !tbaa !2
  store i8* %__end, i8** %__end.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %1 = load i8*, i8** %__beg.addr, align 8, !tbaa !2
  %2 = load i8*, i8** %__end.addr, align 8, !tbaa !2
  %3 = bitcast %"struct.std::random_access_iterator_tag"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %3) #9
  %4 = bitcast %"struct.std::random_access_iterator_tag"* %ref.tmp to %"struct.std::forward_iterator_tag"*
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %1, i8* %2)
  %5 = bitcast %"struct.std::random_access_iterator_tag"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %5) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__beg, i8* %__end) #0 comdat align 2 {
entry:
  %0 = alloca %"struct.std::forward_iterator_tag", align 1
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__beg.addr = alloca i8*, align 8
  %__end.addr = alloca i8*, align 8
  %__dnew = alloca i64, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__beg, i8** %__beg.addr, align 8, !tbaa !2
  store i8* %__end, i8** %__end.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %1 = load i8*, i8** %__beg.addr, align 8, !tbaa !2
  %call = call zeroext i1 @_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_(i8* %1)
  br i1 %call, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %__beg.addr, align 8, !tbaa !2
  %3 = load i8*, i8** %__end.addr, align 8, !tbaa !2
  %cmp = icmp ne i8* %2, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @_ZSt19__throw_logic_errorPKc(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.117, i64 0, i64 0)) #31
  unreachable

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = bitcast i64* %__dnew to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = load i8*, i8** %__beg.addr, align 8, !tbaa !2
  %6 = load i8*, i8** %__end.addr, align 8, !tbaa !2
  %call2 = call i64 @_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_(i8* %5, i8* %6)
  store i64 %call2, i64* %__dnew, align 8, !tbaa !13
  %7 = load i64, i64* %__dnew, align 8, !tbaa !13
  %cmp3 = icmp ugt i64 %7, 15
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %call5 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64* nonnull align 8 dereferenceable(8) %__dnew, i64 0)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %call5)
  %8 = load i64, i64* %__dnew, align 8, !tbaa !13
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %8)
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  %call7 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  %9 = load i8*, i8** %__beg.addr, align 8, !tbaa !2
  %10 = load i8*, i8** %__end.addr, align 8, !tbaa !2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_(i8* %call7, i8* %9, i8* %10) #9
  %11 = load i64, i64* %__dnew, align 8, !tbaa !13
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %11)
  %12 = bitcast i64* %__dnew to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #9
  ret void
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxx17__is_null_pointerIKcEEbPT_(i8* %__ptr) #12 comdat {
entry:
  %__ptr.addr = alloca i8*, align 8
  store i8* %__ptr, i8** %__ptr.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__ptr.addr, align 8, !tbaa !2
  %cmp = icmp eq i8* %0, null
  ret i1 %cmp
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local i64 @_ZSt8distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_(i8* %__first, i8* %__last) #5 comdat {
entry:
  %__first.addr = alloca i8*, align 8
  %__last.addr = alloca i8*, align 8
  %agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  %undef.agg.tmp = alloca %"struct.std::random_access_iterator_tag", align 1
  store i8* %__first, i8** %__first.addr, align 8, !tbaa !2
  store i8* %__last, i8** %__last.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__first.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %__last.addr, align 8, !tbaa !2
  call void @_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i8** nonnull align 8 dereferenceable(8) %__first.addr)
  %call = call i64 @_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i8* %0, i8* %1)
  ret i64 %call
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_(i8* %__p, i8* %__k1, i8* %__k2) #8 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__p.addr = alloca i8*, align 8
  %__k1.addr = alloca i8*, align 8
  %__k2.addr = alloca i8*, align 8
  store i8* %__p, i8** %__p.addr, align 8, !tbaa !2
  store i8* %__k1, i8** %__k1.addr, align 8, !tbaa !2
  store i8* %__k2, i8** %__k2.addr, align 8, !tbaa !2
  %0 = load i8*, i8** %__p.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %__k1.addr, align 8, !tbaa !2
  %2 = load i8*, i8** %__k2.addr, align 8, !tbaa !2
  %3 = load i8*, i8** %__k1.addr, align 8, !tbaa !2
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm(i8* %0, i8* %1, i64 %sub.ptr.sub)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #29
  unreachable
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZSt10__distanceIPKcENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i8* %__first, i8* %__last) #12 comdat {
entry:
  %0 = alloca %"struct.std::random_access_iterator_tag", align 1
  %__first.addr = alloca i8*, align 8
  %__last.addr = alloca i8*, align 8
  store i8* %__first, i8** %__first.addr, align 8, !tbaa !2
  store i8* %__last, i8** %__last.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %__last.addr, align 8, !tbaa !2
  %2 = load i8*, i8** %__first.addr, align 8, !tbaa !2
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  ret i64 %sub.ptr.sub
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZSt19__iterator_categoryIPKcENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i8** nonnull align 8 dereferenceable(8) %0) #12 comdat {
entry:
  %.addr = alloca i8**, align 8
  store i8** %0, i8*** %.addr, align 8, !tbaa !2
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJS5_EEEvDpOT_(%"class.std::vector"* nonnull dereferenceable(24) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__args) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__args.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__args, %"class.std::__cxx11::basic_string"** %__args.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %1, i32 0, i32 1
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish, align 8, !tbaa !57
  %3 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %4, i32 0, i32 2
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_end_of_storage, align 8, !tbaa !242
  %cmp = icmp ne %"class.std::__cxx11::basic_string"* %2, %5
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %6 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl3 to %"class.std::allocator"*
  %8 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl4 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_finish5 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %9, i32 0, i32 1
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish5, align 8, !tbaa !57
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__args.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %11) #9
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %7, %"class.std::__cxx11::basic_string"* %10, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %call) #9
  %12 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %12, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl6 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_finish7 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %13, i32 0, i32 1
  %14 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish7, align 8, !tbaa !57
  %incdec.ptr = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %14, i32 1
  store %"class.std::__cxx11::basic_string"* %incdec.ptr, %"class.std::__cxx11::basic_string"** %_M_finish7, align 8, !tbaa !57
  br label %if.end

if.else:                                          ; preds = %entry
  %call8 = call %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE3endEv(%"class.std::vector"* nonnull dereferenceable(24) %this1) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %call8, %"class.std::__cxx11::basic_string"** %coerce.dive, align 8
  %15 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__args.addr, align 8, !tbaa !2
  %call9 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %15) #9
  %coerce.dive10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  %16 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %coerce.dive10, align 8
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull dereferenceable(24) %this1, %"class.std::__cxx11::basic_string"* %16, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %call9)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %__a, %"class.std::__cxx11::basic_string"* %__p, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__args) #8 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator"*, align 8
  %__p.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__args.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__p, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__args, %"class.std::__cxx11::basic_string"** %__args.addr, align 8, !tbaa !2
  %0 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator"* %0 to %"class.__gnu_cxx::new_allocator"*
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__args.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3) #9
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %1, %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %call) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__t) #8 comdat {
entry:
  %__t.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %__t, %"class.std::__cxx11::basic_string"** %__t.addr, align 8, !tbaa !2
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__t.addr, align 8, !tbaa !2
  ret %"class.std::__cxx11::basic_string"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_(%"class.std::vector"* nonnull dereferenceable(24) %this, %"class.std::__cxx11::basic_string"* %__position.coerce, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__args) #0 comdat align 2 {
entry:
  %__position = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector"*, align 8
  %__args.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__len = alloca i64, align 8
  %__old_start = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__old_finish = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__elems_before = alloca i64, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__new_start = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__new_finish = alloca %"class.std::__cxx11::basic_string"*, align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__position, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %__position.coerce, %"class.std::__cxx11::basic_string"** %coerce.dive, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__args, %"class.std::__cxx11::basic_string"** %__args.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast i64* %__len to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %call = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector"* nonnull dereferenceable(24) %this1, i64 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.118, i64 0, i64 0))
  store i64 %call, i64* %__len, align 8, !tbaa !13
  %1 = bitcast %"class.std::__cxx11::basic_string"** %__old_start to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %2, i32 0, i32 0
  %3 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %3, i32 0, i32 0
  %4 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_start, align 8, !tbaa !55
  store %"class.std::__cxx11::basic_string"* %4, %"class.std::__cxx11::basic_string"** %__old_start, align 8, !tbaa !2
  %5 = bitcast %"class.std::__cxx11::basic_string"** %__old_finish to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %7, i32 0, i32 1
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish, align 8, !tbaa !57
  store %"class.std::__cxx11::basic_string"* %8, %"class.std::__cxx11::basic_string"** %__old_finish, align 8, !tbaa !2
  %9 = bitcast i64* %__elems_before to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #9
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #9
  %call3 = call %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE5beginEv(%"class.std::vector"* nonnull dereferenceable(24) %this1) #9
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %ref.tmp, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %call3, %"class.std::__cxx11::basic_string"** %coerce.dive4, align 8
  %call5 = call i64 @_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %__position, %"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %ref.tmp) #9
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #9
  store i64 %call5, i64* %__elems_before, align 8, !tbaa !13
  %12 = bitcast %"class.std::__cxx11::basic_string"** %__new_start to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #9
  %13 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %14 = load i64, i64* %__len, align 8, !tbaa !13
  %call6 = call %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %13, i64 %14)
  store %"class.std::__cxx11::basic_string"* %call6, %"class.std::__cxx11::basic_string"** %__new_start, align 8, !tbaa !2
  %15 = bitcast %"class.std::__cxx11::basic_string"** %__new_finish to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #9
  %16 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__new_start, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %16, %"class.std::__cxx11::basic_string"** %__new_finish, align 8, !tbaa !2
  %17 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl7 to %"class.std::allocator"*
  %19 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__new_start, align 8, !tbaa !2
  %20 = load i64, i64* %__elems_before, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %19, i64 %20
  %21 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__args.addr, align 8, !tbaa !2
  %call8 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %21) #9
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %18, %"class.std::__cxx11::basic_string"* %add.ptr, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %call8) #9
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %__new_finish, align 8, !tbaa !2
  %22 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__old_start, align 8, !tbaa !2
  %call9 = call nonnull align 8 dereferenceable(8) %"class.std::__cxx11::basic_string"** @_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %__position) #9
  %23 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %call9, align 8, !tbaa !2
  %24 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__new_start, align 8, !tbaa !2
  %25 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call10 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %25) #9
  %call11 = call %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_(%"class.std::__cxx11::basic_string"* %22, %"class.std::__cxx11::basic_string"* %23, %"class.std::__cxx11::basic_string"* %24, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %call10) #9
  store %"class.std::__cxx11::basic_string"* %call11, %"class.std::__cxx11::basic_string"** %__new_finish, align 8, !tbaa !2
  %26 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__new_finish, align 8, !tbaa !2
  %incdec.ptr = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %26, i32 1
  store %"class.std::__cxx11::basic_string"* %incdec.ptr, %"class.std::__cxx11::basic_string"** %__new_finish, align 8, !tbaa !2
  %call12 = call nonnull align 8 dereferenceable(8) %"class.std::__cxx11::basic_string"** @_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %__position) #9
  %27 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %call12, align 8, !tbaa !2
  %28 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__old_finish, align 8, !tbaa !2
  %29 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__new_finish, align 8, !tbaa !2
  %30 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call13 = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %30) #9
  %call14 = call %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_(%"class.std::__cxx11::basic_string"* %27, %"class.std::__cxx11::basic_string"* %28, %"class.std::__cxx11::basic_string"* %29, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %call13) #9
  store %"class.std::__cxx11::basic_string"* %call14, %"class.std::__cxx11::basic_string"** %__new_finish, align 8, !tbaa !2
  %31 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %32 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__old_start, align 8, !tbaa !2
  %33 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl15 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %34, i32 0, i32 2
  %35 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_end_of_storage, align 8, !tbaa !242
  %36 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__old_start, align 8, !tbaa !2
  %sub.ptr.lhs.cast = ptrtoint %"class.std::__cxx11::basic_string"* %35 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.std::__cxx11::basic_string"* %36 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 32
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %31, %"class.std::__cxx11::basic_string"* %32, i64 %sub.ptr.div)
  %37 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__new_start, align 8, !tbaa !2
  %38 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %38, i32 0, i32 0
  %39 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl16 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_start17 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %39, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %37, %"class.std::__cxx11::basic_string"** %_M_start17, align 8, !tbaa !55
  %40 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__new_finish, align 8, !tbaa !2
  %41 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %42 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl18 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_finish19 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %42, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* %40, %"class.std::__cxx11::basic_string"** %_M_finish19, align 8, !tbaa !57
  %43 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__new_start, align 8, !tbaa !2
  %44 = load i64, i64* %__len, align 8, !tbaa !13
  %add.ptr20 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %43, i64 %44
  %45 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %45, i32 0, i32 0
  %46 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl21 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_end_of_storage22 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %46, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %add.ptr20, %"class.std::__cxx11::basic_string"** %_M_end_of_storage22, align 8, !tbaa !242
  %47 = bitcast %"class.std::__cxx11::basic_string"** %__new_finish to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #9
  %48 = bitcast %"class.std::__cxx11::basic_string"** %__new_start to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %48) #9
  %49 = bitcast i64* %__elems_before to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %49) #9
  %50 = bitcast %"class.std::__cxx11::basic_string"** %__old_finish to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %50) #9
  %51 = bitcast %"class.std::__cxx11::basic_string"** %__old_start to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #9
  %52 = bitcast i64* %__len to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %52) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE9constructIS6_JS6_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %this, %"class.std::__cxx11::basic_string"* %__p, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__args) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %__p.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__args.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__p, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__args, %"class.std::__cxx11::basic_string"** %__args.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::__cxx11::basic_string"* %0 to i8*
  %2 = bitcast i8* %1 to %"class.std::__cxx11::basic_string"*
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__args.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt7forwardINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %3) #9
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %2, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %call) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_M_check_lenEmPKc(%"class.std::vector"* nonnull dereferenceable(24) %this, i64 %__n, i8* %__s) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %call = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector"* nonnull dereferenceable(24) %this1) #9
  %call2 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* nonnull dereferenceable(24) %this1) #9
  %sub = sub i64 %call, %call2
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %cmp = icmp ult i64 %sub, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  call void @_ZSt20__throw_length_errorPKc(i8* %1) #31
  unreachable

if.end:                                           ; preds = %entry
  %2 = bitcast i64* %__len to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call3 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* nonnull dereferenceable(24) %this1) #9
  %3 = bitcast i64* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #9
  %call4 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* nonnull dereferenceable(24) %this1) #9
  store i64 %call4, i64* %ref.tmp, align 8, !tbaa !13
  %call5 = call nonnull align 8 dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__n.addr)
  %4 = load i64, i64* %call5, align 8, !tbaa !13
  %add = add i64 %call3, %4
  %5 = bitcast i64* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  store i64 %add, i64* %__len, align 8, !tbaa !13
  %6 = load i64, i64* %__len, align 8, !tbaa !13
  %call6 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* nonnull dereferenceable(24) %this1) #9
  %cmp7 = icmp ult i64 %6, %call6
  br i1 %cmp7, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i64, i64* %__len, align 8, !tbaa !13
  %call8 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector"* nonnull dereferenceable(24) %this1) #9
  %cmp9 = icmp ugt i64 %7, %call8
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %call10 = call i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector"* nonnull dereferenceable(24) %this1) #9
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %8 = load i64, i64* %__len, align 8, !tbaa !13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %8, %cond.false ]
  %9 = bitcast i64* %__len to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  ret i64 %cond
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_(%"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator"* nonnull align 8 dereferenceable(8) %__rhs) #12 comdat {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %__lhs, %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, align 8, !tbaa !2
  store %"class.__gnu_cxx::__normal_iterator"* %__rhs, %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, align 8, !tbaa !2
  %0 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(8) %"class.std::__cxx11::basic_string"** @_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %0) #9
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %call, align 8, !tbaa !2
  %2 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(8) %"class.std::__cxx11::basic_string"** @_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %2) #9
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %call1, align 8, !tbaa !2
  %sub.ptr.lhs.cast = ptrtoint %"class.std::__cxx11::basic_string"* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.std::__cxx11::basic_string"* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 32
  ret i64 %sub.ptr.div
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %this, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl to %"class.std::allocator"*
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %1, i64 %2)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %"class.std::__cxx11::basic_string"* [ %call, %cond.true ], [ null, %cond.false ]
  ret %"class.std::__cxx11::basic_string"* %cond
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_relocateEPS5_S8_S8_RS6_(%"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"* %__last, %"class.std::__cxx11::basic_string"* %__result, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %__alloc) #8 comdat align 2 {
entry:
  %__first.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__last.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__result.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__alloc.addr = alloca %"class.std::allocator"*, align 8
  %agg.tmp = alloca %"struct.std::integral_constant", align 1
  store %"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__last, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__result, %"class.std::__cxx11::basic_string"** %__result.addr, align 8, !tbaa !2
  store %"class.std::allocator"* %__alloc, %"class.std::allocator"** %__alloc.addr, align 8, !tbaa !2
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__result.addr, align 8, !tbaa !2
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %__alloc.addr, align 8, !tbaa !2
  %call = call %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_S_do_relocateEPS5_S8_S8_RS6_St17integral_constantIbLb1EE(%"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* %2, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %3) #9
  ret %"class.std::__cxx11::basic_string"* %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) %"class.std::__cxx11::basic_string"** @_ZNK9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  ret %"class.std::__cxx11::basic_string"** %_M_current
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl to %"class.std::allocator"*
  ret %"class.std::allocator"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %this, %"class.std::__cxx11::basic_string"* %__p, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  %__p.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__p, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  %tobool = icmp ne %"class.std::__cxx11::basic_string"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl to %"class.std::allocator"*
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %1, %"class.std::__cxx11::basic_string"* %2, i64 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE8max_sizeEv(%"class.std::vector"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %0) #9
  %call2 = call i64 @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %call) #9
  ret i64 %call2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNKSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE4sizeEv(%"class.std::vector"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %1, i32 0, i32 1
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_finish, align 8, !tbaa !57
  %3 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %4, i32 0, i32 0
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_start, align 8, !tbaa !55
  %sub.ptr.lhs.cast = ptrtoint %"class.std::__cxx11::basic_string"* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.std::__cxx11::basic_string"* %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 32
  ret i64 %sub.ptr.div
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %__a, i64* nonnull align 8 dereferenceable(8) %__b) #12 comdat {
entry:
  %retval = alloca i64*, align 8
  %__a.addr = alloca i64*, align 8
  %__b.addr = alloca i64*, align 8
  store i64* %__a, i64** %__a.addr, align 8, !tbaa !2
  store i64* %__b, i64** %__b.addr, align 8, !tbaa !2
  %0 = load i64*, i64** %__a.addr, align 8, !tbaa !2
  %1 = load i64, i64* %0, align 8, !tbaa !13
  %2 = load i64*, i64** %__b.addr, align 8, !tbaa !2
  %3 = load i64, i64* %2, align 8, !tbaa !13
  %cmp = icmp ult i64 %1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i64*, i64** %__b.addr, align 8, !tbaa !2
  store i64* %4, i64** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %5 = load i64*, i64** %__a.addr, align 8, !tbaa !2
  store i64* %5, i64** %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i64*, i64** %retval, align 8
  ret i64* %6
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_S_max_sizeERKS6_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %__a) #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__a.addr = alloca %"class.std::allocator"*, align 8
  %__diffmax = alloca i64, align 8
  %__allocmax = alloca i64, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8, !tbaa !2
  %0 = bitcast i64* %__diffmax to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  store i64 288230376151711743, i64* %__diffmax, align 8, !tbaa !13
  %1 = bitcast i64* %__allocmax to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8, !tbaa !2
  %call = call i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %2) #9
  store i64 %call, i64* %__allocmax, align 8, !tbaa !13
  %call1 = invoke nonnull align 8 dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %__diffmax, i64* nonnull align 8 dereferenceable(8) %__allocmax)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %3 = load i64, i64* %call1, align 8, !tbaa !13
  %4 = bitcast i64* %__allocmax to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #9
  %5 = bitcast i64* %__diffmax to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  ret i64 %3

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  %9 = bitcast i64* %__allocmax to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  %10 = bitcast i64* %__diffmax to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl to %"class.std::allocator"*
  ret %"class.std::allocator"* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8max_sizeERKS6_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %__a) #8 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8, !tbaa !2
  %0 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator"* %0 to %"class.__gnu_cxx::new_allocator"*
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %1) #9
  ret i64 %call
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %__a, i64* nonnull align 8 dereferenceable(8) %__b) #12 comdat {
entry:
  %retval = alloca i64*, align 8
  %__a.addr = alloca i64*, align 8
  %__b.addr = alloca i64*, align 8
  store i64* %__a, i64** %__a.addr, align 8, !tbaa !2
  store i64* %__b, i64** %__b.addr, align 8, !tbaa !2
  %0 = load i64*, i64** %__b.addr, align 8, !tbaa !2
  %1 = load i64, i64* %0, align 8, !tbaa !13
  %2 = load i64*, i64** %__a.addr, align 8, !tbaa !2
  %3 = load i64, i64* %2, align 8, !tbaa !13
  %cmp = icmp ult i64 %1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i64*, i64** %__b.addr, align 8, !tbaa !2
  store i64* %4, i64** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %5 = load i64*, i64** %__a.addr, align 8, !tbaa !2
  store i64* %5, i64** %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i64*, i64** %retval, align 8
  ret i64* %6
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  ret i64 288230376151711743
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %__a, i64 %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator"* %0 to %"class.__gnu_cxx::new_allocator"*
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %1, i64 %2, i8* null)
  ret %"class.std::__cxx11::basic_string"* %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %this, i64 %__n, i8* %0) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store i8* %0, i8** %.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %this1) #9
  %cmp = icmp ugt i64 %1, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #31
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %mul = mul i64 %2, 32
  %call2 = call noalias nonnull i8* @_Znwm(i64 %mul) #34
  %3 = bitcast i8* %call2 to %"class.std::__cxx11::basic_string"*
  ret %"class.std::__cxx11::basic_string"* %3
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() #25

; Function Attrs: nobuiltin allocsize(0)
declare dso_local nonnull i8* @_Znwm(i64) #19

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE14_S_do_relocateEPS5_S8_S8_RS6_St17integral_constantIbLb1EE(%"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"* %__last, %"class.std::__cxx11::basic_string"* %__result, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %__alloc) #8 comdat align 2 {
entry:
  %0 = alloca %"struct.std::integral_constant", align 1
  %__first.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__last.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__result.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__alloc.addr = alloca %"class.std::allocator"*, align 8
  store %"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__last, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__result, %"class.std::__cxx11::basic_string"** %__result.addr, align 8, !tbaa !2
  store %"class.std::allocator"* %__alloc, %"class.std::allocator"** %__alloc.addr, align 8, !tbaa !2
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__result.addr, align 8, !tbaa !2
  %4 = load %"class.std::allocator"*, %"class.std::allocator"** %__alloc.addr, align 8, !tbaa !2
  %call = call %"class.std::__cxx11::basic_string"* @_ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* %2, %"class.std::__cxx11::basic_string"* %3, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %4) #9
  ret %"class.std::__cxx11::basic_string"* %call
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZSt12__relocate_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"* %__last, %"class.std::__cxx11::basic_string"* %__result, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %__alloc) #12 comdat {
entry:
  %__first.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__last.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__result.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__alloc.addr = alloca %"class.std::allocator"*, align 8
  store %"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__last, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__result, %"class.std::__cxx11::basic_string"** %__result.addr, align 8, !tbaa !2
  store %"class.std::allocator"* %__alloc, %"class.std::allocator"** %__alloc.addr, align 8, !tbaa !2
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  %call = call %"class.std::__cxx11::basic_string"* @_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_(%"class.std::__cxx11::basic_string"* %0) #9
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  %call1 = call %"class.std::__cxx11::basic_string"* @_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_(%"class.std::__cxx11::basic_string"* %1) #9
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__result.addr, align 8, !tbaa !2
  %call2 = call %"class.std::__cxx11::basic_string"* @_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_(%"class.std::__cxx11::basic_string"* %2) #9
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %__alloc.addr, align 8, !tbaa !2
  %call3 = call %"class.std::__cxx11::basic_string"* @_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"* %call, %"class.std::__cxx11::basic_string"* %call1, %"class.std::__cxx11::basic_string"* %call2, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %3) #9
  ret %"class.std::__cxx11::basic_string"* %call3
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZSt14__relocate_a_1IPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"* %__last, %"class.std::__cxx11::basic_string"* %__result, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %__alloc) #12 comdat {
entry:
  %__first.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__last.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__result.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__alloc.addr = alloca %"class.std::allocator"*, align 8
  %__cur = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__last, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__result, %"class.std::__cxx11::basic_string"** %__result.addr, align 8, !tbaa !2
  store %"class.std::allocator"* %__alloc, %"class.std::allocator"** %__alloc.addr, align 8, !tbaa !2
  %0 = bitcast %"class.std::__cxx11::basic_string"** %__cur to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__result.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %__cur, align 8, !tbaa !2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  %cmp = icmp ne %"class.std::__cxx11::basic_string"* %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__cur, align 8, !tbaa !2
  %call = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4) #9
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  %call1 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %5) #9
  %6 = load %"class.std::allocator"*, %"class.std::allocator"** %__alloc.addr, align 8, !tbaa !2
  call void @_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_(%"class.std::__cxx11::basic_string"* %call, %"class.std::__cxx11::basic_string"* %call1, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %6) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  %incdec.ptr = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %7, i32 1
  store %"class.std::__cxx11::basic_string"* %incdec.ptr, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__cur, align 8, !tbaa !2
  %incdec.ptr2 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %8, i32 1
  store %"class.std::__cxx11::basic_string"* %incdec.ptr2, %"class.std::__cxx11::basic_string"** %__cur, align 8, !tbaa !2
  br label %for.cond, !llvm.loop !250

for.end:                                          ; preds = %for.cond
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__cur, align 8, !tbaa !2
  %10 = bitcast %"class.std::__cxx11::basic_string"** %__cur to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9
  ret %"class.std::__cxx11::basic_string"* %9
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZSt12__niter_baseIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEET_S7_(%"class.std::__cxx11::basic_string"* %__it) #12 comdat {
entry:
  %__it.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %__it, %"class.std::__cxx11::basic_string"** %__it.addr, align 8, !tbaa !2
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__it.addr, align 8, !tbaa !2
  ret %"class.std::__cxx11::basic_string"* %0
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZSt19__relocate_object_aINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_SaIS5_EEvPT_PT0_RT1_(%"class.std::__cxx11::basic_string"* %__dest, %"class.std::__cxx11::basic_string"* %__orig, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %__alloc) #12 comdat {
entry:
  %__dest.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__orig.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__alloc.addr = alloca %"class.std::allocator"*, align 8
  store %"class.std::__cxx11::basic_string"* %__dest, %"class.std::__cxx11::basic_string"** %__dest.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__orig, %"class.std::__cxx11::basic_string"** %__orig.addr, align 8, !tbaa !2
  store %"class.std::allocator"* %__alloc, %"class.std::allocator"** %__alloc.addr, align 8, !tbaa !2
  %0 = load %"class.std::allocator"*, %"class.std::allocator"** %__alloc.addr, align 8, !tbaa !2
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__dest.addr, align 8, !tbaa !2
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__orig.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2) #9
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE9constructIS5_JS5_EEEvRS6_PT_DpOT0_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %0, %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %call) #9
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %__alloc.addr, align 8, !tbaa !2
  %4 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__orig.addr, align 8, !tbaa !2
  %call1 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %4) #9
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %3, %"class.std::__cxx11::basic_string"* %call1) #9
  ret void
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__r) #12 comdat {
entry:
  %__r.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %__r, %"class.std::__cxx11::basic_string"** %__r.addr, align 8, !tbaa !2
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__r.addr, align 8, !tbaa !2
  ret %"class.std::__cxx11::basic_string"* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE7destroyIS5_EEvRS6_PT_(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %__a, %"class.std::__cxx11::basic_string"* %__p) #8 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator"*, align 8
  %__p.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__p, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  %0 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator"* %0 to %"class.__gnu_cxx::new_allocator"*
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %1, %"class.std::__cxx11::basic_string"* %2) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7destroyIS6_EEvPT_(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %this, %"class.std::__cxx11::basic_string"* %__p) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %__p.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__p, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %0) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator"* nonnull align 1 dereferenceable(1) %__a, %"class.std::__cxx11::basic_string"* %__p, i64 %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator"*, align 8
  %__p.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator"* %__a, %"class.std::allocator"** %__a.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__p, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load %"class.std::allocator"*, %"class.std::allocator"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator"* %0 to %"class.__gnu_cxx::new_allocator"*
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %1, %"class.std::__cxx11::basic_string"* %2, i64 %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %this, %"class.std::__cxx11::basic_string"* %__p, i64 %0) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %__p.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__p, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  store i64 %0, i64* %.addr, align 8, !tbaa !13
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__p.addr, align 8, !tbaa !2
  %2 = bitcast %"class.std::__cxx11::basic_string"* %1 to i8*
  call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind
declare dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i8*, i64, i64) #4

; Function Attrs: uwtable mustprogress
define available_externally dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i64 %__pos, i8* %__s) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__pos.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i64 %__pos, i64* %__pos.addr, align 8, !tbaa !13
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  %call = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  %cmp = icmp ugt i64 %0, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %2 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  %call2 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.120, i64 0, i64 0), i8* %1, i64 %2, i64 %call2) #31
  unreachable

if.end:                                           ; preds = %entry
  %3 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  ret i64 %3
}

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS4_mm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__str, i64 %__pos, i64 %__n) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__str.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__pos.addr = alloca i64, align 8
  %__n.addr = alloca i64, align 8
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %__start = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__str, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  store i64 %__pos, i64* %__pos.addr, align 8, !tbaa !13
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0
  %call = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  %0 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcOS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus, i8* %call, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  %2 = bitcast i8** %__start to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call2 = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %3)
  %4 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %5 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  %call5 = invoke i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %4, i64 %5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.121, i64 0, i64 0))
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont
  %add.ptr = getelementptr inbounds i8, i8* %call2, i64 %call5
  store i8* %add.ptr, i8** %__start, align 8, !tbaa !2
  %6 = load i8*, i8** %__start, align 8, !tbaa !2
  %7 = load i8*, i8** %__start, align 8, !tbaa !2
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %9 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  %10 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call6 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %8, i64 %9, i64 %10) #9
  %add.ptr7 = getelementptr inbounds i8, i8* %7, i64 %call6
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %6, i8* %add.ptr7)
          to label %invoke.cont8 unwind label %lpad3

invoke.cont8:                                     ; preds = %invoke.cont4
  %11 = bitcast i8** %__start to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #9
  ret void

lpad:                                             ; preds = %entry
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  store i8* %13, i8** %exn.slot, align 8
  %14 = extractvalue { i8*, i32 } %12, 1
  store i32 %14, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %15 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %15) #9
  br label %eh.resume

lpad3:                                            ; preds = %invoke.cont4, %invoke.cont
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %exn.slot, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %ehselector.slot, align 4
  %19 = bitcast i8** %__start to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %19) #9
  call void bitcast (void (%"class.std::allocator.0"*)* @_ZNSaIcED2Ev to void (%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*)*)(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad3, %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val9 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val9
}

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) #25

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i64 %__pos, i64 %__off) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__pos.addr = alloca i64, align 8
  %__off.addr = alloca i64, align 8
  %__testoff = alloca i8, align 1
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i64 %__pos, i64* %__pos.addr, align 8, !tbaa !13
  store i64 %__off, i64* %__off.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %__testoff) #9
  %0 = load i64, i64* %__off.addr, align 8, !tbaa !13
  %call = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  %1 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  %sub = sub i64 %call, %1
  %cmp = icmp ult i64 %0, %sub
  %frombool = zext i1 %cmp to i8
  store i8 %frombool, i8* %__testoff, align 1, !tbaa !18
  %2 = load i8, i8* %__testoff, align 1, !tbaa !18, !range !27
  %tobool = trunc i8 %2 to i1
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i64, i64* %__off.addr, align 8, !tbaa !13
  br label %cond.end

cond.false:                                       ; preds = %entry
  %call2 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  %4 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  %sub3 = sub i64 %call2, %4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %3, %cond.true ], [ %sub3, %cond.false ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %__testoff) #9
  ret i64 %cond
}

; Function Attrs: nounwind
declare dso_local i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i8 signext, i64) #4

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %1, i32 0, i32 1
  %2 = load double*, double** %_M_finish, align 8, !tbaa !243
  %3 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %4, i32 0, i32 0
  %5 = load double*, double** %_M_start, align 8, !tbaa !32
  %sub.ptr.lhs.cast = ptrtoint double* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint double* %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEE17_M_default_appendEm(%"class.std::vector.3"* nonnull dereferenceable(24) %this, i64 %__n) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %__n.addr = alloca i64, align 8
  %__size = alloca i64, align 8
  %__navail = alloca i64, align 8
  %__len = alloca i64, align 8
  %__new_start = alloca double*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end48

if.then:                                          ; preds = %entry
  %1 = bitcast i64* %__size to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %call = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  store i64 %call, i64* %__size, align 8, !tbaa !13
  %2 = bitcast i64* %__navail to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %3 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %4, i32 0, i32 2
  %5 = load double*, double** %_M_end_of_storage, align 8, !tbaa !244
  %6 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %7 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %7, i32 0, i32 1
  %8 = load double*, double** %_M_finish, align 8, !tbaa !243
  %sub.ptr.lhs.cast = ptrtoint double* %5 to i64
  %sub.ptr.rhs.cast = ptrtoint double* %8 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, i64* %__navail, align 8, !tbaa !13
  %9 = load i64, i64* %__size, align 8, !tbaa !13
  %call3 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  %cmp4 = icmp ugt i64 %9, %call3
  br i1 %cmp4, label %if.then7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then
  %10 = load i64, i64* %__navail, align 8, !tbaa !13
  %call5 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  %11 = load i64, i64* %__size, align 8, !tbaa !13
  %sub = sub i64 %call5, %11
  %cmp6 = icmp ugt i64 %10, %sub
  br i1 %cmp6, label %if.then7, label %if.end

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %12 = load i64, i64* %__navail, align 8, !tbaa !13
  %13 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %cmp8 = icmp uge i64 %12, %13
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end
  %14 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl10 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %14, i32 0, i32 0
  %15 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl10 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_finish11 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %15, i32 0, i32 1
  %16 = load double*, double** %_M_finish11, align 8, !tbaa !243
  %17 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %18 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call12 = call nonnull align 1 dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %18) #9
  %call13 = call double* @_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E(double* %16, i64 %17, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %call12)
  %19 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl14 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl14 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_finish15 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %20, i32 0, i32 1
  store double* %call13, double** %_M_finish15, align 8, !tbaa !243
  br label %if.end47

if.else:                                          ; preds = %if.end
  %21 = bitcast i64* %__len to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #9
  %22 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call16 = call i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.3"* nonnull dereferenceable(24) %this1, i64 %22, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.122, i64 0, i64 0))
  store i64 %call16, i64* %__len, align 8, !tbaa !13
  %23 = bitcast double** %__new_start to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #9
  %24 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %25 = load i64, i64* %__len, align 8, !tbaa !13
  %call17 = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %24, i64 %25)
  store double* %call17, double** %__new_start, align 8, !tbaa !2
  %26 = load double*, double** %__new_start, align 8, !tbaa !2
  %27 = load i64, i64* %__size, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds double, double* %26, i64 %27
  %28 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %29 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call18 = call nonnull align 1 dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %29) #9
  %call19 = invoke double* @_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E(double* %add.ptr, i64 %28, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %call18)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.else
  br label %try.cont

lpad:                                             ; preds = %if.else
  %30 = landingpad { i8*, i32 }
          catch i8* null
  %31 = extractvalue { i8*, i32 } %30, 0
  store i8* %31, i8** %exn.slot, align 8
  %32 = extractvalue { i8*, i32 } %30, 1
  store i32 %32, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %33 = call i8* @__cxa_begin_catch(i8* %exn) #9
  %34 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %35 = load double*, double** %__new_start, align 8, !tbaa !2
  %36 = load i64, i64* %__len, align 8, !tbaa !13
  invoke void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %34, double* %35, i64 %36)
          to label %invoke.cont21 unwind label %lpad20

invoke.cont21:                                    ; preds = %catch
  invoke void @__cxa_rethrow() #31
          to label %unreachable unwind label %lpad20

lpad20:                                           ; preds = %invoke.cont21, %catch
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %exn.slot, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont22 unwind label %terminate.lpad

invoke.cont22:                                    ; preds = %lpad20
  %40 = bitcast double** %__new_start to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #9
  %41 = bitcast i64* %__len to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %41) #9
  %42 = bitcast i64* %__navail to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %42) #9
  %43 = bitcast i64* %__size to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #9
  br label %eh.resume

try.cont:                                         ; preds = %invoke.cont
  %44 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl23 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %44, i32 0, i32 0
  %45 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl23 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %45, i32 0, i32 0
  %46 = load double*, double** %_M_start, align 8, !tbaa !32
  %47 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl24 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %47, i32 0, i32 0
  %48 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl24 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_finish25 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %48, i32 0, i32 1
  %49 = load double*, double** %_M_finish25, align 8, !tbaa !243
  %50 = load double*, double** %__new_start, align 8, !tbaa !2
  %51 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call26 = call nonnull align 1 dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %51) #9
  %call27 = call double* @_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_(double* %46, double* %49, double* %50, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %call26) #9
  %52 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %53 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl28 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %53, i32 0, i32 0
  %54 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl28 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start29 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %54, i32 0, i32 0
  %55 = load double*, double** %_M_start29, align 8, !tbaa !32
  %56 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl30 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %56, i32 0, i32 0
  %57 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl30 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_end_of_storage31 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %57, i32 0, i32 2
  %58 = load double*, double** %_M_end_of_storage31, align 8, !tbaa !244
  %59 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl32 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %59, i32 0, i32 0
  %60 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl32 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start33 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %60, i32 0, i32 0
  %61 = load double*, double** %_M_start33, align 8, !tbaa !32
  %sub.ptr.lhs.cast34 = ptrtoint double* %58 to i64
  %sub.ptr.rhs.cast35 = ptrtoint double* %61 to i64
  %sub.ptr.sub36 = sub i64 %sub.ptr.lhs.cast34, %sub.ptr.rhs.cast35
  %sub.ptr.div37 = sdiv exact i64 %sub.ptr.sub36, 8
  call void @_ZNSt12_Vector_baseIdSaIdEE13_M_deallocateEPdm(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %52, double* %55, i64 %sub.ptr.div37)
  %62 = load double*, double** %__new_start, align 8, !tbaa !2
  %63 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl38 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %63, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl38 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start39 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %64, i32 0, i32 0
  store double* %62, double** %_M_start39, align 8, !tbaa !32
  %65 = load double*, double** %__new_start, align 8, !tbaa !2
  %66 = load i64, i64* %__size, align 8, !tbaa !13
  %add.ptr40 = getelementptr inbounds double, double* %65, i64 %66
  %67 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %add.ptr41 = getelementptr inbounds double, double* %add.ptr40, i64 %67
  %68 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl42 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %68, i32 0, i32 0
  %69 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl42 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_finish43 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %69, i32 0, i32 1
  store double* %add.ptr41, double** %_M_finish43, align 8, !tbaa !243
  %70 = load double*, double** %__new_start, align 8, !tbaa !2
  %71 = load i64, i64* %__len, align 8, !tbaa !13
  %add.ptr44 = getelementptr inbounds double, double* %70, i64 %71
  %72 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl45 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %72, i32 0, i32 0
  %73 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl45 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_end_of_storage46 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %73, i32 0, i32 2
  store double* %add.ptr44, double** %_M_end_of_storage46, align 8, !tbaa !244
  %74 = bitcast double** %__new_start to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %74) #9
  %75 = bitcast i64* %__len to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %75) #9
  br label %if.end47

if.end47:                                         ; preds = %try.cont, %if.then9
  %76 = bitcast i64* %__navail to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #9
  %77 = bitcast i64* %__size to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %77) #9
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %entry
  ret void

eh.resume:                                        ; preds = %invoke.cont22
  %exn49 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn49, 0
  %lpad.val50 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val50

terminate.lpad:                                   ; preds = %lpad20
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  call void @__clang_call_terminate(i8* %79) #29
  unreachable

unreachable:                                      ; preds = %invoke.cont21
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEE15_M_erase_at_endEPd(%"class.std::vector.3"* nonnull dereferenceable(24) %this, double* %__pos) #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %__pos.addr = alloca double*, align 8
  %__n = alloca i64, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  store double* %__pos, double** %__pos.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast i64* %__n to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %1, i32 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %2, i32 0, i32 1
  %3 = load double*, double** %_M_finish, align 8, !tbaa !243
  %4 = load double*, double** %__pos.addr, align 8, !tbaa !2
  %sub.ptr.lhs.cast = ptrtoint double* %3 to i64
  %sub.ptr.rhs.cast = ptrtoint double* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, i64* %__n, align 8, !tbaa !13
  %5 = load i64, i64* %__n, align 8, !tbaa !13
  %tobool = icmp ne i64 %5, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load double*, double** %__pos.addr, align 8, !tbaa !2
  %7 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %7, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_finish3 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %8, i32 0, i32 1
  %9 = load double*, double** %_M_finish3, align 8, !tbaa !243
  %10 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %10) #9
  invoke void @_ZSt8_DestroyIPddEvT_S1_RSaIT0_E(double* %6, double* %9, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  %11 = load double*, double** %__pos.addr, align 8, !tbaa !2
  %12 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %12, i32 0, i32 0
  %13 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl4 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_finish5 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %13, i32 0, i32 1
  store double* %11, double** %_M_finish5, align 8, !tbaa !243
  br label %if.end

lpad:                                             ; preds = %if.then
  %14 = landingpad { i8*, i32 }
          catch i8* null
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %exn.slot, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %ehselector.slot, align 4
  %17 = bitcast i64* %__n to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  br label %terminate.handler

if.end:                                           ; preds = %invoke.cont, %entry
  %18 = bitcast i64* %__n to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #9
  ret void

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %0) #9
  %call2 = call i64 @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_(%"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %call) #9
  ret i64 %call2
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local double* @_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E(double* %__first, i64 %__n, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %0) #5 comdat {
entry:
  %__first.addr = alloca double*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca %"class.std::allocator.5"*, align 8
  store double* %__first, double** %__first.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %.addr, align 8, !tbaa !2
  %1 = load double*, double** %__first.addr, align 8, !tbaa !2
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call double* @_ZSt25__uninitialized_default_nIPdmET_S1_T0_(double* %1, i64 %2)
  ret double* %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNKSt6vectorIdSaIdEE12_M_check_lenEmPKc(%"class.std::vector.3"* nonnull dereferenceable(24) %this, i64 %__n, i8* %__s) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %call = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  %call2 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  %sub = sub i64 %call, %call2
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %cmp = icmp ult i64 %sub, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  call void @_ZSt20__throw_length_errorPKc(i8* %1) #31
  unreachable

if.end:                                           ; preds = %entry
  %2 = bitcast i64* %__len to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call3 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  %3 = bitcast i64* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #9
  %call4 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  store i64 %call4, i64* %ref.tmp, align 8, !tbaa !13
  %call5 = call nonnull align 8 dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %ref.tmp, i64* nonnull align 8 dereferenceable(8) %__n.addr)
  %4 = load i64, i64* %call5, align 8, !tbaa !13
  %add = add i64 %call3, %4
  %5 = bitcast i64* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  store i64 %add, i64* %__len, align 8, !tbaa !13
  %6 = load i64, i64* %__len, align 8, !tbaa !13
  %call6 = call i64 @_ZNKSt6vectorIdSaIdEE4sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  %cmp7 = icmp ult i64 %6, %call6
  br i1 %cmp7, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i64, i64* %__len, align 8, !tbaa !13
  %call8 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  %cmp9 = icmp ugt i64 %7, %call8
  br i1 %cmp9, label %cond.true, label %cond.false

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %call10 = call i64 @_ZNKSt6vectorIdSaIdEE8max_sizeEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this1) #9
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %8 = load i64, i64* %__len, align 8, !tbaa !13
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %8, %cond.false ]
  %9 = bitcast i64* %__len to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  ret i64 %cond
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %this, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"class.std::allocator.5"*
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call double* @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m(%"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %1, i64 %2)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double* [ %call, %cond.true ], [ null, %cond.false ]
  ret double* %cond
}

declare dso_local void @__cxa_rethrow()

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double* @_ZNSt6vectorIdSaIdEE11_S_relocateEPdS2_S2_RS0_(double* %__first, double* %__last, double* %__result, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %__alloc) #8 comdat align 2 {
entry:
  %__first.addr = alloca double*, align 8
  %__last.addr = alloca double*, align 8
  %__result.addr = alloca double*, align 8
  %__alloc.addr = alloca %"class.std::allocator.5"*, align 8
  %agg.tmp = alloca %"struct.std::integral_constant", align 1
  store double* %__first, double** %__first.addr, align 8, !tbaa !2
  store double* %__last, double** %__last.addr, align 8, !tbaa !2
  store double* %__result, double** %__result.addr, align 8, !tbaa !2
  store %"class.std::allocator.5"* %__alloc, %"class.std::allocator.5"** %__alloc.addr, align 8, !tbaa !2
  %0 = load double*, double** %__first.addr, align 8, !tbaa !2
  %1 = load double*, double** %__last.addr, align 8, !tbaa !2
  %2 = load double*, double** %__result.addr, align 8, !tbaa !2
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__alloc.addr, align 8, !tbaa !2
  %call = call double* @_ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE(double* %0, double* %1, double* %2, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %3) #9
  ret double* %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_(%"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %__a) #8 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.5"*, align 8
  %__diffmax = alloca i64, align 8
  %__allocmax = alloca i64, align 8
  store %"class.std::allocator.5"* %__a, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %0 = bitcast i64* %__diffmax to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  store i64 1152921504606846975, i64* %__diffmax, align 8, !tbaa !13
  %1 = bitcast i64* %__allocmax to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %call = call i64 @_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_(%"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %2) #9
  store i64 %call, i64* %__allocmax, align 8, !tbaa !13
  %call1 = call nonnull align 8 dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %__diffmax, i64* nonnull align 8 dereferenceable(8) %__allocmax)
  %3 = load i64, i64* %call1, align 8, !tbaa !13
  %4 = bitcast i64* %__allocmax to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #9
  %5 = bitcast i64* %__diffmax to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  ret i64 %3
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIdEE8max_sizeERKS0_(%"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %__a) #8 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %__a, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %0 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.5"* %0 to %"class.__gnu_cxx::new_allocator.6"*
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* nonnull dereferenceable(1) %1) #9
  ret i64 %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %this, %"class.__gnu_cxx::new_allocator.6"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %this.addr, align 8
  ret i64 1152921504606846975
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local double* @_ZSt25__uninitialized_default_nIPdmET_S1_T0_(double* %__first, i64 %__n) #5 comdat {
entry:
  %__first.addr = alloca double*, align 8
  %__n.addr = alloca i64, align 8
  %__assignable = alloca i8, align 1
  store double* %__first, double** %__first.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %__assignable) #9
  store i8 1, i8* %__assignable, align 1, !tbaa !18
  %0 = load double*, double** %__first.addr, align 8, !tbaa !2
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call double* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_(double* %0, i64 %1)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %__assignable) #9
  ret double* %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPdmEET_S3_T0_(double* %__first, i64 %__n) #0 comdat align 2 {
entry:
  %__first.addr = alloca double*, align 8
  %__n.addr = alloca i64, align 8
  %ref.tmp = alloca double, align 8
  store double* %__first, double** %__first.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load double*, double** %__first.addr, align 8, !tbaa !2
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %2 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  store double 0.000000e+00, double* %ref.tmp, align 8, !tbaa !44
  %call = call double* @_ZSt6fill_nIPdmdET_S1_T0_RKT1_(double* %0, i64 %1, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %3 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #9
  ret double* %call
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local double* @_ZSt6fill_nIPdmdET_S1_T0_RKT1_(double* %__first, i64 %__n, double* nonnull align 8 dereferenceable(8) %__value) #5 comdat {
entry:
  %__first.addr = alloca double*, align 8
  %__n.addr = alloca i64, align 8
  %__value.addr = alloca double*, align 8
  store double* %__first, double** %__first.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store double* %__value, double** %__value.addr, align 8, !tbaa !2
  %0 = load double*, double** %__first.addr, align 8, !tbaa !2
  %call = call double* @_ZSt12__niter_baseIPdET_S1_(double* %0) #9
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %2 = load double*, double** %__value.addr, align 8, !tbaa !2
  %call1 = call double* @_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double* %call, i64 %1, double* nonnull align 8 dereferenceable(8) %2)
  %call2 = call double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** nonnull align 8 dereferenceable(8) %__first.addr, double* %call1)
  ret double* %call2
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local double* @_ZSt12__niter_wrapIPdET_RKS1_S1_(double** nonnull align 8 dereferenceable(8) %0, double* %__res) #12 comdat {
entry:
  %.addr = alloca double**, align 8
  %__res.addr = alloca double*, align 8
  store double** %0, double*** %.addr, align 8, !tbaa !2
  store double* %__res, double** %__res.addr, align 8, !tbaa !2
  %1 = load double*, double** %__res.addr, align 8, !tbaa !2
  ret double* %1
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local double* @_ZSt10__fill_n_aIPdmdEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(double* %__first, i64 %__n, double* nonnull align 8 dereferenceable(8) %__value) #12 comdat {
entry:
  %__first.addr = alloca double*, align 8
  %__n.addr = alloca i64, align 8
  %__value.addr = alloca double*, align 8
  %__tmp = alloca double, align 8
  %__niter = alloca i64, align 8
  store double* %__first, double** %__first.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store double* %__value, double** %__value.addr, align 8, !tbaa !2
  %0 = bitcast double* %__tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = load double*, double** %__value.addr, align 8, !tbaa !2
  %2 = load double, double* %1, align 8, !tbaa !44
  store double %2, double* %__tmp, align 8, !tbaa !44
  %3 = bitcast i64* %__niter to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #9
  %4 = load i64, i64* %__n.addr, align 8, !tbaa !13
  store i64 %4, i64* %__niter, align 8, !tbaa !13
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i64, i64* %__niter, align 8, !tbaa !13
  %cmp = icmp ugt i64 %5, 0
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %6 = bitcast i64* %__niter to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load double, double* %__tmp, align 8, !tbaa !44
  %8 = load double*, double** %__first.addr, align 8, !tbaa !2
  store double %7, double* %8, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load i64, i64* %__niter, align 8, !tbaa !13
  %dec = add i64 %9, -1
  store i64 %dec, i64* %__niter, align 8, !tbaa !13
  %10 = load double*, double** %__first.addr, align 8, !tbaa !2
  %incdec.ptr = getelementptr inbounds double, double* %10, i32 1
  store double* %incdec.ptr, double** %__first.addr, align 8, !tbaa !2
  br label %for.cond, !llvm.loop !251

for.end:                                          ; preds = %for.cond.cleanup
  %11 = load double*, double** %__first.addr, align 8, !tbaa !2
  %12 = bitcast double* %__tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #9
  ret double* %11
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local double* @_ZSt12__niter_baseIPdET_S1_(double* %__it) #12 comdat {
entry:
  %__it.addr = alloca double*, align 8
  store double* %__it, double** %__it.addr, align 8, !tbaa !2
  %0 = load double*, double** %__it.addr, align 8, !tbaa !2
  ret double* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double* @_ZNSt16allocator_traitsISaIdEE8allocateERS0_m(%"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %__a, i64 %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.5"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.5"* %__a, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.5"* %0 to %"class.__gnu_cxx::new_allocator.6"*
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* nonnull dereferenceable(1) %1, i64 %2, i8* null)
  ret double* %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double* @_ZN9__gnu_cxx13new_allocatorIdE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* nonnull dereferenceable(1) %this, i64 %__n, i8* %0) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %this, %"class.__gnu_cxx::new_allocator.6"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store i8* %0, i8** %.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIdE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* nonnull dereferenceable(1) %this1) #9
  %cmp = icmp ugt i64 %1, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #31
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %mul = mul i64 %2, 8
  %call2 = call noalias nonnull i8* @_Znwm(i64 %mul) #34
  %3 = bitcast i8* %call2 to double*
  ret double* %3
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double* @_ZNSt6vectorIdSaIdEE14_S_do_relocateEPdS2_S2_RS0_St17integral_constantIbLb1EE(double* %__first, double* %__last, double* %__result, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %__alloc) #8 comdat align 2 {
entry:
  %0 = alloca %"struct.std::integral_constant", align 1
  %__first.addr = alloca double*, align 8
  %__last.addr = alloca double*, align 8
  %__result.addr = alloca double*, align 8
  %__alloc.addr = alloca %"class.std::allocator.5"*, align 8
  store double* %__first, double** %__first.addr, align 8, !tbaa !2
  store double* %__last, double** %__last.addr, align 8, !tbaa !2
  store double* %__result, double** %__result.addr, align 8, !tbaa !2
  store %"class.std::allocator.5"* %__alloc, %"class.std::allocator.5"** %__alloc.addr, align 8, !tbaa !2
  %1 = load double*, double** %__first.addr, align 8, !tbaa !2
  %2 = load double*, double** %__last.addr, align 8, !tbaa !2
  %3 = load double*, double** %__result.addr, align 8, !tbaa !2
  %4 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__alloc.addr, align 8, !tbaa !2
  %call = call double* @_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %1, double* %2, double* %3, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %4) #9
  ret double* %call
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local double* @_ZSt12__relocate_aIPdS0_SaIdEET0_T_S3_S2_RT1_(double* %__first, double* %__last, double* %__result, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %__alloc) #12 comdat {
entry:
  %__first.addr = alloca double*, align 8
  %__last.addr = alloca double*, align 8
  %__result.addr = alloca double*, align 8
  %__alloc.addr = alloca %"class.std::allocator.5"*, align 8
  store double* %__first, double** %__first.addr, align 8, !tbaa !2
  store double* %__last, double** %__last.addr, align 8, !tbaa !2
  store double* %__result, double** %__result.addr, align 8, !tbaa !2
  store %"class.std::allocator.5"* %__alloc, %"class.std::allocator.5"** %__alloc.addr, align 8, !tbaa !2
  %0 = load double*, double** %__first.addr, align 8, !tbaa !2
  %call = call double* @_ZSt12__niter_baseIPdET_S1_(double* %0) #9
  %1 = load double*, double** %__last.addr, align 8, !tbaa !2
  %call1 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %1) #9
  %2 = load double*, double** %__result.addr, align 8, !tbaa !2
  %call2 = call double* @_ZSt12__niter_baseIPdET_S1_(double* %2) #9
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__alloc.addr, align 8, !tbaa !2
  %call3 = call double* @_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E(double* %call, double* %call1, double* %call2, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %3) #9
  ret double* %call3
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local double* @_ZSt14__relocate_a_1IddENSt9enable_ifIXsr3std24__is_bitwise_relocatableIT_EE5valueEPS1_E4typeES2_S2_S2_RSaIT0_E(double* %__first, double* %__last, double* %__result, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %0) #12 comdat {
entry:
  %__first.addr = alloca double*, align 8
  %__last.addr = alloca double*, align 8
  %__result.addr = alloca double*, align 8
  %.addr = alloca %"class.std::allocator.5"*, align 8
  %__count = alloca i64, align 8
  store double* %__first, double** %__first.addr, align 8, !tbaa !2
  store double* %__last, double** %__last.addr, align 8, !tbaa !2
  store double* %__result, double** %__result.addr, align 8, !tbaa !2
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %.addr, align 8, !tbaa !2
  %1 = bitcast i64* %__count to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load double*, double** %__last.addr, align 8, !tbaa !2
  %3 = load double*, double** %__first.addr, align 8, !tbaa !2
  %sub.ptr.lhs.cast = ptrtoint double* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint double* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, i64* %__count, align 8, !tbaa !13
  %4 = load i64, i64* %__count, align 8, !tbaa !13
  %cmp = icmp sgt i64 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %5 = load double*, double** %__result.addr, align 8, !tbaa !2
  %6 = bitcast double* %5 to i8*
  %7 = load double*, double** %__first.addr, align 8, !tbaa !2
  %8 = bitcast double* %7 to i8*
  %9 = load i64, i64* %__count, align 8, !tbaa !13
  %mul = mul i64 %9, 8
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %8, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %10 = load double*, double** %__result.addr, align 8, !tbaa !2
  %11 = load i64, i64* %__count, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds double, double* %10, i64 %11
  %12 = bitcast i64* %__count to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #9
  ret double* %add.ptr
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind
declare dso_local i32 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i8*) #4

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"* %__last, %"class.std::allocator"* nonnull align 1 dereferenceable(1) %0) #5 comdat {
entry:
  %__first.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__last.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %.addr = alloca %"class.std::allocator"*, align 8
  store %"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__last, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  store %"class.std::allocator"* %0, %"class.std::allocator"** %.addr, align 8, !tbaa !2
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"* %2)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %0, i32 0, i32 0
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_start, align 8, !tbaa !55
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %2, i32 0, i32 2
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_end_of_storage, align 8, !tbaa !242
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* %_M_impl3 to %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"*
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl_data"* %4, i32 0, i32 0
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %_M_start4, align 8, !tbaa !55
  %sub.ptr.lhs.cast = ptrtoint %"class.std::__cxx11::basic_string"* %3 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.std::__cxx11::basic_string"* %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 32
  invoke void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* nonnull dereferenceable(24) %this1, %"class.std::__cxx11::basic_string"* %1, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.__gnu_cxx::new_allocator"*)* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev to void (%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl5) #9
  ret void

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.__gnu_cxx::new_allocator"*)* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev to void (%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char>>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl6) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"* %__last) #5 comdat {
entry:
  %__first.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__last.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__last, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"* %1)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"* %__last) #0 comdat align 2 {
entry:
  %__first.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__last.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %__first, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__last, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__last.addr, align 8, !tbaa !2
  %cmp = icmp ne %"class.std::__cxx11::basic_string"* %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  %call = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2) #9
  call void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"* %call)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  %incdec.ptr = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %3, i32 1
  store %"class.std::__cxx11::basic_string"* %incdec.ptr, %"class.std::__cxx11::basic_string"** %__first.addr, align 8, !tbaa !2
  br label %for.cond, !llvm.loop !252

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"* %__pointer) #12 comdat {
entry:
  %__pointer.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %__pointer, %"class.std::__cxx11::basic_string"** %__pointer.addr, align 8, !tbaa !2
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__pointer.addr, align 8, !tbaa !2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %0) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.__gnu_cxx::new_allocator"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %this, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator"* nonnull dereferenceable(8) %this, %"class.std::__cxx11::basic_string"** nonnull align 8 dereferenceable(8) %__i) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %__i.addr = alloca %"class.std::__cxx11::basic_string"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"** %__i, %"class.std::__cxx11::basic_string"*** %__i.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  %0 = load %"class.std::__cxx11::basic_string"**, %"class.std::__cxx11::basic_string"*** %__i.addr, align 8, !tbaa !2
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %0, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %_M_current, align 8, !tbaa !49
  ret void
}

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i64) #2

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__s, i64 %__n) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__s.addr = alloca i8*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 0, i64 %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i64 0, i64 0))
  %1 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %1, i64 %2)
  ret %"class.std::__cxx11::basic_string"* %call
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__str) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__str.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__str, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %0)
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__str.addr, align 8, !tbaa !2
  %call2 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %1) #9
  %call3 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %call, i64 %call2)
  ret %"class.std::__cxx11::basic_string"* %call3
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt6vectorIdSaIdEE17_S_check_init_lenEmRKS0_(i64 %__n, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %__a) #0 comdat align 2 {
entry:
  %__n.addr = alloca i64, align 8
  %__a.addr = alloca %"class.std::allocator.5"*, align 8
  %ref.tmp = alloca %"class.std::allocator.5", align 1
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store %"class.std::allocator.5"* %__a, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %1 = bitcast %"class.std::allocator.5"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  %2 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSaIdEC2ERKS_(%"class.std::allocator.5"* nonnull dereferenceable(1) %ref.tmp, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %2) #9
  %call = call i64 @_ZNSt6vectorIdSaIdEE11_S_max_sizeERKS0_(%"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %ref.tmp) #9
  %cmp = icmp ugt i64 %0, %call
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.6"*)* @_ZN9__gnu_cxx13new_allocatorIdED2Ev to void (%"class.std::allocator.5"*)*)(%"class.std::allocator.5"* nonnull dereferenceable(1) %ref.tmp) #9
  %3 = bitcast %"class.std::allocator.5"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %3) #9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.123, i64 0, i64 0)) #31
  unreachable

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %__n.addr, align 8, !tbaa !13
  ret i64 %4
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIdSaIdEEC2EmRKS0_(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %this, i64 %__n, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  %__n.addr = alloca i64, align 8
  %__a.addr = alloca %"class.std::allocator.5"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store %"class.std::allocator.5"* %__a, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %0 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %0) #9
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  invoke void @_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %this1, i64 %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.6"*)* @_ZN9__gnu_cxx13new_allocatorIdED2Ev to void (%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorIdSaIdEE21_M_default_initializeEm(%"class.std::vector.3"* nonnull dereferenceable(24) %this, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load double*, double** %_M_start, align 8, !tbaa !32
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %4 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIdSaIdEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %4) #9
  %call2 = call double* @_ZSt27__uninitialized_default_n_aIPdmdET_S1_T0_RSaIT1_E(double* %2, i64 %3, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %call)
  %5 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl3 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %6, i32 0, i32 1
  store double* %call2, double** %_M_finish, align 8, !tbaa !243
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSaIdEC2ERKS_(%"class.std::allocator.5"* nonnull dereferenceable(1) %this, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.5"*, align 8
  %__a.addr = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %this, %"class.std::allocator.5"** %this.addr, align 8, !tbaa !2
  store %"class.std::allocator.5"* %__a, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.5"* %this1 to %"class.__gnu_cxx::new_allocator.6"*
  %1 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %2 = bitcast %"class.std::allocator.5"* %1 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_(%"class.__gnu_cxx::new_allocator.6"* nonnull dereferenceable(1) %0, %"class.__gnu_cxx::new_allocator.6"* nonnull align 1 dereferenceable(1) %2) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIdEC2ERKS1_(%"class.__gnu_cxx::new_allocator.6"* nonnull dereferenceable(1) %this, %"class.__gnu_cxx::new_allocator.6"* nonnull align 1 dereferenceable(1) %0) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %.addr = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %this, %"class.__gnu_cxx::new_allocator.6"** %this.addr, align 8, !tbaa !2
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIdSaIdEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* nonnull dereferenceable(24) %this, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"*, align 8
  %__a.addr = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %this, %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"** %this.addr, align 8, !tbaa !2
  store %"class.std::allocator.5"* %__a, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"*, %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %this1 to %"class.std::allocator.5"*
  %1 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSaIdEC2ERKS_(%"class.std::allocator.5"* nonnull dereferenceable(1) %0, %"class.std::allocator.5"* nonnull align 1 dereferenceable(1) %1) #9
  %2 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %this1 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  call void @_ZNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* nonnull dereferenceable(24) %2) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIdSaIdEE17_M_create_storageEm(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %this, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call double* @_ZNSt12_Vector_baseIdSaIdEE11_M_allocateEm(%"struct.std::_Vector_base.4"* nonnull dereferenceable(24) %this1, i64 %0)
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %1, i32 0, i32 0
  store double* %call, double** %_M_start, align 8, !tbaa !32
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start3 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %2, i32 0, i32 0
  %3 = load double*, double** %_M_start3, align 8, !tbaa !32
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl4 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %4, i32 0, i32 1
  store double* %3, double** %_M_finish, align 8, !tbaa !243
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl5 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start6 = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %5, i32 0, i32 0
  %6 = load double*, double** %_M_start6, align 8, !tbaa !32
  %7 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds double, double* %6, i64 %7
  %_M_impl7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl7 to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %8, i32 0, i32 2
  store double* %add.ptr, double** %_M_end_of_storage, align 8, !tbaa !244
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double* @_ZNSt6vectorIdSaIdEE4dataEv(%"class.std::vector.3"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data", %"struct.std::_Vector_base<double, std::allocator<double>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load double*, double** %_M_start, align 8, !tbaa !32
  %call = call double* @_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_(%"class.std::vector.3"* nonnull dereferenceable(24) %this1, double* %2) #9
  ret double* %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double* @_ZNKSt6vectorIdSaIdEE11_M_data_ptrIdEEPT_S4_(%"class.std::vector.3"* nonnull dereferenceable(24) %this, double* %__ptr) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %__ptr.addr = alloca double*, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8, !tbaa !2
  store double* %__ptr, double** %__ptr.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = load double*, double** %__ptr.addr, align 8, !tbaa !2
  ret double* %0
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt9basic_iosIcSt11char_traitsIcEEC2Ev(%"class.std::basic_ios"* nonnull dereferenceable(264) %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_ios"*, align 8
  store %"class.std::basic_ios"* %this, %"class.std::basic_ios"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_ios"*, %"class.std::basic_ios"** %this.addr, align 8
  %0 = bitcast %"class.std::basic_ios"* %this1 to %"class.std::ios_base"*
  call void @_ZNSt8ios_baseC2Ev(%"class.std::ios_base"* nonnull dereferenceable(216) %0) #9
  %1 = bitcast %"class.std::basic_ios"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVSt9basic_iosIcSt11char_traitsIcEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !53
  %_M_tie = getelementptr inbounds %"class.std::basic_ios", %"class.std::basic_ios"* %this1, i32 0, i32 1
  store %"class.std::basic_ostream"* null, %"class.std::basic_ostream"** %_M_tie, align 8, !tbaa !253
  %_M_fill = getelementptr inbounds %"class.std::basic_ios", %"class.std::basic_ios"* %this1, i32 0, i32 2
  store i8 0, i8* %_M_fill, align 8, !tbaa !255
  %_M_fill_init = getelementptr inbounds %"class.std::basic_ios", %"class.std::basic_ios"* %this1, i32 0, i32 3
  store i8 0, i8* %_M_fill_init, align 1, !tbaa !256
  %_M_streambuf = getelementptr inbounds %"class.std::basic_ios", %"class.std::basic_ios"* %this1, i32 0, i32 4
  store %"class.std::basic_streambuf"* null, %"class.std::basic_streambuf"** %_M_streambuf, align 8, !tbaa !257
  %_M_ctype = getelementptr inbounds %"class.std::basic_ios", %"class.std::basic_ios"* %this1, i32 0, i32 5
  store %"class.std::ctype"* null, %"class.std::ctype"** %_M_ctype, align 8, !tbaa !258
  %_M_num_put = getelementptr inbounds %"class.std::basic_ios", %"class.std::basic_ios"* %this1, i32 0, i32 6
  store %"class.std::num_put"* null, %"class.std::num_put"** %_M_num_put, align 8, !tbaa !259
  %_M_num_get = getelementptr inbounds %"class.std::basic_ios", %"class.std::basic_ios"* %this1, i32 0, i32 7
  store %"class.std::num_get"* null, %"class.std::num_get"** %_M_num_get, align 8, !tbaa !260
  ret void
}

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSdC2Ev(%"class.std::basic_iostream"* nonnull dereferenceable(24) %this, i8** %vtt) unnamed_addr #7 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::basic_iostream"*, align 8
  %vtt.addr = alloca i8**, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::basic_iostream"* %this, %"class.std::basic_iostream"** %this.addr, align 8, !tbaa !2
  store i8** %vtt, i8*** %vtt.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_iostream"*, %"class.std::basic_iostream"** %this.addr, align 8
  %vtt2 = load i8**, i8*** %vtt.addr, align 8
  %0 = bitcast %"class.std::basic_iostream"* %this1 to %"class.std::basic_istream"*
  %1 = getelementptr inbounds i8*, i8** %vtt2, i64 1
  call void @_ZNSiC2Ev(%"class.std::basic_istream"* nonnull dereferenceable(16) %0, i8** %1)
  %2 = bitcast %"class.std::basic_iostream"* %this1 to i8*
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = bitcast i8* %3 to %"class.std::basic_ostream"*
  %5 = getelementptr inbounds i8*, i8** %vtt2, i64 3
  invoke void @_ZNSoC2Ev(%"class.std::basic_ostream"* nonnull dereferenceable(8) %4, i8** %5)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %6 = load i8*, i8** %vtt2, align 8
  %7 = bitcast %"class.std::basic_iostream"* %this1 to i32 (...)***
  %8 = bitcast i8* %6 to i32 (...)**
  store i32 (...)** %8, i32 (...)*** %7, align 8, !tbaa !53
  %9 = getelementptr inbounds i8*, i8** %vtt2, i64 5
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::basic_iostream"* %this1 to i8**
  %vtable = load i8*, i8** %11, align 8, !tbaa !53
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -24
  %12 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64, i64* %12, align 8
  %13 = bitcast %"class.std::basic_iostream"* %this1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %13, i64 %vbase.offset
  %14 = bitcast i8* %add.ptr to i32 (...)***
  %15 = bitcast i8* %10 to i32 (...)**
  store i32 (...)** %15, i32 (...)*** %14, align 8, !tbaa !53
  %16 = getelementptr inbounds i8*, i8** %vtt2, i64 6
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::basic_iostream"* %this1 to i8*
  %add.ptr3 = getelementptr inbounds i8, i8* %18, i64 16
  %19 = bitcast i8* %add.ptr3 to i32 (...)***
  %20 = bitcast i8* %17 to i32 (...)**
  store i32 (...)** %20, i32 (...)*** %19, align 8, !tbaa !53
  ret void

lpad:                                             ; preds = %entry
  %21 = landingpad { i8*, i32 }
          cleanup
  %22 = extractvalue { i8*, i32 } %21, 0
  store i8* %22, i8** %exn.slot, align 8
  %23 = extractvalue { i8*, i32 } %21, 1
  store i32 %23, i32* %ehselector.slot, align 4
  %24 = bitcast %"class.std::basic_iostream"* %this1 to %"class.std::basic_istream"*
  %25 = getelementptr inbounds i8*, i8** %vtt2, i64 1
  call void @_ZNSiD2Ev(%"class.std::basic_istream"* nonnull dereferenceable(16) %24, i8** %25) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val4 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val4
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZStorSt13_Ios_OpenmodeS_(i32 %__a, i32 %__b) #12 comdat {
entry:
  %__a.addr = alloca i32, align 4
  %__b.addr = alloca i32, align 4
  store i32 %__a, i32* %__a.addr, align 4, !tbaa !261
  store i32 %__b, i32* %__b.addr, align 4, !tbaa !261
  %0 = load i32, i32* %__a.addr, align 4, !tbaa !261
  %1 = load i32, i32* %__b.addr, align 4, !tbaa !261
  %or = or i32 %0, %1
  ret i32 %or
}

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEC2ESt13_Ios_Openmode(%"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104) %this, i32 %__mode) unnamed_addr #7 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_stringbuf"*, align 8
  %__mode.addr = alloca i32, align 4
  store %"class.std::__cxx11::basic_stringbuf"* %this, %"class.std::__cxx11::basic_stringbuf"** %this.addr, align 8, !tbaa !2
  store i32 %__mode, i32* %__mode.addr, align 4, !tbaa !261
  %this1 = load %"class.std::__cxx11::basic_stringbuf"*, %"class.std::__cxx11::basic_stringbuf"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::basic_stringbuf"* %this1 to %"class.std::basic_streambuf"*
  call void @_ZNSt15basic_streambufIcSt11char_traitsIcEEC2Ev(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %0)
  %1 = bitcast %"class.std::__cxx11::basic_stringbuf"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !53
  %_M_mode = getelementptr inbounds %"class.std::__cxx11::basic_stringbuf", %"class.std::__cxx11::basic_stringbuf"* %this1, i32 0, i32 1
  %2 = load i32, i32* %__mode.addr, align 4, !tbaa !261
  store i32 %2, i32* %_M_mode, align 8, !tbaa !263
  %_M_string = getelementptr inbounds %"class.std::__cxx11::basic_stringbuf", %"class.std::__cxx11::basic_stringbuf"* %this1, i32 0, i32 2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %_M_string) #9
  ret void
}

declare dso_local void @_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E(%"class.std::basic_ios"* nonnull dereferenceable(264), %"class.std::basic_streambuf"*) #2

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_stringbuf"*, align 8
  store %"class.std::__cxx11::basic_stringbuf"* %this, %"class.std::__cxx11::basic_stringbuf"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_stringbuf"*, %"class.std::__cxx11::basic_stringbuf"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::basic_stringbuf"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !53
  %_M_string = getelementptr inbounds %"class.std::__cxx11::basic_stringbuf", %"class.std::__cxx11::basic_stringbuf"* %this1, i32 0, i32 2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %_M_string) #9
  %1 = bitcast %"class.std::__cxx11::basic_stringbuf"* %this1 to %"class.std::basic_streambuf"*
  call void @_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %1) #9
  ret void
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSdD2Ev(%"class.std::basic_iostream"* nonnull dereferenceable(24) %this, i8** %vtt) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_iostream"*, align 8
  %vtt.addr = alloca i8**, align 8
  store %"class.std::basic_iostream"* %this, %"class.std::basic_iostream"** %this.addr, align 8, !tbaa !2
  store i8** %vtt, i8*** %vtt.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_iostream"*, %"class.std::basic_iostream"** %this.addr, align 8
  %vtt2 = load i8**, i8*** %vtt.addr, align 8
  %0 = bitcast %"class.std::basic_iostream"* %this1 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 16
  %2 = bitcast i8* %1 to %"class.std::basic_ostream"*
  %3 = getelementptr inbounds i8*, i8** %vtt2, i64 3
  call void @_ZNSoD2Ev(%"class.std::basic_ostream"* nonnull dereferenceable(8) %2, i8** %3) #9
  %4 = bitcast %"class.std::basic_iostream"* %this1 to %"class.std::basic_istream"*
  %5 = getelementptr inbounds i8*, i8** %vtt2, i64 1
  call void @_ZNSiD2Ev(%"class.std::basic_istream"* nonnull dereferenceable(16) %4, i8** %5) #9
  ret void
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt9basic_iosIcSt11char_traitsIcEED2Ev(%"class.std::basic_ios"* nonnull dereferenceable(264) %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_ios"*, align 8
  store %"class.std::basic_ios"* %this, %"class.std::basic_ios"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_ios"*, %"class.std::basic_ios"** %this.addr, align 8
  %0 = bitcast %"class.std::basic_ios"* %this1 to %"class.std::ios_base"*
  call void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull dereferenceable(216) %0) #9
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_baseC2Ev(%"class.std::ios_base"* nonnull dereferenceable(216)) unnamed_addr #4

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSiC2Ev(%"class.std::basic_istream"* nonnull dereferenceable(16) %this, i8** %vtt) unnamed_addr #7 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_istream"*, align 8
  %vtt.addr = alloca i8**, align 8
  store %"class.std::basic_istream"* %this, %"class.std::basic_istream"** %this.addr, align 8, !tbaa !2
  store i8** %vtt, i8*** %vtt.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %this.addr, align 8
  %vtt2 = load i8**, i8*** %vtt.addr, align 8
  %0 = load i8*, i8** %vtt2, align 8
  %1 = bitcast %"class.std::basic_istream"* %this1 to i32 (...)***
  %2 = bitcast i8* %0 to i32 (...)**
  store i32 (...)** %2, i32 (...)*** %1, align 8, !tbaa !53
  %3 = getelementptr inbounds i8*, i8** %vtt2, i64 1
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast %"class.std::basic_istream"* %this1 to i8**
  %vtable = load i8*, i8** %5, align 8, !tbaa !53
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -24
  %6 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64, i64* %6, align 8
  %7 = bitcast %"class.std::basic_istream"* %this1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %vbase.offset
  %8 = bitcast i8* %add.ptr to i32 (...)***
  %9 = bitcast i8* %4 to i32 (...)**
  store i32 (...)** %9, i32 (...)*** %8, align 8, !tbaa !53
  %_M_gcount = getelementptr inbounds %"class.std::basic_istream", %"class.std::basic_istream"* %this1, i32 0, i32 1
  store i64 0, i64* %_M_gcount, align 8, !tbaa !265
  %10 = bitcast %"class.std::basic_istream"* %this1 to i8**
  %vtable3 = load i8*, i8** %10, align 8, !tbaa !53
  %vbase.offset.ptr4 = getelementptr i8, i8* %vtable3, i64 -24
  %11 = bitcast i8* %vbase.offset.ptr4 to i64*
  %vbase.offset5 = load i64, i64* %11, align 8
  %12 = bitcast %"class.std::basic_istream"* %this1 to i8*
  %add.ptr6 = getelementptr inbounds i8, i8* %12, i64 %vbase.offset5
  %13 = bitcast i8* %add.ptr6 to %"class.std::basic_ios"*
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E(%"class.std::basic_ios"* nonnull dereferenceable(264) %13, %"class.std::basic_streambuf"* null)
  ret void
}

; Function Attrs: uwtable
define available_externally dso_local void @_ZNSoC2Ev(%"class.std::basic_ostream"* nonnull dereferenceable(8) %this, i8** %vtt) unnamed_addr #7 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_ostream"*, align 8
  %vtt.addr = alloca i8**, align 8
  store %"class.std::basic_ostream"* %this, %"class.std::basic_ostream"** %this.addr, align 8, !tbaa !2
  store i8** %vtt, i8*** %vtt.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %this.addr, align 8
  %vtt2 = load i8**, i8*** %vtt.addr, align 8
  %0 = load i8*, i8** %vtt2, align 8
  %1 = bitcast %"class.std::basic_ostream"* %this1 to i32 (...)***
  %2 = bitcast i8* %0 to i32 (...)**
  store i32 (...)** %2, i32 (...)*** %1, align 8, !tbaa !53
  %3 = getelementptr inbounds i8*, i8** %vtt2, i64 1
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast %"class.std::basic_ostream"* %this1 to i8**
  %vtable = load i8*, i8** %5, align 8, !tbaa !53
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -24
  %6 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64, i64* %6, align 8
  %7 = bitcast %"class.std::basic_ostream"* %this1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %vbase.offset
  %8 = bitcast i8* %add.ptr to i32 (...)***
  %9 = bitcast i8* %4 to i32 (...)**
  store i32 (...)** %9, i32 (...)*** %8, align 8, !tbaa !53
  %10 = bitcast %"class.std::basic_ostream"* %this1 to i8**
  %vtable3 = load i8*, i8** %10, align 8, !tbaa !53
  %vbase.offset.ptr4 = getelementptr i8, i8* %vtable3, i64 -24
  %11 = bitcast i8* %vbase.offset.ptr4 to i64*
  %vbase.offset5 = load i64, i64* %11, align 8
  %12 = bitcast %"class.std::basic_ostream"* %this1 to i8*
  %add.ptr6 = getelementptr inbounds i8, i8* %12, i64 %vbase.offset5
  %13 = bitcast i8* %add.ptr6 to %"class.std::basic_ios"*
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE4initEPSt15basic_streambufIcS1_E(%"class.std::basic_ios"* nonnull dereferenceable(264) %13, %"class.std::basic_streambuf"* null)
  ret void
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSiD2Ev(%"class.std::basic_istream"* nonnull dereferenceable(16) %this, i8** %vtt) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_istream"*, align 8
  %vtt.addr = alloca i8**, align 8
  store %"class.std::basic_istream"* %this, %"class.std::basic_istream"** %this.addr, align 8, !tbaa !2
  store i8** %vtt, i8*** %vtt.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_istream"*, %"class.std::basic_istream"** %this.addr, align 8
  %vtt2 = load i8**, i8*** %vtt.addr, align 8
  %0 = load i8*, i8** %vtt2, align 8
  %1 = bitcast %"class.std::basic_istream"* %this1 to i32 (...)***
  %2 = bitcast i8* %0 to i32 (...)**
  store i32 (...)** %2, i32 (...)*** %1, align 8, !tbaa !53
  %3 = getelementptr inbounds i8*, i8** %vtt2, i64 1
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast %"class.std::basic_istream"* %this1 to i8**
  %vtable = load i8*, i8** %5, align 8, !tbaa !53
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -24
  %6 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64, i64* %6, align 8
  %7 = bitcast %"class.std::basic_istream"* %this1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %vbase.offset
  %8 = bitcast i8* %add.ptr to i32 (...)***
  %9 = bitcast i8* %4 to i32 (...)**
  store i32 (...)** %9, i32 (...)*** %8, align 8, !tbaa !53
  %_M_gcount = getelementptr inbounds %"class.std::basic_istream", %"class.std::basic_istream"* %this1, i32 0, i32 1
  store i64 0, i64* %_M_gcount, align 8, !tbaa !265
  ret void
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt15basic_streambufIcSt11char_traitsIcEEC2Ev(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_streambuf"*, align 8
  store %"class.std::basic_streambuf"* %this, %"class.std::basic_streambuf"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_streambuf"*, %"class.std::basic_streambuf"** %this.addr, align 8
  %0 = bitcast %"class.std::basic_streambuf"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !53
  %_M_in_beg = getelementptr inbounds %"class.std::basic_streambuf", %"class.std::basic_streambuf"* %this1, i32 0, i32 1
  store i8* null, i8** %_M_in_beg, align 8, !tbaa !267
  %_M_in_cur = getelementptr inbounds %"class.std::basic_streambuf", %"class.std::basic_streambuf"* %this1, i32 0, i32 2
  store i8* null, i8** %_M_in_cur, align 8, !tbaa !270
  %_M_in_end = getelementptr inbounds %"class.std::basic_streambuf", %"class.std::basic_streambuf"* %this1, i32 0, i32 3
  store i8* null, i8** %_M_in_end, align 8, !tbaa !271
  %_M_out_beg = getelementptr inbounds %"class.std::basic_streambuf", %"class.std::basic_streambuf"* %this1, i32 0, i32 4
  store i8* null, i8** %_M_out_beg, align 8, !tbaa !272
  %_M_out_cur = getelementptr inbounds %"class.std::basic_streambuf", %"class.std::basic_streambuf"* %this1, i32 0, i32 5
  store i8* null, i8** %_M_out_cur, align 8, !tbaa !273
  %_M_out_end = getelementptr inbounds %"class.std::basic_streambuf", %"class.std::basic_streambuf"* %this1, i32 0, i32 6
  store i8* null, i8** %_M_out_end, align 8, !tbaa !274
  %_M_buf_locale = getelementptr inbounds %"class.std::basic_streambuf", %"class.std::basic_streambuf"* %this1, i32 0, i32 7
  call void @_ZNSt6localeC1Ev(%"class.std::locale"* nonnull dereferenceable(8) %_M_buf_locale) #9
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt6localeC1Ev(%"class.std::locale"* nonnull dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt15basic_streambufIcSt11char_traitsIcEED2Ev(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_streambuf"*, align 8
  store %"class.std::basic_streambuf"* %this, %"class.std::basic_streambuf"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_streambuf"*, %"class.std::basic_streambuf"** %this.addr, align 8
  %0 = bitcast %"class.std::basic_streambuf"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVSt15basic_streambufIcSt11char_traitsIcEE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %0, align 8, !tbaa !53
  %_M_buf_locale = getelementptr inbounds %"class.std::basic_streambuf", %"class.std::basic_streambuf"* %this1, i32 0, i32 7
  call void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull dereferenceable(8) %_M_buf_locale) #9
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt6localeD1Ev(%"class.std::locale"* nonnull dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSoD2Ev(%"class.std::basic_ostream"* nonnull dereferenceable(8) %this, i8** %vtt) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_ostream"*, align 8
  %vtt.addr = alloca i8**, align 8
  store %"class.std::basic_ostream"* %this, %"class.std::basic_ostream"** %this.addr, align 8, !tbaa !2
  store i8** %vtt, i8*** %vtt.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_ostream"*, %"class.std::basic_ostream"** %this.addr, align 8
  %vtt2 = load i8**, i8*** %vtt.addr, align 8
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_baseD2Ev(%"class.std::ios_base"* nonnull dereferenceable(216)) unnamed_addr #4

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %this, i8** %vtt) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_stringstream"*, align 8
  %vtt.addr = alloca i8**, align 8
  store %"class.std::__cxx11::basic_stringstream"* %this, %"class.std::__cxx11::basic_stringstream"** %this.addr, align 8, !tbaa !2
  store i8** %vtt, i8*** %vtt.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_stringstream"*, %"class.std::__cxx11::basic_stringstream"** %this.addr, align 8
  %vtt2 = load i8**, i8*** %vtt.addr, align 8
  %0 = load i8*, i8** %vtt2, align 8
  %1 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i32 (...)***
  %2 = bitcast i8* %0 to i32 (...)**
  store i32 (...)** %2, i32 (...)*** %1, align 8, !tbaa !53
  %3 = getelementptr inbounds i8*, i8** %vtt2, i64 8
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i8**
  %vtable = load i8*, i8** %5, align 8, !tbaa !53
  %vbase.offset.ptr = getelementptr i8, i8* %vtable, i64 -24
  %6 = bitcast i8* %vbase.offset.ptr to i64*
  %vbase.offset = load i64, i64* %6, align 8
  %7 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %vbase.offset
  %8 = bitcast i8* %add.ptr to i32 (...)***
  %9 = bitcast i8* %4 to i32 (...)**
  store i32 (...)** %9, i32 (...)*** %8, align 8, !tbaa !53
  %10 = getelementptr inbounds i8*, i8** %vtt2, i64 9
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i8*
  %add.ptr3 = getelementptr inbounds i8, i8* %12, i64 16
  %13 = bitcast i8* %add.ptr3 to i32 (...)***
  %14 = bitcast i8* %11 to i32 (...)**
  store i32 (...)** %14, i32 (...)*** %13, align 8, !tbaa !53
  %_M_stringbuf = getelementptr inbounds %"class.std::__cxx11::basic_stringstream", %"class.std::__cxx11::basic_stringstream"* %this1, i32 0, i32 1
  call void @_ZNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104) %_M_stringbuf) #9
  %15 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to %"class.std::basic_iostream"*
  %16 = getelementptr inbounds i8*, i8** %vtt2, i64 1
  call void @_ZNSdD2Ev(%"class.std::basic_iostream"* nonnull dereferenceable(24) %15, i8** %16) #9
  ret void
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZThn16_NSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_stringstream"*, align 8
  store %"class.std::__cxx11::basic_stringstream"* %this, %"class.std::__cxx11::basic_stringstream"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_stringstream"*, %"class.std::__cxx11::basic_stringstream"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i8*
  %1 = getelementptr inbounds i8, i8* %0, i64 -16
  %2 = bitcast i8* %1 to %"class.std::__cxx11::basic_stringstream"*
  tail call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %2) #9
  ret void
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZTv0_n24_NSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_stringstream"*, align 8
  store %"class.std::__cxx11::basic_stringstream"* %this, %"class.std::__cxx11::basic_stringstream"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_stringstream"*, %"class.std::__cxx11::basic_stringstream"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::basic_stringstream"* %this1 to i8*
  %1 = bitcast i8* %0 to i8**
  %2 = load i8*, i8** %1, align 8
  %3 = getelementptr inbounds i8, i8* %2, i64 -24
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds i8, i8* %0, i64 %5
  %7 = bitcast i8* %6 to %"class.std::__cxx11::basic_stringstream"*
  tail call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %7) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local void @_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate(%"class.std::basic_ios"* nonnull dereferenceable(264) %this, i32 %__state) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_ios"*, align 8
  %__state.addr = alloca i32, align 4
  store %"class.std::basic_ios"* %this, %"class.std::basic_ios"** %this.addr, align 8, !tbaa !2
  store i32 %__state, i32* %__state.addr, align 4, !tbaa !275
  %this1 = load %"class.std::basic_ios"*, %"class.std::basic_ios"** %this.addr, align 8
  %call = call i32 @_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv(%"class.std::basic_ios"* nonnull dereferenceable(264) %this1)
  %0 = load i32, i32* %__state.addr, align 4, !tbaa !275
  %call2 = call i32 @_ZStorSt12_Ios_IostateS_(i32 %call, i32 %0)
  call void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* nonnull dereferenceable(264) %this1, i32 %call2)
  ret void
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8), i8*, i64) #2

declare dso_local void @_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate(%"class.std::basic_ios"* nonnull dereferenceable(264), i32) #2

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZStorSt12_Ios_IostateS_(i32 %__a, i32 %__b) #12 comdat {
entry:
  %__a.addr = alloca i32, align 4
  %__b.addr = alloca i32, align 4
  store i32 %__a, i32* %__a.addr, align 4, !tbaa !275
  store i32 %__b, i32* %__b.addr, align 4, !tbaa !275
  %0 = load i32, i32* %__a.addr, align 4, !tbaa !275
  %1 = load i32, i32* %__b.addr, align 4, !tbaa !275
  %or = or i32 %0, %1
  ret i32 %or
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i32 @_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv(%"class.std::basic_ios"* nonnull dereferenceable(264) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_ios"*, align 8
  store %"class.std::basic_ios"* %this, %"class.std::basic_ios"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_ios"*, %"class.std::basic_ios"** %this.addr, align 8
  %0 = bitcast %"class.std::basic_ios"* %this1 to %"class.std::ios_base"*
  %_M_streambuf_state = getelementptr inbounds %"class.std::ios_base", %"class.std::ios_base"* %0, i32 0, i32 5
  %1 = load i32, i32* %_M_streambuf_state, align 8, !tbaa !277
  ret i32 %1
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local void @_ZNKSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_stringbuf"* nonnull dereferenceable(104) %this) #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.std::__cxx11::basic_stringbuf"*, align 8
  %nrvo = alloca i1, align 1
  %ref.tmp = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_stringbuf"* %this, %"class.std::__cxx11::basic_stringbuf"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_stringbuf"*, %"class.std::__cxx11::basic_stringbuf"** %this.addr, align 8
  store i1 false, i1* %nrvo, align 1
  %1 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  %_M_string = getelementptr inbounds %"class.std::__cxx11::basic_stringbuf", %"class.std::__cxx11::basic_stringbuf"* %this1, i32 0, i32 2
  call void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv(%"class.std::allocator.0"* sret(%"class.std::allocator.0") align 1 %ref.tmp, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %_M_string) #9
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp) #9
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %2) #9
  %3 = bitcast %"class.std::__cxx11::basic_stringbuf"* %this1 to %"class.std::basic_streambuf"*
  %call = invoke i8* @_ZNKSt15basic_streambufIcSt11char_traitsIcEE4pptrEv(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %3)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %tobool = icmp ne i8* %call, null
  br i1 %tobool, label %if.then, label %if.else19

if.then:                                          ; preds = %invoke.cont
  %4 = bitcast %"class.std::__cxx11::basic_stringbuf"* %this1 to %"class.std::basic_streambuf"*
  %call3 = invoke i8* @_ZNKSt15basic_streambufIcSt11char_traitsIcEE4pptrEv(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %4)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %if.then
  %5 = bitcast %"class.std::__cxx11::basic_stringbuf"* %this1 to %"class.std::basic_streambuf"*
  %call5 = invoke i8* @_ZNKSt15basic_streambufIcSt11char_traitsIcEE5egptrEv(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %5)
          to label %invoke.cont4 unwind label %lpad

invoke.cont4:                                     ; preds = %invoke.cont2
  %cmp = icmp ugt i8* %call3, %call5
  br i1 %cmp, label %if.then6, label %if.else

if.then6:                                         ; preds = %invoke.cont4
  %6 = bitcast %"class.std::__cxx11::basic_stringbuf"* %this1 to %"class.std::basic_streambuf"*
  %call8 = invoke i8* @_ZNKSt15basic_streambufIcSt11char_traitsIcEE5pbaseEv(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %6)
          to label %invoke.cont7 unwind label %lpad

invoke.cont7:                                     ; preds = %if.then6
  %7 = bitcast %"class.std::__cxx11::basic_stringbuf"* %this1 to %"class.std::basic_streambuf"*
  %call10 = invoke i8* @_ZNKSt15basic_streambufIcSt11char_traitsIcEE4pptrEv(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %7)
          to label %invoke.cont9 unwind label %lpad

invoke.cont9:                                     ; preds = %invoke.cont7
  %call12 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignIPcvEERS4_T_S8_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* %call8, i8* %call10)
          to label %invoke.cont11 unwind label %lpad

invoke.cont11:                                    ; preds = %invoke.cont9
  br label %if.end

lpad:                                             ; preds = %if.else19, %invoke.cont15, %invoke.cont13, %if.else, %invoke.cont9, %invoke.cont7, %if.then6, %invoke.cont2, %if.then, %entry
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result) #9
  br label %eh.resume

if.else:                                          ; preds = %invoke.cont4
  %11 = bitcast %"class.std::__cxx11::basic_stringbuf"* %this1 to %"class.std::basic_streambuf"*
  %call14 = invoke i8* @_ZNKSt15basic_streambufIcSt11char_traitsIcEE5pbaseEv(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %11)
          to label %invoke.cont13 unwind label %lpad

invoke.cont13:                                    ; preds = %if.else
  %12 = bitcast %"class.std::__cxx11::basic_stringbuf"* %this1 to %"class.std::basic_streambuf"*
  %call16 = invoke i8* @_ZNKSt15basic_streambufIcSt11char_traitsIcEE5egptrEv(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %12)
          to label %invoke.cont15 unwind label %lpad

invoke.cont15:                                    ; preds = %invoke.cont13
  %call18 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignIPcvEERS4_T_S8_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, i8* %call14, i8* %call16)
          to label %invoke.cont17 unwind label %lpad

invoke.cont17:                                    ; preds = %invoke.cont15
  br label %if.end

if.end:                                           ; preds = %invoke.cont17, %invoke.cont11
  br label %if.end23

if.else19:                                        ; preds = %invoke.cont
  %_M_string20 = getelementptr inbounds %"class.std::__cxx11::basic_stringbuf", %"class.std::__cxx11::basic_stringbuf"* %this1, i32 0, i32 2
  %call22 = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %_M_string20)
          to label %invoke.cont21 unwind label %lpad

invoke.cont21:                                    ; preds = %if.else19
  br label %if.end23

if.end23:                                         ; preds = %invoke.cont21, %if.end
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused

nrvo.unused:                                      ; preds = %if.end23
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result) #9
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %if.end23
  ret void

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val24 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val24
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local void @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv(%"class.std::allocator.0"* noalias sret(%"class.std::allocator.0") align 1 %agg.result, %"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %0 = bitcast %"class.std::allocator.0"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  call void @_ZNSaIcEC2ERKS_(%"class.std::allocator.0"* nonnull dereferenceable(1) %agg.result, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %call) #9
  ret void
}

; Function Attrs: nounwind uwtable
define available_externally dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2ERKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #6 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__a.addr = alloca %"class.std::allocator.0"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store %"class.std::allocator.0"* %__a, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %_M_dataplus = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %this1, i32 0, i32 0
  %call = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  %0 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %__a.addr, align 8, !tbaa !2
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus, i8* %call, %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 0)
          to label %invoke.cont2 unwind label %lpad

invoke.cont2:                                     ; preds = %invoke.cont
  ret void

lpad:                                             ; preds = %invoke.cont
  %1 = landingpad { i8*, i32 }
          catch i8* null
  %2 = extractvalue { i8*, i32 } %1, 0
  store i8* %2, i8** %exn.slot, align 8
  %3 = extractvalue { i8*, i32 } %1, 1
  store i32 %3, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.std::allocator.0"*)* @_ZNSaIcED2Ev to void (%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"*)*)(%"struct.std::__cxx11::basic_string<char>::_Alloc_hider"* nonnull dereferenceable(8) %_M_dataplus) #9
  br label %terminate.handler

terminate.lpad:                                   ; preds = %entry
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #29
  unreachable

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i8* @_ZNKSt15basic_streambufIcSt11char_traitsIcEE4pptrEv(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_streambuf"*, align 8
  store %"class.std::basic_streambuf"* %this, %"class.std::basic_streambuf"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_streambuf"*, %"class.std::basic_streambuf"** %this.addr, align 8
  %_M_out_cur = getelementptr inbounds %"class.std::basic_streambuf", %"class.std::basic_streambuf"* %this1, i32 0, i32 5
  %0 = load i8*, i8** %_M_out_cur, align 8, !tbaa !273
  ret i8* %0
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i8* @_ZNKSt15basic_streambufIcSt11char_traitsIcEE5egptrEv(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_streambuf"*, align 8
  store %"class.std::basic_streambuf"* %this, %"class.std::basic_streambuf"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_streambuf"*, %"class.std::basic_streambuf"** %this.addr, align 8
  %_M_in_end = getelementptr inbounds %"class.std::basic_streambuf", %"class.std::basic_streambuf"* %this1, i32 0, i32 3
  %0 = load i8*, i8** %_M_in_end, align 8, !tbaa !271
  ret i8* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignIPcvEERS4_T_S8_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__first, i8* %__last) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__first.addr = alloca i8*, align 8
  %__last.addr = alloca i8*, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.41", align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator.41", align 8
  %ref.tmp3 = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__first, i8** %__first.addr, align 8, !tbaa !2
  store i8* %__last, i8** %__last.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %call = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %ref.tmp, i32 0, i32 0
  store i8* %call, i8** %coerce.dive, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISC_SB_EE7__valueES8_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.41"* nonnull dereferenceable(8) %agg.tmp, %"class.__gnu_cxx::__normal_iterator.43"* nonnull align 8 dereferenceable(8) %ref.tmp) #9
  %1 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %ref.tmp3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %call4 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  %coerce.dive5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %ref.tmp3, i32 0, i32 0
  store i8* %call4, i8** %coerce.dive5, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISC_SB_EE7__valueES8_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.41"* nonnull dereferenceable(8) %agg.tmp2, %"class.__gnu_cxx::__normal_iterator.43"* nonnull align 8 dereferenceable(8) %ref.tmp3) #9
  %2 = load i8*, i8** %__first.addr, align 8, !tbaa !2
  %3 = load i8*, i8** %__last.addr, align 8, !tbaa !2
  %coerce.dive6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %agg.tmp, i32 0, i32 0
  %4 = load i8*, i8** %coerce.dive6, align 8
  %coerce.dive7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %agg.tmp2, i32 0, i32 0
  %5 = load i8*, i8** %coerce.dive7, align 8
  %call8 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i8* %4, i8* %5, i8* %2, i8* %3)
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %ref.tmp3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #9
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  ret %"class.std::__cxx11::basic_string"* %call8
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i8* @_ZNKSt15basic_streambufIcSt11char_traitsIcEE5pbaseEv(%"class.std::basic_streambuf"* nonnull dereferenceable(64) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::basic_streambuf"*, align 8
  store %"class.std::basic_streambuf"* %this, %"class.std::basic_streambuf"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::basic_streambuf"*, %"class.std::basic_streambuf"** %this.addr, align 8
  %_M_out_beg = getelementptr inbounds %"class.std::basic_streambuf", %"class.std::basic_streambuf"* %this1, i32 0, i32 4
  %0 = load i8*, i8** %_M_out_beg, align 8, !tbaa !272
  ret i8* %0
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_iteratorIPKcS4_EES9_PcSA_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__i1.coerce, i8* %__i2.coerce, i8* %__k1, i8* %__k2) #0 align 2 {
entry:
  %__i1 = alloca %"class.__gnu_cxx::__normal_iterator.41", align 8
  %__i2 = alloca %"class.__gnu_cxx::__normal_iterator.41", align 8
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__k1.addr = alloca i8*, align 8
  %__k2.addr = alloca i8*, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %__i1, i32 0, i32 0
  store i8* %__i1.coerce, i8** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %__i2, i32 0, i32 0
  store i8* %__i2.coerce, i8** %coerce.dive1, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__k1, i8** %__k1.addr, align 8, !tbaa !2
  store i8* %__k2, i8** %__k2.addr, align 8, !tbaa !2
  %this2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %call = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this2) #9
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %ref.tmp, i32 0, i32 0
  store i8* %call, i8** %coerce.dive3, align 8
  %call4 = call i64 @_ZN9__gnu_cxxmiIPKcPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEDTmicldtfp_4baseEcldtfp0_4baseEERKNS_17__normal_iteratorIT_T1_EERKNSB_IT0_SD_EE(%"class.__gnu_cxx::__normal_iterator.41"* nonnull align 8 dereferenceable(8) %__i1, %"class.__gnu_cxx::__normal_iterator.43"* nonnull align 8 dereferenceable(8) %ref.tmp) #9
  %call5 = call i64 @_ZN9__gnu_cxxmiIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_(%"class.__gnu_cxx::__normal_iterator.41"* nonnull align 8 dereferenceable(8) %__i2, %"class.__gnu_cxx::__normal_iterator.41"* nonnull align 8 dereferenceable(8) %__i1) #9
  %1 = load i8*, i8** %__k1.addr, align 8, !tbaa !2
  %2 = load i8*, i8** %__k2.addr, align 8, !tbaa !2
  %3 = load i8*, i8** %__k1.addr, align 8, !tbaa !2
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call6 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this2, i64 %call4, i64 %call5, i8* %1, i64 %sub.ptr.sub)
  %4 = bitcast %"class.__gnu_cxx::__normal_iterator.43"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #9
  ret %"class.std::__cxx11::basic_string"* %call6
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %ref.tmp = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = bitcast i8** %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  store i8* %call, i8** %ref.tmp, align 8, !tbaa !2
  call void @_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.43"* nonnull dereferenceable(8) %retval, i8** nonnull align 8 dereferenceable(8) %ref.tmp) #9
  %1 = bitcast i8** %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %retval, i32 0, i32 0
  %2 = load i8*, i8** %coerce.dive, align 8
  ret i8* %2
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2IPcEERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISC_SB_EE7__valueES8_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.41"* nonnull dereferenceable(8) %this, %"class.__gnu_cxx::__normal_iterator.43"* nonnull align 8 dereferenceable(8) %__i) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.41"*, align 8
  %__i.addr = alloca %"class.__gnu_cxx::__normal_iterator.43"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.41"* %this, %"class.__gnu_cxx::__normal_iterator.41"** %this.addr, align 8, !tbaa !2
  store %"class.__gnu_cxx::__normal_iterator.43"* %__i, %"class.__gnu_cxx::__normal_iterator.43"** %__i.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::__normal_iterator.41"*, %"class.__gnu_cxx::__normal_iterator.41"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.41", %"class.__gnu_cxx::__normal_iterator.41"* %this1, i32 0, i32 0
  %0 = load %"class.__gnu_cxx::__normal_iterator.43"*, %"class.__gnu_cxx::__normal_iterator.43"** %__i.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.43"* nonnull dereferenceable(8) %0) #9
  %1 = load i8*, i8** %call, align 8, !tbaa !2
  store i8* %1, i8** %_M_current, align 8, !tbaa !240
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.43", align 8
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %ref.tmp = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = bitcast i8** %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  %call2 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  %add.ptr = getelementptr inbounds i8, i8* %call, i64 %call2
  store i8* %add.ptr, i8** %ref.tmp, align 8, !tbaa !2
  call void @_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.43"* nonnull dereferenceable(8) %retval, i8** nonnull align 8 dereferenceable(8) %ref.tmp) #9
  %1 = bitcast i8** %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %retval, i32 0, i32 0
  %2 = load i8*, i8** %coerce.dive, align 8
  ret i8* %2
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i64 %__pos, i64 %__n1, i8* %__s, i64 %__n2) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__pos.addr = alloca i64, align 8
  %__n1.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  %__n2.addr = alloca i64, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i64 %__pos, i64* %__pos.addr, align 8, !tbaa !13
  store i64 %__n1, i64* %__n1.addr, align 8, !tbaa !13
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  store i64 %__n2, i64* %__n2.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  %call = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.124, i64 0, i64 0))
  %1 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  %2 = load i64, i64* %__n1.addr, align 8, !tbaa !13
  %call2 = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %1, i64 %2) #9
  %3 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %4 = load i64, i64* %__n2.addr, align 8, !tbaa !13
  %call3 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %call, i64 %call2, i8* %3, i64 %4)
  ret %"class.std::__cxx11::basic_string"* %call3
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPKcPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEDTmicldtfp_4baseEcldtfp0_4baseEERKNS_17__normal_iteratorIT_T1_EERKNSB_IT0_SD_EE(%"class.__gnu_cxx::__normal_iterator.41"* nonnull align 8 dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator.43"* nonnull align 8 dereferenceable(8) %__rhs) #12 comdat {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.41"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.43"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.41"* %__lhs, %"class.__gnu_cxx::__normal_iterator.41"** %__lhs.addr, align 8, !tbaa !2
  store %"class.__gnu_cxx::__normal_iterator.43"* %__rhs, %"class.__gnu_cxx::__normal_iterator.43"** %__rhs.addr, align 8, !tbaa !2
  %0 = load %"class.__gnu_cxx::__normal_iterator.41"*, %"class.__gnu_cxx::__normal_iterator.41"** %__lhs.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.41"* nonnull dereferenceable(8) %0) #9
  %1 = load i8*, i8** %call, align 8, !tbaa !2
  %2 = load %"class.__gnu_cxx::__normal_iterator.43"*, %"class.__gnu_cxx::__normal_iterator.43"** %__rhs.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.43"* nonnull dereferenceable(8) %2) #9
  %3 = load i8*, i8** %call1, align 8, !tbaa !2
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  ret i64 %sub.ptr.sub
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_(%"class.__gnu_cxx::__normal_iterator.41"* nonnull align 8 dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator.41"* nonnull align 8 dereferenceable(8) %__rhs) #12 comdat {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.41"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.41"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.41"* %__lhs, %"class.__gnu_cxx::__normal_iterator.41"** %__lhs.addr, align 8, !tbaa !2
  store %"class.__gnu_cxx::__normal_iterator.41"* %__rhs, %"class.__gnu_cxx::__normal_iterator.41"** %__rhs.addr, align 8, !tbaa !2
  %0 = load %"class.__gnu_cxx::__normal_iterator.41"*, %"class.__gnu_cxx::__normal_iterator.41"** %__lhs.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.41"* nonnull dereferenceable(8) %0) #9
  %1 = load i8*, i8** %call, align 8, !tbaa !2
  %2 = load %"class.__gnu_cxx::__normal_iterator.41"*, %"class.__gnu_cxx::__normal_iterator.41"** %__rhs.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.41"* nonnull dereferenceable(8) %2) #9
  %3 = load i8*, i8** %call1, align 8, !tbaa !2
  %sub.ptr.lhs.cast = ptrtoint i8* %1 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  ret i64 %sub.ptr.sub
}

declare dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32), i64, i64, i8*, i64) #2

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.43"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.43"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.43"* %this, %"class.__gnu_cxx::__normal_iterator.43"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::__normal_iterator.43"*, %"class.__gnu_cxx::__normal_iterator.43"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %this1, i32 0, i32 0
  ret i8** %_M_current
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.43"* nonnull dereferenceable(8) %this, i8** nonnull align 8 dereferenceable(8) %__i) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.43"*, align 8
  %__i.addr = alloca i8**, align 8
  store %"class.__gnu_cxx::__normal_iterator.43"* %this, %"class.__gnu_cxx::__normal_iterator.43"** %this.addr, align 8, !tbaa !2
  store i8** %__i, i8*** %__i.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::__normal_iterator.43"*, %"class.__gnu_cxx::__normal_iterator.43"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.43", %"class.__gnu_cxx::__normal_iterator.43"* %this1, i32 0, i32 0
  %0 = load i8**, i8*** %__i.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %0, align 8, !tbaa !2
  store i8* %1, i8** %_M_current, align 8, !tbaa !281
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.9"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"struct.std::_Vector_base.9"* %this, %"struct.std::_Vector_base.9"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %0, i32 0, i32 0
  %1 = load i32*, i32** %_M_start, align 8, !tbaa !125
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %this1, i32 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %2, i32 0, i32 2
  %3 = load i32*, i32** %_M_end_of_storage, align 8, !tbaa !247
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %this1, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl3 to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %4, i32 0, i32 0
  %5 = load i32*, i32** %_M_start4, align 8, !tbaa !125
  %sub.ptr.lhs.cast = ptrtoint i32* %3 to i64
  %sub.ptr.rhs.cast = ptrtoint i32* %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.9"* nonnull dereferenceable(24) %this1, i32* %1, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.11"*)* @_ZN9__gnu_cxx13new_allocatorIiED2Ev to void (%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl5) #9
  ret void

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.11"*)* @_ZN9__gnu_cxx13new_allocatorIiED2Ev to void (%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl6) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.9"* nonnull dereferenceable(24) %this, i32* %__p, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.9"*, align 8
  %__p.addr = alloca i32*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %this, %"struct.std::_Vector_base.9"** %this.addr, align 8, !tbaa !2
  store i32* %__p, i32** %__p.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %this.addr, align 8
  %0 = load i32*, i32** %__p.addr, align 8, !tbaa !2
  %tobool = icmp ne i32* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl to %"class.std::allocator.10"*
  %2 = load i32*, i32** %__p.addr, align 8, !tbaa !2
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.10"* nonnull align 1 dereferenceable(1) %1, i32* %2, i64 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.11"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %this, %"class.__gnu_cxx::new_allocator.11"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %this.addr, align 8
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.10"* nonnull align 1 dereferenceable(1) %__a, i32* %__p, i64 %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.10"*, align 8
  %__p.addr = alloca i32*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.10"* %__a, %"class.std::allocator.10"** %__a.addr, align 8, !tbaa !2
  store i32* %__p, i32** %__p.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.10"* %0 to %"class.__gnu_cxx::new_allocator.11"*
  %2 = load i32*, i32** %__p.addr, align 8, !tbaa !2
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.11"* nonnull dereferenceable(1) %1, i32* %2, i64 %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.11"* nonnull dereferenceable(1) %this, i32* %__p, i64 %0) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %__p.addr = alloca i32*, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %this, %"class.__gnu_cxx::new_allocator.11"** %this.addr, align 8, !tbaa !2
  store i32* %__p, i32** %__p.addr, align 8, !tbaa !2
  store i64 %0, i64* %.addr, align 8, !tbaa !13
  %this1 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %this.addr, align 8
  %1 = load i32*, i32** %__p.addr, align 8, !tbaa !2
  %2 = bitcast i32* %1 to i8*
  call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt14_List_iteratorIN5adept3GapEEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %this, %"struct.std::__detail::_List_node_base"* %__x) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_List_iterator"*, align 8
  %__x.addr = alloca %"struct.std::__detail::_List_node_base"*, align 8
  store %"struct.std::_List_iterator"* %this, %"struct.std::_List_iterator"** %this.addr, align 8, !tbaa !2
  store %"struct.std::__detail::_List_node_base"* %__x, %"struct.std::__detail::_List_node_base"** %__x.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %__x.addr, align 8, !tbaa !2
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !151
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) %"struct.std::_List_iterator"* @_ZNSt14_List_iteratorIN5adept3GapEEmmEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_List_iterator"*, align 8
  store %"struct.std::_List_iterator"* %this, %"struct.std::_List_iterator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !151
  %_M_prev = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %0, i32 0, i32 1
  %1 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_prev, align 8, !tbaa !155
  %_M_node2 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %this1, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %_M_node2, align 8, !tbaa !151
  ret %"struct.std::_List_iterator"* %this1
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE8_M_eraseESt14_List_iteratorIS2_E(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this, %"struct.std::__detail::_List_node_base"* %__position.coerce) #8 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__position = alloca %"struct.std::_List_iterator", align 8
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  %__n = alloca %"struct.std::_List_node"*, align 8
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %__position, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %__position.coerce, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  invoke void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_dec_sizeEm(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %0, i64 1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  %_M_node = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %__position, i32 0, i32 0
  %1 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !151
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %1) #9
  %2 = bitcast %"struct.std::_List_node"** %__n to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %_M_node2 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %__position, i32 0, i32 0
  %3 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node2, align 8, !tbaa !151
  %4 = bitcast %"struct.std::__detail::_List_node_base"* %3 to %"struct.std::_List_node"*
  store %"struct.std::_List_node"* %4, %"struct.std::_List_node"** %__n, align 8, !tbaa !2
  %5 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.13"* @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %5) #9
  %6 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__n, align 8, !tbaa !2
  %call3 = call %"struct.adept::Gap"* @_ZNSt10_List_nodeIN5adept3GapEE9_M_valptrEv(%"struct.std::_List_node"* nonnull dereferenceable(24) %6)
  call void @_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE7destroyIS2_EEvRS4_PT_(%"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %call, %"struct.adept::Gap"* %call3) #9
  %7 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  %8 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__n, align 8, !tbaa !2
  call void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_put_nodeEPSt10_List_nodeIS2_E(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %7, %"struct.std::_List_node"* %8) #9
  %9 = bitcast %"struct.std::_List_node"** %__n to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  ret void

terminate.lpad:                                   ; preds = %entry
  %10 = landingpad { i8*, i32 }
          catch i8* null
  %11 = extractvalue { i8*, i32 } %10, 0
  call void @__clang_call_terminate(i8* %11) #29
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_dec_sizeEm(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %this, i64 %__n) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::_List_base"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::__cxx11::_List_base"* %this, %"class.std::__cxx11::_List_base"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %this1, i32 0, i32 0
  %_M_node = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl, i32 0, i32 0
  %_M_size = getelementptr inbounds %"struct.std::__detail::_List_node_header", %"struct.std::__detail::_List_node_header"* %_M_node, i32 0, i32 1
  %1 = load i64, i64* %_M_size, align 8, !tbaa !283
  %sub = sub i64 %1, %0
  store i64 %sub, i64* %_M_size, align 8, !tbaa !283
  ret void
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16)) #4

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIdEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8), double) #2

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i8* %__s) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__s.addr = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = call i64 @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1) #9
  %0 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %1 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %call2 = call i64 @_ZNSt11char_traitsIcE6lengthEPKc(i8* %1)
  %call3 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 0, i64 %call, i8* %0, i64 %call2)
  ret %"class.std::__cxx11::basic_string"* %call3
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.std::__detail::_List_node_base"* @_ZNKSt20_List_const_iteratorIN5adept3GapEE13_M_const_castEv(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %retval = alloca %"struct.std::_List_iterator", align 8
  %this.addr = alloca %"struct.std::_List_const_iterator"*, align 8
  store %"struct.std::_List_const_iterator"* %this, %"struct.std::_List_const_iterator"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !152
  call void @_ZNSt14_List_iteratorIN5adept3GapEEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %retval, %"struct.std::__detail::_List_node_base"* %0) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %retval, i32 0, i32 0
  %1 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  ret %"struct.std::__detail::_List_node_base"* %1
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE7emplaceIJS2_EEESt14_List_iteratorIS2_ESt20_List_const_iteratorIS2_EDpOT_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this, %"struct.std::__detail::_List_node_base"* %__position.coerce, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %__args) #0 comdat align 2 {
entry:
  %retval = alloca %"struct.std::_List_iterator", align 8
  %__position = alloca %"struct.std::_List_const_iterator", align 8
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  %__args.addr = alloca %"struct.adept::Gap"*, align 8
  %__tmp = alloca %"struct.std::_List_node"*, align 8
  %ref.tmp = alloca %"struct.std::_List_iterator", align 8
  %coerce.dive = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %__position, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %__position.coerce, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Gap"* %__args, %"struct.adept::Gap"** %__args.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"struct.std::_List_node"** %__tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__args.addr, align 8, !tbaa !2
  %call = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZSt7forwardIN5adept3GapEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %1) #9
  %call2 = call %"struct.std::_List_node"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE14_M_create_nodeIJS2_EEEPSt10_List_nodeIS2_EDpOT_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this1, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %call)
  store %"struct.std::_List_node"* %call2, %"struct.std::_List_node"** %__tmp, align 8, !tbaa !2
  %2 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__tmp, align 8, !tbaa !2
  %3 = bitcast %"struct.std::_List_node"* %2 to %"struct.std::__detail::_List_node_base"*
  %4 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %call3 = call %"struct.std::__detail::_List_node_base"* @_ZNKSt20_List_const_iteratorIN5adept3GapEE13_M_const_castEv(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %__position) #9
  %coerce.dive4 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call3, %"struct.std::__detail::_List_node_base"** %coerce.dive4, align 8
  %_M_node = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp, i32 0, i32 0
  %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !151
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %3, %"struct.std::__detail::_List_node_base"* %5) #9
  %6 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #9
  %7 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_inc_sizeEm(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %7, i64 1)
  %8 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__tmp, align 8, !tbaa !2
  %9 = bitcast %"struct.std::_List_node"* %8 to %"struct.std::__detail::_List_node_base"*
  call void @_ZNSt14_List_iteratorIN5adept3GapEEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %retval, %"struct.std::__detail::_List_node_base"* %9) #9
  %10 = bitcast %"struct.std::_List_node"** %__tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9
  %coerce.dive5 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %retval, i32 0, i32 0
  %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive5, align 8
  ret %"struct.std::__detail::_List_node_base"* %11
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZSt4moveIRN5adept3GapEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %__t) #8 comdat {
entry:
  %__t.addr = alloca %"struct.adept::Gap"*, align 8
  store %"struct.adept::Gap"* %__t, %"struct.adept::Gap"** %__t.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__t.addr, align 8, !tbaa !2
  ret %"struct.adept::Gap"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"struct.std::_List_node"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE14_M_create_nodeIJS2_EEEPSt10_List_nodeIS2_EDpOT_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %__args) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  %__args.addr = alloca %"struct.adept::Gap"*, align 8
  %__p = alloca %"struct.std::_List_node"*, align 8
  %__alloc = alloca %"class.std::allocator.13"*, align 8
  %__guard = alloca %"struct.std::__allocated_ptr", align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Gap"* %__args, %"struct.adept::Gap"** %__args.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"struct.std::_List_node"** %__p to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  %call = call %"struct.std::_List_node"* @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_get_nodeEv(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %1)
  store %"struct.std::_List_node"* %call, %"struct.std::_List_node"** %__p, align 8, !tbaa !2
  %2 = bitcast %"class.std::allocator.13"** %__alloc to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %3 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  %call2 = call nonnull align 1 dereferenceable(1) %"class.std::allocator.13"* @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE21_M_get_Node_allocatorEv(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %3) #9
  store %"class.std::allocator.13"* %call2, %"class.std::allocator.13"** %__alloc, align 8, !tbaa !2
  %4 = bitcast %"struct.std::__allocated_ptr"* %__guard to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %4) #9
  %5 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %__alloc, align 8, !tbaa !2
  %6 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__p, align 8, !tbaa !2
  call void @_ZNSt15__allocated_ptrISaISt10_List_nodeIN5adept3GapEEEEC2ERS4_PS3_(%"struct.std::__allocated_ptr"* nonnull dereferenceable(16) %__guard, %"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %5, %"struct.std::_List_node"* %6) #9
  %7 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %__alloc, align 8, !tbaa !2
  %8 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__p, align 8, !tbaa !2
  %call3 = call %"struct.adept::Gap"* @_ZNSt10_List_nodeIN5adept3GapEE9_M_valptrEv(%"struct.std::_List_node"* nonnull dereferenceable(24) %8)
  %9 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__args.addr, align 8, !tbaa !2
  %call4 = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZSt7forwardIN5adept3GapEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %9) #9
  call void @_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE9constructIS2_JS2_EEEvRS4_PT_DpOT0_(%"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %7, %"struct.adept::Gap"* %call3, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %call4) #9
  %call5 = call nonnull align 8 dereferenceable(16) %"struct.std::__allocated_ptr"* @_ZNSt15__allocated_ptrISaISt10_List_nodeIN5adept3GapEEEEaSEDn(%"struct.std::__allocated_ptr"* nonnull dereferenceable(16) %__guard, i8* null) #9
  %10 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__p, align 8, !tbaa !2
  call void @_ZNSt15__allocated_ptrISaISt10_List_nodeIN5adept3GapEEEED2Ev(%"struct.std::__allocated_ptr"* nonnull dereferenceable(16) %__guard) #9
  %11 = bitcast %"struct.std::__allocated_ptr"* %__guard to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %11) #9
  %12 = bitcast %"class.std::allocator.13"** %__alloc to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #9
  %13 = bitcast %"struct.std::_List_node"** %__p to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #9
  ret %"struct.std::_List_node"* %10
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZSt7forwardIN5adept3GapEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %__t) #8 comdat {
entry:
  %__t.addr = alloca %"struct.adept::Gap"*, align 8
  store %"struct.adept::Gap"* %__t, %"struct.adept::Gap"** %__t.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__t.addr, align 8, !tbaa !2
  ret %"struct.adept::Gap"* %0
}

; Function Attrs: nounwind
declare dso_local void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16), %"struct.std::__detail::_List_node_base"*) #4

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_inc_sizeEm(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %this, i64 %__n) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::_List_base"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::__cxx11::_List_base"* %this, %"class.std::__cxx11::_List_base"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %this1, i32 0, i32 0
  %_M_node = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl, i32 0, i32 0
  %_M_size = getelementptr inbounds %"struct.std::__detail::_List_node_header", %"struct.std::__detail::_List_node_header"* %_M_node, i32 0, i32 1
  %1 = load i64, i64* %_M_size, align 8, !tbaa !283
  %add = add i64 %1, %0
  store i64 %add, i64* %_M_size, align 8, !tbaa !283
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"struct.std::_List_node"* @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_get_nodeEv(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %this, %"class.std::__cxx11::_List_base"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl to %"class.std::allocator.13"*
  %call = call %"struct.std::_List_node"* @_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE8allocateERS4_m(%"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %0, i64 1)
  ret %"struct.std::_List_node"* %call
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt15__allocated_ptrISaISt10_List_nodeIN5adept3GapEEEEC2ERS4_PS3_(%"struct.std::__allocated_ptr"* nonnull dereferenceable(16) %this, %"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %__a, %"struct.std::_List_node"* %__ptr) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::__allocated_ptr"*, align 8
  %__a.addr = alloca %"class.std::allocator.13"*, align 8
  %__ptr.addr = alloca %"struct.std::_List_node"*, align 8
  store %"struct.std::__allocated_ptr"* %this, %"struct.std::__allocated_ptr"** %this.addr, align 8, !tbaa !2
  store %"class.std::allocator.13"* %__a, %"class.std::allocator.13"** %__a.addr, align 8, !tbaa !2
  store %"struct.std::_List_node"* %__ptr, %"struct.std::_List_node"** %__ptr.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::__allocated_ptr"*, %"struct.std::__allocated_ptr"** %this.addr, align 8
  %_M_alloc = getelementptr inbounds %"struct.std::__allocated_ptr", %"struct.std::__allocated_ptr"* %this1, i32 0, i32 0
  %0 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %__a.addr, align 8, !tbaa !2
  %call = call %"class.std::allocator.13"* @_ZSt11__addressofISaISt10_List_nodeIN5adept3GapEEEEPT_RS5_(%"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %0) #9
  store %"class.std::allocator.13"* %call, %"class.std::allocator.13"** %_M_alloc, align 8, !tbaa !286
  %_M_ptr = getelementptr inbounds %"struct.std::__allocated_ptr", %"struct.std::__allocated_ptr"* %this1, i32 0, i32 1
  %1 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__ptr.addr, align 8, !tbaa !2
  store %"struct.std::_List_node"* %1, %"struct.std::_List_node"** %_M_ptr, align 8, !tbaa !288
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE9constructIS2_JS2_EEEvRS4_PT_DpOT0_(%"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %__a, %"struct.adept::Gap"* %__p, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %__args) #8 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.13"*, align 8
  %__p.addr = alloca %"struct.adept::Gap"*, align 8
  %__args.addr = alloca %"struct.adept::Gap"*, align 8
  store %"class.std::allocator.13"* %__a, %"class.std::allocator.13"** %__a.addr, align 8, !tbaa !2
  store %"struct.adept::Gap"* %__p, %"struct.adept::Gap"** %__p.addr, align 8, !tbaa !2
  store %"struct.adept::Gap"* %__args, %"struct.adept::Gap"** %__args.addr, align 8, !tbaa !2
  %0 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.13"* %0 to %"class.__gnu_cxx::new_allocator.14"*
  %2 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__p.addr, align 8, !tbaa !2
  %3 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__args.addr, align 8, !tbaa !2
  %call = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZSt7forwardIN5adept3GapEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %3) #9
  call void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE9constructIS3_JS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %1, %"struct.adept::Gap"* %2, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %call) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"struct.std::__allocated_ptr"* @_ZNSt15__allocated_ptrISaISt10_List_nodeIN5adept3GapEEEEaSEDn(%"struct.std::__allocated_ptr"* nonnull dereferenceable(16) %this, i8* %0) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::__allocated_ptr"*, align 8
  %.addr = alloca i8*, align 8
  store %"struct.std::__allocated_ptr"* %this, %"struct.std::__allocated_ptr"** %this.addr, align 8, !tbaa !2
  store i8* %0, i8** %.addr, align 8, !tbaa !289
  %this1 = load %"struct.std::__allocated_ptr"*, %"struct.std::__allocated_ptr"** %this.addr, align 8
  %_M_ptr = getelementptr inbounds %"struct.std::__allocated_ptr", %"struct.std::__allocated_ptr"* %this1, i32 0, i32 1
  store %"struct.std::_List_node"* null, %"struct.std::_List_node"** %_M_ptr, align 8, !tbaa !288
  ret %"struct.std::__allocated_ptr"* %this1
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt15__allocated_ptrISaISt10_List_nodeIN5adept3GapEEEED2Ev(%"struct.std::__allocated_ptr"* nonnull dereferenceable(16) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::__allocated_ptr"*, align 8
  store %"struct.std::__allocated_ptr"* %this, %"struct.std::__allocated_ptr"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::__allocated_ptr"*, %"struct.std::__allocated_ptr"** %this.addr, align 8
  %_M_ptr = getelementptr inbounds %"struct.std::__allocated_ptr", %"struct.std::__allocated_ptr"* %this1, i32 0, i32 1
  %0 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %_M_ptr, align 8, !tbaa !288
  %cmp = icmp ne %"struct.std::_List_node"* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_alloc = getelementptr inbounds %"struct.std::__allocated_ptr", %"struct.std::__allocated_ptr"* %this1, i32 0, i32 0
  %1 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %_M_alloc, align 8, !tbaa !286
  %_M_ptr2 = getelementptr inbounds %"struct.std::__allocated_ptr", %"struct.std::__allocated_ptr"* %this1, i32 0, i32 1
  %2 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %_M_ptr2, align 8, !tbaa !288
  invoke void @_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE10deallocateERS4_PS3_m(%"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %1, %"struct.std::_List_node"* %2, i64 1)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  call void @__clang_call_terminate(i8* %4) #29
  unreachable
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"struct.std::_List_node"* @_ZNSt16allocator_traitsISaISt10_List_nodeIN5adept3GapEEEE8allocateERS4_m(%"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %__a, i64 %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.13"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.13"* %__a, %"class.std::allocator.13"** %__a.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.13"* %0 to %"class.__gnu_cxx::new_allocator.14"*
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"struct.std::_List_node"* @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %1, i64 %2, i8* null)
  ret %"struct.std::_List_node"* %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"struct.std::_List_node"* @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %this, i64 %__n, i8* %0) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %this, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store i8* %0, i8** %.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %this1) #9
  %cmp = icmp ugt i64 %1, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #31
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %mul = mul i64 %2, 24
  %call2 = call noalias nonnull i8* @_Znwm(i64 %mul) #34
  %3 = bitcast i8* %call2 to %"struct.std::_List_node"*
  ret %"struct.std::_List_node"* %3
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %this, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8
  ret i64 384307168202282325
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local %"class.std::allocator.13"* @_ZSt11__addressofISaISt10_List_nodeIN5adept3GapEEEEPT_RS5_(%"class.std::allocator.13"* nonnull align 1 dereferenceable(1) %__r) #12 comdat {
entry:
  %__r.addr = alloca %"class.std::allocator.13"*, align 8
  store %"class.std::allocator.13"* %__r, %"class.std::allocator.13"** %__r.addr, align 8, !tbaa !2
  %0 = load %"class.std::allocator.13"*, %"class.std::allocator.13"** %__r.addr, align 8, !tbaa !2
  ret %"class.std::allocator.13"* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5adept3GapEEE9constructIS3_JS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.14"* nonnull dereferenceable(1) %this, %"struct.adept::Gap"* %__p, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %__args) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.14"*, align 8
  %__p.addr = alloca %"struct.adept::Gap"*, align 8
  %__args.addr = alloca %"struct.adept::Gap"*, align 8
  store %"class.__gnu_cxx::new_allocator.14"* %this, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Gap"* %__p, %"struct.adept::Gap"** %__p.addr, align 8, !tbaa !2
  store %"struct.adept::Gap"* %__args, %"struct.adept::Gap"** %__args.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.14"*, %"class.__gnu_cxx::new_allocator.14"** %this.addr, align 8
  %0 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__p.addr, align 8, !tbaa !2
  %1 = bitcast %"struct.adept::Gap"* %0 to i8*
  %2 = bitcast i8* %1 to %"struct.adept::Gap"*
  %3 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__args.addr, align 8, !tbaa !2
  %call = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZSt7forwardIN5adept3GapEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %3) #9
  %4 = bitcast %"struct.adept::Gap"* %2 to i8*
  %5 = bitcast %"struct.adept::Gap"* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 4 %5, i64 8, i1 false), !tbaa.struct !291
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE9_M_insertIJS2_EEEvSt14_List_iteratorIS2_EDpOT_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this, %"struct.std::__detail::_List_node_base"* %__position.coerce, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %__args) #0 comdat align 2 {
entry:
  %__position = alloca %"struct.std::_List_iterator", align 8
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  %__args.addr = alloca %"struct.adept::Gap"*, align 8
  %__tmp = alloca %"struct.std::_List_node"*, align 8
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %__position, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %__position.coerce, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Gap"* %__args, %"struct.adept::Gap"** %__args.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"struct.std::_List_node"** %__tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %__args.addr, align 8, !tbaa !2
  %call = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZSt7forwardIN5adept3GapEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %1) #9
  %call2 = call %"struct.std::_List_node"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE14_M_create_nodeIJS2_EEEPSt10_List_nodeIS2_EDpOT_(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this1, %"struct.adept::Gap"* nonnull align 4 dereferenceable(8) %call)
  store %"struct.std::_List_node"* %call2, %"struct.std::_List_node"** %__tmp, align 8, !tbaa !2
  %2 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %__tmp, align 8, !tbaa !2
  %3 = bitcast %"struct.std::_List_node"* %2 to %"struct.std::__detail::_List_node_base"*
  %_M_node = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %__position, i32 0, i32 0
  %4 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !151
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* nonnull dereferenceable(16) %3, %"struct.std::__detail::_List_node_base"* %4) #9
  %5 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_inc_sizeEm(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %5, i64 1)
  %6 = bitcast %"struct.std::_List_node"** %__tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt20_List_const_iteratorIN5adept3GapEEC2EPKNSt8__detail15_List_node_baseE(%"struct.std::_List_const_iterator"* nonnull dereferenceable(8) %this, %"struct.std::__detail::_List_node_base"* %__x) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_List_const_iterator"*, align 8
  %__x.addr = alloca %"struct.std::__detail::_List_node_base"*, align 8
  store %"struct.std::_List_const_iterator"* %this, %"struct.std::_List_const_iterator"** %this.addr, align 8, !tbaa !2
  store %"struct.std::__detail::_List_node_base"* %__x, %"struct.std::__detail::_List_node_base"** %__x.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %this.addr, align 8
  %_M_node = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %__x.addr, align 8, !tbaa !2
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %_M_node, align 8, !tbaa !152
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Gap"* @_ZNKSt10_List_nodeIN5adept3GapEE9_M_valptrEv(%"struct.std::_List_node"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_List_node"*, align 8
  store %"struct.std::_List_node"* %this, %"struct.std::_List_node"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %this.addr, align 8
  %_M_storage = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %this1, i32 0, i32 1
  %call = call %"struct.adept::Gap"* @_ZNK9__gnu_cxx16__aligned_membufIN5adept3GapEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* nonnull dereferenceable(8) %_M_storage) #9
  ret %"struct.adept::Gap"* %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Gap"* @_ZNK9__gnu_cxx16__aligned_membufIN5adept3GapEE6_M_ptrEv(%"struct.__gnu_cxx::__aligned_membuf"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %this, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8
  %call = call i8* @_ZNK9__gnu_cxx16__aligned_membufIN5adept3GapEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* nonnull dereferenceable(8) %this1) #9
  %0 = bitcast i8* %call to %"struct.adept::Gap"*
  ret %"struct.adept::Gap"* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i8* @_ZNK9__gnu_cxx16__aligned_membufIN5adept3GapEE7_M_addrEv(%"struct.__gnu_cxx::__aligned_membuf"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.__gnu_cxx::__aligned_membuf"*, align 8
  store %"struct.__gnu_cxx::__aligned_membuf"* %this, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.__gnu_cxx::__aligned_membuf"*, %"struct.__gnu_cxx::__aligned_membuf"** %this.addr, align 8
  %_M_storage = getelementptr inbounds %"struct.__gnu_cxx::__aligned_membuf", %"struct.__gnu_cxx::__aligned_membuf"* %this1, i32 0, i32 0
  %0 = bitcast [8 x i8]* %_M_storage to i8*
  ret i8* %0
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertIPKvEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8), i8*) #2

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE13_M_node_countEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"class.std::__cxx11::list"* %this1 to %"class.std::__cxx11::_List_base"*
  %call = call i64 @_ZNKSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_get_sizeEv(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %0)
  ret i64 %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNKSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE11_M_get_sizeEv(%"class.std::__cxx11::_List_base"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %this, %"class.std::__cxx11::_List_base"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %this1, i32 0, i32 0
  %_M_node = getelementptr inbounds %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl", %"struct.std::__cxx11::_List_base<adept::Gap, std::allocator<adept::Gap>>::_List_impl"* %_M_impl, i32 0, i32 0
  %_M_size = getelementptr inbounds %"struct.std::__detail::_List_node_header", %"struct.std::__detail::_List_node_header"* %_M_node, i32 0, i32 1
  %0 = load i64, i64* %_M_size, align 8, !tbaa !283
  ret i64 %0
}

declare dso_local nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSo9_M_insertImEERSoT_(%"class.std::basic_ostream"* nonnull dereferenceable(8), i64) #2

; Function Attrs: nounwind
declare dso_local i32 @posix_memalign(i8**, i64, i64) #4

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt9bad_allocC2Ev(%"class.std::bad_alloc"* nonnull dereferenceable(8) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::bad_alloc"*, align 8
  store %"class.std::bad_alloc"* %this, %"class.std::bad_alloc"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::bad_alloc"*, %"class.std::bad_alloc"** %this.addr, align 8
  %0 = bitcast %"class.std::bad_alloc"* %this1 to %"class.std::exception"*
  call void @_ZNSt9exceptionC2Ev(%"class.std::exception"* nonnull dereferenceable(8) %0) #9
  %1 = bitcast %"class.std::bad_alloc"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt9bad_alloc, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !53
  ret void
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxxeqIPKiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESB_(%"class.__gnu_cxx::__normal_iterator.44"* nonnull align 8 dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator.44"* nonnull align 8 dereferenceable(8) %__rhs) #12 comdat {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.44"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.44"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.44"* %__lhs, %"class.__gnu_cxx::__normal_iterator.44"** %__lhs.addr, align 8, !tbaa !2
  store %"class.__gnu_cxx::__normal_iterator.44"* %__rhs, %"class.__gnu_cxx::__normal_iterator.44"** %__rhs.addr, align 8, !tbaa !2
  %0 = load %"class.__gnu_cxx::__normal_iterator.44"*, %"class.__gnu_cxx::__normal_iterator.44"** %__lhs.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.44"* nonnull dereferenceable(8) %0) #9
  %1 = load i32*, i32** %call, align 8, !tbaa !2
  %2 = load %"class.__gnu_cxx::__normal_iterator.44"*, %"class.__gnu_cxx::__normal_iterator.44"** %__rhs.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.44"* nonnull dereferenceable(8) %2) #9
  %3 = load i32*, i32** %call1, align 8, !tbaa !2
  %cmp = icmp eq i32* %1, %3
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32* @_ZNKSt6vectorIiSaIiEE5beginEv(%"class.std::vector.8"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.44", align 8
  %this.addr = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %1, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.44"* nonnull dereferenceable(8) %retval, i32** nonnull align 8 dereferenceable(8) %_M_start) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.44", %"class.__gnu_cxx::__normal_iterator.44"* %retval, i32 0, i32 0
  %2 = load i32*, i32** %coerce.dive, align 8
  ret i32* %2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32* @_ZNKSt6vectorIiSaIiEE3endEv(%"class.std::vector.8"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.44", align 8
  %this.addr = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %this, %"class.std::vector.8"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.8"*, %"class.std::vector.8"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.8"* %this1 to %"struct.std::_Vector_base.9"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data", %"struct.std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data"* %1, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.44"* nonnull dereferenceable(8) %retval, i32** nonnull align 8 dereferenceable(8) %_M_finish) #9
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.44", %"class.__gnu_cxx::__normal_iterator.44"* %retval, i32 0, i32 0
  %2 = load i32*, i32** %coerce.dive, align 8
  ret i32* %2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.44"* nonnull dereferenceable(8) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.44"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.44"* %this, %"class.__gnu_cxx::__normal_iterator.44"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::__normal_iterator.44"*, %"class.__gnu_cxx::__normal_iterator.44"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.44", %"class.__gnu_cxx::__normal_iterator.44"* %this1, i32 0, i32 0
  ret i32** %_M_current
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEC2ERKS2_(%"class.__gnu_cxx::__normal_iterator.44"* nonnull dereferenceable(8) %this, i32** nonnull align 8 dereferenceable(8) %__i) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.44"*, align 8
  %__i.addr = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.44"* %this, %"class.__gnu_cxx::__normal_iterator.44"** %this.addr, align 8, !tbaa !2
  store i32** %__i, i32*** %__i.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::__normal_iterator.44"*, %"class.__gnu_cxx::__normal_iterator.44"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.44", %"class.__gnu_cxx::__normal_iterator.44"* %this1, i32 0, i32 0
  %0 = load i32**, i32*** %__i.addr, align 8, !tbaa !2
  %1 = load i32*, i32** %0, align 8, !tbaa !2
  store i32* %1, i32** %_M_current, align 8, !tbaa !292
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEEC2Ev(%"class.__gnu_cxx::new_allocator.33"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %this, %"class.__gnu_cxx::new_allocator.33"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %this.addr, align 8
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE17_S_check_init_lenEmRKS3_(i64 %__n, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %__a) #0 comdat align 2 {
entry:
  %__n.addr = alloca i64, align 8
  %__a.addr = alloca %"class.std::allocator.32"*, align 8
  %ref.tmp = alloca %"class.std::allocator.32", align 1
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store %"class.std::allocator.32"* %__a, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %1 = bitcast %"class.std::allocator.32"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  %2 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSaIN5adept5BlockILi2EdEEEC2ERKS2_(%"class.std::allocator.32"* nonnull dereferenceable(1) %ref.tmp, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %2) #9
  %call = call i64 @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %ref.tmp) #9
  %cmp = icmp ugt i64 %0, %call
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.33"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEED2Ev to void (%"class.std::allocator.32"*)*)(%"class.std::allocator.32"* nonnull dereferenceable(1) %ref.tmp) #9
  %3 = bitcast %"class.std::allocator.32"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %3) #9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.123, i64 0, i64 0)) #31
  unreachable

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %__n.addr, align 8, !tbaa !13
  ret i64 %4
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %this, i64 %__n, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.31"*, align 8
  %__n.addr = alloca i64, align 8
  %__a.addr = alloca %"class.std::allocator.32"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"struct.std::_Vector_base.31"* %this, %"struct.std::_Vector_base.31"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store %"class.std::allocator.32"* %__a, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.31"*, %"struct.std::_Vector_base.31"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  %0 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %0) #9
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  invoke void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %this1, i64 %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.33"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEED2Ev to void (%"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE21_M_default_initializeEm(%"class.std::vector.30"* nonnull dereferenceable(24) %this, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.30"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.30"* %this, %"class.std::vector.30"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::vector.30"*, %"class.std::vector.30"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load %"struct.adept::Block"*, %"struct.adept::Block"** %_M_start, align 8, !tbaa !200
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %4 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.32"* @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %4) #9
  %call2 = call %"struct.adept::Block"* @_ZSt27__uninitialized_default_n_aIPN5adept5BlockILi2EdEEmS2_ET_S4_T0_RSaIT1_E(%"struct.adept::Block"* %2, i64 %3, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %call)
  %5 = bitcast %"class.std::vector.30"* %this1 to %"struct.std::_Vector_base.31"*
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %5, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl3 to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %6, i32 0, i32 1
  store %"struct.adept::Block"* %call2, %"struct.adept::Block"** %_M_finish, align 8, !tbaa !198
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EED2Ev(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.31"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"struct.std::_Vector_base.31"* %this, %"struct.std::_Vector_base.31"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.31"*, %"struct.std::_Vector_base.31"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %0, i32 0, i32 0
  %1 = load %"struct.adept::Block"*, %"struct.adept::Block"** %_M_start, align 8, !tbaa !200
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %2, i32 0, i32 2
  %3 = load %"struct.adept::Block"*, %"struct.adept::Block"** %_M_end_of_storage, align 8, !tbaa !294
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl3 to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %4, i32 0, i32 0
  %5 = load %"struct.adept::Block"*, %"struct.adept::Block"** %_M_start4, align 8, !tbaa !200
  %sub.ptr.lhs.cast = ptrtoint %"struct.adept::Block"* %3 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.adept::Block"* %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  invoke void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %this1, %"struct.adept::Block"* %1, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.33"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEED2Ev to void (%"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl5) #9
  ret void

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.33"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEED2Ev to void (%"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl6) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt6vectorIN5adept5BlockILi2EdEESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %__a) #8 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.32"*, align 8
  %__diffmax = alloca i64, align 8
  %__allocmax = alloca i64, align 8
  store %"class.std::allocator.32"* %__a, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %0 = bitcast i64* %__diffmax to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  store i64 576460752303423487, i64* %__diffmax, align 8, !tbaa !13
  %1 = bitcast i64* %__allocmax to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %call = call i64 @_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8max_sizeERKS3_(%"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %2) #9
  store i64 %call, i64* %__allocmax, align 8, !tbaa !13
  %call1 = call nonnull align 8 dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %__diffmax, i64* nonnull align 8 dereferenceable(8) %__allocmax)
  %3 = load i64, i64* %call1, align 8, !tbaa !13
  %4 = bitcast i64* %__allocmax to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #9
  %5 = bitcast i64* %__diffmax to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  ret i64 %3
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSaIN5adept5BlockILi2EdEEEC2ERKS2_(%"class.std::allocator.32"* nonnull dereferenceable(1) %this, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.32"*, align 8
  %__a.addr = alloca %"class.std::allocator.32"*, align 8
  store %"class.std::allocator.32"* %this, %"class.std::allocator.32"** %this.addr, align 8, !tbaa !2
  store %"class.std::allocator.32"* %__a, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.32"* %this1 to %"class.__gnu_cxx::new_allocator.33"*
  %1 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %2 = bitcast %"class.std::allocator.32"* %1 to %"class.__gnu_cxx::new_allocator.33"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.33"* nonnull dereferenceable(1) %0, %"class.__gnu_cxx::new_allocator.33"* nonnull align 1 dereferenceable(1) %2) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8max_sizeERKS3_(%"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %__a) #8 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.32"*, align 8
  store %"class.std::allocator.32"* %__a, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %0 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.32"* %0 to %"class.__gnu_cxx::new_allocator.33"*
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.33"* nonnull dereferenceable(1) %1) #9
  ret i64 %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.33"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %this, %"class.__gnu_cxx::new_allocator.33"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %this.addr, align 8
  ret i64 576460752303423487
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.33"* nonnull dereferenceable(1) %this, %"class.__gnu_cxx::new_allocator.33"* nonnull align 1 dereferenceable(1) %0) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  %.addr = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %this, %"class.__gnu_cxx::new_allocator.33"** %this.addr, align 8, !tbaa !2
  store %"class.__gnu_cxx::new_allocator.33"* %0, %"class.__gnu_cxx::new_allocator.33"** %.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* nonnull dereferenceable(24) %this, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"*, align 8
  %__a.addr = alloca %"class.std::allocator.32"*, align 8
  store %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %this, %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"** %this.addr, align 8, !tbaa !2
  store %"class.std::allocator.32"* %__a, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"*, %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %this1 to %"class.std::allocator.32"*
  %1 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSaIN5adept5BlockILi2EdEEEC2ERKS2_(%"class.std::allocator.32"* nonnull dereferenceable(1) %0, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %1) #9
  %2 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %this1 to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  call void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* nonnull dereferenceable(24) %2) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %this, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.31"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.31"* %this, %"struct.std::_Vector_base.31"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"struct.std::_Vector_base.31"*, %"struct.std::_Vector_base.31"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"struct.adept::Block"* @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %this1, i64 %0)
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %1, i32 0, i32 0
  store %"struct.adept::Block"* %call, %"struct.adept::Block"** %_M_start, align 8, !tbaa !200
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_start3 = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %2, i32 0, i32 0
  %3 = load %"struct.adept::Block"*, %"struct.adept::Block"** %_M_start3, align 8, !tbaa !200
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl4 to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %4, i32 0, i32 1
  store %"struct.adept::Block"* %3, %"struct.adept::Block"** %_M_finish, align 8, !tbaa !198
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl5 to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_start6 = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %5, i32 0, i32 0
  %6 = load %"struct.adept::Block"*, %"struct.adept::Block"** %_M_start6, align 8, !tbaa !200
  %7 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %6, i64 %7
  %_M_impl7 = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl7 to %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %8, i32 0, i32 2
  store %"struct.adept::Block"* %add.ptr, %"struct.adept::Block"** %_M_end_of_storage, align 8, !tbaa !294
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEED2Ev(%"class.__gnu_cxx::new_allocator.33"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %this, %"class.__gnu_cxx::new_allocator.33"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %this, %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"*, %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"** %this.addr, align 8
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %this1, i32 0, i32 0
  store %"struct.adept::Block"* null, %"struct.adept::Block"** %_M_start, align 8, !tbaa !200
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %this1, i32 0, i32 1
  store %"struct.adept::Block"* null, %"struct.adept::Block"** %_M_finish, align 8, !tbaa !198
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl_data"* %this1, i32 0, i32 2
  store %"struct.adept::Block"* null, %"struct.adept::Block"** %_M_end_of_storage, align 8, !tbaa !294
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Block"* @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %this, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.31"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.31"* %this, %"struct.std::_Vector_base.31"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"struct.std::_Vector_base.31"*, %"struct.std::_Vector_base.31"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl to %"class.std::allocator.32"*
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"struct.adept::Block"* @_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m(%"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %1, i64 %2)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %"struct.adept::Block"* [ %call, %cond.true ], [ null, %cond.false ]
  ret %"struct.adept::Block"* %cond
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Block"* @_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE8allocateERS3_m(%"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %__a, i64 %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.32"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.32"* %__a, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.32"* %0 to %"class.__gnu_cxx::new_allocator.33"*
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"struct.adept::Block"* @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.33"* nonnull dereferenceable(1) %1, i64 %2, i8* null)
  ret %"struct.adept::Block"* %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Block"* @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.33"* nonnull dereferenceable(1) %this, i64 %__n, i8* %0) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %this, %"class.__gnu_cxx::new_allocator.33"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store i8* %0, i8** %.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.33"* nonnull dereferenceable(1) %this1) #9
  %cmp = icmp ugt i64 %1, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #31
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %mul = mul i64 %2, 16
  %call2 = call noalias nonnull i8* @_Znwm(i64 %mul) #34
  %3 = bitcast i8* %call2 to %"struct.adept::Block"*
  ret %"struct.adept::Block"* %3
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Block"* @_ZSt27__uninitialized_default_n_aIPN5adept5BlockILi2EdEEmS2_ET_S4_T0_RSaIT1_E(%"struct.adept::Block"* %__first, i64 %__n, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %0) #5 comdat {
entry:
  %__first.addr = alloca %"struct.adept::Block"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca %"class.std::allocator.32"*, align 8
  store %"struct.adept::Block"* %__first, %"struct.adept::Block"** %__first.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %.addr, align 8, !tbaa !2
  %1 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__first.addr, align 8, !tbaa !2
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"struct.adept::Block"* @_ZSt25__uninitialized_default_nIPN5adept5BlockILi2EdEEmET_S4_T0_(%"struct.adept::Block"* %1, i64 %2)
  ret %"struct.adept::Block"* %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator.32"* @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.31"*, align 8
  store %"struct.std::_Vector_base.31"* %this, %"struct.std::_Vector_base.31"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.31"*, %"struct.std::_Vector_base.31"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl to %"class.std::allocator.32"*
  ret %"class.std::allocator.32"* %0
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Block"* @_ZSt25__uninitialized_default_nIPN5adept5BlockILi2EdEEmET_S4_T0_(%"struct.adept::Block"* %__first, i64 %__n) #5 comdat {
entry:
  %__first.addr = alloca %"struct.adept::Block"*, align 8
  %__n.addr = alloca i64, align 8
  %__assignable = alloca i8, align 1
  store %"struct.adept::Block"* %__first, %"struct.adept::Block"** %__first.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %__assignable) #9
  store i8 1, i8* %__assignable, align 1, !tbaa !18
  %0 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__first.addr, align 8, !tbaa !2
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"struct.adept::Block"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN5adept5BlockILi2EdEEmEET_S6_T0_(%"struct.adept::Block"* %0, i64 %1)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %__assignable) #9
  ret %"struct.adept::Block"* %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Block"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN5adept5BlockILi2EdEEmEET_S6_T0_(%"struct.adept::Block"* %__first, i64 %__n) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__first.addr = alloca %"struct.adept::Block"*, align 8
  %__n.addr = alloca i64, align 8
  %__cur = alloca %"struct.adept::Block"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"struct.adept::Block"* %__first, %"struct.adept::Block"** %__first.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = bitcast %"struct.adept::Block"** %__cur to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__first.addr, align 8, !tbaa !2
  store %"struct.adept::Block"* %1, %"struct.adept::Block"** %__cur, align 8, !tbaa !2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %cmp = icmp ugt i64 %2, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__cur, align 8, !tbaa !2
  %call = call %"struct.adept::Block"* @_ZSt11__addressofIN5adept5BlockILi2EdEEEPT_RS3_(%"struct.adept::Block"* nonnull align 8 dereferenceable(16) %3) #9
  invoke void @_ZSt10_ConstructIN5adept5BlockILi2EdEEJEEvPT_DpOT0_(%"struct.adept::Block"* %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont
  %4 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %dec = add i64 %4, -1
  store i64 %dec, i64* %__n.addr, align 8, !tbaa !13
  %5 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__cur, align 8, !tbaa !2
  %incdec.ptr = getelementptr inbounds %"struct.adept::Block", %"struct.adept::Block"* %5, i32 1
  store %"struct.adept::Block"* %incdec.ptr, %"struct.adept::Block"** %__cur, align 8, !tbaa !2
  br label %for.cond, !llvm.loop !295

lpad:                                             ; preds = %for.body
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %9 = call i8* @__cxa_begin_catch(i8* %exn) #9
  %10 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__first.addr, align 8, !tbaa !2
  %11 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__cur, align 8, !tbaa !2
  invoke void @_ZSt8_DestroyIPN5adept5BlockILi2EdEEEvT_S4_(%"struct.adept::Block"* %10, %"struct.adept::Block"* %11)
          to label %invoke.cont2 unwind label %lpad1

invoke.cont2:                                     ; preds = %catch
  invoke void @__cxa_rethrow() #31
          to label %unreachable unwind label %lpad1

for.end:                                          ; preds = %for.cond
  %12 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__cur, align 8, !tbaa !2
  %13 = bitcast %"struct.adept::Block"** %__cur to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #9
  ret %"struct.adept::Block"* %12

lpad1:                                            ; preds = %invoke.cont2, %catch
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %exn.slot, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont3 unwind label %terminate.lpad

invoke.cont3:                                     ; preds = %lpad1
  %17 = bitcast %"struct.adept::Block"** %__cur to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  br label %eh.resume

try.cont:                                         ; No predecessors!
  unreachable

eh.resume:                                        ; preds = %invoke.cont3
  %exn4 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn4, 0
  %lpad.val5 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val5

terminate.lpad:                                   ; preds = %lpad1
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  call void @__clang_call_terminate(i8* %19) #29
  unreachable

unreachable:                                      ; preds = %invoke.cont2
  unreachable
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt10_ConstructIN5adept5BlockILi2EdEEJEEvPT_DpOT0_(%"struct.adept::Block"* %__p) #5 comdat {
entry:
  %__p.addr = alloca %"struct.adept::Block"*, align 8
  store %"struct.adept::Block"* %__p, %"struct.adept::Block"** %__p.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__p.addr, align 8, !tbaa !2
  %1 = bitcast %"struct.adept::Block"* %0 to i8*
  %2 = bitcast i8* %1 to %"struct.adept::Block"*
  call void @_ZN5adept5BlockILi2EdEC2Ev(%"struct.adept::Block"* nonnull dereferenceable(16) %2)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local %"struct.adept::Block"* @_ZSt11__addressofIN5adept5BlockILi2EdEEEPT_RS3_(%"struct.adept::Block"* nonnull align 8 dereferenceable(16) %__r) #12 comdat {
entry:
  %__r.addr = alloca %"struct.adept::Block"*, align 8
  store %"struct.adept::Block"* %__r, %"struct.adept::Block"** %__r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__r.addr, align 8, !tbaa !2
  ret %"struct.adept::Block"* %0
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt8_DestroyIPN5adept5BlockILi2EdEEEvT_S4_(%"struct.adept::Block"* %__first, %"struct.adept::Block"* %__last) #5 comdat {
entry:
  %__first.addr = alloca %"struct.adept::Block"*, align 8
  %__last.addr = alloca %"struct.adept::Block"*, align 8
  store %"struct.adept::Block"* %__first, %"struct.adept::Block"** %__first.addr, align 8, !tbaa !2
  store %"struct.adept::Block"* %__last, %"struct.adept::Block"** %__last.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__first.addr, align 8, !tbaa !2
  %1 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__last.addr, align 8, !tbaa !2
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5adept5BlockILi2EdEEEEvT_S6_(%"struct.adept::Block"* %0, %"struct.adept::Block"* %1)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5adept5BlockILi2EdEEEEvT_S6_(%"struct.adept::Block"* %0, %"struct.adept::Block"* %1) #8 comdat align 2 {
entry:
  %.addr = alloca %"struct.adept::Block"*, align 8
  %.addr1 = alloca %"struct.adept::Block"*, align 8
  store %"struct.adept::Block"* %0, %"struct.adept::Block"** %.addr, align 8, !tbaa !2
  store %"struct.adept::Block"* %1, %"struct.adept::Block"** %.addr1, align 8, !tbaa !2
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.31"* nonnull dereferenceable(24) %this, %"struct.adept::Block"* %__p, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.31"*, align 8
  %__p.addr = alloca %"struct.adept::Block"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.31"* %this, %"struct.std::_Vector_base.31"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Block"* %__p, %"struct.adept::Block"** %__p.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"struct.std::_Vector_base.31"*, %"struct.std::_Vector_base.31"** %this.addr, align 8
  %0 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__p.addr, align 8, !tbaa !2
  %tobool = icmp ne %"struct.adept::Block"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.31", %"struct.std::_Vector_base.31"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Block<2, double>, std::allocator<adept::Block<2, double>>>::_Vector_impl"* %_M_impl to %"class.std::allocator.32"*
  %2 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__p.addr, align 8, !tbaa !2
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE10deallocateERS3_PS2_m(%"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %1, %"struct.adept::Block"* %2, i64 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIN5adept5BlockILi2EdEEEE10deallocateERS3_PS2_m(%"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %__a, %"struct.adept::Block"* %__p, i64 %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.32"*, align 8
  %__p.addr = alloca %"struct.adept::Block"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.32"* %__a, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  store %"struct.adept::Block"* %__p, %"struct.adept::Block"** %__p.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load %"class.std::allocator.32"*, %"class.std::allocator.32"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.32"* %0 to %"class.__gnu_cxx::new_allocator.33"*
  %2 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__p.addr, align 8, !tbaa !2
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.33"* nonnull dereferenceable(1) %1, %"struct.adept::Block"* %2, i64 %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIN5adept5BlockILi2EdEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.33"* nonnull dereferenceable(1) %this, %"struct.adept::Block"* %__p, i64 %0) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.33"*, align 8
  %__p.addr = alloca %"struct.adept::Block"*, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.33"* %this, %"class.__gnu_cxx::new_allocator.33"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Block"* %__p, %"struct.adept::Block"** %__p.addr, align 8, !tbaa !2
  store i64 %0, i64* %.addr, align 8, !tbaa !13
  %this1 = load %"class.__gnu_cxx::new_allocator.33"*, %"class.__gnu_cxx::new_allocator.33"** %this.addr, align 8
  %1 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__p.addr, align 8, !tbaa !2
  %2 = bitcast %"struct.adept::Block"* %1 to i8*
  call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt8_DestroyIPN5adept5BlockILi2EdEES2_EvT_S4_RSaIT0_E(%"struct.adept::Block"* %__first, %"struct.adept::Block"* %__last, %"class.std::allocator.32"* nonnull align 1 dereferenceable(1) %0) #5 comdat {
entry:
  %__first.addr = alloca %"struct.adept::Block"*, align 8
  %__last.addr = alloca %"struct.adept::Block"*, align 8
  %.addr = alloca %"class.std::allocator.32"*, align 8
  store %"struct.adept::Block"* %__first, %"struct.adept::Block"** %__first.addr, align 8, !tbaa !2
  store %"struct.adept::Block"* %__last, %"struct.adept::Block"** %__last.addr, align 8, !tbaa !2
  store %"class.std::allocator.32"* %0, %"class.std::allocator.32"** %.addr, align 8, !tbaa !2
  %1 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__first.addr, align 8, !tbaa !2
  %2 = load %"struct.adept::Block"*, %"struct.adept::Block"** %__last.addr, align 8, !tbaa !2
  call void @_ZSt8_DestroyIPN5adept5BlockILi2EdEEEvT_S4_(%"struct.adept::Block"* %1, %"struct.adept::Block"* %2)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define available_externally dso_local i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this) #8 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %call = call i8* @_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1)
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal13GradientIndexILb0EEC2Ei(%"struct.adept::internal::GradientIndex"* nonnull dereferenceable(1) %this, i32 %val) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::GradientIndex"*, align 8
  %val.addr = alloca i32, align 4
  store %"struct.adept::internal::GradientIndex"* %this, %"struct.adept::internal::GradientIndex"** %this.addr, align 8, !tbaa !2
  store i32 %val, i32* %val.addr, align 4, !tbaa !20
  %this1 = load %"struct.adept::internal::GradientIndex"*, %"struct.adept::internal::GradientIndex"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept14ExpressionSizeILi1EEC2Ev(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::ExpressionSize.37"*, align 8
  store %"class.adept::ExpressionSize.37"* %this, %"class.adept::ExpressionSize.37"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::ExpressionSize.37"*, %"class.adept::ExpressionSize.37"** %this.addr, align 8
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5ArrayILi1EdLb0EE7resize_ILi1EEENS_8internal9enable_ifIXeqLi1ET_EvE4typeEiiiiiii(%"class.adept::Array.38"* nonnull dereferenceable(24) %this, i32 %m0, i32 %m1, i32 %m2, i32 %m3, i32 %m4, i32 %m5, i32 %m6) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Array.38"*, align 8
  %m0.addr = alloca i32, align 4
  %m1.addr = alloca i32, align 4
  %m2.addr = alloca i32, align 4
  %m3.addr = alloca i32, align 4
  %m4.addr = alloca i32, align 4
  %m5.addr = alloca i32, align 4
  %m6.addr = alloca i32, align 4
  %dim = alloca [7 x i32], align 16
  store %"class.adept::Array.38"* %this, %"class.adept::Array.38"** %this.addr, align 8, !tbaa !2
  store i32 %m0, i32* %m0.addr, align 4, !tbaa !20
  store i32 %m1, i32* %m1.addr, align 4, !tbaa !20
  store i32 %m2, i32* %m2.addr, align 4, !tbaa !20
  store i32 %m3, i32* %m3.addr, align 4, !tbaa !20
  store i32 %m4, i32* %m4.addr, align 4, !tbaa !20
  store i32 %m5, i32* %m5.addr, align 4, !tbaa !20
  store i32 %m6, i32* %m6.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::Array.38"*, %"class.adept::Array.38"** %this.addr, align 8
  %0 = bitcast [7 x i32]* %dim to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* %0) #9
  %arrayinit.begin = getelementptr inbounds [7 x i32], [7 x i32]* %dim, i64 0, i64 0
  %1 = load i32, i32* %m0.addr, align 4, !tbaa !20
  store i32 %1, i32* %arrayinit.begin, align 4, !tbaa !20
  %arrayinit.element = getelementptr inbounds i32, i32* %arrayinit.begin, i64 1
  %2 = load i32, i32* %m1.addr, align 4, !tbaa !20
  store i32 %2, i32* %arrayinit.element, align 4, !tbaa !20
  %arrayinit.element2 = getelementptr inbounds i32, i32* %arrayinit.element, i64 1
  %3 = load i32, i32* %m2.addr, align 4, !tbaa !20
  store i32 %3, i32* %arrayinit.element2, align 4, !tbaa !20
  %arrayinit.element3 = getelementptr inbounds i32, i32* %arrayinit.element2, i64 1
  %4 = load i32, i32* %m3.addr, align 4, !tbaa !20
  store i32 %4, i32* %arrayinit.element3, align 4, !tbaa !20
  %arrayinit.element4 = getelementptr inbounds i32, i32* %arrayinit.element3, i64 1
  %5 = load i32, i32* %m4.addr, align 4, !tbaa !20
  store i32 %5, i32* %arrayinit.element4, align 4, !tbaa !20
  %arrayinit.element5 = getelementptr inbounds i32, i32* %arrayinit.element4, i64 1
  %6 = load i32, i32* %m5.addr, align 4, !tbaa !20
  store i32 %6, i32* %arrayinit.element5, align 4, !tbaa !20
  %arrayinit.element6 = getelementptr inbounds i32, i32* %arrayinit.element5, i64 1
  %7 = load i32, i32* %m6.addr, align 4, !tbaa !20
  store i32 %7, i32* %arrayinit.element6, align 4, !tbaa !20
  %arraydecay = getelementptr inbounds [7 x i32], [7 x i32]* %dim, i64 0, i64 0
  call void @_ZN5adept5ArrayILi1EdLb0EE6resizeEPKib(%"class.adept::Array.38"* nonnull dereferenceable(24) %this1, i32* %arraydecay, i1 zeroext false)
  %8 = bitcast [7 x i32]* %dim to i8*
  call void @llvm.lifetime.end.p0i8(i64 28, i8* %8) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5ArrayILi1EdLb0EE6resizeEPKib(%"class.adept::Array.38"* nonnull dereferenceable(24) %this, i32* %dim, i1 zeroext %force_contiguous) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Array.38"*, align 8
  %dim.addr = alloca i32*, align 8
  %force_contiguous.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp6 = alloca %"class.std::__cxx11::basic_string", align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %data_vol = alloca i32, align 4
  store %"class.adept::Array.38"* %this, %"class.adept::Array.38"** %this.addr, align 8, !tbaa !2
  store i32* %dim, i32** %dim.addr, align 8, !tbaa !2
  %frombool = zext i1 %force_contiguous to i8
  store i8 %frombool, i8* %force_contiguous.addr, align 1, !tbaa !18
  %this1 = load %"class.adept::Array.38"*, %"class.adept::Array.38"** %this.addr, align 8
  br label %do.body

do.body:                                          ; preds = %entry
  br label %do.end

do.end:                                           ; preds = %do.body
  %storage_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 1
  %0 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %storage_, align 8, !tbaa !220
  %tobool = icmp ne %"class.adept::Storage.24"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %do.end
  %storage_2 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %storage_2, align 8, !tbaa !220
  call void @_ZN5adept7StorageIdE11remove_linkEv(%"class.adept::Storage.24"* nonnull dereferenceable(20) %1)
  %storage_3 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 1
  store %"class.adept::Storage.24"* null, %"class.adept::Storage.24"** %storage_3, align 8, !tbaa !220
  br label %if.end

if.end:                                           ; preds = %if.then, %do.end
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !tbaa !20
  %cmp = icmp slt i32 %3, 1
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 4, i32* %cleanup.dest.slot, align 4
  br label %cleanup

for.body:                                         ; preds = %for.cond
  %4 = load i32*, i32** %dim.addr, align 8, !tbaa !2
  %5 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 %idxprom
  %6 = load i32, i32* %arrayidx, align 4, !tbaa !20
  %cmp4 = icmp slt i32 %6, 0
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %for.body
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %7 = bitcast i8* %exception to %"class.adept::invalid_dimension"*
  %8 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %8) #9
  %9 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %9) #9
  invoke void @_ZN5adept8internal18exception_locationB5cxx11EPKci(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp6, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.126, i64 0, i64 0), i32 1969)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then5
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.125, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp6)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %invoke.cont
  invoke void @_ZN5adept17invalid_dimensionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_dimension"* nonnull dereferenceable(40) %7, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont10 unwind label %lpad9

invoke.cont10:                                    ; preds = %invoke.cont8
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_dimensionE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad9

lpad:                                             ; preds = %if.then5
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %exn.slot, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %ehselector.slot, align 4
  br label %ehcleanup11

lpad7:                                            ; preds = %invoke.cont
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %exn.slot, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad9:                                            ; preds = %invoke.cont10, %invoke.cont8
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %exn.slot, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad9, %lpad7
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp6) #9
  br label %ehcleanup11

ehcleanup11:                                      ; preds = %ehcleanup, %lpad
  %19 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp6 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %19) #9
  %20 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %20) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup11
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup11
  %21 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #9
  br label %eh.resume

if.else:                                          ; preds = %for.body
  %22 = load i32*, i32** %dim.addr, align 8, !tbaa !2
  %23 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom14 = sext i32 %23 to i64
  %arrayidx15 = getelementptr inbounds i32, i32* %22, i64 %idxprom14
  %24 = load i32, i32* %arrayidx15, align 4, !tbaa !20
  %cmp16 = icmp eq i32 %24, 0
  br i1 %cmp16, label %if.then17, label %if.end18

if.then17:                                        ; preds = %if.else
  call void @_ZN5adept5ArrayILi1EdLb0EE5clearEv(%"class.adept::Array.38"* nonnull dereferenceable(24) %this1)
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup

if.end18:                                         ; preds = %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18
  br label %for.inc

for.inc:                                          ; preds = %if.end19
  %25 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !296

cleanup:                                          ; preds = %if.then17, %for.cond.cleanup
  %26 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %26) #9
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 4, label %for.end
    i32 1, label %return
  ]

for.end:                                          ; preds = %cleanup
  %dimensions_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 2
  %27 = load i32*, i32** %dim.addr, align 8, !tbaa !2
  call void @_ZN5adept14ExpressionSizeILi1EE4copyEPKi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %dimensions_, i32* %27)
  %28 = load i8, i8* %force_contiguous.addr, align 1, !tbaa !18, !range !27
  %tobool21 = trunc i8 %28 to i1
  br i1 %tobool21, label %if.then22, label %if.else23

if.then22:                                        ; preds = %for.end
  call void @_ZN5adept5ArrayILi1EdLb0EE16pack_contiguous_Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %this1)
  br label %if.end24

if.else23:                                        ; preds = %for.end
  call void @_ZN5adept5ArrayILi1EdLb0EE5pack_Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %this1)
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then22
  %29 = bitcast i32* %data_vol to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #9
  %30 = load i8, i8* @_ZN5adept8internal21array_row_major_orderE, align 1, !tbaa !18, !range !27
  %tobool25 = trunc i8 %30 to i1
  br i1 %tobool25, label %if.then26, label %if.else29

if.then26:                                        ; preds = %if.end24
  %offset_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 3
  %call = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %offset_, i32 0)
  %31 = load i32, i32* %call, align 4, !tbaa !20
  %dimensions_27 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 2
  %call28 = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %dimensions_27, i32 0)
  %32 = load i32, i32* %call28, align 4, !tbaa !20
  %mul = mul nsw i32 %31, %32
  store i32 %mul, i32* %data_vol, align 4, !tbaa !20
  br label %if.end31

if.else29:                                        ; preds = %if.end24
  %call30 = call i32 @_ZNK5adept5ArrayILi1EdLb0EE4sizeEv(%"class.adept::Array.38"* nonnull dereferenceable(24) %this1)
  store i32 %call30, i32* %data_vol, align 4, !tbaa !20
  br label %if.end31

if.end31:                                         ; preds = %if.else29, %if.then26
  %call32 = call noalias nonnull i8* @_Znwm(i64 24) #33
  %33 = bitcast i8* %call32 to %"class.adept::Storage.24"*
  %34 = load i32, i32* %data_vol, align 4, !tbaa !20
  invoke void @_ZN5adept7StorageIdEC2Eib(%"class.adept::Storage.24"* nonnull dereferenceable(20) %33, i32 %34, i1 zeroext false)
          to label %invoke.cont34 unwind label %lpad33

invoke.cont34:                                    ; preds = %if.end31
  %storage_36 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 1
  store %"class.adept::Storage.24"* %33, %"class.adept::Storage.24"** %storage_36, align 8, !tbaa !220
  %storage_37 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 1
  %35 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %storage_37, align 8, !tbaa !220
  %call38 = call double* @_ZN5adept7StorageIdE4dataEv(%"class.adept::Storage.24"* nonnull dereferenceable(20) %35)
  %data_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 0
  store double* %call38, double** %data_, align 8, !tbaa !223
  %36 = bitcast %"class.adept::Array.38"* %this1 to %"struct.adept::internal::GradientIndex"*
  %data_39 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 0
  %37 = load double*, double** %data_39, align 8, !tbaa !223
  %storage_40 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 1
  %38 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %storage_40, align 8, !tbaa !220
  call void @_ZN5adept8internal13GradientIndexILb0EE3setIdEEvPKT_PKNS_7StorageIS4_EE(%"struct.adept::internal::GradientIndex"* nonnull dereferenceable(1) %36, double* %37, %"class.adept::Storage.24"* %38)
  %39 = bitcast i32* %data_vol to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %39) #9
  br label %return

return:                                           ; preds = %invoke.cont34, %cleanup
  ret void

lpad33:                                           ; preds = %if.end31
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %exn.slot, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call32) #32
  %43 = bitcast i32* %data_vol to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %43) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad33, %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val42 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val42

unreachable:                                      ; preds = %cleanup, %invoke.cont10
  unreachable
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept7StorageIdE11remove_linkEv(%"class.adept::Storage.24"* nonnull dereferenceable(20) %this) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Storage.24"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp2 = alloca %"class.std::__cxx11::basic_string", align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  store %"class.adept::Storage.24"* %this, %"class.adept::Storage.24"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %this.addr, align 8
  %n_links_ = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this1, i32 0, i32 2
  %0 = load i32, i32* %n_links_, align 4, !tbaa !297
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %1 = bitcast i8* %exception to %"class.adept::invalid_operation"*
  %2 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #9
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %3) #9
  invoke void @_ZN5adept8internal18exception_locationB5cxx11EPKci(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp2, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.128, i64 0, i64 0), i32 112)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  invoke void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %ref.tmp, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i64 0, i64 0), %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp2)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont
  invoke void @_ZN5adept17invalid_operationC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_operation"* nonnull dereferenceable(40) %1, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont6 unwind label %lpad5

invoke.cont6:                                     ; preds = %invoke.cont4
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept17invalid_operationE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad5

lpad:                                             ; preds = %if.then
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  br label %ehcleanup7

lpad3:                                            ; preds = %invoke.cont
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad5:                                            ; preds = %invoke.cont6, %invoke.cont4
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %exn.slot, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad5, %lpad3
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp2) #9
  br label %ehcleanup7

ehcleanup7:                                       ; preds = %ehcleanup, %lpad
  %13 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %13) #9
  %14 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %14) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup7
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup7
  br label %eh.resume

if.else:                                          ; preds = %entry
  %n_links_10 = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this1, i32 0, i32 2
  %15 = load i32, i32* %n_links_10, align 4, !tbaa !297
  %dec = add nsw i32 %15, -1
  store i32 %dec, i32* %n_links_10, align 4, !tbaa !297
  %cmp11 = icmp eq i32 %dec, 0
  br i1 %cmp11, label %if.then12, label %if.end

if.then12:                                        ; preds = %if.else
  %isnull = icmp eq %"class.adept::Storage.24"* %this1, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %if.then12
  call void @_ZN5adept7StorageIdED2Ev(%"class.adept::Storage.24"* nonnull dereferenceable(20) %this1) #9
  %16 = bitcast %"class.adept::Storage.24"* %this1 to i8*
  call void @_ZdlPv(i8* %16) #32
  br label %delete.end

delete.end:                                       ; preds = %delete.notnull, %if.then12
  br label %if.end

if.end:                                           ; preds = %delete.end, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end
  ret void

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val14 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val14

unreachable:                                      ; preds = %invoke.cont6
  unreachable
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, i8* %__lhs, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %__rhs) #5 comdat {
entry:
  %result.ptr = alloca i8*, align 8
  %__lhs.addr = alloca i8*, align 8
  %__rhs.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store i8* %__lhs, i8** %__lhs.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %__rhs, %"class.std::__cxx11::basic_string"** %__rhs.addr, align 8, !tbaa !2
  %1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %__rhs.addr, align 8, !tbaa !2
  %2 = load i8*, i8** %__lhs.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %1, i64 0, i8* %2)
  %call1 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %call) #9
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EOS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %agg.result, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %call1) #9
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal18exception_locationB5cxx11EPKci(%"class.std::__cxx11::basic_string"* noalias sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, i8* %file, i32 %line) #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %line.addr = alloca i32, align 4
  %s = alloca %"class.std::__cxx11::basic_stringstream", align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2
  store i32 %line, i32* %line.addr, align 4, !tbaa !20
  %1 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 392, i8* %1) #9
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %s)
  %2 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 16
  %3 = bitcast i8* %add.ptr to %"class.std::basic_ostream"*
  %call = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.129, i64 0, i64 0))
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %4 = load i8*, i8** %file.addr, align 8, !tbaa !2
  %call2 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call, i8* %4)
          to label %invoke.cont1 unwind label %lpad

invoke.cont1:                                     ; preds = %invoke.cont
  %call4 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.65, i64 0, i64 0))
          to label %invoke.cont3 unwind label %lpad

invoke.cont3:                                     ; preds = %invoke.cont1
  %5 = load i32, i32* %line.addr, align 4, !tbaa !20
  %call6 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* nonnull dereferenceable(8) %call4, i32 %5)
          to label %invoke.cont5 unwind label %lpad

invoke.cont5:                                     ; preds = %invoke.cont3
  %call8 = invoke nonnull align 8 dereferenceable(8) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* nonnull align 8 dereferenceable(8) %call6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.130, i64 0, i64 0))
          to label %invoke.cont7 unwind label %lpad

invoke.cont7:                                     ; preds = %invoke.cont5
  invoke void @_ZNKSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEE3strEv(%"class.std::__cxx11::basic_string"* sret(%"class.std::__cxx11::basic_string") align 8 %agg.result, %"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %s)
          to label %invoke.cont9 unwind label %lpad

invoke.cont9:                                     ; preds = %invoke.cont7
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %s) #9
  %6 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  call void @llvm.lifetime.end.p0i8(i64 392, i8* %6) #9
  ret void

lpad:                                             ; preds = %invoke.cont7, %invoke.cont5, %invoke.cont3, %invoke.cont1, %invoke.cont, %entry
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1118basic_stringstreamIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_stringstream"* nonnull dereferenceable(128) %s) #9
  %10 = bitcast %"class.std::__cxx11::basic_stringstream"* %s to i8*
  call void @llvm.lifetime.end.p0i8(i64 392, i8* %10) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val10 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val10
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept17invalid_dimensionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::invalid_dimension"* nonnull dereferenceable(40) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::invalid_dimension"*, align 8
  %message.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp2 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.adept::invalid_dimension"* %this, %"class.adept::invalid_dimension"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %message, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::invalid_dimension"*, %"class.adept::invalid_dimension"** %this.addr, align 8
  %0 = bitcast %"class.adept::invalid_dimension"* %this1 to %"class.adept::array_exception"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp2) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.115, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  invoke void @_ZN5adept15array_exceptionC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::array_exception"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp2) #9
  %3 = bitcast %"class.std::allocator.0"* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %3) #9
  %4 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %4) #9
  %5 = bitcast %"class.adept::invalid_dimension"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept17invalid_dimensionE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %5, align 8, !tbaa !53
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %7 = bitcast %"class.adept::invalid_dimension"* %this1 to %"class.adept::exception"*
  %message_ = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %7, i32 0, i32 1
  %call = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %6)
          to label %invoke.cont8 unwind label %lpad7

invoke.cont8:                                     ; preds = %invoke.cont4
  ret void

lpad:                                             ; preds = %entry
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad3:                                            ; preds = %invoke.cont
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  store i8* %12, i8** %exn.slot, align 8
  %13 = extractvalue { i8*, i32 } %11, 1
  store i32 %13, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad3, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp2) #9
  %14 = bitcast %"class.std::allocator.0"* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %14) #9
  %15 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %15) #9
  br label %eh.resume

lpad7:                                            ; preds = %invoke.cont4
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %exn.slot, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %ehselector.slot, align 4
  %19 = bitcast %"class.adept::invalid_dimension"* %this1 to %"class.adept::array_exception"*
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::array_exception"*)*)(%"class.adept::array_exception"* nonnull dereferenceable(40) %19) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad7, %ehcleanup
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val10 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val10
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5ArrayILi1EdLb0EE5clearEv(%"class.adept::Array.38"* nonnull dereferenceable(24) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Array.38"*, align 8
  store %"class.adept::Array.38"* %this, %"class.adept::Array.38"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Array.38"*, %"class.adept::Array.38"** %this.addr, align 8
  %storage_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 1
  %0 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %storage_, align 8, !tbaa !220
  %tobool = icmp ne %"class.adept::Storage.24"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %storage_2 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %storage_2, align 8, !tbaa !220
  call void @_ZN5adept7StorageIdE11remove_linkEv(%"class.adept::Storage.24"* nonnull dereferenceable(20) %1)
  %storage_3 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 1
  store %"class.adept::Storage.24"* null, %"class.adept::Storage.24"** %storage_3, align 8, !tbaa !220
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %data_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 0
  store double* null, double** %data_, align 8, !tbaa !223
  %dimensions_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 2
  call void @_ZN5adept14ExpressionSizeILi1EE7set_allEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %dimensions_, i32 0)
  %offset_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 3
  call void @_ZN5adept14ExpressionSizeILi1EE7set_allEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %offset_, i32 0)
  %2 = bitcast %"class.adept::Array.38"* %this1 to %"struct.adept::internal::GradientIndex"*
  call void @_ZN5adept8internal13GradientIndexILb0EE5clearEv(%"struct.adept::internal::GradientIndex"* nonnull dereferenceable(1) %2)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept14ExpressionSizeILi1EE4copyEPKi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %this, i32* %d) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::ExpressionSize.37"*, align 8
  %d.addr = alloca i32*, align 8
  %i = alloca i32, align 4
  store %"class.adept::ExpressionSize.37"* %this, %"class.adept::ExpressionSize.37"** %this.addr, align 8, !tbaa !2
  store i32* %d, i32** %d.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::ExpressionSize.37"*, %"class.adept::ExpressionSize.37"** %this.addr, align 8
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !20
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %2) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32*, i32** %d.addr, align 8, !tbaa !2
  %4 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds i32, i32* %3, i64 %idxprom
  %5 = load i32, i32* %arrayidx, align 4, !tbaa !20
  %dim = getelementptr inbounds %"class.adept::ExpressionSize.37", %"class.adept::ExpressionSize.37"* %this1, i32 0, i32 0
  %6 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom2 = sext i32 %6 to i64
  %arrayidx3 = getelementptr inbounds [1 x i32], [1 x i32]* %dim, i64 0, i64 %idxprom2
  store i32 %5, i32* %arrayidx3, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !299

for.end:                                          ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5ArrayILi1EdLb0EE16pack_contiguous_Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Array.38"*, align 8
  store %"class.adept::Array.38"* %this, %"class.adept::Array.38"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Array.38"*, %"class.adept::Array.38"** %this.addr, align 8
  %0 = load i8, i8* @_ZN5adept8internal21array_row_major_orderE, align 1, !tbaa !18, !range !27
  %tobool = trunc i8 %0 to i1
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @_ZN5adept5ArrayILi1EdLb0EE26pack_row_major_contiguous_Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %this1)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @_ZN5adept5ArrayILi1EdLb0EE18pack_column_major_Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %this1)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5ArrayILi1EdLb0EE5pack_Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Array.38"*, align 8
  store %"class.adept::Array.38"* %this, %"class.adept::Array.38"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Array.38"*, %"class.adept::Array.38"** %this.addr, align 8
  %0 = load i8, i8* @_ZN5adept8internal21array_row_major_orderE, align 1, !tbaa !18, !range !27
  %tobool = trunc i8 %0 to i1
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @_ZN5adept5ArrayILi1EdLb0EE15pack_row_major_Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %this1)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @_ZN5adept5ArrayILi1EdLb0EE18pack_column_major_Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %this1)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %this, i32 %i) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::ExpressionSize.37"*, align 8
  %i.addr = alloca i32, align 4
  store %"class.adept::ExpressionSize.37"* %this, %"class.adept::ExpressionSize.37"** %this.addr, align 8, !tbaa !2
  store i32 %i, i32* %i.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::ExpressionSize.37"*, %"class.adept::ExpressionSize.37"** %this.addr, align 8
  %dim = getelementptr inbounds %"class.adept::ExpressionSize.37", %"class.adept::ExpressionSize.37"* %this1, i32 0, i32 0
  %0 = load i32, i32* %i.addr, align 4, !tbaa !20
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [1 x i32], [1 x i32]* %dim, i64 0, i64 %idxprom
  ret i32* %arrayidx
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept5ArrayILi1EdLb0EE4sizeEv(%"class.adept::Array.38"* nonnull dereferenceable(24) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Array.38"*, align 8
  %s = alloca i32, align 4
  %i = alloca i32, align 4
  store %"class.adept::Array.38"* %this, %"class.adept::Array.38"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Array.38"*, %"class.adept::Array.38"** %this.addr, align 8
  %0 = bitcast i32* %s to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 1, i32* %s, align 4, !tbaa !20
  %1 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !tbaa !20
  %cmp = icmp slt i32 %2, 1
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %3 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %dimensions_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 2
  %4 = load i32, i32* %i, align 4, !tbaa !20
  %call = call nonnull align 4 dereferenceable(4) i32* @_ZNK5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %dimensions_, i32 %4)
  %5 = load i32, i32* %call, align 4, !tbaa !20
  %6 = load i32, i32* %s, align 4, !tbaa !20
  %mul = mul nsw i32 %6, %5
  store i32 %mul, i32* %s, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !300

for.end:                                          ; preds = %for.cond.cleanup
  %8 = load i32, i32* %s, align 4, !tbaa !20
  %9 = bitcast i32* %s to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %9) #9
  ret i32 %8
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept7StorageIdEC2Eib(%"class.adept::Storage.24"* nonnull dereferenceable(20) %this, i32 %n, i1 zeroext %IsActive) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Storage.24"*, align 8
  %n.addr = alloca i32, align 4
  %IsActive.addr = alloca i8, align 1
  store %"class.adept::Storage.24"* %this, %"class.adept::Storage.24"** %this.addr, align 8, !tbaa !2
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  %frombool = zext i1 %IsActive to i8
  store i8 %frombool, i8* %IsActive.addr, align 1, !tbaa !18
  %this1 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %this.addr, align 8
  %n_ = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this1, i32 0, i32 1
  %0 = load i32, i32* %n.addr, align 4, !tbaa !20
  store i32 %0, i32* %n_, align 8, !tbaa !301
  %n_links_ = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this1, i32 0, i32 2
  store i32 1, i32* %n_links_, align 4, !tbaa !297
  %gradient_index_ = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this1, i32 0, i32 3
  store i32 -1, i32* %gradient_index_, align 8, !tbaa !302
  %1 = load i32, i32* %n.addr, align 4, !tbaa !20
  %call = call double* @_ZN5adept8internal13alloc_alignedIdEEPT_i(i32 %1)
  %data_ = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this1, i32 0, i32 0
  store double* %call, double** %data_, align 8, !tbaa !303
  %2 = load i32, i32* @_ZN5adept8internal26n_storage_objects_created_E, align 4, !tbaa !20
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* @_ZN5adept8internal26n_storage_objects_created_E, align 4, !tbaa !20
  %3 = load i8, i8* %IsActive.addr, align 1, !tbaa !18, !range !27
  %tobool = trunc i8 %3 to i1
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call2 = call i32 @_ZN5adept5Stack18register_gradientsERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %4, i32* nonnull align 4 dereferenceable(4) %n.addr)
  %gradient_index_3 = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this1, i32 0, i32 3
  store i32 %call2, i32* %gradient_index_3, align 8, !tbaa !302
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double* @_ZN5adept7StorageIdE4dataEv(%"class.adept::Storage.24"* nonnull dereferenceable(20) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Storage.24"*, align 8
  store %"class.adept::Storage.24"* %this, %"class.adept::Storage.24"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %this.addr, align 8
  %data_ = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this1, i32 0, i32 0
  %0 = load double*, double** %data_, align 8, !tbaa !303
  ret double* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal13GradientIndexILb0EE3setIdEEvPKT_PKNS_7StorageIS4_EE(%"struct.adept::internal::GradientIndex"* nonnull dereferenceable(1) %this, double* %data, %"class.adept::Storage.24"* %storage) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::GradientIndex"*, align 8
  %data.addr = alloca double*, align 8
  %storage.addr = alloca %"class.adept::Storage.24"*, align 8
  store %"struct.adept::internal::GradientIndex"* %this, %"struct.adept::internal::GradientIndex"** %this.addr, align 8, !tbaa !2
  store double* %data, double** %data.addr, align 8, !tbaa !2
  store %"class.adept::Storage.24"* %storage, %"class.adept::Storage.24"** %storage.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::GradientIndex"*, %"struct.adept::internal::GradientIndex"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept7StorageIdED2Ev(%"class.adept::Storage.24"* nonnull dereferenceable(20) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Storage.24"*, align 8
  store %"class.adept::Storage.24"* %this, %"class.adept::Storage.24"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Storage.24"*, %"class.adept::Storage.24"** %this.addr, align 8
  %data_ = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this1, i32 0, i32 0
  %0 = load double*, double** %data_, align 8, !tbaa !303
  call void @_ZN5adept8internal12free_alignedIdEEvPT_(double* %0)
  %gradient_index_ = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this1, i32 0, i32 3
  %1 = load i32, i32* %gradient_index_, align 8, !tbaa !302
  %cmp = icmp sge i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %gradient_index_2 = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this1, i32 0, i32 3
  %n_ = getelementptr inbounds %"class.adept::Storage.24", %"class.adept::Storage.24"* %this1, i32 0, i32 1
  invoke void @_ZN5adept5Stack20unregister_gradientsERKiS2_(%"class.adept::Stack"* nonnull dereferenceable(149) %2, i32* nonnull align 4 dereferenceable(4) %gradient_index_2, i32* nonnull align 4 dereferenceable(4) %n_)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %if.then
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %entry
  %3 = load i32, i32* @_ZN5adept8internal26n_storage_objects_deleted_E, align 4, !tbaa !20
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* @_ZN5adept8internal26n_storage_objects_deleted_E, align 4, !tbaa !20
  ret void

terminate.lpad:                                   ; preds = %if.then
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #29
  unreachable
}

; Function Attrs: uwtable mustprogress
define available_externally dso_local nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this, i64 %__pos, i8* %__s) #0 align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %__pos.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  store %"class.std::__cxx11::basic_string"* %this, %"class.std::__cxx11::basic_string"** %this.addr, align 8, !tbaa !2
  store i64 %__pos, i64* %__pos.addr, align 8, !tbaa !13
  store i8* %__s, i8** %__s.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %this.addr, align 8
  %0 = load i64, i64* %__pos.addr, align 8, !tbaa !13
  %1 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %2 = load i8*, i8** %__s.addr, align 8, !tbaa !2
  %call = call i64 @_ZNSt11char_traitsIcE6lengthEPKc(i8* %2)
  %call2 = call nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %this1, i64 %0, i64 0, i8* %1, i64 %call)
  ret %"class.std::__cxx11::basic_string"* %call2
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept17invalid_dimensionD0Ev(%"class.adept::invalid_dimension"* nonnull dereferenceable(40) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::invalid_dimension"*, align 8
  store %"class.adept::invalid_dimension"* %this, %"class.adept::invalid_dimension"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::invalid_dimension"*, %"class.adept::invalid_dimension"** %this.addr, align 8
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::invalid_dimension"*)*)(%"class.adept::invalid_dimension"* nonnull dereferenceable(40) %this1) #9
  %0 = bitcast %"class.adept::invalid_dimension"* %this1 to i8*
  call void @_ZdlPv(i8* %0) #32
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept14ExpressionSizeILi1EE7set_allEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %this, i32 %j) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::ExpressionSize.37"*, align 8
  %j.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %"class.adept::ExpressionSize.37"* %this, %"class.adept::ExpressionSize.37"** %this.addr, align 8, !tbaa !2
  store i32 %j, i32* %j.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::ExpressionSize.37"*, %"class.adept::ExpressionSize.37"** %this.addr, align 8
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !20
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %2) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %j.addr, align 4, !tbaa !20
  %dim = getelementptr inbounds %"class.adept::ExpressionSize.37", %"class.adept::ExpressionSize.37"* %this1, i32 0, i32 0
  %4 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [1 x i32], [1 x i32]* %dim, i64 0, i64 %idxprom
  store i32 %3, i32* %arrayidx, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !304

for.end:                                          ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal13GradientIndexILb0EE5clearEv(%"struct.adept::internal::GradientIndex"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::GradientIndex"*, align 8
  store %"struct.adept::internal::GradientIndex"* %this, %"struct.adept::internal::GradientIndex"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::GradientIndex"*, %"struct.adept::internal::GradientIndex"** %this.addr, align 8
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5ArrayILi1EdLb0EE26pack_row_major_contiguous_Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Array.38"*, align 8
  %i = alloca i32, align 4
  store %"class.adept::Array.38"* %this, %"class.adept::Array.38"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Array.38"*, %"class.adept::Array.38"** %this.addr, align 8
  %offset_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 3
  %call = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %offset_, i32 0)
  store i32 1, i32* %call, align 4, !tbaa !20
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 -1, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !20
  %cmp = icmp sge i32 %1, 0
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %2) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %dimensions_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 2
  %3 = load i32, i32* %i, align 4, !tbaa !20
  %add = add nsw i32 %3, 1
  %call2 = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %dimensions_, i32 %add)
  %4 = load i32, i32* %call2, align 4, !tbaa !20
  %offset_3 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 3
  %5 = load i32, i32* %i, align 4, !tbaa !20
  %add4 = add nsw i32 %5, 1
  %call5 = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %offset_3, i32 %add4)
  %6 = load i32, i32* %call5, align 4, !tbaa !20
  %mul = mul nsw i32 %4, %6
  %offset_6 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 3
  %7 = load i32, i32* %i, align 4, !tbaa !20
  %call7 = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %offset_6, i32 %7)
  store i32 %mul, i32* %call7, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !tbaa !20
  %dec = add nsw i32 %8, -1
  store i32 %dec, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !305

for.end:                                          ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5ArrayILi1EdLb0EE18pack_column_major_Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Array.38"*, align 8
  %i = alloca i32, align 4
  store %"class.adept::Array.38"* %this, %"class.adept::Array.38"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Array.38"*, %"class.adept::Array.38"** %this.addr, align 8
  %offset_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 3
  %call = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %offset_, i32 0)
  store i32 1, i32* %call, align 4, !tbaa !20
  %0 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 1, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !tbaa !20
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %2) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %dimensions_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 2
  %3 = load i32, i32* %i, align 4, !tbaa !20
  %sub = sub nsw i32 %3, 1
  %call2 = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %dimensions_, i32 %sub)
  %4 = load i32, i32* %call2, align 4, !tbaa !20
  %offset_3 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 3
  %5 = load i32, i32* %i, align 4, !tbaa !20
  %sub4 = sub nsw i32 %5, 1
  %call5 = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %offset_3, i32 %sub4)
  %6 = load i32, i32* %call5, align 4, !tbaa !20
  %mul = mul nsw i32 %4, %6
  %offset_6 = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 3
  %7 = load i32, i32* %i, align 4, !tbaa !20
  %call7 = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %offset_6, i32 %7)
  store i32 %mul, i32* %call7, align 4, !tbaa !20
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !306

for.end:                                          ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5ArrayILi1EdLb0EE15pack_row_major_Ev(%"class.adept::Array.38"* nonnull dereferenceable(24) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Array.38"*, align 8
  store %"class.adept::Array.38"* %this, %"class.adept::Array.38"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Array.38"*, %"class.adept::Array.38"** %this.addr, align 8
  %offset_ = getelementptr inbounds %"class.adept::Array.38", %"class.adept::Array.38"* %this1, i32 0, i32 3
  %call = call nonnull align 4 dereferenceable(4) i32* @_ZN5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %offset_, i32 0)
  store i32 1, i32* %call, align 4, !tbaa !20
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 4 dereferenceable(4) i32* @_ZNK5adept14ExpressionSizeILi1EEixEi(%"class.adept::ExpressionSize.37"* nonnull dereferenceable(4) %this, i32 %i) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::ExpressionSize.37"*, align 8
  %i.addr = alloca i32, align 4
  store %"class.adept::ExpressionSize.37"* %this, %"class.adept::ExpressionSize.37"** %this.addr, align 8, !tbaa !2
  store i32 %i, i32* %i.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::ExpressionSize.37"*, %"class.adept::ExpressionSize.37"** %this.addr, align 8
  %dim = getelementptr inbounds %"class.adept::ExpressionSize.37", %"class.adept::ExpressionSize.37"* %this1, i32 0, i32 0
  %0 = load i32, i32* %i.addr, align 4, !tbaa !20
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [1 x i32], [1 x i32]* %dim, i64 0, i64 %idxprom
  ret i32* %arrayidx
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZN5adept5Stack18register_gradientsERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32* nonnull align 4 dereferenceable(4) %n) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %n.addr = alloca i32*, align 8
  %return_val = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store i32* %n, i32** %n.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast i32* %return_val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = load i32*, i32** %n.addr, align 8, !tbaa !2
  %call = call i32 @_ZN5adept5Stack21do_register_gradientsERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %this1, i32* nonnull align 4 dereferenceable(4) %1)
  store i32 %call, i32* %return_val, align 4, !tbaa !20
  %2 = load i32, i32* %return_val, align 4, !tbaa !20
  %3 = bitcast i32* %return_val to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #9
  ret i32 %2
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZN5adept8internal18get_index_with_lenEii(i32 %j, i32 %0) #12 comdat {
entry:
  %j.addr = alloca i32, align 4
  %.addr = alloca i32, align 4
  store i32 %j, i32* %j.addr, align 4, !tbaa !20
  store i32 %0, i32* %.addr, align 4, !tbaa !20
  %1 = load i32, i32* %j.addr, align 4, !tbaa !20
  ret i32 %1
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZN5adept5Stack17register_gradientEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %return_val = alloca i32, align 4
  %first_gap = alloca %"struct.adept::Gap"*, align 8
  %ref.tmp = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp19 = alloca %"struct.std::_List_iterator", align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %0 = bitcast i32* %return_val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %n_gradients_registered_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 9
  %1 = load i32, i32* %n_gradients_registered_, align 4, !tbaa !141
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %n_gradients_registered_, align 4, !tbaa !141
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call = call zeroext i1 @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE5emptyEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_) #9
  br i1 %call, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %2 = load i32, i32* %i_gradient_, align 8, !tbaa !147
  %inc2 = add nsw i32 %2, 1
  store i32 %inc2, i32* %i_gradient_, align 8, !tbaa !147
  %i_gradient_3 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %3 = load i32, i32* %i_gradient_3, align 8, !tbaa !147
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %4 = load i32, i32* %max_gradient_, align 8, !tbaa !148
  %cmp = icmp sgt i32 %3, %4
  br i1 %cmp, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  %i_gradient_5 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %5 = load i32, i32* %i_gradient_5, align 8, !tbaa !147
  %max_gradient_6 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  store i32 %5, i32* %max_gradient_6, align 8, !tbaa !148
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %i_gradient_7 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %6 = load i32, i32* %i_gradient_7, align 8, !tbaa !147
  %sub = sub nsw i32 %6, 1
  store i32 %sub, i32* %return_val, align 4, !tbaa !20
  br label %if.end27

if.else:                                          ; preds = %entry
  %7 = bitcast %"struct.adept::Gap"** %first_gap to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #9
  %gap_list_8 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call9 = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5frontEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_8) #9
  store %"struct.adept::Gap"* %call9, %"struct.adept::Gap"** %first_gap, align 8, !tbaa !2
  %8 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %first_gap, align 8, !tbaa !2
  %start = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %8, i32 0, i32 0
  %9 = load i32, i32* %start, align 4, !tbaa !144
  store i32 %9, i32* %return_val, align 4, !tbaa !20
  %10 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %first_gap, align 8, !tbaa !2
  %start10 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %10, i32 0, i32 0
  %11 = load i32, i32* %start10, align 4, !tbaa !144
  %inc11 = add nsw i32 %11, 1
  store i32 %inc11, i32* %start10, align 4, !tbaa !144
  %12 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %first_gap, align 8, !tbaa !2
  %start12 = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %12, i32 0, i32 0
  %13 = load i32, i32* %start12, align 4, !tbaa !144
  %14 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %first_gap, align 8, !tbaa !2
  %end = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %14, i32 0, i32 1
  %15 = load i32, i32* %end, align 4, !tbaa !142
  %cmp13 = icmp sgt i32 %13, %15
  br i1 %cmp13, label %if.then14, label %if.end26

if.then14:                                        ; preds = %if.else
  %most_recent_gap_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %16 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #9
  %gap_list_15 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call16 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_15) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call16, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  %call17 = call zeroext i1 @_ZSteqRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %most_recent_gap_, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %ref.tmp) #9
  %17 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  br i1 %call17, label %if.then18, label %if.end24

if.then18:                                        ; preds = %if.then14
  %18 = bitcast %"struct.std::_List_iterator"* %ref.tmp19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #9
  %gap_list_20 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call21 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_20) #9
  %coerce.dive22 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp19, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call21, %"struct.std::__detail::_List_node_base"** %coerce.dive22, align 8
  %most_recent_gap_23 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %19 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_23 to i8*
  %20 = bitcast %"struct.std::_List_iterator"* %ref.tmp19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 8, i1 false), !tbaa.struct !145
  %21 = bitcast %"struct.std::_List_iterator"* %ref.tmp19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #9
  br label %if.end24

if.end24:                                         ; preds = %if.then18, %if.then14
  %gap_list_25 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE9pop_frontEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_25) #9
  br label %if.end26

if.end26:                                         ; preds = %if.end24, %if.else
  %22 = bitcast %"struct.adept::Gap"** %first_gap to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #9
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.end
  %23 = load i32, i32* %return_val, align 4, !tbaa !20
  %24 = bitcast i32* %return_val to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %24) #9
  ret i32 %23
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5frontEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  %ref.tmp = alloca %"struct.std::_List_iterator", align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %0 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %call = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this1) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  %call2 = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZNKSt14_List_iteratorIN5adept3GapEEdeEv(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %ref.tmp) #9
  %1 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %1) #9
  ret %"struct.adept::Gap"* %call2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE9pop_frontEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::__cxx11::list"*, align 8
  %agg.tmp = alloca %"struct.std::_List_iterator", align 8
  store %"class.std::__cxx11::list"* %this, %"class.std::__cxx11::list"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %this.addr, align 8
  %call = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE5beginEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this1) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %agg.tmp, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  %coerce.dive2 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %agg.tmp, i32 0, i32 0
  %0 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %coerce.dive2, align 8
  call void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE8_M_eraseESt14_List_iteratorIS2_E(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %this1, %"struct.std::__detail::_List_node_base"* %0) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5Stack19unregister_gradientERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32* nonnull align 4 dereferenceable(4) %gradient_index) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %gradient_index.addr = alloca i32*, align 8
  %last_gap = alloca %"struct.adept::Gap"*, align 8
  %it = alloca %"struct.std::_List_iterator", align 8
  %coerce = alloca %"struct.std::_List_iterator", align 8
  %ref.tmp = alloca %"struct.std::_List_iterator", align 8
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store i32* %gradient_index, i32** %gradient_index.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %n_gradients_registered_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 9
  %0 = load i32, i32* %n_gradients_registered_, align 4, !tbaa !141
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* %n_gradients_registered_, align 4, !tbaa !141
  %1 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %2 = load i32, i32* %1, align 4, !tbaa !20
  %add = add nsw i32 %2, 1
  %i_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %3 = load i32, i32* %i_gradient_, align 8, !tbaa !147
  %cmp = icmp eq i32 %add, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %i_gradient_2 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %4 = load i32, i32* %i_gradient_2, align 8, !tbaa !147
  %dec3 = add nsw i32 %4, -1
  store i32 %dec3, i32* %i_gradient_2, align 8, !tbaa !147
  %gap_list_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call = call zeroext i1 @_ZNKSt7__cxx114listIN5adept3GapESaIS2_EE5emptyEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_) #9
  br i1 %call, label %if.end24, label %if.then4

if.then4:                                         ; preds = %if.then
  %5 = bitcast %"struct.adept::Gap"** %last_gap to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %gap_list_5 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call6 = call nonnull align 4 dereferenceable(8) %"struct.adept::Gap"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE4backEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_5) #9
  store %"struct.adept::Gap"* %call6, %"struct.adept::Gap"** %last_gap, align 8, !tbaa !2
  %i_gradient_7 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  %6 = load i32, i32* %i_gradient_7, align 8, !tbaa !147
  %7 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %last_gap, align 8, !tbaa !2
  %end = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %7, i32 0, i32 1
  %8 = load i32, i32* %end, align 4, !tbaa !142
  %add8 = add nsw i32 %8, 1
  %cmp9 = icmp eq i32 %6, %add8
  br i1 %cmp9, label %if.then10, label %if.end23

if.then10:                                        ; preds = %if.then4
  %9 = load %"struct.adept::Gap"*, %"struct.adept::Gap"** %last_gap, align 8, !tbaa !2
  %start = getelementptr inbounds %"struct.adept::Gap", %"struct.adept::Gap"* %9, i32 0, i32 0
  %10 = load i32, i32* %start, align 4, !tbaa !144
  %i_gradient_11 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 6
  store i32 %10, i32* %i_gradient_11, align 8, !tbaa !147
  %11 = bitcast %"struct.std::_List_iterator"* %it to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #9
  %gap_list_12 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call13 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_12) #9
  %coerce.dive = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %it, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call13, %"struct.std::__detail::_List_node_base"** %coerce.dive, align 8
  %call14 = call %"struct.std::__detail::_List_node_base"* @_ZNSt14_List_iteratorIN5adept3GapEEmmEi(%"struct.std::_List_iterator"* nonnull dereferenceable(8) %it, i32 0) #9
  %coerce.dive15 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %coerce, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call14, %"struct.std::__detail::_List_node_base"** %coerce.dive15, align 8
  %most_recent_gap_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %call16 = call zeroext i1 @_ZSteqRKSt14_List_iteratorIN5adept3GapEES4_(%"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %most_recent_gap_, %"struct.std::_List_iterator"* nonnull align 8 dereferenceable(8) %it) #9
  br i1 %call16, label %if.then17, label %if.end

if.then17:                                        ; preds = %if.then10
  %12 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #9
  %gap_list_18 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  %call19 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE3endEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_18) #9
  %coerce.dive20 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %ref.tmp, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %call19, %"struct.std::__detail::_List_node_base"** %coerce.dive20, align 8
  %most_recent_gap_21 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 5
  %13 = bitcast %"struct.std::_List_iterator"* %most_recent_gap_21 to i8*
  %14 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 8, i1 false), !tbaa.struct !145
  %15 = bitcast %"struct.std::_List_iterator"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %15) #9
  br label %if.end

if.end:                                           ; preds = %if.then17, %if.then10
  %gap_list_22 = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 4
  call void @_ZNSt7__cxx114listIN5adept3GapESaIS2_EE8pop_backEv(%"class.std::__cxx11::list"* nonnull dereferenceable(24) %gap_list_22) #9
  %16 = bitcast %"struct.std::_List_iterator"* %it to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %16) #9
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then4
  %17 = bitcast %"struct.adept::Gap"** %last_gap to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then
  br label %if.end25

if.else:                                          ; preds = %entry
  %18 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  call void @_ZN5adept5Stack27unregister_gradient_not_topERKi(%"class.adept::Stack"* nonnull dereferenceable(149) %this1, i32* nonnull align 4 dereferenceable(4) %18)
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.end24
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept6ActiveIdE9set_valueIdEEvRKT_(%"class.adept::Active"* nonnull dereferenceable(12) %this, double* nonnull align 8 dereferenceable(8) %x) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %x.addr = alloca double*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store double* %x, double** %x.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load double*, double** %x.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %1, double* %val_, align 8, !tbaa !226
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSaIN5adept6ActiveIdEEEC2Ev(%"class.std::allocator.47"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.47"*, align 8
  store %"class.std::allocator.47"* %this, %"class.std::allocator.47"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.47"* %this1 to %"class.__gnu_cxx::new_allocator.48"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEEC2Ev(%"class.__gnu_cxx::new_allocator.48"* nonnull dereferenceable(1) %0) #9
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"class.std::vector.45"* nonnull dereferenceable(24) %this, i64 %__n, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.45"*, align 8
  %__n.addr = alloca i64, align 8
  %__a.addr = alloca %"class.std::allocator.47"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::vector.45"* %this, %"class.std::vector.45"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store %"class.std::allocator.47"* %__a, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.45"*, %"class.std::vector.45"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.45"* %this1 to %"struct.std::_Vector_base.46"*
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %2 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %call = call i64 @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE17_S_check_init_lenEmRKS3_(i64 %1, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %2)
  %3 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %0, i64 %call, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %3)
  %4 = load i64, i64* %__n.addr, align 8, !tbaa !13
  invoke void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE21_M_default_initializeEm(%"class.std::vector.45"* nonnull dereferenceable(24) %this1, i64 %4)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  store i8* %6, i8** %exn.slot, align 8
  %7 = extractvalue { i8*, i32 } %5, 1
  store i32 %7, i32* %ehselector.slot, align 4
  %8 = bitcast %"class.std::vector.45"* %this1 to %"struct.std::_Vector_base.46"*
  call void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EED2Ev(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %8) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN9adeptTest13preprocess_qsIN5adept6ActiveIdEEEEviiPKT_PS4_S7_(i32 %d, i32 %k, %"class.adept::Active"* %icf, %"class.adept::Active"* %sum_qs, %"class.adept::Active"* %Qdiags) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %d.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %icf.addr = alloca %"class.adept::Active"*, align 8
  %sum_qs.addr = alloca %"class.adept::Active"*, align 8
  %Qdiags.addr = alloca %"class.adept::Active"*, align 8
  %icf_sz = alloca i32, align 4
  %ik = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %ref.tmp = alloca double, align 8
  %id = alloca i32, align 4
  %q = alloca %"class.adept::Active", align 8
  %ref.tmp9 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %ref.tmp17 = alloca %"struct.adept::internal::UnaryOperation", align 8
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store %"class.adept::Active"* %icf, %"class.adept::Active"** %icf.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %sum_qs, %"class.adept::Active"** %sum_qs.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %Qdiags, %"class.adept::Active"** %Qdiags.addr, align 8, !tbaa !2
  %0 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  %1 = load i32, i32* %d.addr, align 4, !tbaa !20
  %2 = load i32, i32* %d.addr, align 4, !tbaa !20
  %add = add nsw i32 %2, 1
  %mul = mul nsw i32 %1, %add
  %div = sdiv i32 %mul, 2
  store i32 %div, i32* %icf_sz, align 4, !tbaa !20
  %3 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #9
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc29, %entry
  %4 = load i32, i32* %ik, align 4, !tbaa !20
  %5 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %4, %5
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  store i32 2, i32* %cleanup.dest.slot, align 4
  %6 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %6) #9
  br label %for.end32

for.body:                                         ; preds = %for.cond
  %7 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #9
  store double 0.000000e+00, double* %ref.tmp, align 8, !tbaa !44
  %8 = load %"class.adept::Active"*, %"class.adept::Active"** %sum_qs.addr, align 8, !tbaa !2
  %9 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %8, i64 %idxprom
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdEENS_8internal9enable_ifIXsr17is_not_expressionIT_EE5valueERS1_E4typeERKS5_(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %10 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9
  %11 = bitcast i32* %id to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #9
  store i32 0, i32* %id, align 4, !tbaa !20
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %12 = load i32, i32* %id, align 4, !tbaa !20
  %13 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp2 = icmp slt i32 %12, %13
  br i1 %cmp2, label %for.body4, label %for.cond.cleanup3

for.cond.cleanup3:                                ; preds = %for.cond1
  store i32 5, i32* %cleanup.dest.slot, align 4
  %14 = bitcast i32* %id to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %14) #9
  br label %for.end

for.body4:                                        ; preds = %for.cond1
  %15 = bitcast %"class.adept::Active"* %q to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %15) #9
  %16 = load %"class.adept::Active"*, %"class.adept::Active"** %icf.addr, align 8, !tbaa !2
  %17 = load i32, i32* %ik, align 4, !tbaa !20
  %18 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul5 = mul nsw i32 %17, %18
  %19 = load i32, i32* %id, align 4, !tbaa !20
  %add6 = add nsw i32 %mul5, %19
  %idxprom7 = sext i32 %add6 to i64
  %arrayidx8 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %16, i64 %idxprom7
  call void @_ZN5adept6ActiveIdEC2ERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %q, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %arrayidx8)
  %20 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %20) #9
  %21 = load %"class.adept::Active"*, %"class.adept::Active"** %sum_qs.addr, align 8, !tbaa !2
  %22 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom10 = sext i32 %22 to i64
  %arrayidx11 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %21, i64 %idxprom10
  %23 = bitcast %"class.adept::Active"* %arrayidx11 to %"struct.adept::Expression.40"*
  %24 = bitcast %"class.adept::Active"* %q to %"struct.adept::Expression.40"*
  %call12 = invoke { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptplINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_3AddES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %23, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %24)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body4
  %25 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9 to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %26 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %25, i32 0, i32 0
  %27 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call12, 0
  store %"class.adept::Active"* %27, %"class.adept::Active"** %26, align 8
  %28 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %25, i32 0, i32 1
  %29 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call12, 1
  store %"class.adept::Active"* %29, %"class.adept::Active"** %28, align 8
  %30 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9 to %"struct.adept::Expression.52"*
  %31 = load %"class.adept::Active"*, %"class.adept::Active"** %sum_qs.addr, align 8, !tbaa !2
  %32 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom13 = sext i32 %32 to i64
  %arrayidx14 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %31, i64 %idxprom13
  %call16 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx14, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %30)
          to label %invoke.cont15 unwind label %lpad

invoke.cont15:                                    ; preds = %invoke.cont
  %33 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %33) #9
  %34 = bitcast %"struct.adept::internal::UnaryOperation"* %ref.tmp17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %34) #9
  %35 = bitcast %"class.adept::Active"* %q to %"struct.adept::Expression.40"*
  %call20 = invoke %"class.adept::Active"* @_ZN5adept3expIdNS_6ActiveIdEEEENS_8internal14UnaryOperationIT_NS3_3ExpET0_EERKNS_10ExpressionIS5_S7_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %35)
          to label %invoke.cont19 unwind label %lpad18

invoke.cont19:                                    ; preds = %invoke.cont15
  %coerce.dive = getelementptr inbounds %"struct.adept::internal::UnaryOperation", %"struct.adept::internal::UnaryOperation"* %ref.tmp17, i32 0, i32 0
  store %"class.adept::Active"* %call20, %"class.adept::Active"** %coerce.dive, align 8
  %36 = bitcast %"struct.adept::internal::UnaryOperation"* %ref.tmp17 to %"struct.adept::Expression.62"*
  %37 = load %"class.adept::Active"*, %"class.adept::Active"** %Qdiags.addr, align 8, !tbaa !2
  %38 = load i32, i32* %ik, align 4, !tbaa !20
  %39 = load i32, i32* %d.addr, align 4, !tbaa !20
  %mul21 = mul nsw i32 %38, %39
  %40 = load i32, i32* %id, align 4, !tbaa !20
  %add22 = add nsw i32 %mul21, %40
  %idxprom23 = sext i32 %add22 to i64
  %arrayidx24 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %37, i64 %idxprom23
  %call26 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal14UnaryOperationIdNS3_3ExpES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx24, %"struct.adept::Expression.62"* nonnull align 1 dereferenceable(1) %36)
          to label %invoke.cont25 unwind label %lpad18

invoke.cont25:                                    ; preds = %invoke.cont19
  %41 = bitcast %"struct.adept::internal::UnaryOperation"* %ref.tmp17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %41) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %q) #9
  %42 = bitcast %"class.adept::Active"* %q to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %42) #9
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont25
  %43 = load i32, i32* %id, align 4, !tbaa !20
  %inc = add nsw i32 %43, 1
  store i32 %inc, i32* %id, align 4, !tbaa !20
  br label %for.cond1, !llvm.loop !307

lpad:                                             ; preds = %invoke.cont, %for.body4
  %44 = landingpad { i8*, i32 }
          cleanup
  %45 = extractvalue { i8*, i32 } %44, 0
  store i8* %45, i8** %exn.slot, align 8
  %46 = extractvalue { i8*, i32 } %44, 1
  store i32 %46, i32* %ehselector.slot, align 4
  %47 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %47) #9
  br label %ehcleanup

lpad18:                                           ; preds = %invoke.cont19, %invoke.cont15
  %48 = landingpad { i8*, i32 }
          cleanup
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %exn.slot, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %ehselector.slot, align 4
  %51 = bitcast %"struct.adept::internal::UnaryOperation"* %ref.tmp17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %51) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad18, %lpad
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %q) #9
  %52 = bitcast %"class.adept::Active"* %q to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %52) #9
  %53 = bitcast i32* %id to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %53) #9
  %54 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %54) #9
  %55 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %55) #9
  br label %eh.resume

for.end:                                          ; preds = %for.cond.cleanup3
  br label %for.inc29

for.inc29:                                        ; preds = %for.end
  %56 = load i32, i32* %ik, align 4, !tbaa !20
  %inc30 = add nsw i32 %56, 1
  store i32 %inc30, i32* %ik, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !308

for.end32:                                        ; preds = %for.cond.cleanup
  %57 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %57) #9
  ret void

eh.resume:                                        ; preds = %ehcleanup
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val34 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val34
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EEixEm(%"class.std::vector.45"* nonnull dereferenceable(24) %this, i64 %__n) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.45"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.45"* %this, %"class.std::vector.45"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::vector.45"*, %"class.std::vector.45"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.45"* %this1 to %"struct.std::_Vector_base.46"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start, align 8, !tbaa !309
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %2, i64 %3
  ret %"class.adept::Active"* %add.ptr
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, double* nonnull align 8 dereferenceable(8) %rhs, i8* %dummy) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca double*, align 8
  %dummy.addr = alloca i8*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store double* %rhs, double** %rhs.addr, align 8, !tbaa !2
  store i8* %dummy, i8** %dummy.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = bitcast %"class.adept::Active"* %this1 to %"struct.adept::Expression.40"*
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %1 = load double*, double** %rhs.addr, align 8, !tbaa !2
  %2 = load double, double* %1, align 8, !tbaa !44
  store double %2, double* %val_, align 8, !tbaa !226
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call i32 @_ZN5adept5Stack17register_gradientEv(%"class.adept::Stack"* nonnull dereferenceable(149) %3)
  store i32 %call, i32* %gradient_index_, align 8, !tbaa !228
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %5 = bitcast %"class.adept::Stack"* %4 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_2 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %5, i32* nonnull align 4 dereferenceable(4) %gradient_index_2)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN9adeptTest8subtractIdN5adept6ActiveIdEES3_EEviPKT_PKT0_PT1_(i32 %d, double* %x, %"class.adept::Active"* %y, %"class.adept::Active"* %out) #0 comdat {
entry:
  %d.addr = alloca i32, align 4
  %x.addr = alloca double*, align 8
  %y.addr = alloca %"class.adept::Active"*, align 8
  %out.addr = alloca %"class.adept::Active"*, align 8
  %id = alloca i32, align 4
  %ref.tmp = alloca %"struct.adept::internal::BinaryOpScalarLeft.65", align 16
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store double* %x, double** %x.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %y, %"class.adept::Active"** %y.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %out, %"class.adept::Active"** %out.addr, align 8, !tbaa !2
  %0 = bitcast i32* %id to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 0, i32* %id, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %id, align 4, !tbaa !20
  %2 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %3 = bitcast i32* %id to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %4 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.65"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %4) #9
  %5 = load double*, double** %x.addr, align 8, !tbaa !2
  %6 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds double, double* %5, i64 %idxprom
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %y.addr, align 8, !tbaa !2
  %8 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom1 = sext i32 %8 to i64
  %arrayidx2 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 %idxprom1
  %9 = bitcast %"class.adept::Active"* %arrayidx2 to %"struct.adept::Expression.40"*
  call void @_ZN5adeptmiIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8SubtractES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE(%"struct.adept::internal::BinaryOpScalarLeft.65"* sret(%"struct.adept::internal::BinaryOpScalarLeft.65") align 16 %ref.tmp, double* nonnull align 8 dereferenceable(8) %arrayidx, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %9)
  %10 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.65"* %ref.tmp to %"struct.adept::Expression.66"*
  %11 = load %"class.adept::Active"*, %"class.adept::Active"** %out.addr, align 8, !tbaa !2
  %12 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom3 = sext i32 %12 to i64
  %arrayidx4 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %11, i64 %idxprom3
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal18BinaryOpScalarLeftIddNS3_8SubtractES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx4, %"struct.adept::Expression.66"* nonnull align 1 dereferenceable(1) %10)
  %13 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.65"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %13) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %id, align 4, !tbaa !20
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %id, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !311

for.end:                                          ; preds = %for.cond.cleanup
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN9adeptTest7QtimesxIN5adept6ActiveIdEEEEviPKT_S6_S6_PS4_(i32 %d, %"class.adept::Active"* %Qdiag, %"class.adept::Active"* %ltri, %"class.adept::Active"* %x, %"class.adept::Active"* %out) #0 comdat {
entry:
  %d.addr = alloca i32, align 4
  %Qdiag.addr = alloca %"class.adept::Active"*, align 8
  %ltri.addr = alloca %"class.adept::Active"*, align 8
  %x.addr = alloca %"class.adept::Active"*, align 8
  %out.addr = alloca %"class.adept::Active"*, align 8
  %id = alloca i32, align 4
  %ref.tmp = alloca %"struct.adept::internal::BinaryOperation.69", align 8
  %Lparamsidx = alloca i32, align 4
  %i = alloca i32, align 4
  %cleanup.dest.slot = alloca i32, align 4
  %j = alloca i32, align 4
  %ref.tmp14 = alloca %"struct.adept::internal::BinaryOperation.71", align 8
  %ref.tmp17 = alloca %"struct.adept::internal::BinaryOperation.69", align 8
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  store %"class.adept::Active"* %Qdiag, %"class.adept::Active"** %Qdiag.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %ltri, %"class.adept::Active"** %ltri.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %x, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %out, %"class.adept::Active"** %out.addr, align 8, !tbaa !2
  %0 = bitcast i32* %id to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #9
  store i32 0, i32* %id, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %id, align 4, !tbaa !20
  %2 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %3 = bitcast i32* %id to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %4 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %4) #9
  %5 = load %"class.adept::Active"*, %"class.adept::Active"** %Qdiag.addr, align 8, !tbaa !2
  %6 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %5, i64 %idxprom
  %7 = bitcast %"class.adept::Active"* %arrayidx to %"struct.adept::Expression.40"*
  %8 = load %"class.adept::Active"*, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  %9 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom1 = sext i32 %9 to i64
  %arrayidx2 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %8, i64 %idxprom1
  %10 = bitcast %"class.adept::Active"* %arrayidx2 to %"struct.adept::Expression.40"*
  %call = call { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptmlINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_8MultiplyES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %7, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %10)
  %11 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %12 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %11, i32 0, i32 0
  %13 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call, 0
  store %"class.adept::Active"* %13, %"class.adept::Active"** %12, align 8
  %14 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %11, i32 0, i32 1
  %15 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call, 1
  store %"class.adept::Active"* %15, %"class.adept::Active"** %14, align 8
  %16 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp to %"struct.adept::Expression.70"*
  %17 = load %"class.adept::Active"*, %"class.adept::Active"** %out.addr, align 8, !tbaa !2
  %18 = load i32, i32* %id, align 4, !tbaa !20
  %idxprom3 = sext i32 %18 to i64
  %arrayidx4 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %17, i64 %idxprom3
  %call5 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx4, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %16)
  %19 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %19) #9
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %id, align 4, !tbaa !20
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %id, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !312

for.end:                                          ; preds = %for.cond.cleanup
  %21 = bitcast i32* %Lparamsidx to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #9
  store i32 0, i32* %Lparamsidx, align 4, !tbaa !20
  %22 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc30, %for.end
  %23 = load i32, i32* %i, align 4, !tbaa !20
  %24 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp7 = icmp slt i32 %23, %24
  br i1 %cmp7, label %for.body9, label %for.cond.cleanup8

for.cond.cleanup8:                                ; preds = %for.cond6
  store i32 5, i32* %cleanup.dest.slot, align 4
  %25 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %25) #9
  br label %for.end32

for.body9:                                        ; preds = %for.cond6
  %26 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #9
  %27 = load i32, i32* %i, align 4, !tbaa !20
  %add = add nsw i32 %27, 1
  store i32 %add, i32* %j, align 4, !tbaa !20
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc27, %for.body9
  %28 = load i32, i32* %j, align 4, !tbaa !20
  %29 = load i32, i32* %d.addr, align 4, !tbaa !20
  %cmp11 = icmp slt i32 %28, %29
  br i1 %cmp11, label %for.body13, label %for.cond.cleanup12

for.cond.cleanup12:                               ; preds = %for.cond10
  store i32 8, i32* %cleanup.dest.slot, align 4
  %30 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %30) #9
  br label %for.end29

for.body13:                                       ; preds = %for.cond10
  %31 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %31) #9
  %32 = load %"class.adept::Active"*, %"class.adept::Active"** %out.addr, align 8, !tbaa !2
  %33 = load i32, i32* %j, align 4, !tbaa !20
  %idxprom15 = sext i32 %33 to i64
  %arrayidx16 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %32, i64 %idxprom15
  %34 = bitcast %"class.adept::Active"* %arrayidx16 to %"struct.adept::Expression.40"*
  %35 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %35) #9
  %36 = load %"class.adept::Active"*, %"class.adept::Active"** %ltri.addr, align 8, !tbaa !2
  %37 = load i32, i32* %Lparamsidx, align 4, !tbaa !20
  %idxprom18 = sext i32 %37 to i64
  %arrayidx19 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %36, i64 %idxprom18
  %38 = bitcast %"class.adept::Active"* %arrayidx19 to %"struct.adept::Expression.40"*
  %39 = load %"class.adept::Active"*, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  %40 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom20 = sext i32 %40 to i64
  %arrayidx21 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %39, i64 %idxprom20
  %41 = bitcast %"class.adept::Active"* %arrayidx21 to %"struct.adept::Expression.40"*
  %call22 = call { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptmlINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_8MultiplyES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %38, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %41)
  %42 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp17 to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %43 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %42, i32 0, i32 0
  %44 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call22, 0
  store %"class.adept::Active"* %44, %"class.adept::Active"** %43, align 8
  %45 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %42, i32 0, i32 1
  %46 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call22, 1
  store %"class.adept::Active"* %46, %"class.adept::Active"** %45, align 8
  %47 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp17 to %"struct.adept::Expression.70"*
  call void @_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE(%"struct.adept::internal::BinaryOperation.71"* sret(%"struct.adept::internal::BinaryOperation.71") align 8 %ref.tmp14, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %34, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %47)
  %48 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp14 to %"struct.adept::Expression.72"*
  %49 = load %"class.adept::Active"*, %"class.adept::Active"** %out.addr, align 8, !tbaa !2
  %50 = load i32, i32* %j, align 4, !tbaa !20
  %idxprom23 = sext i32 %50 to i64
  %arrayidx24 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %49, i64 %idxprom23
  %call25 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE(%"class.adept::Active"* nonnull dereferenceable(12) %arrayidx24, %"struct.adept::Expression.72"* nonnull align 1 dereferenceable(1) %48)
  %51 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %51) #9
  %52 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %52) #9
  %53 = load i32, i32* %Lparamsidx, align 4, !tbaa !20
  %inc26 = add nsw i32 %53, 1
  store i32 %inc26, i32* %Lparamsidx, align 4, !tbaa !20
  br label %for.inc27

for.inc27:                                        ; preds = %for.body13
  %54 = load i32, i32* %j, align 4, !tbaa !20
  %inc28 = add nsw i32 %54, 1
  store i32 %inc28, i32* %j, align 4, !tbaa !20
  br label %for.cond10, !llvm.loop !313

for.end29:                                        ; preds = %for.cond.cleanup12
  br label %for.inc30

for.inc30:                                        ; preds = %for.end29
  %55 = load i32, i32* %i, align 4, !tbaa !20
  %inc31 = add nsw i32 %55, 1
  store i32 %inc31, i32* %i, align 4, !tbaa !20
  br label %for.cond6, !llvm.loop !314

for.end32:                                        ; preds = %for.cond.cleanup8
  %56 = bitcast i32* %Lparamsidx to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %56) #9
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adeptmiINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINSB_4typeENSC_4typeEE4typeESB_NS1_8SubtractESC_EEE4typeERKNS_10ExpressionISE_SB_EERKNSM_ISF_SC_EE(%"struct.adept::internal::BinaryOperation"* noalias sret(%"struct.adept::internal::BinaryOperation") align 8 %agg.result, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %l, %"struct.adept::Expression.53"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %l.addr = alloca %"struct.adept::Expression.52"*, align 8
  %r.addr = alloca %"struct.adept::Expression.53"*, align 8
  store %"struct.adept::Expression.52"* %l, %"struct.adept::Expression.52"** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.53"* %r, %"struct.adept::Expression.53"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.52"*, %"struct.adept::Expression.52"** %l.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.51"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EEE4castEv(%"struct.adept::Expression.52"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"struct.adept::internal::BinaryOperation.51"* %call to %"struct.adept::Expression.52"*
  %2 = load %"struct.adept::Expression.53"*, %"struct.adept::Expression.53"** %r.addr, align 8, !tbaa !2
  %call1 = call nonnull align 16 dereferenceable(24) %"struct.adept::internal::BinaryOpScalarLeft"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8MultiplyENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.53"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %call1 to %"struct.adept::Expression.53"*
  call void @_ZN5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEC2ERKNS_10ExpressionIdS5_EERKNSB_IdS9_EE(%"struct.adept::internal::BinaryOperation"* nonnull dereferenceable(24) %agg.result, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %1, %"struct.adept::Expression.53"* nonnull align 1 dereferenceable(1) %3)
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptplINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_3AddES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %l, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %retval = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %l.addr = alloca %"struct.adept::Expression.40"*, align 8
  %r.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::Expression.40"* %l, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %r, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"class.adept::Active"* %call1 to %"struct.adept::Expression.40"*
  call void @_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_EC2ERKNS_10ExpressionIdS3_EES9_(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %retval, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %1, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %3)
  %4 = bitcast %"struct.adept::internal::BinaryOperation.51"* %retval to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %5 = load { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %4, align 8
  ret { %"class.adept::Active"*, %"class.adept::Active"* } %5
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adeptmlIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8MultiplyES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE(%"struct.adept::internal::BinaryOpScalarLeft"* noalias sret(%"struct.adept::internal::BinaryOpScalarLeft") align 16 %agg.result, double* nonnull align 8 dereferenceable(8) %l, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %l.addr = alloca double*, align 8
  %r.addr = alloca %"struct.adept::Expression.40"*, align 8
  store double* %l, double** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %r, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %0 = load double*, double** %l.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  call void @_ZN5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEEC2EdRKNS_10ExpressionIdS4_EE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %agg.result, double %1, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN9adeptTest6sqnormIN5adept6ActiveIdEEEET_iPKS4_(%"class.adept::Active"* noalias sret(%"class.adept::Active") align 8 %agg.result, i32 %n, %"class.adept::Active"* %x) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %x.addr = alloca %"class.adept::Active"*, align 8
  %nrvo = alloca i1, align 1
  %ref.tmp = alloca %"struct.adept::internal::BinaryOperation.69", align 8
  %i = alloca i32, align 4
  %ref.tmp2 = alloca %"struct.adept::internal::BinaryOperation.71", align 8
  %ref.tmp3 = alloca %"struct.adept::internal::BinaryOperation.69", align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.adept::Active"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store %"class.adept::Active"* %x, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  store i1 false, i1* %nrvo, align 1
  %1 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %1) #9
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %2, i64 0
  %3 = bitcast %"class.adept::Active"* %arrayidx to %"struct.adept::Expression.40"*
  %4 = load %"class.adept::Active"*, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  %arrayidx1 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %4, i64 0
  %5 = bitcast %"class.adept::Active"* %arrayidx1 to %"struct.adept::Expression.40"*
  %call = call { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptmlINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_8MultiplyES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %3, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %5)
  %6 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %7 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %6, i32 0, i32 0
  %8 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call, 0
  store %"class.adept::Active"* %8, %"class.adept::Active"** %7, align 8
  %9 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %6, i32 0, i32 1
  %10 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call, 1
  store %"class.adept::Active"* %10, %"class.adept::Active"** %9, align 8
  %11 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp to %"struct.adept::Expression.70"*
  call void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %11, i8* null)
  %12 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %12) #9
  %13 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #9
  store i32 1, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32, i32* %i, align 4, !tbaa !20
  %15 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %14, %15
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %16 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %16) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %17 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %17) #9
  %18 = bitcast %"class.adept::Active"* %agg.result to %"struct.adept::Expression.40"*
  %19 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %19) #9
  %20 = load %"class.adept::Active"*, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  %21 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %21 to i64
  %arrayidx4 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %20, i64 %idxprom
  %22 = bitcast %"class.adept::Active"* %arrayidx4 to %"struct.adept::Expression.40"*
  %23 = load %"class.adept::Active"*, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  %24 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom5 = sext i32 %24 to i64
  %arrayidx6 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %23, i64 %idxprom5
  %25 = bitcast %"class.adept::Active"* %arrayidx6 to %"struct.adept::Expression.40"*
  %call7 = invoke { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptmlINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_8MultiplyES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %22, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %25)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body
  %26 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp3 to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %27 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %26, i32 0, i32 0
  %28 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call7, 0
  store %"class.adept::Active"* %28, %"class.adept::Active"** %27, align 8
  %29 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %26, i32 0, i32 1
  %30 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call7, 1
  store %"class.adept::Active"* %30, %"class.adept::Active"** %29, align 8
  %31 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp3 to %"struct.adept::Expression.70"*
  invoke void @_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE(%"struct.adept::internal::BinaryOperation.71"* sret(%"struct.adept::internal::BinaryOperation.71") align 8 %ref.tmp2, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %18, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %31)
          to label %invoke.cont8 unwind label %lpad

invoke.cont8:                                     ; preds = %invoke.cont
  %32 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2 to %"struct.adept::Expression.72"*
  %call10 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result, %"struct.adept::Expression.72"* nonnull align 1 dereferenceable(1) %32)
          to label %invoke.cont9 unwind label %lpad

invoke.cont9:                                     ; preds = %invoke.cont8
  %33 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %33) #9
  %34 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %34) #9
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont9
  %35 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %35, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !315

lpad:                                             ; preds = %invoke.cont8, %invoke.cont, %for.body
  %36 = landingpad { i8*, i32 }
          cleanup
  %37 = extractvalue { i8*, i32 } %36, 0
  store i8* %37, i8** %exn.slot, align 8
  %38 = extractvalue { i8*, i32 } %36, 1
  store i32 %38, i32* %ehselector.slot, align 4
  %39 = bitcast %"struct.adept::internal::BinaryOperation.69"* %ref.tmp3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %39) #9
  %40 = bitcast %"struct.adept::internal::BinaryOperation.71"* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %40) #9
  %41 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %41) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result) #9
  br label %eh.resume

for.end:                                          ; preds = %for.cond.cleanup
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused

nrvo.unused:                                      ; preds = %for.end
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result) #9
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %for.end
  ret void

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val11 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val11
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_3AddES1_EENS3_8SubtractENS3_18BinaryOpScalarLeftIddNS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.50"* nonnull align 1 dereferenceable(1) %rhs) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.50"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.50"* %rhs, %"struct.adept::Expression.50"** %rhs.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1)
  %2 = load %"struct.adept::Expression.50"*, %"struct.adept::Expression.50"** %rhs.addr, align 8, !tbaa !2
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddES4_EENS1_8SubtractENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.50"* nonnull dereferenceable(1) %2, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call, double* %val_, align 8, !tbaa !226
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %5 = bitcast %"class.adept::Stack"* %4 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %5, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret %"class.adept::Active"* %this1
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN9adeptTest9logsumexpIN5adept6ActiveIdEEEET_iPKS4_(%"class.adept::Active"* noalias sret(%"class.adept::Active") align 8 %agg.result, i32 %n, %"class.adept::Active"* %x) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %x.addr = alloca %"class.adept::Active"*, align 8
  %mx = alloca %"class.adept::Active", align 8
  %semx = alloca %"class.adept::Active", align 8
  %ref.tmp = alloca double, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %i = alloca i32, align 4
  %ref.tmp1 = alloca %"struct.adept::internal::BinaryOperation.74", align 8
  %ref.tmp2 = alloca %"struct.adept::internal::UnaryOperation.76", align 8
  %ref.tmp3 = alloca %"struct.adept::internal::BinaryOperation.78", align 8
  %ref.tmp11 = alloca %"struct.adept::internal::BinaryOperation.80", align 8
  %ref.tmp12 = alloca %"struct.adept::internal::UnaryOperation.82", align 8
  %0 = bitcast %"class.adept::Active"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store %"class.adept::Active"* %x, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Active"* %mx to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %1) #9
  %2 = load i32, i32* %n.addr, align 4, !tbaa !20
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  call void @_ZN9adeptTest7arr_maxIN5adept6ActiveIdEEEET_iPKS4_(%"class.adept::Active"* sret(%"class.adept::Active") align 8 %mx, i32 %2, %"class.adept::Active"* %3)
  %4 = bitcast %"class.adept::Active"* %semx to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %4) #9
  %5 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  store double 0.000000e+00, double* %ref.tmp, align 8, !tbaa !44
  invoke void @_ZN5adept6ActiveIdEC2IdEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %semx, double* nonnull align 8 dereferenceable(8) %ref.tmp, i8* null)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %6 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #9
  %7 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #9
  store i32 0, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %invoke.cont
  %8 = load i32, i32* %i, align 4, !tbaa !20
  %9 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %8, %9
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %10 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %10) #9
  br label %for.end

lpad:                                             ; preds = %entry
  %11 = landingpad { i8*, i32 }
          cleanup
  %12 = extractvalue { i8*, i32 } %11, 0
  store i8* %12, i8** %exn.slot, align 8
  %13 = extractvalue { i8*, i32 } %11, 1
  store i32 %13, i32* %ehselector.slot, align 4
  %14 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %14) #9
  br label %ehcleanup20

for.body:                                         ; preds = %for.cond
  %15 = bitcast %"struct.adept::internal::BinaryOperation.74"* %ref.tmp1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %15) #9
  %16 = bitcast %"class.adept::Active"* %semx to %"struct.adept::Expression.40"*
  %17 = bitcast %"struct.adept::internal::UnaryOperation.76"* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %17) #9
  %18 = bitcast %"struct.adept::internal::BinaryOperation.78"* %ref.tmp3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %18) #9
  %19 = load %"class.adept::Active"*, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  %20 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %20 to i64
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %19, i64 %idxprom
  %21 = bitcast %"class.adept::Active"* %arrayidx to %"struct.adept::Expression.40"*
  %22 = bitcast %"class.adept::Active"* %mx to %"struct.adept::Expression.40"*
  %call = invoke { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptmiINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_8SubtractES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %21, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %22)
          to label %invoke.cont5 unwind label %lpad4

invoke.cont5:                                     ; preds = %for.body
  %23 = bitcast %"struct.adept::internal::BinaryOperation.78"* %ref.tmp3 to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %24 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %23, i32 0, i32 0
  %25 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call, 0
  store %"class.adept::Active"* %25, %"class.adept::Active"** %24, align 8
  %26 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %23, i32 0, i32 1
  %27 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call, 1
  store %"class.adept::Active"* %27, %"class.adept::Active"** %26, align 8
  %28 = bitcast %"struct.adept::internal::BinaryOperation.78"* %ref.tmp3 to %"struct.adept::Expression.79"*
  %call7 = invoke { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adept3expIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8SubtractES4_EEEENS1_14UnaryOperationIT_NS1_3ExpET0_EERKNS_10ExpressionIS8_SA_EE(%"struct.adept::Expression.79"* nonnull align 1 dereferenceable(1) %28)
          to label %invoke.cont6 unwind label %lpad4

invoke.cont6:                                     ; preds = %invoke.cont5
  %coerce.dive = getelementptr inbounds %"struct.adept::internal::UnaryOperation.76", %"struct.adept::internal::UnaryOperation.76"* %ref.tmp2, i32 0, i32 0
  %29 = bitcast %"struct.adept::internal::BinaryOperation.78"* %coerce.dive to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %30 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %29, i32 0, i32 0
  %31 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call7, 0
  store %"class.adept::Active"* %31, %"class.adept::Active"** %30, align 8
  %32 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %29, i32 0, i32 1
  %33 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call7, 1
  store %"class.adept::Active"* %33, %"class.adept::Active"** %32, align 8
  %34 = bitcast %"struct.adept::internal::UnaryOperation.76"* %ref.tmp2 to %"struct.adept::Expression.77"*
  invoke void @_ZN5adeptplINS_6ActiveIdEENS_8internal14UnaryOperationIdNS3_3ExpENS3_15BinaryOperationIdS2_NS3_8SubtractES2_EEEEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS6_INS3_7promoteINSB_4typeENSC_4typeEE4typeESB_NS3_3AddESC_EEE4typeERKNS_10ExpressionISE_SB_EERKNSM_ISF_SC_EE(%"struct.adept::internal::BinaryOperation.74"* sret(%"struct.adept::internal::BinaryOperation.74") align 8 %ref.tmp1, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %16, %"struct.adept::Expression.77"* nonnull align 1 dereferenceable(1) %34)
          to label %invoke.cont8 unwind label %lpad4

invoke.cont8:                                     ; preds = %invoke.cont6
  %35 = bitcast %"struct.adept::internal::BinaryOperation.74"* %ref.tmp1 to %"struct.adept::Expression.75"*
  %call10 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpENS4_IdS1_NS3_8SubtractES1_EEEEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE(%"class.adept::Active"* nonnull dereferenceable(12) %semx, %"struct.adept::Expression.75"* nonnull align 1 dereferenceable(1) %35)
          to label %invoke.cont9 unwind label %lpad4

invoke.cont9:                                     ; preds = %invoke.cont8
  %36 = bitcast %"struct.adept::internal::BinaryOperation.78"* %ref.tmp3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %36) #9
  %37 = bitcast %"struct.adept::internal::UnaryOperation.76"* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %37) #9
  %38 = bitcast %"struct.adept::internal::BinaryOperation.74"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %38) #9
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont9
  %39 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !316

lpad4:                                            ; preds = %invoke.cont8, %invoke.cont6, %invoke.cont5, %for.body
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %exn.slot, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %ehselector.slot, align 4
  %43 = bitcast %"struct.adept::internal::BinaryOperation.78"* %ref.tmp3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %43) #9
  %44 = bitcast %"struct.adept::internal::UnaryOperation.76"* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %44) #9
  %45 = bitcast %"struct.adept::internal::BinaryOperation.74"* %ref.tmp1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %45) #9
  %46 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %46) #9
  br label %ehcleanup

for.end:                                          ; preds = %for.cond.cleanup
  %47 = bitcast %"struct.adept::internal::BinaryOperation.80"* %ref.tmp11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %47) #9
  %48 = bitcast %"struct.adept::internal::UnaryOperation.82"* %ref.tmp12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %48) #9
  %49 = bitcast %"class.adept::Active"* %semx to %"struct.adept::Expression.40"*
  %call15 = invoke %"class.adept::Active"* @_ZN5adept3logIdNS_6ActiveIdEEEENS_8internal14UnaryOperationIT_NS3_3LogET0_EERKNS_10ExpressionIS5_S7_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %49)
          to label %invoke.cont14 unwind label %lpad13

invoke.cont14:                                    ; preds = %for.end
  %coerce.dive16 = getelementptr inbounds %"struct.adept::internal::UnaryOperation.82", %"struct.adept::internal::UnaryOperation.82"* %ref.tmp12, i32 0, i32 0
  store %"class.adept::Active"* %call15, %"class.adept::Active"** %coerce.dive16, align 8
  %50 = bitcast %"struct.adept::internal::UnaryOperation.82"* %ref.tmp12 to %"struct.adept::Expression.83"*
  %51 = bitcast %"class.adept::Active"* %mx to %"struct.adept::Expression.40"*
  %call18 = invoke { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptplINS_8internal14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEES5_EENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS1_15BinaryOperationINS1_7promoteINS8_4typeENS9_4typeEE4typeES8_NS1_3AddES9_EEE4typeERKNS_10ExpressionISC_S8_EERKNSK_ISD_S9_EE(%"struct.adept::Expression.83"* nonnull align 1 dereferenceable(1) %50, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %51)
          to label %invoke.cont17 unwind label %lpad13

invoke.cont17:                                    ; preds = %invoke.cont14
  %52 = bitcast %"struct.adept::internal::BinaryOperation.80"* %ref.tmp11 to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %53 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %52, i32 0, i32 0
  %54 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call18, 0
  store %"class.adept::Active"* %54, %"class.adept::Active"** %53, align 8
  %55 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %52, i32 0, i32 1
  %56 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call18, 1
  store %"class.adept::Active"* %56, %"class.adept::Active"** %55, align 8
  %57 = bitcast %"struct.adept::internal::BinaryOperation.80"* %ref.tmp11 to %"struct.adept::Expression.81"*
  invoke void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdNS3_14UnaryOperationIdNS3_3LogES1_EENS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSC_4rankLi0EsrSC_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result, %"struct.adept::Expression.81"* nonnull align 1 dereferenceable(1) %57, i8* null)
          to label %invoke.cont19 unwind label %lpad13

invoke.cont19:                                    ; preds = %invoke.cont17
  %58 = bitcast %"struct.adept::internal::UnaryOperation.82"* %ref.tmp12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %58) #9
  %59 = bitcast %"struct.adept::internal::BinaryOperation.80"* %ref.tmp11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %59) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %semx) #9
  %60 = bitcast %"class.adept::Active"* %semx to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %60) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %mx) #9
  %61 = bitcast %"class.adept::Active"* %mx to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %61) #9
  ret void

lpad13:                                           ; preds = %invoke.cont17, %invoke.cont14, %for.end
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %exn.slot, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %ehselector.slot, align 4
  %65 = bitcast %"struct.adept::internal::UnaryOperation.82"* %ref.tmp12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %65) #9
  %66 = bitcast %"struct.adept::internal::BinaryOperation.80"* %ref.tmp11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %66) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad13, %lpad4
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %semx) #9
  br label %ehcleanup20

ehcleanup20:                                      ; preds = %ehcleanup, %lpad
  %67 = bitcast %"class.adept::Active"* %semx to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %67) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %mx) #9
  %68 = bitcast %"class.adept::Active"* %mx to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %68) #9
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup20
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val23 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val23
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %rhs) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.52"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.52"* %rhs, %"struct.adept::Expression.52"** %rhs.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1)
  %2 = load %"struct.adept::Expression.52"*, %"struct.adept::Expression.52"** %rhs.addr, align 8, !tbaa !2
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.52"* nonnull dereferenceable(1) %2, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call, double* %val_, align 8, !tbaa !226
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %5 = bitcast %"class.adept::Stack"* %4 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %5, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret %"class.adept::Active"* %this1
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* } @_ZN5adeptmiINS_8internal18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEENS2_IdiNS1_8MultiplyES5_EEEENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS1_15BinaryOperationINS1_7promoteINSA_4typeENSB_4typeEE4typeESA_NS1_8SubtractESB_EEE4typeERKNS_10ExpressionISE_SA_EERKNSM_ISF_SB_EE(%"struct.adept::Expression.57"* nonnull align 1 dereferenceable(1) %l, %"struct.adept::Expression.60"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %retval = alloca %"struct.adept::internal::BinaryOperation.54", align 8
  %l.addr = alloca %"struct.adept::Expression.57"*, align 8
  %r.addr = alloca %"struct.adept::Expression.60"*, align 8
  store %"struct.adept::Expression.57"* %l, %"struct.adept::Expression.57"** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.60"* %r, %"struct.adept::Expression.60"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.57"*, %"struct.adept::Expression.57"** %l.addr, align 8, !tbaa !2
  %call = call nonnull align 16 dereferenceable(24) %"struct.adept::internal::BinaryOpScalarLeft.56"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.57"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.56"* %call to %"struct.adept::Expression.57"*
  %2 = load %"struct.adept::Expression.60"*, %"struct.adept::Expression.60"** %r.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOpScalarLeft.59"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIdiNS1_8MultiplyENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.60"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %call1 to %"struct.adept::Expression.60"*
  call void @_ZN5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEEC2ERKNS_10ExpressionIdS6_EERKNSB_IdS9_EE(%"struct.adept::internal::BinaryOperation.54"* nonnull dereferenceable(16) %retval, %"struct.adept::Expression.57"* nonnull align 1 dereferenceable(1) %1, %"struct.adept::Expression.60"* nonnull align 1 dereferenceable(1) %3)
  %4 = bitcast %"struct.adept::internal::BinaryOperation.54"* %retval to { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* }*
  %5 = load { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* }, { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* }* %4, align 8
  ret { %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.59"* } %5
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adeptplIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_3AddES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE(%"struct.adept::internal::BinaryOpScalarLeft.56"* noalias sret(%"struct.adept::internal::BinaryOpScalarLeft.56") align 16 %agg.result, double* nonnull align 8 dereferenceable(8) %l, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %l.addr = alloca double*, align 8
  %r.addr = alloca %"struct.adept::Expression.40"*, align 8
  store double* %l, double** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %r, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %0 = load double*, double** %l.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  call void @_ZN5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEC2EdRKNS_10ExpressionIdS4_EE(%"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull dereferenceable(24) %agg.result, double %1, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %3)
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local { i32, %"class.adept::Active"* } @_ZN5adeptmlIiNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8MultiplyES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE(i32* nonnull align 4 dereferenceable(4) %l, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %retval = alloca %"struct.adept::internal::BinaryOpScalarLeft.59", align 8
  %l.addr = alloca i32*, align 8
  %r.addr = alloca %"struct.adept::Expression.40"*, align 8
  store i32* %l, i32** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %r, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %0 = load i32*, i32** %l.addr, align 8, !tbaa !2
  %1 = load i32, i32* %0, align 4, !tbaa !20
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  call void @_ZN5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEEC2EiRKNS_10ExpressionIdS4_EE(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %retval, i32 %1, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %3)
  %4 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %retval to { i32, %"class.adept::Active"* }*
  %5 = load { i32, %"class.adept::Active"* }, { i32, %"class.adept::Active"* }* %4, align 8
  ret { i32, %"class.adept::Active"* } %5
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS3_18BinaryOpScalarLeftIddNS3_3AddES1_EENS3_8SubtractENS5_IdiNS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.55"* nonnull align 1 dereferenceable(1) %rhs) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.55"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.55"* %rhs, %"struct.adept::Expression.55"** %rhs.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1)
  %2 = load %"struct.adept::Expression.55"*, %"struct.adept::Expression.55"** %rhs.addr, align 8, !tbaa !2
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEENS1_8SubtractENS3_IdiNS1_8MultiplyES6_EEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.55"* nonnull dereferenceable(1) %2, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call, double* %val_, align 8, !tbaa !226
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %5 = bitcast %"class.adept::Stack"* %4 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %5, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret %"class.adept::Active"* %this1
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN9adeptTest17log_wishart_priorIN5adept6ActiveIdEEEET_ii7WishartPKS4_S7_S7_(%"class.adept::Active"* noalias sret(%"class.adept::Active") align 8 %agg.result, i32 %p, i32 %k, double %wishart.coerce0, i32 %wishart.coerce1, %"class.adept::Active"* %sum_qs, %"class.adept::Active"* %Qdiags, %"class.adept::Active"* %icf) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %wishart = alloca %struct.Wishart, align 8
  %p.addr = alloca i32, align 4
  %k.addr = alloca i32, align 4
  %sum_qs.addr = alloca %"class.adept::Active"*, align 8
  %Qdiags.addr = alloca %"class.adept::Active"*, align 8
  %icf.addr = alloca %"class.adept::Active"*, align 8
  %n = alloca i32, align 4
  %icf_sz = alloca i32, align 4
  %C = alloca double, align 8
  %out = alloca %"class.adept::Active", align 8
  %ref.tmp = alloca i32, align 4
  %ik = alloca i32, align 4
  %frobenius = alloca %"class.adept::Active", align 8
  %ref.tmp11 = alloca %"struct.adept::internal::BinaryOperation.51", align 8
  %ref.tmp12 = alloca %"class.adept::Active", align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %ref.tmp14 = alloca %"class.adept::Active", align 8
  %ref.tmp29 = alloca %"struct.adept::internal::BinaryOperation.86", align 8
  %ref.tmp30 = alloca %"struct.adept::internal::BinaryOperation.88", align 8
  %ref.tmp31 = alloca %"struct.adept::internal::BinaryOpScalarLeft", align 16
  %ref.tmp32 = alloca double, align 8
  %ref.tmp41 = alloca %"struct.adept::internal::BinaryOpScalarLeft.59", align 8
  %ref.tmp59 = alloca %"struct.adept::internal::BinaryOpScalarRight", align 16
  %ref.tmp60 = alloca double, align 8
  %0 = bitcast %"class.adept::Active"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  %1 = bitcast %struct.Wishart* %wishart to { double, i32 }*
  %2 = getelementptr inbounds { double, i32 }, { double, i32 }* %1, i32 0, i32 0
  store double %wishart.coerce0, double* %2, align 8
  %3 = getelementptr inbounds { double, i32 }, { double, i32 }* %1, i32 0, i32 1
  store i32 %wishart.coerce1, i32* %3, align 8
  store i32 %p, i32* %p.addr, align 4, !tbaa !20
  store i32 %k, i32* %k.addr, align 4, !tbaa !20
  store %"class.adept::Active"* %sum_qs, %"class.adept::Active"** %sum_qs.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %Qdiags, %"class.adept::Active"** %Qdiags.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %icf, %"class.adept::Active"** %icf.addr, align 8, !tbaa !2
  %4 = bitcast i32* %n to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #9
  %5 = load i32, i32* %p.addr, align 4, !tbaa !20
  %m = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 1
  %6 = load i32, i32* %m, align 8, !tbaa !63
  %add = add nsw i32 %5, %6
  %add1 = add nsw i32 %add, 1
  store i32 %add1, i32* %n, align 4, !tbaa !20
  %7 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #9
  %8 = load i32, i32* %p.addr, align 4, !tbaa !20
  %9 = load i32, i32* %p.addr, align 4, !tbaa !20
  %add2 = add nsw i32 %9, 1
  %mul = mul nsw i32 %8, %add2
  %div = sdiv i32 %mul, 2
  store i32 %div, i32* %icf_sz, align 4, !tbaa !20
  %10 = bitcast double* %C to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %10) #9
  %11 = load i32, i32* %n, align 4, !tbaa !20
  %12 = load i32, i32* %p.addr, align 4, !tbaa !20
  %mul3 = mul nsw i32 %11, %12
  %conv = sitofp i32 %mul3 to double
  %gamma = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %13 = load double, double* %gamma, align 8, !tbaa !64
  %14 = call fast double @llvm.log.f64(double %13)
  %call = call fast double @_ZSt3logIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 2)
  %mul4 = fmul fast double 5.000000e-01, %call
  %sub = fsub fast double %14, %mul4
  %mul5 = fmul fast double %conv, %sub
  %15 = load i32, i32* %n, align 4, !tbaa !20
  %conv6 = sitofp i32 %15 to double
  %mul7 = fmul fast double 5.000000e-01, %conv6
  %16 = load i32, i32* %p.addr, align 4, !tbaa !20
  %conv8 = sitofp i32 %16 to double
  %call9 = call fast double @log_gamma_distrib(double %mul7, double %conv8) #30
  %sub10 = fsub fast double %mul5, %call9
  store double %sub10, double* %C, align 8, !tbaa !44
  %17 = bitcast %"class.adept::Active"* %out to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %17) #9
  %18 = bitcast i32* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #9
  store i32 0, i32* %ref.tmp, align 4, !tbaa !20
  call void @_ZN5adept6ActiveIdEC2IiEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %out, i32* nonnull align 4 dereferenceable(4) %ref.tmp, i8* null)
  %19 = bitcast i32* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %19) #9
  %20 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #9
  store i32 0, i32* %ik, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %21 = load i32, i32* %ik, align 4, !tbaa !20
  %22 = load i32, i32* %k.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %21, %22
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %23 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %23) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %24 = bitcast %"class.adept::Active"* %frobenius to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %24) #9
  %25 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %25) #9
  %26 = bitcast %"class.adept::Active"* %ref.tmp12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %26) #9
  %27 = load i32, i32* %p.addr, align 4, !tbaa !20
  %28 = load %"class.adept::Active"*, %"class.adept::Active"** %Qdiags.addr, align 8, !tbaa !2
  %29 = load i32, i32* %ik, align 4, !tbaa !20
  %30 = load i32, i32* %p.addr, align 4, !tbaa !20
  %mul13 = mul nsw i32 %29, %30
  %idxprom = sext i32 %mul13 to i64
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %28, i64 %idxprom
  invoke void @_ZN9adeptTest6sqnormIN5adept6ActiveIdEEEET_iPKS4_(%"class.adept::Active"* sret(%"class.adept::Active") align 8 %ref.tmp12, i32 %27, %"class.adept::Active"* %arrayidx)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body
  %31 = bitcast %"class.adept::Active"* %ref.tmp12 to %"struct.adept::Expression.40"*
  %32 = bitcast %"class.adept::Active"* %ref.tmp14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %32) #9
  %33 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %34 = load i32, i32* %p.addr, align 4, !tbaa !20
  %sub15 = sub nsw i32 %33, %34
  %35 = load %"class.adept::Active"*, %"class.adept::Active"** %icf.addr, align 8, !tbaa !2
  %36 = load i32, i32* %ik, align 4, !tbaa !20
  %37 = load i32, i32* %icf_sz, align 4, !tbaa !20
  %mul16 = mul nsw i32 %36, %37
  %38 = load i32, i32* %p.addr, align 4, !tbaa !20
  %add17 = add nsw i32 %mul16, %38
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %35, i64 %idxprom18
  invoke void @_ZN9adeptTest6sqnormIN5adept6ActiveIdEEEET_iPKS4_(%"class.adept::Active"* sret(%"class.adept::Active") align 8 %ref.tmp14, i32 %sub15, %"class.adept::Active"* %arrayidx19)
          to label %invoke.cont21 unwind label %lpad20

invoke.cont21:                                    ; preds = %invoke.cont
  %39 = bitcast %"class.adept::Active"* %ref.tmp14 to %"struct.adept::Expression.40"*
  %call24 = invoke { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptplINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_3AddES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %31, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %39)
          to label %invoke.cont23 unwind label %lpad22

invoke.cont23:                                    ; preds = %invoke.cont21
  %40 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp11 to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %41 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %40, i32 0, i32 0
  %42 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call24, 0
  store %"class.adept::Active"* %42, %"class.adept::Active"** %41, align 8
  %43 = getelementptr inbounds { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %40, i32 0, i32 1
  %44 = extractvalue { %"class.adept::Active"*, %"class.adept::Active"* } %call24, 1
  store %"class.adept::Active"* %44, %"class.adept::Active"** %43, align 8
  %45 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp11 to %"struct.adept::Expression.52"*
  invoke void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %frobenius, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %45, i8* null)
          to label %invoke.cont25 unwind label %lpad22

invoke.cont25:                                    ; preds = %invoke.cont23
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp14) #9
  %46 = bitcast %"class.adept::Active"* %ref.tmp14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %46) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp12) #9
  %47 = bitcast %"class.adept::Active"* %ref.tmp12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %47) #9
  %48 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %48) #9
  %49 = bitcast %"struct.adept::internal::BinaryOperation.86"* %ref.tmp29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %49) #9
  %50 = bitcast %"struct.adept::internal::BinaryOperation.88"* %ref.tmp30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %50) #9
  %51 = bitcast %"class.adept::Active"* %out to %"struct.adept::Expression.40"*
  %52 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %ref.tmp31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %52) #9
  %53 = bitcast double* %ref.tmp32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %53) #9
  %gamma33 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %54 = load double, double* %gamma33, align 8, !tbaa !64
  %mul34 = fmul fast double 5.000000e-01, %54
  %gamma35 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %55 = load double, double* %gamma35, align 8, !tbaa !64
  %mul36 = fmul fast double %mul34, %55
  store double %mul36, double* %ref.tmp32, align 8, !tbaa !44
  %56 = bitcast %"class.adept::Active"* %frobenius to %"struct.adept::Expression.40"*
  invoke void @_ZN5adeptmlIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8MultiplyES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE(%"struct.adept::internal::BinaryOpScalarLeft"* sret(%"struct.adept::internal::BinaryOpScalarLeft") align 16 %ref.tmp31, double* nonnull align 8 dereferenceable(8) %ref.tmp32, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %56)
          to label %invoke.cont38 unwind label %lpad37

invoke.cont38:                                    ; preds = %invoke.cont25
  %57 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %ref.tmp31 to %"struct.adept::Expression.53"*
  %call40 = invoke { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* } @_ZN5adeptplINS_6ActiveIdEENS_8internal18BinaryOpScalarLeftIddNS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISC_S8_EERKNSK_ISD_S9_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %51, %"struct.adept::Expression.53"* nonnull align 1 dereferenceable(1) %57)
          to label %invoke.cont39 unwind label %lpad37

invoke.cont39:                                    ; preds = %invoke.cont38
  %58 = bitcast %"struct.adept::internal::BinaryOperation.88"* %ref.tmp30 to { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* }*
  %59 = getelementptr inbounds { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* }, { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* }* %58, i32 0, i32 0
  %60 = extractvalue { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* } %call40, 0
  store %"class.adept::Active"* %60, %"class.adept::Active"** %59, align 8
  %61 = getelementptr inbounds { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* }, { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* }* %58, i32 0, i32 1
  %62 = extractvalue { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* } %call40, 1
  store %"struct.adept::internal::BinaryOpScalarLeft"* %62, %"struct.adept::internal::BinaryOpScalarLeft"** %61, align 8
  %63 = bitcast %"struct.adept::internal::BinaryOperation.88"* %ref.tmp30 to %"struct.adept::Expression.89"*
  %64 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %64) #9
  %m42 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 1
  %65 = load %"class.adept::Active"*, %"class.adept::Active"** %sum_qs.addr, align 8, !tbaa !2
  %66 = load i32, i32* %ik, align 4, !tbaa !20
  %idxprom43 = sext i32 %66 to i64
  %arrayidx44 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %65, i64 %idxprom43
  %67 = bitcast %"class.adept::Active"* %arrayidx44 to %"struct.adept::Expression.40"*
  %call47 = invoke { i32, %"class.adept::Active"* } @_ZN5adeptmlIiNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8MultiplyES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE(i32* nonnull align 4 dereferenceable(4) %m42, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %67)
          to label %invoke.cont46 unwind label %lpad45

invoke.cont46:                                    ; preds = %invoke.cont39
  %68 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp41 to { i32, %"class.adept::Active"* }*
  %69 = getelementptr inbounds { i32, %"class.adept::Active"* }, { i32, %"class.adept::Active"* }* %68, i32 0, i32 0
  %70 = extractvalue { i32, %"class.adept::Active"* } %call47, 0
  store i32 %70, i32* %69, align 8
  %71 = getelementptr inbounds { i32, %"class.adept::Active"* }, { i32, %"class.adept::Active"* }* %68, i32 0, i32 1
  %72 = extractvalue { i32, %"class.adept::Active"* } %call47, 1
  store %"class.adept::Active"* %72, %"class.adept::Active"** %71, align 8
  %73 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp41 to %"struct.adept::Expression.60"*
  invoke void @_ZN5adeptmiINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS6_IdiS7_S4_EEEENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINSC_4typeENSD_4typeEE4typeESC_NS1_8SubtractESD_EEE4typeERKNS_10ExpressionISF_SC_EERKNSN_ISG_SD_EE(%"struct.adept::internal::BinaryOperation.86"* sret(%"struct.adept::internal::BinaryOperation.86") align 8 %ref.tmp29, %"struct.adept::Expression.89"* nonnull align 1 dereferenceable(1) %63, %"struct.adept::Expression.60"* nonnull align 1 dereferenceable(1) %73)
          to label %invoke.cont48 unwind label %lpad45

invoke.cont48:                                    ; preds = %invoke.cont46
  %74 = bitcast %"struct.adept::internal::BinaryOperation.86"* %ref.tmp29 to %"struct.adept::Expression.87"*
  %call50 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_3AddENS3_18BinaryOpScalarLeftIddNS3_8MultiplyES1_EEEENS3_8SubtractENS6_IdiS7_S1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSE_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SE_EE(%"class.adept::Active"* nonnull dereferenceable(12) %out, %"struct.adept::Expression.87"* nonnull align 1 dereferenceable(1) %74)
          to label %invoke.cont49 unwind label %lpad45

invoke.cont49:                                    ; preds = %invoke.cont48
  %75 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %75) #9
  %76 = bitcast double* %ref.tmp32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %76) #9
  %77 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %ref.tmp31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %77) #9
  %78 = bitcast %"struct.adept::internal::BinaryOperation.88"* %ref.tmp30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %78) #9
  %79 = bitcast %"struct.adept::internal::BinaryOperation.86"* %ref.tmp29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %79) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %frobenius) #9
  %80 = bitcast %"class.adept::Active"* %frobenius to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %80) #9
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont49
  %81 = load i32, i32* %ik, align 4, !tbaa !20
  %inc = add nsw i32 %81, 1
  store i32 %inc, i32* %ik, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !317

lpad:                                             ; preds = %for.body
  %82 = landingpad { i8*, i32 }
          cleanup
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %exn.slot, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %ehselector.slot, align 4
  br label %ehcleanup27

lpad20:                                           ; preds = %invoke.cont
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %exn.slot, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad22:                                           ; preds = %invoke.cont23, %invoke.cont21
  %88 = landingpad { i8*, i32 }
          cleanup
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %exn.slot, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %ehselector.slot, align 4
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp14) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad22, %lpad20
  %91 = bitcast %"class.adept::Active"* %ref.tmp14 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %91) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %ref.tmp12) #9
  br label %ehcleanup27

ehcleanup27:                                      ; preds = %ehcleanup, %lpad
  %92 = bitcast %"class.adept::Active"* %ref.tmp12 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %92) #9
  %93 = bitcast %"struct.adept::internal::BinaryOperation.51"* %ref.tmp11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %93) #9
  br label %ehcleanup57

lpad37:                                           ; preds = %invoke.cont38, %invoke.cont25
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %exn.slot, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %ehselector.slot, align 4
  br label %ehcleanup52

lpad45:                                           ; preds = %invoke.cont48, %invoke.cont46, %invoke.cont39
  %97 = landingpad { i8*, i32 }
          cleanup
  %98 = extractvalue { i8*, i32 } %97, 0
  store i8* %98, i8** %exn.slot, align 8
  %99 = extractvalue { i8*, i32 } %97, 1
  store i32 %99, i32* %ehselector.slot, align 4
  %100 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %ref.tmp41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %100) #9
  br label %ehcleanup52

ehcleanup52:                                      ; preds = %lpad45, %lpad37
  %101 = bitcast double* %ref.tmp32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %101) #9
  %102 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %ref.tmp31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %102) #9
  %103 = bitcast %"struct.adept::internal::BinaryOperation.88"* %ref.tmp30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %103) #9
  %104 = bitcast %"struct.adept::internal::BinaryOperation.86"* %ref.tmp29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %104) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %frobenius) #9
  br label %ehcleanup57

ehcleanup57:                                      ; preds = %ehcleanup52, %ehcleanup27
  %105 = bitcast %"class.adept::Active"* %frobenius to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %105) #9
  %106 = bitcast i32* %ik to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %106) #9
  br label %ehcleanup68

for.end:                                          ; preds = %for.cond.cleanup
  %107 = bitcast %"struct.adept::internal::BinaryOpScalarRight"* %ref.tmp59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %107) #9
  %108 = bitcast %"class.adept::Active"* %out to %"struct.adept::Expression.40"*
  %109 = bitcast double* %ref.tmp60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %109) #9
  %110 = load i32, i32* %k.addr, align 4, !tbaa !20
  %conv61 = sitofp i32 %110 to double
  %111 = load double, double* %C, align 8, !tbaa !44
  %mul62 = fmul fast double %conv61, %111
  store double %mul62, double* %ref.tmp60, align 8, !tbaa !44
  invoke void @_ZN5adeptmiINS_6ActiveIdEEdEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT0_EE5valueENS3_19BinaryOpScalarRightINS3_7promoteINT_4typeES5_E4typeES8_NS3_8SubtractES5_EEE4typeERKNS_10ExpressionIS9_S8_EERKS5_(%"struct.adept::internal::BinaryOpScalarRight"* sret(%"struct.adept::internal::BinaryOpScalarRight") align 16 %ref.tmp59, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %108, double* nonnull align 8 dereferenceable(8) %ref.tmp60)
          to label %invoke.cont64 unwind label %lpad63

invoke.cont64:                                    ; preds = %for.end
  %112 = bitcast %"struct.adept::internal::BinaryOpScalarRight"* %ref.tmp59 to %"struct.adept::Expression.90"*
  invoke void @_ZN5adept6ActiveIdEC2IdNS_8internal19BinaryOpScalarRightIdS1_NS3_8SubtractEdEEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result, %"struct.adept::Expression.90"* nonnull align 1 dereferenceable(1) %112, i8* null)
          to label %invoke.cont65 unwind label %lpad63

invoke.cont65:                                    ; preds = %invoke.cont64
  %113 = bitcast double* %ref.tmp60 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %113) #9
  %114 = bitcast %"struct.adept::internal::BinaryOpScalarRight"* %ref.tmp59 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %114) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %out) #9
  %115 = bitcast %"class.adept::Active"* %out to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %115) #9
  %116 = bitcast double* %C to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %116) #9
  %117 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %117) #9
  %118 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %118) #9
  ret void

lpad63:                                           ; preds = %invoke.cont64, %for.end
  %119 = landingpad { i8*, i32 }
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %exn.slot, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %ehselector.slot, align 4
  %122 = bitcast double* %ref.tmp60 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %122) #9
  %123 = bitcast %"struct.adept::internal::BinaryOpScalarRight"* %ref.tmp59 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %123) #9
  br label %ehcleanup68

ehcleanup68:                                      ; preds = %lpad63, %ehcleanup57
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %out) #9
  %124 = bitcast %"class.adept::Active"* %out to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %124) #9
  %125 = bitcast double* %C to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %125) #9
  %126 = bitcast i32* %icf_sz to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %126) #9
  %127 = bitcast i32* %n to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %127) #9
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup68
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val73 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val73
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EED2Ev(%"class.std::vector.45"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.45"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.std::vector.45"* %this, %"class.std::vector.45"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.std::vector.45"*, %"class.std::vector.45"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.45"* %this1 to %"struct.std::_Vector_base.46"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start, align 8, !tbaa !309
  %3 = bitcast %"class.std::vector.45"* %this1 to %"struct.std::_Vector_base.46"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %3, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %4, i32 0, i32 1
  %5 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_finish, align 8, !tbaa !318
  %6 = bitcast %"class.std::vector.45"* %this1 to %"struct.std::_Vector_base.46"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.47"* @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %6) #9
  invoke void @_ZSt8_DestroyIPN5adept6ActiveIdEES2_EvT_S4_RSaIT0_E(%"class.adept::Active"* %2, %"class.adept::Active"* %5, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %7 = bitcast %"class.std::vector.45"* %this1 to %"struct.std::_Vector_base.46"*
  call void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EED2Ev(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %7) #9
  ret void

lpad:                                             ; preds = %entry
  %8 = landingpad { i8*, i32 }
          catch i8* null
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot, align 4
  %11 = bitcast %"class.std::vector.45"* %this1 to %"struct.std::_Vector_base.46"*
  call void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EED2Ev(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %11) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEEC2Ev(%"class.__gnu_cxx::new_allocator.48"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %this, %"class.__gnu_cxx::new_allocator.48"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %this.addr, align 8
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE17_S_check_init_lenEmRKS3_(i64 %__n, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %__a) #0 comdat align 2 {
entry:
  %__n.addr = alloca i64, align 8
  %__a.addr = alloca %"class.std::allocator.47"*, align 8
  %ref.tmp = alloca %"class.std::allocator.47", align 1
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store %"class.std::allocator.47"* %__a, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %1 = bitcast %"class.std::allocator.47"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  %2 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSaIN5adept6ActiveIdEEEC2ERKS2_(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %2) #9
  %call = call i64 @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %ref.tmp) #9
  %cmp = icmp ugt i64 %0, %call
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"class.std::allocator.47"*)*)(%"class.std::allocator.47"* nonnull dereferenceable(1) %ref.tmp) #9
  %3 = bitcast %"class.std::allocator.47"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %3) #9
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt20__throw_length_errorPKc(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.123, i64 0, i64 0)) #31
  unreachable

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %__n.addr, align 8, !tbaa !13
  ret i64 %4
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %this, i64 %__n, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.46"*, align 8
  %__n.addr = alloca i64, align 8
  %__a.addr = alloca %"class.std::allocator.47"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"struct.std::_Vector_base.46"* %this, %"struct.std::_Vector_base.46"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store %"class.std::allocator.47"* %__a, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.46"*, %"struct.std::_Vector_base.46"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  %0 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %0) #9
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  invoke void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %this1, i64 %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE21_M_default_initializeEm(%"class.std::vector.45"* nonnull dereferenceable(24) %this, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.45"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector.45"* %this, %"class.std::vector.45"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"class.std::vector.45"*, %"class.std::vector.45"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.45"* %this1 to %"struct.std::_Vector_base.46"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %0, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start, align 8, !tbaa !309
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %4 = bitcast %"class.std::vector.45"* %this1 to %"struct.std::_Vector_base.46"*
  %call = call nonnull align 1 dereferenceable(1) %"class.std::allocator.47"* @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %4) #9
  %call2 = call %"class.adept::Active"* @_ZSt27__uninitialized_default_n_aIPN5adept6ActiveIdEEmS2_ET_S4_T0_RSaIT1_E(%"class.adept::Active"* %2, i64 %3, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %call)
  %5 = bitcast %"class.std::vector.45"* %this1 to %"struct.std::_Vector_base.46"*
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %5, i32 0, i32 0
  %6 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl3 to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %6, i32 0, i32 1
  store %"class.adept::Active"* %call2, %"class.adept::Active"** %_M_finish, align 8, !tbaa !318
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EED2Ev(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.46"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"struct.std::_Vector_base.46"* %this, %"struct.std::_Vector_base.46"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.46"*, %"struct.std::_Vector_base.46"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %0, i32 0, i32 0
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start, align 8, !tbaa !309
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %2, i32 0, i32 2
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_end_of_storage, align 8, !tbaa !319
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl3 to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %4, i32 0, i32 0
  %5 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start4, align 8, !tbaa !309
  %sub.ptr.lhs.cast = ptrtoint %"class.adept::Active"* %3 to i64
  %sub.ptr.rhs.cast = ptrtoint %"class.adept::Active"* %5 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16
  invoke void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %this1, %"class.adept::Active"* %1, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl5) #9
  ret void

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  call void bitcast (void (%"class.__gnu_cxx::new_allocator.48"*)* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev to void (%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"*)*)(%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* nonnull dereferenceable(24) %_M_impl6) #9
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #29
  unreachable
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt6vectorIN5adept6ActiveIdEESaIS2_EE11_S_max_sizeERKS3_(%"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %__a) #8 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.47"*, align 8
  %__diffmax = alloca i64, align 8
  %__allocmax = alloca i64, align 8
  store %"class.std::allocator.47"* %__a, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %0 = bitcast i64* %__diffmax to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  store i64 576460752303423487, i64* %__diffmax, align 8, !tbaa !13
  %1 = bitcast i64* %__allocmax to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %call = call i64 @_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE8max_sizeERKS3_(%"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %2) #9
  store i64 %call, i64* %__allocmax, align 8, !tbaa !13
  %call1 = call nonnull align 8 dereferenceable(8) i64* @_ZSt3minImERKT_S2_S2_(i64* nonnull align 8 dereferenceable(8) %__diffmax, i64* nonnull align 8 dereferenceable(8) %__allocmax)
  %3 = load i64, i64* %call1, align 8, !tbaa !13
  %4 = bitcast i64* %__allocmax to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #9
  %5 = bitcast i64* %__diffmax to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  ret i64 %3
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSaIN5adept6ActiveIdEEEC2ERKS2_(%"class.std::allocator.47"* nonnull dereferenceable(1) %this, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::allocator.47"*, align 8
  %__a.addr = alloca %"class.std::allocator.47"*, align 8
  store %"class.std::allocator.47"* %this, %"class.std::allocator.47"** %this.addr, align 8, !tbaa !2
  store %"class.std::allocator.47"* %__a, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %this.addr, align 8
  %0 = bitcast %"class.std::allocator.47"* %this1 to %"class.__gnu_cxx::new_allocator.48"*
  %1 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %2 = bitcast %"class.std::allocator.47"* %1 to %"class.__gnu_cxx::new_allocator.48"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.48"* nonnull dereferenceable(1) %0, %"class.__gnu_cxx::new_allocator.48"* nonnull align 1 dereferenceable(1) %2) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE8max_sizeERKS3_(%"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %__a) #8 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.47"*, align 8
  store %"class.std::allocator.47"* %__a, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %0 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.47"* %0 to %"class.__gnu_cxx::new_allocator.48"*
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.48"* nonnull dereferenceable(1) %1) #9
  ret i64 %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.48"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %this, %"class.__gnu_cxx::new_allocator.48"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %this.addr, align 8
  ret i64 576460752303423487
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.48"* nonnull dereferenceable(1) %this, %"class.__gnu_cxx::new_allocator.48"* nonnull align 1 dereferenceable(1) %0) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  %.addr = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %this, %"class.__gnu_cxx::new_allocator.48"** %this.addr, align 8, !tbaa !2
  store %"class.__gnu_cxx::new_allocator.48"* %0, %"class.__gnu_cxx::new_allocator.48"** %.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* nonnull dereferenceable(24) %this, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %__a) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"*, align 8
  %__a.addr = alloca %"class.std::allocator.47"*, align 8
  store %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %this, %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"** %this.addr, align 8, !tbaa !2
  store %"class.std::allocator.47"* %__a, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"*, %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %this1 to %"class.std::allocator.47"*
  %1 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  call void @_ZNSaIN5adept6ActiveIdEEEC2ERKS2_(%"class.std::allocator.47"* nonnull dereferenceable(1) %0, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %1) #9
  %2 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %this1 to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  call void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* nonnull dereferenceable(24) %2) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %this, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.46"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.46"* %this, %"struct.std::_Vector_base.46"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"struct.std::_Vector_base.46"*, %"struct.std::_Vector_base.46"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"class.adept::Active"* @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %this1, i64 %0)
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %1, i32 0, i32 0
  store %"class.adept::Active"* %call, %"class.adept::Active"** %_M_start, align 8, !tbaa !309
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  %2 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl2 to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_start3 = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %2, i32 0, i32 0
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start3, align 8, !tbaa !309
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  %4 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl4 to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %4, i32 0, i32 1
  store %"class.adept::Active"* %3, %"class.adept::Active"** %_M_finish, align 8, !tbaa !318
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl5 to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_start6 = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %5, i32 0, i32 0
  %6 = load %"class.adept::Active"*, %"class.adept::Active"** %_M_start6, align 8, !tbaa !309
  %7 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %6, i64 %7
  %_M_impl7 = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  %8 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl7 to %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %8, i32 0, i32 2
  store %"class.adept::Active"* %add.ptr, %"class.adept::Active"** %_M_end_of_storage, align 8, !tbaa !319
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEED2Ev(%"class.__gnu_cxx::new_allocator.48"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %this, %"class.__gnu_cxx::new_allocator.48"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE17_Vector_impl_dataC2Ev(%"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*, align 8
  store %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %this, %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"*, %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"** %this.addr, align 8
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %this1, i32 0, i32 0
  store %"class.adept::Active"* null, %"class.adept::Active"** %_M_start, align 8, !tbaa !309
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %this1, i32 0, i32 1
  store %"class.adept::Active"* null, %"class.adept::Active"** %_M_finish, align 8, !tbaa !318
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data", %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl_data"* %this1, i32 0, i32 2
  store %"class.adept::Active"* null, %"class.adept::Active"** %_M_end_of_storage, align 8, !tbaa !319
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"class.adept::Active"* @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %this, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.46"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.46"* %this, %"struct.std::_Vector_base.46"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"struct.std::_Vector_base.46"*, %"struct.std::_Vector_base.46"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl to %"class.std::allocator.47"*
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"class.adept::Active"* @_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE8allocateERS3_m(%"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %1, i64 %2)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %"class.adept::Active"* [ %call, %cond.true ], [ null, %cond.false ]
  ret %"class.adept::Active"* %cond
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"class.adept::Active"* @_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE8allocateERS3_m(%"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %__a, i64 %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.47"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.47"* %__a, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.47"* %0 to %"class.__gnu_cxx::new_allocator.48"*
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"class.adept::Active"* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.48"* nonnull dereferenceable(1) %1, i64 %2, i8* null)
  ret %"class.adept::Active"* %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"class.adept::Active"* @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.48"* nonnull dereferenceable(1) %this, i64 %__n, i8* %0) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %this, %"class.__gnu_cxx::new_allocator.48"** %this.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store i8* %0, i8** %.addr, align 8, !tbaa !2
  %this1 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.48"* nonnull dereferenceable(1) %this1) #9
  %cmp = icmp ugt i64 %1, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #31
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %mul = mul i64 %2, 16
  %call2 = call noalias nonnull i8* @_Znwm(i64 %mul) #34
  %3 = bitcast i8* %call2 to %"class.adept::Active"*
  ret %"class.adept::Active"* %3
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local %"class.adept::Active"* @_ZSt27__uninitialized_default_n_aIPN5adept6ActiveIdEEmS2_ET_S4_T0_RSaIT1_E(%"class.adept::Active"* %__first, i64 %__n, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %0) #5 comdat {
entry:
  %__first.addr = alloca %"class.adept::Active"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca %"class.std::allocator.47"*, align 8
  store %"class.adept::Active"* %__first, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  store %"class.std::allocator.47"* %0, %"class.std::allocator.47"** %.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"class.adept::Active"* @_ZSt25__uninitialized_default_nIPN5adept6ActiveIdEEmET_S4_T0_(%"class.adept::Active"* %1, i64 %2)
  ret %"class.adept::Active"* %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 1 dereferenceable(1) %"class.std::allocator.47"* @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.46"*, align 8
  store %"struct.std::_Vector_base.46"* %this, %"struct.std::_Vector_base.46"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.std::_Vector_base.46"*, %"struct.std::_Vector_base.46"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl to %"class.std::allocator.47"*
  ret %"class.std::allocator.47"* %0
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local %"class.adept::Active"* @_ZSt25__uninitialized_default_nIPN5adept6ActiveIdEEmET_S4_T0_(%"class.adept::Active"* %__first, i64 %__n) #5 comdat {
entry:
  %__first.addr = alloca %"class.adept::Active"*, align 8
  %__n.addr = alloca i64, align 8
  %__assignable = alloca i8, align 1
  store %"class.adept::Active"* %__first, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %__assignable) #9
  store i8 1, i8* %__assignable, align 1, !tbaa !18
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  %1 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %call = call %"class.adept::Active"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN5adept6ActiveIdEEmEET_S6_T0_(%"class.adept::Active"* %0, i64 %1)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %__assignable) #9
  ret %"class.adept::Active"* %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local %"class.adept::Active"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPN5adept6ActiveIdEEmEET_S6_T0_(%"class.adept::Active"* %__first, i64 %__n) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__first.addr = alloca %"class.adept::Active"*, align 8
  %__n.addr = alloca i64, align 8
  %__cur = alloca %"class.adept::Active"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.adept::Active"* %__first, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = bitcast %"class.adept::Active"** %__cur to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %1, %"class.adept::Active"** %__cur, align 8, !tbaa !2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %cmp = icmp ugt i64 %2, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %__cur, align 8, !tbaa !2
  %call = call %"class.adept::Active"* @_ZSt11__addressofIN5adept6ActiveIdEEEPT_RS3_(%"class.adept::Active"* nonnull align 8 dereferenceable(12) %3) #9
  invoke void @_ZSt10_ConstructIN5adept6ActiveIdEEJEEvPT_DpOT0_(%"class.adept::Active"* %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont
  %4 = load i64, i64* %__n.addr, align 8, !tbaa !13
  %dec = add i64 %4, -1
  store i64 %dec, i64* %__n.addr, align 8, !tbaa !13
  %5 = load %"class.adept::Active"*, %"class.adept::Active"** %__cur, align 8, !tbaa !2
  %incdec.ptr = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %5, i32 1
  store %"class.adept::Active"* %incdec.ptr, %"class.adept::Active"** %__cur, align 8, !tbaa !2
  br label %for.cond, !llvm.loop !320

lpad:                                             ; preds = %for.body
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %9 = call i8* @__cxa_begin_catch(i8* %exn) #9
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  %11 = load %"class.adept::Active"*, %"class.adept::Active"** %__cur, align 8, !tbaa !2
  invoke void @_ZSt8_DestroyIPN5adept6ActiveIdEEEvT_S4_(%"class.adept::Active"* %10, %"class.adept::Active"* %11)
          to label %invoke.cont2 unwind label %lpad1

invoke.cont2:                                     ; preds = %catch
  invoke void @__cxa_rethrow() #31
          to label %unreachable unwind label %lpad1

for.end:                                          ; preds = %for.cond
  %12 = load %"class.adept::Active"*, %"class.adept::Active"** %__cur, align 8, !tbaa !2
  %13 = bitcast %"class.adept::Active"** %__cur to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #9
  ret %"class.adept::Active"* %12

lpad1:                                            ; preds = %invoke.cont2, %catch
  %14 = landingpad { i8*, i32 }
          cleanup
  %15 = extractvalue { i8*, i32 } %14, 0
  store i8* %15, i8** %exn.slot, align 8
  %16 = extractvalue { i8*, i32 } %14, 1
  store i32 %16, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont3 unwind label %terminate.lpad

invoke.cont3:                                     ; preds = %lpad1
  %17 = bitcast %"class.adept::Active"** %__cur to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #9
  br label %eh.resume

try.cont:                                         ; No predecessors!
  unreachable

eh.resume:                                        ; preds = %invoke.cont3
  %exn4 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn4, 0
  %lpad.val5 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val5

terminate.lpad:                                   ; preds = %lpad1
  %18 = landingpad { i8*, i32 }
          catch i8* null
  %19 = extractvalue { i8*, i32 } %18, 0
  call void @__clang_call_terminate(i8* %19) #29
  unreachable

unreachable:                                      ; preds = %invoke.cont2
  unreachable
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt10_ConstructIN5adept6ActiveIdEEJEEvPT_DpOT0_(%"class.adept::Active"* %__p) #5 comdat {
entry:
  %__p.addr = alloca %"class.adept::Active"*, align 8
  store %"class.adept::Active"* %__p, %"class.adept::Active"** %__p.addr, align 8, !tbaa !2
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %__p.addr, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Active"* %0 to i8*
  %2 = bitcast i8* %1 to %"class.adept::Active"*
  call void @_ZN5adept6ActiveIdEC2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %2)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local %"class.adept::Active"* @_ZSt11__addressofIN5adept6ActiveIdEEEPT_RS3_(%"class.adept::Active"* nonnull align 8 dereferenceable(12) %__r) #12 comdat {
entry:
  %__r.addr = alloca %"class.adept::Active"*, align 8
  store %"class.adept::Active"* %__r, %"class.adept::Active"** %__r.addr, align 8, !tbaa !2
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %__r.addr, align 8, !tbaa !2
  ret %"class.adept::Active"* %0
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt8_DestroyIPN5adept6ActiveIdEEEvT_S4_(%"class.adept::Active"* %__first, %"class.adept::Active"* %__last) #5 comdat {
entry:
  %__first.addr = alloca %"class.adept::Active"*, align 8
  %__last.addr = alloca %"class.adept::Active"*, align 8
  store %"class.adept::Active"* %__first, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %__last, %"class.adept::Active"** %__last.addr, align 8, !tbaa !2
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %__last.addr, align 8, !tbaa !2
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5adept6ActiveIdEEEEvT_S6_(%"class.adept::Active"* %0, %"class.adept::Active"* %1)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb0EE9__destroyIPN5adept6ActiveIdEEEEvT_S6_(%"class.adept::Active"* %__first, %"class.adept::Active"* %__last) #0 comdat align 2 {
entry:
  %__first.addr = alloca %"class.adept::Active"*, align 8
  %__last.addr = alloca %"class.adept::Active"*, align 8
  store %"class.adept::Active"* %__first, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %__last, %"class.adept::Active"** %__last.addr, align 8, !tbaa !2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %__last.addr, align 8, !tbaa !2
  %cmp = icmp ne %"class.adept::Active"* %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  %call = call %"class.adept::Active"* @_ZSt11__addressofIN5adept6ActiveIdEEEPT_RS3_(%"class.adept::Active"* nonnull align 8 dereferenceable(12) %2) #9
  call void @_ZSt8_DestroyIN5adept6ActiveIdEEEvPT_(%"class.adept::Active"* %call)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  %incdec.ptr = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %3, i32 1
  store %"class.adept::Active"* %incdec.ptr, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  br label %for.cond, !llvm.loop !321

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: inlinehint nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZSt8_DestroyIN5adept6ActiveIdEEEvPT_(%"class.adept::Active"* %__pointer) #12 comdat {
entry:
  %__pointer.addr = alloca %"class.adept::Active"*, align 8
  store %"class.adept::Active"* %__pointer, %"class.adept::Active"** %__pointer.addr, align 8, !tbaa !2
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %__pointer.addr, align 8, !tbaa !2
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %0) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.46"* nonnull dereferenceable(24) %this, %"class.adept::Active"* %__p, i64 %__n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.46"*, align 8
  %__p.addr = alloca %"class.adept::Active"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.46"* %this, %"struct.std::_Vector_base.46"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %__p, %"class.adept::Active"** %__p.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %this1 = load %"struct.std::_Vector_base.46"*, %"struct.std::_Vector_base.46"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %__p.addr, align 8, !tbaa !2
  %tobool = icmp ne %"class.adept::Active"* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.46", %"struct.std::_Vector_base.46"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<adept::Active<double>, std::allocator<adept::Active<double>>>::_Vector_impl"* %_M_impl to %"class.std::allocator.47"*
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %__p.addr, align 8, !tbaa !2
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE10deallocateERS3_PS2_m(%"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %1, %"class.adept::Active"* %2, i64 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIN5adept6ActiveIdEEEE10deallocateERS3_PS2_m(%"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %__a, %"class.adept::Active"* %__p, i64 %__n) #0 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::allocator.47"*, align 8
  %__p.addr = alloca %"class.adept::Active"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::allocator.47"* %__a, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %__p, %"class.adept::Active"** %__p.addr, align 8, !tbaa !2
  store i64 %__n, i64* %__n.addr, align 8, !tbaa !13
  %0 = load %"class.std::allocator.47"*, %"class.std::allocator.47"** %__a.addr, align 8, !tbaa !2
  %1 = bitcast %"class.std::allocator.47"* %0 to %"class.__gnu_cxx::new_allocator.48"*
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %__p.addr, align 8, !tbaa !2
  %3 = load i64, i64* %__n.addr, align 8, !tbaa !13
  call void @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.48"* nonnull dereferenceable(1) %1, %"class.adept::Active"* %2, i64 %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIN5adept6ActiveIdEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.48"* nonnull dereferenceable(1) %this, %"class.adept::Active"* %__p, i64 %0) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::new_allocator.48"*, align 8
  %__p.addr = alloca %"class.adept::Active"*, align 8
  %.addr = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.48"* %this, %"class.__gnu_cxx::new_allocator.48"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %__p, %"class.adept::Active"** %__p.addr, align 8, !tbaa !2
  store i64 %0, i64* %.addr, align 8, !tbaa !13
  %this1 = load %"class.__gnu_cxx::new_allocator.48"*, %"class.__gnu_cxx::new_allocator.48"** %this.addr, align 8
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %__p.addr, align 8, !tbaa !2
  %2 = bitcast %"class.adept::Active"* %1 to i8*
  call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdEENS_8internal9enable_ifIXsr17is_not_expressionIT_EE5valueERS1_E4typeERKS5_(%"class.adept::Active"* nonnull dereferenceable(12) %this, double* nonnull align 8 dereferenceable(8) %rhs) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca double*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store double* %rhs, double** %rhs.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load double*, double** %rhs.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %1, double* %val_, align 8, !tbaa !226
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %3 = bitcast %"class.adept::Stack"* %2 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %3, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret %"class.adept::Active"* %this1
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2ERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %rhs) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"class.adept::Active"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %rhs, %"class.adept::Active"** %rhs.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = bitcast %"class.adept::Active"* %this1 to %"struct.adept::Expression.40"*
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double 0.000000e+00, double* %val_, align 8, !tbaa !226
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call i32 @_ZN5adept5Stack17register_gradientEv(%"class.adept::Stack"* nonnull dereferenceable(149) %1)
  store i32 %call, i32* %gradient_index_, align 8, !tbaa !228
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %rhs.addr, align 8, !tbaa !2
  %call2 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %this1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2)
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local %"class.adept::Active"* @_ZN5adept3expIdNS_6ActiveIdEEEENS_8internal14UnaryOperationIT_NS3_3ExpET0_EERKNS_10ExpressionIS5_S7_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %retval = alloca %"struct.adept::internal::UnaryOperation", align 8
  %r.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::Expression.40"* %r, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  call void @_ZN5adept8internal14UnaryOperationIdNS0_3ExpENS_6ActiveIdEEEC2ERKNS_10ExpressionIdS4_EE(%"struct.adept::internal::UnaryOperation"* nonnull dereferenceable(8) %retval, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %1)
  %coerce.dive = getelementptr inbounds %"struct.adept::internal::UnaryOperation", %"struct.adept::internal::UnaryOperation"* %retval, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %coerce.dive, align 8
  ret %"class.adept::Active"* %2
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal14UnaryOperationIdNS3_3ExpES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.62"* nonnull align 1 dereferenceable(1) %rhs) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.62"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.62"* %rhs, %"struct.adept::Expression.62"** %rhs.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1)
  %2 = load %"struct.adept::Expression.62"*, %"struct.adept::Expression.62"** %rhs.addr, align 8, !tbaa !2
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3ExpENS_6ActiveIdEEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.62"* nonnull dereferenceable(1) %2, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call, double* %val_, align 8, !tbaa !226
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %5 = bitcast %"class.adept::Stack"* %4 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %5, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret %"class.adept::Active"* %this1
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %rhs) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"class.adept::Active"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %rhs, %"class.adept::Active"** %rhs.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig11check_spaceEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, i32 1)
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %rhs.addr, align 8, !tbaa !2
  %3 = bitcast %"class.adept::Active"* %2 to %"struct.adept::Expression.40"*
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %4)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call, double* %val_, align 8, !tbaa !226
  %5 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %6 = bitcast %"class.adept::Stack"* %5 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %6, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret %"class.adept::Active"* %this1
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal16StackStorageOrig11check_spaceEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this, i32 %n) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::StackStorageOrig"*, align 8
  %n.addr = alloca i32, align 4
  store %"class.adept::internal::StackStorageOrig"* %this, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8, !tbaa !2
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8
  %n_allocated_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 6
  %0 = load i32, i32* %n_allocated_operations_, align 4, !tbaa !168
  %n_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 5
  %1 = load i32, i32* %n_operations_, align 8, !tbaa !167
  %2 = load i32, i32* %n.addr, align 4, !tbaa !20
  %add = add nsw i32 %1, %2
  %add2 = add nsw i32 %add, 1
  %cmp = icmp slt i32 %0, %add2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %n.addr, align 4, !tbaa !20
  call void @_ZN5adept8internal16StackStorageOrig20grow_operation_stackEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this1, i32 %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.40"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %scratch = alloca %"class.adept::internal::ScratchVector", align 1
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  %val = alloca double, align 8
  store %"struct.adept::Expression.40"* %this, %"struct.adept::Expression.40"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %this.addr, align 8
  %0 = bitcast %"class.adept::internal::ScratchVector"* %scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZN5adept8internal13ScratchVectorILi0EdEC2Ev(%"class.adept::internal::ScratchVector"* nonnull dereferenceable(1) %scratch)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %2 = bitcast double* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi0ELi0ELi0EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch)
  store double %call2, double* %val, align 8, !tbaa !44
  %call3 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %this1)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi0ELi0ELi0EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %call3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch)
  %4 = load double, double* %val, align 8, !tbaa !44
  %5 = bitcast double* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  %7 = bitcast %"class.adept::internal::ScratchVector"* %scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #9
  ret double %4
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal13ScratchVectorILi0EdEC2Ev(%"class.adept::internal::ScratchVector"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::ScratchVector"*, align 8
  store %"class.adept::internal::ScratchVector"* %this, %"class.adept::internal::ScratchVector"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::internal::ScratchVector"*, %"class.adept::internal::ScratchVector"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  store %"class.adept::ExpressionSize.63"* %this, %"class.adept::ExpressionSize.63"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::Expression.40"* %this, %"struct.adept::Expression.40"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.40"* %this1 to %"class.adept::Active"*
  ret %"class.adept::Active"* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi0ELi0ELi0EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector"* %scratch, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !226
  ret double %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi0ELi0ELi0EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector"*, align 8
  %ref.tmp = alloca double, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector"* %scratch, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  %2 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  store double 1.000000e+00, double* %ref.tmp, align 8, !tbaa !44
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_rhsERKdRKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, double* nonnull align 8 dereferenceable(8) %ref.tmp, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  %3 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal16StackStorageOrig8push_rhsERKdRKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this, double* nonnull align 8 dereferenceable(8) %multiplier, i32* nonnull align 4 dereferenceable(4) %gradient_index) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::StackStorageOrig"*, align 8
  %multiplier.addr = alloca double*, align 8
  %gradient_index.addr = alloca i32*, align 8
  store %"class.adept::internal::StackStorageOrig"* %this, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8, !tbaa !2
  store double* %multiplier, double** %multiplier.addr, align 8, !tbaa !2
  store i32* %gradient_index, i32** %gradient_index.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8
  %0 = load double*, double** %multiplier.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  %multiplier_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 1
  %2 = load double*, double** %multiplier_, align 8, !tbaa !130
  %n_operations_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 5
  %3 = load i32, i32* %n_operations_, align 8, !tbaa !167
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds double, double* %2, i64 %idxprom
  store double %1, double* %arrayidx, align 8, !tbaa !44
  %4 = load i32*, i32** %gradient_index.addr, align 8, !tbaa !2
  %5 = load i32, i32* %4, align 4, !tbaa !20
  %index_ = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 2
  %6 = load i32*, i32** %index_, align 8, !tbaa !131
  %n_operations_2 = getelementptr inbounds %"class.adept::internal::StackStorageOrig", %"class.adept::internal::StackStorageOrig"* %this1, i32 0, i32 5
  %7 = load i32, i32* %n_operations_2, align 8, !tbaa !167
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %n_operations_2, align 8, !tbaa !167
  %idxprom3 = sext i32 %7 to i64
  %arrayidx4 = getelementptr inbounds i32, i32* %6, i64 %idxprom3
  store i32 %5, i32* %arrayidx4, align 4, !tbaa !20
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal14UnaryOperationIdNS0_3ExpENS_6ActiveIdEEEC2ERKNS_10ExpressionIdS4_EE(%"struct.adept::internal::UnaryOperation"* nonnull dereferenceable(8) %this, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %arg_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::UnaryOperation"*, align 8
  %arg_.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::internal::UnaryOperation"* %this, %"struct.adept::internal::UnaryOperation"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %arg_, %"struct.adept::Expression.40"** %arg_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::UnaryOperation"*, %"struct.adept::internal::UnaryOperation"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::UnaryOperation"* %this1 to %"struct.adept::Expression.62"*
  %1 = bitcast %"struct.adept::internal::UnaryOperation"* %this1 to %"struct.adept::internal::Exp"*
  %arg = getelementptr inbounds %"struct.adept::internal::UnaryOperation", %"struct.adept::internal::UnaryOperation"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %arg_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %arg, align 8, !tbaa !2
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::StackStorageOrig"*, align 8
  store %"class.adept::internal::StackStorageOrig"* %this, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8
  call void @_ZN5adept8internal16StackStorageOrig11check_spaceEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this1, i32 1)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3ExpENS_6ActiveIdEEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.62"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.62"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %scratch = alloca %"class.adept::internal::ScratchVector.64", align 8
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  %val = alloca double, align 8
  store %"struct.adept::Expression.62"* %this, %"struct.adept::Expression.62"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.62"*, %"struct.adept::Expression.62"** %this.addr, align 8
  %0 = bitcast %"class.adept::internal::ScratchVector.64"* %scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  call void @_ZN5adept8internal13ScratchVectorILi1EdEC2Ev(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %scratch)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %2 = bitcast double* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call = call nonnull align 8 dereferenceable(8) %"struct.adept::internal::UnaryOperation"* @_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3ExpENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.62"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept8internal14UnaryOperationIdNS0_3ExpENS_6ActiveIdEEE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::UnaryOperation"* nonnull dereferenceable(8) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch)
  store double %call2, double* %val, align 8, !tbaa !44
  %call3 = call nonnull align 8 dereferenceable(8) %"struct.adept::internal::UnaryOperation"* @_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3ExpENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.62"* nonnull dereferenceable(1) %this1)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  call void @_ZNK5adept8internal14UnaryOperationIdNS0_3ExpENS_6ActiveIdEEE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::UnaryOperation"* nonnull dereferenceable(8) %call3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch)
  %4 = load double, double* %val, align 8, !tbaa !44
  %5 = bitcast double* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  %7 = bitcast %"class.adept::internal::ScratchVector.64"* %scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  ret double %4
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal13ScratchVectorILi1EdEC2Ev(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"class.adept::internal::ScratchVector.64"* %this, %"class.adept::internal::ScratchVector.64"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) %"struct.adept::internal::UnaryOperation"* @_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3ExpENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.62"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.62"*, align 8
  store %"struct.adept::Expression.62"* %this, %"struct.adept::Expression.62"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.62"*, %"struct.adept::Expression.62"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.62"* %this1 to %"struct.adept::internal::UnaryOperation"*
  ret %"struct.adept::internal::UnaryOperation"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal14UnaryOperationIdNS0_3ExpENS_6ActiveIdEEE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::UnaryOperation"* nonnull dereferenceable(8) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::UnaryOperation"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  store %"struct.adept::internal::UnaryOperation"* %this, %"struct.adept::internal::UnaryOperation"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::UnaryOperation"*, %"struct.adept::internal::UnaryOperation"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::UnaryOperation"* %this1 to %"struct.adept::internal::Exp"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %arg = getelementptr inbounds %"struct.adept::internal::UnaryOperation", %"struct.adept::internal::UnaryOperation"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %arg, align 8, !tbaa !322
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %4)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %call2 = call fast double @_ZNK5adept8internal3ExpIdE9operationIdEET_RKS4_(%"struct.adept::internal::Exp"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %5 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call3 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi1EdEixEi(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %5, i32 0)
  store double %call2, double* %call3, align 8, !tbaa !44
  %6 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #9
  ret double %call2
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal14UnaryOperationIdNS0_3ExpENS_6ActiveIdEEE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::UnaryOperation"* nonnull dereferenceable(8) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::UnaryOperation"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::UnaryOperation"* %this, %"struct.adept::internal::UnaryOperation"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::UnaryOperation"*, %"struct.adept::internal::UnaryOperation"** %this.addr, align 8
  %arg = getelementptr inbounds %"struct.adept::internal::UnaryOperation", %"struct.adept::internal::UnaryOperation"* %this1, i32 0, i32 0
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %arg, align 8, !tbaa !322
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %4 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = bitcast %"struct.adept::internal::UnaryOperation"* %this1 to %"struct.adept::internal::Exp"*
  %6 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #9
  %arg3 = getelementptr inbounds %"struct.adept::internal::UnaryOperation", %"struct.adept::internal::UnaryOperation"* %this1, i32 0, i32 0
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %arg3, align 8, !tbaa !322
  %8 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %9 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE13value_stored_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %7, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %8, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %9)
  store double %call, double* %ref.tmp2, align 8, !tbaa !44
  %10 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call4 = call nonnull align 8 dereferenceable(8) double* @_ZNK5adept8internal13ScratchVectorILi1EdEixEi(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %10, i32 0)
  %call5 = call fast double @_ZNK5adept8internal3ExpIdE10derivativeERKdS4_(%"struct.adept::internal::Exp"* nonnull dereferenceable(1) %5, double* nonnull align 8 dereferenceable(8) %ref.tmp2, double* nonnull align 8 dereferenceable(8) %call4)
  store double %call5, double* %ref.tmp, align 8, !tbaa !44
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi1EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %11 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #9
  %12 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal3ExpIdE9operationIdEET_RKS4_(%"struct.adept::internal::Exp"* nonnull dereferenceable(1) %this, double* nonnull align 8 dereferenceable(8) %val) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Exp"*, align 8
  %val.addr = alloca double*, align 8
  store %"struct.adept::internal::Exp"* %this, %"struct.adept::internal::Exp"** %this.addr, align 8, !tbaa !2
  store double* %val, double** %val.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Exp"*, %"struct.adept::internal::Exp"** %this.addr, align 8
  %0 = load double*, double** %val.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  %2 = call fast double @llvm.exp.f64(double %1)
  ret double %2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !226
  ret double %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi1EdEixEi(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %this, i32 %i) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %i.addr = alloca i32, align 4
  store %"class.adept::internal::ScratchVector.64"* %this, %"class.adept::internal::ScratchVector.64"** %this.addr, align 8, !tbaa !2
  store i32 %i, i32* %i.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %this.addr, align 8
  %val = getelementptr inbounds %"class.adept::internal::ScratchVector.64", %"class.adept::internal::ScratchVector.64"* %this1, i32 0, i32 0
  %0 = load i32, i32* %i.addr, align 4, !tbaa !20
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [1 x double], [1 x double]* %val, i64 0, i64 %idxprom
  ret double* %arrayidx
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi1EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch, double* nonnull align 8 dereferenceable(8) %multiplier) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %multiplier.addr = alloca double*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  store double* %multiplier, double** %multiplier.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  %2 = load double*, double** %multiplier.addr, align 8, !tbaa !2
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_rhsERKdRKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, double* nonnull align 8 dereferenceable(8) %2, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal3ExpIdE10derivativeERKdS4_(%"struct.adept::internal::Exp"* nonnull dereferenceable(1) %this, double* nonnull align 8 dereferenceable(8) %val, double* nonnull align 8 dereferenceable(8) %result) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Exp"*, align 8
  %val.addr = alloca double*, align 8
  %result.addr = alloca double*, align 8
  store %"struct.adept::internal::Exp"* %this, %"struct.adept::internal::Exp"** %this.addr, align 8, !tbaa !2
  store double* %val, double** %val.addr, align 8, !tbaa !2
  store double* %result, double** %result.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Exp"*, %"struct.adept::internal::Exp"** %this.addr, align 8
  %0 = load double*, double** %result.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  ret double %1
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept6ActiveIdE13value_stored_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !226
  ret double %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) double* @_ZNK5adept8internal13ScratchVectorILi1EdEixEi(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %this, i32 %i) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %i.addr = alloca i32, align 4
  store %"class.adept::internal::ScratchVector.64"* %this, %"class.adept::internal::ScratchVector.64"** %this.addr, align 8, !tbaa !2
  store i32 %i, i32* %i.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %this.addr, align 8
  %val = getelementptr inbounds %"class.adept::internal::ScratchVector.64", %"class.adept::internal::ScratchVector.64"* %this1, i32 0, i32 0
  %0 = load i32, i32* %i.addr, align 4, !tbaa !20
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [1 x double], [1 x double]* %val, i64 0, i64 %idxprom
  ret double* %arrayidx
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adeptmiIdNS_6ActiveIdEEEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT_EE5valueENS3_18BinaryOpScalarLeftINS3_7promoteIS5_NT0_4typeEE4typeES5_NS3_8SubtractES8_EEE4typeERKS5_RKNS_10ExpressionIS9_S8_EE(%"struct.adept::internal::BinaryOpScalarLeft.65"* noalias sret(%"struct.adept::internal::BinaryOpScalarLeft.65") align 16 %agg.result, double* nonnull align 8 dereferenceable(8) %l, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %l.addr = alloca double*, align 8
  %r.addr = alloca %"struct.adept::Expression.40"*, align 8
  store double* %l, double** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %r, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %0 = load double*, double** %l.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  call void @_ZN5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEEC2EdRKNS_10ExpressionIdS4_EE(%"struct.adept::internal::BinaryOpScalarLeft.65"* nonnull dereferenceable(24) %agg.result, double %1, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal18BinaryOpScalarLeftIddNS3_8SubtractES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.66"* nonnull align 1 dereferenceable(1) %rhs) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.66"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.66"* %rhs, %"struct.adept::Expression.66"** %rhs.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1)
  %2 = load %"struct.adept::Expression.66"*, %"struct.adept::Expression.66"** %rhs.addr, align 8, !tbaa !2
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8SubtractENS_6ActiveIdEEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.66"* nonnull dereferenceable(1) %2, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call, double* %val_, align 8, !tbaa !226
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %5 = bitcast %"class.adept::Stack"* %4 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %5, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret %"class.adept::Active"* %this1
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEEC2EdRKNS_10ExpressionIdS4_EE(%"struct.adept::internal::BinaryOpScalarLeft.65"* nonnull dereferenceable(24) %this, double %left_, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.65"*, align 8
  %left_.addr = alloca double, align 8
  %right_.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.65"* %this, %"struct.adept::internal::BinaryOpScalarLeft.65"** %this.addr, align 8, !tbaa !2
  store double %left_, double* %left_.addr, align 8, !tbaa !44
  store %"struct.adept::Expression.40"* %right_, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.65"*, %"struct.adept::internal::BinaryOpScalarLeft.65"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.65"* %this1 to %"struct.adept::Expression.66"*
  %1 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.65"* %this1 to %"struct.adept::internal::Subtract"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.65", %"struct.adept::internal::BinaryOpScalarLeft.65"* %this1, i32 0, i32 0
  %2 = load double, double* %left_.addr, align 8, !tbaa !44
  call void @_ZN5adept8internal6PacketIdEC2Ed(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %left, double %2)
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.65", %"struct.adept::internal::BinaryOpScalarLeft.65"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %3)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %right, align 16, !tbaa !2
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8SubtractENS_6ActiveIdEEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.66"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.66"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %scratch = alloca %"class.adept::internal::ScratchVector.64", align 8
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  %val = alloca double, align 8
  store %"struct.adept::Expression.66"* %this, %"struct.adept::Expression.66"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.66"*, %"struct.adept::Expression.66"** %this.addr, align 8
  %0 = bitcast %"class.adept::internal::ScratchVector.64"* %scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  call void @_ZN5adept8internal13ScratchVectorILi1EdEC2Ev(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %scratch)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %2 = bitcast double* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call = call nonnull align 16 dereferenceable(24) %"struct.adept::internal::BinaryOpScalarLeft.65"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8SubtractENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.66"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.65"* nonnull dereferenceable(24) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch)
  store double %call2, double* %val, align 8, !tbaa !44
  %call3 = call nonnull align 16 dereferenceable(24) %"struct.adept::internal::BinaryOpScalarLeft.65"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8SubtractENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.66"* nonnull dereferenceable(1) %this1)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  call void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.65"* nonnull dereferenceable(24) %call3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch)
  %4 = load double, double* %val, align 8, !tbaa !44
  %5 = bitcast double* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  %7 = bitcast %"class.adept::internal::ScratchVector.64"* %scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  ret double %4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 16 dereferenceable(24) %"struct.adept::internal::BinaryOpScalarLeft.65"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8SubtractENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.66"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.66"*, align 8
  store %"struct.adept::Expression.66"* %this, %"struct.adept::Expression.66"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.66"*, %"struct.adept::Expression.66"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.66"* %this1 to %"struct.adept::internal::BinaryOpScalarLeft.65"*
  ret %"struct.adept::internal::BinaryOpScalarLeft.65"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.65"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.65"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.65"* %this, %"struct.adept::internal::BinaryOpScalarLeft.65"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.65"*, %"struct.adept::internal::BinaryOpScalarLeft.65"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.65"* nonnull dereferenceable(24) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.65"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.65"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.65"* %this, %"struct.adept::internal::BinaryOpScalarLeft.65"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.65"*, %"struct.adept::internal::BinaryOpScalarLeft.65"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.65", %"struct.adept::internal::BinaryOpScalarLeft.65"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 16, !tbaa !324
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEE11calc_right_ILi0ELi0ELi0ELi1ES4_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.65"* nonnull dereferenceable(24) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.65"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.65"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.65"* %this, %"struct.adept::internal::BinaryOpScalarLeft.65"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.65"*, %"struct.adept::internal::BinaryOpScalarLeft.65"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.65"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.65", %"struct.adept::internal::BinaryOpScalarLeft.65"* %this1, i32 0, i32 0
  %call = call fast double @_ZNK5adept8internal6PacketIdE5valueEv(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %left)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %2 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.65", %"struct.adept::internal::BinaryOpScalarLeft.65"* %this1, i32 0, i32 1
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 16, !tbaa !324
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %5)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal8Subtract9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %6 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call5 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi1EdEixEi(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %6, i32 0)
  store double %call4, double* %call5, align 8, !tbaa !44
  %7 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  %8 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  ret double %call4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal8Subtract9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %this, double* nonnull align 8 dereferenceable(8) %left, double* nonnull align 8 dereferenceable(8) %right) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Subtract"*, align 8
  %left.addr = alloca double*, align 8
  %right.addr = alloca double*, align 8
  store %"struct.adept::internal::Subtract"* %this, %"struct.adept::internal::Subtract"** %this.addr, align 8, !tbaa !2
  store double* %left, double** %left.addr, align 8, !tbaa !2
  store double* %right, double** %right.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Subtract"*, %"struct.adept::internal::Subtract"** %this.addr, align 8
  %0 = load double*, double** %left.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  %2 = load double*, double** %right.addr, align 8, !tbaa !2
  %3 = load double, double* %2, align 8, !tbaa !44
  %sub = fsub fast double %1, %3
  ret double %sub
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal6PacketIdE5valueEv(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Packet"*, align 8
  store %"struct.adept::internal::Packet"* %this, %"struct.adept::internal::Packet"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Packet"*, %"struct.adept::internal::Packet"** %this.addr, align 8
  %0 = getelementptr inbounds %"struct.adept::internal::Packet", %"struct.adept::internal::Packet"* %this1, i32 0, i32 0
  %value_ = bitcast %union.anon.29* %0 to double*
  %1 = load double, double* %value_, align 16, !tbaa !14
  ret double %1
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEE11calc_right_ILi0ELi0ELi0ELi1ES4_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.65"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.65"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca %"struct.adept::internal::Scalar", align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.65"* %this, %"struct.adept::internal::BinaryOpScalarLeft.65"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.65"*, %"struct.adept::internal::BinaryOpScalarLeft.65"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.65"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = bitcast %"struct.adept::internal::Scalar"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %3 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.65", %"struct.adept::internal::BinaryOpScalarLeft.65"* %this1, i32 0, i32 0
  %call = call fast double @_ZNK5adept8internal6PacketIdE5valueEv(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %left)
  store double %call, double* %ref.tmp2, align 8, !tbaa !44
  call void @_ZN5adept8internal6ScalarIdEC2ERKd(%"struct.adept::internal::Scalar"* nonnull dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %4 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %5 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %6 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal8Subtract10calc_rightILi0ELi0ELi0ELi1ENS0_6ScalarIdEENS_6ActiveIdEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"struct.adept::internal::Scalar"* nonnull align 8 dereferenceable(8) %ref.tmp, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %4, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %5, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %6)
  %7 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  %8 = bitcast %"struct.adept::internal::Scalar"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal8Subtract10calc_rightILi0ELi0ELi0ELi1ENS0_6ScalarIdEENS_6ActiveIdEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::Scalar"* nonnull align 8 dereferenceable(8) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Subtract"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::Scalar"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  store %"struct.adept::internal::Subtract"* %this, %"struct.adept::internal::Subtract"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::Scalar"* %left, %"struct.adept::internal::Scalar"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Subtract"*, %"struct.adept::internal::Subtract"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %4 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  store double -1.000000e+00, double* %ref.tmp, align 8, !tbaa !44
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi1EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %5 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal6ScalarIdEC2ERKd(%"struct.adept::internal::Scalar"* nonnull dereferenceable(8) %this, double* nonnull align 8 dereferenceable(8) %value) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Scalar"*, align 8
  %value.addr = alloca double*, align 8
  store %"struct.adept::internal::Scalar"* %this, %"struct.adept::internal::Scalar"** %this.addr, align 8, !tbaa !2
  store double* %value, double** %value.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Scalar"*, %"struct.adept::internal::Scalar"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::Scalar"* %this1 to %"struct.adept::Expression.68"*
  %val_ = getelementptr inbounds %"struct.adept::internal::Scalar", %"struct.adept::internal::Scalar"* %this1, i32 0, i32 0
  %1 = load double*, double** %value.addr, align 8, !tbaa !2
  %2 = load double, double* %1, align 8, !tbaa !44
  store double %2, double* %val_, align 8, !tbaa !327
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptmlINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_8MultiplyES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %l, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %retval = alloca %"struct.adept::internal::BinaryOperation.69", align 8
  %l.addr = alloca %"struct.adept::Expression.40"*, align 8
  %r.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::Expression.40"* %l, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %r, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"class.adept::Active"* %call1 to %"struct.adept::Expression.40"*
  call void @_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_EC2ERKNS_10ExpressionIdS3_EES9_(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %retval, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %1, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %3)
  %4 = bitcast %"struct.adept::internal::BinaryOperation.69"* %retval to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %5 = load { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %4, align 8
  ret { %"class.adept::Active"*, %"class.adept::Active"* } %5
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEENS3_9enable_ifIXaasrT0_9is_activeeqsrS8_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_S8_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %rhs) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.70"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.70"* %rhs, %"struct.adept::Expression.70"** %rhs.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1)
  %2 = load %"struct.adept::Expression.70"*, %"struct.adept::Expression.70"** %rhs.addr, align 8, !tbaa !2
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.70"* nonnull dereferenceable(1) %2, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call, double* %val_, align 8, !tbaa !226
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %5 = bitcast %"class.adept::Stack"* %4 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %5, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret %"class.adept::Active"* %this1
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adeptplINS_6ActiveIdEENS_8internal15BinaryOperationIdS2_NS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS4_INS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISB_S8_EERKNSJ_ISC_S9_EE(%"struct.adept::internal::BinaryOperation.71"* noalias sret(%"struct.adept::internal::BinaryOperation.71") align 8 %agg.result, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %l, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %l.addr = alloca %"struct.adept::Expression.40"*, align 8
  %r.addr = alloca %"struct.adept::Expression.70"*, align 8
  store %"struct.adept::Expression.40"* %l, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.70"* %r, %"struct.adept::Expression.70"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  %2 = load %"struct.adept::Expression.70"*, %"struct.adept::Expression.70"** %r.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.69"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EEE4castEv(%"struct.adept::Expression.70"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"struct.adept::internal::BinaryOperation.69"* %call1 to %"struct.adept::Expression.70"*
  call void @_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEEC2ERKNS_10ExpressionIdS3_EERKNS8_IdS6_EE(%"struct.adept::internal::BinaryOperation.71"* nonnull dereferenceable(24) %agg.result, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %1, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS4_IdS1_NS3_8MultiplyES1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSA_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SA_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.72"* nonnull align 1 dereferenceable(1) %rhs) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.72"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.72"* %rhs, %"struct.adept::Expression.72"** %rhs.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1)
  %2 = load %"struct.adept::Expression.72"*, %"struct.adept::Expression.72"** %rhs.addr, align 8, !tbaa !2
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS2_IdS4_NS1_8MultiplyES4_EEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.72"* nonnull dereferenceable(1) %2, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call, double* %val_, align 8, !tbaa !226
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %5 = bitcast %"class.adept::Stack"* %4 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %5, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret %"class.adept::Active"* %this1
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_EC2ERKNS_10ExpressionIdS3_EES9_(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %this, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %left_, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.69"*, align 8
  %left_.addr = alloca %"struct.adept::Expression.40"*, align 8
  %right_.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::internal::BinaryOperation.69"* %this, %"struct.adept::internal::BinaryOperation.69"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %left_, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %right_, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.69"*, %"struct.adept::internal::BinaryOperation.69"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.69"* %this1 to %"struct.adept::Expression.70"*
  %1 = bitcast %"struct.adept::internal::BinaryOperation.69"* %this1 to %"struct.adept::internal::Multiply"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %left, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %call2 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %3)
  store %"class.adept::Active"* %call2, %"class.adept::Active"** %right, align 8, !tbaa !2
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::StackStorageOrig"*, align 8
  store %"class.adept::internal::StackStorageOrig"* %this, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8
  call void @_ZN5adept8internal16StackStorageOrig11check_spaceEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this1, i32 2)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.70"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.70"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %scratch = alloca %"class.adept::internal::ScratchVector.64", align 8
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  %val = alloca double, align 8
  store %"struct.adept::Expression.70"* %this, %"struct.adept::Expression.70"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.70"*, %"struct.adept::Expression.70"** %this.addr, align 8
  %0 = bitcast %"class.adept::internal::ScratchVector.64"* %scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  call void @_ZN5adept8internal13ScratchVectorILi1EdEC2Ev(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %scratch)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %2 = bitcast double* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.69"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EEE4castEv(%"struct.adept::Expression.70"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch)
  store double %call2, double* %val, align 8, !tbaa !44
  %call3 = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.69"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EEE4castEv(%"struct.adept::Expression.70"* nonnull dereferenceable(1) %this1)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %call3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch)
  %4 = load double, double* %val, align 8, !tbaa !44
  %5 = bitcast double* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  %7 = bitcast %"class.adept::internal::ScratchVector.64"* %scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  ret double %4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.69"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EEE4castEv(%"struct.adept::Expression.70"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.70"*, align 8
  store %"struct.adept::Expression.70"* %this, %"struct.adept::Expression.70"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.70"*, %"struct.adept::Expression.70"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.70"* %this1 to %"struct.adept::internal::BinaryOperation.69"*
  ret %"struct.adept::internal::BinaryOperation.69"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.69"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOperation.69"* %this, %"struct.adept::internal::BinaryOperation.69"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.69"*, %"struct.adept::internal::BinaryOperation.69"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.69"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOperation.69"* %this, %"struct.adept::internal::BinaryOperation.69"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.69"*, %"struct.adept::internal::BinaryOperation.69"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %this1, i32 0, i32 0
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !329
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E10calc_left_ILi0ELi0ELi0ELi1ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3)
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %this1, i32 0, i32 1
  %5 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !331
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E11calc_right_ILi0ELi0ELi0ELi1ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %4, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %5, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %7)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.69"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.69"* %this, %"struct.adept::internal::BinaryOperation.69"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.69"*, %"struct.adept::internal::BinaryOperation.69"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.69"* %this1 to %"struct.adept::internal::Multiply"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !329
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %4)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %5 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %this1, i32 0, i32 1
  %6 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !331
  %7 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %8 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %6, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %7, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %8)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal8Multiply9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Multiply"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %9 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call5 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi1EdEixEi(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %9, i32 0)
  store double %call4, double* %call5, align 8, !tbaa !44
  %10 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9
  %11 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #9
  ret double %call4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal8Multiply9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Multiply"* nonnull dereferenceable(1) %this, double* nonnull align 8 dereferenceable(8) %left, double* nonnull align 8 dereferenceable(8) %right) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Multiply"*, align 8
  %left.addr = alloca double*, align 8
  %right.addr = alloca double*, align 8
  store %"struct.adept::internal::Multiply"* %this, %"struct.adept::internal::Multiply"** %this.addr, align 8, !tbaa !2
  store double* %left, double** %left.addr, align 8, !tbaa !2
  store double* %right, double** %right.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Multiply"*, %"struct.adept::internal::Multiply"** %this.addr, align 8
  %0 = load double*, double** %left.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  %2 = load double*, double** %right.addr, align 8, !tbaa !2
  %3 = load double, double* %2, align 8, !tbaa !44
  %mul = fmul fast double %1, %3
  ret double %mul
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E10calc_left_ILi0ELi0ELi0ELi1ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.69"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOperation.69"* %this, %"struct.adept::internal::BinaryOperation.69"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.69"*, %"struct.adept::internal::BinaryOperation.69"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %this1, i32 0, i32 1
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !331
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZN5adept8internal8Multiply9calc_leftILi0ELi0ELi0ELi1ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %4)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E11calc_right_ILi0ELi0ELi0ELi1ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.69"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOperation.69"* %this, %"struct.adept::internal::BinaryOperation.69"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.69"*, %"struct.adept::internal::BinaryOperation.69"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.69", %"struct.adept::internal::BinaryOperation.69"* %this1, i32 0, i32 0
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !329
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZN5adept8internal8Multiply10calc_rightILi0ELi0ELi0ELi1ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %4)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal8Multiply9calc_leftILi0ELi0ELi0ELi1ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #8 comdat align 2 {
entry:
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %4 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE13value_stored_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %5, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %7)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi1EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %8 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal8Multiply10calc_rightILi0ELi0ELi0ELi1ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #8 comdat align 2 {
entry:
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %4 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE13value_stored_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %5, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %7)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi1EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %8 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEEC2ERKNS_10ExpressionIdS3_EERKNS8_IdS6_EE(%"struct.adept::internal::BinaryOperation.71"* nonnull dereferenceable(24) %this, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %left_, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.71"*, align 8
  %left_.addr = alloca %"struct.adept::Expression.40"*, align 8
  %right_.addr = alloca %"struct.adept::Expression.70"*, align 8
  store %"struct.adept::internal::BinaryOperation.71"* %this, %"struct.adept::internal::BinaryOperation.71"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %left_, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.70"* %right_, %"struct.adept::Expression.70"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.71"*, %"struct.adept::internal::BinaryOperation.71"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.71"* %this1 to %"struct.adept::Expression.72"*
  %1 = bitcast %"struct.adept::internal::BinaryOperation.71"* %this1 to %"struct.adept::internal::Add"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %left, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::Expression.70"*, %"struct.adept::Expression.70"** %right_.addr, align 8, !tbaa !2
  %call2 = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.69"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EEE4castEv(%"struct.adept::Expression.70"* nonnull dereferenceable(1) %3)
  %4 = bitcast %"struct.adept::internal::BinaryOperation.69"* %right to i8*
  %5 = bitcast %"struct.adept::internal::BinaryOperation.69"* %call2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::StackStorageOrig"*, align 8
  store %"class.adept::internal::StackStorageOrig"* %this, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::internal::StackStorageOrig"*, %"class.adept::internal::StackStorageOrig"** %this.addr, align 8
  call void @_ZN5adept8internal16StackStorageOrig11check_spaceEi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %this1, i32 3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS2_IdS4_NS1_8MultiplyES4_EEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.72"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.72"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %scratch = alloca %"class.adept::internal::ScratchVector.64", align 8
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  %val = alloca double, align 8
  store %"struct.adept::Expression.72"* %this, %"struct.adept::Expression.72"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.72"*, %"struct.adept::Expression.72"** %this.addr, align 8
  %0 = bitcast %"class.adept::internal::ScratchVector.64"* %scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  call void @_ZN5adept8internal13ScratchVectorILi1EdEC2Ev(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %scratch)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %2 = bitcast double* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call = call nonnull align 8 dereferenceable(24) %"struct.adept::internal::BinaryOperation.71"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS2_IdS4_NS1_8MultiplyES4_EEEEE4castEv(%"struct.adept::Expression.72"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.71"* nonnull dereferenceable(24) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch)
  store double %call2, double* %val, align 8, !tbaa !44
  %call3 = call nonnull align 8 dereferenceable(24) %"struct.adept::internal::BinaryOperation.71"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS2_IdS4_NS1_8MultiplyES4_EEEEE4castEv(%"struct.adept::Expression.72"* nonnull dereferenceable(1) %this1)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.71"* nonnull dereferenceable(24) %call3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch)
  %4 = load double, double* %val, align 8, !tbaa !44
  %5 = bitcast double* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  %7 = bitcast %"class.adept::internal::ScratchVector.64"* %scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  ret double %4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(24) %"struct.adept::internal::BinaryOperation.71"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS2_IdS4_NS1_8MultiplyES4_EEEEE4castEv(%"struct.adept::Expression.72"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.72"*, align 8
  store %"struct.adept::Expression.72"* %this, %"struct.adept::Expression.72"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.72"*, %"struct.adept::Expression.72"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.72"* %this1 to %"struct.adept::internal::BinaryOperation.71"*
  ret %"struct.adept::internal::BinaryOperation.71"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.71"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.71"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOperation.71"* %this, %"struct.adept::internal::BinaryOperation.71"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.71"*, %"struct.adept::internal::BinaryOperation.71"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE27my_value_at_location_store_ILi0ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.71"* nonnull dereferenceable(24) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.71"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.71"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOperation.71"* %this, %"struct.adept::internal::BinaryOperation.71"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.71"*, %"struct.adept::internal::BinaryOperation.71"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %this1, i32 0, i32 0
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !332
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE10calc_left_ILi0ELi0ELi0ELi1ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSA_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.71"* nonnull dereferenceable(24) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3)
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %this1, i32 0, i32 1
  %5 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %6 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE11calc_right_ILi0ELi0ELi0ELi1ES6_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSA_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.71"* nonnull dereferenceable(24) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %4, %"struct.adept::internal::BinaryOperation.69"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %5, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %6)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE27my_value_at_location_store_ILi0ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.71"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.71"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.71"* %this, %"struct.adept::internal::BinaryOperation.71"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.71"*, %"struct.adept::internal::BinaryOperation.71"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.71"* %this1 to %"struct.adept::internal::Add"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !332
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %4)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %5 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %this1, i32 0, i32 1
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %7)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal3Add9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %8 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  %9 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  ret double %call4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal3Add9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, double* nonnull align 8 dereferenceable(8) %left, double* nonnull align 8 dereferenceable(8) %right) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %left.addr = alloca double*, align 8
  %right.addr = alloca double*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store double* %left, double** %left.addr, align 8, !tbaa !2
  store double* %right, double** %right.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load double*, double** %left.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  %2 = load double*, double** %right.addr, align 8, !tbaa !2
  %3 = load double, double* %2, align 8, !tbaa !44
  %add = fadd fast double %1, %3
  ret double %add
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !226
  ret double %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE10calc_left_ILi0ELi0ELi0ELi1ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSA_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.71"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.71"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOperation.71"* %this, %"struct.adept::internal::BinaryOperation.71"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.71"*, %"struct.adept::internal::BinaryOperation.71"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.71"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %this1, i32 0, i32 1
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add9calc_leftILi0ELi0ELi0ELi1ENS_6ActiveIdEENS0_15BinaryOperationIdS4_NS0_8MultiplyES4_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"struct.adept::internal::BinaryOperation.69"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %4)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEE11calc_right_ILi0ELi0ELi0ELi1ES6_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSA_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.71"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOperation.69"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.71"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOperation.69"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOperation.71"* %this, %"struct.adept::internal::BinaryOperation.71"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOperation.69"* %right, %"struct.adept::internal::BinaryOperation.69"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.71"*, %"struct.adept::internal::BinaryOperation.71"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.71"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.71", %"struct.adept::internal::BinaryOperation.71"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !332
  %3 = load %"struct.adept::internal::BinaryOperation.69"*, %"struct.adept::internal::BinaryOperation.69"** %right.addr, align 8, !tbaa !2
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add10calc_rightILi0ELi0ELi0ELi1ENS_6ActiveIdEENS0_15BinaryOperationIdS4_NS0_8MultiplyES4_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"struct.adept::internal::BinaryOperation.69"* nonnull align 8 dereferenceable(16) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add9calc_leftILi0ELi0ELi0ELi1ENS_6ActiveIdEENS0_15BinaryOperationIdS4_NS0_8MultiplyES4_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"struct.adept::internal::BinaryOperation.69"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOperation.69"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOperation.69"* %right, %"struct.adept::internal::BinaryOperation.69"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  %2 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  store double 1.000000e+00, double* %ref.tmp, align 8, !tbaa !44
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_rhsERKdRKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, double* nonnull align 8 dereferenceable(8) %ref.tmp, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  %3 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add10calc_rightILi0ELi0ELi0ELi1ENS_6ActiveIdEENS0_15BinaryOperationIdS4_NS0_8MultiplyES4_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"struct.adept::internal::BinaryOperation.69"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOperation.69"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOperation.69"* %right, %"struct.adept::internal::BinaryOperation.69"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"struct.adept::internal::BinaryOperation.69"*, %"struct.adept::internal::BinaryOperation.69"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_E14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.69"* nonnull dereferenceable(16) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.51"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EEE4castEv(%"struct.adept::Expression.52"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.52"*, align 8
  store %"struct.adept::Expression.52"* %this, %"struct.adept::Expression.52"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.52"*, %"struct.adept::Expression.52"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.52"* %this1 to %"struct.adept::internal::BinaryOperation.51"*
  ret %"struct.adept::internal::BinaryOperation.51"* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 16 dereferenceable(24) %"struct.adept::internal::BinaryOpScalarLeft"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8MultiplyENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.53"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.53"*, align 8
  store %"struct.adept::Expression.53"* %this, %"struct.adept::Expression.53"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.53"*, %"struct.adept::Expression.53"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.53"* %this1 to %"struct.adept::internal::BinaryOpScalarLeft"*
  ret %"struct.adept::internal::BinaryOpScalarLeft"* %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEC2ERKNS_10ExpressionIdS5_EERKNSB_IdS9_EE(%"struct.adept::internal::BinaryOperation"* nonnull dereferenceable(24) %this, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %left_, %"struct.adept::Expression.53"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation"*, align 8
  %left_.addr = alloca %"struct.adept::Expression.52"*, align 8
  %right_.addr = alloca %"struct.adept::Expression.53"*, align 8
  store %"struct.adept::internal::BinaryOperation"* %this, %"struct.adept::internal::BinaryOperation"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.52"* %left_, %"struct.adept::Expression.52"** %left_.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.53"* %right_, %"struct.adept::Expression.53"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation"*, %"struct.adept::internal::BinaryOperation"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation"* %this1 to %"struct.adept::Expression.50"*
  %1 = bitcast %"struct.adept::internal::BinaryOperation"* %this1 to %"struct.adept::internal::Subtract"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation", %"struct.adept::internal::BinaryOperation"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.52"*, %"struct.adept::Expression.52"** %left_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.51"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EEE4castEv(%"struct.adept::Expression.52"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"struct.adept::internal::BinaryOperation.51"* %left to i8*
  %4 = bitcast %"struct.adept::internal::BinaryOperation.51"* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation", %"struct.adept::internal::BinaryOperation"* %this1, i32 0, i32 1
  %5 = load %"struct.adept::Expression.53"*, %"struct.adept::Expression.53"** %right_.addr, align 8, !tbaa !2
  %call2 = call nonnull align 16 dereferenceable(24) %"struct.adept::internal::BinaryOpScalarLeft"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8MultiplyENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.53"* nonnull dereferenceable(1) %5)
  store %"struct.adept::internal::BinaryOpScalarLeft"* %call2, %"struct.adept::internal::BinaryOpScalarLeft"** %right, align 8, !tbaa !2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_EC2ERKNS_10ExpressionIdS3_EES9_(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %left_, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %left_.addr = alloca %"struct.adept::Expression.40"*, align 8
  %right_.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::internal::BinaryOperation.51"* %this, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %left_, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %right_, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.51"* %this1 to %"struct.adept::Expression.52"*
  %1 = bitcast %"struct.adept::internal::BinaryOperation.51"* %this1 to %"struct.adept::internal::Add"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %left, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %call2 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %3)
  store %"class.adept::Active"* %call2, %"class.adept::Active"** %right, align 8, !tbaa !2
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEEC2EdRKNS_10ExpressionIdS4_EE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this, double %left_, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %left_.addr = alloca double, align 8
  %right_.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft"* %this, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8, !tbaa !2
  store double %left_, double* %left_.addr, align 8, !tbaa !44
  store %"struct.adept::Expression.40"* %right_, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %this1 to %"struct.adept::Expression.53"*
  %1 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %this1 to %"struct.adept::internal::Multiply"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft", %"struct.adept::internal::BinaryOpScalarLeft"* %this1, i32 0, i32 0
  %2 = load double, double* %left_.addr, align 8, !tbaa !44
  call void @_ZN5adept8internal6PacketIdEC2Ed(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %left, double %2)
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft", %"struct.adept::internal::BinaryOpScalarLeft"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %3)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %right, align 16, !tbaa !2
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_8MultiplyES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.70"* nonnull align 1 dereferenceable(1) %rhs, i8* %dummy) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.70"*, align 8
  %dummy.addr = alloca i8*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.70"* %rhs, %"struct.adept::Expression.70"** %rhs.addr, align 8, !tbaa !2
  store i8* %dummy, i8** %dummy.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = bitcast %"class.adept::Active"* %this1 to %"struct.adept::Expression.40"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call i32 @_ZN5adept5Stack17register_gradientEv(%"class.adept::Stack"* nonnull dereferenceable(149) %1)
  store i32 %call, i32* %gradient_index_, align 8, !tbaa !228
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %3 = bitcast %"class.adept::Stack"* %2 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %3)
  %4 = load %"struct.adept::Expression.70"*, %"struct.adept::Expression.70"** %rhs.addr, align 8, !tbaa !2
  %5 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call2 = call fast double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8MultiplyES4_EEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.70"* nonnull dereferenceable(1) %4, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %5)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call2, double* %val_, align 8, !tbaa !226
  %6 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %7 = bitcast %"class.adept::Stack"* %6 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_3 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %7, i32* nonnull align 4 dereferenceable(4) %gradient_index_3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddES4_EENS1_8SubtractENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.50"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.50"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %scratch = alloca %"class.adept::internal::ScratchVector.73", align 8
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  %val = alloca double, align 8
  store %"struct.adept::Expression.50"* %this, %"struct.adept::Expression.50"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.50"*, %"struct.adept::Expression.50"** %this.addr, align 8
  %0 = bitcast %"class.adept::internal::ScratchVector.73"* %scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #9
  call void @_ZN5adept8internal13ScratchVectorILi2EdEC2Ev(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %scratch)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %2 = bitcast double* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call = call nonnull align 8 dereferenceable(24) %"struct.adept::internal::BinaryOperation"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddES4_EENS1_8SubtractENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEEE4castEv(%"struct.adept::Expression.50"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation"* nonnull dereferenceable(24) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch)
  store double %call2, double* %val, align 8, !tbaa !44
  %call3 = call nonnull align 8 dereferenceable(24) %"struct.adept::internal::BinaryOperation"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddES4_EENS1_8SubtractENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEEE4castEv(%"struct.adept::Expression.50"* nonnull dereferenceable(1) %this1)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation"* nonnull dereferenceable(24) %call3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch)
  %4 = load double, double* %val, align 8, !tbaa !44
  %5 = bitcast double* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  %7 = bitcast %"class.adept::internal::ScratchVector.73"* %scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %7) #9
  ret double %4
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal13ScratchVectorILi2EdEC2Ev(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"class.adept::internal::ScratchVector.73"* %this, %"class.adept::internal::ScratchVector.73"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(24) %"struct.adept::internal::BinaryOperation"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddES4_EENS1_8SubtractENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEEE4castEv(%"struct.adept::Expression.50"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.50"*, align 8
  store %"struct.adept::Expression.50"* %this, %"struct.adept::Expression.50"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.50"*, %"struct.adept::Expression.50"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.50"* %this1 to %"struct.adept::internal::BinaryOperation"*
  ret %"struct.adept::internal::BinaryOperation"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation"* %this, %"struct.adept::internal::BinaryOperation"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation"*, %"struct.adept::internal::BinaryOperation"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation"* nonnull dereferenceable(24) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation"* %this, %"struct.adept::internal::BinaryOperation"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation"*, %"struct.adept::internal::BinaryOperation"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation", %"struct.adept::internal::BinaryOperation"* %this1, i32 0, i32 0
  %1 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %2 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE10calc_left_ILi0ELi0ELi0ELi2ES5_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation"* nonnull dereferenceable(24) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"struct.adept::internal::BinaryOperation.51"* nonnull align 8 dereferenceable(16) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %1, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %2)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation", %"struct.adept::internal::BinaryOperation"* %this1, i32 0, i32 1
  %4 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %right, align 8, !tbaa !334
  %5 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %6 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE11calc_right_ILi0ELi0ELi0ELi2ES9_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation"* nonnull dereferenceable(24) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"struct.adept::internal::BinaryOpScalarLeft"* nonnull align 16 dereferenceable(24) %4, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %5, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %6)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation"* %this, %"struct.adept::internal::BinaryOperation"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation"*, %"struct.adept::internal::BinaryOperation"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation", %"struct.adept::internal::BinaryOperation"* %this1, i32 0, i32 0
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %4 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation", %"struct.adept::internal::BinaryOperation"* %this1, i32 0, i32 1
  %5 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %right, align 8, !tbaa !334
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %5, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %7)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal8Subtract9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %8 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call5 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi2EdEixEi(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %8, i32 0)
  store double %call4, double* %call5, align 8, !tbaa !44
  %9 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  %10 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9
  ret double %call4
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.51"* %this, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E27my_value_at_location_store_ILi0ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft"* %this, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %1)
  ret double %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi2EdEixEi(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %this, i32 %i) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %i.addr = alloca i32, align 4
  store %"class.adept::internal::ScratchVector.73"* %this, %"class.adept::internal::ScratchVector.73"** %this.addr, align 8, !tbaa !2
  store i32 %i, i32* %i.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %this.addr, align 8
  %val = getelementptr inbounds %"class.adept::internal::ScratchVector.73", %"class.adept::internal::ScratchVector.73"* %this1, i32 0, i32 0
  %0 = load i32, i32* %i.addr, align 4, !tbaa !20
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %val, i64 0, i64 %idxprom
  ret double* %arrayidx
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E27my_value_at_location_store_ILi0ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.51"* %this, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.51"* %this1 to %"struct.adept::internal::Add"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !337
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %4)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %5 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 1
  %6 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !338
  %7 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %8 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %6, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %7, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %8)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal3Add9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %9 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  %10 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9
  ret double %call4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !226
  ret double %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft"* %this, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %this1 to %"struct.adept::internal::Multiply"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft", %"struct.adept::internal::BinaryOpScalarLeft"* %this1, i32 0, i32 0
  %call = call fast double @_ZNK5adept8internal6PacketIdE5valueEv(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %left)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %2 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft", %"struct.adept::internal::BinaryOpScalarLeft"* %this1, i32 0, i32 1
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 16, !tbaa !339
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi2ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal8Multiply9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Multiply"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %6 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call5 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi2EdEixEi(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %6, i32 1)
  store double %call4, double* %call5, align 8, !tbaa !44
  %7 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  %8 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  ret double %call4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi2ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !226
  ret double %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE10calc_left_ILi0ELi0ELi0ELi2ES5_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOperation.51"* nonnull align 8 dereferenceable(16) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation"* %this, %"struct.adept::internal::BinaryOperation"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOperation.51"* %left, %"struct.adept::internal::BinaryOperation.51"** %left.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation"*, %"struct.adept::internal::BinaryOperation"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %left.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation", %"struct.adept::internal::BinaryOperation"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %right, align 8, !tbaa !334
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal8Subtract9calc_leftILi0ELi0ELi0ELi2ENS0_15BinaryOperationIdNS_6ActiveIdEENS0_3AddES5_EENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES5_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"struct.adept::internal::BinaryOperation.51"* nonnull align 8 dereferenceable(16) %2, %"struct.adept::internal::BinaryOpScalarLeft"* nonnull align 16 dereferenceable(24) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE11calc_right_ILi0ELi0ELi0ELi2ES9_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOpScalarLeft"* nonnull align 16 dereferenceable(24) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation"* %this, %"struct.adept::internal::BinaryOperation"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft"* %right, %"struct.adept::internal::BinaryOpScalarLeft"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation"*, %"struct.adept::internal::BinaryOperation"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation", %"struct.adept::internal::BinaryOperation"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %right.addr, align 8, !tbaa !2
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal8Subtract10calc_rightILi0ELi0ELi0ELi2ENS0_15BinaryOperationIdNS_6ActiveIdEENS0_3AddES5_EENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES5_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"struct.adept::internal::BinaryOperation.51"* nonnull align 8 dereferenceable(16) %left, %"struct.adept::internal::BinaryOpScalarLeft"* nonnull align 16 dereferenceable(24) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %4)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal8Subtract9calc_leftILi0ELi0ELi0ELi2ENS0_15BinaryOperationIdNS_6ActiveIdEENS0_3AddES5_EENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES5_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOperation.51"* nonnull align 8 dereferenceable(16) %left, %"struct.adept::internal::BinaryOpScalarLeft"* nonnull align 16 dereferenceable(24) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Subtract"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::Subtract"* %this, %"struct.adept::internal::Subtract"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOperation.51"* %left, %"struct.adept::internal::BinaryOperation.51"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft"* %right, %"struct.adept::internal::BinaryOpScalarLeft"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Subtract"*, %"struct.adept::internal::Subtract"** %this.addr, align 8
  %0 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %left.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E14calc_gradient_ILi0ELi1ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E14calc_gradient_ILi0ELi1ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.51"* %this, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 0
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !337
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E10calc_left_ILi0ELi1ELi0ELi2ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 1
  %5 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !338
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E11calc_right_ILi0ELi1ELi0ELi2ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %4, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %5, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %7)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E10calc_left_ILi0ELi1ELi0ELi2ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.51"* %this, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.51"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 1
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !338
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add9calc_leftILi0ELi1ELi0ELi2ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E11calc_right_ILi0ELi1ELi0ELi2ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.51"* %this, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.51"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !337
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add10calc_rightILi0ELi1ELi0ELi2ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add9calc_leftILi0ELi1ELi0ELi2ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca double, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  %2 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  store double 1.000000e+00, double* %ref.tmp, align 8, !tbaa !44
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_rhsERKdRKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, double* nonnull align 8 dereferenceable(8) %ref.tmp, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  %3 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add10calc_rightILi0ELi1ELi0ELi2ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal8Subtract10calc_rightILi0ELi0ELi0ELi2ENS0_15BinaryOperationIdNS_6ActiveIdEENS0_3AddES5_EENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES5_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOperation.51"* nonnull align 8 dereferenceable(16) %left, %"struct.adept::internal::BinaryOpScalarLeft"* nonnull align 16 dereferenceable(24) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Subtract"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::Subtract"* %this, %"struct.adept::internal::Subtract"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOperation.51"* %left, %"struct.adept::internal::BinaryOperation.51"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft"* %right, %"struct.adept::internal::BinaryOpScalarLeft"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Subtract"*, %"struct.adept::internal::Subtract"** %this.addr, align 8
  %0 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE14calc_gradient_ILi0ELi1ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET3_(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3, double -1.000000e+00)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE14calc_gradient_ILi0ELi1ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET3_(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch, double %multiplier) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %multiplier.addr = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft"* %this, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft", %"struct.adept::internal::BinaryOpScalarLeft"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 16, !tbaa !339
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %4 = load double, double* %multiplier.addr, align 8, !tbaa !44
  call void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE11calc_right_ILi0ELi1ELi0ELi2ES4_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3, double %4)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE11calc_right_ILi0ELi1ELi0ELi2ES4_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch, double %multiplier) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %multiplier.addr = alloca double, align 8
  %ref.tmp = alloca %"struct.adept::internal::Scalar", align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft"* %this, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"struct.adept::internal::Scalar"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft", %"struct.adept::internal::BinaryOpScalarLeft"* %this1, i32 0, i32 0
  %call = call fast double @_ZNK5adept8internal6PacketIdE5valueEv(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %left)
  store double %call, double* %ref.tmp2, align 8, !tbaa !44
  call void @_ZN5adept8internal6ScalarIdEC2ERKd(%"struct.adept::internal::Scalar"* nonnull dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %6 = load double, double* %multiplier.addr, align 8, !tbaa !44
  call void @_ZN5adept8internal8Multiply10calc_rightILi0ELi1ELi0ELi2ENS0_6ScalarIdEENS_6ActiveIdEEdEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_(%"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"struct.adept::internal::Scalar"* nonnull align 8 dereferenceable(8) %ref.tmp, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5, double %6)
  %7 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  %8 = bitcast %"struct.adept::internal::Scalar"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal8Multiply10calc_rightILi0ELi1ELi0ELi2ENS0_6ScalarIdEENS_6ActiveIdEEdEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_(%"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::Scalar"* nonnull align 8 dereferenceable(8) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch, double %multiplier) #0 comdat align 2 {
entry:
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::Scalar"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %multiplier.addr = alloca double, align 8
  %ref.tmp = alloca double, align 8
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::Scalar"* %left, %"struct.adept::internal::Scalar"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %4 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = load double, double* %multiplier.addr, align 8, !tbaa !44
  %6 = load %"struct.adept::internal::Scalar"*, %"struct.adept::internal::Scalar"** %left.addr, align 8, !tbaa !2
  %7 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %8 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal6ScalarIdE13value_stored_ILi0ELi2ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Scalar"* nonnull dereferenceable(8) %6, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %7, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %8)
  %mul = fmul fast double %5, %call
  store double %mul, double* %ref.tmp, align 8, !tbaa !44
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi2ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %9 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi2ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch, double* nonnull align 8 dereferenceable(8) %multiplier) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %multiplier.addr = alloca double*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  store double* %multiplier, double** %multiplier.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  %2 = load double*, double** %multiplier.addr, align 8, !tbaa !2
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_rhsERKdRKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, double* nonnull align 8 dereferenceable(8) %2, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal6ScalarIdE13value_stored_ILi0ELi2ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Scalar"* nonnull dereferenceable(8) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Scalar"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::Scalar"* %this, %"struct.adept::internal::Scalar"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Scalar"*, %"struct.adept::internal::Scalar"** %this.addr, align 8
  %val_ = getelementptr inbounds %"struct.adept::internal::Scalar", %"struct.adept::internal::Scalar"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !327
  ret double %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN9adeptTest7arr_maxIN5adept6ActiveIdEEEET_iPKS4_(%"class.adept::Active"* noalias sret(%"class.adept::Active") align 8 %agg.result, i32 %n, %"class.adept::Active"* %x) #0 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %n.addr = alloca i32, align 4
  %x.addr = alloca %"class.adept::Active"*, align 8
  %nrvo = alloca i1, align 1
  %i = alloca i32, align 4
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %0 = bitcast %"class.adept::Active"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !20
  store %"class.adept::Active"* %x, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  store i1 false, i1* %nrvo, align 1
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  %arrayidx = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %1, i64 0
  call void @_ZN5adept6ActiveIdEC2ERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %arrayidx)
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #9
  store i32 1, i32* %i, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !tbaa !20
  %4 = load i32, i32* %n.addr, align 4, !tbaa !20
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %5 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %5) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %6 = bitcast %"class.adept::Active"* %agg.result to %"struct.adept::Expression.40"*
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  %8 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %8 to i64
  %arrayidx1 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %7, i64 %idxprom
  %9 = bitcast %"class.adept::Active"* %arrayidx1 to %"struct.adept::Expression.40"*
  %call = invoke zeroext i1 @_ZN5adeptltINS_6ActiveIdEES2_EENS_8internal9enable_ifIXaaeqsrT_4rankLi0EeqsrT0_4rankLi0EEbE4typeERKNS_10ExpressionINS5_4typeES5_EERKNS9_INS6_4typeES6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %6, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %9)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %for.body
  br i1 %call, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont
  %10 = load %"class.adept::Active"*, %"class.adept::Active"** %x.addr, align 8, !tbaa !2
  %11 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom2 = sext i32 %11 to i64
  %arrayidx3 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %10, i64 %idxprom2
  %call5 = invoke nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSERKS1_(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %arrayidx3)
          to label %invoke.cont4 unwind label %lpad

invoke.cont4:                                     ; preds = %if.then
  br label %if.end

lpad:                                             ; preds = %if.then, %for.body
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  store i8* %13, i8** %exn.slot, align 8
  %14 = extractvalue { i8*, i32 } %12, 1
  store i32 %14, i32* %ehselector.slot, align 4
  %15 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %15) #9
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result) #9
  br label %eh.resume

if.end:                                           ; preds = %invoke.cont4, %invoke.cont
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !341

for.end:                                          ; preds = %for.cond.cleanup
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %nrvo.skipdtor, label %nrvo.unused

nrvo.unused:                                      ; preds = %for.end
  call void @_ZN5adept6ActiveIdED2Ev(%"class.adept::Active"* nonnull dereferenceable(12) %agg.result) #9
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %nrvo.unused, %for.end
  ret void

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val6 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val6
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adeptplINS_6ActiveIdEENS_8internal14UnaryOperationIdNS3_3ExpENS3_15BinaryOperationIdS2_NS3_8SubtractES2_EEEEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS6_INS3_7promoteINSB_4typeENSC_4typeEE4typeESB_NS3_3AddESC_EEE4typeERKNS_10ExpressionISE_SB_EERKNSM_ISF_SC_EE(%"struct.adept::internal::BinaryOperation.74"* noalias sret(%"struct.adept::internal::BinaryOperation.74") align 8 %agg.result, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %l, %"struct.adept::Expression.77"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %l.addr = alloca %"struct.adept::Expression.40"*, align 8
  %r.addr = alloca %"struct.adept::Expression.77"*, align 8
  store %"struct.adept::Expression.40"* %l, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.77"* %r, %"struct.adept::Expression.77"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  %2 = load %"struct.adept::Expression.77"*, %"struct.adept::Expression.77"** %r.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::UnaryOperation.76"* @_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3ExpENS1_15BinaryOperationIdNS_6ActiveIdEENS1_8SubtractES6_EEEEE4castEv(%"struct.adept::Expression.77"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"struct.adept::internal::UnaryOperation.76"* %call1 to %"struct.adept::Expression.77"*
  call void @_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEEC2ERKNS_10ExpressionIdS3_EERKNSB_IdS9_EE(%"struct.adept::internal::BinaryOperation.74"* nonnull dereferenceable(24) %agg.result, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %1, %"struct.adept::Expression.77"* nonnull align 1 dereferenceable(1) %3)
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adept3expIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8SubtractES4_EEEENS1_14UnaryOperationIT_NS1_3ExpET0_EERKNS_10ExpressionIS8_SA_EE(%"struct.adept::Expression.79"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %retval = alloca %"struct.adept::internal::UnaryOperation.76", align 8
  %r.addr = alloca %"struct.adept::Expression.79"*, align 8
  store %"struct.adept::Expression.79"* %r, %"struct.adept::Expression.79"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.79"*, %"struct.adept::Expression.79"** %r.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.78"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8SubtractES4_EEE4castEv(%"struct.adept::Expression.79"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"struct.adept::internal::BinaryOperation.78"* %call to %"struct.adept::Expression.79"*
  call void @_ZN5adept8internal14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES5_EEEC2ERKNS_10ExpressionIdS7_EE(%"struct.adept::internal::UnaryOperation.76"* nonnull dereferenceable(16) %retval, %"struct.adept::Expression.79"* nonnull align 1 dereferenceable(1) %1)
  %coerce.dive = getelementptr inbounds %"struct.adept::internal::UnaryOperation.76", %"struct.adept::internal::UnaryOperation.76"* %retval, i32 0, i32 0
  %2 = bitcast %"struct.adept::internal::BinaryOperation.78"* %coerce.dive to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %3 = load { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %2, align 8
  ret { %"class.adept::Active"*, %"class.adept::Active"* } %3
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptmiINS_6ActiveIdEES2_EENS_8internal9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS5_4typeENS6_4typeEE4typeES5_NS3_8SubtractES6_EEE4typeERKNS_10ExpressionIS9_S5_EERKNSH_ISA_S6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %l, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %retval = alloca %"struct.adept::internal::BinaryOperation.78", align 8
  %l.addr = alloca %"struct.adept::Expression.40"*, align 8
  %r.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::Expression.40"* %l, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %r, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"class.adept::Active"* %call1 to %"struct.adept::Expression.40"*
  call void @_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_EC2ERKNS_10ExpressionIdS3_EES9_(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %retval, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %1, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %3)
  %4 = bitcast %"struct.adept::internal::BinaryOperation.78"* %retval to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %5 = load { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %4, align 8
  ret { %"class.adept::Active"*, %"class.adept::Active"* } %5
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdS1_NS3_3AddENS3_14UnaryOperationIdNS3_3ExpENS4_IdS1_NS3_8SubtractES1_EEEEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSD_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SD_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.75"* nonnull align 1 dereferenceable(1) %rhs) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.75"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.75"* %rhs, %"struct.adept::Expression.75"** %rhs.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1)
  %2 = load %"struct.adept::Expression.75"*, %"struct.adept::Expression.75"** %rhs.addr, align 8, !tbaa !2
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_14UnaryOperationIdNS1_3ExpENS2_IdS4_NS1_8SubtractES4_EEEEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.75"* nonnull dereferenceable(1) %2, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call, double* %val_, align 8, !tbaa !226
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %5 = bitcast %"class.adept::Stack"* %4 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %5, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret %"class.adept::Active"* %this1
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local { %"class.adept::Active"*, %"class.adept::Active"* } @_ZN5adeptplINS_8internal14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEES5_EENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS1_15BinaryOperationINS1_7promoteINS8_4typeENS9_4typeEE4typeES8_NS1_3AddES9_EEE4typeERKNS_10ExpressionISC_S8_EERKNSK_ISD_S9_EE(%"struct.adept::Expression.83"* nonnull align 1 dereferenceable(1) %l, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %retval = alloca %"struct.adept::internal::BinaryOperation.80", align 8
  %l.addr = alloca %"struct.adept::Expression.83"*, align 8
  %r.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::Expression.83"* %l, %"struct.adept::Expression.83"** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %r, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.83"*, %"struct.adept::Expression.83"** %l.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(8) %"struct.adept::internal::UnaryOperation.82"* @_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.83"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"struct.adept::internal::UnaryOperation.82"* %call to %"struct.adept::Expression.83"*
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"class.adept::Active"* %call1 to %"struct.adept::Expression.40"*
  call void @_ZN5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_EC2ERKNS_10ExpressionIdS6_EERKNS9_IdS5_EE(%"struct.adept::internal::BinaryOperation.80"* nonnull dereferenceable(16) %retval, %"struct.adept::Expression.83"* nonnull align 1 dereferenceable(1) %1, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %3)
  %4 = bitcast %"struct.adept::internal::BinaryOperation.80"* %retval to { %"class.adept::Active"*, %"class.adept::Active"* }*
  %5 = load { %"class.adept::Active"*, %"class.adept::Active"* }, { %"class.adept::Active"*, %"class.adept::Active"* }* %4, align 8
  ret { %"class.adept::Active"*, %"class.adept::Active"* } %5
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local %"class.adept::Active"* @_ZN5adept3logIdNS_6ActiveIdEEEENS_8internal14UnaryOperationIT_NS3_3LogET0_EERKNS_10ExpressionIS5_S7_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %retval = alloca %"struct.adept::internal::UnaryOperation.82", align 8
  %r.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::Expression.40"* %r, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  call void @_ZN5adept8internal14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEC2ERKNS_10ExpressionIdS4_EE(%"struct.adept::internal::UnaryOperation.82"* nonnull dereferenceable(8) %retval, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %1)
  %coerce.dive = getelementptr inbounds %"struct.adept::internal::UnaryOperation.82", %"struct.adept::internal::UnaryOperation.82"* %retval, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %coerce.dive, align 8
  ret %"class.adept::Active"* %2
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdNS3_14UnaryOperationIdNS3_3LogES1_EENS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrSC_4rankLi0EsrSC_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.81"* nonnull align 1 dereferenceable(1) %rhs, i8* %dummy) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.81"*, align 8
  %dummy.addr = alloca i8*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.81"* %rhs, %"struct.adept::Expression.81"** %rhs.addr, align 8, !tbaa !2
  store i8* %dummy, i8** %dummy.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = bitcast %"class.adept::Active"* %this1 to %"struct.adept::Expression.40"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call i32 @_ZN5adept5Stack17register_gradientEv(%"class.adept::Stack"* nonnull dereferenceable(149) %1)
  store i32 %call, i32* %gradient_index_, align 8, !tbaa !228
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %3 = bitcast %"class.adept::Stack"* %2 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %3)
  %4 = load %"struct.adept::Expression.81"*, %"struct.adept::Expression.81"** %rhs.addr, align 8, !tbaa !2
  %5 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call2 = call fast double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEENS1_3AddES6_EEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.81"* nonnull dereferenceable(1) %4, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %5)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call2, double* %val_, align 8, !tbaa !226
  %6 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %7 = bitcast %"class.adept::Stack"* %6 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_3 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %7, i32* nonnull align 4 dereferenceable(4) %gradient_index_3)
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local zeroext i1 @_ZN5adeptltINS_6ActiveIdEES2_EENS_8internal9enable_ifIXaaeqsrT_4rankLi0EeqsrT0_4rankLi0EEbE4typeERKNS_10ExpressionINS5_4typeES5_EERKNS9_INS6_4typeES6_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %l, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %l.addr = alloca %"struct.adept::Expression.40"*, align 8
  %r.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::Expression.40"* %l, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %r, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE12scalar_valueEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %0)
  %1 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %r.addr, align 8, !tbaa !2
  %call1 = call fast double @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE12scalar_valueEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %1)
  %cmp = fcmp fast olt double %call, %call1
  ret i1 %cmp
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE12scalar_valueEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %this) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.40"*, align 8
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  store %"struct.adept::Expression.40"* %this, %"struct.adept::Expression.40"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %this.addr, align 8
  %0 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept6ActiveIdE18value_at_location_ILi0ELi0EEEdRKNS_14ExpressionSizeIXT0_EEE(%"class.adept::Active"* nonnull dereferenceable(12) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %1) #9
  ret double %call2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept6ActiveIdE18value_at_location_ILi0ELi0EEEdRKNS_14ExpressionSizeIXT0_EEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !226
  ret double %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"struct.adept::internal::UnaryOperation.76"* @_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3ExpENS1_15BinaryOperationIdNS_6ActiveIdEENS1_8SubtractES6_EEEEE4castEv(%"struct.adept::Expression.77"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.77"*, align 8
  store %"struct.adept::Expression.77"* %this, %"struct.adept::Expression.77"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.77"*, %"struct.adept::Expression.77"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.77"* %this1 to %"struct.adept::internal::UnaryOperation.76"*
  ret %"struct.adept::internal::UnaryOperation.76"* %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEEC2ERKNS_10ExpressionIdS3_EERKNSB_IdS9_EE(%"struct.adept::internal::BinaryOperation.74"* nonnull dereferenceable(24) %this, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %left_, %"struct.adept::Expression.77"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.74"*, align 8
  %left_.addr = alloca %"struct.adept::Expression.40"*, align 8
  %right_.addr = alloca %"struct.adept::Expression.77"*, align 8
  store %"struct.adept::internal::BinaryOperation.74"* %this, %"struct.adept::internal::BinaryOperation.74"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %left_, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.77"* %right_, %"struct.adept::Expression.77"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.74"*, %"struct.adept::internal::BinaryOperation.74"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.74"* %this1 to %"struct.adept::Expression.75"*
  %1 = bitcast %"struct.adept::internal::BinaryOperation.74"* %this1 to %"struct.adept::internal::Add"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %left, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::Expression.77"*, %"struct.adept::Expression.77"** %right_.addr, align 8, !tbaa !2
  %call2 = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::UnaryOperation.76"* @_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3ExpENS1_15BinaryOperationIdNS_6ActiveIdEENS1_8SubtractES6_EEEEE4castEv(%"struct.adept::Expression.77"* nonnull dereferenceable(1) %3)
  %4 = bitcast %"struct.adept::internal::UnaryOperation.76"* %right to i8*
  %5 = bitcast %"struct.adept::internal::UnaryOperation.76"* %call2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.78"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8SubtractES4_EEE4castEv(%"struct.adept::Expression.79"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.79"*, align 8
  store %"struct.adept::Expression.79"* %this, %"struct.adept::Expression.79"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.79"*, %"struct.adept::Expression.79"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.79"* %this1 to %"struct.adept::internal::BinaryOperation.78"*
  ret %"struct.adept::internal::BinaryOperation.78"* %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES5_EEEC2ERKNS_10ExpressionIdS7_EE(%"struct.adept::internal::UnaryOperation.76"* nonnull dereferenceable(16) %this, %"struct.adept::Expression.79"* nonnull align 1 dereferenceable(1) %arg_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::UnaryOperation.76"*, align 8
  %arg_.addr = alloca %"struct.adept::Expression.79"*, align 8
  store %"struct.adept::internal::UnaryOperation.76"* %this, %"struct.adept::internal::UnaryOperation.76"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.79"* %arg_, %"struct.adept::Expression.79"** %arg_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::UnaryOperation.76"*, %"struct.adept::internal::UnaryOperation.76"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::UnaryOperation.76"* %this1 to %"struct.adept::Expression.77"*
  %1 = bitcast %"struct.adept::internal::UnaryOperation.76"* %this1 to %"struct.adept::internal::Exp"*
  %arg = getelementptr inbounds %"struct.adept::internal::UnaryOperation.76", %"struct.adept::internal::UnaryOperation.76"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.79"*, %"struct.adept::Expression.79"** %arg_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.78"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_8SubtractES4_EEE4castEv(%"struct.adept::Expression.79"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"struct.adept::internal::BinaryOperation.78"* %arg to i8*
  %4 = bitcast %"struct.adept::internal::BinaryOperation.78"* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_EC2ERKNS_10ExpressionIdS3_EES9_(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %this, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %left_, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.78"*, align 8
  %left_.addr = alloca %"struct.adept::Expression.40"*, align 8
  %right_.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::internal::BinaryOperation.78"* %this, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %left_, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %right_, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.78"*, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.78"* %this1 to %"struct.adept::Expression.79"*
  %1 = bitcast %"struct.adept::internal::BinaryOperation.78"* %this1 to %"struct.adept::internal::Subtract"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.78", %"struct.adept::internal::BinaryOperation.78"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %left, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.78", %"struct.adept::internal::BinaryOperation.78"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %call2 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %3)
  store %"class.adept::Active"* %call2, %"class.adept::Active"** %right, align 8, !tbaa !2
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_14UnaryOperationIdNS1_3ExpENS2_IdS4_NS1_8SubtractES4_EEEEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.75"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.75"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %scratch = alloca %"class.adept::internal::ScratchVector.73", align 8
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  %val = alloca double, align 8
  store %"struct.adept::Expression.75"* %this, %"struct.adept::Expression.75"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.75"*, %"struct.adept::Expression.75"** %this.addr, align 8
  %0 = bitcast %"class.adept::internal::ScratchVector.73"* %scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #9
  call void @_ZN5adept8internal13ScratchVectorILi2EdEC2Ev(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %scratch)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %2 = bitcast double* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call = call nonnull align 8 dereferenceable(24) %"struct.adept::internal::BinaryOperation.74"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_14UnaryOperationIdNS1_3ExpENS2_IdS4_NS1_8SubtractES4_EEEEEEE4castEv(%"struct.adept::Expression.75"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.74"* nonnull dereferenceable(24) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch)
  store double %call2, double* %val, align 8, !tbaa !44
  %call3 = call nonnull align 8 dereferenceable(24) %"struct.adept::internal::BinaryOperation.74"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_14UnaryOperationIdNS1_3ExpENS2_IdS4_NS1_8SubtractES4_EEEEEEE4castEv(%"struct.adept::Expression.75"* nonnull dereferenceable(1) %this1)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.74"* nonnull dereferenceable(24) %call3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch)
  %4 = load double, double* %val, align 8, !tbaa !44
  %5 = bitcast double* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  %7 = bitcast %"class.adept::internal::ScratchVector.73"* %scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %7) #9
  ret double %4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(24) %"struct.adept::internal::BinaryOperation.74"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_14UnaryOperationIdNS1_3ExpENS2_IdS4_NS1_8SubtractES4_EEEEEEE4castEv(%"struct.adept::Expression.75"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.75"*, align 8
  store %"struct.adept::Expression.75"* %this, %"struct.adept::Expression.75"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.75"*, %"struct.adept::Expression.75"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.75"* %this1 to %"struct.adept::internal::BinaryOperation.74"*
  ret %"struct.adept::internal::BinaryOperation.74"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.74"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.74"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.74"* %this, %"struct.adept::internal::BinaryOperation.74"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.74"*, %"struct.adept::internal::BinaryOperation.74"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE27my_value_at_location_store_ILi0ELi0ELi0ELi0ELi2EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.74"* nonnull dereferenceable(24) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.74"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.74"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.74"* %this, %"struct.adept::internal::BinaryOperation.74"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.74"*, %"struct.adept::internal::BinaryOperation.74"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %this1, i32 0, i32 0
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !342
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE10calc_left_ILi0ELi0ELi0ELi2ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.74"* nonnull dereferenceable(24) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %this1, i32 0, i32 1
  %5 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %6 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE11calc_right_ILi0ELi0ELi0ELi2ES9_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.74"* nonnull dereferenceable(24) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %4, %"struct.adept::internal::UnaryOperation.76"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %5, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %6)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE27my_value_at_location_store_ILi0ELi0ELi0ELi0ELi2EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.74"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.74"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.74"* %this, %"struct.adept::internal::BinaryOperation.74"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.74"*, %"struct.adept::internal::BinaryOperation.74"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.74"* %this1 to %"struct.adept::internal::Add"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !342
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %4)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %5 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %this1, i32 0, i32 1
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept8internal14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES5_EEE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::UnaryOperation.76"* nonnull dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %7)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal3Add9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %8 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  %9 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  ret double %call4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !226
  ret double %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES5_EEE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::UnaryOperation.76"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::UnaryOperation.76"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca double, align 8
  store %"struct.adept::internal::UnaryOperation.76"* %this, %"struct.adept::internal::UnaryOperation.76"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::UnaryOperation.76"*, %"struct.adept::internal::UnaryOperation.76"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::UnaryOperation.76"* %this1 to %"struct.adept::internal::Exp"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %arg = getelementptr inbounds %"struct.adept::internal::UnaryOperation.76", %"struct.adept::internal::UnaryOperation.76"* %this1, i32 0, i32 0
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %arg, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %call2 = call fast double @_ZNK5adept8internal3ExpIdE9operationIdEET_RKS4_(%"struct.adept::internal::Exp"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %4 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call3 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi2EdEixEi(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %4, i32 0)
  store double %call2, double* %call3, align 8, !tbaa !44
  %5 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  ret double %call2
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.78"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.78"* %this, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.78"*, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E27my_value_at_location_store_ILi1ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %1)
  ret double %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E27my_value_at_location_store_ILi1ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.78"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.78"* %this, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.78"*, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.78"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.78", %"struct.adept::internal::BinaryOperation.78"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !346
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi2ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %4)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %5 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.78", %"struct.adept::internal::BinaryOperation.78"* %this1, i32 0, i32 1
  %6 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !347
  %7 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %8 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi2ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %6, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %7, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %8)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal8Subtract9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %9 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call5 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi2EdEixEi(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %9, i32 1)
  store double %call4, double* %call5, align 8, !tbaa !44
  %10 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9
  %11 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #9
  ret double %call4
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE10calc_left_ILi0ELi0ELi0ELi2ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.74"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.74"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.74"* %this, %"struct.adept::internal::BinaryOperation.74"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.74"*, %"struct.adept::internal::BinaryOperation.74"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.74"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %this1, i32 0, i32 1
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add9calc_leftILi0ELi0ELi0ELi2ENS_6ActiveIdEENS0_14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdS4_NS0_8SubtractES4_EEEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"struct.adept::internal::UnaryOperation.76"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %4)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEE11calc_right_ILi0ELi0ELi0ELi2ES9_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.74"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::UnaryOperation.76"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.74"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"struct.adept::internal::UnaryOperation.76"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.74"* %this, %"struct.adept::internal::BinaryOperation.74"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::UnaryOperation.76"* %right, %"struct.adept::internal::UnaryOperation.76"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.74"*, %"struct.adept::internal::BinaryOperation.74"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.74"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.74", %"struct.adept::internal::BinaryOperation.74"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !342
  %3 = load %"struct.adept::internal::UnaryOperation.76"*, %"struct.adept::internal::UnaryOperation.76"** %right.addr, align 8, !tbaa !2
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add10calc_rightILi0ELi0ELi0ELi2ENS_6ActiveIdEENS0_14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdS4_NS0_8SubtractES4_EEEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"struct.adept::internal::UnaryOperation.76"* nonnull align 8 dereferenceable(16) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add9calc_leftILi0ELi0ELi0ELi2ENS_6ActiveIdEENS0_14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdS4_NS0_8SubtractES4_EEEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"struct.adept::internal::UnaryOperation.76"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"struct.adept::internal::UnaryOperation.76"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::UnaryOperation.76"* %right, %"struct.adept::internal::UnaryOperation.76"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca double, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  %2 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  store double 1.000000e+00, double* %ref.tmp, align 8, !tbaa !44
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_rhsERKdRKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, double* nonnull align 8 dereferenceable(8) %ref.tmp, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  %3 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add10calc_rightILi0ELi0ELi0ELi2ENS_6ActiveIdEENS0_14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdS4_NS0_8SubtractES4_EEEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"struct.adept::internal::UnaryOperation.76"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"struct.adept::internal::UnaryOperation.76"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::UnaryOperation.76"* %right, %"struct.adept::internal::UnaryOperation.76"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"struct.adept::internal::UnaryOperation.76"*, %"struct.adept::internal::UnaryOperation.76"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES5_EEE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::UnaryOperation.76"* nonnull dereferenceable(16) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES5_EEE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::UnaryOperation.76"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::UnaryOperation.76"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca double, align 8
  store %"struct.adept::internal::UnaryOperation.76"* %this, %"struct.adept::internal::UnaryOperation.76"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::UnaryOperation.76"*, %"struct.adept::internal::UnaryOperation.76"** %this.addr, align 8
  %arg = getelementptr inbounds %"struct.adept::internal::UnaryOperation.76", %"struct.adept::internal::UnaryOperation.76"* %this1, i32 0, i32 0
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %2 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %3 = bitcast %"struct.adept::internal::UnaryOperation.76"* %this1 to %"struct.adept::internal::Exp"*
  %4 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %arg2 = getelementptr inbounds %"struct.adept::internal::UnaryOperation.76", %"struct.adept::internal::UnaryOperation.76"* %this1, i32 0, i32 0
  %5 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %6 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E13value_stored_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %arg2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %5, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %6)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %7 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call3 = call nonnull align 8 dereferenceable(8) double* @_ZNK5adept8internal13ScratchVectorILi2EdEixEi(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %7, i32 0)
  %call4 = call fast double @_ZNK5adept8internal3ExpIdE10derivativeERKdS4_(%"struct.adept::internal::Exp"* nonnull dereferenceable(1) %3, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %call3)
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E14calc_gradient_ILi0ELi1ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET3_(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %arg, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %1, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %2, double %call4)
  %8 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E14calc_gradient_ILi0ELi1ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET3_(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch, double %multiplier) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.78"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %multiplier.addr = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.78"* %this, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::BinaryOperation.78"*, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.78", %"struct.adept::internal::BinaryOperation.78"* %this1, i32 0, i32 0
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !346
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %4 = load double, double* %multiplier.addr, align 8, !tbaa !44
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E10calc_left_ILi0ELi1ELi0ELi2ES3_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3, double %4)
  %5 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.78", %"struct.adept::internal::BinaryOperation.78"* %this1, i32 0, i32 1
  %6 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !347
  %7 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %8 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %9 = load double, double* %multiplier.addr, align 8, !tbaa !44
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E11calc_right_ILi0ELi1ELi0ELi2ES3_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %5, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %6, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %7, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %8, double %9)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E13value_stored_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.78"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.78"* %this, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.78"*, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E16my_value_stored_ILi1ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXgtT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERKNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %1)
  ret double %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) double* @_ZNK5adept8internal13ScratchVectorILi2EdEixEi(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %this, i32 %i) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %i.addr = alloca i32, align 4
  store %"class.adept::internal::ScratchVector.73"* %this, %"class.adept::internal::ScratchVector.73"** %this.addr, align 8, !tbaa !2
  store i32 %i, i32* %i.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %this.addr, align 8
  %val = getelementptr inbounds %"class.adept::internal::ScratchVector.73", %"class.adept::internal::ScratchVector.73"* %this1, i32 0, i32 0
  %0 = load i32, i32* %i.addr, align 4, !tbaa !20
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [2 x double], [2 x double]* %val, i64 0, i64 %idxprom
  ret double* %arrayidx
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E10calc_left_ILi0ELi1ELi0ELi2ES3_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch, double %multiplier) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.78"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %multiplier.addr = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.78"* %this, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::BinaryOperation.78"*, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.78"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.78", %"struct.adept::internal::BinaryOperation.78"* %this1, i32 0, i32 1
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !347
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %6 = load double, double* %multiplier.addr, align 8, !tbaa !44
  call void @_ZNK5adept8internal8Subtract9calc_leftILi0ELi1ELi0ELi2ENS_6ActiveIdEES4_dEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5, double %6)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E11calc_right_ILi0ELi1ELi0ELi2ES3_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch, double %multiplier) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.78"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %multiplier.addr = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.78"* %this, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::BinaryOperation.78"*, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.78"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.78", %"struct.adept::internal::BinaryOperation.78"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !346
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %6 = load double, double* %multiplier.addr, align 8, !tbaa !44
  call void @_ZNK5adept8internal8Subtract10calc_rightILi0ELi1ELi0ELi2ENS_6ActiveIdEES4_dEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5, double %6)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal8Subtract9calc_leftILi0ELi1ELi0ELi2ENS_6ActiveIdEES4_dEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch, double %multiplier) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Subtract"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %multiplier.addr = alloca double, align 8
  store %"struct.adept::internal::Subtract"* %this, %"struct.adept::internal::Subtract"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::Subtract"*, %"struct.adept::internal::Subtract"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi2ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3, double* nonnull align 8 dereferenceable(8) %multiplier.addr)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal8Subtract10calc_rightILi0ELi1ELi0ELi2ENS_6ActiveIdEES4_dEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch, double %multiplier) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Subtract"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %multiplier.addr = alloca double, align 8
  %ref.tmp = alloca double, align 8
  store %"struct.adept::internal::Subtract"* %this, %"struct.adept::internal::Subtract"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::Subtract"*, %"struct.adept::internal::Subtract"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %4 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = load double, double* %multiplier.addr, align 8, !tbaa !44
  %fneg = fneg fast double %5
  store double %fneg, double* %ref.tmp, align 8, !tbaa !44
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi2ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %6 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_E16my_value_stored_ILi1ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXgtT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERKNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.78"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.78"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.78"* %this, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.78"*, %"struct.adept::internal::BinaryOperation.78"** %this.addr, align 8
  %0 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(8) double* @_ZNK5adept8internal13ScratchVectorILi2EdEixEi(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %0, i32 1)
  %1 = load double, double* %call, align 8, !tbaa !44
  ret double %1
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) %"struct.adept::internal::UnaryOperation.82"* @_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.83"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.83"*, align 8
  store %"struct.adept::Expression.83"* %this, %"struct.adept::Expression.83"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.83"*, %"struct.adept::Expression.83"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.83"* %this1 to %"struct.adept::internal::UnaryOperation.82"*
  ret %"struct.adept::internal::UnaryOperation.82"* %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_EC2ERKNS_10ExpressionIdS6_EERKNS9_IdS5_EE(%"struct.adept::internal::BinaryOperation.80"* nonnull dereferenceable(16) %this, %"struct.adept::Expression.83"* nonnull align 1 dereferenceable(1) %left_, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.80"*, align 8
  %left_.addr = alloca %"struct.adept::Expression.83"*, align 8
  %right_.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::internal::BinaryOperation.80"* %this, %"struct.adept::internal::BinaryOperation.80"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.83"* %left_, %"struct.adept::Expression.83"** %left_.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %right_, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.80"*, %"struct.adept::internal::BinaryOperation.80"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.80"* %this1 to %"struct.adept::Expression.81"*
  %1 = bitcast %"struct.adept::internal::BinaryOperation.80"* %this1 to %"struct.adept::internal::Add"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.80", %"struct.adept::internal::BinaryOperation.80"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.83"*, %"struct.adept::Expression.83"** %left_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(8) %"struct.adept::internal::UnaryOperation.82"* @_ZNK5adept10ExpressionIdNS_8internal14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.83"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"struct.adept::internal::UnaryOperation.82"* %left to i8*
  %4 = bitcast %"struct.adept::internal::UnaryOperation.82"* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.80", %"struct.adept::internal::BinaryOperation.80"* %this1, i32 0, i32 1
  %5 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %call2 = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %5)
  store %"class.adept::Active"* %call2, %"class.adept::Active"** %right, align 8, !tbaa !2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEC2ERKNS_10ExpressionIdS4_EE(%"struct.adept::internal::UnaryOperation.82"* nonnull dereferenceable(8) %this, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %arg_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::UnaryOperation.82"*, align 8
  %arg_.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::internal::UnaryOperation.82"* %this, %"struct.adept::internal::UnaryOperation.82"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %arg_, %"struct.adept::Expression.40"** %arg_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::UnaryOperation.82"*, %"struct.adept::internal::UnaryOperation.82"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::UnaryOperation.82"* %this1 to %"struct.adept::Expression.83"*
  %1 = bitcast %"struct.adept::internal::UnaryOperation.82"* %this1 to %"struct.adept::internal::Log"*
  %arg = getelementptr inbounds %"struct.adept::internal::UnaryOperation.82", %"struct.adept::internal::UnaryOperation.82"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %arg_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %arg, align 8, !tbaa !2
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEENS1_3AddES6_EEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.81"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.81"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %scratch = alloca %"class.adept::internal::ScratchVector.64", align 8
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  %val = alloca double, align 8
  store %"struct.adept::Expression.81"* %this, %"struct.adept::Expression.81"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.81"*, %"struct.adept::Expression.81"** %this.addr, align 8
  %0 = bitcast %"class.adept::internal::ScratchVector.64"* %scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  call void @_ZN5adept8internal13ScratchVectorILi1EdEC2Ev(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %scratch)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %2 = bitcast double* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.80"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEENS1_3AddES6_EEE4castEv(%"struct.adept::Expression.81"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.80"* nonnull dereferenceable(16) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch)
  store double %call2, double* %val, align 8, !tbaa !44
  %call3 = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.80"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEENS1_3AddES6_EEE4castEv(%"struct.adept::Expression.81"* nonnull dereferenceable(1) %this1)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.80"* nonnull dereferenceable(16) %call3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch)
  %4 = load double, double* %val, align 8, !tbaa !44
  %5 = bitcast double* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  %7 = bitcast %"class.adept::internal::ScratchVector.64"* %scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  ret double %4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.80"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_14UnaryOperationIdNS1_3LogENS_6ActiveIdEEEENS1_3AddES6_EEE4castEv(%"struct.adept::Expression.81"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.81"*, align 8
  store %"struct.adept::Expression.81"* %this, %"struct.adept::Expression.81"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.81"*, %"struct.adept::Expression.81"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.81"* %this1 to %"struct.adept::internal::BinaryOperation.80"*
  ret %"struct.adept::internal::BinaryOperation.80"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.80"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.80"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOperation.80"* %this, %"struct.adept::internal::BinaryOperation.80"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.80"*, %"struct.adept::internal::BinaryOperation.80"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E27my_value_at_location_store_ILi0ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.80"* nonnull dereferenceable(16) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.80"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.80"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOperation.80"* %this, %"struct.adept::internal::BinaryOperation.80"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.80"*, %"struct.adept::internal::BinaryOperation.80"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.80", %"struct.adept::internal::BinaryOperation.80"* %this1, i32 0, i32 0
  %1 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %2 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E10calc_left_ILi0ELi0ELi0ELi1ES6_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSB_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.80"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"struct.adept::internal::UnaryOperation.82"* nonnull align 8 dereferenceable(8) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %1, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %2)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.80", %"struct.adept::internal::BinaryOperation.80"* %this1, i32 0, i32 1
  %4 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !348
  %5 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %6 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E11calc_right_ILi0ELi0ELi0ELi1ES5_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSB_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.80"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %4, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %5, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %6)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E27my_value_at_location_store_ILi0ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.80"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.80"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.80"* %this, %"struct.adept::internal::BinaryOperation.80"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.80"*, %"struct.adept::internal::BinaryOperation.80"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.80"* %this1 to %"struct.adept::internal::Add"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.80", %"struct.adept::internal::BinaryOperation.80"* %this1, i32 0, i32 0
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal14UnaryOperationIdNS0_3LogENS_6ActiveIdEEE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::UnaryOperation.82"* nonnull dereferenceable(8) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %4 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.80", %"struct.adept::internal::BinaryOperation.80"* %this1, i32 0, i32 1
  %5 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !348
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %5, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %7)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal3Add9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %8 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  %9 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  ret double %call4
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal14UnaryOperationIdNS0_3LogENS_6ActiveIdEEE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::UnaryOperation.82"* nonnull dereferenceable(8) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::UnaryOperation.82"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  store %"struct.adept::internal::UnaryOperation.82"* %this, %"struct.adept::internal::UnaryOperation.82"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::UnaryOperation.82"*, %"struct.adept::internal::UnaryOperation.82"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::UnaryOperation.82"* %this1 to %"struct.adept::internal::Log"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %arg = getelementptr inbounds %"struct.adept::internal::UnaryOperation.82", %"struct.adept::internal::UnaryOperation.82"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %arg, align 8, !tbaa !351
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %4)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %call2 = call fast double @_ZNK5adept8internal3LogIdE9operationIdEET_RKS4_(%"struct.adept::internal::Log"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %5 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call3 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi1EdEixEi(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %5, i32 0)
  store double %call2, double* %call3, align 8, !tbaa !44
  %6 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #9
  ret double %call2
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal3LogIdE9operationIdEET_RKS4_(%"struct.adept::internal::Log"* nonnull dereferenceable(1) %this, double* nonnull align 8 dereferenceable(8) %val) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Log"*, align 8
  %val.addr = alloca double*, align 8
  store %"struct.adept::internal::Log"* %this, %"struct.adept::internal::Log"** %this.addr, align 8, !tbaa !2
  store double* %val, double** %val.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Log"*, %"struct.adept::internal::Log"** %this.addr, align 8
  %0 = load double*, double** %val.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  %2 = call fast double @llvm.log.f64(double %1)
  ret double %2
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E10calc_left_ILi0ELi0ELi0ELi1ES6_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSB_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.80"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::UnaryOperation.82"* nonnull align 8 dereferenceable(8) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.80"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::UnaryOperation.82"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOperation.80"* %this, %"struct.adept::internal::BinaryOperation.80"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::UnaryOperation.82"* %left, %"struct.adept::internal::UnaryOperation.82"** %left.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.80"*, %"struct.adept::internal::BinaryOperation.80"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.80"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"struct.adept::internal::UnaryOperation.82"*, %"struct.adept::internal::UnaryOperation.82"** %left.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.80", %"struct.adept::internal::BinaryOperation.80"* %this1, i32 0, i32 1
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !348
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add9calc_leftILi0ELi0ELi0ELi1ENS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEES6_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"struct.adept::internal::UnaryOperation.82"* nonnull align 8 dereferenceable(8) %2, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_E11calc_right_ILi0ELi0ELi0ELi1ES5_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSB_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.80"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.80"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOperation.80"* %this, %"struct.adept::internal::BinaryOperation.80"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.80"*, %"struct.adept::internal::BinaryOperation.80"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.80"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.80", %"struct.adept::internal::BinaryOperation.80"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add10calc_rightILi0ELi0ELi0ELi1ENS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEES6_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"struct.adept::internal::UnaryOperation.82"* nonnull align 8 dereferenceable(8) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %4)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add9calc_leftILi0ELi0ELi0ELi1ENS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEES6_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::UnaryOperation.82"* nonnull align 8 dereferenceable(8) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::UnaryOperation.82"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::UnaryOperation.82"* %left, %"struct.adept::internal::UnaryOperation.82"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"struct.adept::internal::UnaryOperation.82"*, %"struct.adept::internal::UnaryOperation.82"** %left.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal14UnaryOperationIdNS0_3LogENS_6ActiveIdEEE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::UnaryOperation.82"* nonnull dereferenceable(8) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal14UnaryOperationIdNS0_3LogENS_6ActiveIdEEE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::UnaryOperation.82"* nonnull dereferenceable(8) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::UnaryOperation.82"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::UnaryOperation.82"* %this, %"struct.adept::internal::UnaryOperation.82"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::UnaryOperation.82"*, %"struct.adept::internal::UnaryOperation.82"** %this.addr, align 8
  %arg = getelementptr inbounds %"struct.adept::internal::UnaryOperation.82", %"struct.adept::internal::UnaryOperation.82"* %this1, i32 0, i32 0
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %arg, align 8, !tbaa !351
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %4 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = bitcast %"struct.adept::internal::UnaryOperation.82"* %this1 to %"struct.adept::internal::Log"*
  %6 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #9
  %arg3 = getelementptr inbounds %"struct.adept::internal::UnaryOperation.82", %"struct.adept::internal::UnaryOperation.82"* %this1, i32 0, i32 0
  %7 = load %"class.adept::Active"*, %"class.adept::Active"** %arg3, align 8, !tbaa !351
  %8 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %9 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE13value_stored_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %7, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %8, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %9)
  store double %call, double* %ref.tmp2, align 8, !tbaa !44
  %10 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call4 = call nonnull align 8 dereferenceable(8) double* @_ZNK5adept8internal13ScratchVectorILi1EdEixEi(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %10, i32 0)
  %call5 = call fast double @_ZNK5adept8internal3LogIdE10derivativeERKdS4_(%"struct.adept::internal::Log"* nonnull dereferenceable(1) %5, double* nonnull align 8 dereferenceable(8) %ref.tmp2, double* nonnull align 8 dereferenceable(8) %call4)
  store double %call5, double* %ref.tmp, align 8, !tbaa !44
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi1EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %11 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #9
  %12 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %12) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal3LogIdE10derivativeERKdS4_(%"struct.adept::internal::Log"* nonnull dereferenceable(1) %this, double* nonnull align 8 dereferenceable(8) %val, double* nonnull align 8 dereferenceable(8) %result) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Log"*, align 8
  %val.addr = alloca double*, align 8
  %result.addr = alloca double*, align 8
  store %"struct.adept::internal::Log"* %this, %"struct.adept::internal::Log"** %this.addr, align 8, !tbaa !2
  store double* %val, double** %val.addr, align 8, !tbaa !2
  store double* %result, double** %result.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Log"*, %"struct.adept::internal::Log"** %this.addr, align 8
  %0 = load double*, double** %val.addr, align 8, !tbaa !2
  %1 = load double, double* %0, align 8, !tbaa !44
  %div = fdiv fast double 1.000000e+00, %1
  ret double %div
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add10calc_rightILi0ELi0ELi0ELi1ENS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEES6_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::UnaryOperation.82"* nonnull align 8 dereferenceable(8) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::UnaryOperation.82"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::UnaryOperation.82"* %left, %"struct.adept::internal::UnaryOperation.82"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  %2 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  store double 1.000000e+00, double* %ref.tmp, align 8, !tbaa !44
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_rhsERKdRKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, double* nonnull align 8 dereferenceable(8) %ref.tmp, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  %3 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.52"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.52"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %scratch = alloca %"class.adept::internal::ScratchVector", align 1
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  %val = alloca double, align 8
  store %"struct.adept::Expression.52"* %this, %"struct.adept::Expression.52"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.52"*, %"struct.adept::Expression.52"** %this.addr, align 8
  %0 = bitcast %"class.adept::internal::ScratchVector"* %scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %0) #9
  call void @_ZN5adept8internal13ScratchVectorILi0EdEC2Ev(%"class.adept::internal::ScratchVector"* nonnull dereferenceable(1) %scratch)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %2 = bitcast double* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.51"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EEE4castEv(%"struct.adept::Expression.52"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E24value_at_location_store_ILi0ELi0ELi0ELi0EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch)
  store double %call2, double* %val, align 8, !tbaa !44
  %call3 = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.51"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EEE4castEv(%"struct.adept::Expression.52"* nonnull dereferenceable(1) %this1)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E14calc_gradient_ILi0ELi0ELi0ELi0EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %call3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch)
  %4 = load double, double* %val, align 8, !tbaa !44
  %5 = bitcast double* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  %7 = bitcast %"class.adept::internal::ScratchVector"* %scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %7) #9
  ret double %4
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E24value_at_location_store_ILi0ELi0ELi0ELi0EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector"*, align 8
  store %"struct.adept::internal::BinaryOperation.51"* %this, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector"* %scratch, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector"*, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E27my_value_at_location_store_ILi0ELi0ELi0ELi0ELi0EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E14calc_gradient_ILi0ELi0ELi0ELi0EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector"*, align 8
  store %"struct.adept::internal::BinaryOperation.51"* %this, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector"* %scratch, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 0
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !337
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector"*, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E10calc_left_ILi0ELi0ELi0ELi0ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %3)
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 1
  %5 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !338
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector"*, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E11calc_right_ILi0ELi0ELi0ELi0ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %4, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %5, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %7)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E27my_value_at_location_store_ILi0ELi0ELi0ELi0ELi0EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.51"* %this, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector"* %scratch, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.51"* %this1 to %"struct.adept::internal::Add"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !337
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector"*, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi0ELi0ELi0EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %4)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %5 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 1
  %6 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !338
  %7 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %8 = load %"class.adept::internal::ScratchVector"*, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi0ELi0ELi0EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %6, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %7, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %8)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal3Add9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %9 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  %10 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9
  ret double %call4
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E10calc_left_ILi0ELi0ELi0ELi0ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector"*, align 8
  store %"struct.adept::internal::BinaryOperation.51"* %this, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector"* %scratch, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.51"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 1
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !338
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector"*, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add9calc_leftILi0ELi0ELi0ELi0ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_E11calc_right_ILi0ELi0ELi0ELi0ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.51"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.51"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector"*, align 8
  store %"struct.adept::internal::BinaryOperation.51"* %this, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector"* %scratch, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.51"*, %"struct.adept::internal::BinaryOperation.51"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.51"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.51", %"struct.adept::internal::BinaryOperation.51"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !337
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector"*, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add10calc_rightILi0ELi0ELi0ELi0ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add9calc_leftILi0ELi0ELi0ELi0ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector"* %scratch, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector"*, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi0ELi0ELi0EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add10calc_rightILi0ELi0ELi0ELi0ENS_6ActiveIdEES4_EEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector"* %scratch, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector"*, %"class.adept::internal::ScratchVector"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi0ELi0ELi0EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector"* nonnull align 1 dereferenceable(1) %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 16 dereferenceable(24) %"struct.adept::internal::BinaryOpScalarLeft.56"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.57"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.57"*, align 8
  store %"struct.adept::Expression.57"* %this, %"struct.adept::Expression.57"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.57"*, %"struct.adept::Expression.57"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.57"* %this1 to %"struct.adept::internal::BinaryOpScalarLeft.56"*
  ret %"struct.adept::internal::BinaryOpScalarLeft.56"* %0
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOpScalarLeft.59"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIdiNS1_8MultiplyENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.60"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.60"*, align 8
  store %"struct.adept::Expression.60"* %this, %"struct.adept::Expression.60"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.60"*, %"struct.adept::Expression.60"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.60"* %this1 to %"struct.adept::internal::BinaryOpScalarLeft.59"*
  ret %"struct.adept::internal::BinaryOpScalarLeft.59"* %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEEC2ERKNS_10ExpressionIdS6_EERKNSB_IdS9_EE(%"struct.adept::internal::BinaryOperation.54"* nonnull dereferenceable(16) %this, %"struct.adept::Expression.57"* nonnull align 1 dereferenceable(1) %left_, %"struct.adept::Expression.60"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.54"*, align 8
  %left_.addr = alloca %"struct.adept::Expression.57"*, align 8
  %right_.addr = alloca %"struct.adept::Expression.60"*, align 8
  store %"struct.adept::internal::BinaryOperation.54"* %this, %"struct.adept::internal::BinaryOperation.54"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.57"* %left_, %"struct.adept::Expression.57"** %left_.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.60"* %right_, %"struct.adept::Expression.60"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.54"*, %"struct.adept::internal::BinaryOperation.54"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.54"* %this1 to %"struct.adept::Expression.55"*
  %1 = bitcast %"struct.adept::internal::BinaryOperation.54"* %this1 to %"struct.adept::internal::Subtract"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.54", %"struct.adept::internal::BinaryOperation.54"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.57"*, %"struct.adept::Expression.57"** %left_.addr, align 8, !tbaa !2
  %call = call nonnull align 16 dereferenceable(24) %"struct.adept::internal::BinaryOpScalarLeft.56"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.57"* nonnull dereferenceable(1) %2)
  store %"struct.adept::internal::BinaryOpScalarLeft.56"* %call, %"struct.adept::internal::BinaryOpScalarLeft.56"** %left, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.54", %"struct.adept::internal::BinaryOperation.54"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::Expression.60"*, %"struct.adept::Expression.60"** %right_.addr, align 8, !tbaa !2
  %call2 = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOpScalarLeft.59"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIdiNS1_8MultiplyENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.60"* nonnull dereferenceable(1) %3)
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %call2, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right, align 8, !tbaa !2
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEC2EdRKNS_10ExpressionIdS4_EE(%"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull dereferenceable(24) %this, double %left_, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.56"*, align 8
  %left_.addr = alloca double, align 8
  %right_.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.56"* %this, %"struct.adept::internal::BinaryOpScalarLeft.56"** %this.addr, align 8, !tbaa !2
  store double %left_, double* %left_.addr, align 8, !tbaa !44
  store %"struct.adept::Expression.40"* %right_, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.56"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.56"* %this1 to %"struct.adept::Expression.57"*
  %1 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.56"* %this1 to %"struct.adept::internal::Add"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.56", %"struct.adept::internal::BinaryOpScalarLeft.56"* %this1, i32 0, i32 0
  %2 = load double, double* %left_.addr, align 8, !tbaa !44
  call void @_ZN5adept8internal6PacketIdEC2Ed(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %left, double %2)
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.56", %"struct.adept::internal::BinaryOpScalarLeft.56"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %3)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %right, align 16, !tbaa !2
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEEC2EiRKNS_10ExpressionIdS4_EE(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this, i32 %left_, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %left_.addr = alloca i32, align 4
  %right_.addr = alloca %"struct.adept::Expression.40"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %this, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8, !tbaa !2
  store i32 %left_, i32* %left_.addr, align 4, !tbaa !20
  store %"struct.adept::Expression.40"* %right_, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1 to %"struct.adept::Expression.60"*
  %1 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1 to %"struct.adept::internal::Multiply"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1, i32 0, i32 0
  %2 = load i32, i32* %left_.addr, align 4, !tbaa !20
  call void @_ZN5adept8internal6PacketIiEC2Ei(%"struct.adept::internal::Packet.61"* nonnull dereferenceable(4) %left, i32 %2)
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %right_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %3)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %right, align 8, !tbaa !2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal6PacketIiEC2Ei(%"struct.adept::internal::Packet.61"* nonnull dereferenceable(4) %this, i32 %d) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Packet.61"*, align 8
  %d.addr = alloca i32, align 4
  store %"struct.adept::internal::Packet.61"* %this, %"struct.adept::internal::Packet.61"** %this.addr, align 8, !tbaa !2
  store i32 %d, i32* %d.addr, align 4, !tbaa !20
  %this1 = load %"struct.adept::internal::Packet.61"*, %"struct.adept::internal::Packet.61"** %this.addr, align 8
  %data = getelementptr inbounds %"struct.adept::internal::Packet.61", %"struct.adept::internal::Packet.61"* %this1, i32 0, i32 0
  %0 = load i32, i32* %d.addr, align 4, !tbaa !20
  store i32 %0, i32* %data, align 4, !tbaa !352
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEENS1_8SubtractENS3_IdiNS1_8MultiplyES6_EEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.55"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.55"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %scratch = alloca %"class.adept::internal::ScratchVector.73", align 8
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  %val = alloca double, align 8
  store %"struct.adept::Expression.55"* %this, %"struct.adept::Expression.55"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.55"*, %"struct.adept::Expression.55"** %this.addr, align 8
  %0 = bitcast %"class.adept::internal::ScratchVector.73"* %scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #9
  call void @_ZN5adept8internal13ScratchVectorILi2EdEC2Ev(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %scratch)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %2 = bitcast double* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.54"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEENS1_8SubtractENS3_IdiNS1_8MultiplyES6_EEEEE4castEv(%"struct.adept::Expression.55"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.54"* nonnull dereferenceable(16) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch)
  store double %call2, double* %val, align 8, !tbaa !44
  %call3 = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.54"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEENS1_8SubtractENS3_IdiNS1_8MultiplyES6_EEEEE4castEv(%"struct.adept::Expression.55"* nonnull dereferenceable(1) %this1)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.54"* nonnull dereferenceable(16) %call3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch)
  %4 = load double, double* %val, align 8, !tbaa !44
  %5 = bitcast double* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  %7 = bitcast %"class.adept::internal::ScratchVector.73"* %scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %7) #9
  ret double %4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.54"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS1_18BinaryOpScalarLeftIddNS1_3AddENS_6ActiveIdEEEENS1_8SubtractENS3_IdiNS1_8MultiplyES6_EEEEE4castEv(%"struct.adept::Expression.55"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.55"*, align 8
  store %"struct.adept::Expression.55"* %this, %"struct.adept::Expression.55"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.55"*, %"struct.adept::Expression.55"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.55"* %this1 to %"struct.adept::internal::BinaryOperation.54"*
  ret %"struct.adept::internal::BinaryOperation.54"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE24value_at_location_store_ILi0ELi0ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.54"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.54"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.54"* %this, %"struct.adept::internal::BinaryOperation.54"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.54"*, %"struct.adept::internal::BinaryOperation.54"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.54"* nonnull dereferenceable(16) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE14calc_gradient_ILi0ELi0ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.54"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.54"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.54"* %this, %"struct.adept::internal::BinaryOperation.54"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.54"*, %"struct.adept::internal::BinaryOperation.54"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.54", %"struct.adept::internal::BinaryOperation.54"* %this1, i32 0, i32 0
  %1 = load %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.56"** %left, align 8, !tbaa !354
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE10calc_left_ILi0ELi0ELi0ELi2ES6_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.54"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull align 16 dereferenceable(24) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.54", %"struct.adept::internal::BinaryOperation.54"* %this1, i32 0, i32 1
  %5 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right, align 8, !tbaa !356
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE11calc_right_ILi0ELi0ELi0ELi2ES9_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.54"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %4, %"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull align 8 dereferenceable(16) %5, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %7)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.54"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.54"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.54"* %this, %"struct.adept::internal::BinaryOperation.54"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.54"*, %"struct.adept::internal::BinaryOperation.54"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.54"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.54", %"struct.adept::internal::BinaryOperation.54"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.56"** %left, align 8, !tbaa !354
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull dereferenceable(24) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %4)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %5 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.54", %"struct.adept::internal::BinaryOperation.54"* %this1, i32 0, i32 1
  %6 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right, align 8, !tbaa !356
  %7 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %8 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %6, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %7, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %8)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal8Subtract9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %9 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call5 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi2EdEixEi(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %9, i32 0)
  store double %call4, double* %call5, align 8, !tbaa !44
  %10 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9
  %11 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #9
  ret double %call4
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.56"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.56"* %this, %"struct.adept::internal::BinaryOpScalarLeft.56"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.56"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEE27my_value_at_location_store_ILi0ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull dereferenceable(24) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %this, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %1)
  ret double %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEE27my_value_at_location_store_ILi0ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.56"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.56"* %this, %"struct.adept::internal::BinaryOpScalarLeft.56"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.56"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.56"* %this1 to %"struct.adept::internal::Add"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.56", %"struct.adept::internal::BinaryOpScalarLeft.56"* %this1, i32 0, i32 0
  %call = call fast double @_ZNK5adept8internal6PacketIdE5valueEv(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %left)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %2 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.56", %"struct.adept::internal::BinaryOpScalarLeft.56"* %this1, i32 0, i32 1
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 16, !tbaa !357
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal3Add9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %6 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #9
  %7 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  ret double %call4
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi1ELi0ELi2EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca i32, align 4
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %this, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1 to %"struct.adept::internal::Multiply"*
  %1 = bitcast i32* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1, i32 0, i32 0
  %call = call i32 @_ZNK5adept8internal6PacketIiE5valueEv(%"struct.adept::internal::Packet.61"* nonnull dereferenceable(4) %left)
  store i32 %call, i32* %ref.tmp, align 4, !tbaa !20
  %2 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1, i32 0, i32 1
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !359
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi2ELi0ELi2EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal8Multiply9operationIidEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Multiply"* nonnull dereferenceable(1) %0, i32* nonnull align 4 dereferenceable(4) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %6 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call5 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi2EdEixEi(%"class.adept::internal::ScratchVector.73"* nonnull dereferenceable(16) %6, i32 1)
  store double %call4, double* %call5, align 8, !tbaa !44
  %7 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  %8 = bitcast i32* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %8) #9
  ret double %call4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal8Multiply9operationIidEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Multiply"* nonnull dereferenceable(1) %this, i32* nonnull align 4 dereferenceable(4) %left, double* nonnull align 8 dereferenceable(8) %right) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Multiply"*, align 8
  %left.addr = alloca i32*, align 8
  %right.addr = alloca double*, align 8
  store %"struct.adept::internal::Multiply"* %this, %"struct.adept::internal::Multiply"** %this.addr, align 8, !tbaa !2
  store i32* %left, i32** %left.addr, align 8, !tbaa !2
  store double* %right, double** %right.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Multiply"*, %"struct.adept::internal::Multiply"** %this.addr, align 8
  %0 = load i32*, i32** %left.addr, align 8, !tbaa !2
  %1 = load i32, i32* %0, align 4, !tbaa !20
  %conv = sitofp i32 %1 to double
  %2 = load double*, double** %right.addr, align 8, !tbaa !2
  %3 = load double, double* %2, align 8, !tbaa !44
  %mul = fmul fast double %conv, %3
  ret double %mul
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept8internal6PacketIiE5valueEv(%"struct.adept::internal::Packet.61"* nonnull dereferenceable(4) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Packet.61"*, align 8
  store %"struct.adept::internal::Packet.61"* %this, %"struct.adept::internal::Packet.61"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Packet.61"*, %"struct.adept::internal::Packet.61"** %this.addr, align 8
  %data = getelementptr inbounds %"struct.adept::internal::Packet.61", %"struct.adept::internal::Packet.61"* %this1, i32 0, i32 0
  %0 = load i32, i32* %data, align 4, !tbaa !352
  ret i32 %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE10calc_left_ILi0ELi0ELi0ELi2ES6_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.54"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull align 16 dereferenceable(24) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.54"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.56"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.54"* %this, %"struct.adept::internal::BinaryOperation.54"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft.56"* %left, %"struct.adept::internal::BinaryOpScalarLeft.56"** %left.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.54"*, %"struct.adept::internal::BinaryOperation.54"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.54"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.56"** %left.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.54", %"struct.adept::internal::BinaryOperation.54"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right, align 8, !tbaa !356
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal8Subtract9calc_leftILi0ELi0ELi0ELi2ENS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS3_IdiNS0_8MultiplyES6_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull align 16 dereferenceable(24) %2, %"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull align 8 dereferenceable(16) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEE11calc_right_ILi0ELi0ELi0ELi2ES9_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSD_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.54"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.54"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOperation.54"* %this, %"struct.adept::internal::BinaryOperation.54"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %right, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.54"*, %"struct.adept::internal::BinaryOperation.54"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.54"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.54", %"struct.adept::internal::BinaryOperation.54"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.56"** %left, align 8, !tbaa !354
  %3 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right.addr, align 8, !tbaa !2
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal8Subtract10calc_rightILi0ELi0ELi0ELi2ENS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS3_IdiNS0_8MultiplyES6_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull align 16 dereferenceable(24) %2, %"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull align 8 dereferenceable(16) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal8Subtract9calc_leftILi0ELi0ELi0ELi2ENS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS3_IdiNS0_8MultiplyES6_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull align 16 dereferenceable(24) %left, %"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Subtract"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.56"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::Subtract"* %this, %"struct.adept::internal::Subtract"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft.56"* %left, %"struct.adept::internal::BinaryOpScalarLeft.56"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %right, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Subtract"*, %"struct.adept::internal::Subtract"** %this.addr, align 8
  %0 = load %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.56"** %left.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEE14calc_gradient_ILi0ELi1ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull dereferenceable(24) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEE14calc_gradient_ILi0ELi1ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.56"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.56"* %this, %"struct.adept::internal::BinaryOpScalarLeft.56"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.56"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.56", %"struct.adept::internal::BinaryOpScalarLeft.56"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 16, !tbaa !357
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEE11calc_right_ILi0ELi1ELi0ELi2ES4_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull dereferenceable(24) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEE11calc_right_ILi0ELi1ELi0ELi2ES4_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.56"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %ref.tmp = alloca %"struct.adept::internal::Scalar", align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.56"* %this, %"struct.adept::internal::BinaryOpScalarLeft.56"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.56"*, %"struct.adept::internal::BinaryOpScalarLeft.56"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.56"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = bitcast %"struct.adept::internal::Scalar"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %3 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.56", %"struct.adept::internal::BinaryOpScalarLeft.56"* %this1, i32 0, i32 0
  %call = call fast double @_ZNK5adept8internal6PacketIdE5valueEv(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %left)
  store double %call, double* %ref.tmp2, align 8, !tbaa !44
  call void @_ZN5adept8internal6ScalarIdEC2ERKd(%"struct.adept::internal::Scalar"* nonnull dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %4 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %5 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %6 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add10calc_rightILi0ELi1ELi0ELi2ENS0_6ScalarIdEENS_6ActiveIdEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"struct.adept::internal::Scalar"* nonnull align 8 dereferenceable(8) %ref.tmp, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %4, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %5, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %6)
  %7 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  %8 = bitcast %"struct.adept::internal::Scalar"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add10calc_rightILi0ELi1ELi0ELi2ENS0_6ScalarIdEENS_6ActiveIdEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::Scalar"* nonnull align 8 dereferenceable(8) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::Scalar"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::Scalar"* %left, %"struct.adept::internal::Scalar"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi2EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal8Subtract10calc_rightILi0ELi0ELi0ELi2ENS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS3_IdiNS0_8MultiplyES6_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOpScalarLeft.56"* nonnull align 16 dereferenceable(24) %left, %"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Subtract"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.56"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::Subtract"* %this, %"struct.adept::internal::Subtract"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft.56"* %left, %"struct.adept::internal::BinaryOpScalarLeft.56"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %right, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Subtract"*, %"struct.adept::internal::Subtract"** %this.addr, align 8
  %0 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE14calc_gradient_ILi0ELi1ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET3_(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3, double -1.000000e+00)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE14calc_gradient_ILi0ELi1ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET3_(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch, double %multiplier) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %multiplier.addr = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %this, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !359
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %4 = load double, double* %multiplier.addr, align 8, !tbaa !44
  call void @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE11calc_right_ILi0ELi1ELi0ELi2ES4_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3, double %4)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE11calc_right_ILi0ELi1ELi0ELi2ES4_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch, double %multiplier) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %multiplier.addr = alloca double, align 8
  %ref.tmp = alloca %"struct.adept::internal::Scalar.84", align 4
  %ref.tmp2 = alloca i32, align 4
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %this, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"struct.adept::internal::Scalar.84"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  %2 = bitcast i32* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1, i32 0, i32 0
  %call = call i32 @_ZNK5adept8internal6PacketIiE5valueEv(%"struct.adept::internal::Packet.61"* nonnull dereferenceable(4) %left)
  store i32 %call, i32* %ref.tmp2, align 4, !tbaa !20
  call void @_ZN5adept8internal6ScalarIiEC2ERKi(%"struct.adept::internal::Scalar.84"* nonnull dereferenceable(4) %ref.tmp, i32* nonnull align 4 dereferenceable(4) %ref.tmp2)
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %6 = load double, double* %multiplier.addr, align 8, !tbaa !44
  call void @_ZN5adept8internal8Multiply10calc_rightILi0ELi1ELi0ELi2ENS0_6ScalarIiEENS_6ActiveIdEEdEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_(%"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"struct.adept::internal::Scalar.84"* nonnull align 4 dereferenceable(4) %ref.tmp, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %5, double %6)
  %7 = bitcast i32* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %7) #9
  %8 = bitcast %"struct.adept::internal::Scalar.84"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %8) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal8Multiply10calc_rightILi0ELi1ELi0ELi2ENS0_6ScalarIiEENS_6ActiveIdEEdEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_(%"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::Scalar.84"* nonnull align 4 dereferenceable(4) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch, double %multiplier) #0 comdat align 2 {
entry:
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::Scalar.84"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  %multiplier.addr = alloca double, align 8
  %ref.tmp = alloca double, align 8
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::Scalar.84"* %left, %"struct.adept::internal::Scalar.84"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %4 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = load double, double* %multiplier.addr, align 8, !tbaa !44
  %6 = load %"struct.adept::internal::Scalar.84"*, %"struct.adept::internal::Scalar.84"** %left.addr, align 8, !tbaa !2
  %7 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %8 = load %"class.adept::internal::ScratchVector.73"*, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %call = call i32 @_ZNK5adept8internal6ScalarIiE13value_stored_ILi0ELi2ELi0ELi2EEEiRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Scalar.84"* nonnull dereferenceable(4) %6, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %7, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %8)
  %conv = sitofp i32 %call to double
  %mul = fmul fast double %5, %conv
  store double %mul, double* %ref.tmp, align 8, !tbaa !44
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi2ELi0ELi2EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %3, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %9 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal6ScalarIiEC2ERKi(%"struct.adept::internal::Scalar.84"* nonnull dereferenceable(4) %this, i32* nonnull align 4 dereferenceable(4) %value) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Scalar.84"*, align 8
  %value.addr = alloca i32*, align 8
  store %"struct.adept::internal::Scalar.84"* %this, %"struct.adept::internal::Scalar.84"** %this.addr, align 8, !tbaa !2
  store i32* %value, i32** %value.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Scalar.84"*, %"struct.adept::internal::Scalar.84"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::Scalar.84"* %this1 to %"struct.adept::Expression.85"*
  %val_ = getelementptr inbounds %"struct.adept::internal::Scalar.84", %"struct.adept::internal::Scalar.84"* %this1, i32 0, i32 0
  %1 = load i32*, i32** %value.addr, align 8, !tbaa !2
  %2 = load i32, i32* %1, align 4, !tbaa !20
  store i32 %2, i32* %val_, align 4, !tbaa !361
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept8internal6ScalarIiE13value_stored_ILi0ELi2ELi0ELi2EEEiRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Scalar.84"* nonnull dereferenceable(4) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.73"* nonnull align 8 dereferenceable(16) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Scalar.84"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.73"*, align 8
  store %"struct.adept::internal::Scalar.84"* %this, %"struct.adept::internal::Scalar.84"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.73"* %scratch, %"class.adept::internal::ScratchVector.73"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Scalar.84"*, %"struct.adept::internal::Scalar.84"** %this.addr, align 8
  %val_ = getelementptr inbounds %"struct.adept::internal::Scalar.84", %"struct.adept::internal::Scalar.84"* %this1, i32 0, i32 0
  %0 = load i32, i32* %val_, align 4, !tbaa !361
  ret i32 %0
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IiEERKT_PNS_8internal9enable_ifIXsr17is_not_expressionIS3_EE5valueEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, i32* nonnull align 4 dereferenceable(4) %rhs, i8* %dummy) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca i32*, align 8
  %dummy.addr = alloca i8*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store i32* %rhs, i32** %rhs.addr, align 8, !tbaa !2
  store i8* %dummy, i8** %dummy.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = bitcast %"class.adept::Active"* %this1 to %"struct.adept::Expression.40"*
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %1 = load i32*, i32** %rhs.addr, align 8, !tbaa !2
  %2 = load i32, i32* %1, align 4, !tbaa !20
  %conv = sitofp i32 %2 to double
  store double %conv, double* %val_, align 8, !tbaa !226
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call i32 @_ZN5adept5Stack17register_gradientEv(%"class.adept::Stack"* nonnull dereferenceable(149) %3)
  store i32 %call, i32* %gradient_index_, align 8, !tbaa !228
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %5 = bitcast %"class.adept::Stack"* %4 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_2 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %5, i32* nonnull align 4 dereferenceable(4) %gradient_index_2)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdNS_8internal15BinaryOperationIdS1_NS3_3AddES1_EEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.52"* nonnull align 1 dereferenceable(1) %rhs, i8* %dummy) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.52"*, align 8
  %dummy.addr = alloca i8*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.52"* %rhs, %"struct.adept::Expression.52"** %rhs.addr, align 8, !tbaa !2
  store i8* %dummy, i8** %dummy.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = bitcast %"class.adept::Active"* %this1 to %"struct.adept::Expression.40"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call i32 @_ZN5adept5Stack17register_gradientEv(%"class.adept::Stack"* nonnull dereferenceable(149) %1)
  store i32 %call, i32* %gradient_index_, align 8, !tbaa !228
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %3 = bitcast %"class.adept::Stack"* %2 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi2EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %3)
  %4 = load %"struct.adept::Expression.52"*, %"struct.adept::Expression.52"** %rhs.addr, align 8, !tbaa !2
  %5 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call2 = call fast double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddES4_EEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.52"* nonnull dereferenceable(1) %4, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %5)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call2, double* %val_, align 8, !tbaa !226
  %6 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %7 = bitcast %"class.adept::Stack"* %6 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_3 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %7, i32* nonnull align 4 dereferenceable(4) %gradient_index_3)
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adeptmiINS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS6_IdiS7_S4_EEEENS1_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS2_INS1_7promoteINSC_4typeENSD_4typeEE4typeESC_NS1_8SubtractESD_EEE4typeERKNS_10ExpressionISF_SC_EERKNSN_ISG_SD_EE(%"struct.adept::internal::BinaryOperation.86"* noalias sret(%"struct.adept::internal::BinaryOperation.86") align 8 %agg.result, %"struct.adept::Expression.89"* nonnull align 1 dereferenceable(1) %l, %"struct.adept::Expression.60"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %l.addr = alloca %"struct.adept::Expression.89"*, align 8
  %r.addr = alloca %"struct.adept::Expression.60"*, align 8
  store %"struct.adept::Expression.89"* %l, %"struct.adept::Expression.89"** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.60"* %r, %"struct.adept::Expression.60"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.89"*, %"struct.adept::Expression.89"** %l.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.88"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEEE4castEv(%"struct.adept::Expression.89"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"struct.adept::internal::BinaryOperation.88"* %call to %"struct.adept::Expression.89"*
  %2 = load %"struct.adept::Expression.60"*, %"struct.adept::Expression.60"** %r.addr, align 8, !tbaa !2
  %call1 = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOpScalarLeft.59"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIdiNS1_8MultiplyENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.60"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %call1 to %"struct.adept::Expression.60"*
  call void @_ZN5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEEC2ERKNS_10ExpressionIdS8_EERKNSC_IdSA_EE(%"struct.adept::internal::BinaryOperation.86"* nonnull dereferenceable(24) %agg.result, %"struct.adept::Expression.89"* nonnull align 1 dereferenceable(1) %1, %"struct.adept::Expression.60"* nonnull align 1 dereferenceable(1) %3)
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* } @_ZN5adeptplINS_6ActiveIdEENS_8internal18BinaryOpScalarLeftIddNS3_8MultiplyES2_EEEENS3_9enable_ifIXsr8internal15rank_compatibleIXsrT_4rankEXsrT0_4rankEEE5valueENS3_15BinaryOperationINS3_7promoteINS8_4typeENS9_4typeEE4typeES8_NS3_3AddES9_EEE4typeERKNS_10ExpressionISC_S8_EERKNSK_ISD_S9_EE(%"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %l, %"struct.adept::Expression.53"* nonnull align 1 dereferenceable(1) %r) #5 comdat {
entry:
  %retval = alloca %"struct.adept::internal::BinaryOperation.88", align 8
  %l.addr = alloca %"struct.adept::Expression.40"*, align 8
  %r.addr = alloca %"struct.adept::Expression.53"*, align 8
  store %"struct.adept::Expression.40"* %l, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.53"* %r, %"struct.adept::Expression.53"** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  %2 = load %"struct.adept::Expression.53"*, %"struct.adept::Expression.53"** %r.addr, align 8, !tbaa !2
  %call1 = call nonnull align 16 dereferenceable(24) %"struct.adept::internal::BinaryOpScalarLeft"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8MultiplyENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.53"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %call1 to %"struct.adept::Expression.53"*
  call void @_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEC2ERKNS_10ExpressionIdS3_EERKNS9_IdS7_EE(%"struct.adept::internal::BinaryOperation.88"* nonnull dereferenceable(16) %retval, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %1, %"struct.adept::Expression.53"* nonnull align 1 dereferenceable(1) %3)
  %4 = bitcast %"struct.adept::internal::BinaryOperation.88"* %retval to { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* }*
  %5 = load { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* }, { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* }* %4, align 8
  ret { %"class.adept::Active"*, %"struct.adept::internal::BinaryOpScalarLeft"* } %5
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZN5adept6ActiveIdEaSIdNS_8internal15BinaryOperationIdNS4_IdS1_NS3_3AddENS3_18BinaryOpScalarLeftIddNS3_8MultiplyES1_EEEENS3_8SubtractENS6_IdiS7_S1_EEEEEENS3_9enable_ifIXaasrT0_9is_activeeqsrSE_4rankLi0EERS1_E4typeERKNS_10ExpressionIT_SE_EE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.87"* nonnull align 1 dereferenceable(1) %rhs) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.87"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.87"* %rhs, %"struct.adept::Expression.87"** %rhs.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi3EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1)
  %2 = load %"struct.adept::Expression.87"*, %"struct.adept::Expression.87"** %rhs.addr, align 8, !tbaa !2
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS1_8SubtractENS6_IdiS7_S4_EEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.87"* nonnull dereferenceable(1) %2, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call, double* %val_, align 8, !tbaa !226
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %5 = bitcast %"class.adept::Stack"* %4 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %5, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret %"class.adept::Active"* %this1
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adeptmiINS_6ActiveIdEEdEENS_8internal9enable_ifIXsr8internal17is_not_expressionIT0_EE5valueENS3_19BinaryOpScalarRightINS3_7promoteINT_4typeES5_E4typeES8_NS3_8SubtractES5_EEE4typeERKNS_10ExpressionIS9_S8_EERKS5_(%"struct.adept::internal::BinaryOpScalarRight"* noalias sret(%"struct.adept::internal::BinaryOpScalarRight") align 16 %agg.result, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %l, double* nonnull align 8 dereferenceable(8) %r) #5 comdat {
entry:
  %l.addr = alloca %"struct.adept::Expression.40"*, align 8
  %r.addr = alloca double*, align 8
  store %"struct.adept::Expression.40"* %l, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  store double* %r, double** %r.addr, align 8, !tbaa !2
  %0 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %l.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %0)
  %1 = bitcast %"class.adept::Active"* %call to %"struct.adept::Expression.40"*
  %2 = load double*, double** %r.addr, align 8, !tbaa !2
  %3 = load double, double* %2, align 8, !tbaa !44
  call void @_ZN5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdEC2ERKNS_10ExpressionIdS3_EEd(%"struct.adept::internal::BinaryOpScalarRight"* nonnull dereferenceable(32) %agg.result, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %1, double %3)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept6ActiveIdEC2IdNS_8internal19BinaryOpScalarRightIdS1_NS3_8SubtractEdEEEERKNS_10ExpressionIT_T0_EEPNS3_9enable_ifIXaaeqsrS9_4rankLi0EsrS9_9is_activeEvE4typeE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"struct.adept::Expression.90"* nonnull align 1 dereferenceable(1) %rhs, i8* %dummy) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %rhs.addr = alloca %"struct.adept::Expression.90"*, align 8
  %dummy.addr = alloca i8*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.90"* %rhs, %"struct.adept::Expression.90"** %rhs.addr, align 8, !tbaa !2
  store i8* %dummy, i8** %dummy.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = bitcast %"class.adept::Active"* %this1 to %"struct.adept::Expression.40"*
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call = call i32 @_ZN5adept5Stack17register_gradientEv(%"class.adept::Stack"* nonnull dereferenceable(149) %1)
  store i32 %call, i32* %gradient_index_, align 8, !tbaa !228
  %2 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %3 = bitcast %"class.adept::Stack"* %2 to %"class.adept::internal::StackStorageOrig"*
  call void @_ZN5adept8internal16StackStorageOrig18check_space_staticILi1EEEvv(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %3)
  %4 = load %"struct.adept::Expression.90"*, %"struct.adept::Expression.90"** %rhs.addr, align 8, !tbaa !2
  %5 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %call2 = call fast double @_ZNK5adept10ExpressionIdNS_8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS1_8SubtractEdEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.90"* nonnull dereferenceable(1) %4, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %5)
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  store double %call2, double* %val_, align 8, !tbaa !226
  %6 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %7 = bitcast %"class.adept::Stack"* %6 to %"class.adept::internal::StackStorageOrig"*
  %gradient_index_3 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_lhsERKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %7, i32* nonnull align 4 dereferenceable(4) %gradient_index_3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.88"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEEE4castEv(%"struct.adept::Expression.89"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.89"*, align 8
  store %"struct.adept::Expression.89"* %this, %"struct.adept::Expression.89"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.89"*, %"struct.adept::Expression.89"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.89"* %this1 to %"struct.adept::internal::BinaryOperation.88"*
  ret %"struct.adept::internal::BinaryOperation.88"* %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEEC2ERKNS_10ExpressionIdS8_EERKNSC_IdSA_EE(%"struct.adept::internal::BinaryOperation.86"* nonnull dereferenceable(24) %this, %"struct.adept::Expression.89"* nonnull align 1 dereferenceable(1) %left_, %"struct.adept::Expression.60"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.86"*, align 8
  %left_.addr = alloca %"struct.adept::Expression.89"*, align 8
  %right_.addr = alloca %"struct.adept::Expression.60"*, align 8
  store %"struct.adept::internal::BinaryOperation.86"* %this, %"struct.adept::internal::BinaryOperation.86"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.89"* %left_, %"struct.adept::Expression.89"** %left_.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.60"* %right_, %"struct.adept::Expression.60"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.86"*, %"struct.adept::internal::BinaryOperation.86"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.86"* %this1 to %"struct.adept::Expression.87"*
  %1 = bitcast %"struct.adept::internal::BinaryOperation.86"* %this1 to %"struct.adept::internal::Subtract"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.86", %"struct.adept::internal::BinaryOperation.86"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.89"*, %"struct.adept::Expression.89"** %left_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOperation.88"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEEE4castEv(%"struct.adept::Expression.89"* nonnull dereferenceable(1) %2)
  %3 = bitcast %"struct.adept::internal::BinaryOperation.88"* %left to i8*
  %4 = bitcast %"struct.adept::internal::BinaryOperation.88"* %call to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.86", %"struct.adept::internal::BinaryOperation.86"* %this1, i32 0, i32 1
  %5 = load %"struct.adept::Expression.60"*, %"struct.adept::Expression.60"** %right_.addr, align 8, !tbaa !2
  %call2 = call nonnull align 8 dereferenceable(16) %"struct.adept::internal::BinaryOpScalarLeft.59"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIdiNS1_8MultiplyENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.60"* nonnull dereferenceable(1) %5)
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %call2, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right, align 8, !tbaa !2
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEC2ERKNS_10ExpressionIdS3_EERKNS9_IdS7_EE(%"struct.adept::internal::BinaryOperation.88"* nonnull dereferenceable(16) %this, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %left_, %"struct.adept::Expression.53"* nonnull align 1 dereferenceable(1) %right_) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.88"*, align 8
  %left_.addr = alloca %"struct.adept::Expression.40"*, align 8
  %right_.addr = alloca %"struct.adept::Expression.53"*, align 8
  store %"struct.adept::internal::BinaryOperation.88"* %this, %"struct.adept::internal::BinaryOperation.88"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %left_, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.53"* %right_, %"struct.adept::Expression.53"** %right_.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.88"*, %"struct.adept::internal::BinaryOperation.88"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.88"* %this1 to %"struct.adept::Expression.89"*
  %1 = bitcast %"struct.adept::internal::BinaryOperation.88"* %this1 to %"struct.adept::internal::Add"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.88", %"struct.adept::internal::BinaryOperation.88"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %left, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.88", %"struct.adept::internal::BinaryOperation.88"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::Expression.53"*, %"struct.adept::Expression.53"** %right_.addr, align 8, !tbaa !2
  %call2 = call nonnull align 16 dereferenceable(24) %"struct.adept::internal::BinaryOpScalarLeft"* @_ZNK5adept10ExpressionIdNS_8internal18BinaryOpScalarLeftIddNS1_8MultiplyENS_6ActiveIdEEEEE4castEv(%"struct.adept::Expression.53"* nonnull dereferenceable(1) %3)
  store %"struct.adept::internal::BinaryOpScalarLeft"* %call2, %"struct.adept::internal::BinaryOpScalarLeft"** %right, align 8, !tbaa !2
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS1_8SubtractENS6_IdiS7_S4_EEEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.87"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.87"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %scratch = alloca %"class.adept::internal::ScratchVector.91", align 8
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  %val = alloca double, align 8
  store %"struct.adept::Expression.87"* %this, %"struct.adept::Expression.87"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.87"*, %"struct.adept::Expression.87"** %this.addr, align 8
  %0 = bitcast %"class.adept::internal::ScratchVector.91"* %scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %0) #9
  call void @_ZN5adept8internal13ScratchVectorILi3EdEC2Ev(%"class.adept::internal::ScratchVector.91"* nonnull dereferenceable(24) %scratch)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %2 = bitcast double* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call = call nonnull align 8 dereferenceable(24) %"struct.adept::internal::BinaryOperation.86"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS1_8SubtractENS6_IdiS7_S4_EEEEE4castEv(%"struct.adept::Expression.87"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE24value_at_location_store_ILi0ELi0ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.86"* nonnull dereferenceable(24) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch)
  store double %call2, double* %val, align 8, !tbaa !44
  %call3 = call nonnull align 8 dereferenceable(24) %"struct.adept::internal::BinaryOperation.86"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS1_8SubtractENS6_IdiS7_S4_EEEEE4castEv(%"struct.adept::Expression.87"* nonnull dereferenceable(1) %this1)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE14calc_gradient_ILi0ELi0ELi0ELi3EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.86"* nonnull dereferenceable(24) %call3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch)
  %4 = load double, double* %val, align 8, !tbaa !44
  %5 = bitcast double* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  %7 = bitcast %"class.adept::internal::ScratchVector.91"* %scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %7) #9
  ret double %4
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept8internal13ScratchVectorILi3EdEC2Ev(%"class.adept::internal::ScratchVector.91"* nonnull dereferenceable(24) %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"class.adept::internal::ScratchVector.91"* %this, %"class.adept::internal::ScratchVector.91"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %this.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(24) %"struct.adept::internal::BinaryOperation.86"* @_ZNK5adept10ExpressionIdNS_8internal15BinaryOperationIdNS2_IdNS_6ActiveIdEENS1_3AddENS1_18BinaryOpScalarLeftIddNS1_8MultiplyES4_EEEENS1_8SubtractENS6_IdiS7_S4_EEEEE4castEv(%"struct.adept::Expression.87"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.87"*, align 8
  store %"struct.adept::Expression.87"* %this, %"struct.adept::Expression.87"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.87"*, %"struct.adept::Expression.87"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.87"* %this1 to %"struct.adept::internal::BinaryOperation.86"*
  ret %"struct.adept::internal::BinaryOperation.86"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE24value_at_location_store_ILi0ELi0ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.86"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.86"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::BinaryOperation.86"* %this, %"struct.adept::internal::BinaryOperation.86"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.86"*, %"struct.adept::internal::BinaryOperation.86"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi3EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.86"* nonnull dereferenceable(24) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE14calc_gradient_ILi0ELi0ELi0ELi3EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.86"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.86"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::BinaryOperation.86"* %this, %"struct.adept::internal::BinaryOperation.86"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.86"*, %"struct.adept::internal::BinaryOperation.86"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.86", %"struct.adept::internal::BinaryOperation.86"* %this1, i32 0, i32 0
  %1 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %2 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE10calc_left_ILi0ELi0ELi0ELi3ES8_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSE_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.86"* nonnull dereferenceable(24) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"struct.adept::internal::BinaryOperation.88"* nonnull align 8 dereferenceable(16) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %1, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %2)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.86", %"struct.adept::internal::BinaryOperation.86"* %this1, i32 0, i32 1
  %4 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right, align 8, !tbaa !363
  %5 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %6 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE11calc_right_ILi0ELi0ELi0ELi3ESA_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSE_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.86"* nonnull dereferenceable(24) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull align 8 dereferenceable(16) %4, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %5, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %6)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi3EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.86"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.86"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.86"* %this, %"struct.adept::internal::BinaryOperation.86"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.86"*, %"struct.adept::internal::BinaryOperation.86"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.86"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.86", %"struct.adept::internal::BinaryOperation.86"* %this1, i32 0, i32 0
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE24value_at_location_store_ILi0ELi1ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.88"* nonnull dereferenceable(16) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %3)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %4 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.86", %"struct.adept::internal::BinaryOperation.86"* %this1, i32 0, i32 1
  %5 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right, align 8, !tbaa !363
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE24value_at_location_store_ILi0ELi2ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %5, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %7)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal8Subtract9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %8 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call5 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi3EdEixEi(%"class.adept::internal::ScratchVector.91"* nonnull dereferenceable(24) %8, i32 0)
  store double %call4, double* %call5, align 8, !tbaa !44
  %9 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  %10 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9
  ret double %call4
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE24value_at_location_store_ILi0ELi1ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.88"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.88"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::BinaryOperation.88"* %this, %"struct.adept::internal::BinaryOperation.88"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.88"*, %"struct.adept::internal::BinaryOperation.88"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE27my_value_at_location_store_ILi0ELi0ELi1ELi0ELi3EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.88"* nonnull dereferenceable(16) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE24value_at_location_store_ILi0ELi2ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %this, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi2ELi0ELi3EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %1)
  ret double %call
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi3EdEixEi(%"class.adept::internal::ScratchVector.91"* nonnull dereferenceable(24) %this, i32 %i) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %i.addr = alloca i32, align 4
  store %"class.adept::internal::ScratchVector.91"* %this, %"class.adept::internal::ScratchVector.91"** %this.addr, align 8, !tbaa !2
  store i32 %i, i32* %i.addr, align 4, !tbaa !20
  %this1 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %this.addr, align 8
  %val = getelementptr inbounds %"class.adept::internal::ScratchVector.91", %"class.adept::internal::ScratchVector.91"* %this1, i32 0, i32 0
  %0 = load i32, i32* %i.addr, align 4, !tbaa !20
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [3 x double], [3 x double]* %val, i64 0, i64 %idxprom
  ret double* %arrayidx
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE27my_value_at_location_store_ILi0ELi0ELi1ELi0ELi3EEENS0_9enable_ifIXeqT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOperation.88"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.88"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOperation.88"* %this, %"struct.adept::internal::BinaryOperation.88"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.88"*, %"struct.adept::internal::BinaryOperation.88"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.88"* %this1 to %"struct.adept::internal::Add"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.88", %"struct.adept::internal::BinaryOperation.88"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !366
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %4)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %5 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.88", %"struct.adept::internal::BinaryOperation.88"* %this1, i32 0, i32 1
  %6 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %right, align 8, !tbaa !367
  %7 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %8 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE24value_at_location_store_ILi0ELi1ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %6, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %7, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %8)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal3Add9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %9 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  %10 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #9
  ret double %call4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !226
  ret double %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE24value_at_location_store_ILi0ELi1ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft"* %this, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi1ELi0ELi3EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi1ELi0ELi3EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft"* %this, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarLeft"* %this1 to %"struct.adept::internal::Multiply"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft", %"struct.adept::internal::BinaryOpScalarLeft"* %this1, i32 0, i32 0
  %call = call fast double @_ZNK5adept8internal6PacketIdE5valueEv(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %left)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %2 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft", %"struct.adept::internal::BinaryOpScalarLeft"* %this1, i32 0, i32 1
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 16, !tbaa !339
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi2ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %5)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal8Multiply9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Multiply"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %6 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call5 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi3EdEixEi(%"class.adept::internal::ScratchVector.91"* nonnull dereferenceable(24) %6, i32 1)
  store double %call4, double* %call5, align 8, !tbaa !44
  %7 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  %8 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  ret double %call4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi2ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !226
  ret double %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE27my_value_at_location_store_ILi1ELi0ELi2ELi0ELi3EEENS0_9enable_ifIXeqT_Li1EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %ref.tmp = alloca i32, align 4
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %this, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1 to %"struct.adept::internal::Multiply"*
  %1 = bitcast i32* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1, i32 0, i32 0
  %call = call i32 @_ZNK5adept8internal6PacketIiE5valueEv(%"struct.adept::internal::Packet.61"* nonnull dereferenceable(4) %left)
  store i32 %call, i32* %ref.tmp, align 4, !tbaa !20
  %2 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1, i32 0, i32 1
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !359
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call3 = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi3ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %5)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal8Multiply9operationIidEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Multiply"* nonnull dereferenceable(1) %0, i32* nonnull align 4 dereferenceable(4) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %6 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call5 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi3EdEixEi(%"class.adept::internal::ScratchVector.91"* nonnull dereferenceable(24) %6, i32 2)
  store double %call4, double* %call5, align 8, !tbaa !44
  %7 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  %8 = bitcast i32* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %8) #9
  ret double %call4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi3ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %val_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !226
  ret double %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE10calc_left_ILi0ELi0ELi0ELi3ES8_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSE_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.86"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOperation.88"* nonnull align 8 dereferenceable(16) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.86"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::BinaryOperation.88"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::BinaryOperation.86"* %this, %"struct.adept::internal::BinaryOperation.86"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOperation.88"* %left, %"struct.adept::internal::BinaryOperation.88"** %left.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.86"*, %"struct.adept::internal::BinaryOperation.86"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.86"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"struct.adept::internal::BinaryOperation.88"*, %"struct.adept::internal::BinaryOperation.88"** %left.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.86", %"struct.adept::internal::BinaryOperation.86"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right, align 8, !tbaa !363
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal8Subtract9calc_leftILi0ELi0ELi0ELi3ENS0_15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES5_EEEENS7_IdiS8_S5_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"struct.adept::internal::BinaryOperation.88"* nonnull align 8 dereferenceable(16) %2, %"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull align 8 dereferenceable(16) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEE11calc_right_ILi0ELi0ELi0ELi3ESA_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSE_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.86"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.86"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::BinaryOperation.86"* %this, %"struct.adept::internal::BinaryOperation.86"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %right, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.86"*, %"struct.adept::internal::BinaryOperation.86"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.86"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.86", %"struct.adept::internal::BinaryOperation.86"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right.addr, align 8, !tbaa !2
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal8Subtract10calc_rightILi0ELi0ELi0ELi3ENS0_15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES5_EEEENS7_IdiS8_S5_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"struct.adept::internal::BinaryOperation.88"* nonnull align 8 dereferenceable(16) %left, %"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull align 8 dereferenceable(16) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %4)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal8Subtract9calc_leftILi0ELi0ELi0ELi3ENS0_15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES5_EEEENS7_IdiS8_S5_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOperation.88"* nonnull align 8 dereferenceable(16) %left, %"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Subtract"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::BinaryOperation.88"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::Subtract"* %this, %"struct.adept::internal::Subtract"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOperation.88"* %left, %"struct.adept::internal::BinaryOperation.88"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %right, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Subtract"*, %"struct.adept::internal::Subtract"** %this.addr, align 8
  %0 = load %"struct.adept::internal::BinaryOperation.88"*, %"struct.adept::internal::BinaryOperation.88"** %left.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE14calc_gradient_ILi0ELi1ELi0ELi3EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.88"* nonnull dereferenceable(16) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE14calc_gradient_ILi0ELi1ELi0ELi3EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.88"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.88"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::BinaryOperation.88"* %this, %"struct.adept::internal::BinaryOperation.88"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.88"*, %"struct.adept::internal::BinaryOperation.88"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.88", %"struct.adept::internal::BinaryOperation.88"* %this1, i32 0, i32 0
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !366
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE10calc_left_ILi0ELi1ELi0ELi3ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSB_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.88"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %3)
  %4 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.88", %"struct.adept::internal::BinaryOperation.88"* %this1, i32 0, i32 1
  %5 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %right, align 8, !tbaa !367
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE11calc_right_ILi0ELi1ELi0ELi3ES7_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSB_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.88"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %4, %"struct.adept::internal::BinaryOpScalarLeft"* nonnull align 16 dereferenceable(24) %5, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %7)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE10calc_left_ILi0ELi1ELi0ELi3ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSB_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.88"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.88"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::BinaryOperation.88"* %this, %"struct.adept::internal::BinaryOperation.88"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.88"*, %"struct.adept::internal::BinaryOperation.88"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.88"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOperation.88", %"struct.adept::internal::BinaryOperation.88"* %this1, i32 0, i32 1
  %3 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %right, align 8, !tbaa !367
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add9calc_leftILi0ELi1ELi0ELi3ENS_6ActiveIdEENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES4_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"struct.adept::internal::BinaryOpScalarLeft"* nonnull align 16 dereferenceable(24) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEE11calc_right_ILi0ELi1ELi0ELi3ES7_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKSB_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOperation.88"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOpScalarLeft"* nonnull align 16 dereferenceable(24) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOperation.88"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::BinaryOperation.88"* %this, %"struct.adept::internal::BinaryOperation.88"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft"* %right, %"struct.adept::internal::BinaryOpScalarLeft"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOperation.88"*, %"struct.adept::internal::BinaryOperation.88"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOperation.88"* %this1 to %"struct.adept::internal::Add"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOperation.88", %"struct.adept::internal::BinaryOperation.88"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 8, !tbaa !366
  %3 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %right.addr, align 8, !tbaa !2
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal3Add10calc_rightILi0ELi1ELi0ELi3ENS_6ActiveIdEENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES4_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"struct.adept::internal::BinaryOpScalarLeft"* nonnull align 16 dereferenceable(24) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %5)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add9calc_leftILi0ELi1ELi0ELi3ENS_6ActiveIdEENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES4_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"struct.adept::internal::BinaryOpScalarLeft"* nonnull align 16 dereferenceable(24) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft"* %right, %"struct.adept::internal::BinaryOpScalarLeft"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi3EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi3EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %ref.tmp = alloca double, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  %2 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  store double 1.000000e+00, double* %ref.tmp, align 8, !tbaa !44
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_rhsERKdRKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, double* nonnull align 8 dereferenceable(8) %ref.tmp, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  %3 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal3Add10calc_rightILi0ELi1ELi0ELi3ENS_6ActiveIdEENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES4_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Add"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"struct.adept::internal::BinaryOpScalarLeft"* nonnull align 16 dereferenceable(24) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Add"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::Add"* %this, %"struct.adept::internal::Add"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft"* %right, %"struct.adept::internal::BinaryOpScalarLeft"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Add"*, %"struct.adept::internal::Add"** %this.addr, align 8
  %0 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE14calc_gradient_ILi0ELi1ELi0ELi3EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE14calc_gradient_ILi0ELi1ELi0ELi3EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft"* %this, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft", %"struct.adept::internal::BinaryOpScalarLeft"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 16, !tbaa !339
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE11calc_right_ILi0ELi1ELi0ELi3ES4_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEE11calc_right_ILi0ELi1ELi0ELi3ES4_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarLeft"* nonnull dereferenceable(24) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %ref.tmp = alloca %"struct.adept::internal::Scalar", align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft"* %this, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft"*, %"struct.adept::internal::BinaryOpScalarLeft"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"struct.adept::internal::Scalar"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %2 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft", %"struct.adept::internal::BinaryOpScalarLeft"* %this1, i32 0, i32 0
  %call = call fast double @_ZNK5adept8internal6PacketIdE5valueEv(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %left)
  store double %call, double* %ref.tmp2, align 8, !tbaa !44
  call void @_ZN5adept8internal6ScalarIdEC2ERKd(%"struct.adept::internal::Scalar"* nonnull dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZN5adept8internal8Multiply10calc_rightILi0ELi1ELi0ELi3ENS0_6ScalarIdEENS_6ActiveIdEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"struct.adept::internal::Scalar"* nonnull align 8 dereferenceable(8) %ref.tmp, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %5)
  %6 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #9
  %7 = bitcast %"struct.adept::internal::Scalar"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal8Multiply10calc_rightILi0ELi1ELi0ELi3ENS0_6ScalarIdEENS_6ActiveIdEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::Scalar"* nonnull align 8 dereferenceable(8) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::Scalar"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %ref.tmp = alloca double, align 8
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::Scalar"* %left, %"struct.adept::internal::Scalar"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %4 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = load %"struct.adept::internal::Scalar"*, %"struct.adept::internal::Scalar"** %left.addr, align 8, !tbaa !2
  %6 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %7 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal6ScalarIdE13value_stored_ILi0ELi2ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Scalar"* nonnull dereferenceable(8) %5, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %6, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %7)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi2ELi0ELi3EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %3, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %8 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi2ELi0ELi3EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch, double* nonnull align 8 dereferenceable(8) %multiplier) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %multiplier.addr = alloca double*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  store double* %multiplier, double** %multiplier.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  %2 = load double*, double** %multiplier.addr, align 8, !tbaa !2
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_rhsERKdRKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, double* nonnull align 8 dereferenceable(8) %2, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal6ScalarIdE13value_stored_ILi0ELi2ELi0ELi3EEEdRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Scalar"* nonnull dereferenceable(8) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Scalar"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::Scalar"* %this, %"struct.adept::internal::Scalar"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Scalar"*, %"struct.adept::internal::Scalar"** %this.addr, align 8
  %val_ = getelementptr inbounds %"struct.adept::internal::Scalar", %"struct.adept::internal::Scalar"* %this1, i32 0, i32 0
  %0 = load double, double* %val_, align 8, !tbaa !327
  ret double %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal8Subtract10calc_rightILi0ELi0ELi0ELi3ENS0_15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES5_EEEENS7_IdiS8_S5_EEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::BinaryOperation.88"* nonnull align 8 dereferenceable(16) %left, %"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull align 8 dereferenceable(16) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Subtract"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::BinaryOperation.88"*, align 8
  %right.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::Subtract"* %this, %"struct.adept::internal::Subtract"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOperation.88"* %left, %"struct.adept::internal::BinaryOperation.88"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %right, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Subtract"*, %"struct.adept::internal::Subtract"** %this.addr, align 8
  %0 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE14calc_gradient_ILi0ELi2ELi0ELi3EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET3_(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %3, double -1.000000e+00)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE14calc_gradient_ILi0ELi2ELi0ELi3EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET3_(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch, double %multiplier) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %multiplier.addr = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %this, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1, i32 0, i32 1
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %right, align 8, !tbaa !359
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %4 = load double, double* %multiplier.addr, align 8, !tbaa !44
  call void @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE11calc_right_ILi0ELi2ELi0ELi3ES4_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %3, double %4)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEE11calc_right_ILi0ELi2ELi0ELi3ES4_dEENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET4_(%"struct.adept::internal::BinaryOpScalarLeft.59"* nonnull dereferenceable(16) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch, double %multiplier) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarLeft.59"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %multiplier.addr = alloca double, align 8
  %ref.tmp = alloca %"struct.adept::internal::Scalar.84", align 4
  %ref.tmp2 = alloca i32, align 4
  store %"struct.adept::internal::BinaryOpScalarLeft.59"* %this, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::BinaryOpScalarLeft.59"*, %"struct.adept::internal::BinaryOpScalarLeft.59"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"struct.adept::internal::Scalar.84"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #9
  %2 = bitcast i32* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarLeft.59", %"struct.adept::internal::BinaryOpScalarLeft.59"* %this1, i32 0, i32 0
  %call = call i32 @_ZNK5adept8internal6PacketIiE5valueEv(%"struct.adept::internal::Packet.61"* nonnull dereferenceable(4) %left)
  store i32 %call, i32* %ref.tmp2, align 4, !tbaa !20
  call void @_ZN5adept8internal6ScalarIiEC2ERKi(%"struct.adept::internal::Scalar.84"* nonnull dereferenceable(4) %ref.tmp, i32* nonnull align 4 dereferenceable(4) %ref.tmp2)
  %3 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %4 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %5 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %6 = load double, double* %multiplier.addr, align 8, !tbaa !44
  call void @_ZN5adept8internal8Multiply10calc_rightILi0ELi2ELi0ELi3ENS0_6ScalarIiEENS_6ActiveIdEEdEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_(%"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"struct.adept::internal::Scalar.84"* nonnull align 4 dereferenceable(4) %ref.tmp, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %4, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %5, double %6)
  %7 = bitcast i32* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %7) #9
  %8 = bitcast %"struct.adept::internal::Scalar.84"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %8) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept8internal8Multiply10calc_rightILi0ELi2ELi0ELi3ENS0_6ScalarIiEENS_6ActiveIdEEdEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEET5_(%"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"struct.adept::internal::Scalar.84"* nonnull align 4 dereferenceable(4) %left, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch, double %multiplier) #0 comdat align 2 {
entry:
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"struct.adept::internal::Scalar.84"*, align 8
  %right.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %multiplier.addr = alloca double, align 8
  %ref.tmp = alloca double, align 8
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"struct.adept::internal::Scalar.84"* %left, %"struct.adept::internal::Scalar.84"** %left.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %right, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  store double %multiplier, double* %multiplier.addr, align 8, !tbaa !44
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %right.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %4 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %5 = load double, double* %multiplier.addr, align 8, !tbaa !44
  %6 = load %"struct.adept::internal::Scalar.84"*, %"struct.adept::internal::Scalar.84"** %left.addr, align 8, !tbaa !2
  %7 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %8 = load %"class.adept::internal::ScratchVector.91"*, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %call = call i32 @_ZNK5adept8internal6ScalarIiE13value_stored_ILi0ELi3ELi0ELi3EEEiRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Scalar.84"* nonnull dereferenceable(4) %6, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %7, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %8)
  %conv = sitofp i32 %call to double
  %mul = fmul fast double %5, %conv
  store double %mul, double* %ref.tmp, align 8, !tbaa !44
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi3ELi0ELi3EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %3, double* nonnull align 8 dereferenceable(8) %ref.tmp)
  %9 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi3ELi0ELi3EdEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEERKT3_(%"class.adept::Active"* nonnull dereferenceable(12) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch, double* nonnull align 8 dereferenceable(8) %multiplier) #8 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  %multiplier.addr = alloca double*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  store double* %multiplier, double** %multiplier.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %1 = bitcast %"class.adept::Stack"* %0 to %"class.adept::internal::StackStorageOrig"*
  %2 = load double*, double** %multiplier.addr, align 8, !tbaa !2
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  call void @_ZN5adept8internal16StackStorageOrig8push_rhsERKdRKi(%"class.adept::internal::StackStorageOrig"* nonnull dereferenceable(40) %1, double* nonnull align 8 dereferenceable(8) %2, i32* nonnull align 4 dereferenceable(4) %gradient_index_)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local i32 @_ZNK5adept8internal6ScalarIiE13value_stored_ILi0ELi3ELi0ELi3EEEiRKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Scalar.84"* nonnull dereferenceable(4) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.91"* nonnull align 8 dereferenceable(24) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Scalar.84"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.91"*, align 8
  store %"struct.adept::internal::Scalar.84"* %this, %"struct.adept::internal::Scalar.84"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.91"* %scratch, %"class.adept::internal::ScratchVector.91"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Scalar.84"*, %"struct.adept::internal::Scalar.84"** %this.addr, align 8
  %val_ = getelementptr inbounds %"struct.adept::internal::Scalar.84", %"struct.adept::internal::Scalar.84"* %this1, i32 0, i32 0
  %0 = load i32, i32* %val_, align 4, !tbaa !361
  ret i32 %0
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdEC2ERKNS_10ExpressionIdS3_EEd(%"struct.adept::internal::BinaryOpScalarRight"* nonnull dereferenceable(32) %this, %"struct.adept::Expression.40"* nonnull align 1 dereferenceable(1) %left_, double %right_) unnamed_addr #7 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarRight"*, align 8
  %left_.addr = alloca %"struct.adept::Expression.40"*, align 8
  %right_.addr = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarRight"* %this, %"struct.adept::internal::BinaryOpScalarRight"** %this.addr, align 8, !tbaa !2
  store %"struct.adept::Expression.40"* %left_, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  store double %right_, double* %right_.addr, align 8, !tbaa !44
  %this1 = load %"struct.adept::internal::BinaryOpScalarRight"*, %"struct.adept::internal::BinaryOpScalarRight"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarRight"* %this1 to %"struct.adept::Expression.90"*
  %1 = bitcast %"struct.adept::internal::BinaryOpScalarRight"* %this1 to %"struct.adept::internal::Subtract"*
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarRight", %"struct.adept::internal::BinaryOpScalarRight"* %this1, i32 0, i32 0
  %2 = load %"struct.adept::Expression.40"*, %"struct.adept::Expression.40"** %left_.addr, align 8, !tbaa !2
  %call = call nonnull align 8 dereferenceable(12) %"class.adept::Active"* @_ZNK5adept10ExpressionIdNS_6ActiveIdEEE4castEv(%"struct.adept::Expression.40"* nonnull dereferenceable(1) %2)
  store %"class.adept::Active"* %call, %"class.adept::Active"** %left, align 16, !tbaa !2
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarRight", %"struct.adept::internal::BinaryOpScalarRight"* %this1, i32 0, i32 1
  %3 = load double, double* %right_.addr, align 8, !tbaa !44
  call void @_ZN5adept8internal6PacketIdEC2Ed(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %right, double %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept10ExpressionIdNS_8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS1_8SubtractEdEEE25scalar_value_and_gradientERNS_5StackE(%"struct.adept::Expression.90"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.90"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %scratch = alloca %"class.adept::internal::ScratchVector.64", align 8
  %dummy_index = alloca %"class.adept::ExpressionSize.63", align 1
  %val = alloca double, align 8
  store %"struct.adept::Expression.90"* %this, %"struct.adept::Expression.90"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.90"*, %"struct.adept::Expression.90"** %this.addr, align 8
  %0 = bitcast %"class.adept::internal::ScratchVector.64"* %scratch to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #9
  call void @_ZN5adept8internal13ScratchVectorILi1EdEC2Ev(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %scratch)
  %1 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %1) #9
  call void @_ZN5adept14ExpressionSizeILi0EEC2Ev(%"class.adept::ExpressionSize.63"* nonnull dereferenceable(1) %dummy_index)
  %2 = bitcast double* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #9
  %call = call nonnull align 16 dereferenceable(32) %"struct.adept::internal::BinaryOpScalarRight"* @_ZNK5adept10ExpressionIdNS_8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS1_8SubtractEdEEE4castEv(%"struct.adept::Expression.90"* nonnull dereferenceable(1) %this1)
  %call2 = call fast double @_ZNK5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarRight"* nonnull dereferenceable(32) %call, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch)
  store double %call2, double* %val, align 8, !tbaa !44
  %call3 = call nonnull align 16 dereferenceable(32) %"struct.adept::internal::BinaryOpScalarRight"* @_ZNK5adept10ExpressionIdNS_8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS1_8SubtractEdEEE4castEv(%"struct.adept::Expression.90"* nonnull dereferenceable(1) %this1)
  %3 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  call void @_ZNK5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarRight"* nonnull dereferenceable(32) %call3, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %3, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %dummy_index, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch)
  %4 = load double, double* %val, align 8, !tbaa !44
  %5 = bitcast double* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #9
  %6 = bitcast %"class.adept::ExpressionSize.63"* %dummy_index to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %6) #9
  %7 = bitcast %"class.adept::internal::ScratchVector.64"* %scratch to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  ret double %4
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local nonnull align 16 dereferenceable(32) %"struct.adept::internal::BinaryOpScalarRight"* @_ZNK5adept10ExpressionIdNS_8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS1_8SubtractEdEEE4castEv(%"struct.adept::Expression.90"* nonnull dereferenceable(1) %this) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::Expression.90"*, align 8
  store %"struct.adept::Expression.90"* %this, %"struct.adept::Expression.90"** %this.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::Expression.90"*, %"struct.adept::Expression.90"** %this.addr, align 8
  %0 = bitcast %"struct.adept::Expression.90"* %this1 to %"struct.adept::internal::BinaryOpScalarRight"*
  ret %"struct.adept::internal::BinaryOpScalarRight"* %0
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdE24value_at_location_store_ILi0ELi0ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarRight"* nonnull dereferenceable(32) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarRight"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOpScalarRight"* %this, %"struct.adept::internal::BinaryOpScalarRight"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarRight"*, %"struct.adept::internal::BinaryOpScalarRight"** %this.addr, align 8
  %0 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %1 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXgtT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarRight"* nonnull dereferenceable(32) %this1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %0, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %1)
  ret double %call
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdE14calc_gradient_ILi0ELi0ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarRight"* nonnull dereferenceable(32) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarRight"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::BinaryOpScalarRight"* %this, %"struct.adept::internal::BinaryOpScalarRight"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarRight"*, %"struct.adept::internal::BinaryOpScalarRight"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarRight", %"struct.adept::internal::BinaryOpScalarRight"* %this1, i32 0, i32 0
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 16, !tbaa !368
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdE10calc_left_ILi0ELi0ELi0ELi1ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarRight"* nonnull dereferenceable(32) %this1, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %0, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3)
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local double @_ZNK5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdE27my_value_at_location_store_ILi1ELi0ELi0ELi0ELi1EEENS0_9enable_ifIXgtT_Li0EEdE4typeERKNS_14ExpressionSizeIXT2_EEERNS0_13ScratchVectorIXT3_EdEE(%"struct.adept::internal::BinaryOpScalarRight"* nonnull dereferenceable(32) %this, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarRight"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca double, align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarRight"* %this, %"struct.adept::internal::BinaryOpScalarRight"** %this.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarRight"*, %"struct.adept::internal::BinaryOpScalarRight"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarRight"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #9
  %left = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarRight", %"struct.adept::internal::BinaryOpScalarRight"* %this1, i32 0, i32 0
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left, align 16, !tbaa !368
  %3 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %4 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call = call fast double @_ZNK5adept6ActiveIdE24value_at_location_store_ILi0ELi1ELi0ELi1EEEdRKNS_14ExpressionSizeIXT1_EEERNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %2, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %3, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %4)
  store double %call, double* %ref.tmp, align 8, !tbaa !44
  %5 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarRight", %"struct.adept::internal::BinaryOpScalarRight"* %this1, i32 0, i32 1
  %call3 = call fast double @_ZNK5adept8internal6PacketIdE5valueEv(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %right)
  store double %call3, double* %ref.tmp2, align 8, !tbaa !44
  %call4 = call fast double @_ZNK5adept8internal8Subtract9operationIddEENS0_7promoteIT_T0_E4typeERKS4_RKS5_(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, double* nonnull align 8 dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %6 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %call5 = call nonnull align 8 dereferenceable(8) double* @_ZN5adept8internal13ScratchVectorILi1EdEixEi(%"class.adept::internal::ScratchVector.64"* nonnull dereferenceable(8) %6, i32 0)
  store double %call4, double* %call5, align 8, !tbaa !44
  %7 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  %8 = bitcast double* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  ret double %call4
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdE10calc_left_ILi0ELi0ELi0ELi1ES3_EENS0_9enable_ifIXsrT3_9is_activeEvE4typeERNS_5StackERKS8_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::BinaryOpScalarRight"* nonnull dereferenceable(32) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #0 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::BinaryOpScalarRight"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  %ref.tmp = alloca %"struct.adept::internal::Scalar", align 8
  %ref.tmp2 = alloca double, align 8
  store %"struct.adept::internal::BinaryOpScalarRight"* %this, %"struct.adept::internal::BinaryOpScalarRight"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::BinaryOpScalarRight"*, %"struct.adept::internal::BinaryOpScalarRight"** %this.addr, align 8
  %0 = bitcast %"struct.adept::internal::BinaryOpScalarRight"* %this1 to %"struct.adept::internal::Subtract"*
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %3 = bitcast %"struct.adept::internal::Scalar"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #9
  %4 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #9
  %right = getelementptr inbounds %"struct.adept::internal::BinaryOpScalarRight", %"struct.adept::internal::BinaryOpScalarRight"* %this1, i32 0, i32 1
  %call = call fast double @_ZNK5adept8internal6PacketIdE5valueEv(%"struct.adept::internal::Packet"* nonnull dereferenceable(16) %right)
  store double %call, double* %ref.tmp2, align 8, !tbaa !44
  call void @_ZN5adept8internal6ScalarIdEC2ERKd(%"struct.adept::internal::Scalar"* nonnull dereferenceable(8) %ref.tmp, double* nonnull align 8 dereferenceable(8) %ref.tmp2)
  %5 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %6 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept8internal8Subtract9calc_leftILi0ELi0ELi0ELi1ENS_6ActiveIdEENS0_6ScalarIdEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %2, %"struct.adept::internal::Scalar"* nonnull align 8 dereferenceable(8) %ref.tmp, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %5, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %6)
  %7 = bitcast double* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #9
  %8 = bitcast %"struct.adept::internal::Scalar"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #9
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept8internal8Subtract9calc_leftILi0ELi0ELi0ELi1ENS_6ActiveIdEENS0_6ScalarIdEEEEvRNS_5StackERKT3_RKT4_RKNS_14ExpressionSizeIXT1_EEERKNS0_13ScratchVectorIXT2_EdEE(%"struct.adept::internal::Subtract"* nonnull dereferenceable(1) %this, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %stack, %"class.adept::Active"* nonnull align 8 dereferenceable(12) %left, %"struct.adept::internal::Scalar"* nonnull align 8 dereferenceable(8) %right, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %loc, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %scratch) #8 comdat align 2 {
entry:
  %this.addr = alloca %"struct.adept::internal::Subtract"*, align 8
  %stack.addr = alloca %"class.adept::Stack"*, align 8
  %left.addr = alloca %"class.adept::Active"*, align 8
  %right.addr = alloca %"struct.adept::internal::Scalar"*, align 8
  %loc.addr = alloca %"class.adept::ExpressionSize.63"*, align 8
  %scratch.addr = alloca %"class.adept::internal::ScratchVector.64"*, align 8
  store %"struct.adept::internal::Subtract"* %this, %"struct.adept::internal::Subtract"** %this.addr, align 8, !tbaa !2
  store %"class.adept::Stack"* %stack, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %left, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  store %"struct.adept::internal::Scalar"* %right, %"struct.adept::internal::Scalar"** %right.addr, align 8, !tbaa !2
  store %"class.adept::ExpressionSize.63"* %loc, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  store %"class.adept::internal::ScratchVector.64"* %scratch, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  %this1 = load %"struct.adept::internal::Subtract"*, %"struct.adept::internal::Subtract"** %this.addr, align 8
  %0 = load %"class.adept::Active"*, %"class.adept::Active"** %left.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %stack.addr, align 8, !tbaa !2
  %2 = load %"class.adept::ExpressionSize.63"*, %"class.adept::ExpressionSize.63"** %loc.addr, align 8, !tbaa !2
  %3 = load %"class.adept::internal::ScratchVector.64"*, %"class.adept::internal::ScratchVector.64"** %scratch.addr, align 8, !tbaa !2
  call void @_ZNK5adept6ActiveIdE14calc_gradient_ILi0ELi1ELi0ELi1EEEvRNS_5StackERKNS_14ExpressionSizeIXT1_EEERKNS_8internal13ScratchVectorIXT2_EdEE(%"class.adept::Active"* nonnull dereferenceable(12) %0, %"class.adept::Stack"* nonnull align 8 dereferenceable(149) %1, %"class.adept::ExpressionSize.63"* nonnull align 1 dereferenceable(1) %2, %"class.adept::internal::ScratchVector.64"* nonnull align 8 dereferenceable(8) %3)
  ret void
}

; Function Attrs: inlinehint uwtable mustprogress
define linkonce_odr dso_local void @_ZSt8_DestroyIPN5adept6ActiveIdEES2_EvT_S4_RSaIT0_E(%"class.adept::Active"* %__first, %"class.adept::Active"* %__last, %"class.std::allocator.47"* nonnull align 1 dereferenceable(1) %0) #5 comdat {
entry:
  %__first.addr = alloca %"class.adept::Active"*, align 8
  %__last.addr = alloca %"class.adept::Active"*, align 8
  %.addr = alloca %"class.std::allocator.47"*, align 8
  store %"class.adept::Active"* %__first, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  store %"class.adept::Active"* %__last, %"class.adept::Active"** %__last.addr, align 8, !tbaa !2
  store %"class.std::allocator.47"* %0, %"class.std::allocator.47"** %.addr, align 8, !tbaa !2
  %1 = load %"class.adept::Active"*, %"class.adept::Active"** %__first.addr, align 8, !tbaa !2
  %2 = load %"class.adept::Active"*, %"class.adept::Active"** %__last.addr, align 8, !tbaa !2
  call void @_ZSt8_DestroyIPN5adept6ActiveIdEEEvT_S4_(%"class.adept::Active"* %1, %"class.adept::Active"* %2)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZN5adept5Stack13set_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPKS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32 %start, i32 %end_plus_one, double* %gradient) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %start.addr = alloca i32, align 4
  %end_plus_one.addr = alloca i32, align 4
  %gradient.addr = alloca double*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp3 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store i32 %start, i32* %start.addr, align 4, !tbaa !20
  store i32 %end_plus_one, i32* %end_plus_one.addr, align 4, !tbaa !20
  store double* %gradient, double** %gradient.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %call = call zeroext i1 @_ZNK5adept5Stack25gradients_are_initializedEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @_ZN5adept5Stack20initialize_gradientsEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %0 = load i32, i32* %end_plus_one.addr, align 4, !tbaa !20
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %1 = load i32, i32* %max_gradient_, align 8, !tbaa !148
  %cmp = icmp sgt i32 %0, %1
  br i1 %cmp, label %if.then2, label %if.end9

if.then2:                                         ; preds = %if.end
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %2 = bitcast i8* %exception to %"class.adept::gradient_out_of_range"*
  %3 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %3) #9
  %4 = bitcast %"class.std::allocator.0"* %ref.tmp3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %4) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp3) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.131, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp3)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then2
  invoke void @_ZN5adept21gradient_out_of_rangeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::gradient_out_of_range"* nonnull dereferenceable(40) %2, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont5 unwind label %lpad4

invoke.cont5:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21gradient_out_of_rangeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad4

lpad:                                             ; preds = %if.then2
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  store i8* %6, i8** %exn.slot, align 8
  %7 = extractvalue { i8*, i32 } %5, 1
  store i32 %7, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad4:                                            ; preds = %invoke.cont5, %invoke.cont
  %8 = landingpad { i8*, i32 }
          cleanup
  %9 = extractvalue { i8*, i32 } %8, 0
  store i8* %9, i8** %exn.slot, align 8
  %10 = extractvalue { i8*, i32 } %8, 1
  store i32 %10, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad4, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp3) #9
  %11 = bitcast %"class.std::allocator.0"* %ref.tmp3 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %11) #9
  %12 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %12) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

if.end9:                                          ; preds = %if.end
  %13 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #9
  %14 = load i32, i32* %start.addr, align 4, !tbaa !20
  store i32 %14, i32* %i, align 4, !tbaa !20
  %15 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #9
  store i32 0, i32* %j, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end9
  %16 = load i32, i32* %i, align 4, !tbaa !20
  %17 = load i32, i32* %end_plus_one.addr, align 4, !tbaa !20
  %cmp10 = icmp slt i32 %16, %17
  br i1 %cmp10, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %18 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %18) #9
  %19 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %19) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %20 = load double*, double** %gradient.addr, align 8, !tbaa !2
  %21 = load i32, i32* %j, align 4, !tbaa !20
  %idxprom = sext i32 %21 to i64
  %arrayidx = getelementptr inbounds double, double* %20, i64 %idxprom
  %22 = load double, double* %arrayidx, align 8, !tbaa !44
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %23 = load double*, double** %gradient_, align 8, !tbaa !124
  %24 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom11 = sext i32 %24 to i64
  %arrayidx12 = getelementptr inbounds double, double* %23, i64 %idxprom11
  store double %22, double* %arrayidx12, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  %26 = load i32, i32* %j, align 4, !tbaa !20
  %inc13 = add nsw i32 %26, 1
  store i32 %inc13, i32* %j, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !370

for.end:                                          ; preds = %for.cond.cleanup
  ret void

eh.resume:                                        ; preds = %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val14 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val14

unreachable:                                      ; preds = %invoke.cont5
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5adept21gradient_out_of_rangeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::gradient_out_of_range"* nonnull dereferenceable(40) %this, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %message) unnamed_addr #7 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::gradient_out_of_range"*, align 8
  %message.addr = alloca %"class.std::__cxx11::basic_string"*, align 8
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  store %"class.adept::gradient_out_of_range"* %this, %"class.adept::gradient_out_of_range"** %this.addr, align 8, !tbaa !2
  store %"class.std::__cxx11::basic_string"* %message, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::gradient_out_of_range"*, %"class.adept::gradient_out_of_range"** %this.addr, align 8
  %0 = bitcast %"class.adept::gradient_out_of_range"* %this1 to %"class.adept::autodiff_exception"*
  call void @_ZN5adept18autodiff_exceptionC2Ev(%"class.adept::autodiff_exception"* nonnull dereferenceable(40) %0) #9
  %1 = bitcast %"class.adept::gradient_out_of_range"* %this1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5adept21gradient_out_of_rangeE, i32 0, inrange i32 0, i32 2) to i32 (...)**), i32 (...)*** %1, align 8, !tbaa !53
  %2 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %message.addr, align 8, !tbaa !2
  %3 = bitcast %"class.adept::gradient_out_of_range"* %this1 to %"class.adept::exception"*
  %message_ = getelementptr inbounds %"class.adept::exception", %"class.adept::exception"* %3, i32 0, i32 1
  %call = invoke nonnull align 8 dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %message_, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  ret void

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  %7 = bitcast %"class.adept::gradient_out_of_range"* %this1 to %"class.adept::autodiff_exception"*
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::autodiff_exception"*)*)(%"class.adept::autodiff_exception"* nonnull dereferenceable(40) %7) #9
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN5adept21gradient_out_of_rangeD0Ev(%"class.adept::gradient_out_of_range"* nonnull dereferenceable(40) %this) unnamed_addr #13 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::gradient_out_of_range"*, align 8
  store %"class.adept::gradient_out_of_range"* %this, %"class.adept::gradient_out_of_range"** %this.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::gradient_out_of_range"*, %"class.adept::gradient_out_of_range"** %this.addr, align 8
  call void bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to void (%"class.adept::gradient_out_of_range"*)*)(%"class.adept::gradient_out_of_range"* nonnull dereferenceable(40) %this1) #9
  %0 = bitcast %"class.adept::gradient_out_of_range"* %this1 to i8*
  call void @_ZdlPv(i8* %0) #32
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept6ActiveIdE12get_gradientIdEEvRT_(%"class.adept::Active"* nonnull dereferenceable(12) %this, double* nonnull align 8 dereferenceable(8) %gradient) #0 comdat align 2 {
entry:
  %this.addr = alloca %"class.adept::Active"*, align 8
  %gradient.addr = alloca double*, align 8
  store %"class.adept::Active"* %this, %"class.adept::Active"** %this.addr, align 8, !tbaa !2
  store double* %gradient, double** %gradient.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Active"*, %"class.adept::Active"** %this.addr, align 8
  %0 = load %"class.adept::Stack"*, %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE, align 8, !tbaa !2
  %gradient_index_ = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  %1 = load i32, i32* %gradient_index_, align 8, !tbaa !228
  %gradient_index_2 = getelementptr inbounds %"class.adept::Active", %"class.adept::Active"* %this1, i32 0, i32 1
  %2 = load i32, i32* %gradient_index_2, align 8, !tbaa !228
  %add = add nsw i32 %2, 1
  %3 = load double*, double** %gradient.addr, align 8, !tbaa !2
  call void @_ZNK5adept5Stack13get_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %0, i32 %1, i32 %add, double* %3)
  ret void
}

; Function Attrs: uwtable mustprogress
define linkonce_odr dso_local void @_ZNK5adept5Stack13get_gradientsIdEENS_8internal9enable_ifIXsr8internal17is_floating_pointIT_EE5valueEvE4typeEiiPS4_(%"class.adept::Stack"* nonnull dereferenceable(149) %this, i32 %start, i32 %end_plus_one, double* %gradient) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.adept::Stack"*, align 8
  %start.addr = alloca i32, align 4
  %end_plus_one.addr = alloca i32, align 4
  %gradient.addr = alloca double*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp2 = alloca %"class.std::allocator.0", align 1
  %exn.slot = alloca i8*, align 8
  %ehselector.slot = alloca i32, align 4
  %cleanup.isactive = alloca i1, align 1
  %ref.tmp10 = alloca %"class.std::__cxx11::basic_string", align 8
  %ref.tmp11 = alloca %"class.std::allocator.0", align 1
  %cleanup.isactive16 = alloca i1, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %"class.adept::Stack"* %this, %"class.adept::Stack"** %this.addr, align 8, !tbaa !2
  store i32 %start, i32* %start.addr, align 4, !tbaa !20
  store i32 %end_plus_one, i32* %end_plus_one.addr, align 4, !tbaa !20
  store double* %gradient, double** %gradient.addr, align 8, !tbaa !2
  %this1 = load %"class.adept::Stack"*, %"class.adept::Stack"** %this.addr, align 8
  %call = call zeroext i1 @_ZNK5adept5Stack25gradients_are_initializedEv(%"class.adept::Stack"* nonnull dereferenceable(149) %this1)
  br i1 %call, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %exception = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive, align 1
  %0 = bitcast i8* %exception to %"class.adept::gradients_not_initialized"*
  %1 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %1) #9
  %2 = bitcast %"class.std::allocator.0"* %ref.tmp2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %2) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp2) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.59, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %if.then
  invoke void @_ZN5adept25gradients_not_initializedC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::gradients_not_initialized"* nonnull dereferenceable(40) %0, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %invoke.cont
  store i1 false, i1* %cleanup.isactive, align 1
  invoke void @__cxa_throw(i8* %exception, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept25gradients_not_initializedE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad3

lpad:                                             ; preds = %if.then
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad3:                                            ; preds = %invoke.cont4, %invoke.cont
  %6 = landingpad { i8*, i32 }
          cleanup
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp) #9
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad3, %lpad
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp2) #9
  %9 = bitcast %"class.std::allocator.0"* %ref.tmp2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %9) #9
  %10 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %10) #9
  %cleanup.is_active = load i1, i1* %cleanup.isactive, align 1
  br i1 %cleanup.is_active, label %cleanup.action, label %cleanup.done

cleanup.action:                                   ; preds = %ehcleanup
  call void @__cxa_free_exception(i8* %exception) #9
  br label %cleanup.done

cleanup.done:                                     ; preds = %cleanup.action, %ehcleanup
  br label %eh.resume

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %end_plus_one.addr, align 4, !tbaa !20
  %max_gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 8
  %12 = load i32, i32* %max_gradient_, align 8, !tbaa !148
  %cmp = icmp sgt i32 %11, %12
  br i1 %cmp, label %if.then8, label %if.end25

if.then8:                                         ; preds = %if.end
  %exception9 = call i8* @__cxa_allocate_exception(i64 40) #9
  store i1 true, i1* %cleanup.isactive16, align 1
  %13 = bitcast i8* %exception9 to %"class.adept::gradient_out_of_range"*
  %14 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %14) #9
  %15 = bitcast %"class.std::allocator.0"* %ref.tmp11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %15) #9
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp11) #9
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp10, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.131, i64 0, i64 0), %"class.std::allocator.0"* nonnull align 1 dereferenceable(1) %ref.tmp11)
          to label %invoke.cont13 unwind label %lpad12

invoke.cont13:                                    ; preds = %if.then8
  invoke void @_ZN5adept21gradient_out_of_rangeC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(%"class.adept::gradient_out_of_range"* nonnull dereferenceable(40) %13, %"class.std::__cxx11::basic_string"* nonnull align 8 dereferenceable(32) %ref.tmp10)
          to label %invoke.cont15 unwind label %lpad14

invoke.cont15:                                    ; preds = %invoke.cont13
  store i1 false, i1* %cleanup.isactive16, align 1
  invoke void @__cxa_throw(i8* %exception9, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN5adept21gradient_out_of_rangeE to i8*), i8* bitcast (void (%"class.adept::exception"*)* @_ZN5adept9exceptionD2Ev to i8*)) #31
          to label %unreachable unwind label %lpad14

lpad12:                                           ; preds = %if.then8
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %exn.slot, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %ehselector.slot, align 4
  br label %ehcleanup18

lpad14:                                           ; preds = %invoke.cont15, %invoke.cont13
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %exn.slot, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev(%"class.std::__cxx11::basic_string"* nonnull dereferenceable(32) %ref.tmp10) #9
  br label %ehcleanup18

ehcleanup18:                                      ; preds = %lpad14, %lpad12
  call void @_ZNSaIcED2Ev(%"class.std::allocator.0"* nonnull dereferenceable(1) %ref.tmp11) #9
  %22 = bitcast %"class.std::allocator.0"* %ref.tmp11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %22) #9
  %23 = bitcast %"class.std::__cxx11::basic_string"* %ref.tmp10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %23) #9
  %cleanup.is_active22 = load i1, i1* %cleanup.isactive16, align 1
  br i1 %cleanup.is_active22, label %cleanup.action23, label %cleanup.done24

cleanup.action23:                                 ; preds = %ehcleanup18
  call void @__cxa_free_exception(i8* %exception9) #9
  br label %cleanup.done24

cleanup.done24:                                   ; preds = %cleanup.action23, %ehcleanup18
  br label %eh.resume

if.end25:                                         ; preds = %if.end
  %24 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %24) #9
  %25 = load i32, i32* %start.addr, align 4, !tbaa !20
  store i32 %25, i32* %i, align 4, !tbaa !20
  %26 = bitcast i32* %j to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %26) #9
  store i32 0, i32* %j, align 4, !tbaa !20
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end25
  %27 = load i32, i32* %i, align 4, !tbaa !20
  %28 = load i32, i32* %end_plus_one.addr, align 4, !tbaa !20
  %cmp26 = icmp slt i32 %27, %28
  br i1 %cmp26, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond
  %29 = bitcast i32* %j to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %29) #9
  %30 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %30) #9
  br label %for.end

for.body:                                         ; preds = %for.cond
  %gradient_ = getelementptr inbounds %"class.adept::Stack", %"class.adept::Stack"* %this1, i32 0, i32 1
  %31 = load double*, double** %gradient_, align 8, !tbaa !124
  %32 = load i32, i32* %i, align 4, !tbaa !20
  %idxprom = sext i32 %32 to i64
  %arrayidx = getelementptr inbounds double, double* %31, i64 %idxprom
  %33 = load double, double* %arrayidx, align 8, !tbaa !44
  %34 = load double*, double** %gradient.addr, align 8, !tbaa !2
  %35 = load i32, i32* %j, align 4, !tbaa !20
  %idxprom27 = sext i32 %35 to i64
  %arrayidx28 = getelementptr inbounds double, double* %34, i64 %idxprom27
  store double %33, double* %arrayidx28, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %36 = load i32, i32* %i, align 4, !tbaa !20
  %inc = add nsw i32 %36, 1
  store i32 %inc, i32* %i, align 4, !tbaa !20
  %37 = load i32, i32* %j, align 4, !tbaa !20
  %inc29 = add nsw i32 %37, 1
  store i32 %inc29, i32* %j, align 4, !tbaa !20
  br label %for.cond, !llvm.loop !371

for.end:                                          ; preds = %for.cond.cleanup
  ret void

eh.resume:                                        ; preds = %cleanup.done24, %cleanup.done
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val30 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val30

unreachable:                                      ; preds = %invoke.cont15, %invoke.cont4
  unreachable
}

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_gmm.cpp() #7 section ".text.startup" {
entry:
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.33()
  call void @__cxx_global_var_init.35()
  call void @__cxx_global_var_init.37()
  call void @__cxx_global_var_init.39()
  call void @__cxx_global_var_init.40()
  call void @__cxx_global_var_init.41()
  call void @__cxx_global_var_init.42()
  call void @__cxx_global_var_init.44()
  call void @__cxx_global_var_init.46()
  call void @__cxx_global_var_init.47()
  call void @__cxx_global_var_init.49()
  ret void
}

; Function Attrs: uwtable
define weak_odr hidden %"class.adept::Stack"** @_ZTWN5adept21_stack_current_threadE() #26 comdat {
  ret %"class.adept::Stack"** @_ZN5adept21_stack_current_threadE
}

; Function Attrs: uwtable mustprogress
define dso_local void @preprocess_gmm_objective(i32 %d, i32 %k, i32 %n, double* noalias %alphas, double* noalias %means, double* noalias %icf, double* noalias %x, %struct.Wishart* byval(%struct.Wishart) align 8 %wishart, double* noalias %err) #0 {
entry:
  %agg.tmp = alloca %struct.Wishart, align 8
  %sub = sub nsw i32 0, %n
  %mul = mul nsw i32 %sub, %d
  %conv = sitofp i32 %mul to double
  %mul1 = fmul fast double %conv, 5.000000e-01
  %0 = call fast double @llvm.log.f64(double 0x401921FB54442EEA)
  %mul2 = fmul fast double %mul1, %0
  %add = add nsw i32 %d, 1
  %mul3 = mul nsw i32 %d, %add
  %div = sdiv i32 %mul3, 2
  %conv4 = sext i32 %div to i64
  %mul5 = mul nsw i32 %d, %k
  %conv6 = sext i32 %mul5 to i64
  %mul7 = mul i64 %conv6, 8
  %call = call noalias i8* @malloc(i64 %mul7) #9
  %1 = bitcast i8* %call to double*
  %conv8 = sext i32 %k to i64
  %mul9 = mul i64 %conv8, 8
  %call10 = call noalias i8* @malloc(i64 %mul9) #9
  %2 = bitcast i8* %call10 to double*
  %conv11 = sext i32 %d to i64
  %mul12 = mul i64 %conv11, 8
  %call13 = call noalias i8* @malloc(i64 %mul12) #9
  %3 = bitcast i8* %call13 to double*
  %conv14 = sext i32 %d to i64
  %mul15 = mul i64 %conv14, 8
  %call16 = call noalias i8* @malloc(i64 %mul15) #9
  %4 = bitcast i8* %call16 to double*
  %conv17 = sext i32 %k to i64
  %mul18 = mul i64 %conv17, 8
  %call19 = call noalias i8* @malloc(i64 %mul18) #9
  %5 = bitcast i8* %call19 to double*
  %arrayidx = getelementptr inbounds double, double* %2, i64 0
  %arrayidx20 = getelementptr inbounds double, double* %1, i64 0
  call void @preprocess_qs(i32 %d, i32 %k, double* %icf, double* %arrayidx, double* %arrayidx20)
  br label %for.cond

for.cond:                                         ; preds = %for.inc53, %entry
  %tiv = phi i64 [ %tiv.next, %for.inc53 ], [ 0, %entry ]
  %slse.0 = phi double [ 0.000000e+00, %entry ], [ %add52, %for.inc53 ]
  %tiv.next = add nuw nsw i64 %tiv, 1
  %conv21 = sext i32 %n to i64
  %cmp = icmp slt i64 %tiv, %conv21
  br i1 %cmp, label %for.body, label %for.end55

for.body:                                         ; preds = %for.cond
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc, %for.body
  %ik.0 = phi i64 [ 0, %for.body ], [ %inc, %for.inc ]
  %conv23 = sext i32 %k to i64
  %cmp24 = icmp slt i64 %ik.0, %conv23
  br i1 %cmp24, label %for.body25, label %for.end

for.body25:                                       ; preds = %for.cond22
  %conv26 = sext i32 %d to i64
  %mul27 = mul nsw i64 %tiv, %conv26
  %arrayidx28 = getelementptr inbounds double, double* %x, i64 %mul27
  %conv29 = sext i32 %d to i64
  %mul30 = mul nsw i64 %ik.0, %conv29
  %arrayidx31 = getelementptr inbounds double, double* %means, i64 %mul30
  %arrayidx32 = getelementptr inbounds double, double* %3, i64 0
  call void @subtract(i32 %d, double* %arrayidx28, double* %arrayidx31, double* %arrayidx32)
  %conv33 = sext i32 %d to i64
  %mul34 = mul nsw i64 %ik.0, %conv33
  %arrayidx35 = getelementptr inbounds double, double* %1, i64 %mul34
  %mul36 = mul nsw i64 %ik.0, %conv4
  %conv37 = sext i32 %d to i64
  %add38 = add nsw i64 %mul36, %conv37
  %arrayidx39 = getelementptr inbounds double, double* %icf, i64 %add38
  %arrayidx40 = getelementptr inbounds double, double* %3, i64 0
  %arrayidx41 = getelementptr inbounds double, double* %4, i64 0
  call void @Qtimesx(i32 %d, double* %arrayidx35, double* %arrayidx39, double* %arrayidx40, double* %arrayidx41)
  %arrayidx42 = getelementptr inbounds double, double* %alphas, i64 %ik.0
  %6 = load double, double* %arrayidx42, align 8, !tbaa !44
  %arrayidx43 = getelementptr inbounds double, double* %2, i64 %ik.0
  %7 = load double, double* %arrayidx43, align 8, !tbaa !44
  %add44 = fadd fast double %6, %7
  %arrayidx45 = getelementptr inbounds double, double* %4, i64 0
  %call46 = call fast double @sqnorm(i32 %d, double* %arrayidx45)
  %mul47 = fmul fast double 5.000000e-01, %call46
  %sub48 = fsub fast double %add44, %mul47
  %arrayidx49 = getelementptr inbounds double, double* %5, i64 %ik.0
  store double %sub48, double* %arrayidx49, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body25
  %inc = add nsw i64 %ik.0, 1
  br label %for.cond22, !llvm.loop !71

for.end:                                          ; preds = %for.cond22
  %arrayidx50 = getelementptr inbounds double, double* %5, i64 0
  %call51 = call fast double @log_sum_exp(i32 %k, double* %arrayidx50)
  %add52 = fadd fast double %slse.0, %call51
  br label %for.inc53

for.inc53:                                        ; preds = %for.end
  %inc54 = add nsw i64 %tiv, 1
  br label %for.cond, !llvm.loop !72

for.end55:                                        ; preds = %for.cond
  %call56 = call fast double @log_sum_exp(i32 %k, double* %alphas)
  %add57 = fadd fast double %mul2, %slse.0
  %conv58 = sitofp i32 %n to double
  %mul59 = fmul fast double %conv58, %call56
  %sub60 = fsub fast double %add57, %mul59
  %8 = bitcast %struct.Wishart* %agg.tmp to i8*
  %9 = bitcast %struct.Wishart* %wishart to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false), !tbaa.struct !52
  %arrayidx61 = getelementptr inbounds double, double* %2, i64 0
  %arrayidx62 = getelementptr inbounds double, double* %1, i64 0
  %10 = bitcast %struct.Wishart* %agg.tmp to { double, i32 }*
  %11 = getelementptr inbounds { double, i32 }, { double, i32 }* %10, i32 0, i32 0
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds { double, i32 }, { double, i32 }* %10, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %call63 = call fast double @log_wishart_prior(i32 %d, i32 %k, double %12, i32 %14, double* %arrayidx61, double* %arrayidx62, double* %icf)
  %add64 = fadd fast double %sub60, %call63
  store double %add64, double* %err, align 8, !tbaa !44
  %15 = bitcast double* %1 to i8*
  call void @free(i8* %15) #9
  %16 = bitcast double* %2 to i8*
  call void @free(i8* %16) #9
  %17 = bitcast double* %3 to i8*
  call void @free(i8* %17) #9
  %18 = bitcast double* %4 to i8*
  call void @free(i8* %18) #9
  %19 = bitcast double* %5 to i8*
  call void @free(i8* %19) #9
  ret void
}

; Function Attrs: uwtable mustprogress
define internal void @diffegmm_objective(i32 %d, i32 %k, i32 %n, double* noalias %alphas, double* %"alphas'", double* noalias %means, double* %"means'", double* noalias %icf, double* %"icf'", double* noalias %x, %struct.Wishart* byval(%struct.Wishart) align 8 %wishart, double* noalias %err, double* %"err'") #0 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"iv1'ac" = alloca i64, align 8
  %"slse.0'de" = alloca double, align 8
  store double 0.000000e+00, double* %"slse.0'de", align 8
  %"add52'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add52'de", align 8
  %"sub48'de" = alloca double, align 8
  store double 0.000000e+00, double* %"sub48'de", align 8
  %"add44'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add44'de", align 8
  %"mul47'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul47'de", align 8
  %"call46'de" = alloca double, align 8
  store double 0.000000e+00, double* %"call46'de", align 8
  %subcache_cache = alloca { double, double, double*, double* }*, align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %"'de10" = alloca double, align 8
  store double 0.000000e+00, double* %"'de10", align 8
  %_augmented12_cache = alloca { double*, double*, double**, double** }*, align 8
  %"call51'de" = alloca double, align 8
  store double 0.000000e+00, double* %"call51'de", align 8
  %call51_augmented_cache = alloca { i1*, double*, double* }*, align 8
  %"add64'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add64'de", align 8
  %"sub60'de" = alloca double, align 8
  store double 0.000000e+00, double* %"sub60'de", align 8
  %"call63'de" = alloca double, align 8
  store double 0.000000e+00, double* %"call63'de", align 8
  %"add57'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add57'de", align 8
  %"mul59'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul59'de", align 8
  %"call56'de" = alloca double, align 8
  store double 0.000000e+00, double* %"call56'de", align 8
  %agg.tmp = alloca %struct.Wishart, align 8
  %add = add nsw i32 %d, 1
  %mul3 = mul nsw i32 %d, %add
  %div = sdiv i32 %mul3, 2
  %conv4 = sext i32 %div to i64
  %mul5 = mul nsw i32 %d, %k
  %conv6 = sext i32 %mul5 to i64
  %mul7 = mul i64 %conv6, 8
  %call = call noalias i8* @malloc(i64 %mul7) #9
  %"call'mi" = call noalias nonnull i8* @malloc(i64 %mul7) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull %"call'mi", i8 0, i64 %mul7, i1 false)
  %"'ipc4" = bitcast i8* %"call'mi" to double*
  %0 = bitcast i8* %call to double*
  %conv8 = sext i32 %k to i64
  %mul9 = mul i64 %conv8, 8
  %call10 = call noalias i8* @malloc(i64 %mul9) #9
  %"call10'mi" = call noalias nonnull i8* @malloc(i64 %mul9) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull %"call10'mi", i8 0, i64 %mul9, i1 false)
  %"'ipc" = bitcast i8* %"call10'mi" to double*
  %1 = bitcast i8* %call10 to double*
  %conv11 = sext i32 %d to i64
  %mul12 = mul i64 %conv11, 8
  %call13 = call noalias i8* @malloc(i64 %mul12) #9
  %"call13'mi" = call noalias nonnull i8* @malloc(i64 %mul12) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull %"call13'mi", i8 0, i64 %mul12, i1 false)
  %"'ipc11" = bitcast i8* %"call13'mi" to double*
  %2 = bitcast i8* %call13 to double*
  %conv14 = sext i32 %d to i64
  %mul15 = mul i64 %conv14, 8
  %call16 = call noalias i8* @malloc(i64 %mul15) #9
  %"call16'mi" = call noalias nonnull i8* @malloc(i64 %mul15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull %"call16'mi", i8 0, i64 %mul15, i1 false)
  %"'ipc6" = bitcast i8* %"call16'mi" to double*
  %3 = bitcast i8* %call16 to double*
  %conv17 = sext i32 %k to i64
  %mul18 = mul i64 %conv17, 8
  %call19 = call noalias i8* @malloc(i64 %mul18) #9
  %"call19'mi" = call noalias nonnull i8* @malloc(i64 %mul18) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull %"call19'mi", i8 0, i64 %mul18, i1 false)
  %"'ipc5" = bitcast i8* %"call19'mi" to double*
  %4 = bitcast i8* %call19 to double*
  %"arrayidx'ipg" = getelementptr inbounds double, double* %"'ipc", i64 0
  %arrayidx = getelementptr inbounds double, double* %1, i64 0
  %"arrayidx20'ipg" = getelementptr inbounds double, double* %"'ipc4", i64 0
  %arrayidx20 = getelementptr inbounds double, double* %0, i64 0
  %_augmented = call double* @augmented_preprocess_qs(i32 %d, i32 %k, double* %icf, double* %"icf'", double* %arrayidx, double* %"arrayidx'ipg", double* %arrayidx20, double* %"arrayidx20'ipg")
  %5 = sext i32 %n to i64
  %6 = icmp sgt i64 %5, 0
  %smax = select i1 %6, i64 %5, i64 0
  %7 = sext i32 %k to i64
  %8 = icmp sgt i64 %7, 0
  %smax3 = select i1 %8, i64 %7, i64 0
  %9 = add nuw i64 %smax, 1
  %10 = add nuw i64 %smax3, 1
  %11 = mul nuw nsw i64 %10, %9
  %mallocsize = mul nuw nsw i64 %11, 32
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %mallocsize)
  %subcache_malloccache = bitcast i8* %malloccall to { double, double, double*, double* }*
  store { double, double, double*, double* }* %subcache_malloccache, { double, double, double*, double* }** %subcache_cache, align 32, !invariant.group !372
  %mallocsize13 = mul nuw nsw i64 %11, 32
  %malloccall14 = tail call noalias nonnull i8* @malloc(i64 %mallocsize13)
  %_augmented12_malloccache = bitcast i8* %malloccall14 to { double*, double*, double**, double** }*
  store { double*, double*, double**, double** }* %_augmented12_malloccache, { double*, double*, double**, double** }** %_augmented12_cache, align 32, !invariant.group !373
  %mallocsize16 = mul nuw nsw i64 %9, 24
  %malloccall17 = tail call noalias nonnull i8* @malloc(i64 %mallocsize16)
  %call51_augmented_malloccache = bitcast i8* %malloccall17 to { i1*, double*, double* }*
  store { i1*, double*, double* }* %call51_augmented_malloccache, { i1*, double*, double* }** %call51_augmented_cache, align 8, !invariant.group !374
  br label %for.cond

for.cond:                                         ; preds = %for.inc53, %entry
  %iv = phi i64 [ %iv.next, %for.inc53 ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %conv21 = sext i32 %n to i64
  %cmp = icmp slt i64 %iv, %conv21
  br i1 %cmp, label %for.body, label %for.end55

for.body:                                         ; preds = %for.cond
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc, %for.body
  %iv1 = phi i64 [ %iv.next2, %for.inc ], [ 0, %for.body ]
  %iv.next2 = add nuw nsw i64 %iv1, 1
  %conv23 = sext i32 %k to i64
  %cmp24 = icmp slt i64 %iv1, %conv23
  br i1 %cmp24, label %for.body25, label %for.end

for.body25:                                       ; preds = %for.cond22
  %conv26 = sext i32 %d to i64
  %mul27 = mul nsw i64 %iv, %conv26
  %arrayidx28 = getelementptr inbounds double, double* %x, i64 %mul27
  %conv29 = sext i32 %d to i64
  %mul30 = mul nsw i64 %iv1, %conv29
  %"arrayidx31'ipg" = getelementptr inbounds double, double* %"means'", i64 %mul30
  %arrayidx31 = getelementptr inbounds double, double* %means, i64 %mul30
  %"arrayidx32'ipg" = getelementptr inbounds double, double* %"'ipc11", i64 0
  %arrayidx32 = getelementptr inbounds double, double* %2, i64 0
  call void @augmented_subtract(i32 %d, double* %arrayidx28, double* %arrayidx31, double* %"arrayidx31'ipg", double* %arrayidx32, double* %"arrayidx32'ipg")
  %conv33 = sext i32 %d to i64
  %mul34 = mul nsw i64 %iv1, %conv33
  %"arrayidx35'ipg" = getelementptr inbounds double, double* %"'ipc4", i64 %mul34
  %arrayidx35 = getelementptr inbounds double, double* %0, i64 %mul34
  %mul36 = mul nsw i64 %iv1, %conv4
  %conv37 = sext i32 %d to i64
  %add38 = add nsw i64 %mul36, %conv37
  %"arrayidx39'ipg" = getelementptr inbounds double, double* %"icf'", i64 %add38
  %arrayidx39 = getelementptr inbounds double, double* %icf, i64 %add38
  %"arrayidx40'ipg" = getelementptr inbounds double, double* %"'ipc11", i64 0
  %arrayidx40 = getelementptr inbounds double, double* %2, i64 0
  %"arrayidx41'ipg" = getelementptr inbounds double, double* %"'ipc6", i64 0
  %arrayidx41 = getelementptr inbounds double, double* %3, i64 0
  %_augmented12 = call { double*, double*, double**, double** } @augmented_Qtimesx(i32 %d, double* %arrayidx35, double* %"arrayidx35'ipg", double* %arrayidx39, double* %"arrayidx39'ipg", double* %arrayidx40, double* %"arrayidx40'ipg", double* %arrayidx41, double* %"arrayidx41'ipg")
  %"arrayidx42'ipg" = getelementptr inbounds double, double* %"alphas'", i64 %iv1
  %arrayidx42 = getelementptr inbounds double, double* %alphas, i64 %iv1
  %12 = load double, double* %arrayidx42, align 8, !tbaa !44
  %"arrayidx43'ipg" = getelementptr inbounds double, double* %"'ipc", i64 %iv1
  %arrayidx43 = getelementptr inbounds double, double* %1, i64 %iv1
  %13 = load double, double* %arrayidx43, align 8, !tbaa !44
  %add44 = fadd fast double %12, %13
  %"arrayidx45'ipg" = getelementptr inbounds double, double* %"'ipc6", i64 0
  %arrayidx45 = getelementptr inbounds double, double* %3, i64 0
  %call46_augmented = call { { double, double, double*, double* }, double } @augmented_sqnorm(i32 %d, double* %arrayidx45, double* %"arrayidx45'ipg")
  %subcache = extractvalue { { double, double, double*, double* }, double } %call46_augmented, 0
  %call46 = extractvalue { { double, double, double*, double* }, double } %call46_augmented, 1
  %mul47 = fmul fast double 5.000000e-01, %call46
  %sub48 = fsub fast double %add44, %mul47
  %"arrayidx49'ipg" = getelementptr inbounds double, double* %"'ipc5", i64 %iv1
  %arrayidx49 = getelementptr inbounds double, double* %4, i64 %iv1
  store double %sub48, double* %arrayidx49, align 8, !tbaa !44
  %14 = load { double*, double*, double**, double** }*, { double*, double*, double**, double** }** %_augmented12_cache, align 8, !dereferenceable !375, !invariant.group !373
  %15 = mul nuw nsw i64 %10, %9
  %16 = mul nuw nsw i64 %iv, %10
  %17 = add nuw nsw i64 %iv1, %16
  %18 = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %14, i64 %17
  store { double*, double*, double**, double** } %_augmented12, { double*, double*, double**, double** }* %18, align 32, !invariant.group !376, !write !377
  %19 = load { double, double, double*, double* }*, { double, double, double*, double* }** %subcache_cache, align 8, !dereferenceable !375, !invariant.group !372
  %20 = mul nuw nsw i64 %10, %9
  %21 = mul nuw nsw i64 %iv, %10
  %22 = add nuw nsw i64 %iv1, %21
  %23 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %19, i64 %22
  store { double, double, double*, double* } %subcache, { double, double, double*, double* }* %23, align 32, !invariant.group !378, !write !379
  %24 = alloca i32, align 4, !size !380
  br label %for.inc, !push_to_bin !377

for.inc:                                          ; preds = %for.body25
  br label %for.cond22, !llvm.loop !71

for.end:                                          ; preds = %for.cond22
  %"arrayidx50'ipg" = getelementptr inbounds double, double* %"'ipc5", i64 0
  %arrayidx50 = getelementptr inbounds double, double* %4, i64 0
  %call51_augmented = call { i1*, double*, double* } @augmented_log_sum_exp(i32 %k, double* %arrayidx50, double* %"arrayidx50'ipg")
  %25 = load { i1*, double*, double* }*, { i1*, double*, double* }** %call51_augmented_cache, align 8, !dereferenceable !375, !invariant.group !374
  %26 = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %25, i64 %iv
  store { i1*, double*, double* } %call51_augmented, { i1*, double*, double* }* %26, align 8, !invariant.group !381, !write !379
  %27 = alloca i32, align 4, !size !377
  br label %for.inc53, !push_to_bin !377

for.inc53:                                        ; preds = %for.end
  br label %for.cond, !llvm.loop !72

for.end55:                                        ; preds = %for.cond
  %call56_augmented = call { i1*, double*, double* } @augmented_log_sum_exp.5(i32 %k, double* %alphas, double* %"alphas'")
  %conv58 = sitofp i32 %n to double
  %28 = bitcast %struct.Wishart* %agg.tmp to i8*
  %29 = bitcast %struct.Wishart* %wishart to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false), !tbaa.struct !52
  %"arrayidx61'ipg" = getelementptr inbounds double, double* %"'ipc", i64 0
  %arrayidx61 = getelementptr inbounds double, double* %1, i64 0
  %"arrayidx62'ipg" = getelementptr inbounds double, double* %"'ipc4", i64 0
  %arrayidx62 = getelementptr inbounds double, double* %0, i64 0
  %30 = bitcast %struct.Wishart* %agg.tmp to { double, i32 }*
  %31 = getelementptr inbounds { double, i32 }, { double, i32 }* %30, i32 0, i32 0
  %32 = load double, double* %31, align 8
  %33 = getelementptr inbounds { double, i32 }, { double, i32 }* %30, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  br label %invertfor.end55

invertentry:                                      ; preds = %invertfor.cond
  call void @diffepreprocess_qs(i32 %d, i32 %k, double* %icf, double* %"icf'", double* %arrayidx, double* %"arrayidx'ipg", double* %arrayidx20, double* %"arrayidx20'ipg", double* %_augmented)
  tail call void @free(i8* nonnull %"call19'mi")
  tail call void @free(i8* %call19)
  tail call void @free(i8* nonnull %"call16'mi")
  tail call void @free(i8* %call16)
  tail call void @free(i8* nonnull %"call13'mi")
  tail call void @free(i8* %call13)
  tail call void @free(i8* nonnull %"call10'mi")
  tail call void @free(i8* %call10)
  tail call void @free(i8* nonnull %"call'mi")
  tail call void @free(i8* %call)
  %35 = load i64, i64* %"iv'ac", align 8
  %36 = load i64, i64* %"iv1'ac", align 8
  %forfree = load { double, double, double*, double* }*, { double, double, double*, double* }** %subcache_cache, align 32, !dereferenceable !382, !invariant.group !372
  %37 = bitcast { double, double, double*, double* }* %forfree to i8*
  tail call void @free(i8* nonnull %37)
  %38 = load i64, i64* %"iv'ac", align 8
  %39 = load i64, i64* %"iv1'ac", align 8
  %forfree15 = load { double*, double*, double**, double** }*, { double*, double*, double**, double** }** %_augmented12_cache, align 32, !dereferenceable !382, !invariant.group !373
  %40 = bitcast { double*, double*, double**, double** }* %forfree15 to i8*
  tail call void @free(i8* nonnull %40)
  %41 = load i64, i64* %"iv'ac", align 8
  %forfree18 = load { i1*, double*, double* }*, { i1*, double*, double* }** %call51_augmented_cache, align 8, !dereferenceable !383, !invariant.group !374
  %42 = bitcast { i1*, double*, double* }* %forfree18 to i8*
  tail call void @free(i8* nonnull %42)
  ret void

invertfor.cond:                                   ; preds = %mergeinvertfor.cond_for.end55, %invertfor.body
  %43 = load double, double* %"slse.0'de", align 8
  store double 0.000000e+00, double* %"slse.0'de", align 8
  %44 = load i64, i64* %"iv'ac", align 8
  %45 = icmp eq i64 %44, 0
  %46 = xor i1 %45, true
  %47 = select fast i1 %46, double %43, double 0.000000e+00
  %48 = load double, double* %"add52'de", align 8
  %49 = fadd fast double %48, %43
  %50 = select fast i1 %45, double %48, double %49
  store double %50, double* %"add52'de", align 8
  br i1 %45, label %invertentry, label %incinvertfor.cond

incinvertfor.cond:                                ; preds = %invertfor.cond
  %51 = load i64, i64* %"iv'ac", align 8
  %52 = add nsw i64 %51, -1
  store i64 %52, i64* %"iv'ac", align 8
  br label %invertfor.inc53

invertfor.body:                                   ; preds = %invertfor.cond22
  br label %invertfor.cond

invertfor.cond22:                                 ; preds = %mergeinvertfor.cond22_for.end, %invertfor.body25
  %53 = load i64, i64* %"iv1'ac", align 8
  %54 = icmp eq i64 %53, 0
  %55 = xor i1 %54, true
  br i1 %54, label %invertfor.body, label %incinvertfor.cond22

incinvertfor.cond22:                              ; preds = %invertfor.cond22
  %56 = load i64, i64* %"iv1'ac", align 8
  %57 = add nsw i64 %56, -1
  store i64 %57, i64* %"iv1'ac", align 8
  br label %invertfor.inc

invertfor.body25:                                 ; preds = %invertfor.inc
  %58 = alloca i32, align 4, !size !380, !pop_from_bin !377
  %59 = load i64, i64* %"iv1'ac", align 8, !pop_from_bin !377
  %60 = load i64, i64* %"iv'ac", align 8
  %"arrayidx49'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc5", i64 %59
  %61 = load double, double* %"arrayidx49'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx49'ipg_unwrap", align 8
  %62 = load double, double* %"sub48'de", align 8
  %63 = fadd fast double %62, %61
  store double %63, double* %"sub48'de", align 8
  %64 = load double, double* %"sub48'de", align 8
  %65 = fneg fast double %64
  store double 0.000000e+00, double* %"sub48'de", align 8
  %66 = load double, double* %"add44'de", align 8
  %67 = fadd fast double %66, %64
  store double %67, double* %"add44'de", align 8
  %68 = load double, double* %"mul47'de", align 8
  %69 = fadd fast double %68, %65
  store double %69, double* %"mul47'de", align 8
  %70 = load double, double* %"mul47'de", align 8
  %m1diffecall46 = fmul fast double %70, 5.000000e-01
  store double 0.000000e+00, double* %"mul47'de", align 8
  %71 = load double, double* %"call46'de", align 8
  %72 = fadd fast double %71, %m1diffecall46
  store double %72, double* %"call46'de", align 8
  %73 = load i64, i64* %"iv1'ac", align 8
  %74 = load i64, i64* %"iv'ac", align 8
  %arrayidx45_unwrap = getelementptr inbounds double, double* %3, i64 0
  %75 = load i64, i64* %"iv1'ac", align 8
  %76 = load i64, i64* %"iv'ac", align 8
  %"arrayidx45'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc6", i64 0
  %77 = load double, double* %"call46'de", align 8
  %78 = load i64, i64* %"iv1'ac", align 8
  %79 = load i64, i64* %"iv'ac", align 8
  %_unwrap = sext i32 %n to i64
  %_unwrap7 = icmp sgt i64 %_unwrap, 0
  %smax_unwrap = select i1 %_unwrap7, i64 %_unwrap, i64 0
  %80 = add nuw i64 %smax_unwrap, 1
  %_unwrap8 = sext i32 %k to i64
  %_unwrap9 = icmp sgt i64 %_unwrap8, 0
  %smax3_unwrap = select i1 %_unwrap9, i64 %_unwrap8, i64 0
  %81 = add nuw i64 %smax3_unwrap, 1
  %82 = mul nuw nsw i64 %81, %80
  %83 = load { double, double, double*, double* }*, { double, double, double*, double* }** %subcache_cache, align 8, !dereferenceable !375, !invariant.group !372
  %84 = load i64, i64* %"iv1'ac", align 8
  %85 = load i64, i64* %"iv'ac", align 8
  %86 = mul nuw nsw i64 %81, %80
  %87 = mul nuw nsw i64 %85, %81
  %88 = add nuw nsw i64 %84, %87
  %89 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %83, i64 %88
  %90 = load { double, double, double*, double* }, { double, double, double*, double* }* %89, align 32, !invariant.group !378
  call void @diffesqnorm(i32 %d, double* %arrayidx45_unwrap, double* %"arrayidx45'ipg_unwrap", double %77, { double, double, double*, double* } %90), !read_from_bin !377, !operand4 !379
  store double 0.000000e+00, double* %"call46'de", align 8
  %91 = load double, double* %"add44'de", align 8
  store double 0.000000e+00, double* %"add44'de", align 8
  %92 = load double, double* %"'de", align 8
  %93 = fadd fast double %92, %91
  store double %93, double* %"'de", align 8
  %94 = load double, double* %"'de10", align 8
  %95 = fadd fast double %94, %91
  store double %95, double* %"'de10", align 8
  %96 = load double, double* %"'de10", align 8
  store double 0.000000e+00, double* %"'de10", align 8
  %97 = load i64, i64* %"iv1'ac", align 8
  %98 = load i64, i64* %"iv'ac", align 8
  %"arrayidx43'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc", i64 %97
  %99 = load double, double* %"arrayidx43'ipg_unwrap", align 8
  %100 = fadd fast double %99, %96
  store double %100, double* %"arrayidx43'ipg_unwrap", align 8
  %101 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %102 = load i64, i64* %"iv1'ac", align 8
  %103 = load i64, i64* %"iv'ac", align 8
  %"arrayidx42'ipg_unwrap" = getelementptr inbounds double, double* %"alphas'", i64 %102
  %104 = load double, double* %"arrayidx42'ipg_unwrap", align 8
  %105 = fadd fast double %104, %101
  store double %105, double* %"arrayidx42'ipg_unwrap", align 8
  %106 = load i64, i64* %"iv1'ac", align 8
  %107 = load i64, i64* %"iv'ac", align 8
  %conv33_unwrap = sext i32 %d to i64
  %mul34_unwrap = mul nsw i64 %106, %conv33_unwrap
  %arrayidx35_unwrap = getelementptr inbounds double, double* %0, i64 %mul34_unwrap
  %108 = load i64, i64* %"iv1'ac", align 8
  %109 = load i64, i64* %"iv'ac", align 8
  %"arrayidx35'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc4", i64 %mul34_unwrap
  %110 = load i64, i64* %"iv1'ac", align 8
  %111 = load i64, i64* %"iv'ac", align 8
  %mul36_unwrap = mul nsw i64 %110, %conv4
  %conv37_unwrap = sext i32 %d to i64
  %add38_unwrap = add nsw i64 %mul36_unwrap, %conv37_unwrap
  %arrayidx39_unwrap = getelementptr inbounds double, double* %icf, i64 %add38_unwrap
  %112 = load i64, i64* %"iv1'ac", align 8
  %113 = load i64, i64* %"iv'ac", align 8
  %"arrayidx39'ipg_unwrap" = getelementptr inbounds double, double* %"icf'", i64 %add38_unwrap
  %114 = load i64, i64* %"iv1'ac", align 8
  %115 = load i64, i64* %"iv'ac", align 8
  %arrayidx40_unwrap = getelementptr inbounds double, double* %2, i64 0
  %116 = load i64, i64* %"iv1'ac", align 8
  %117 = load i64, i64* %"iv'ac", align 8
  %"arrayidx40'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc11", i64 0
  %118 = load i64, i64* %"iv1'ac", align 8
  %119 = load i64, i64* %"iv'ac", align 8
  %arrayidx41_unwrap = getelementptr inbounds double, double* %3, i64 0
  %120 = load i64, i64* %"iv1'ac", align 8
  %121 = load i64, i64* %"iv'ac", align 8
  %"arrayidx41'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc6", i64 0
  %122 = load i64, i64* %"iv1'ac", align 8
  %123 = load i64, i64* %"iv'ac", align 8
  %124 = add nuw i64 %smax_unwrap, 1
  %125 = add nuw i64 %smax3_unwrap, 1
  %126 = mul nuw nsw i64 %125, %124
  %127 = load { double*, double*, double**, double** }*, { double*, double*, double**, double** }** %_augmented12_cache, align 8, !dereferenceable !375, !invariant.group !373
  %128 = load i64, i64* %"iv1'ac", align 8
  %129 = load i64, i64* %"iv'ac", align 8
  %130 = mul nuw nsw i64 %125, %124
  %131 = mul nuw nsw i64 %129, %125
  %132 = add nuw nsw i64 %128, %131
  %133 = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %127, i64 %132
  %134 = load { double*, double*, double**, double** }, { double*, double*, double**, double** }* %133, align 32, !invariant.group !376
  call void @diffeQtimesx(i32 %d, double* %arrayidx35_unwrap, double* %"arrayidx35'ipg_unwrap", double* %arrayidx39_unwrap, double* %"arrayidx39'ipg_unwrap", double* %arrayidx40_unwrap, double* %"arrayidx40'ipg_unwrap", double* %arrayidx41_unwrap, double* %"arrayidx41'ipg_unwrap", { double*, double*, double**, double** } %134), !read_from_bin !377, !operand9 !377
  %135 = load i64, i64* %"iv1'ac", align 8
  %136 = load i64, i64* %"iv'ac", align 8
  %conv26_unwrap = sext i32 %d to i64
  %mul27_unwrap = mul nsw i64 %136, %conv26_unwrap
  %arrayidx28_unwrap = getelementptr inbounds double, double* %x, i64 %mul27_unwrap
  %137 = load i64, i64* %"iv1'ac", align 8
  %138 = load i64, i64* %"iv'ac", align 8
  %conv29_unwrap = sext i32 %d to i64
  %mul30_unwrap = mul nsw i64 %137, %conv29_unwrap
  %arrayidx31_unwrap = getelementptr inbounds double, double* %means, i64 %mul30_unwrap
  %139 = load i64, i64* %"iv1'ac", align 8
  %140 = load i64, i64* %"iv'ac", align 8
  %"arrayidx31'ipg_unwrap" = getelementptr inbounds double, double* %"means'", i64 %mul30_unwrap
  %141 = load i64, i64* %"iv1'ac", align 8
  %142 = load i64, i64* %"iv'ac", align 8
  %arrayidx32_unwrap = getelementptr inbounds double, double* %2, i64 0
  %143 = load i64, i64* %"iv1'ac", align 8
  %144 = load i64, i64* %"iv'ac", align 8
  %"arrayidx32'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc11", i64 0
  call void @diffesubtract(i32 %d, double* %arrayidx28_unwrap, double* %arrayidx31_unwrap, double* %"arrayidx31'ipg_unwrap", double* %arrayidx32_unwrap, double* %"arrayidx32'ipg_unwrap")
  br label %invertfor.cond22

invertfor.inc:                                    ; preds = %incinvertfor.cond22
  br label %invertfor.body25

invertfor.end:                                    ; preds = %invertfor.inc53
  %145 = alloca i32, align 4, !size !377, !pop_from_bin !377
  %146 = load double, double* %"add52'de", align 8, !pop_from_bin !377
  store double 0.000000e+00, double* %"add52'de", align 8
  %147 = load double, double* %"slse.0'de", align 8
  %148 = fadd fast double %147, %146
  store double %148, double* %"slse.0'de", align 8
  %149 = load double, double* %"call51'de", align 8
  %150 = fadd fast double %149, %146
  store double %150, double* %"call51'de", align 8
  %151 = load i64, i64* %"iv'ac", align 8
  %arrayidx50_unwrap = getelementptr inbounds double, double* %4, i64 0
  %152 = load i64, i64* %"iv'ac", align 8
  %"arrayidx50'ipg_unwrap" = getelementptr inbounds double, double* %"'ipc5", i64 0
  %153 = load double, double* %"call51'de", align 8
  %154 = load i64, i64* %"iv'ac", align 8
  %_unwrap19 = sext i32 %n to i64
  %_unwrap20 = icmp sgt i64 %_unwrap19, 0
  %smax_unwrap21 = select i1 %_unwrap20, i64 %_unwrap19, i64 0
  %155 = add nuw i64 %smax_unwrap21, 1
  %156 = load { i1*, double*, double* }*, { i1*, double*, double* }** %call51_augmented_cache, align 8, !dereferenceable !375, !invariant.group !374
  %157 = load i64, i64* %"iv'ac", align 8
  %158 = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %156, i64 %157
  %159 = load { i1*, double*, double* }, { i1*, double*, double* }* %158, align 8, !invariant.group !381
  call void @diffelog_sum_exp(i32 %k, double* %arrayidx50_unwrap, double* %"arrayidx50'ipg_unwrap", double %153, { i1*, double*, double* } %159), !read_from_bin !377, !operand4 !379
  store double 0.000000e+00, double* %"call51'de", align 8
  br label %mergeinvertfor.cond22_for.end

mergeinvertfor.cond22_for.end:                    ; preds = %invertfor.end
  store i64 %smax3, i64* %"iv1'ac", align 8
  br label %invertfor.cond22

invertfor.inc53:                                  ; preds = %incinvertfor.cond
  br label %invertfor.end

invertfor.end55:                                  ; preds = %for.end55
  %160 = load double, double* %"err'", align 8
  store double 0.000000e+00, double* %"err'", align 8
  %161 = load double, double* %"add64'de", align 8
  %162 = fadd fast double %161, %160
  store double %162, double* %"add64'de", align 8
  %163 = load double, double* %"add64'de", align 8
  store double 0.000000e+00, double* %"add64'de", align 8
  %164 = load double, double* %"sub60'de", align 8
  %165 = fadd fast double %164, %163
  store double %165, double* %"sub60'de", align 8
  %166 = load double, double* %"call63'de", align 8
  %167 = fadd fast double %166, %163
  store double %167, double* %"call63'de", align 8
  %168 = load double, double* %"call63'de", align 8
  call void @diffelog_wishart_prior(i32 %d, i32 %k, double %32, i32 %34, double* %arrayidx61, double* %"arrayidx61'ipg", double* %arrayidx62, double* %"arrayidx62'ipg", double* %icf, double* %"icf'", double %168)
  store double 0.000000e+00, double* %"call63'de", align 8
  %169 = load double, double* %"sub60'de", align 8
  %170 = fneg fast double %169
  store double 0.000000e+00, double* %"sub60'de", align 8
  %171 = load double, double* %"add57'de", align 8
  %172 = fadd fast double %171, %169
  store double %172, double* %"add57'de", align 8
  %173 = load double, double* %"mul59'de", align 8
  %174 = fadd fast double %173, %170
  store double %174, double* %"mul59'de", align 8
  %175 = load double, double* %"mul59'de", align 8
  %m1diffecall56 = fmul fast double %175, %conv58
  store double 0.000000e+00, double* %"mul59'de", align 8
  %176 = load double, double* %"call56'de", align 8
  %177 = fadd fast double %176, %m1diffecall56
  store double %177, double* %"call56'de", align 8
  %178 = load double, double* %"add57'de", align 8
  store double 0.000000e+00, double* %"add57'de", align 8
  %179 = load double, double* %"slse.0'de", align 8
  %180 = fadd fast double %179, %178
  store double %180, double* %"slse.0'de", align 8
  %181 = load double, double* %"call56'de", align 8
  call void @diffelog_sum_exp.6(i32 %k, double* %alphas, double* %"alphas'", double %181, { i1*, double*, double* } %call56_augmented)
  store double 0.000000e+00, double* %"call56'de", align 8
  br label %mergeinvertfor.cond_for.end55

mergeinvertfor.cond_for.end55:                    ; preds = %invertfor.end55
  store i64 %smax, i64* %"iv'ac", align 8
  br label %invertfor.cond
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @preprocess_preprocess_qs(i32 %d, i32 %k, double* %icf, double* %sum_qs, double* %Qdiags) #8 {
entry:
  %add = add nsw i32 %d, 1
  %mul = mul nsw i32 %d, %add
  %div = sdiv i32 %mul, 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc17, %entry
  %tiv = phi i64 [ %tiv.next, %for.inc17 ], [ 0, %entry ]
  %0 = trunc i64 %tiv to i32
  %tiv.next = add nuw nsw i64 %tiv, 1
  %cmp = icmp slt i32 %0, %k
  br i1 %cmp, label %for.body, label %for.end19

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds double, double* %sum_qs, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !44
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %id.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp2 = icmp slt i32 %id.0, %d
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %mul4 = mul nsw i32 %0, %div
  %add5 = add nsw i32 %mul4, %id.0
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds double, double* %icf, i64 %idxprom6
  %1 = load double, double* %arrayidx7, align 8, !tbaa !44
  %idxprom8 = sext i32 %0 to i64
  %arrayidx9 = getelementptr inbounds double, double* %sum_qs, i64 %idxprom8
  %2 = load double, double* %arrayidx9, align 8, !tbaa !44
  %add10 = fadd fast double %2, %1
  %idxprom11 = sext i32 %0 to i64
  %arrayidx12 = getelementptr inbounds double, double* %sum_qs, i64 %idxprom11
  store double %add10, double* %arrayidx12, align 8, !tbaa !44
  %3 = call fast double @llvm.exp.f64(double %1)
  %mul13 = mul nsw i32 %0, %d
  %add14 = add nsw i32 %mul13, %id.0
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds double, double* %Qdiags, i64 %idxprom15
  store double %3, double* %arrayidx16, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %inc = add nsw i32 %id.0, 1
  br label %for.cond1, !llvm.loop !66

for.end:                                          ; preds = %for.cond1
  br label %for.inc17

for.inc17:                                        ; preds = %for.end
  %inc18 = add nsw i32 %0, 1
  br label %for.cond, !llvm.loop !67

for.end19:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define internal double* @augmented_preprocess_qs(i32 %d, i32 %k, double* %icf, double* %"icf'", double* %sum_qs, double* %"sum_qs'", double* %Qdiags, double* %"Qdiags'") #8 {
entry:
  %0 = alloca double*, align 8
  %"iv'ac" = alloca i64, align 8
  %"iv1'ac" = alloca i64, align 8
  %_cache = alloca double*, align 8
  %add = add nsw i32 %d, 1
  %mul = mul nsw i32 %d, %add
  %div = sdiv i32 %mul, 2
  %1 = icmp sgt i32 %k, 0
  %smax = select i1 %1, i32 %k, i32 0
  %2 = zext i32 %smax to i64
  %3 = icmp sgt i32 %d, 0
  %smax3 = select i1 %3, i32 %d, i32 0
  %4 = zext i32 %smax3 to i64
  %5 = add nuw i64 %2, 1
  %6 = add nuw i64 %4, 1
  %7 = mul nuw nsw i64 %6, %5
  %mallocsize = mul nuw nsw i64 %7, 8
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %mallocsize)
  %_malloccache = bitcast i8* %malloccall to double*
  store double* %_malloccache, double** %0, align 8
  store double* %_malloccache, double** %_cache, align 8, !invariant.group !384
  br label %for.cond

for.cond:                                         ; preds = %for.inc17, %entry
  %iv = phi i64 [ %iv.next, %for.inc17 ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %8 = trunc i64 %iv to i32
  %cmp = icmp slt i32 %8, %k
  br i1 %cmp, label %for.body, label %for.end19

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds double, double* %sum_qs, i64 %idxprom
  store double 0.000000e+00, double* %arrayidx, align 8, !tbaa !44
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %iv1 = phi i64 [ %iv.next2, %for.inc ], [ 0, %for.body ]
  %9 = trunc i64 %iv1 to i32
  %iv.next2 = add nuw nsw i64 %iv1, 1
  %cmp2 = icmp slt i32 %9, %d
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %mul4 = mul nsw i32 %8, %div
  %add5 = add nsw i32 %mul4, %9
  %idxprom6 = sext i32 %add5 to i64
  %arrayidx7 = getelementptr inbounds double, double* %icf, i64 %idxprom6
  %10 = load double, double* %arrayidx7, align 8, !tbaa !44
  %idxprom8 = sext i32 %8 to i64
  %arrayidx9 = getelementptr inbounds double, double* %sum_qs, i64 %idxprom8
  %11 = load double, double* %arrayidx9, align 8, !tbaa !44
  %add10 = fadd fast double %11, %10
  %idxprom11 = sext i32 %8 to i64
  %arrayidx12 = getelementptr inbounds double, double* %sum_qs, i64 %idxprom11
  store double %add10, double* %arrayidx12, align 8, !tbaa !44
  %12 = load double*, double** %_cache, align 8, !dereferenceable !375, !invariant.group !384
  %13 = mul nuw nsw i64 %6, %5
  %14 = mul nuw nsw i64 %iv, %6
  %15 = add nuw nsw i64 %iv1, %14
  %16 = getelementptr inbounds double, double* %12, i64 %15
  store double %10, double* %16, align 8, !invariant.group !385
  %17 = call fast double @llvm.exp.f64(double %10)
  %mul13 = mul nsw i32 %8, %d
  %add14 = add nsw i32 %mul13, %9
  %idxprom15 = sext i32 %add14 to i64
  %arrayidx16 = getelementptr inbounds double, double* %Qdiags, i64 %idxprom15
  store double %17, double* %arrayidx16, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %inc = add nsw i32 %9, 1
  br label %for.cond1, !llvm.loop !66

for.end:                                          ; preds = %for.cond1
  br label %for.inc17

for.inc17:                                        ; preds = %for.end
  br label %for.cond, !llvm.loop !67

for.end19:                                        ; preds = %for.cond
  %18 = load double*, double** %0, align 8
  ret double* %18
}

; Function Attrs: nounwind uwtable mustprogress
define internal void @diffepreprocess_qs(i32 %d, i32 %k, double* %icf, double* %"icf'", double* %sum_qs, double* %"sum_qs'", double* %Qdiags, double* %"Qdiags'", double* %tapeArg) #8 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"iv1'ac" = alloca i64, align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %_cache = alloca double*, align 8
  %"'de10" = alloca double, align 8
  store double 0.000000e+00, double* %"'de10", align 8
  %"add10'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add10'de", align 8
  %"'de11" = alloca double, align 8
  store double 0.000000e+00, double* %"'de11", align 8
  %mdyncache_fromtape_cache = alloca double*, align 8
  store double* %tapeArg, double** %mdyncache_fromtape_cache, align 8
  %add = add nsw i32 %d, 1
  %mul = mul nsw i32 %d, %add
  %div = sdiv i32 %mul, 2
  %0 = icmp sgt i32 %k, 0
  %smax = select i1 %0, i32 %k, i32 0
  %1 = zext i32 %smax to i64
  %2 = icmp sgt i32 %d, 0
  %smax3 = select i1 %2, i32 %d, i32 0
  %3 = zext i32 %smax3 to i64
  %4 = add nuw i64 %1, 1
  %5 = add nuw i64 %3, 1
  %6 = mul nuw nsw i64 %5, %4
  %mallocsize = mul nuw nsw i64 %6, 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc17, %entry
  %iv = phi i64 [ %iv.next, %for.inc17 ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %7 = trunc i64 %iv to i32
  %cmp = icmp slt i32 %7, %k
  br i1 %cmp, label %for.body, label %for.end19

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %7 to i64
  %"arrayidx'ipg" = getelementptr inbounds double, double* %"sum_qs'", i64 %idxprom
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %iv1 = phi i64 [ %iv.next2, %for.inc ], [ 0, %for.body ]
  %8 = trunc i64 %iv1 to i32
  %iv.next2 = add nuw nsw i64 %iv1, 1
  %cmp2 = icmp slt i32 %8, %d
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %mul4 = mul nsw i32 %7, %div
  %add5 = add nsw i32 %mul4, %8
  %idxprom6 = sext i32 %add5 to i64
  %"arrayidx7'ipg" = getelementptr inbounds double, double* %"icf'", i64 %idxprom6
  %9 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !386
  %10 = mul nuw nsw i64 %5, %4
  %11 = mul nuw nsw i64 %iv, %5
  %12 = add nuw nsw i64 %iv1, %11
  %13 = getelementptr inbounds double, double* %9, i64 %12
  %14 = load double, double* %13, align 8, !invariant.group !387
  %idxprom8 = sext i32 %7 to i64
  %"arrayidx9'ipg" = getelementptr inbounds double, double* %"sum_qs'", i64 %idxprom8
  %idxprom11 = sext i32 %7 to i64
  %"arrayidx12'ipg" = getelementptr inbounds double, double* %"sum_qs'", i64 %idxprom11
  %15 = mul nuw nsw i64 %5, %4
  %16 = mul nuw nsw i64 %iv, %5
  %17 = add nuw nsw i64 %iv1, %16
  %mul13 = mul nsw i32 %7, %d
  %add14 = add nsw i32 %mul13, %8
  %idxprom15 = sext i32 %add14 to i64
  %"arrayidx16'ipg" = getelementptr inbounds double, double* %"Qdiags'", i64 %idxprom15
  %18 = alloca i32, align 4, !size !377
  br label %for.inc, !push_to_bin !377

for.inc:                                          ; preds = %for.body3
  %inc = add nsw i32 %8, 1
  br label %for.cond1, !llvm.loop !66

for.end:                                          ; preds = %for.cond1
  br label %for.inc17

for.inc17:                                        ; preds = %for.end
  br label %for.cond, !llvm.loop !67

for.end19:                                        ; preds = %for.cond
  br label %invertfor.end19

invertentry:                                      ; preds = %invertfor.cond
  %19 = load i64, i64* %"iv'ac", align 8
  %20 = load i64, i64* %"iv1'ac", align 8
  %21 = load i64, i64* %"iv'ac", align 8
  %22 = load i64, i64* %"iv1'ac", align 8
  %forfree13 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !386
  %23 = bitcast double* %forfree13 to i8*
  tail call void @free(i8* nonnull %23)
  ret void

invertfor.cond:                                   ; preds = %mergeinvertfor.cond_for.end19, %invertfor.body
  %24 = load i64, i64* %"iv'ac", align 8
  %25 = icmp eq i64 %24, 0
  %26 = xor i1 %25, true
  br i1 %25, label %invertentry, label %incinvertfor.cond

incinvertfor.cond:                                ; preds = %invertfor.cond
  %27 = load i64, i64* %"iv'ac", align 8
  %28 = add nsw i64 %27, -1
  store i64 %28, i64* %"iv'ac", align 8
  br label %invertfor.inc17

invertfor.body:                                   ; preds = %invertfor.cond1
  %29 = load i64, i64* %"iv'ac", align 8
  %_unwrap = trunc i64 %29 to i32
  %idxprom_unwrap = sext i32 %_unwrap to i64
  %"arrayidx'ipg_unwrap" = getelementptr inbounds double, double* %"sum_qs'", i64 %idxprom_unwrap
  store double 0.000000e+00, double* %"arrayidx'ipg_unwrap", align 8
  br label %invertfor.cond

invertfor.cond1:                                  ; preds = %mergeinvertfor.cond1_for.end, %invertfor.body3
  %30 = load i64, i64* %"iv1'ac", align 8
  %31 = icmp eq i64 %30, 0
  %32 = xor i1 %31, true
  br i1 %31, label %invertfor.body, label %incinvertfor.cond1

incinvertfor.cond1:                               ; preds = %invertfor.cond1
  %33 = load i64, i64* %"iv1'ac", align 8
  %34 = add nsw i64 %33, -1
  store i64 %34, i64* %"iv1'ac", align 8
  br label %invertfor.inc

invertfor.body3:                                  ; preds = %invertfor.inc
  %35 = alloca i32, align 4, !size !377, !pop_from_bin !377
  %36 = load i64, i64* %"iv1'ac", align 8, !pop_from_bin !377
  %37 = load i64, i64* %"iv'ac", align 8
  %_unwrap4 = trunc i64 %37 to i32
  %mul13_unwrap = mul nsw i32 %_unwrap4, %d
  %_unwrap5 = trunc i64 %36 to i32
  %add14_unwrap = add nsw i32 %mul13_unwrap, %_unwrap5
  %idxprom15_unwrap = sext i32 %add14_unwrap to i64
  %"arrayidx16'ipg_unwrap" = getelementptr inbounds double, double* %"Qdiags'", i64 %idxprom15_unwrap
  %38 = load double, double* %"arrayidx16'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx16'ipg_unwrap", align 8
  %39 = load double, double* %"'de", align 8
  %40 = fadd fast double %39, %38
  store double %40, double* %"'de", align 8
  %41 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %42 = load i64, i64* %"iv1'ac", align 8
  %43 = load i64, i64* %"iv'ac", align 8
  %_unwrap6 = icmp sgt i32 %k, 0
  %smax_unwrap = select i1 %_unwrap6, i32 %k, i32 0
  %_unwrap7 = zext i32 %smax_unwrap to i64
  %44 = add nuw i64 %_unwrap7, 1
  %_unwrap8 = icmp sgt i32 %d, 0
  %smax3_unwrap = select i1 %_unwrap8, i32 %d, i32 0
  %_unwrap9 = zext i32 %smax3_unwrap to i64
  %45 = add nuw i64 %_unwrap9, 1
  %46 = mul nuw nsw i64 %45, %44
  %47 = load i64, i64* %"iv1'ac", align 8
  %48 = load i64, i64* %"iv'ac", align 8
  %49 = mul nuw nsw i64 %45, %44
  %50 = mul nuw nsw i64 %48, %45
  %51 = add nuw nsw i64 %47, %50
  %52 = getelementptr inbounds double, double* %tapeArg, i64 %51
  %53 = load double, double* %52, align 8, !invariant.group !388
  %54 = call fast double @llvm.exp.f64(double %53), !read_from_bin !377, !operand0 !379
  %55 = fmul fast double %41, %54
  %56 = load double, double* %"'de10", align 8
  %57 = fadd fast double %56, %55
  store double %57, double* %"'de10", align 8
  %58 = load i64, i64* %"iv1'ac", align 8
  %59 = load i64, i64* %"iv'ac", align 8
  %idxprom11_unwrap = sext i32 %_unwrap4 to i64
  %"arrayidx12'ipg_unwrap" = getelementptr inbounds double, double* %"sum_qs'", i64 %idxprom11_unwrap
  %60 = load double, double* %"arrayidx12'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx12'ipg_unwrap", align 8
  %61 = load double, double* %"add10'de", align 8
  %62 = fadd fast double %61, %60
  store double %62, double* %"add10'de", align 8
  %63 = load double, double* %"add10'de", align 8
  store double 0.000000e+00, double* %"add10'de", align 8
  %64 = load double, double* %"'de11", align 8
  %65 = fadd fast double %64, %63
  store double %65, double* %"'de11", align 8
  %66 = load double, double* %"'de10", align 8
  %67 = fadd fast double %66, %63
  store double %67, double* %"'de10", align 8
  %68 = load double, double* %"'de11", align 8
  store double 0.000000e+00, double* %"'de11", align 8
  %69 = load i64, i64* %"iv1'ac", align 8
  %70 = load i64, i64* %"iv'ac", align 8
  %idxprom8_unwrap = sext i32 %_unwrap4 to i64
  %"arrayidx9'ipg_unwrap" = getelementptr inbounds double, double* %"sum_qs'", i64 %idxprom8_unwrap
  %71 = load double, double* %"arrayidx9'ipg_unwrap", align 8
  %72 = fadd fast double %71, %68
  store double %72, double* %"arrayidx9'ipg_unwrap", align 8
  %73 = load double, double* %"'de10", align 8
  store double 0.000000e+00, double* %"'de10", align 8
  %74 = load i64, i64* %"iv1'ac", align 8
  %75 = load i64, i64* %"iv'ac", align 8
  %mul4_unwrap = mul nsw i32 %_unwrap4, %div
  %add5_unwrap = add nsw i32 %mul4_unwrap, %_unwrap5
  %idxprom6_unwrap = sext i32 %add5_unwrap to i64
  %"arrayidx7'ipg_unwrap" = getelementptr inbounds double, double* %"icf'", i64 %idxprom6_unwrap
  %76 = load double, double* %"arrayidx7'ipg_unwrap", align 8
  %77 = fadd fast double %76, %73
  store double %77, double* %"arrayidx7'ipg_unwrap", align 8
  br label %invertfor.cond1

invertfor.inc:                                    ; preds = %incinvertfor.cond1
  br label %invertfor.body3

invertfor.end:                                    ; preds = %invertfor.inc17
  br label %mergeinvertfor.cond1_for.end

mergeinvertfor.cond1_for.end:                     ; preds = %invertfor.end
  store i64 %3, i64* %"iv1'ac", align 8
  br label %invertfor.cond1

invertfor.inc17:                                  ; preds = %incinvertfor.cond
  br label %invertfor.end

invertfor.end19:                                  ; preds = %for.end19
  br label %mergeinvertfor.cond_for.end19

mergeinvertfor.cond_for.end19:                    ; preds = %invertfor.end19
  store i64 %1, i64* %"iv'ac", align 8
  br label %invertfor.cond
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #27

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @preprocess_sqnorm(i32 %n, double* %x) #8 {
entry:
  %arrayidx = getelementptr inbounds double, double* %x, i64 0
  %0 = load double, double* %arrayidx, align 8, !tbaa !44
  %arrayidx1 = getelementptr inbounds double, double* %x, i64 0
  %1 = load double, double* %arrayidx1, align 8, !tbaa !44
  %mul = fmul fast double %0, %1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %tiv = phi i64 [ %tiv.next, %for.inc ], [ 0, %entry ]
  %res.0 = phi double [ %mul, %entry ], [ %add, %for.inc ]
  %2 = add i64 %tiv, 1
  %3 = trunc i64 %2 to i32
  %tiv.next = add nuw nsw i64 %tiv, 1
  %cmp = icmp slt i32 %3, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %idxprom
  %4 = load double, double* %arrayidx2, align 8, !tbaa !44
  %idxprom3 = sext i32 %3 to i64
  %arrayidx4 = getelementptr inbounds double, double* %x, i64 %idxprom3
  %5 = load double, double* %arrayidx4, align 8, !tbaa !44
  %mul5 = fmul fast double %4, %5
  %add = fadd fast double %res.0, %mul5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %3, 1
  br label %for.cond, !llvm.loop !59

for.end:                                          ; preds = %for.cond
  ret double %res.0
}

; Function Attrs: nounwind uwtable mustprogress
define internal { { double, double, double*, double* }, double } @augmented_sqnorm(i32 %n, double* %x, double* %"x'") #8 {
entry:
  %0 = alloca { { double, double, double*, double* }, double }, align 8
  %1 = getelementptr inbounds { { double, double, double*, double* }, double }, { { double, double, double*, double* }, double }* %0, i32 0, i32 0
  %"iv'ac" = alloca i64, align 8
  %_cache = alloca double*, align 8
  %_cache1 = alloca double*, align 8
  %arrayidx = getelementptr inbounds double, double* %x, i64 0
  %2 = load double, double* %arrayidx, align 8, !tbaa !44
  %3 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %1, i32 0, i32 0
  store double %2, double* %3, align 8
  %arrayidx1 = getelementptr inbounds double, double* %x, i64 0
  %4 = load double, double* %arrayidx1, align 8, !tbaa !44
  %5 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %1, i32 0, i32 1
  store double %4, double* %5, align 8
  %mul = fmul fast double %2, %4
  %6 = icmp sgt i32 %n, 1
  %smax = select i1 %6, i32 %n, i32 1
  %7 = add nsw i32 %smax, -1
  %8 = zext i32 %7 to i64
  %9 = add nuw i64 %8, 1
  %mallocsize = mul nuw nsw i64 %9, 8
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %mallocsize)
  %_malloccache = bitcast i8* %malloccall to double*
  %10 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %1, i32 0, i32 2
  store double* %_malloccache, double** %10, align 8
  store double* %_malloccache, double** %_cache, align 8, !invariant.group !389
  %mallocsize2 = mul nuw nsw i64 %9, 8
  %malloccall3 = tail call noalias nonnull i8* @malloc(i64 %mallocsize2)
  %_malloccache4 = bitcast i8* %malloccall3 to double*
  %11 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %1, i32 0, i32 3
  store double* %_malloccache4, double** %11, align 8
  store double* %_malloccache4, double** %_cache1, align 8, !invariant.group !390
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %res.0 = phi double [ %mul, %entry ], [ %add, %for.inc ]
  %iv.next = add nuw nsw i64 %iv, 1
  %12 = trunc i64 %iv.next to i32
  %cmp = icmp slt i32 %12, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %12 to i64
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %idxprom
  %13 = load double, double* %arrayidx2, align 8, !tbaa !44
  %14 = load double*, double** %_cache, align 8, !dereferenceable !375, !invariant.group !389
  %15 = getelementptr inbounds double, double* %14, i64 %iv
  store double %13, double* %15, align 8, !invariant.group !391
  %idxprom3 = sext i32 %12 to i64
  %arrayidx4 = getelementptr inbounds double, double* %x, i64 %idxprom3
  %16 = load double, double* %arrayidx4, align 8, !tbaa !44
  %17 = load double*, double** %_cache1, align 8, !dereferenceable !375, !invariant.group !390
  %18 = getelementptr inbounds double, double* %17, i64 %iv
  store double %16, double* %18, align 8, !invariant.group !392
  %mul5 = fmul fast double %13, %16
  %add = fadd fast double %res.0, %mul5
  br label %for.inc

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !59

for.end:                                          ; preds = %for.cond
  %19 = insertvalue { i8*, double } undef, double %res.0, 1
  %20 = getelementptr inbounds { { double, double, double*, double* }, double }, { { double, double, double*, double* }, double }* %0, i32 0, i32 1
  store double %res.0, double* %20, align 8
  %21 = load { { double, double, double*, double* }, double }, { { double, double, double*, double* }, double }* %0, align 8
  ret { { double, double, double*, double* }, double } %21
}

; Function Attrs: nounwind uwtable mustprogress
define internal void @diffesqnorm(i32 %n, double* %x, double* %"x'", double %differeturn, { double, double, double*, double* } %tapeArg) #8 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"res.0'de" = alloca double, align 8
  store double 0.000000e+00, double* %"res.0'de", align 8
  %"mul'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul'de", align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %"'de1" = alloca double, align 8
  store double 0.000000e+00, double* %"'de1", align 8
  %"add'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add'de", align 8
  %"mul5'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul5'de", align 8
  %_cache = alloca double*, align 8
  %_cache6 = alloca double*, align 8
  %"'de12" = alloca double, align 8
  store double 0.000000e+00, double* %"'de12", align 8
  %"'de13" = alloca double, align 8
  store double 0.000000e+00, double* %"'de13", align 8
  %0 = extractvalue { double, double, double*, double* } %tapeArg, 3
  %mdyncache_fromtape_cache = alloca double*, align 8
  store double* %0, double** %mdyncache_fromtape_cache, align 8
  %1 = extractvalue { double, double, double*, double* } %tapeArg, 2
  %mdyncache_fromtape_cache16 = alloca double*, align 8
  store double* %1, double** %mdyncache_fromtape_cache16, align 8
  %"arrayidx'ipg" = getelementptr inbounds double, double* %"x'", i64 0
  %2 = extractvalue { double, double, double*, double* } %tapeArg, 0
  %"arrayidx1'ipg" = getelementptr inbounds double, double* %"x'", i64 0
  %3 = extractvalue { double, double, double*, double* } %tapeArg, 1
  %4 = icmp sgt i32 %n, 1
  %smax = select i1 %4, i32 %n, i32 1
  %5 = add nsw i32 %smax, -1
  %6 = zext i32 %5 to i64
  %7 = add nuw i64 %6, 1
  %mallocsize = mul nuw nsw i64 %7, 8
  %mallocsize7 = mul nuw nsw i64 %7, 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %8 = trunc i64 %iv.next to i32
  %cmp = icmp slt i32 %8, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %8 to i64
  %"arrayidx2'ipg" = getelementptr inbounds double, double* %"x'", i64 %idxprom
  %9 = load double*, double** %mdyncache_fromtape_cache16, align 8, !dereferenceable !375, !invariant.group !393
  %10 = getelementptr inbounds double, double* %9, i64 %iv
  %11 = load double, double* %10, align 8, !invariant.group !394
  %idxprom3 = sext i32 %8 to i64
  %"arrayidx4'ipg" = getelementptr inbounds double, double* %"x'", i64 %idxprom3
  %12 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !395
  %13 = getelementptr inbounds double, double* %12, i64 %iv
  %14 = load double, double* %13, align 8, !invariant.group !396
  %15 = alloca i32, align 4, !size !380
  br label %for.inc, !push_to_bin !377

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !59

for.end:                                          ; preds = %for.cond
  br label %invertfor.end

invertentry:                                      ; preds = %invertfor.cond
  %16 = load double, double* %"mul'de", align 8
  %m0diffe = fmul fast double %16, %3
  %m1diffe = fmul fast double %16, %2
  store double 0.000000e+00, double* %"mul'de", align 8
  %17 = load double, double* %"'de", align 8
  %18 = fadd fast double %17, %m0diffe
  store double %18, double* %"'de", align 8
  %19 = load double, double* %"'de1", align 8
  %20 = fadd fast double %19, %m1diffe
  store double %20, double* %"'de1", align 8
  %21 = load double, double* %"'de1", align 8
  store double 0.000000e+00, double* %"'de1", align 8
  %22 = load double, double* %"arrayidx1'ipg", align 8
  %23 = fadd fast double %22, %21
  store double %23, double* %"arrayidx1'ipg", align 8
  %24 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %25 = load double, double* %"arrayidx'ipg", align 8
  %26 = fadd fast double %25, %24
  store double %26, double* %"arrayidx'ipg", align 8
  %27 = load i64, i64* %"iv'ac", align 8
  %28 = load i64, i64* %"iv'ac", align 8
  %29 = load i64, i64* %"iv'ac", align 8
  %forfree15 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !395
  %30 = bitcast double* %forfree15 to i8*
  tail call void @free(i8* nonnull %30)
  %31 = load i64, i64* %"iv'ac", align 8
  %forfree = load double*, double** %mdyncache_fromtape_cache16, align 8, !dereferenceable !375, !invariant.group !393
  %32 = bitcast double* %forfree to i8*
  tail call void @free(i8* nonnull %32)
  ret void

invertfor.cond:                                   ; preds = %mergeinvertfor.cond_for.end, %invertfor.body
  %33 = load double, double* %"res.0'de", align 8
  store double 0.000000e+00, double* %"res.0'de", align 8
  %34 = load i64, i64* %"iv'ac", align 8
  %35 = icmp eq i64 %34, 0
  %36 = xor i1 %35, true
  %37 = select fast i1 %36, double %33, double 0.000000e+00
  %38 = load double, double* %"add'de", align 8
  %39 = fadd fast double %38, %33
  %40 = select fast i1 %35, double %38, double %39
  store double %40, double* %"add'de", align 8
  %41 = select fast i1 %35, double %33, double 0.000000e+00
  %42 = load double, double* %"mul'de", align 8
  %43 = fadd fast double %42, %33
  %44 = select fast i1 %35, double %43, double %42
  store double %44, double* %"mul'de", align 8
  br i1 %35, label %invertentry, label %incinvertfor.cond

incinvertfor.cond:                                ; preds = %invertfor.cond
  %45 = load i64, i64* %"iv'ac", align 8
  %46 = add nsw i64 %45, -1
  store i64 %46, i64* %"iv'ac", align 8
  br label %invertfor.inc

invertfor.body:                                   ; preds = %invertfor.inc
  %47 = alloca i32, align 4, !size !380, !pop_from_bin !377
  %48 = load double, double* %"add'de", align 8, !pop_from_bin !377
  store double 0.000000e+00, double* %"add'de", align 8
  %49 = load double, double* %"res.0'de", align 8
  %50 = fadd fast double %49, %48
  store double %50, double* %"res.0'de", align 8
  %51 = load double, double* %"mul5'de", align 8
  %52 = fadd fast double %51, %48
  store double %52, double* %"mul5'de", align 8
  %53 = load double, double* %"mul5'de", align 8
  %54 = load i64, i64* %"iv'ac", align 8
  %_unwrap = icmp sgt i32 %n, 1
  %smax_unwrap = select i1 %_unwrap, i32 %n, i32 1
  %_unwrap3 = add nsw i32 %smax_unwrap, -1
  %_unwrap4 = zext i32 %_unwrap3 to i64
  %55 = add nuw i64 %_unwrap4, 1
  %56 = extractvalue { double, double, double*, double* } %tapeArg, 3
  %57 = load i64, i64* %"iv'ac", align 8
  %58 = getelementptr inbounds double, double* %56, i64 %57
  %59 = load double, double* %58, align 8, !invariant.group !397
  %m0diffe5 = fmul fast double %53, %59, !read_from_bin !377, !operand1 !379
  %60 = load i64, i64* %"iv'ac", align 8
  %61 = add nuw i64 %_unwrap4, 1
  %62 = extractvalue { double, double, double*, double* } %tapeArg, 2
  %63 = load i64, i64* %"iv'ac", align 8
  %64 = getelementptr inbounds double, double* %62, i64 %63
  %65 = load double, double* %64, align 8, !invariant.group !398
  %m1diffe11 = fmul fast double %53, %65, !read_from_bin !377, !operand1 !377
  store double 0.000000e+00, double* %"mul5'de", align 8
  %66 = load double, double* %"'de12", align 8
  %67 = fadd fast double %66, %m0diffe5
  store double %67, double* %"'de12", align 8
  %68 = load double, double* %"'de13", align 8
  %69 = fadd fast double %68, %m1diffe11
  store double %69, double* %"'de13", align 8
  %70 = load double, double* %"'de13", align 8
  store double 0.000000e+00, double* %"'de13", align 8
  %71 = load i64, i64* %"iv'ac", align 8
  %iv.next_unwrap = add nuw nsw i64 %71, 1
  %_unwrap14 = trunc i64 %iv.next_unwrap to i32
  %idxprom3_unwrap = sext i32 %_unwrap14 to i64
  %"arrayidx4'ipg_unwrap" = getelementptr inbounds double, double* %"x'", i64 %idxprom3_unwrap
  %72 = load double, double* %"arrayidx4'ipg_unwrap", align 8
  %73 = fadd fast double %72, %70
  store double %73, double* %"arrayidx4'ipg_unwrap", align 8
  %74 = load double, double* %"'de12", align 8
  store double 0.000000e+00, double* %"'de12", align 8
  %75 = load i64, i64* %"iv'ac", align 8
  %idxprom_unwrap = sext i32 %_unwrap14 to i64
  %"arrayidx2'ipg_unwrap" = getelementptr inbounds double, double* %"x'", i64 %idxprom_unwrap
  %76 = load double, double* %"arrayidx2'ipg_unwrap", align 8
  %77 = fadd fast double %76, %74
  store double %77, double* %"arrayidx2'ipg_unwrap", align 8
  br label %invertfor.cond

invertfor.inc:                                    ; preds = %incinvertfor.cond
  br label %invertfor.body

invertfor.end:                                    ; preds = %for.end
  store double %differeturn, double* %"res.0'de", align 8
  br label %mergeinvertfor.cond_for.end

mergeinvertfor.cond_for.end:                      ; preds = %invertfor.end
  store i64 %6, i64* %"iv'ac", align 8
  br label %invertfor.cond
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @preprocess_Qtimesx(i32 %d, double* %Qdiag, double* %ltri, double* %x, double* %out) #8 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %tiv1 = phi i64 [ %tiv.next2, %for.inc ], [ 0, %entry ]
  %0 = trunc i64 %tiv1 to i32
  %tiv.next2 = add nuw nsw i64 %tiv1, 1
  %cmp = icmp slt i32 %0, %d
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds double, double* %Qdiag, i64 %idxprom
  %1 = load double, double* %arrayidx, align 8, !tbaa !44
  %idxprom1 = sext i32 %0 to i64
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %idxprom1
  %2 = load double, double* %arrayidx2, align 8, !tbaa !44
  %mul = fmul fast double %1, %2
  %idxprom3 = sext i32 %0 to i64
  %arrayidx4 = getelementptr inbounds double, double* %out, i64 %idxprom3
  store double %mul, double* %arrayidx4, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %0, 1
  br label %for.cond, !llvm.loop !68

for.end:                                          ; preds = %for.cond
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc28, %for.end
  %tiv = phi i64 [ %tiv.next, %for.inc28 ], [ 0, %for.end ]
  %3 = trunc i64 %tiv to i32
  %tiv.next = add nuw nsw i64 %tiv, 1
  %cmp6 = icmp slt i32 %3, %d
  br i1 %cmp6, label %for.body7, label %for.end30

for.body7:                                        ; preds = %for.cond5
  %mul8 = mul nsw i32 2, %d
  %sub = sub nsw i32 %mul8, %3
  %sub9 = sub nsw i32 %sub, 1
  %mul10 = mul nsw i32 %3, %sub9
  %div = sdiv i32 %mul10, 2
  %add = add nsw i32 %3, 1
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc25, %for.body7
  %j.0 = phi i32 [ %add, %for.body7 ], [ %inc26, %for.inc25 ]
  %Lparamsidx.0 = phi i32 [ %div, %for.body7 ], [ %inc24, %for.inc25 ]
  %cmp12 = icmp slt i32 %j.0, %d
  br i1 %cmp12, label %for.body13, label %for.end27

for.body13:                                       ; preds = %for.cond11
  %idxprom14 = sext i32 %j.0 to i64
  %arrayidx15 = getelementptr inbounds double, double* %out, i64 %idxprom14
  %4 = load double, double* %arrayidx15, align 8, !tbaa !44
  %idxprom16 = sext i32 %Lparamsidx.0 to i64
  %arrayidx17 = getelementptr inbounds double, double* %ltri, i64 %idxprom16
  %5 = load double, double* %arrayidx17, align 8, !tbaa !44
  %idxprom18 = sext i32 %3 to i64
  %arrayidx19 = getelementptr inbounds double, double* %x, i64 %idxprom18
  %6 = load double, double* %arrayidx19, align 8, !tbaa !44
  %mul20 = fmul fast double %5, %6
  %add21 = fadd fast double %4, %mul20
  %idxprom22 = sext i32 %j.0 to i64
  %arrayidx23 = getelementptr inbounds double, double* %out, i64 %idxprom22
  store double %add21, double* %arrayidx23, align 8, !tbaa !44
  %inc24 = add nsw i32 %Lparamsidx.0, 1
  br label %for.inc25

for.inc25:                                        ; preds = %for.body13
  %inc26 = add nsw i32 %j.0, 1
  br label %for.cond11, !llvm.loop !69

for.end27:                                        ; preds = %for.cond11
  br label %for.inc28

for.inc28:                                        ; preds = %for.end27
  %inc29 = add nsw i32 %3, 1
  br label %for.cond5, !llvm.loop !70

for.end30:                                        ; preds = %for.cond5
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define internal { double*, double*, double**, double** } @augmented_Qtimesx(i32 %d, double* %Qdiag, double* %"Qdiag'", double* %ltri, double* %"ltri'", double* %x, double* %"x'", double* %out, double* %"out'") #8 {
entry:
  %0 = alloca { double*, double*, double**, double** }, align 8
  %"iv'ac" = alloca i64, align 8
  %"iv1'ac" = alloca i64, align 8
  %"iv4'ac" = alloca i64, align 8
  %_cache = alloca double*, align 8
  %_cache6 = alloca double*, align 8
  %_cache10 = alloca double**, align 8
  %_cache17 = alloca double**, align 8
  %1 = icmp sgt i32 %d, 0
  %smax = select i1 %1, i32 %d, i32 0
  %2 = zext i32 %smax to i64
  %3 = add nuw i64 %2, 1
  %mallocsize = mul nuw nsw i64 %3, 8
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %mallocsize)
  %_malloccache = bitcast i8* %malloccall to double*
  %4 = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %0, i32 0, i32 0
  store double* %_malloccache, double** %4, align 8
  store double* %_malloccache, double** %_cache, align 8, !invariant.group !399
  %mallocsize7 = mul nuw nsw i64 %3, 8
  %malloccall8 = tail call noalias nonnull i8* @malloc(i64 %mallocsize7)
  %_malloccache9 = bitcast i8* %malloccall8 to double*
  %5 = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %0, i32 0, i32 1
  store double* %_malloccache9, double** %5, align 8
  store double* %_malloccache9, double** %_cache6, align 8, !invariant.group !400
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %6 = trunc i64 %iv to i32
  %cmp = icmp slt i32 %6, %d
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds double, double* %Qdiag, i64 %idxprom
  %7 = load double, double* %arrayidx, align 8, !tbaa !44
  %idxprom1 = sext i32 %6 to i64
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %idxprom1
  %8 = load double, double* %arrayidx2, align 8, !tbaa !44
  %mul = fmul fast double %7, %8
  %idxprom3 = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds double, double* %out, i64 %idxprom3
  store double %mul, double* %arrayidx4, align 8, !tbaa !44
  %9 = load double*, double** %_cache6, align 8, !dereferenceable !375, !invariant.group !400
  %10 = getelementptr inbounds double, double* %9, i64 %iv
  store double %8, double* %10, align 8, !invariant.group !401
  %11 = load double*, double** %_cache, align 8, !dereferenceable !375, !invariant.group !399
  %12 = getelementptr inbounds double, double* %11, i64 %iv
  store double %7, double* %12, align 8, !invariant.group !402
  br label %for.inc

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !68

for.end:                                          ; preds = %for.cond
  %13 = icmp sgt i32 %d, 0
  %smax3 = select i1 %13, i32 %d, i32 0
  %14 = zext i32 %smax3 to i64
  %15 = add i32 %d, -1
  %16 = zext i32 %15 to i64
  %17 = add nuw i64 %14, 1
  %mallocsize11 = mul nuw nsw i64 %17, 8
  %malloccall12 = tail call noalias nonnull i8* @malloc(i64 %mallocsize11)
  %_malloccache13 = bitcast i8* %malloccall12 to double**
  %18 = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %0, i32 0, i32 2
  store double** %_malloccache13, double*** %18, align 8
  store double** %_malloccache13, double*** %_cache10, align 8, !invariant.group !403
  %mallocsize18 = mul nuw nsw i64 %17, 8
  %malloccall19 = tail call noalias nonnull i8* @malloc(i64 %mallocsize18)
  %_malloccache20 = bitcast i8* %malloccall19 to double**
  %19 = getelementptr inbounds { double*, double*, double**, double** }, { double*, double*, double**, double** }* %0, i32 0, i32 3
  store double** %_malloccache20, double*** %19, align 8
  store double** %_malloccache20, double*** %_cache17, align 8, !invariant.group !404
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc28, %for.end
  %iv1 = phi i64 [ %iv.next2, %for.inc28 ], [ 0, %for.end ]
  %20 = mul nsw i64 %iv1, -1
  %21 = add i64 %16, %20
  %22 = trunc i64 %21 to i32
  %23 = zext i32 %22 to i64
  %24 = add i64 %iv1, 1
  %iv.next2 = add nuw nsw i64 %iv1, 1
  %25 = trunc i64 %iv1 to i32
  %cmp6 = icmp slt i32 %25, %d
  br i1 %cmp6, label %for.body7, label %for.end30

for.body7:                                        ; preds = %for.cond5
  %mul8 = mul nsw i32 2, %d
  %sub = sub nsw i32 %mul8, %25
  %sub9 = sub nsw i32 %sub, 1
  %mul10 = mul nsw i32 %25, %sub9
  %div = sdiv i32 %mul10, 2
  %add = add nsw i32 %25, 1
  %26 = zext i32 %div to i64
  %27 = add nuw i64 %23, 1
  %28 = load double**, double*** %_cache10, align 8
  %29 = getelementptr inbounds double*, double** %28, i64 %iv1
  %mallocsize14 = mul nuw nsw i64 %27, 8
  %malloccall15 = tail call noalias nonnull i8* @malloc(i64 %mallocsize14)
  %_malloccache16 = bitcast i8* %malloccall15 to double*
  store double* %_malloccache16, double** %29, align 8, !invariant.group !405
  %30 = load double**, double*** %_cache17, align 8
  %31 = getelementptr inbounds double*, double** %30, i64 %iv1
  %mallocsize21 = mul nuw nsw i64 %27, 8
  %malloccall22 = tail call noalias nonnull i8* @malloc(i64 %mallocsize21)
  %_malloccache23 = bitcast i8* %malloccall22 to double*
  store double* %_malloccache23, double** %31, align 8, !invariant.group !406
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc25, %for.body7
  %iv4 = phi i64 [ %iv.next5, %for.inc25 ], [ 0, %for.body7 ]
  %32 = add i64 %26, %iv4
  %iv.next5 = add nuw nsw i64 %iv4, 1
  %33 = trunc i64 %32 to i32
  %34 = add i64 %24, %iv4
  %35 = trunc i64 %34 to i32
  %cmp12 = icmp slt i32 %35, %d
  br i1 %cmp12, label %for.body13, label %for.end27

for.body13:                                       ; preds = %for.cond11
  %idxprom14 = sext i32 %35 to i64
  %arrayidx15 = getelementptr inbounds double, double* %out, i64 %idxprom14
  %36 = load double, double* %arrayidx15, align 8, !tbaa !44
  %idxprom16 = sext i32 %33 to i64
  %arrayidx17 = getelementptr inbounds double, double* %ltri, i64 %idxprom16
  %37 = load double, double* %arrayidx17, align 8, !tbaa !44
  %idxprom18 = sext i32 %25 to i64
  %arrayidx19 = getelementptr inbounds double, double* %x, i64 %idxprom18
  %38 = load double, double* %arrayidx19, align 8, !tbaa !44
  %mul20 = fmul fast double %37, %38
  %add21 = fadd fast double %36, %mul20
  %idxprom22 = sext i32 %35 to i64
  %arrayidx23 = getelementptr inbounds double, double* %out, i64 %idxprom22
  store double %add21, double* %arrayidx23, align 8, !tbaa !44
  %39 = load double**, double*** %_cache17, align 8, !dereferenceable !375, !invariant.group !404
  %40 = getelementptr inbounds double*, double** %39, i64 %iv1
  %41 = load double*, double** %40, align 8, !dereferenceable !375, !invariant.group !406
  %42 = getelementptr inbounds double, double* %41, i64 %iv4
  store double %38, double* %42, align 8, !invariant.group !407
  %43 = load double**, double*** %_cache10, align 8, !dereferenceable !375, !invariant.group !403
  %44 = getelementptr inbounds double*, double** %43, i64 %iv1
  %45 = load double*, double** %44, align 8, !dereferenceable !375, !invariant.group !405
  %46 = getelementptr inbounds double, double* %45, i64 %iv4
  store double %37, double* %46, align 8, !invariant.group !408
  %inc24 = add nsw i32 %33, 1
  br label %for.inc25

for.inc25:                                        ; preds = %for.body13
  %inc26 = add nsw i32 %35, 1
  br label %for.cond11, !llvm.loop !69

for.end27:                                        ; preds = %for.cond11
  br label %for.inc28

for.inc28:                                        ; preds = %for.end27
  br label %for.cond5, !llvm.loop !70

for.end30:                                        ; preds = %for.cond5
  %47 = load { double*, double*, double**, double** }, { double*, double*, double**, double** }* %0, align 8
  ret { double*, double*, double**, double** } %47
}

; Function Attrs: nounwind uwtable mustprogress
define internal void @diffeQtimesx(i32 %d, double* %Qdiag, double* %"Qdiag'", double* %ltri, double* %"ltri'", double* %x, double* %"x'", double* %out, double* %"out'", { double*, double*, double**, double** } %tapeArg) #8 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"iv1'ac" = alloca i64, align 8
  %"iv4'ac" = alloca i64, align 8
  %"mul'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul'de", align 8
  %_cache = alloca double*, align 8
  %_cache8 = alloca double*, align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %"'de13" = alloca double, align 8
  store double 0.000000e+00, double* %"'de13", align 8
  %"add21'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add21'de", align 8
  %"'de17" = alloca double, align 8
  store double 0.000000e+00, double* %"'de17", align 8
  %"mul20'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul20'de", align 8
  %_cache18 = alloca double**, align 8
  %_cache38 = alloca double**, align 8
  %"'de50" = alloca double, align 8
  store double 0.000000e+00, double* %"'de50", align 8
  %"'de51" = alloca double, align 8
  store double 0.000000e+00, double* %"'de51", align 8
  %0 = extractvalue { double*, double*, double**, double** } %tapeArg, 0
  %mdyncache_fromtape_cache = alloca double*, align 8
  store double* %0, double** %mdyncache_fromtape_cache, align 8
  %1 = extractvalue { double*, double*, double**, double** } %tapeArg, 1
  %mdyncache_fromtape_cache61 = alloca double*, align 8
  store double* %1, double** %mdyncache_fromtape_cache61, align 8
  %2 = extractvalue { double*, double*, double**, double** } %tapeArg, 2
  %mdyncache_fromtape_cache63 = alloca double**, align 8
  store double** %2, double*** %mdyncache_fromtape_cache63, align 8
  %3 = extractvalue { double*, double*, double**, double** } %tapeArg, 3
  %mdyncache_fromtape_cache67 = alloca double**, align 8
  store double** %3, double*** %mdyncache_fromtape_cache67, align 8
  %4 = icmp sgt i32 %d, 0
  %smax = select i1 %4, i32 %d, i32 0
  %5 = zext i32 %smax to i64
  %6 = add nuw i64 %5, 1
  %mallocsize = mul nuw nsw i64 %6, 8
  %mallocsize9 = mul nuw nsw i64 %6, 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %7 = trunc i64 %iv to i32
  %cmp = icmp slt i32 %7, %d
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %7 to i64
  %"arrayidx'ipg" = getelementptr inbounds double, double* %"Qdiag'", i64 %idxprom
  %8 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !409
  %9 = getelementptr inbounds double, double* %8, i64 %iv
  %10 = load double, double* %9, align 8, !invariant.group !410
  %idxprom1 = sext i32 %7 to i64
  %"arrayidx2'ipg" = getelementptr inbounds double, double* %"x'", i64 %idxprom1
  %11 = load double*, double** %mdyncache_fromtape_cache61, align 8, !dereferenceable !375, !invariant.group !411
  %12 = getelementptr inbounds double, double* %11, i64 %iv
  %13 = load double, double* %12, align 8, !invariant.group !412
  %idxprom3 = sext i32 %7 to i64
  %"arrayidx4'ipg" = getelementptr inbounds double, double* %"out'", i64 %idxprom3
  %14 = alloca i32, align 4, !size !380
  br label %for.inc, !push_to_bin !377

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !68

for.end:                                          ; preds = %for.cond
  %15 = icmp sgt i32 %d, 0
  %smax3 = select i1 %15, i32 %d, i32 0
  %16 = zext i32 %smax3 to i64
  %17 = add i32 %d, -1
  %18 = zext i32 %17 to i64
  %19 = add nuw i64 %16, 1
  %mallocsize19 = mul nuw nsw i64 %19, 8
  %mallocsize39 = mul nuw nsw i64 %19, 8
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc28, %for.end
  %iv1 = phi i64 [ %iv.next2, %for.inc28 ], [ 0, %for.end ]
  %20 = mul nsw i64 %iv1, -1
  %21 = add i64 %18, %20
  %22 = trunc i64 %21 to i32
  %23 = zext i32 %22 to i64
  %24 = add i64 %iv1, 1
  %iv.next2 = add nuw nsw i64 %iv1, 1
  %25 = trunc i64 %iv1 to i32
  %cmp6 = icmp slt i32 %25, %d
  br i1 %cmp6, label %for.body7, label %for.end30

for.body7:                                        ; preds = %for.cond5
  %mul8 = mul nsw i32 2, %d
  %sub = sub nsw i32 %mul8, %25
  %sub9 = sub nsw i32 %sub, 1
  %mul10 = mul nsw i32 %25, %sub9
  %div = sdiv i32 %mul10, 2
  %add = add nsw i32 %25, 1
  %26 = zext i32 %div to i64
  %27 = add nuw i64 %23, 1
  %28 = extractvalue { double*, double*, double**, double** } %tapeArg, 3
  %29 = getelementptr inbounds double*, double** %28, i64 %iv1
  %mallocsize23 = mul nuw nsw i64 %27, 8
  %30 = extractvalue { double*, double*, double**, double** } %tapeArg, 2
  %31 = getelementptr inbounds double*, double** %30, i64 %iv1
  %mallocsize43 = mul nuw nsw i64 %27, 8
  %32 = load double**, double*** %mdyncache_fromtape_cache63, align 8
  %33 = getelementptr inbounds double*, double** %32, i64 %iv1
  %34 = load double**, double*** %mdyncache_fromtape_cache67, align 8
  %35 = getelementptr inbounds double*, double** %34, i64 %iv1
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc25, %for.body7
  %iv4 = phi i64 [ %iv.next5, %for.inc25 ], [ 0, %for.body7 ]
  %36 = add i64 %26, %iv4
  %iv.next5 = add nuw nsw i64 %iv4, 1
  %37 = trunc i64 %36 to i32
  %38 = add i64 %24, %iv4
  %39 = trunc i64 %38 to i32
  %cmp12 = icmp slt i32 %39, %d
  br i1 %cmp12, label %for.body13, label %for.end27

for.body13:                                       ; preds = %for.cond11
  %idxprom14 = sext i32 %39 to i64
  %"arrayidx15'ipg" = getelementptr inbounds double, double* %"out'", i64 %idxprom14
  %idxprom16 = sext i32 %37 to i64
  %"arrayidx17'ipg" = getelementptr inbounds double, double* %"ltri'", i64 %idxprom16
  %40 = load double**, double*** %mdyncache_fromtape_cache63, align 8, !dereferenceable !375, !invariant.group !413
  %41 = getelementptr inbounds double*, double** %40, i64 %iv1
  %42 = load double*, double** %41, align 8, !dereferenceable !375, !invariant.group !414
  %43 = getelementptr inbounds double, double* %42, i64 %iv4
  %44 = load double, double* %43, align 8, !invariant.group !415
  %idxprom18 = sext i32 %25 to i64
  %"arrayidx19'ipg" = getelementptr inbounds double, double* %"x'", i64 %idxprom18
  %45 = load double**, double*** %mdyncache_fromtape_cache67, align 8, !dereferenceable !375, !invariant.group !416
  %46 = getelementptr inbounds double*, double** %45, i64 %iv1
  %47 = load double*, double** %46, align 8, !dereferenceable !375, !invariant.group !417
  %48 = getelementptr inbounds double, double* %47, i64 %iv4
  %49 = load double, double* %48, align 8, !invariant.group !418
  %idxprom22 = sext i32 %39 to i64
  %"arrayidx23'ipg" = getelementptr inbounds double, double* %"out'", i64 %idxprom22
  %inc24 = add nsw i32 %37, 1
  %50 = alloca i32, align 4, !size !380
  br label %for.inc25, !push_to_bin !377

for.inc25:                                        ; preds = %for.body13
  %inc26 = add nsw i32 %39, 1
  br label %for.cond11, !llvm.loop !69

for.end27:                                        ; preds = %for.cond11
  br label %for.inc28

for.inc28:                                        ; preds = %for.end27
  br label %for.cond5, !llvm.loop !70

for.end30:                                        ; preds = %for.cond5
  br label %invertfor.end30

invertentry:                                      ; preds = %invertfor.cond
  %51 = load i64, i64* %"iv'ac", align 8
  %52 = load i64, i64* %"iv'ac", align 8
  %53 = load i64, i64* %"iv'ac", align 8
  %forfree60 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !409
  %54 = bitcast double* %forfree60 to i8*
  tail call void @free(i8* nonnull %54)
  %55 = load i64, i64* %"iv'ac", align 8
  %forfree62 = load double*, double** %mdyncache_fromtape_cache61, align 8, !dereferenceable !375, !invariant.group !411
  %56 = bitcast double* %forfree62 to i8*
  tail call void @free(i8* nonnull %56)
  ret void

invertfor.cond:                                   ; preds = %mergeinvertfor.cond_for.end, %invertfor.body
  %57 = load i64, i64* %"iv'ac", align 8
  %58 = icmp eq i64 %57, 0
  %59 = xor i1 %58, true
  br i1 %58, label %invertentry, label %incinvertfor.cond

incinvertfor.cond:                                ; preds = %invertfor.cond
  %60 = load i64, i64* %"iv'ac", align 8
  %61 = add nsw i64 %60, -1
  store i64 %61, i64* %"iv'ac", align 8
  br label %invertfor.inc

invertfor.body:                                   ; preds = %invertfor.inc
  %62 = alloca i32, align 4, !size !380, !pop_from_bin !377
  %63 = load i64, i64* %"iv'ac", align 8, !pop_from_bin !377
  %_unwrap = trunc i64 %63 to i32
  %idxprom3_unwrap = sext i32 %_unwrap to i64
  %"arrayidx4'ipg_unwrap" = getelementptr inbounds double, double* %"out'", i64 %idxprom3_unwrap
  %64 = load double, double* %"arrayidx4'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx4'ipg_unwrap", align 8
  %65 = load double, double* %"mul'de", align 8
  %66 = fadd fast double %65, %64
  store double %66, double* %"mul'de", align 8
  %67 = load double, double* %"mul'de", align 8
  %68 = load i64, i64* %"iv'ac", align 8
  %_unwrap6 = icmp sgt i32 %d, 0
  %smax_unwrap = select i1 %_unwrap6, i32 %d, i32 0
  %_unwrap7 = zext i32 %smax_unwrap to i64
  %69 = add nuw i64 %_unwrap7, 1
  %70 = extractvalue { double*, double*, double**, double** } %tapeArg, 1
  %71 = load i64, i64* %"iv'ac", align 8
  %72 = getelementptr inbounds double, double* %70, i64 %71
  %73 = load double, double* %72, align 8, !invariant.group !419
  %m0diffe = fmul fast double %67, %73, !read_from_bin !377, !operand1 !379
  %74 = load i64, i64* %"iv'ac", align 8
  %75 = add nuw i64 %_unwrap7, 1
  %76 = extractvalue { double*, double*, double**, double** } %tapeArg, 0
  %77 = load i64, i64* %"iv'ac", align 8
  %78 = getelementptr inbounds double, double* %76, i64 %77
  %79 = load double, double* %78, align 8, !invariant.group !420
  %m1diffe = fmul fast double %67, %79, !read_from_bin !377, !operand1 !377
  store double 0.000000e+00, double* %"mul'de", align 8
  %80 = load double, double* %"'de", align 8
  %81 = fadd fast double %80, %m0diffe
  store double %81, double* %"'de", align 8
  %82 = load double, double* %"'de13", align 8
  %83 = fadd fast double %82, %m1diffe
  store double %83, double* %"'de13", align 8
  %84 = load double, double* %"'de13", align 8
  store double 0.000000e+00, double* %"'de13", align 8
  %85 = load i64, i64* %"iv'ac", align 8
  %idxprom1_unwrap = sext i32 %_unwrap to i64
  %"arrayidx2'ipg_unwrap" = getelementptr inbounds double, double* %"x'", i64 %idxprom1_unwrap
  %86 = load double, double* %"arrayidx2'ipg_unwrap", align 8
  %87 = fadd fast double %86, %84
  store double %87, double* %"arrayidx2'ipg_unwrap", align 8
  %88 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %89 = load i64, i64* %"iv'ac", align 8
  %idxprom_unwrap = sext i32 %_unwrap to i64
  %"arrayidx'ipg_unwrap" = getelementptr inbounds double, double* %"Qdiag'", i64 %idxprom_unwrap
  %90 = load double, double* %"arrayidx'ipg_unwrap", align 8
  %91 = fadd fast double %90, %88
  store double %91, double* %"arrayidx'ipg_unwrap", align 8
  br label %invertfor.cond

invertfor.inc:                                    ; preds = %incinvertfor.cond
  br label %invertfor.body

invertfor.end:                                    ; preds = %invertfor.cond5
  %92 = load i64, i64* %"iv1'ac", align 8
  %93 = load i64, i64* %"iv1'ac", align 8
  %94 = load i64, i64* %"iv1'ac", align 8
  %forfree = load double**, double*** %mdyncache_fromtape_cache63, align 8, !dereferenceable !375, !invariant.group !413
  %95 = bitcast double** %forfree to i8*
  tail call void @free(i8* nonnull %95)
  %96 = load i64, i64* %"iv1'ac", align 8
  %forfree68 = load double**, double*** %mdyncache_fromtape_cache67, align 8, !dereferenceable !375, !invariant.group !416
  %97 = bitcast double** %forfree68 to i8*
  tail call void @free(i8* nonnull %97)
  br label %mergeinvertfor.cond_for.end

mergeinvertfor.cond_for.end:                      ; preds = %invertfor.end
  store i64 %5, i64* %"iv'ac", align 8
  br label %invertfor.cond

invertfor.cond5:                                  ; preds = %mergeinvertfor.cond5_for.end30, %invertfor.body7
  %98 = load i64, i64* %"iv1'ac", align 8
  %99 = icmp eq i64 %98, 0
  %100 = xor i1 %99, true
  br i1 %99, label %invertfor.end, label %incinvertfor.cond5

incinvertfor.cond5:                               ; preds = %invertfor.cond5
  %101 = load i64, i64* %"iv1'ac", align 8
  %102 = add nsw i64 %101, -1
  store i64 %102, i64* %"iv1'ac", align 8
  br label %invertfor.inc28

invertfor.body7:                                  ; preds = %invertfor.cond11
  %103 = load i64, i64* %"iv4'ac", align 8
  %104 = load i64, i64* %"iv4'ac", align 8
  %105 = load i64, i64* %"iv1'ac", align 8
  %106 = load i64, i64* %"iv4'ac", align 8
  %_unwrap64 = load double**, double*** %mdyncache_fromtape_cache63, align 8
  %_unwrap65 = getelementptr inbounds double*, double** %_unwrap64, i64 %105
  %forfree66 = load double*, double** %_unwrap65, align 8, !dereferenceable !375, !invariant.group !414
  %107 = bitcast double* %forfree66 to i8*
  tail call void @free(i8* nonnull %107)
  %108 = load i64, i64* %"iv1'ac", align 8
  %109 = load i64, i64* %"iv4'ac", align 8
  %_unwrap69 = load double**, double*** %mdyncache_fromtape_cache67, align 8
  %_unwrap70 = getelementptr inbounds double*, double** %_unwrap69, i64 %108
  %forfree71 = load double*, double** %_unwrap70, align 8, !dereferenceable !375, !invariant.group !417
  %110 = bitcast double* %forfree71 to i8*
  tail call void @free(i8* nonnull %110)
  br label %invertfor.cond5

invertfor.cond11:                                 ; preds = %mergeinvertfor.cond11_for.end27, %invertfor.body13
  %111 = load i64, i64* %"iv4'ac", align 8
  %112 = icmp eq i64 %111, 0
  %113 = xor i1 %112, true
  br i1 %112, label %invertfor.body7, label %incinvertfor.cond11

incinvertfor.cond11:                              ; preds = %invertfor.cond11
  %114 = load i64, i64* %"iv4'ac", align 8
  %115 = add nsw i64 %114, -1
  store i64 %115, i64* %"iv4'ac", align 8
  br label %invertfor.inc25

invertfor.body13:                                 ; preds = %invertfor.inc25
  %116 = alloca i32, align 4, !size !380, !pop_from_bin !377
  %117 = load i64, i64* %"iv4'ac", align 8, !pop_from_bin !377
  %118 = load i64, i64* %"iv1'ac", align 8
  %_unwrap14 = add i64 %118, 1
  %_unwrap15 = add i64 %_unwrap14, %117
  %_unwrap16 = trunc i64 %_unwrap15 to i32
  %idxprom22_unwrap = sext i32 %_unwrap16 to i64
  %"arrayidx23'ipg_unwrap" = getelementptr inbounds double, double* %"out'", i64 %idxprom22_unwrap
  %119 = load double, double* %"arrayidx23'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx23'ipg_unwrap", align 8
  %120 = load double, double* %"add21'de", align 8
  %121 = fadd fast double %120, %119
  store double %121, double* %"add21'de", align 8
  %122 = load double, double* %"add21'de", align 8
  store double 0.000000e+00, double* %"add21'de", align 8
  %123 = load double, double* %"'de17", align 8
  %124 = fadd fast double %123, %122
  store double %124, double* %"'de17", align 8
  %125 = load double, double* %"mul20'de", align 8
  %126 = fadd fast double %125, %122
  store double %126, double* %"mul20'de", align 8
  %127 = load double, double* %"mul20'de", align 8
  %128 = load i64, i64* %"iv4'ac", align 8
  %129 = load i64, i64* %"iv1'ac", align 8
  %_unwrap29 = icmp sgt i32 %d, 0
  %smax3_unwrap = select i1 %_unwrap29, i32 %d, i32 0
  %_unwrap30 = zext i32 %smax3_unwrap to i64
  %130 = add nuw i64 %_unwrap30, 1
  %131 = load i64, i64* %"iv1'ac", align 8
  %_unwrap31 = add i32 %d, -1
  %_unwrap32 = zext i32 %_unwrap31 to i64
  %_unwrap33 = mul nsw i64 %131, -1
  %_unwrap34 = add i64 %_unwrap32, %_unwrap33
  %_unwrap35 = trunc i64 %_unwrap34 to i32
  %_unwrap36 = zext i32 %_unwrap35 to i64
  %132 = add nuw i64 %_unwrap36, 1
  %133 = extractvalue { double*, double*, double**, double** } %tapeArg, 3
  %134 = load i64, i64* %"iv1'ac", align 8
  %135 = getelementptr inbounds double*, double** %133, i64 %134
  %136 = load double*, double** %135, align 8, !dereferenceable !375, !invariant.group !421
  %137 = load i64, i64* %"iv4'ac", align 8
  %138 = getelementptr inbounds double, double* %136, i64 %137
  %139 = load double, double* %138, align 8, !invariant.group !422
  %m0diffe37 = fmul fast double %127, %139, !read_from_bin !377, !operand1 !379
  %140 = load i64, i64* %"iv4'ac", align 8
  %141 = load i64, i64* %"iv1'ac", align 8
  %142 = add nuw i64 %_unwrap30, 1
  %143 = load i64, i64* %"iv1'ac", align 8
  %144 = add nuw i64 %_unwrap36, 1
  %145 = extractvalue { double*, double*, double**, double** } %tapeArg, 2
  %146 = load i64, i64* %"iv1'ac", align 8
  %147 = getelementptr inbounds double*, double** %145, i64 %146
  %148 = load double*, double** %147, align 8, !dereferenceable !375, !invariant.group !423
  %149 = load i64, i64* %"iv4'ac", align 8
  %150 = getelementptr inbounds double, double* %148, i64 %149
  %151 = load double, double* %150, align 8, !invariant.group !424
  %m1diffe49 = fmul fast double %127, %151, !read_from_bin !377, !operand1 !377
  store double 0.000000e+00, double* %"mul20'de", align 8
  %152 = load double, double* %"'de50", align 8
  %153 = fadd fast double %152, %m0diffe37
  store double %153, double* %"'de50", align 8
  %154 = load double, double* %"'de51", align 8
  %155 = fadd fast double %154, %m1diffe49
  store double %155, double* %"'de51", align 8
  %156 = load double, double* %"'de51", align 8
  store double 0.000000e+00, double* %"'de51", align 8
  %157 = load i64, i64* %"iv4'ac", align 8
  %158 = load i64, i64* %"iv1'ac", align 8
  %_unwrap52 = trunc i64 %158 to i32
  %idxprom18_unwrap = sext i32 %_unwrap52 to i64
  %"arrayidx19'ipg_unwrap" = getelementptr inbounds double, double* %"x'", i64 %idxprom18_unwrap
  %159 = load double, double* %"arrayidx19'ipg_unwrap", align 8
  %160 = fadd fast double %159, %156
  store double %160, double* %"arrayidx19'ipg_unwrap", align 8
  %161 = load double, double* %"'de50", align 8
  store double 0.000000e+00, double* %"'de50", align 8
  %162 = load i64, i64* %"iv4'ac", align 8
  %163 = load i64, i64* %"iv1'ac", align 8
  %mul8_unwrap = mul nsw i32 2, %d
  %sub_unwrap = sub nsw i32 %mul8_unwrap, %_unwrap52
  %sub9_unwrap = sub nsw i32 %sub_unwrap, 1
  %mul10_unwrap = mul nsw i32 %_unwrap52, %sub9_unwrap
  %div_unwrap = sdiv i32 %mul10_unwrap, 2
  %_unwrap53 = zext i32 %div_unwrap to i64
  %_unwrap54 = add i64 %_unwrap53, %162
  %_unwrap55 = trunc i64 %_unwrap54 to i32
  %idxprom16_unwrap = sext i32 %_unwrap55 to i64
  %"arrayidx17'ipg_unwrap" = getelementptr inbounds double, double* %"ltri'", i64 %idxprom16_unwrap
  %164 = load double, double* %"arrayidx17'ipg_unwrap", align 8
  %165 = fadd fast double %164, %161
  store double %165, double* %"arrayidx17'ipg_unwrap", align 8
  %166 = load double, double* %"'de17", align 8
  store double 0.000000e+00, double* %"'de17", align 8
  %167 = load i64, i64* %"iv4'ac", align 8
  %168 = load i64, i64* %"iv1'ac", align 8
  %idxprom14_unwrap = sext i32 %_unwrap16 to i64
  %"arrayidx15'ipg_unwrap" = getelementptr inbounds double, double* %"out'", i64 %idxprom14_unwrap
  %169 = load double, double* %"arrayidx15'ipg_unwrap", align 8
  %170 = fadd fast double %169, %166
  store double %170, double* %"arrayidx15'ipg_unwrap", align 8
  br label %invertfor.cond11

invertfor.inc25:                                  ; preds = %incinvertfor.cond11
  br label %invertfor.body13

invertfor.end27:                                  ; preds = %invertfor.inc28
  %171 = load i64, i64* %"iv1'ac", align 8
  %_unwrap56 = mul nsw i64 %171, -1
  %_unwrap57 = add i64 %18, %_unwrap56
  %_unwrap58 = trunc i64 %_unwrap57 to i32
  %_unwrap59 = zext i32 %_unwrap58 to i64
  br label %mergeinvertfor.cond11_for.end27

mergeinvertfor.cond11_for.end27:                  ; preds = %invertfor.end27
  store i64 %_unwrap59, i64* %"iv4'ac", align 8
  br label %invertfor.cond11

invertfor.inc28:                                  ; preds = %incinvertfor.cond5
  br label %invertfor.end27

invertfor.end30:                                  ; preds = %for.end30
  br label %mergeinvertfor.cond5_for.end30

mergeinvertfor.cond5_for.end30:                   ; preds = %invertfor.end30
  store i64 %16, i64* %"iv1'ac", align 8
  br label %invertfor.cond5
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local void @preprocess_subtract(i32 %d, double* %x, double* %y, double* %out) #8 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %tiv = phi i64 [ %tiv.next, %for.inc ], [ 0, %entry ]
  %0 = trunc i64 %tiv to i32
  %tiv.next = add nuw nsw i64 %tiv, 1
  %cmp = icmp slt i32 %0, %d
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds double, double* %x, i64 %idxprom
  %1 = load double, double* %arrayidx, align 8, !tbaa !44
  %idxprom1 = sext i32 %0 to i64
  %arrayidx2 = getelementptr inbounds double, double* %y, i64 %idxprom1
  %2 = load double, double* %arrayidx2, align 8, !tbaa !44
  %sub = fsub fast double %1, %2
  %idxprom3 = sext i32 %0 to i64
  %arrayidx4 = getelementptr inbounds double, double* %out, i64 %idxprom3
  store double %sub, double* %arrayidx4, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %0, 1
  br label %for.cond, !llvm.loop !60

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define internal void @augmented_subtract(i32 %d, double* %x, double* %y, double* %"y'", double* %out, double* %"out'") #8 {
entry:
  %"iv'ac" = alloca i64, align 8
  %0 = icmp sgt i32 %d, 0
  %smax = select i1 %0, i32 %d, i32 0
  %1 = zext i32 %smax to i64
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %2 = trunc i64 %iv to i32
  %cmp = icmp slt i32 %2, %d
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds double, double* %x, i64 %idxprom
  %3 = load double, double* %arrayidx, align 8, !tbaa !44
  %idxprom1 = sext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds double, double* %y, i64 %idxprom1
  %4 = load double, double* %arrayidx2, align 8, !tbaa !44
  %sub = fsub fast double %3, %4
  %idxprom3 = sext i32 %2 to i64
  %arrayidx4 = getelementptr inbounds double, double* %out, i64 %idxprom3
  store double %sub, double* %arrayidx4, align 8, !tbaa !44
  br label %for.inc

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !60

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable mustprogress
define internal void @diffesubtract(i32 %d, double* %x, double* %y, double* %"y'", double* %out, double* %"out'") #8 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"sub'de" = alloca double, align 8
  store double 0.000000e+00, double* %"sub'de", align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %0 = icmp sgt i32 %d, 0
  %smax = select i1 %0, i32 %d, i32 0
  %1 = zext i32 %smax to i64
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %2 = trunc i64 %iv to i32
  %cmp = icmp slt i32 %2, %d
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom1 = sext i32 %2 to i64
  %"arrayidx2'ipg" = getelementptr inbounds double, double* %"y'", i64 %idxprom1
  %idxprom3 = sext i32 %2 to i64
  %"arrayidx4'ipg" = getelementptr inbounds double, double* %"out'", i64 %idxprom3
  br label %for.inc

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !60

for.end:                                          ; preds = %for.cond
  br label %invertfor.end

invertentry:                                      ; preds = %invertfor.cond
  ret void

invertfor.cond:                                   ; preds = %mergeinvertfor.cond_for.end, %invertfor.body
  %3 = load i64, i64* %"iv'ac", align 8
  %4 = icmp eq i64 %3, 0
  %5 = xor i1 %4, true
  br i1 %4, label %invertentry, label %incinvertfor.cond

incinvertfor.cond:                                ; preds = %invertfor.cond
  %6 = load i64, i64* %"iv'ac", align 8
  %7 = add nsw i64 %6, -1
  store i64 %7, i64* %"iv'ac", align 8
  br label %invertfor.inc

invertfor.body:                                   ; preds = %invertfor.inc
  %8 = load i64, i64* %"iv'ac", align 8
  %_unwrap = trunc i64 %8 to i32
  %idxprom3_unwrap = sext i32 %_unwrap to i64
  %"arrayidx4'ipg_unwrap" = getelementptr inbounds double, double* %"out'", i64 %idxprom3_unwrap
  %9 = load double, double* %"arrayidx4'ipg_unwrap", align 8
  store double 0.000000e+00, double* %"arrayidx4'ipg_unwrap", align 8
  %10 = load double, double* %"sub'de", align 8
  %11 = fadd fast double %10, %9
  store double %11, double* %"sub'de", align 8
  %12 = load double, double* %"sub'de", align 8
  %13 = fneg fast double %12
  store double 0.000000e+00, double* %"sub'de", align 8
  %14 = load double, double* %"'de", align 8
  %15 = fadd fast double %14, %13
  store double %15, double* %"'de", align 8
  %16 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %17 = load i64, i64* %"iv'ac", align 8
  %idxprom1_unwrap = sext i32 %_unwrap to i64
  %"arrayidx2'ipg_unwrap" = getelementptr inbounds double, double* %"y'", i64 %idxprom1_unwrap
  %18 = load double, double* %"arrayidx2'ipg_unwrap", align 8
  %19 = fadd fast double %18, %16
  store double %19, double* %"arrayidx2'ipg_unwrap", align 8
  br label %invertfor.cond

invertfor.inc:                                    ; preds = %incinvertfor.cond
  br label %invertfor.body

invertfor.end:                                    ; preds = %for.end
  br label %mergeinvertfor.cond_for.end

mergeinvertfor.cond_for.end:                      ; preds = %invertfor.end
  store i64 %1, i64* %"iv'ac", align 8
  br label %invertfor.cond
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @preprocess_log_sum_exp(i32 %n, double* %x) #8 {
entry:
  %call = call fast double @arr_max(i32 %n, double* %x)
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %tiv = phi i64 [ %tiv.next, %for.inc ], [ 0, %entry ]
  %semx.0 = phi double [ 0.000000e+00, %entry ], [ %add, %for.inc ]
  %0 = trunc i64 %tiv to i32
  %tiv.next = add nuw nsw i64 %tiv, 1
  %cmp = icmp slt i32 %0, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds double, double* %x, i64 %idxprom
  %1 = load double, double* %arrayidx, align 8, !tbaa !44
  %sub = fsub fast double %1, %call
  %2 = call fast double @llvm.exp.f64(double %sub)
  %add = fadd fast double %semx.0, %2
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %0, 1
  br label %for.cond, !llvm.loop !61

for.end:                                          ; preds = %for.cond
  %3 = call fast double @llvm.log.f64(double %semx.0)
  %add1 = fadd fast double %3, %call
  ret double %add1
}

; Function Attrs: nounwind uwtable mustprogress
define dso_local double @preprocess_arr_max(i32 %n, double* %x) #8 {
entry:
  %arrayidx = getelementptr inbounds double, double* %x, i64 0
  %0 = load double, double* %arrayidx, align 8, !tbaa !44
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %tiv = phi i64 [ %tiv.next, %for.inc ], [ 0, %entry ]
  %m.0 = phi double [ %0, %entry ], [ %m.1, %for.inc ]
  %1 = add i64 %tiv, 1
  %2 = trunc i64 %1 to i32
  %tiv.next = add nuw nsw i64 %tiv, 1
  %cmp = icmp slt i32 %2, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %2 to i64
  %arrayidx1 = getelementptr inbounds double, double* %x, i64 %idxprom
  %3 = load double, double* %arrayidx1, align 8, !tbaa !44
  %cmp2 = fcmp fast olt double %m.0, %3
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %idxprom3 = sext i32 %2 to i64
  %arrayidx4 = getelementptr inbounds double, double* %x, i64 %idxprom3
  %4 = load double, double* %arrayidx4, align 8, !tbaa !44
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %m.1 = phi double [ %4, %if.then ], [ %m.0, %for.body ]
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %inc = add nsw i32 %2, 1
  br label %for.cond, !llvm.loop !58

for.end:                                          ; preds = %for.cond
  ret double %m.0
}

; Function Attrs: nounwind uwtable mustprogress
define internal { i1*, double } @augmented_arr_max(i32 %n, double* %x, double* %"x'") #8 {
entry:
  %0 = alloca { i1*, double }, align 8
  %1 = getelementptr inbounds { i1*, double }, { i1*, double }* %0, i32 0, i32 0
  %"iv'ac" = alloca i64, align 8
  %cmp2_cache = alloca i1*, align 8
  %arrayidx = getelementptr inbounds double, double* %x, i64 0
  %2 = load double, double* %arrayidx, align 8, !tbaa !44
  %3 = icmp sgt i32 %n, 1
  %smax = select i1 %3, i32 %n, i32 1
  %4 = add nsw i32 %smax, -1
  %5 = zext i32 %4 to i64
  %6 = add nuw i64 %5, 1
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %6)
  %cmp2_malloccache = bitcast i8* %malloccall to i1*
  store i1* %cmp2_malloccache, i1** %1, align 8
  store i1* %cmp2_malloccache, i1** %cmp2_cache, align 1, !invariant.group !425
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %m.0 = phi double [ %2, %entry ], [ %m.1, %for.inc ]
  %iv.next = add nuw nsw i64 %iv, 1
  %7 = trunc i64 %iv.next to i32
  %cmp = icmp slt i32 %7, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %7 to i64
  %arrayidx1 = getelementptr inbounds double, double* %x, i64 %idxprom
  %8 = load double, double* %arrayidx1, align 8, !tbaa !44
  %cmp2 = fcmp fast olt double %m.0, %8
  %9 = load i1*, i1** %cmp2_cache, align 8, !dereferenceable !375, !invariant.group !425
  %10 = getelementptr inbounds i1, i1* %9, i64 %iv
  store i1 %cmp2, i1* %10, align 1, !invariant.group !426
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %idxprom3 = sext i32 %7 to i64
  %arrayidx4 = getelementptr inbounds double, double* %x, i64 %idxprom3
  %11 = load double, double* %arrayidx4, align 8, !tbaa !44
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %m.1 = phi double [ %11, %if.then ], [ %m.0, %for.body ]
  br label %for.inc

for.inc:                                          ; preds = %if.end
  br label %for.cond, !llvm.loop !58

for.end:                                          ; preds = %for.cond
  %12 = insertvalue { i8*, double } undef, double %m.0, 1
  %13 = getelementptr inbounds { i1*, double }, { i1*, double }* %0, i32 0, i32 1
  store double %m.0, double* %13, align 8
  %14 = load { i1*, double }, { i1*, double }* %0, align 8
  ret { i1*, double } %14
}

; Function Attrs: nounwind uwtable mustprogress
define internal { i1*, double*, double* } @augmented_log_sum_exp(i32 %n, double* %x, double* %"x'") #8 {
entry:
  %0 = alloca { i1*, double*, double* }, align 8
  %"iv'ac" = alloca i64, align 8
  %semx.0_cache = alloca double*, align 8
  %sub_cache = alloca double*, align 8
  %call_augmented = call { i1*, double } @augmented_arr_max(i32 %n, double* %x, double* %"x'")
  %subcache = extractvalue { i1*, double } %call_augmented, 0
  %1 = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %0, i32 0, i32 0
  store i1* %subcache, i1** %1, align 8
  %call = extractvalue { i1*, double } %call_augmented, 1
  %2 = icmp sgt i32 %n, 0
  %smax = select i1 %2, i32 %n, i32 0
  %3 = zext i32 %smax to i64
  %4 = add nuw i64 %3, 1
  %mallocsize = mul nuw nsw i64 %4, 8
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %mallocsize)
  %semx.0_malloccache = bitcast i8* %malloccall to double*
  %5 = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %0, i32 0, i32 1
  store double* %semx.0_malloccache, double** %5, align 8
  store double* %semx.0_malloccache, double** %semx.0_cache, align 8, !invariant.group !427
  %mallocsize1 = mul nuw nsw i64 %4, 8
  %malloccall2 = tail call noalias nonnull i8* @malloc(i64 %mallocsize1)
  %sub_malloccache = bitcast i8* %malloccall2 to double*
  %6 = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %0, i32 0, i32 2
  store double* %sub_malloccache, double** %6, align 8
  store double* %sub_malloccache, double** %sub_cache, align 8, !invariant.group !428
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %semx.0 = phi double [ 0.000000e+00, %entry ], [ %add, %for.inc ]
  %7 = load double*, double** %semx.0_cache, align 8, !dereferenceable !375, !invariant.group !427
  %8 = getelementptr inbounds double, double* %7, i64 %iv
  store double %semx.0, double* %8, align 8, !invariant.group !429
  %iv.next = add nuw nsw i64 %iv, 1
  %9 = trunc i64 %iv to i32
  %cmp = icmp slt i32 %9, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds double, double* %x, i64 %idxprom
  %10 = load double, double* %arrayidx, align 8, !tbaa !44
  %sub = fsub fast double %10, %call
  %11 = load double*, double** %sub_cache, align 8, !dereferenceable !375, !invariant.group !428
  %12 = getelementptr inbounds double, double* %11, i64 %iv
  store double %sub, double* %12, align 8, !invariant.group !430
  %13 = call fast double @llvm.exp.f64(double %sub)
  %add = fadd fast double %semx.0, %13
  br label %for.inc

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !61

for.end:                                          ; preds = %for.cond
  %14 = load { i1*, double*, double* }, { i1*, double*, double* }* %0, align 8
  ret { i1*, double*, double* } %14
}

; Function Attrs: nounwind uwtable mustprogress
define internal void @diffelog_sum_exp(i32 %n, double* %x, double* %"x'", double %differeturn, { i1*, double*, double* } %tapeArg) #8 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"add1'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add1'de", align 8
  %"call'de" = alloca double, align 8
  store double 0.000000e+00, double* %"call'de", align 8
  %"semx.0'de" = alloca double, align 8
  store double 0.000000e+00, double* %"semx.0'de", align 8
  %"add'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add'de", align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %sub_cache = alloca double*, align 8
  %"sub'de" = alloca double, align 8
  store double 0.000000e+00, double* %"sub'de", align 8
  %"'de3" = alloca double, align 8
  store double 0.000000e+00, double* %"'de3", align 8
  %"'de6" = alloca double, align 8
  store double 0.000000e+00, double* %"'de6", align 8
  %0 = extractvalue { i1*, double*, double* } %tapeArg, 1
  %mdyncache_fromtape_cache = alloca double*, align 8
  store double* %0, double** %mdyncache_fromtape_cache, align 8
  %1 = extractvalue { i1*, double*, double* } %tapeArg, 2
  %mdyncache_fromtape_cache9 = alloca double*, align 8
  store double* %1, double** %mdyncache_fromtape_cache9, align 8
  %tapeArg1 = extractvalue { i1*, double*, double* } %tapeArg, 0
  %2 = icmp sgt i32 %n, 0
  %smax = select i1 %2, i32 %n, i32 0
  %3 = zext i32 %smax to i64
  %4 = add nuw i64 %3, 1
  %mallocsize = mul nuw nsw i64 %4, 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %5 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !431
  %6 = getelementptr inbounds double, double* %5, i64 %iv
  %semx.0 = load double, double* %6, align 8, !invariant.group !432
  %iv.next = add nuw nsw i64 %iv, 1
  %7 = trunc i64 %iv to i32
  %cmp = icmp slt i32 %7, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %7 to i64
  %"arrayidx'ipg" = getelementptr inbounds double, double* %"x'", i64 %idxprom
  %8 = load double*, double** %mdyncache_fromtape_cache9, align 8, !dereferenceable !375, !invariant.group !433
  %9 = getelementptr inbounds double, double* %8, i64 %iv
  %sub = load double, double* %9, align 8, !invariant.group !434
  %10 = alloca i32, align 4, !size !377
  br label %for.inc, !push_to_bin !377

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !61

for.end:                                          ; preds = %for.cond
  br label %invertfor.end

invertentry:                                      ; preds = %invertfor.cond
  %11 = load double, double* %"call'de", align 8
  call void @diffearr_max(i32 %n, double* %x, double* %"x'", double %11, i1* %tapeArg1)
  store double 0.000000e+00, double* %"call'de", align 8
  %12 = load i64, i64* %"iv'ac", align 8
  %13 = load i64, i64* %"iv'ac", align 8
  %forfree8 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !431
  %14 = bitcast double* %forfree8 to i8*
  tail call void @free(i8* nonnull %14)
  %15 = load i64, i64* %"iv'ac", align 8
  %forfree10 = load double*, double** %mdyncache_fromtape_cache9, align 8, !dereferenceable !375, !invariant.group !433
  %16 = bitcast double* %forfree10 to i8*
  tail call void @free(i8* nonnull %16)
  ret void

invertfor.cond:                                   ; preds = %mergeinvertfor.cond_for.end, %invertfor.body
  %17 = load double, double* %"semx.0'de", align 8
  store double 0.000000e+00, double* %"semx.0'de", align 8
  %18 = load i64, i64* %"iv'ac", align 8
  %19 = icmp eq i64 %18, 0
  %20 = xor i1 %19, true
  %21 = select fast i1 %20, double %17, double 0.000000e+00
  %22 = load double, double* %"add'de", align 8
  %23 = fadd fast double %22, %17
  %24 = select fast i1 %19, double %22, double %23
  store double %24, double* %"add'de", align 8
  br i1 %19, label %invertentry, label %incinvertfor.cond

incinvertfor.cond:                                ; preds = %invertfor.cond
  %25 = load i64, i64* %"iv'ac", align 8
  %26 = add nsw i64 %25, -1
  store i64 %26, i64* %"iv'ac", align 8
  br label %invertfor.inc

invertfor.body:                                   ; preds = %invertfor.inc
  %27 = alloca i32, align 4, !size !377, !pop_from_bin !377
  %28 = load double, double* %"add'de", align 8, !pop_from_bin !377
  store double 0.000000e+00, double* %"add'de", align 8
  %29 = load double, double* %"semx.0'de", align 8
  %30 = fadd fast double %29, %28
  store double %30, double* %"semx.0'de", align 8
  %31 = load double, double* %"'de", align 8
  %32 = fadd fast double %31, %28
  store double %32, double* %"'de", align 8
  %33 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %34 = load i64, i64* %"iv'ac", align 8
  %_unwrap = icmp sgt i32 %n, 0
  %smax_unwrap = select i1 %_unwrap, i32 %n, i32 0
  %_unwrap2 = zext i32 %smax_unwrap to i64
  %35 = add nuw i64 %_unwrap2, 1
  %36 = extractvalue { i1*, double*, double* } %tapeArg, 2
  %37 = load i64, i64* %"iv'ac", align 8
  %38 = getelementptr inbounds double, double* %36, i64 %37
  %39 = load double, double* %38, align 8, !invariant.group !435
  %40 = call fast double @llvm.exp.f64(double %39), !read_from_bin !377, !operand0 !379
  %41 = fmul fast double %33, %40
  %42 = load double, double* %"sub'de", align 8
  %43 = fadd fast double %42, %41
  store double %43, double* %"sub'de", align 8
  %44 = load double, double* %"sub'de", align 8
  %45 = fneg fast double %44
  store double 0.000000e+00, double* %"sub'de", align 8
  %46 = load double, double* %"'de3", align 8
  %47 = fadd fast double %46, %44
  store double %47, double* %"'de3", align 8
  %48 = load double, double* %"call'de", align 8
  %49 = fadd fast double %48, %45
  store double %49, double* %"call'de", align 8
  %50 = load double, double* %"'de3", align 8
  store double 0.000000e+00, double* %"'de3", align 8
  %51 = load i64, i64* %"iv'ac", align 8
  %_unwrap4 = trunc i64 %51 to i32
  %idxprom_unwrap = sext i32 %_unwrap4 to i64
  %"arrayidx'ipg_unwrap" = getelementptr inbounds double, double* %"x'", i64 %idxprom_unwrap
  %52 = load double, double* %"arrayidx'ipg_unwrap", align 8
  %53 = fadd fast double %52, %50
  store double %53, double* %"arrayidx'ipg_unwrap", align 8
  br label %invertfor.cond

invertfor.inc:                                    ; preds = %incinvertfor.cond
  br label %invertfor.body

invertfor.end:                                    ; preds = %for.end
  store double %differeturn, double* %"add1'de", align 8
  %54 = load double, double* %"add1'de", align 8
  store double 0.000000e+00, double* %"add1'de", align 8
  %55 = load double, double* %"'de6", align 8
  %56 = fadd fast double %55, %54
  store double %56, double* %"'de6", align 8
  %57 = load double, double* %"call'de", align 8
  %58 = fadd fast double %57, %54
  store double %58, double* %"call'de", align 8
  %59 = load double, double* %"'de6", align 8
  store double 0.000000e+00, double* %"'de6", align 8
  %60 = fdiv fast double %59, %semx.0
  %61 = load double, double* %"semx.0'de", align 8
  %62 = fadd fast double %61, %60
  store double %62, double* %"semx.0'de", align 8
  br label %mergeinvertfor.cond_for.end

mergeinvertfor.cond_for.end:                      ; preds = %invertfor.end
  store i64 %3, i64* %"iv'ac", align 8
  br label %invertfor.cond
}

; Function Attrs: nounwind uwtable mustprogress
define internal void @diffearr_max(i32 %n, double* %x, double* %"x'", double %differeturn, i1* %tapeArg) #8 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"m.0'de" = alloca double, align 8
  store double 0.000000e+00, double* %"m.0'de", align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %"m.1'de" = alloca double, align 8
  store double 0.000000e+00, double* %"m.1'de", align 8
  %"'de3" = alloca double, align 8
  store double 0.000000e+00, double* %"'de3", align 8
  %cmp2_cache = alloca i1*, align 8
  %mdyncache_fromtape_cache = alloca i1*, align 8
  store i1* %tapeArg, i1** %mdyncache_fromtape_cache, align 8
  %"arrayidx'ipg" = getelementptr inbounds double, double* %"x'", i64 0
  %0 = icmp sgt i32 %n, 1
  %smax = select i1 %0, i32 %n, i32 1
  %1 = add nsw i32 %smax, -1
  %2 = zext i32 %1 to i64
  %3 = add nuw i64 %2, 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %4 = trunc i64 %iv.next to i32
  %cmp = icmp slt i32 %4, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i1*, i1** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !436
  %6 = getelementptr inbounds i1, i1* %5, i64 %iv
  %cmp2 = load i1, i1* %6, align 1, !invariant.group !437
  %7 = alloca i32, align 4, !size !377
  br i1 %cmp2, label %if.then, label %if.end, !push_to_bin !377

if.then:                                          ; preds = %for.body
  %idxprom3 = sext i32 %4 to i64
  %"arrayidx4'ipg" = getelementptr inbounds double, double* %"x'", i64 %idxprom3
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  br label %for.cond, !llvm.loop !58

for.end:                                          ; preds = %for.cond
  br label %invertfor.end

invertentry:                                      ; preds = %invertfor.cond
  %8 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %9 = load double, double* %"arrayidx'ipg", align 8
  %10 = fadd fast double %9, %8
  store double %10, double* %"arrayidx'ipg", align 8
  %11 = load i64, i64* %"iv'ac", align 8
  %12 = load i64, i64* %"iv'ac", align 8
  %forfree9 = load i1*, i1** %mdyncache_fromtape_cache, align 1, !dereferenceable !438, !invariant.group !436
  %13 = bitcast i1* %forfree9 to i8*
  tail call void @free(i8* nonnull %13)
  ret void

invertfor.cond:                                   ; preds = %mergeinvertfor.cond_for.end, %invertfor.body
  %14 = load double, double* %"m.0'de", align 8
  store double 0.000000e+00, double* %"m.0'de", align 8
  %15 = load i64, i64* %"iv'ac", align 8
  %16 = icmp eq i64 %15, 0
  %17 = xor i1 %16, true
  %18 = select fast i1 %17, double %14, double 0.000000e+00
  %19 = load double, double* %"m.1'de", align 8
  %20 = fadd fast double %19, %14
  %21 = select fast i1 %16, double %19, double %20
  store double %21, double* %"m.1'de", align 8
  %22 = select fast i1 %16, double %14, double 0.000000e+00
  %23 = load double, double* %"'de", align 8
  %24 = fadd fast double %23, %14
  %25 = select fast i1 %16, double %24, double %23
  store double %25, double* %"'de", align 8
  br i1 %16, label %invertentry, label %incinvertfor.cond

incinvertfor.cond:                                ; preds = %invertfor.cond
  %26 = load i64, i64* %"iv'ac", align 8
  %27 = add nsw i64 %26, -1
  store i64 %27, i64* %"iv'ac", align 8
  br label %invertfor.inc

invertfor.body:                                   ; preds = %invertif.end, %invertif.then
  br label %invertfor.cond

invertif.then:                                    ; preds = %invertif.end
  %28 = load double, double* %"'de3", align 8
  store double 0.000000e+00, double* %"'de3", align 8
  %29 = load i64, i64* %"iv'ac", align 8
  %iv.next_unwrap = add nuw nsw i64 %29, 1
  %_unwrap = trunc i64 %iv.next_unwrap to i32
  %idxprom3_unwrap = sext i32 %_unwrap to i64
  %"arrayidx4'ipg_unwrap" = getelementptr inbounds double, double* %"x'", i64 %idxprom3_unwrap
  %30 = load double, double* %"arrayidx4'ipg_unwrap", align 8
  %31 = fadd fast double %30, %28
  store double %31, double* %"arrayidx4'ipg_unwrap", align 8
  br label %invertfor.body

invertif.end:                                     ; preds = %invertfor.inc
  %32 = alloca i32, align 4, !size !377, !pop_from_bin !377
  %33 = load double, double* %"m.1'de", align 8, !pop_from_bin !377
  store double 0.000000e+00, double* %"m.1'de", align 8
  %34 = load i64, i64* %"iv'ac", align 8
  %_unwrap6 = icmp sgt i32 %n, 1
  %smax_unwrap = select i1 %_unwrap6, i32 %n, i32 1
  %_unwrap7 = add nsw i32 %smax_unwrap, -1
  %_unwrap8 = zext i32 %_unwrap7 to i64
  %35 = add nuw i64 %_unwrap8, 1
  %36 = load i64, i64* %"iv'ac", align 8
  %37 = getelementptr inbounds i1, i1* %tapeArg, i64 %36
  %38 = load i1, i1* %37, align 1, !invariant.group !439
  %39 = xor i1 %38, true, !read_from_bin !377, !operand0 !379
  %40 = select fast i1 %38, double %33, double 0.000000e+00, !read_from_bin !377, !operand0 !379
  %41 = load double, double* %"'de3", align 8
  %42 = fadd fast double %41, %33
  %43 = select fast i1 %38, double %42, double %41, !read_from_bin !377, !operand0 !379
  store double %43, double* %"'de3", align 8
  %44 = select fast i1 %39, double %33, double 0.000000e+00
  %45 = load double, double* %"m.0'de", align 8
  %46 = fadd fast double %45, %33
  %47 = select fast i1 %38, double %45, double %46, !read_from_bin !377, !operand0 !379
  store double %47, double* %"m.0'de", align 8
  br i1 %38, label %invertif.then, label %invertfor.body, !read_from_bin !377, !operand0 !379

invertfor.inc:                                    ; preds = %incinvertfor.cond
  br label %invertif.end

invertfor.end:                                    ; preds = %for.end
  store double %differeturn, double* %"m.0'de", align 8
  br label %mergeinvertfor.cond_for.end

mergeinvertfor.cond_for.end:                      ; preds = %invertfor.end
  store i64 %2, i64* %"iv'ac", align 8
  br label %invertfor.cond
}

; Function Attrs: uwtable mustprogress
define dso_local double @preprocess_log_wishart_prior(i32 %p, i32 %k, double %wishart.coerce0, i32 %wishart.coerce1, double* %sum_qs, double* %Qdiags, double* %icf) #0 {
entry:
  %wishart = alloca %struct.Wishart, align 8
  %0 = bitcast %struct.Wishart* %wishart to { double, i32 }*
  %1 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 0
  store double %wishart.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 1
  store i32 %wishart.coerce1, i32* %2, align 8
  %m = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 1
  %3 = load i32, i32* %m, align 8, !tbaa !63
  %add = add nsw i32 %p, %3
  %add1 = add nsw i32 %add, 1
  %add2 = add nsw i32 %p, 1
  %mul = mul nsw i32 %p, %add2
  %div = sdiv i32 %mul, 2
  %mul3 = mul nsw i32 %add1, %p
  %conv = sitofp i32 %mul3 to double
  %gamma = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %4 = load double, double* %gamma, align 8, !tbaa !64
  %5 = call fast double @llvm.log.f64(double %4)
  %call = call fast double @_ZSt3logIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 2)
  %mul4 = fmul fast double 5.000000e-01, %call
  %sub = fsub fast double %5, %mul4
  %mul5 = fmul fast double %conv, %sub
  %conv6 = sitofp i32 %add1 to double
  %mul7 = fmul fast double 5.000000e-01, %conv6
  %conv8 = sitofp i32 %p to double
  %call9 = call fast double @log_gamma_distrib(double %mul7, double %conv8) #30
  %sub10 = fsub fast double %mul5, %call9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %tiv = phi i64 [ %tiv.next, %for.inc ], [ 0, %entry ]
  %out.0 = phi double [ 0.000000e+00, %entry ], [ %sub31, %for.inc ]
  %6 = trunc i64 %tiv to i32
  %tiv.next = add nuw nsw i64 %tiv, 1
  %cmp = icmp slt i32 %6, %k
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %mul11 = mul nsw i32 %6, %p
  %idxprom = sext i32 %mul11 to i64
  %arrayidx = getelementptr inbounds double, double* %Qdiags, i64 %idxprom
  %call12 = call fast double @sqnorm(i32 %p, double* %arrayidx)
  %sub13 = sub nsw i32 %div, %p
  %mul14 = mul nsw i32 %6, %div
  %add15 = add nsw i32 %mul14, %p
  %idxprom16 = sext i32 %add15 to i64
  %arrayidx17 = getelementptr inbounds double, double* %icf, i64 %idxprom16
  %call18 = call fast double @sqnorm(i32 %sub13, double* %arrayidx17)
  %add19 = fadd fast double %call12, %call18
  %gamma20 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %7 = load double, double* %gamma20, align 8, !tbaa !64
  %mul21 = fmul fast double 5.000000e-01, %7
  %gamma22 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %8 = load double, double* %gamma22, align 8, !tbaa !64
  %mul23 = fmul fast double %mul21, %8
  %mul24 = fmul fast double %mul23, %add19
  %add25 = fadd fast double %out.0, %mul24
  %m26 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 1
  %9 = load i32, i32* %m26, align 8, !tbaa !63
  %conv27 = sitofp i32 %9 to double
  %idxprom28 = sext i32 %6 to i64
  %arrayidx29 = getelementptr inbounds double, double* %sum_qs, i64 %idxprom28
  %10 = load double, double* %arrayidx29, align 8, !tbaa !44
  %mul30 = fmul fast double %conv27, %10
  %sub31 = fsub fast double %add25, %mul30
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %6, 1
  br label %for.cond, !llvm.loop !65

for.end:                                          ; preds = %for.cond
  %conv32 = sitofp i32 %k to double
  %mul33 = fmul fast double %conv32, %sub10
  %sub34 = fsub fast double %out.0, %mul33
  ret double %sub34
}

; Function Attrs: uwtable mustprogress
define internal void @diffelog_wishart_prior(i32 %p, i32 %k, double %wishart.coerce0, i32 %wishart.coerce1, double* %sum_qs, double* %"sum_qs'", double* %Qdiags, double* %"Qdiags'", double* %icf, double* %"icf'", double %differeturn) #0 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"sub34'de" = alloca double, align 8
  store double 0.000000e+00, double* %"sub34'de", align 8
  %"out.0'de" = alloca double, align 8
  store double 0.000000e+00, double* %"out.0'de", align 8
  %"sub31'de" = alloca double, align 8
  store double 0.000000e+00, double* %"sub31'de", align 8
  %"add25'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add25'de", align 8
  %"mul30'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul30'de", align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %"mul24'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul24'de", align 8
  %"add19'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add19'de", align 8
  %"call12'de" = alloca double, align 8
  store double 0.000000e+00, double* %"call12'de", align 8
  %"call18'de" = alloca double, align 8
  store double 0.000000e+00, double* %"call18'de", align 8
  %call18_augmented_cache = alloca { double, double, double*, double* }*, align 8
  %call12_augmented_cache = alloca { double, double, double*, double* }*, align 8
  %wishart = alloca %struct.Wishart, align 8
  %0 = bitcast %struct.Wishart* %wishart to { double, i32 }*
  %1 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 0
  store double %wishart.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, i32 }, { double, i32 }* %0, i32 0, i32 1
  store i32 %wishart.coerce1, i32* %2, align 8
  %add2 = add nsw i32 %p, 1
  %mul = mul nsw i32 %p, %add2
  %div = sdiv i32 %mul, 2
  %call = call fast double @_ZSt3logIiEN9__gnu_cxx11__enable_ifIXsr12__is_integerIT_EE7__valueEdE6__typeES2_(i32 2)
  %3 = icmp sgt i32 %k, 0
  %smax = select i1 %3, i32 %k, i32 0
  %4 = zext i32 %smax to i64
  %5 = add nuw i64 %4, 1
  %mallocsize = mul nuw nsw i64 %5, 32
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %mallocsize)
  %call18_augmented_malloccache = bitcast i8* %malloccall to { double, double, double*, double* }*
  store { double, double, double*, double* }* %call18_augmented_malloccache, { double, double, double*, double* }** %call18_augmented_cache, align 32, !invariant.group !440
  %mallocsize9 = mul nuw nsw i64 %5, 32
  %malloccall10 = tail call noalias nonnull i8* @malloc(i64 %mallocsize9)
  %call12_augmented_malloccache = bitcast i8* %malloccall10 to { double, double, double*, double* }*
  store { double, double, double*, double* }* %call12_augmented_malloccache, { double, double, double*, double* }** %call12_augmented_cache, align 32, !invariant.group !441
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %6 = trunc i64 %iv to i32
  %cmp = icmp slt i32 %6, %k
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %mul11 = mul nsw i32 %6, %p
  %idxprom = sext i32 %mul11 to i64
  %"arrayidx'ipg" = getelementptr inbounds double, double* %"Qdiags'", i64 %idxprom
  %arrayidx = getelementptr inbounds double, double* %Qdiags, i64 %idxprom
  %call12_augmented = call { double, double, double*, double* } @augmented_sqnorm.3(i32 %p, double* %arrayidx, double* %"arrayidx'ipg")
  %sub13 = sub nsw i32 %div, %p
  %mul14 = mul nsw i32 %6, %div
  %add15 = add nsw i32 %mul14, %p
  %idxprom16 = sext i32 %add15 to i64
  %"arrayidx17'ipg" = getelementptr inbounds double, double* %"icf'", i64 %idxprom16
  %arrayidx17 = getelementptr inbounds double, double* %icf, i64 %idxprom16
  %call18_augmented = call { double, double, double*, double* } @augmented_sqnorm.1(i32 %sub13, double* %arrayidx17, double* %"arrayidx17'ipg")
  %7 = load { double, double, double*, double* }*, { double, double, double*, double* }** %call18_augmented_cache, align 8, !dereferenceable !375, !invariant.group !440
  %8 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %7, i64 %iv
  store { double, double, double*, double* } %call18_augmented, { double, double, double*, double* }* %8, align 32, !invariant.group !442, !write !443
  %9 = load { double, double, double*, double* }*, { double, double, double*, double* }** %call12_augmented_cache, align 8, !dereferenceable !375, !invariant.group !441
  %10 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %9, i64 %iv
  store { double, double, double*, double* } %call12_augmented, { double, double, double*, double* }* %10, align 32, !invariant.group !444, !write !445
  %gamma20 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %11 = load double, double* %gamma20, align 8, !tbaa !64, !invariant.group !446, !write !377
  %mul21 = fmul fast double 5.000000e-01, %11
  %gamma22 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %12 = load double, double* %gamma22, align 8, !tbaa !64, !invariant.group !447, !write !380
  %mul23 = fmul fast double %mul21, %12
  %m26 = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 1
  %13 = load i32, i32* %m26, align 8, !tbaa !63, !invariant.group !448, !write !379
  %conv27 = sitofp i32 %13 to double
  %idxprom28 = sext i32 %6 to i64
  %"arrayidx29'ipg" = getelementptr inbounds double, double* %"sum_qs'", i64 %idxprom28
  %14 = alloca i32, align 4, !size !449
  br label %for.inc, !push_to_bin !377

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !65

for.end:                                          ; preds = %for.cond
  br label %invertfor.end

invertentry:                                      ; preds = %invertfor.cond
  %15 = load i64, i64* %"iv'ac", align 8
  %forfree = load { double, double, double*, double* }*, { double, double, double*, double* }** %call18_augmented_cache, align 32, !dereferenceable !382, !invariant.group !440
  %16 = bitcast { double, double, double*, double* }* %forfree to i8*
  tail call void @free(i8* nonnull %16)
  %17 = load i64, i64* %"iv'ac", align 8
  %forfree11 = load { double, double, double*, double* }*, { double, double, double*, double* }** %call12_augmented_cache, align 32, !dereferenceable !382, !invariant.group !441
  %18 = bitcast { double, double, double*, double* }* %forfree11 to i8*
  tail call void @free(i8* nonnull %18)
  ret void

invertfor.cond:                                   ; preds = %mergeinvertfor.cond_for.end, %invertfor.body
  %19 = load double, double* %"out.0'de", align 8
  store double 0.000000e+00, double* %"out.0'de", align 8
  %20 = load i64, i64* %"iv'ac", align 8
  %21 = icmp eq i64 %20, 0
  %22 = xor i1 %21, true
  %23 = select fast i1 %22, double %19, double 0.000000e+00
  %24 = load double, double* %"sub31'de", align 8
  %25 = fadd fast double %24, %19
  %26 = select fast i1 %21, double %24, double %25
  store double %26, double* %"sub31'de", align 8
  br i1 %21, label %invertentry, label %incinvertfor.cond

incinvertfor.cond:                                ; preds = %invertfor.cond
  %27 = load i64, i64* %"iv'ac", align 8
  %28 = add nsw i64 %27, -1
  store i64 %28, i64* %"iv'ac", align 8
  br label %invertfor.inc

invertfor.body:                                   ; preds = %invertfor.inc
  %29 = alloca i32, align 4, !size !449, !pop_from_bin !377
  %30 = load double, double* %"sub31'de", align 8, !pop_from_bin !377
  %31 = fneg fast double %30
  store double 0.000000e+00, double* %"sub31'de", align 8
  %32 = load double, double* %"add25'de", align 8
  %33 = fadd fast double %32, %30
  store double %33, double* %"add25'de", align 8
  %34 = load double, double* %"mul30'de", align 8
  %35 = fadd fast double %34, %31
  store double %35, double* %"mul30'de", align 8
  %36 = load double, double* %"mul30'de", align 8
  %37 = load i64, i64* %"iv'ac", align 8
  %m26_unwrap = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 1
  %_unwrap = load i32, i32* %m26_unwrap, align 8, !tbaa !63, !invariant.group !448, !\30 !450
  %conv27_unwrap = sitofp i32 %_unwrap to double, !read_from_bin !377, !operand0 !379
  %m1diffe = fmul fast double %36, %conv27_unwrap
  store double 0.000000e+00, double* %"mul30'de", align 8
  %38 = load double, double* %"'de", align 8
  %39 = fadd fast double %38, %m1diffe
  store double %39, double* %"'de", align 8
  %40 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %41 = load i64, i64* %"iv'ac", align 8
  %_unwrap3 = trunc i64 %41 to i32
  %idxprom28_unwrap = sext i32 %_unwrap3 to i64
  %"arrayidx29'ipg_unwrap" = getelementptr inbounds double, double* %"sum_qs'", i64 %idxprom28_unwrap
  %42 = load double, double* %"arrayidx29'ipg_unwrap", align 8
  %43 = fadd fast double %42, %40
  store double %43, double* %"arrayidx29'ipg_unwrap", align 8
  %44 = load double, double* %"add25'de", align 8
  store double 0.000000e+00, double* %"add25'de", align 8
  %45 = load double, double* %"out.0'de", align 8
  %46 = fadd fast double %45, %44
  store double %46, double* %"out.0'de", align 8
  %47 = load double, double* %"mul24'de", align 8
  %48 = fadd fast double %47, %44
  store double %48, double* %"mul24'de", align 8
  %49 = load double, double* %"mul24'de", align 8
  %50 = load i64, i64* %"iv'ac", align 8
  %gamma20_unwrap = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %_unwrap5 = load double, double* %gamma20_unwrap, align 8, !tbaa !64, !invariant.group !446, !\31 !450
  %mul21_unwrap = fmul fast double 5.000000e-01, %_unwrap5, !read_from_bin !377, !operand1 !377
  %gamma22_unwrap = getelementptr inbounds %struct.Wishart, %struct.Wishart* %wishart, i32 0, i32 0
  %_unwrap6 = load double, double* %gamma22_unwrap, align 8, !tbaa !64, !invariant.group !447, !\32 !450
  %mul23_unwrap = fmul fast double %mul21_unwrap, %_unwrap6, !read_from_bin !377, !operand1 !380
  %m1diffeadd19 = fmul fast double %49, %mul23_unwrap
  store double 0.000000e+00, double* %"mul24'de", align 8
  %51 = load double, double* %"add19'de", align 8
  %52 = fadd fast double %51, %m1diffeadd19
  store double %52, double* %"add19'de", align 8
  %53 = load double, double* %"add19'de", align 8
  store double 0.000000e+00, double* %"add19'de", align 8
  %54 = load double, double* %"call12'de", align 8
  %55 = fadd fast double %54, %53
  store double %55, double* %"call12'de", align 8
  %56 = load double, double* %"call18'de", align 8
  %57 = fadd fast double %56, %53
  store double %57, double* %"call18'de", align 8
  %58 = load i64, i64* %"iv'ac", align 8
  %sub13_unwrap = sub nsw i32 %div, %p
  %59 = load i64, i64* %"iv'ac", align 8
  %mul14_unwrap = mul nsw i32 %_unwrap3, %div
  %add15_unwrap = add nsw i32 %mul14_unwrap, %p
  %idxprom16_unwrap = sext i32 %add15_unwrap to i64
  %arrayidx17_unwrap = getelementptr inbounds double, double* %icf, i64 %idxprom16_unwrap
  %60 = load i64, i64* %"iv'ac", align 8
  %"arrayidx17'ipg_unwrap" = getelementptr inbounds double, double* %"icf'", i64 %idxprom16_unwrap
  %61 = load double, double* %"call18'de", align 8
  %62 = load i64, i64* %"iv'ac", align 8
  %_unwrap7 = icmp sgt i32 %k, 0
  %smax_unwrap = select i1 %_unwrap7, i32 %k, i32 0
  %_unwrap8 = zext i32 %smax_unwrap to i64
  %63 = add nuw i64 %_unwrap8, 1
  %64 = load { double, double, double*, double* }*, { double, double, double*, double* }** %call18_augmented_cache, align 8, !dereferenceable !375, !invariant.group !440
  %65 = load i64, i64* %"iv'ac", align 8
  %66 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %64, i64 %65
  %67 = load { double, double, double*, double* }, { double, double, double*, double* }* %66, align 32, !invariant.group !442
  call void @diffesqnorm.2(i32 %sub13_unwrap, double* %arrayidx17_unwrap, double* %"arrayidx17'ipg_unwrap", double %61, { double, double, double*, double* } %67), !read_from_bin !377, !operand4 !443
  store double 0.000000e+00, double* %"call18'de", align 8
  %68 = load i64, i64* %"iv'ac", align 8
  %mul11_unwrap = mul nsw i32 %_unwrap3, %p
  %idxprom_unwrap = sext i32 %mul11_unwrap to i64
  %arrayidx_unwrap = getelementptr inbounds double, double* %Qdiags, i64 %idxprom_unwrap
  %69 = load i64, i64* %"iv'ac", align 8
  %"arrayidx'ipg_unwrap" = getelementptr inbounds double, double* %"Qdiags'", i64 %idxprom_unwrap
  %70 = load double, double* %"call12'de", align 8
  %71 = load i64, i64* %"iv'ac", align 8
  %72 = add nuw i64 %_unwrap8, 1
  %73 = load { double, double, double*, double* }*, { double, double, double*, double* }** %call12_augmented_cache, align 8, !dereferenceable !375, !invariant.group !441
  %74 = load i64, i64* %"iv'ac", align 8
  %75 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %73, i64 %74
  %76 = load { double, double, double*, double* }, { double, double, double*, double* }* %75, align 32, !invariant.group !444
  call void @diffesqnorm(i32 %p, double* %arrayidx_unwrap, double* %"arrayidx'ipg_unwrap", double %70, { double, double, double*, double* } %76), !read_from_bin !377, !operand4 !445
  store double 0.000000e+00, double* %"call12'de", align 8
  br label %invertfor.cond

invertfor.inc:                                    ; preds = %incinvertfor.cond
  br label %invertfor.body

invertfor.end:                                    ; preds = %for.end
  store double %differeturn, double* %"sub34'de", align 8
  %77 = load double, double* %"sub34'de", align 8
  store double 0.000000e+00, double* %"sub34'de", align 8
  %78 = load double, double* %"out.0'de", align 8
  %79 = fadd fast double %78, %77
  store double %79, double* %"out.0'de", align 8
  br label %mergeinvertfor.cond_for.end

mergeinvertfor.cond_for.end:                      ; preds = %invertfor.end
  store i64 %4, i64* %"iv'ac", align 8
  br label %invertfor.cond
}

; Function Attrs: nounwind uwtable mustprogress
define internal { double, double, double*, double* } @augmented_sqnorm.1(i32 %n, double* %x, double* %"x'") #8 {
entry:
  %0 = alloca { double, double, double*, double* }, align 8
  %"iv'ac" = alloca i64, align 8
  %_cache = alloca double*, align 8
  %_cache1 = alloca double*, align 8
  %arrayidx = getelementptr inbounds double, double* %x, i64 0
  %1 = load double, double* %arrayidx, align 8, !tbaa !44
  %2 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %0, i32 0, i32 0
  store double %1, double* %2, align 8
  %arrayidx1 = getelementptr inbounds double, double* %x, i64 0
  %3 = load double, double* %arrayidx1, align 8, !tbaa !44
  %4 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %0, i32 0, i32 1
  store double %3, double* %4, align 8
  %5 = icmp sgt i32 %n, 1
  %smax = select i1 %5, i32 %n, i32 1
  %6 = add nsw i32 %smax, -1
  %7 = zext i32 %6 to i64
  %8 = add nuw i64 %7, 1
  %mallocsize = mul nuw nsw i64 %8, 8
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %mallocsize)
  %_malloccache = bitcast i8* %malloccall to double*
  %9 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %0, i32 0, i32 2
  store double* %_malloccache, double** %9, align 8
  store double* %_malloccache, double** %_cache, align 8, !invariant.group !451
  %mallocsize2 = mul nuw nsw i64 %8, 8
  %malloccall3 = tail call noalias nonnull i8* @malloc(i64 %mallocsize2)
  %_malloccache4 = bitcast i8* %malloccall3 to double*
  %10 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %0, i32 0, i32 3
  store double* %_malloccache4, double** %10, align 8
  store double* %_malloccache4, double** %_cache1, align 8, !invariant.group !452
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %11 = trunc i64 %iv.next to i32
  %cmp = icmp slt i32 %11, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %11 to i64
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %idxprom
  %12 = load double, double* %arrayidx2, align 8, !tbaa !44
  %13 = load double*, double** %_cache, align 8, !dereferenceable !375, !invariant.group !451
  %14 = getelementptr inbounds double, double* %13, i64 %iv
  store double %12, double* %14, align 8, !invariant.group !453
  %idxprom3 = sext i32 %11 to i64
  %arrayidx4 = getelementptr inbounds double, double* %x, i64 %idxprom3
  %15 = load double, double* %arrayidx4, align 8, !tbaa !44
  %16 = load double*, double** %_cache1, align 8, !dereferenceable !375, !invariant.group !452
  %17 = getelementptr inbounds double, double* %16, i64 %iv
  store double %15, double* %17, align 8, !invariant.group !454
  br label %for.inc

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !59

for.end:                                          ; preds = %for.cond
  %18 = load { double, double, double*, double* }, { double, double, double*, double* }* %0, align 8
  ret { double, double, double*, double* } %18
}

; Function Attrs: nounwind uwtable mustprogress
define internal void @diffesqnorm.2(i32 %n, double* %x, double* %"x'", double %differeturn, { double, double, double*, double* } %tapeArg) #8 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"res.0'de" = alloca double, align 8
  store double 0.000000e+00, double* %"res.0'de", align 8
  %"mul'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul'de", align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %"'de1" = alloca double, align 8
  store double 0.000000e+00, double* %"'de1", align 8
  %"add'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add'de", align 8
  %"mul5'de" = alloca double, align 8
  store double 0.000000e+00, double* %"mul5'de", align 8
  %_cache = alloca double*, align 8
  %_cache6 = alloca double*, align 8
  %"'de12" = alloca double, align 8
  store double 0.000000e+00, double* %"'de12", align 8
  %"'de13" = alloca double, align 8
  store double 0.000000e+00, double* %"'de13", align 8
  %0 = extractvalue { double, double, double*, double* } %tapeArg, 3
  %mdyncache_fromtape_cache = alloca double*, align 8
  store double* %0, double** %mdyncache_fromtape_cache, align 8
  %1 = extractvalue { double, double, double*, double* } %tapeArg, 2
  %mdyncache_fromtape_cache16 = alloca double*, align 8
  store double* %1, double** %mdyncache_fromtape_cache16, align 8
  %"arrayidx'ipg" = getelementptr inbounds double, double* %"x'", i64 0
  %2 = extractvalue { double, double, double*, double* } %tapeArg, 0
  %"arrayidx1'ipg" = getelementptr inbounds double, double* %"x'", i64 0
  %3 = extractvalue { double, double, double*, double* } %tapeArg, 1
  %4 = icmp sgt i32 %n, 1
  %smax = select i1 %4, i32 %n, i32 1
  %5 = add nsw i32 %smax, -1
  %6 = zext i32 %5 to i64
  %7 = add nuw i64 %6, 1
  %mallocsize = mul nuw nsw i64 %7, 8
  %mallocsize7 = mul nuw nsw i64 %7, 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %8 = trunc i64 %iv.next to i32
  %cmp = icmp slt i32 %8, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %8 to i64
  %"arrayidx2'ipg" = getelementptr inbounds double, double* %"x'", i64 %idxprom
  %9 = load double*, double** %mdyncache_fromtape_cache16, align 8, !dereferenceable !375, !invariant.group !455
  %10 = getelementptr inbounds double, double* %9, i64 %iv
  %11 = load double, double* %10, align 8, !invariant.group !456
  %idxprom3 = sext i32 %8 to i64
  %"arrayidx4'ipg" = getelementptr inbounds double, double* %"x'", i64 %idxprom3
  %12 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !457
  %13 = getelementptr inbounds double, double* %12, i64 %iv
  %14 = load double, double* %13, align 8, !invariant.group !458
  %15 = alloca i32, align 4, !size !380
  br label %for.inc, !push_to_bin !377

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !59

for.end:                                          ; preds = %for.cond
  br label %invertfor.end

invertentry:                                      ; preds = %invertfor.cond
  %16 = load double, double* %"mul'de", align 8
  %m0diffe = fmul fast double %16, %3
  %m1diffe = fmul fast double %16, %2
  store double 0.000000e+00, double* %"mul'de", align 8
  %17 = load double, double* %"'de", align 8
  %18 = fadd fast double %17, %m0diffe
  store double %18, double* %"'de", align 8
  %19 = load double, double* %"'de1", align 8
  %20 = fadd fast double %19, %m1diffe
  store double %20, double* %"'de1", align 8
  %21 = load double, double* %"'de1", align 8
  store double 0.000000e+00, double* %"'de1", align 8
  %22 = load double, double* %"arrayidx1'ipg", align 8
  %23 = fadd fast double %22, %21
  store double %23, double* %"arrayidx1'ipg", align 8
  %24 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %25 = load double, double* %"arrayidx'ipg", align 8
  %26 = fadd fast double %25, %24
  store double %26, double* %"arrayidx'ipg", align 8
  %27 = load i64, i64* %"iv'ac", align 8
  %28 = load i64, i64* %"iv'ac", align 8
  %29 = load i64, i64* %"iv'ac", align 8
  %forfree15 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !457
  %30 = bitcast double* %forfree15 to i8*
  tail call void @free(i8* nonnull %30)
  %31 = load i64, i64* %"iv'ac", align 8
  %forfree = load double*, double** %mdyncache_fromtape_cache16, align 8, !dereferenceable !375, !invariant.group !455
  %32 = bitcast double* %forfree to i8*
  tail call void @free(i8* nonnull %32)
  ret void

invertfor.cond:                                   ; preds = %mergeinvertfor.cond_for.end, %invertfor.body
  %33 = load double, double* %"res.0'de", align 8
  store double 0.000000e+00, double* %"res.0'de", align 8
  %34 = load i64, i64* %"iv'ac", align 8
  %35 = icmp eq i64 %34, 0
  %36 = xor i1 %35, true
  %37 = select fast i1 %36, double %33, double 0.000000e+00
  %38 = load double, double* %"add'de", align 8
  %39 = fadd fast double %38, %33
  %40 = select fast i1 %35, double %38, double %39
  store double %40, double* %"add'de", align 8
  %41 = select fast i1 %35, double %33, double 0.000000e+00
  %42 = load double, double* %"mul'de", align 8
  %43 = fadd fast double %42, %33
  %44 = select fast i1 %35, double %43, double %42
  store double %44, double* %"mul'de", align 8
  br i1 %35, label %invertentry, label %incinvertfor.cond

incinvertfor.cond:                                ; preds = %invertfor.cond
  %45 = load i64, i64* %"iv'ac", align 8
  %46 = add nsw i64 %45, -1
  store i64 %46, i64* %"iv'ac", align 8
  br label %invertfor.inc

invertfor.body:                                   ; preds = %invertfor.inc
  %47 = alloca i32, align 4, !size !380, !pop_from_bin !377
  %48 = load double, double* %"add'de", align 8, !pop_from_bin !377
  store double 0.000000e+00, double* %"add'de", align 8
  %49 = load double, double* %"res.0'de", align 8
  %50 = fadd fast double %49, %48
  store double %50, double* %"res.0'de", align 8
  %51 = load double, double* %"mul5'de", align 8
  %52 = fadd fast double %51, %48
  store double %52, double* %"mul5'de", align 8
  %53 = load double, double* %"mul5'de", align 8
  %54 = load i64, i64* %"iv'ac", align 8
  %_unwrap = icmp sgt i32 %n, 1
  %smax_unwrap = select i1 %_unwrap, i32 %n, i32 1
  %_unwrap3 = add nsw i32 %smax_unwrap, -1
  %_unwrap4 = zext i32 %_unwrap3 to i64
  %55 = add nuw i64 %_unwrap4, 1
  %56 = extractvalue { double, double, double*, double* } %tapeArg, 3
  %57 = load i64, i64* %"iv'ac", align 8
  %58 = getelementptr inbounds double, double* %56, i64 %57
  %59 = load double, double* %58, align 8, !invariant.group !459
  %m0diffe5 = fmul fast double %53, %59, !read_from_bin !377, !operand1 !379
  %60 = load i64, i64* %"iv'ac", align 8
  %61 = add nuw i64 %_unwrap4, 1
  %62 = extractvalue { double, double, double*, double* } %tapeArg, 2
  %63 = load i64, i64* %"iv'ac", align 8
  %64 = getelementptr inbounds double, double* %62, i64 %63
  %65 = load double, double* %64, align 8, !invariant.group !460
  %m1diffe11 = fmul fast double %53, %65, !read_from_bin !377, !operand1 !377
  store double 0.000000e+00, double* %"mul5'de", align 8
  %66 = load double, double* %"'de12", align 8
  %67 = fadd fast double %66, %m0diffe5
  store double %67, double* %"'de12", align 8
  %68 = load double, double* %"'de13", align 8
  %69 = fadd fast double %68, %m1diffe11
  store double %69, double* %"'de13", align 8
  %70 = load double, double* %"'de13", align 8
  store double 0.000000e+00, double* %"'de13", align 8
  %71 = load i64, i64* %"iv'ac", align 8
  %iv.next_unwrap = add nuw nsw i64 %71, 1
  %_unwrap14 = trunc i64 %iv.next_unwrap to i32
  %idxprom3_unwrap = sext i32 %_unwrap14 to i64
  %"arrayidx4'ipg_unwrap" = getelementptr inbounds double, double* %"x'", i64 %idxprom3_unwrap
  %72 = load double, double* %"arrayidx4'ipg_unwrap", align 8
  %73 = fadd fast double %72, %70
  store double %73, double* %"arrayidx4'ipg_unwrap", align 8
  %74 = load double, double* %"'de12", align 8
  store double 0.000000e+00, double* %"'de12", align 8
  %75 = load i64, i64* %"iv'ac", align 8
  %idxprom_unwrap = sext i32 %_unwrap14 to i64
  %"arrayidx2'ipg_unwrap" = getelementptr inbounds double, double* %"x'", i64 %idxprom_unwrap
  %76 = load double, double* %"arrayidx2'ipg_unwrap", align 8
  %77 = fadd fast double %76, %74
  store double %77, double* %"arrayidx2'ipg_unwrap", align 8
  br label %invertfor.cond

invertfor.inc:                                    ; preds = %incinvertfor.cond
  br label %invertfor.body

invertfor.end:                                    ; preds = %for.end
  store double %differeturn, double* %"res.0'de", align 8
  br label %mergeinvertfor.cond_for.end

mergeinvertfor.cond_for.end:                      ; preds = %invertfor.end
  store i64 %6, i64* %"iv'ac", align 8
  br label %invertfor.cond
}

; Function Attrs: nounwind uwtable mustprogress
define internal { double, double, double*, double* } @augmented_sqnorm.3(i32 %n, double* %x, double* %"x'") #8 {
entry:
  %0 = alloca { double, double, double*, double* }, align 8
  %"iv'ac" = alloca i64, align 8
  %_cache = alloca double*, align 8
  %_cache1 = alloca double*, align 8
  %arrayidx = getelementptr inbounds double, double* %x, i64 0
  %1 = load double, double* %arrayidx, align 8, !tbaa !44
  %2 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %0, i32 0, i32 0
  store double %1, double* %2, align 8
  %arrayidx1 = getelementptr inbounds double, double* %x, i64 0
  %3 = load double, double* %arrayidx1, align 8, !tbaa !44
  %4 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %0, i32 0, i32 1
  store double %3, double* %4, align 8
  %5 = icmp sgt i32 %n, 1
  %smax = select i1 %5, i32 %n, i32 1
  %6 = add nsw i32 %smax, -1
  %7 = zext i32 %6 to i64
  %8 = add nuw i64 %7, 1
  %mallocsize = mul nuw nsw i64 %8, 8
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %mallocsize)
  %_malloccache = bitcast i8* %malloccall to double*
  %9 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %0, i32 0, i32 2
  store double* %_malloccache, double** %9, align 8
  store double* %_malloccache, double** %_cache, align 8, !invariant.group !461
  %mallocsize2 = mul nuw nsw i64 %8, 8
  %malloccall3 = tail call noalias nonnull i8* @malloc(i64 %mallocsize2)
  %_malloccache4 = bitcast i8* %malloccall3 to double*
  %10 = getelementptr inbounds { double, double, double*, double* }, { double, double, double*, double* }* %0, i32 0, i32 3
  store double* %_malloccache4, double** %10, align 8
  store double* %_malloccache4, double** %_cache1, align 8, !invariant.group !462
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %11 = trunc i64 %iv.next to i32
  %cmp = icmp slt i32 %11, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %11 to i64
  %arrayidx2 = getelementptr inbounds double, double* %x, i64 %idxprom
  %12 = load double, double* %arrayidx2, align 8, !tbaa !44
  %13 = load double*, double** %_cache, align 8, !dereferenceable !375, !invariant.group !461
  %14 = getelementptr inbounds double, double* %13, i64 %iv
  store double %12, double* %14, align 8, !invariant.group !463
  %idxprom3 = sext i32 %11 to i64
  %arrayidx4 = getelementptr inbounds double, double* %x, i64 %idxprom3
  %15 = load double, double* %arrayidx4, align 8, !tbaa !44
  %16 = load double*, double** %_cache1, align 8, !dereferenceable !375, !invariant.group !462
  %17 = getelementptr inbounds double, double* %16, i64 %iv
  store double %15, double* %17, align 8, !invariant.group !464
  br label %for.inc

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !59

for.end:                                          ; preds = %for.cond
  %18 = load { double, double, double*, double* }, { double, double, double*, double* }* %0, align 8
  ret { double, double, double*, double* } %18
}

; Function Attrs: nounwind uwtable mustprogress
define internal { i1*, double } @augmented_arr_max.4(i32 %n, double* %x, double* %"x'") #8 {
entry:
  %0 = alloca { i1*, double }, align 8
  %1 = getelementptr inbounds { i1*, double }, { i1*, double }* %0, i32 0, i32 0
  %"iv'ac" = alloca i64, align 8
  %cmp2_cache = alloca i1*, align 8
  %arrayidx = getelementptr inbounds double, double* %x, i64 0
  %2 = load double, double* %arrayidx, align 8, !tbaa !44
  %3 = icmp sgt i32 %n, 1
  %smax = select i1 %3, i32 %n, i32 1
  %4 = add nsw i32 %smax, -1
  %5 = zext i32 %4 to i64
  %6 = add nuw i64 %5, 1
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %6)
  %cmp2_malloccache = bitcast i8* %malloccall to i1*
  store i1* %cmp2_malloccache, i1** %1, align 8
  store i1* %cmp2_malloccache, i1** %cmp2_cache, align 1, !invariant.group !465
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %m.0 = phi double [ %2, %entry ], [ %m.1, %for.inc ]
  %iv.next = add nuw nsw i64 %iv, 1
  %7 = trunc i64 %iv.next to i32
  %cmp = icmp slt i32 %7, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %7 to i64
  %arrayidx1 = getelementptr inbounds double, double* %x, i64 %idxprom
  %8 = load double, double* %arrayidx1, align 8, !tbaa !44
  %cmp2 = fcmp fast olt double %m.0, %8
  %9 = load i1*, i1** %cmp2_cache, align 8, !dereferenceable !375, !invariant.group !465
  %10 = getelementptr inbounds i1, i1* %9, i64 %iv
  store i1 %cmp2, i1* %10, align 1, !invariant.group !466
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %idxprom3 = sext i32 %7 to i64
  %arrayidx4 = getelementptr inbounds double, double* %x, i64 %idxprom3
  %11 = load double, double* %arrayidx4, align 8, !tbaa !44
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %m.1 = phi double [ %11, %if.then ], [ %m.0, %for.body ]
  br label %for.inc

for.inc:                                          ; preds = %if.end
  br label %for.cond, !llvm.loop !58

for.end:                                          ; preds = %for.cond
  %12 = insertvalue { i8*, double } undef, double %m.0, 1
  %13 = getelementptr inbounds { i1*, double }, { i1*, double }* %0, i32 0, i32 1
  store double %m.0, double* %13, align 8
  %14 = load { i1*, double }, { i1*, double }* %0, align 8
  ret { i1*, double } %14
}

; Function Attrs: nounwind uwtable mustprogress
define internal { i1*, double*, double* } @augmented_log_sum_exp.5(i32 %n, double* %x, double* %"x'") #8 {
entry:
  %0 = alloca { i1*, double*, double* }, align 8
  %"iv'ac" = alloca i64, align 8
  %semx.0_cache = alloca double*, align 8
  %sub_cache = alloca double*, align 8
  %call_augmented = call { i1*, double } @augmented_arr_max.4(i32 %n, double* %x, double* %"x'")
  %subcache = extractvalue { i1*, double } %call_augmented, 0
  %1 = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %0, i32 0, i32 0
  store i1* %subcache, i1** %1, align 8
  %call = extractvalue { i1*, double } %call_augmented, 1
  %2 = icmp sgt i32 %n, 0
  %smax = select i1 %2, i32 %n, i32 0
  %3 = zext i32 %smax to i64
  %4 = add nuw i64 %3, 1
  %mallocsize = mul nuw nsw i64 %4, 8
  %malloccall = tail call noalias nonnull i8* @malloc(i64 %mallocsize)
  %semx.0_malloccache = bitcast i8* %malloccall to double*
  %5 = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %0, i32 0, i32 1
  store double* %semx.0_malloccache, double** %5, align 8
  store double* %semx.0_malloccache, double** %semx.0_cache, align 8, !invariant.group !467
  %mallocsize1 = mul nuw nsw i64 %4, 8
  %malloccall2 = tail call noalias nonnull i8* @malloc(i64 %mallocsize1)
  %sub_malloccache = bitcast i8* %malloccall2 to double*
  %6 = getelementptr inbounds { i1*, double*, double* }, { i1*, double*, double* }* %0, i32 0, i32 2
  store double* %sub_malloccache, double** %6, align 8
  store double* %sub_malloccache, double** %sub_cache, align 8, !invariant.group !468
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %semx.0 = phi double [ 0.000000e+00, %entry ], [ %add, %for.inc ]
  %7 = load double*, double** %semx.0_cache, align 8, !dereferenceable !375, !invariant.group !467
  %8 = getelementptr inbounds double, double* %7, i64 %iv
  store double %semx.0, double* %8, align 8, !invariant.group !469
  %iv.next = add nuw nsw i64 %iv, 1
  %9 = trunc i64 %iv to i32
  %cmp = icmp slt i32 %9, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %9 to i64
  %arrayidx = getelementptr inbounds double, double* %x, i64 %idxprom
  %10 = load double, double* %arrayidx, align 8, !tbaa !44
  %sub = fsub fast double %10, %call
  %11 = load double*, double** %sub_cache, align 8, !dereferenceable !375, !invariant.group !468
  %12 = getelementptr inbounds double, double* %11, i64 %iv
  store double %sub, double* %12, align 8, !invariant.group !470
  %13 = call fast double @llvm.exp.f64(double %sub)
  %add = fadd fast double %semx.0, %13
  br label %for.inc

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !61

for.end:                                          ; preds = %for.cond
  %14 = load { i1*, double*, double* }, { i1*, double*, double* }* %0, align 8
  ret { i1*, double*, double* } %14
}

; Function Attrs: nounwind uwtable mustprogress
define internal void @diffelog_sum_exp.6(i32 %n, double* %x, double* %"x'", double %differeturn, { i1*, double*, double* } %tapeArg) #8 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"add1'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add1'de", align 8
  %"call'de" = alloca double, align 8
  store double 0.000000e+00, double* %"call'de", align 8
  %"semx.0'de" = alloca double, align 8
  store double 0.000000e+00, double* %"semx.0'de", align 8
  %"add'de" = alloca double, align 8
  store double 0.000000e+00, double* %"add'de", align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %sub_cache = alloca double*, align 8
  %"sub'de" = alloca double, align 8
  store double 0.000000e+00, double* %"sub'de", align 8
  %"'de3" = alloca double, align 8
  store double 0.000000e+00, double* %"'de3", align 8
  %"'de6" = alloca double, align 8
  store double 0.000000e+00, double* %"'de6", align 8
  %0 = extractvalue { i1*, double*, double* } %tapeArg, 1
  %mdyncache_fromtape_cache = alloca double*, align 8
  store double* %0, double** %mdyncache_fromtape_cache, align 8
  %1 = extractvalue { i1*, double*, double* } %tapeArg, 2
  %mdyncache_fromtape_cache9 = alloca double*, align 8
  store double* %1, double** %mdyncache_fromtape_cache9, align 8
  %tapeArg1 = extractvalue { i1*, double*, double* } %tapeArg, 0
  %2 = icmp sgt i32 %n, 0
  %smax = select i1 %2, i32 %n, i32 0
  %3 = zext i32 %smax to i64
  %4 = add nuw i64 %3, 1
  %mallocsize = mul nuw nsw i64 %4, 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %5 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !471
  %6 = getelementptr inbounds double, double* %5, i64 %iv
  %semx.0 = load double, double* %6, align 8, !invariant.group !472
  %iv.next = add nuw nsw i64 %iv, 1
  %7 = trunc i64 %iv to i32
  %cmp = icmp slt i32 %7, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %7 to i64
  %"arrayidx'ipg" = getelementptr inbounds double, double* %"x'", i64 %idxprom
  %8 = load double*, double** %mdyncache_fromtape_cache9, align 8, !dereferenceable !375, !invariant.group !473
  %9 = getelementptr inbounds double, double* %8, i64 %iv
  %sub = load double, double* %9, align 8, !invariant.group !474
  %10 = alloca i32, align 4, !size !377
  br label %for.inc, !push_to_bin !377

for.inc:                                          ; preds = %for.body
  br label %for.cond, !llvm.loop !61

for.end:                                          ; preds = %for.cond
  br label %invertfor.end

invertentry:                                      ; preds = %invertfor.cond
  %11 = load double, double* %"call'de", align 8
  call void @diffearr_max.7(i32 %n, double* %x, double* %"x'", double %11, i1* %tapeArg1)
  store double 0.000000e+00, double* %"call'de", align 8
  %12 = load i64, i64* %"iv'ac", align 8
  %13 = load i64, i64* %"iv'ac", align 8
  %forfree8 = load double*, double** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !471
  %14 = bitcast double* %forfree8 to i8*
  tail call void @free(i8* nonnull %14)
  %15 = load i64, i64* %"iv'ac", align 8
  %forfree10 = load double*, double** %mdyncache_fromtape_cache9, align 8, !dereferenceable !375, !invariant.group !473
  %16 = bitcast double* %forfree10 to i8*
  tail call void @free(i8* nonnull %16)
  ret void

invertfor.cond:                                   ; preds = %mergeinvertfor.cond_for.end, %invertfor.body
  %17 = load double, double* %"semx.0'de", align 8
  store double 0.000000e+00, double* %"semx.0'de", align 8
  %18 = load i64, i64* %"iv'ac", align 8
  %19 = icmp eq i64 %18, 0
  %20 = xor i1 %19, true
  %21 = select fast i1 %20, double %17, double 0.000000e+00
  %22 = load double, double* %"add'de", align 8
  %23 = fadd fast double %22, %17
  %24 = select fast i1 %19, double %22, double %23
  store double %24, double* %"add'de", align 8
  br i1 %19, label %invertentry, label %incinvertfor.cond

incinvertfor.cond:                                ; preds = %invertfor.cond
  %25 = load i64, i64* %"iv'ac", align 8
  %26 = add nsw i64 %25, -1
  store i64 %26, i64* %"iv'ac", align 8
  br label %invertfor.inc

invertfor.body:                                   ; preds = %invertfor.inc
  %27 = alloca i32, align 4, !size !377, !pop_from_bin !377
  %28 = load double, double* %"add'de", align 8, !pop_from_bin !377
  store double 0.000000e+00, double* %"add'de", align 8
  %29 = load double, double* %"semx.0'de", align 8
  %30 = fadd fast double %29, %28
  store double %30, double* %"semx.0'de", align 8
  %31 = load double, double* %"'de", align 8
  %32 = fadd fast double %31, %28
  store double %32, double* %"'de", align 8
  %33 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %34 = load i64, i64* %"iv'ac", align 8
  %_unwrap = icmp sgt i32 %n, 0
  %smax_unwrap = select i1 %_unwrap, i32 %n, i32 0
  %_unwrap2 = zext i32 %smax_unwrap to i64
  %35 = add nuw i64 %_unwrap2, 1
  %36 = extractvalue { i1*, double*, double* } %tapeArg, 2
  %37 = load i64, i64* %"iv'ac", align 8
  %38 = getelementptr inbounds double, double* %36, i64 %37
  %39 = load double, double* %38, align 8, !invariant.group !475
  %40 = call fast double @llvm.exp.f64(double %39), !read_from_bin !377, !operand0 !379
  %41 = fmul fast double %33, %40
  %42 = load double, double* %"sub'de", align 8
  %43 = fadd fast double %42, %41
  store double %43, double* %"sub'de", align 8
  %44 = load double, double* %"sub'de", align 8
  %45 = fneg fast double %44
  store double 0.000000e+00, double* %"sub'de", align 8
  %46 = load double, double* %"'de3", align 8
  %47 = fadd fast double %46, %44
  store double %47, double* %"'de3", align 8
  %48 = load double, double* %"call'de", align 8
  %49 = fadd fast double %48, %45
  store double %49, double* %"call'de", align 8
  %50 = load double, double* %"'de3", align 8
  store double 0.000000e+00, double* %"'de3", align 8
  %51 = load i64, i64* %"iv'ac", align 8
  %_unwrap4 = trunc i64 %51 to i32
  %idxprom_unwrap = sext i32 %_unwrap4 to i64
  %"arrayidx'ipg_unwrap" = getelementptr inbounds double, double* %"x'", i64 %idxprom_unwrap
  %52 = load double, double* %"arrayidx'ipg_unwrap", align 8
  %53 = fadd fast double %52, %50
  store double %53, double* %"arrayidx'ipg_unwrap", align 8
  br label %invertfor.cond

invertfor.inc:                                    ; preds = %incinvertfor.cond
  br label %invertfor.body

invertfor.end:                                    ; preds = %for.end
  store double %differeturn, double* %"add1'de", align 8
  %54 = load double, double* %"add1'de", align 8
  store double 0.000000e+00, double* %"add1'de", align 8
  %55 = load double, double* %"'de6", align 8
  %56 = fadd fast double %55, %54
  store double %56, double* %"'de6", align 8
  %57 = load double, double* %"call'de", align 8
  %58 = fadd fast double %57, %54
  store double %58, double* %"call'de", align 8
  %59 = load double, double* %"'de6", align 8
  store double 0.000000e+00, double* %"'de6", align 8
  %60 = fdiv fast double %59, %semx.0
  %61 = load double, double* %"semx.0'de", align 8
  %62 = fadd fast double %61, %60
  store double %62, double* %"semx.0'de", align 8
  br label %mergeinvertfor.cond_for.end

mergeinvertfor.cond_for.end:                      ; preds = %invertfor.end
  store i64 %3, i64* %"iv'ac", align 8
  br label %invertfor.cond
}

; Function Attrs: nounwind uwtable mustprogress
define internal void @diffearr_max.7(i32 %n, double* %x, double* %"x'", double %differeturn, i1* %tapeArg) #8 {
entry:
  %"iv'ac" = alloca i64, align 8
  %"m.0'de" = alloca double, align 8
  store double 0.000000e+00, double* %"m.0'de", align 8
  %"'de" = alloca double, align 8
  store double 0.000000e+00, double* %"'de", align 8
  %"m.1'de" = alloca double, align 8
  store double 0.000000e+00, double* %"m.1'de", align 8
  %"'de3" = alloca double, align 8
  store double 0.000000e+00, double* %"'de3", align 8
  %cmp2_cache = alloca i1*, align 8
  %mdyncache_fromtape_cache = alloca i1*, align 8
  store i1* %tapeArg, i1** %mdyncache_fromtape_cache, align 8
  %"arrayidx'ipg" = getelementptr inbounds double, double* %"x'", i64 0
  %0 = icmp sgt i32 %n, 1
  %smax = select i1 %0, i32 %n, i32 1
  %1 = add nsw i32 %smax, -1
  %2 = zext i32 %1 to i64
  %3 = add nuw i64 %2, 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %iv = phi i64 [ %iv.next, %for.inc ], [ 0, %entry ]
  %iv.next = add nuw nsw i64 %iv, 1
  %4 = trunc i64 %iv.next to i32
  %cmp = icmp slt i32 %4, %n
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i1*, i1** %mdyncache_fromtape_cache, align 8, !dereferenceable !375, !invariant.group !476
  %6 = getelementptr inbounds i1, i1* %5, i64 %iv
  %cmp2 = load i1, i1* %6, align 1, !invariant.group !477
  %7 = alloca i32, align 4, !size !377
  br i1 %cmp2, label %if.then, label %if.end, !push_to_bin !377

if.then:                                          ; preds = %for.body
  %idxprom3 = sext i32 %4 to i64
  %"arrayidx4'ipg" = getelementptr inbounds double, double* %"x'", i64 %idxprom3
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  br label %for.cond, !llvm.loop !58

for.end:                                          ; preds = %for.cond
  br label %invertfor.end

invertentry:                                      ; preds = %invertfor.cond
  %8 = load double, double* %"'de", align 8
  store double 0.000000e+00, double* %"'de", align 8
  %9 = load double, double* %"arrayidx'ipg", align 8
  %10 = fadd fast double %9, %8
  store double %10, double* %"arrayidx'ipg", align 8
  %11 = load i64, i64* %"iv'ac", align 8
  %12 = load i64, i64* %"iv'ac", align 8
  %forfree9 = load i1*, i1** %mdyncache_fromtape_cache, align 1, !dereferenceable !438, !invariant.group !476
  %13 = bitcast i1* %forfree9 to i8*
  tail call void @free(i8* nonnull %13)
  ret void

invertfor.cond:                                   ; preds = %mergeinvertfor.cond_for.end, %invertfor.body
  %14 = load double, double* %"m.0'de", align 8
  store double 0.000000e+00, double* %"m.0'de", align 8
  %15 = load i64, i64* %"iv'ac", align 8
  %16 = icmp eq i64 %15, 0
  %17 = xor i1 %16, true
  %18 = select fast i1 %17, double %14, double 0.000000e+00
  %19 = load double, double* %"m.1'de", align 8
  %20 = fadd fast double %19, %14
  %21 = select fast i1 %16, double %19, double %20
  store double %21, double* %"m.1'de", align 8
  %22 = select fast i1 %16, double %14, double 0.000000e+00
  %23 = load double, double* %"'de", align 8
  %24 = fadd fast double %23, %14
  %25 = select fast i1 %16, double %24, double %23
  store double %25, double* %"'de", align 8
  br i1 %16, label %invertentry, label %incinvertfor.cond

incinvertfor.cond:                                ; preds = %invertfor.cond
  %26 = load i64, i64* %"iv'ac", align 8
  %27 = add nsw i64 %26, -1
  store i64 %27, i64* %"iv'ac", align 8
  br label %invertfor.inc

invertfor.body:                                   ; preds = %invertif.end, %invertif.then
  br label %invertfor.cond

invertif.then:                                    ; preds = %invertif.end
  %28 = load double, double* %"'de3", align 8
  store double 0.000000e+00, double* %"'de3", align 8
  %29 = load i64, i64* %"iv'ac", align 8
  %iv.next_unwrap = add nuw nsw i64 %29, 1
  %_unwrap = trunc i64 %iv.next_unwrap to i32
  %idxprom3_unwrap = sext i32 %_unwrap to i64
  %"arrayidx4'ipg_unwrap" = getelementptr inbounds double, double* %"x'", i64 %idxprom3_unwrap
  %30 = load double, double* %"arrayidx4'ipg_unwrap", align 8
  %31 = fadd fast double %30, %28
  store double %31, double* %"arrayidx4'ipg_unwrap", align 8
  br label %invertfor.body

invertif.end:                                     ; preds = %invertfor.inc
  %32 = alloca i32, align 4, !size !377, !pop_from_bin !377
  %33 = load double, double* %"m.1'de", align 8, !pop_from_bin !377
  store double 0.000000e+00, double* %"m.1'de", align 8
  %34 = load i64, i64* %"iv'ac", align 8
  %_unwrap6 = icmp sgt i32 %n, 1
  %smax_unwrap = select i1 %_unwrap6, i32 %n, i32 1
  %_unwrap7 = add nsw i32 %smax_unwrap, -1
  %_unwrap8 = zext i32 %_unwrap7 to i64
  %35 = add nuw i64 %_unwrap8, 1
  %36 = load i64, i64* %"iv'ac", align 8
  %37 = getelementptr inbounds i1, i1* %tapeArg, i64 %36
  %38 = load i1, i1* %37, align 1, !invariant.group !478
  %39 = xor i1 %38, true, !read_from_bin !377, !operand0 !379
  %40 = select fast i1 %38, double %33, double 0.000000e+00, !read_from_bin !377, !operand0 !379
  %41 = load double, double* %"'de3", align 8
  %42 = fadd fast double %41, %33
  %43 = select fast i1 %38, double %42, double %41, !read_from_bin !377, !operand0 !379
  store double %43, double* %"'de3", align 8
  %44 = select fast i1 %39, double %33, double 0.000000e+00
  %45 = load double, double* %"m.0'de", align 8
  %46 = fadd fast double %45, %33
  %47 = select fast i1 %38, double %45, double %46, !read_from_bin !377, !operand0 !379
  store double %47, double* %"m.0'de", align 8
  br i1 %38, label %invertif.then, label %invertfor.body, !read_from_bin !377, !operand0 !379

invertfor.inc:                                    ; preds = %incinvertfor.cond
  br label %invertif.end

invertfor.end:                                    ; preds = %for.end
  store double %differeturn, double* %"m.0'de", align 8
  br label %mergeinvertfor.cond_for.end

mergeinvertfor.cond_for.end:                      ; preds = %invertfor.end
  store i64 %2, i64* %"iv'ac", align 8
  br label %invertfor.cond
}

attributes #0 = { uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #1 = { argmemonly nofree nosync nounwind willreturn }
attributes #2 = { "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #3 = { nounwind readonly willreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #4 = { nounwind "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #5 = { inlinehint uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #6 = { nounwind uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #7 = { uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #8 = { nounwind uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #11 = { norecurse uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #12 = { inlinehint nounwind uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #14 = { nounwind readnone }
attributes #15 = { noinline noreturn nounwind }
attributes #16 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #17 = { nounwind readnone uwtable willreturn mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #18 = { nobuiltin nounwind "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #19 = { nobuiltin allocsize(0) "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #20 = { uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #21 = { uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #22 = { inlinehint uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #23 = { alwaysinline nounwind uwtable mustprogress "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #24 = { nounwind uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-infs-fp-math"="true" "no-jump-tables"="false" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #25 = { noreturn "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #26 = { uwtable "denormal-fp-math"="preserve-sign,preserve-sign" "denormal-fp-math-f32"="ieee,ieee" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="true" "no-nans-fp-math"="true" "no-signed-zeros-fp-math"="true" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" "unsafe-fp-math"="true" "use-soft-float"="false" }
attributes #27 = { argmemonly nofree nosync nounwind willreturn writeonly }
attributes #28 = { nounwind readonly willreturn }
attributes #29 = { noreturn nounwind }
attributes #30 = { nounwind readnone willreturn }
attributes #31 = { noreturn }
attributes #32 = { builtin nounwind }
attributes #33 = { builtin allocsize(0) }
attributes #34 = { allocsize(0) }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 12.0.1 (https://github.com/llvm/llvm-project.git fed41342a82f5a3a9201819a82bf7a48313e296b)"}
!2 = !{!3, !3, i64 0}
!3 = !{!"any pointer", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C++ TBAA"}
!6 = !{!7, !4, i64 18}
!7 = !{!"_ZTS6dirent", !8, i64 0, !8, i64 8, !9, i64 16, !4, i64 18, !4, i64 19}
!8 = !{!"long", !4, i64 0}
!9 = !{!"short", !4, i64 0}
!10 = distinct !{!10, !11, !12}
!11 = !{!"llvm.loop.mustprogress"}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = !{!8, !8, i64 0}
!14 = !{!4, !4, i64 0}
!15 = !{!16, !8, i64 0}
!16 = !{!"_ZTS7timeval", !8, i64 0, !8, i64 8}
!17 = !{!16, !8, i64 8}
!18 = !{!19, !19, i64 0}
!19 = !{!"bool", !4, i64 0}
!20 = !{!21, !21, i64 0}
!21 = !{!"int", !4, i64 0}
!22 = distinct !{!22, !11, !12}
!23 = distinct !{!23, !11, !12}
!24 = distinct !{!24, !11, !12}
!25 = distinct !{!25, !11, !12}
!26 = distinct !{!26, !11, !12}
!27 = !{i8 0, i8 2}
!28 = distinct !{!28, !11, !12}
!29 = distinct !{!29, !11, !12}
!30 = distinct !{!30, !11, !12}
!31 = distinct !{!31, !11, !12}
!32 = !{!33, !3, i64 0}
!33 = !{!"_ZTSNSt12_Vector_baseIdSaIdEE17_Vector_impl_dataE", !3, i64 0, !3, i64 8, !3, i64 16}
!34 = !{!35, !19, i64 0}
!35 = !{!"_ZTS13GMMParameters", !19, i64 0}
!36 = !{!37, !21, i64 4}
!37 = !{!"_ZTS8GMMInput", !21, i64 0, !21, i64 4, !21, i64 8, !38, i64 16, !38, i64 40, !38, i64 64, !38, i64 88, !39, i64 112}
!38 = !{!"_ZTSSt6vectorIdSaIdEE"}
!39 = !{!"_ZTS7Wishart", !40, i64 0, !21, i64 8}
!40 = !{!"double", !4, i64 0}
!41 = !{!37, !21, i64 0}
!42 = !{!43, !40, i64 0}
!43 = !{!"_ZTS9GMMOutput", !40, i64 0, !38, i64 8}
!44 = !{!40, !40, i64 0}
!45 = distinct !{!45, !11, !12}
!46 = distinct !{!46, !11, !12}
!47 = distinct !{!47, !11, !12}
!48 = distinct !{!48, !12}
!49 = !{!50, !3, i64 0}
!50 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorIS6_SaIS6_EEEE", !3, i64 0}
!51 = !{!37, !21, i64 8}
!52 = !{i64 0, i64 8, !44, i64 8, i64 4, !20}
!53 = !{!54, !54, i64 0}
!54 = !{!"vtable pointer", !5, i64 0}
!55 = !{!56, !3, i64 0}
!56 = !{!"_ZTSNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_Vector_impl_dataE", !3, i64 0, !3, i64 8, !3, i64 16}
!57 = !{!56, !3, i64 8}
!58 = distinct !{!58, !11, !12}
!59 = distinct !{!59, !11, !12}
!60 = distinct !{!60, !11, !12}
!61 = distinct !{!61, !11, !12}
!62 = distinct !{!62, !11, !12}
!63 = !{!39, !21, i64 8}
!64 = !{!39, !40, i64 0}
!65 = distinct !{!65, !11, !12}
!66 = distinct !{!66, !11, !12}
!67 = distinct !{!67, !11, !12}
!68 = distinct !{!68, !11, !12}
!69 = distinct !{!69, !11, !12}
!70 = distinct !{!70, !11, !12}
!71 = distinct !{!71, !11, !12}
!72 = distinct !{!72, !11, !12}
!73 = distinct !{!73, !11, !12}
!74 = distinct !{!74, !11, !12}
!75 = distinct !{!75, !11, !12}
!76 = distinct !{!76, !11, !12}
!77 = distinct !{!77, !11, !12}
!78 = distinct !{!78, !11, !12}
!79 = distinct !{!79, !11, !12}
!80 = distinct !{!80, !11, !12}
!81 = distinct !{!81, !11, !12}
!82 = distinct !{!82, !11, !12}
!83 = !{!84, !84, i64 0}
!84 = !{!"float", !4, i64 0}
!85 = distinct !{!85, !11, !12}
!86 = distinct !{!86, !11, !12}
!87 = distinct !{!87, !11, !12}
!88 = distinct !{!88, !11, !12}
!89 = distinct !{!89, !11, !12}
!90 = distinct !{!90, !11, !12}
!91 = distinct !{!91, !11, !12}
!92 = distinct !{!92, !11, !12}
!93 = distinct !{!93, !11, !12}
!94 = distinct !{!94, !11, !12}
!95 = distinct !{!95, !11, !12}
!96 = distinct !{!96, !11, !12}
!97 = distinct !{!97, !11, !12}
!98 = distinct !{!98, !11, !12}
!99 = distinct !{!99, !11, !12}
!100 = distinct !{!100, !11, !12}
!101 = distinct !{!101, !11, !12}
!102 = distinct !{!102, !11, !12}
!103 = distinct !{!103, !11, !12}
!104 = distinct !{!104, !11, !12}
!105 = distinct !{!105, !11, !12}
!106 = distinct !{!106, !11, !12}
!107 = distinct !{!107, !11, !12}
!108 = distinct !{!108, !11, !12}
!109 = distinct !{!109, !11, !12}
!110 = distinct !{!110, !11, !12}
!111 = distinct !{!111, !11, !12}
!112 = distinct !{!112, !11, !12}
!113 = distinct !{!113, !11, !12}
!114 = distinct !{!114, !11, !12}
!115 = distinct !{!115, !11, !12}
!116 = distinct !{!116, !11, !12}
!117 = !{!118, !118, i64 0}
!118 = !{!"_ZTSN5adept15ArrayPrintStyleE", !4, i64 0}
!119 = !{!120, !19, i64 145}
!120 = !{!"_ZTSN5adept5StackE", !3, i64 40, !121, i64 48, !121, i64 72, !122, i64 96, !123, i64 120, !21, i64 128, !21, i64 132, !21, i64 136, !21, i64 140, !19, i64 144, !19, i64 145, !19, i64 146, !19, i64 147, !19, i64 148}
!121 = !{!"_ZTSSt6vectorIiSaIiEE"}
!122 = !{!"_ZTSNSt7__cxx114listIN5adept3GapESaIS2_EEE"}
!123 = !{!"_ZTSSt14_List_iteratorIN5adept3GapEE", !3, i64 0}
!124 = !{!120, !3, i64 40}
!125 = !{!126, !3, i64 0}
!126 = !{!"_ZTSNSt12_Vector_baseIiSaIiEE17_Vector_impl_dataE", !3, i64 0, !3, i64 8, !3, i64 16}
!127 = !{!126, !3, i64 8}
!128 = !{!129, !3, i64 0}
!129 = !{!"_ZTSN5adept8internal16StackStorageOrigE", !3, i64 0, !3, i64 8, !3, i64 16, !21, i64 24, !21, i64 28, !21, i64 32, !21, i64 36}
!130 = !{!129, !3, i64 8}
!131 = !{!129, !3, i64 16}
!132 = !{!129, !21, i64 24}
!133 = !{!134, !21, i64 0}
!134 = !{!"_ZTSN5adept8internal9StatementE", !21, i64 0, !21, i64 4}
!135 = !{!134, !21, i64 4}
!136 = distinct !{!136, !11, !12}
!137 = distinct !{!137, !11, !12}
!138 = !{!120, !19, i64 144}
!139 = distinct !{!139, !11, !12}
!140 = distinct !{!140, !11, !12}
!141 = !{!120, !21, i64 140}
!142 = !{!143, !21, i64 4}
!143 = !{!"_ZTSN5adept3GapE", !21, i64 0, !21, i64 4}
!144 = !{!143, !21, i64 0}
!145 = !{i64 0, i64 8, !2}
!146 = distinct !{!146, !11, !12}
!147 = !{!120, !21, i64 128}
!148 = !{!120, !21, i64 136}
!149 = !{!150, !3, i64 0}
!150 = !{!"_ZTSNSt8__detail15_List_node_baseE", !3, i64 0, !3, i64 8}
!151 = !{!123, !3, i64 0}
!152 = !{!153, !3, i64 0}
!153 = !{!"_ZTSSt20_List_const_iteratorIN5adept3GapEE", !3, i64 0}
!154 = distinct !{!154, !11, !12}
!155 = !{!150, !3, i64 8}
!156 = distinct !{!156, !11, !12}
!157 = distinct !{!157, !11, !12}
!158 = distinct !{!158, !11, !12}
!159 = distinct !{!159, !11, !12}
!160 = distinct !{!160, !11, !12}
!161 = !{!120, !21, i64 132}
!162 = distinct !{!162, !11, !12}
!163 = !{!120, !19, i64 146}
!164 = distinct !{!164, !11, !12}
!165 = distinct !{!165, !11, !12}
!166 = !{!129, !21, i64 28}
!167 = !{!129, !21, i64 32}
!168 = !{!129, !21, i64 36}
!169 = distinct !{!169, !11, !12}
!170 = distinct !{!170, !11, !12}
!171 = distinct !{!171, !11, !12}
!172 = distinct !{!172, !11, !12}
!173 = distinct !{!173, !11, !12}
!174 = distinct !{!174, !11, !12}
!175 = distinct !{!175, !11, !12}
!176 = distinct !{!176, !11, !12}
!177 = distinct !{!177, !11, !12}
!178 = distinct !{!178, !11, !12}
!179 = distinct !{!179, !11, !12}
!180 = distinct !{!180, !11, !12}
!181 = distinct !{!181, !11, !12}
!182 = distinct !{!182, !11, !12}
!183 = distinct !{!183, !11, !12}
!184 = distinct !{!184, !11, !12}
!185 = distinct !{!185, !11, !12}
!186 = distinct !{!186, !11, !12}
!187 = distinct !{!187, !11, !12}
!188 = distinct !{!188, !11, !12}
!189 = distinct !{!189, !11, !12}
!190 = distinct !{!190, !11, !12}
!191 = distinct !{!191, !11, !12}
!192 = distinct !{!192, !11, !12}
!193 = distinct !{!193, !11, !12}
!194 = distinct !{!194, !11, !12}
!195 = distinct !{!195, !11, !12}
!196 = distinct !{!196, !11, !12}
!197 = distinct !{!197, !11, !12}
!198 = !{!199, !3, i64 8}
!199 = !{!"_ZTSNSt12_Vector_baseIN5adept5BlockILi2EdEESaIS2_EE17_Vector_impl_dataE", !3, i64 0, !3, i64 8, !3, i64 16}
!200 = !{!199, !3, i64 0}
!201 = distinct !{!201, !11, !12}
!202 = distinct !{!202, !11, !12}
!203 = distinct !{!203, !11, !12}
!204 = distinct !{!204, !11, !12}
!205 = distinct !{!205, !11, !12}
!206 = distinct !{!206, !11, !12}
!207 = distinct !{!207, !11, !12}
!208 = distinct !{!208, !11, !12}
!209 = distinct !{!209, !11, !12}
!210 = distinct !{!210, !11, !12}
!211 = distinct !{!211, !11, !12}
!212 = distinct !{!212, !11, !12}
!213 = distinct !{!213, !11, !12}
!214 = distinct !{!214, !11, !12}
!215 = distinct !{!215, !11, !12}
!216 = distinct !{!216, !11, !12}
!217 = distinct !{!217, !11, !12}
!218 = distinct !{!218, !11, !12}
!219 = distinct !{!219, !11, !12}
!220 = !{!221, !3, i64 8}
!221 = !{!"_ZTSN5adept5ArrayILi1EdLb0EEE", !3, i64 0, !3, i64 8, !222, i64 16, !222, i64 20}
!222 = !{!"_ZTSN5adept14ExpressionSizeILi1EEE", !4, i64 0}
!223 = !{!221, !3, i64 0}
!224 = !{!120, !19, i64 147}
!225 = !{!120, !19, i64 148}
!226 = !{!227, !40, i64 0}
!227 = !{!"_ZTSN5adept6ActiveIdEE", !40, i64 0, !21, i64 8}
!228 = !{!227, !21, i64 8}
!229 = distinct !{!229, !11, !12}
!230 = distinct !{!230, !11, !12}
!231 = distinct !{!231, !11, !12}
!232 = distinct !{!232, !11, !12}
!233 = !{!234, !8, i64 8}
!234 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE", !235, i64 0, !8, i64 8, !4, i64 16}
!235 = !{!"_ZTSNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderE", !3, i64 0}
!236 = distinct !{!236, !11, !12}
!237 = !{!238, !3, i64 0}
!238 = !{!"_ZTSSt16reverse_iteratorIPKcE", !3, i64 0}
!239 = !{!234, !3, i64 0}
!240 = !{!241, !3, i64 0}
!241 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE", !3, i64 0}
!242 = !{!56, !3, i64 16}
!243 = !{!33, !3, i64 8}
!244 = !{!33, !3, i64 16}
!245 = !{!235, !3, i64 0}
!246 = distinct !{!246, !11, !12}
!247 = !{!126, !3, i64 16}
!248 = !{!249, !8, i64 16}
!249 = !{!"_ZTSNSt8__detail17_List_node_headerE", !8, i64 16}
!250 = distinct !{!250, !11, !12}
!251 = distinct !{!251, !11, !12}
!252 = distinct !{!252, !11, !12}
!253 = !{!254, !3, i64 216}
!254 = !{!"_ZTSSt9basic_iosIcSt11char_traitsIcEE", !3, i64 216, !4, i64 224, !19, i64 225, !3, i64 232, !3, i64 240, !3, i64 248, !3, i64 256}
!255 = !{!254, !4, i64 224}
!256 = !{!254, !19, i64 225}
!257 = !{!254, !3, i64 232}
!258 = !{!254, !3, i64 240}
!259 = !{!254, !3, i64 248}
!260 = !{!254, !3, i64 256}
!261 = !{!262, !262, i64 0}
!262 = !{!"_ZTSSt13_Ios_Openmode", !4, i64 0}
!263 = !{!264, !262, i64 64}
!264 = !{!"_ZTSNSt7__cxx1115basic_stringbufIcSt11char_traitsIcESaIcEEE", !262, i64 64, !234, i64 72}
!265 = !{!266, !8, i64 8}
!266 = !{!"_ZTSSi", !8, i64 8}
!267 = !{!268, !3, i64 8}
!268 = !{!"_ZTSSt15basic_streambufIcSt11char_traitsIcEE", !3, i64 8, !3, i64 16, !3, i64 24, !3, i64 32, !3, i64 40, !3, i64 48, !269, i64 56}
!269 = !{!"_ZTSSt6locale", !3, i64 0}
!270 = !{!268, !3, i64 16}
!271 = !{!268, !3, i64 24}
!272 = !{!268, !3, i64 32}
!273 = !{!268, !3, i64 40}
!274 = !{!268, !3, i64 48}
!275 = !{!276, !276, i64 0}
!276 = !{!"_ZTSSt12_Ios_Iostate", !4, i64 0}
!277 = !{!278, !276, i64 32}
!278 = !{!"_ZTSSt8ios_base", !8, i64 8, !8, i64 16, !279, i64 24, !276, i64 28, !276, i64 32, !3, i64 40, !280, i64 48, !4, i64 64, !21, i64 192, !3, i64 200, !269, i64 208}
!279 = !{!"_ZTSSt13_Ios_Fmtflags", !4, i64 0}
!280 = !{!"_ZTSNSt8ios_base6_WordsE", !3, i64 0, !8, i64 8}
!281 = !{!282, !3, i64 0}
!282 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE", !3, i64 0}
!283 = !{!284, !8, i64 16}
!284 = !{!"_ZTSNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EEE", !285, i64 0}
!285 = !{!"_ZTSNSt7__cxx1110_List_baseIN5adept3GapESaIS2_EE10_List_implE", !249, i64 0}
!286 = !{!287, !3, i64 0}
!287 = !{!"_ZTSSt15__allocated_ptrISaISt10_List_nodeIN5adept3GapEEEE", !3, i64 0, !3, i64 8}
!288 = !{!287, !3, i64 8}
!289 = !{!290, !290, i64 0}
!290 = !{!"nullptr_t", !4, i64 0}
!291 = !{i64 0, i64 4, !20, i64 4, i64 4, !20}
!292 = !{!293, !3, i64 0}
!293 = !{!"_ZTSN9__gnu_cxx17__normal_iteratorIPKiSt6vectorIiSaIiEEEE", !3, i64 0}
!294 = !{!199, !3, i64 16}
!295 = distinct !{!295, !11, !12}
!296 = distinct !{!296, !11, !12}
!297 = !{!298, !21, i64 12}
!298 = !{!"_ZTSN5adept7StorageIdEE", !3, i64 0, !21, i64 8, !21, i64 12, !21, i64 16}
!299 = distinct !{!299, !11, !12}
!300 = distinct !{!300, !11, !12}
!301 = !{!298, !21, i64 8}
!302 = !{!298, !21, i64 16}
!303 = !{!298, !3, i64 0}
!304 = distinct !{!304, !11, !12}
!305 = distinct !{!305, !11, !12}
!306 = distinct !{!306, !11, !12}
!307 = distinct !{!307, !11, !12}
!308 = distinct !{!308, !11, !12}
!309 = !{!310, !3, i64 0}
!310 = !{!"_ZTSNSt12_Vector_baseIN5adept6ActiveIdEESaIS2_EE17_Vector_impl_dataE", !3, i64 0, !3, i64 8, !3, i64 16}
!311 = distinct !{!311, !11, !12}
!312 = distinct !{!312, !11, !12}
!313 = distinct !{!313, !11, !12}
!314 = distinct !{!314, !11, !12}
!315 = distinct !{!315, !11, !12}
!316 = distinct !{!316, !11, !12}
!317 = distinct !{!317, !11, !12}
!318 = !{!310, !3, i64 8}
!319 = !{!310, !3, i64 16}
!320 = distinct !{!320, !11, !12}
!321 = distinct !{!321, !11, !12}
!322 = !{!323, !3, i64 0}
!323 = !{!"_ZTSN5adept8internal14UnaryOperationIdNS0_3ExpENS_6ActiveIdEEEE", !3, i64 0}
!324 = !{!325, !3, i64 16}
!325 = !{!"_ZTSN5adept8internal18BinaryOpScalarLeftIddNS0_8SubtractENS_6ActiveIdEEEE", !326, i64 0, !3, i64 16}
!326 = !{!"_ZTSN5adept8internal6PacketIdEE", !4, i64 0}
!327 = !{!328, !40, i64 0}
!328 = !{!"_ZTSN5adept8internal6ScalarIdEE", !40, i64 0}
!329 = !{!330, !3, i64 0}
!330 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8MultiplyES3_EE", !3, i64 0, !3, i64 8}
!331 = !{!330, !3, i64 8}
!332 = !{!333, !3, i64 0}
!333 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS1_IdS3_NS0_8MultiplyES3_EEEE", !3, i64 0, !330, i64 8}
!334 = !{!335, !3, i64 16}
!335 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddES3_EENS0_8SubtractENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEE", !336, i64 0, !3, i64 16}
!336 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddES3_EE", !3, i64 0, !3, i64 8}
!337 = !{!336, !3, i64 0}
!338 = !{!336, !3, i64 8}
!339 = !{!340, !3, i64 16}
!340 = !{!"_ZTSN5adept8internal18BinaryOpScalarLeftIddNS0_8MultiplyENS_6ActiveIdEEEE", !326, i64 0, !3, i64 16}
!341 = distinct !{!341, !11, !12}
!342 = !{!343, !3, i64 0}
!343 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_14UnaryOperationIdNS0_3ExpENS1_IdS3_NS0_8SubtractES3_EEEEEE", !3, i64 0, !344, i64 8}
!344 = !{!"_ZTSN5adept8internal14UnaryOperationIdNS0_3ExpENS0_15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES5_EEEE", !345, i64 0}
!345 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_8SubtractES3_EE", !3, i64 0, !3, i64 8}
!346 = !{!345, !3, i64 0}
!347 = !{!345, !3, i64 8}
!348 = !{!349, !3, i64 8}
!349 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS0_14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEENS0_3AddES5_EE", !350, i64 0, !3, i64 8}
!350 = !{!"_ZTSN5adept8internal14UnaryOperationIdNS0_3LogENS_6ActiveIdEEEE", !3, i64 0}
!351 = !{!350, !3, i64 0}
!352 = !{!353, !21, i64 0}
!353 = !{!"_ZTSN5adept8internal6PacketIiEE", !21, i64 0}
!354 = !{!355, !3, i64 0}
!355 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS0_18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEENS0_8SubtractENS2_IdiNS0_8MultiplyES5_EEEE", !3, i64 0, !3, i64 8}
!356 = !{!355, !3, i64 8}
!357 = !{!358, !3, i64 16}
!358 = !{!"_ZTSN5adept8internal18BinaryOpScalarLeftIddNS0_3AddENS_6ActiveIdEEEE", !326, i64 0, !3, i64 16}
!359 = !{!360, !3, i64 8}
!360 = !{!"_ZTSN5adept8internal18BinaryOpScalarLeftIdiNS0_8MultiplyENS_6ActiveIdEEEE", !353, i64 0, !3, i64 8}
!361 = !{!362, !21, i64 0}
!362 = !{!"_ZTSN5adept8internal6ScalarIiEE", !21, i64 0}
!363 = !{!364, !3, i64 16}
!364 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS1_IdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEENS0_8SubtractENS5_IdiS6_S3_EEEE", !365, i64 0, !3, i64 16}
!365 = !{!"_ZTSN5adept8internal15BinaryOperationIdNS_6ActiveIdEENS0_3AddENS0_18BinaryOpScalarLeftIddNS0_8MultiplyES3_EEEE", !3, i64 0, !3, i64 8}
!366 = !{!365, !3, i64 0}
!367 = !{!365, !3, i64 8}
!368 = !{!369, !3, i64 0}
!369 = !{!"_ZTSN5adept8internal19BinaryOpScalarRightIdNS_6ActiveIdEENS0_8SubtractEdEE", !3, i64 0, !326, i64 16}
!370 = distinct !{!370, !11, !12}
!371 = distinct !{!371, !11, !12}
!372 = distinct !{}
!373 = distinct !{}
!374 = distinct !{}
!375 = !{i64 8}
!376 = distinct !{}
!377 = !{!"1"}
!378 = distinct !{}
!379 = !{!"0"}
!380 = !{!"2"}
!381 = distinct !{}
!382 = !{i64 32}
!383 = !{i64 24}
!384 = distinct !{}
!385 = distinct !{}
!386 = distinct !{}
!387 = distinct !{}
!388 = distinct !{}
!389 = distinct !{}
!390 = distinct !{}
!391 = distinct !{}
!392 = distinct !{}
!393 = distinct !{}
!394 = distinct !{}
!395 = distinct !{}
!396 = distinct !{}
!397 = distinct !{}
!398 = distinct !{}
!399 = distinct !{}
!400 = distinct !{}
!401 = distinct !{}
!402 = distinct !{}
!403 = distinct !{}
!404 = distinct !{}
!405 = distinct !{}
!406 = distinct !{}
!407 = distinct !{}
!408 = distinct !{}
!409 = distinct !{}
!410 = distinct !{}
!411 = distinct !{}
!412 = distinct !{}
!413 = distinct !{}
!414 = distinct !{}
!415 = distinct !{}
!416 = distinct !{}
!417 = distinct !{}
!418 = distinct !{}
!419 = distinct !{}
!420 = distinct !{}
!421 = distinct !{}
!422 = distinct !{}
!423 = distinct !{}
!424 = distinct !{}
!425 = distinct !{}
!426 = distinct !{}
!427 = distinct !{}
!428 = distinct !{}
!429 = distinct !{}
!430 = distinct !{}
!431 = distinct !{}
!432 = distinct !{}
!433 = distinct !{}
!434 = distinct !{}
!435 = distinct !{}
!436 = distinct !{}
!437 = distinct !{}
!438 = !{i64 1}
!439 = distinct !{}
!440 = distinct !{}
!441 = distinct !{}
!442 = distinct !{}
!443 = !{!"3"}
!444 = distinct !{}
!445 = !{!"4"}
!446 = distinct !{}
!447 = distinct !{}
!448 = distinct !{}
!449 = !{!"5"}
!450 = !{!"read"}
!451 = distinct !{}
!452 = distinct !{}
!453 = distinct !{}
!454 = distinct !{}
!455 = distinct !{}
!456 = distinct !{}
!457 = distinct !{}
!458 = distinct !{}
!459 = distinct !{}
!460 = distinct !{}
!461 = distinct !{}
!462 = distinct !{}
!463 = distinct !{}
!464 = distinct !{}
!465 = distinct !{}
!466 = distinct !{}
!467 = distinct !{}
!468 = distinct !{}
!469 = distinct !{}
!470 = distinct !{}
!471 = distinct !{}
!472 = distinct !{}
!473 = distinct !{}
!474 = distinct !{}
!475 = distinct !{}
!476 = distinct !{}
!477 = distinct !{}
!478 = distinct !{}
