[0mLLVM_SHLIBEXT=.so[0m
[0mfound llvm dir /local-scratch/localhome/mha157/llvm-project/build/lib/cmake/llvm[0m
[0mfound llvm lit /local-scratch/localhome/mha157/Enzyme/enzyme/build[0m
[0mCMAKE_PREFIX_PATH /local-scratch/localhome/mha157/llvm-project/build/lib/cmake/llvm[0m
[0mLLVM_INSTALL_PREFIX: [0m
[0mLLVM_INCLUDE_DIRS: /local-scratch/localhome/mha157/llvm-project/llvm/include;/local-scratch/localhome/mha157/llvm-project/build/include[0m
[0mfound llvm definitions -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS[0m
[0mfound llvm version 12[0m
[0mfirst llvm include directory/local-scratch/localhome/mha157/llvm-project/llvm/include[0m
[0mfound bench flags: -I/localhome/mha157/Enzyme/enzyme/build/benchmarks/adept2/src/adept2/include -I/localhome/mha157/Enzyme/enzyme/build/benchmarks/tapenade/src/tapenade[0m
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:106,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:39:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CFG.h:140:1: warning: multi-line comment [-Wcomment]
  140 | ///  /   \
      | ^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:106,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:39:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CFG.h:140:1: warning: multi-line comment [-Wcomment]
  140 | ///  /   \
      | ^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Metadata.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/MemoryLocation.h:20,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:35,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Metadata.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/MemoryLocation.h:20,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:35,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Metadata.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/TrackingMDRef.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/DebugLoc.h:17,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/BasicBlock.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:27,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/CFG.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Metadata.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/TrackingMDRef.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/DebugLoc.h:17,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/BasicBlock.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:27,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/CFG.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:28,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:22,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:28,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:28,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:28,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:28,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:28,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:28,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Metadata.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/TrackingMDRef.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/DebugLoc.h:17,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/BasicBlock.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:33:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Metadata.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/TrackingMDRef.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/DebugLoc.h:17,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/BasicBlock.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:31:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:28,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Metadata.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/TrackingMDRef.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/DebugLoc.h:17,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/BasicBlock.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:33:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Metadata.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/TrackingMDRef.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/DebugLoc.h:17,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/BasicBlock.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:31:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:28,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:28,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMap.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:22,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:22,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:28,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h: In constructor â€˜llvm::StringMapEntryStorage<llvm::NoneType>::StringMapEntryStorage(size_t, llvm::NoneType)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/StringMapEntry.h:58:61: warning: unused parameter â€˜noneâ€™ [-Wunused-parameter]
   58 |   explicit StringMapEntryStorage(size_t keyLength, NoneType none = None)
      |                                                    ~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:28,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:34,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:48,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:28,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:34,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:48,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:28,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:28,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:34,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:48,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:28,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:34:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:34,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:48,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:34:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:22,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:28,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:48,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:48,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:35:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:33:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:37,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:35:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:37,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:37,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:33:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:37,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:37,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:22,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:28,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:37,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:37,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ConstantRange.h:35,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:37,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:37,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:37,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:36,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:36,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h: In member function â€˜llvm::Value* llvm::ConstantData::handleOperandChangeImpl(llvm::Value*, llvm::Value*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:41: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                  ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Constants.h:54:54: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
   54 |   Value *handleOperandChangeImpl(Value *From, Value *To) {
      |                                               ~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/InlineCost.h:17,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:23,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:32,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doInitialization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:48:44: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   48 |   virtual bool doInitialization(CallGraph &CG) {
      |                                 ~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doFinalization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:63:42: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   63 |   virtual bool doFinalization(CallGraph &CG) {
      |                               ~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::DummyCGSCCPass::runOnSCC(llvm::CallGraphSCC&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:131:31: warning: unused parameter â€˜SCCâ€™ [-Wunused-parameter]
  131 |   bool runOnSCC(CallGraphSCC &SCC) override { return false; }
      |                 ~~~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/InlineCost.h:17,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:23,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:32,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doInitialization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:48:44: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   48 |   virtual bool doInitialization(CallGraph &CG) {
      |                                 ~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doFinalization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:63:42: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   63 |   virtual bool doFinalization(CallGraph &CG) {
      |                               ~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::DummyCGSCCPass::runOnSCC(llvm::CallGraphSCC&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:131:31: warning: unused parameter â€˜SCCâ€™ [-Wunused-parameter]
  131 |   bool runOnSCC(CallGraphSCC &SCC) override { return false; }
      |                 ~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:34,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:14,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:34,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:14,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h: In member function â€˜bool llvm::CallBase::isFnAttrDisallowedByOpBundle(llvm::StringRef) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:2042:47: warning: unused parameter â€˜Sâ€™ [-Wunused-parameter]
 2042 |   bool isFnAttrDisallowedByOpBundle(StringRef S) const {
      |                                     ~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:14,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:14,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:40,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:40,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:14,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:14,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ReturnInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2993:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2993 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ReturnInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:2997:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 2997 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::ResumeInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4194:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4194 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::ResumeInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4198:47: warning: unused parameter â€˜NewSuccâ€™ [-Wunused-parameter]
 4198 |   void setSuccessor(unsigned idx, BasicBlock *NewSucc) {
      |                                   ~~~~~~~~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:24,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:24,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:24,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:24,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:29:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:24,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜llvm::BasicBlock* llvm::UnreachableInst::getSuccessor(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4697:37: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4697 |   BasicBlock *getSuccessor(unsigned idx) const {
      |                            ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h: In member function â€˜void llvm::UnreachableInst::setSuccessor(unsigned int, llvm::BasicBlock*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:30: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                     ~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instructions.h:4701:47: warning: unused parameter â€˜Bâ€™ [-Wunused-parameter]
 4701 |   void setSuccessor(unsigned idx, BasicBlock *B) {
      |                                   ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:24,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:24,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:24,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:29:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:24,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:32,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:24,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:32,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/InlineCost.h:17,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:23,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:48:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doInitialization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:48:44: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   48 |   virtual bool doInitialization(CallGraph &CG) {
      |                                 ~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doFinalization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:63:42: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   63 |   virtual bool doFinalization(CallGraph &CG) {
      |                               ~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::DummyCGSCCPass::runOnSCC(llvm::CallGraphSCC&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:131:31: warning: unused parameter â€˜SCCâ€™ [-Wunused-parameter]
  131 |   bool runOnSCC(CallGraphSCC &SCC) override { return false; }
      |                 ~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:24,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:32,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:40,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:24,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:32,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:40,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/InlineCost.h:17,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:23,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:48:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doInitialization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:48:44: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   48 |   virtual bool doInitialization(CallGraph &CG) {
      |                                 ~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doFinalization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:63:42: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   63 |   virtual bool doFinalization(CallGraph &CG) {
      |                               ~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::DummyCGSCCPass::runOnSCC(llvm::CallGraphSCC&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:131:31: warning: unused parameter â€˜SCCâ€™ [-Wunused-parameter]
  131 |   bool runOnSCC(CallGraphSCC &SCC) override { return false; }
      |                 ~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:29:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:50:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h: In member function â€˜virtual void llvm::InlineAdvice::recordUnsuccessfulInliningImpl(const llvm::InlineResult&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h:94:67: warning: unused parameter â€˜Resultâ€™ [-Wunused-parameter]
   94 |   virtual void recordUnsuccessfulInliningImpl(const InlineResult &Result) {}
      |                                               ~~~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:29:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/SetVector.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:33,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/SetVector.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:33,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/SetVector.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:33,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/SetVector.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:33,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:40,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:40,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:50:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h: In member function â€˜virtual void llvm::InlineAdvice::recordUnsuccessfulInliningImpl(const llvm::InlineResult&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/InlineAdvisor.h:94:67: warning: unused parameter â€˜Resultâ€™ [-Wunused-parameter]
   94 |   virtual void recordUnsuccessfulInliningImpl(const InlineResult &Result) {}
      |                                               ~~~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:48:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp: In member function â€˜bool MustExitScalarEvolution::loopIsFiniteByAssumption(const llvm::Loop*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:35:68: warning: unused parameter â€˜Lâ€™ [-Wunused-parameter]
   35 | bool MustExitScalarEvolution::loopIsFiniteByAssumption(const Loop *L) {
      |                                                        ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:48:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:49:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:49:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp: In member function â€˜bool MustExitScalarEvolution::loopIsFiniteByAssumption(const llvm::Loop*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:35:68: warning: unused parameter â€˜Lâ€™ [-Wunused-parameter]
   35 | bool MustExitScalarEvolution::loopIsFiniteByAssumption(const Loop *L) {
      |                                                        ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h: In member function â€˜llvm::CallBrInst* llvm::IRBuilderBase::CreateCallBr(llvm::FunctionCallee, llvm::BasicBlock*, llvm::ArrayRef<llvm::BasicBlock*>, llvm::ArrayRef<llvm::Value*>, llvm::ArrayRef<llvm::OperandBundleDefT<llvm::Value*> >, const llvm::Twine&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/IRBuilder.h:1161:55: warning: unused parameter â€˜OpBundlesâ€™ [-Wunused-parameter]
 1161 |                            ArrayRef<OperandBundleDef> OpBundles,
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:39,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:39,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h: In member function â€˜virtual void CacheUtility::freeCache(llvm::BasicBlock*, const SubLimitType&, int, llvm::AllocaInst*, llvm::ConstantInt*, llvm::Value*, llvm::MDNode*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:345:44: warning: unused parameter â€˜forwardPreheaderâ€™ [-Wunused-parameter]
  345 |   virtual void freeCache(llvm::BasicBlock *forwardPreheader,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:46: warning: unused parameter â€˜antimapâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:59: warning: unused parameter â€˜iâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                                                       ~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:347:44: warning: unused parameter â€˜allocâ€™ [-Wunused-parameter]
  347 |                          llvm::AllocaInst *alloc,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:348:45: warning: unused parameter â€˜byteSizeOfTypeâ€™ [-Wunused-parameter]
  348 |                          llvm::ConstantInt *byteSizeOfType,
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:39: warning: unused parameter â€˜storeIntoâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                          ~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:64: warning: unused parameter â€˜InvariantMDâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h: In member function â€˜virtual void CacheUtility::freeCache(llvm::BasicBlock*, const SubLimitType&, int, llvm::AllocaInst*, llvm::ConstantInt*, llvm::Value*, llvm::MDNode*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:345:44: warning: unused parameter â€˜forwardPreheaderâ€™ [-Wunused-parameter]
  345 |   virtual void freeCache(llvm::BasicBlock *forwardPreheader,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:46: warning: unused parameter â€˜antimapâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:59: warning: unused parameter â€˜iâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                                                       ~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:347:44: warning: unused parameter â€˜allocâ€™ [-Wunused-parameter]
  347 |                          llvm::AllocaInst *alloc,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:348:45: warning: unused parameter â€˜byteSizeOfTypeâ€™ [-Wunused-parameter]
  348 |                          llvm::ConstantInt *byteSizeOfType,
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:39: warning: unused parameter â€˜storeIntoâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                          ~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:64: warning: unused parameter â€˜InvariantMDâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp: In function â€˜void CanonicalizeLatches(const llvm::Loop*, llvm::BasicBlock*, llvm::BasicBlock*, llvm::PHINode*, MustExitScalarEvolution&, CacheUtility&, llvm::Instruction*, const llvm::SmallVectorImpl<llvm::BasicBlock*>&&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:187:53: warning: unused parameter â€˜Headerâ€™ [-Wunused-parameter]
  187 | void CanonicalizeLatches(const Loop *L, BasicBlock *Header,
      |                                         ~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:39,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp: In function â€˜void CanonicalizeLatches(const llvm::Loop*, llvm::BasicBlock*, llvm::BasicBlock*, llvm::PHINode*, MustExitScalarEvolution&, CacheUtility&, llvm::Instruction*, const llvm::SmallVectorImpl<llvm::BasicBlock*>&&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:187:53: warning: unused parameter â€˜Headerâ€™ [-Wunused-parameter]
  187 | void CanonicalizeLatches(const Loop *L, BasicBlock *Header,
      |                                         ~~~~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:68: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                                                                    ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:204:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  204 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:207:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  207 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:238:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  238 |     bool Result = checkedOrIn(CT, PointerIntSame, Legal);
      |                                                        ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator|=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:252:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  252 |     return orIn(CT, /*pointerIntSame*/ false);
      |                                             ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:236:32: note:   initializing argument 1 of â€˜bool ConcreteType::orIn(ConcreteType, bool)â€™
  236 |   bool orIn(const ConcreteType CT, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::andIn(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:260:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  260 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:269:22: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  269 |       return *this = CT;
      |                      ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::operator&=(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:59: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                                                           ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:258:33: note:   initializing argument 1 of â€˜bool ConcreteType::andIn(ConcreteType)â€™
  258 |   bool andIn(const ConcreteType CT) {
      |              ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h: In function â€˜TypeTree parseTBAA(TBAAStructTypeNode, llvm::Instruction&, const llvm::DataLayout&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:403:25: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  403 |       return TypeTree(CT).Only(-1);
      |                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:416:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  416 |   return Result;
      |          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h: In function â€˜TypeTree parseTBAA(llvm::Instruction&, const llvm::DataLayout&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:464:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  464 |   return Result;
      |          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/BranchProbability.h:18,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/BlockFrequency.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfo.h:19,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h:18,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:58,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/BranchProbability.h:18,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/BlockFrequency.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfo.h:19,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h:18,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:58,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h: In copy constructor â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:82:3: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
   82 |   FnTypeInfo(const FnTypeInfo &) = default;
      |   ^~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In constructor â€˜TypeAnalyzer::TypeAnalyzer(const FnTypeInfo&, TypeAnalysis&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:158:41: note: synthesized method â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™ first required here
  158 |       LI(std::make_shared<LoopInfo>(*DT)) {
      |                                         ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:20,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜TypeTree TypeAnalyzer::getAnalysis(llvm::Value*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:466:24: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  466 |     return analysis[Val];
      |                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:51:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h: In function â€˜TypeTree parseTBAA(TBAAStructTypeNode, llvm::Instruction&, const llvm::DataLayout&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:403:25: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  403 |       return TypeTree(CT).Only(-1);
      |                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:51:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:416:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  416 |   return Result;
      |          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:51:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h: In function â€˜TypeTree parseTBAA(llvm::Instruction&, const llvm::DataLayout&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:464:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  464 |   return Result;
      |          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:39,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEV>::Equals(const llvm::SCEV&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:172:74: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  172 |   static bool Equals(const SCEV &X, const FoldingSetNodeID &ID, unsigned IDHash,
      |                                                                 ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:173:40: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  173 |                      FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEV>::ComputeHash(const llvm::SCEV&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:177:64: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  177 |   static unsigned ComputeHash(const SCEV &X, FoldingSetNodeID &TempID) {
      |                                              ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static bool llvm::FoldingSetTrait<llvm::SCEVPredicate>::Equals(const llvm::SCEVPredicate&, const llvm::FoldingSetNodeID&, unsigned int, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:31: warning: unused parameter â€˜IDHashâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                      ~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:255:57: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  255 |                      unsigned IDHash, FoldingSetNodeID &TempID) {
      |                                       ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In static member function â€˜static unsigned int llvm::FoldingSetTrait<llvm::SCEVPredicate>::ComputeHash(const llvm::SCEVPredicate&, llvm::FoldingSetNodeID&)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:260:49: warning: unused parameter â€˜TempIDâ€™ [-Wunused-parameter]
  260 |                               FoldingSetNodeID &TempID) {
      |                               ~~~~~~~~~~~~~~~~~~^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:489:24: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  489 |     return analysis[Val];
      |                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, ConcreteType, llvm::Value*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:500:36: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  500 |   updateAnalysis(Val, TypeTree(Data), Origin);
      |                                    ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/GenericDomTree.h:35,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:17,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:590:31: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  590 |   TypeTree prev = analysis[Val];
      |                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h: In function â€˜TypeTree parseTBAA(TBAAStructTypeNode, llvm::Instruction&, const llvm::DataLayout&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:403:25: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  403 |       return TypeTree(CT).Only(-1);
      |                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:416:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  416 |   return Result;
      |          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h: In function â€˜TypeTree parseTBAA(llvm::Instruction&, const llvm::DataLayout&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:464:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  464 |   return Result;
      |          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:51:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h: In function â€˜TypeTree parseTBAA(TBAAStructTypeNode, llvm::Instruction&, const llvm::DataLayout&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:403:25: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  403 |       return TypeTree(CT).Only(-1);
      |                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::prepareArgs()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:675:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  675 |     updateAnalysis(pair.first, pair.second, pair.first);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:51:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:416:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  416 |   return Result;
      |          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:690:51: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  690 |           updateAnalysis(RV, fntypeinfo.Return, RV);
      |                                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In constructor â€˜TypeTree::TypeTree(ConcreteType)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:79:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   79 |       insert({}, dat);
      |                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:51:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h: In function â€˜TypeTree parseTBAA(llvm::Instruction&, const llvm::DataLayout&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:464:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  464 |   return Result;
      |          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::operator[](std::vector<int, std::allocator<int> >) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:91:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
   91 |       return Found->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:107:19: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  107 |       return pair.second;
      |                   ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:155:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  155 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:181:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  181 |           if (found->second == CT || found->second == BaseType::Anything)
      |                                ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::runPHIHypotheses()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:907:48: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  907 |                 updateAnalysis(phi, Result, phi);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:909:62: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  909 |                   updateAnalysis(pair.first, pair.second, phi);
      |                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:941:48: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  941 |                 updateAnalysis(phi, Result, phi);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:943:62: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  943 |                   updateAnalysis(pair.first, pair.second, phi);
      |                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitConstantExpr(llvm::ConstantExpr&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1106:39: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1106 |   updateAnalysis(&CE, analysis[I], &CE);
      |                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:219:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  219 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h: In copy constructor â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:82:3: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
   82 |   FnTypeInfo(const FnTypeInfo &) = default;
      |   ^~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In constructor â€˜TypeAnalyzer::TypeAnalyzer(const FnTypeInfo&, TypeAnalysis&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:158:41: note: synthesized method â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™ first required here
  158 |       LI(std::make_shared<LoopInfo>(*DT)) {
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:256:30: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  256 |               if (CT == pair.second) {
      |                              ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h: In constructor â€˜llvm::ScalarEvolution::ExitNotTakenInfo::ExitNotTakenInfo(llvm::PoisoningVH<llvm::BasicBlock>, const llvm::SCEV*, const llvm::SCEV*, std::unique_ptr<llvm::SCEVUnionPredicate>)â€™:
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1345:43: warning: unused parameter â€˜MaxNotTakenâ€™ [-Wunused-parameter]
 1345 |                               const SCEV *MaxNotTaken,
      |                               ~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜TypeTree TypeAnalyzer::getAnalysis(llvm::Value*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:466:24: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  466 |     return analysis[Val];
      |                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:489:24: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  489 |     return analysis[Val];
      |                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, ConcreteType, llvm::Value*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:500:36: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  500 |   updateAnalysis(Val, TypeTree(Data), Origin);
      |                                    ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitPHINode(llvm::PHINode&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1353:60: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1353 |         updateAnalysis(phi.getIncomingValue(i), upVal, &phi);
      |                                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustInt() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:379:42: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  379 |         vd.insert(pair.first, pair.second);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:383:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  383 |     return vd;
      |            ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Only(int) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:406:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  406 |       Result.insert(prependIndex(Off, pair.first), pair.second);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:408:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  408 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Data0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:428:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  428 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:432:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  432 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜ConcreteType TypeTree::Inner0() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:439:12: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  439 |     return CT;
      |            ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Clear(size_t, size_t, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:460:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  460 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:464:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  464 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:471:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  471 |         Result.insert(pair.first, pair.second);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:476:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  476 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:590:31: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  590 |   TypeTree prev = analysis[Val];
      |                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1489:40: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1489 |     updateAnalysis(&phi, PhiTypes, &phi);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitZExtInst(llvm::ZExtInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1528:34: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1528 |     updateAnalysis(&I, Result, &I);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:20,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitSelectInst(llvm::SelectInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1687:53: warning: suggest parentheses around â€˜&&â€™ within â€˜||â€™ [-Wparentheses]
 1687 |         if (cmpI->getOperand(0) == I.getTrueValue() &&
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
 1688 |                 cmpI->getOperand(1) == I.getFalseValue() ||
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1694:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1694 |             updateAnalysis(&I, TypeTree(vd).Only(-1), &I);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::prepareArgs()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:675:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  675 |     updateAnalysis(pair.first, pair.second, pair.first);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1714:30: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1714 |     updateAnalysis(&I, vd, &I);
      |                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:690:51: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  690 |           updateAnalysis(RV, fntypeinfo.Return, RV);
      |                                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitShuffleVectorInst(llvm::ShuffleVectorInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1951:34: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1951 |     updateAnalysis(&I, result, &I);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitAtomicRMWInst(llvm::AtomicRMWInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2052:16: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2052 |     auto tmp = LHS;
      |                ^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::runPHIHypotheses()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:907:48: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  907 |                 updateAnalysis(phi, Result, phi);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:909:62: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  909 |                   updateAnalysis(pair.first, pair.second, phi);
      |                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2099:44: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2099 |     updateAnalysis(I.getOperand(0), ptr, &I);
      |                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2100:44: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2100 |     updateAnalysis(I.getOperand(1), RHS, &I);
      |                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2109:31: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2109 |     updateAnalysis(&I, Ret, &I);
      |                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:941:48: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  941 |                 updateAnalysis(phi, Result, phi);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitBinaryOperation(const llvm::DataLayout&, llvm::Type*, llvm::Instruction::BinaryOps, llvm::Value**, TypeTree&, TypeTree&, TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2124:25: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 2124 |       LHS |= TypeTree(dt).Only(-1);
      |                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2125:25: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 2125 |       RHS |= TypeTree(dt).Only(-1);
      |                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:943:62: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  943 |                   updateAnalysis(pair.first, pair.second, phi);
      |                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2128:25: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 2128 |       Ret |= TypeTree(dt).Only(-1);
      |                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2276:25: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2276 |       TypeTree Result = AnalysisLHS;
      |                         ^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitConstantExpr(llvm::ConstantExpr&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1106:39: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1106 |   updateAnalysis(&CE, analysis[I], &CE);
      |                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::Lookup(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:555:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  555 |           Result.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:559:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  559 |             Result.insert(next, dt);
      |                                   ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:565:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  565 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitBinaryOperator(llvm::BinaryOperator&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2451:44: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2451 |     updateAnalysis(I.getOperand(0), LHS, &I);
      |                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2452:44: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2452 |     updateAnalysis(I.getOperand(1), RHS, &I);
      |                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2461:31: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2461 |     updateAnalysis(&I, Ret, &I);
      |                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::CanonicalizeValue(size_t, const llvm::DataLayout&) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:638:63: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  638 |           dat.insert(next, dt, /*intsAreLegalPointerSub*/ true);
      |                                                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:642:32: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  642 |             dat.insert(next, dt);
      |                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:648:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  648 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::KeepMinusOne() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:666:45: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  666 |           dat.insert(pair.first, pair.second);
      |                                             ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitMemTransferCommon(llvm::CallInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2504:49: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2504 |   updateAnalysis(MTI.getArgOperand(0), res, &MTI);
      |                                                 ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2505:49: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2505 |   updateAnalysis(MTI.getArgOperand(1), res, &MTI);
      |                                                 ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:675:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  675 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:679:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  679 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::ShiftIndices(const llvm::DataLayout&, int, int, size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:726:48: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  726 |           Result.insert(pair.first, pair.second);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:786:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  786 |           Result.orIn(next, pair.second);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:789:38: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  789 |         Result.orIn(next, pair.second);
      |                                      ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1018:55: note:   initializing argument 2 of â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™
 1018 |   bool orIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                          ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:793:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  793 |     return Result;
      |            ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::PurgeAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:802:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  802 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:804:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  804 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::JustAnything() constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:822:41: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  822 |       dat.insert(pair.first, pair.second);
      |                                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:824:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  824 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitIntrinsicInst(llvm::IntrinsicInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3028:37: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3028 |       updateAnalysis(&I, overall, &I);
      |                                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜TypeTree TypeTree::AtMost(size_t) constâ€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:834:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  834 |         dat.insert(pair.first, pair.second);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:837:12: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  837 |     return dat;
      |            ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:859:66: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  859 |     bool subchanged = CT.checkedOrIn(RHS, PointerIntSame, LegalOr);
      |                                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:198:39: note:   initializing argument 1 of â€˜bool ConcreteType::checkedOrIn(ConcreteType, bool, bool&)â€™
  198 |   bool checkedOrIn(const ConcreteType CT, bool PointerIntSame, bool &LegalOr) {
      |                    ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/BranchProbability.h:18,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/BlockFrequency.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfo.h:19,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h:18,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:58,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:887:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  887 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:895:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  895 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /usr/include/c++/9/cassert:44,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/BranchProbability.h:18,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/BlockFrequency.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BlockFrequencyInfo.h:19,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h:18,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:58,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:921:35: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  921 |           assert(found->second != CT);
      |                                   ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:173:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator!=(ConcreteType) constâ€™
  173 |   bool operator!=(const ConcreteType CT) const { return !(*this == CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In static member function â€˜static void TypeHandler<void>::analyzeType(llvm::Value*, llvm::CallInst&, TypeAnalyzer&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3115:34: warning: unused parameter â€˜valâ€™ [-Wunused-parameter]
 3115 |   static void analyzeType(Value *val, CallInst &call, TypeAnalyzer &TA) {}
      |                           ~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3115:49: warning: unused parameter â€˜callâ€™ [-Wunused-parameter]
 3115 |   static void analyzeType(Value *val, CallInst &call, TypeAnalyzer &TA) {}
      |                                       ~~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3115:69: warning: unused parameter â€˜TAâ€™ [-Wunused-parameter]
 3115 |   static void analyzeType(Value *val, CallInst &call, TypeAnalyzer &TA) {}
      |                                                       ~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:929:29: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  929 |             found->second = CT;
      |                             ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:962:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  962 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:995:56: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  995 |             if (CT == BaseType::Anything || CT == pair.second) {
      |                                                        ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:168:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator==(ConcreteType) constâ€™
  168 |   bool operator==(const ConcreteType CT) const {
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1015:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1015 |     return insert(Seq, CT);
      |                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:127:56: note:   initializing argument 2 of â€˜bool TypeTree::insert(std::vector<int, std::allocator<int> >, ConcreteType, bool)â€™
  127 |   bool insert(const std::vector<int> Seq, ConcreteType CT,
      |                                           ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::orIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1021:64: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1021 |     bool Result = checkedOrIn(Seq, RHS, PointerIntSame, LegalOr);
      |                                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::checkedOrIn(const TypeTree&, bool, bool&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1045:78: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1045 |       changed |= checkedOrIn(pair.first, pair.second, PointerIntSame, LegalOr);
      |                                                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:854:62: note:   initializing argument 2 of â€˜bool TypeTree::checkedOrIn(const std::vector<int, std::allocator<int> >&, ConcreteType, bool, bool&)â€™
  854 |   bool checkedOrIn(const std::vector<int> &Seq, ConcreteType RHS,
      |                                                 ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitCallInst(llvm::CallInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3285:18: warning: unused variable â€˜argâ€™ [-Wunused-variable]
 3285 |       for (auto &arg : call.arg_operands())
      |                  ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::operator|=(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1069:46: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1069 |     return orIn(RHS, /*PointerIntSame*/ false);
      |                                              ^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::andIn(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1083:21: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1083 |         other = fd->second;
      |                     ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1085:33: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1085 |       changed = (pair.second &= other);
      |                                 ^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:284:38: note:   initializing argument 1 of â€˜bool ConcreteType::operator&=(ConcreteType)â€™
  284 |   bool operator&=(const ConcreteType CT) { return andIn(CT); }
      |                   ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h: In member function â€˜bool TypeTree::binopIn(const TypeTree&, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1121:34: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1121 |       ConcreteType CT(pair.second);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1127:26: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1127 |         RightCT = found->second;
      |                          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1130:40: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1130 |       changed |= CT.binopIn(RightCT, Op);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1134:23: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1134 |         pair.second = CT;
      |                       ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:37: note:   initializing argument 1 of â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |                  ~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1150:46: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1150 |         changed |= CT.binopIn(pair.second, Op);
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:289:35: note:   initializing argument 1 of â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™
  289 |   bool binopIn(const ConcreteType RHS, llvm::BinaryOperator::BinaryOps Op) {
      |                ~~~~~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitPHINode(llvm::PHINode&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1353:60: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1353 |         updateAnalysis(phi.getIncomingValue(i), upVal, &phi);
      |                                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3352:50: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3352 |       updateAnalysis(&call, returnAnalysis, &call);
      |                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3360:48: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3360 |         updateAnalysis(arg, args[argnum], &call);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3393:60: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3393 |         updateAnalysis(call.getArgOperand(i), ptrint, &call);
      |                                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3401:60: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3401 |         updateAnalysis(call.getArgOperand(i), ptrdbl, &call);
      |                                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:67,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h: In member function â€˜virtual void CacheUtility::freeCache(llvm::BasicBlock*, const SubLimitType&, int, llvm::AllocaInst*, llvm::ConstantInt*, llvm::Value*, llvm::MDNode*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:345:44: warning: unused parameter â€˜forwardPreheaderâ€™ [-Wunused-parameter]
  345 |   virtual void freeCache(llvm::BasicBlock *forwardPreheader,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:46: warning: unused parameter â€˜antimapâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:59: warning: unused parameter â€˜iâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                                                       ~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:347:44: warning: unused parameter â€˜allocâ€™ [-Wunused-parameter]
  347 |                          llvm::AllocaInst *alloc,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:348:45: warning: unused parameter â€˜byteSizeOfTypeâ€™ [-Wunused-parameter]
  348 |                          llvm::ConstantInt *byteSizeOfType,
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:39: warning: unused parameter â€˜storeIntoâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                          ~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:64: warning: unused parameter â€˜InvariantMDâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1489:40: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1489 |     updateAnalysis(&phi, PhiTypes, &phi);
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitZExtInst(llvm::ZExtInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1528:34: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1528 |     updateAnalysis(&I, Result, &I);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitSelectInst(llvm::SelectInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1687:53: warning: suggest parentheses around â€˜&&â€™ within â€˜||â€™ [-Wparentheses]
 1687 |         if (cmpI->getOperand(0) == I.getTrueValue() &&
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
 1688 |                 cmpI->getOperand(1) == I.getFalseValue() ||
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1694:43: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 1694 |             updateAnalysis(&I, TypeTree(vd).Only(-1), &I);
      |                                           ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1714:30: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1714 |     updateAnalysis(&I, vd, &I);
      |                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:67,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h: In member function â€˜virtual void CacheUtility::freeCache(llvm::BasicBlock*, const SubLimitType&, int, llvm::AllocaInst*, llvm::ConstantInt*, llvm::Value*, llvm::MDNode*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:345:44: warning: unused parameter â€˜forwardPreheaderâ€™ [-Wunused-parameter]
  345 |   virtual void freeCache(llvm::BasicBlock *forwardPreheader,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:46: warning: unused parameter â€˜antimapâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:59: warning: unused parameter â€˜iâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                                                       ~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:347:44: warning: unused parameter â€˜allocâ€™ [-Wunused-parameter]
  347 |                          llvm::AllocaInst *alloc,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:348:45: warning: unused parameter â€˜byteSizeOfTypeâ€™ [-Wunused-parameter]
  348 |                          llvm::ConstantInt *byteSizeOfType,
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:39: warning: unused parameter â€˜storeIntoâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                          ~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:64: warning: unused parameter â€˜InvariantMDâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitShuffleVectorInst(llvm::ShuffleVectorInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:1951:34: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 1951 |     updateAnalysis(&I, result, &I);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitAtomicRMWInst(llvm::AtomicRMWInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2052:16: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2052 |     auto tmp = LHS;
      |                ^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2099:44: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2099 |     updateAnalysis(I.getOperand(0), ptr, &I);
      |                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2100:44: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2100 |     updateAnalysis(I.getOperand(1), RHS, &I);
      |                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2109:31: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2109 |     updateAnalysis(&I, Ret, &I);
      |                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitBinaryOperation(const llvm::DataLayout&, llvm::Type*, llvm::Instruction::BinaryOps, llvm::Value**, TypeTree&, TypeTree&, TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2124:25: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 2124 |       LHS |= TypeTree(dt).Only(-1);
      |                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2125:25: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 2125 |       RHS |= TypeTree(dt).Only(-1);
      |                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2128:25: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 2128 |       Ret |= TypeTree(dt).Only(-1);
      |                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2276:25: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2276 |       TypeTree Result = AnalysisLHS;
      |                         ^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:67,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h: In member function â€˜virtual void CacheUtility::freeCache(llvm::BasicBlock*, const SubLimitType&, int, llvm::AllocaInst*, llvm::ConstantInt*, llvm::Value*, llvm::MDNode*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:345:44: warning: unused parameter â€˜forwardPreheaderâ€™ [-Wunused-parameter]
  345 |   virtual void freeCache(llvm::BasicBlock *forwardPreheader,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:46: warning: unused parameter â€˜antimapâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:59: warning: unused parameter â€˜iâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                                                       ~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:347:44: warning: unused parameter â€˜allocâ€™ [-Wunused-parameter]
  347 |                          llvm::AllocaInst *alloc,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:348:45: warning: unused parameter â€˜byteSizeOfTypeâ€™ [-Wunused-parameter]
  348 |                          llvm::ConstantInt *byteSizeOfType,
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:39: warning: unused parameter â€˜storeIntoâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                          ~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:64: warning: unused parameter â€˜InvariantMDâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitBinaryOperator(llvm::BinaryOperator&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2451:44: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2451 |     updateAnalysis(I.getOperand(0), LHS, &I);
      |                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2452:44: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2452 |     updateAnalysis(I.getOperand(1), RHS, &I);
      |                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2461:31: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2461 |     updateAnalysis(&I, Ret, &I);
      |                               ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:67,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:29:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h: In member function â€˜virtual void CacheUtility::freeCache(llvm::BasicBlock*, const SubLimitType&, int, llvm::AllocaInst*, llvm::ConstantInt*, llvm::Value*, llvm::MDNode*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:345:44: warning: unused parameter â€˜forwardPreheaderâ€™ [-Wunused-parameter]
  345 |   virtual void freeCache(llvm::BasicBlock *forwardPreheader,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:46: warning: unused parameter â€˜antimapâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:59: warning: unused parameter â€˜iâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                                                       ~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:347:44: warning: unused parameter â€˜allocâ€™ [-Wunused-parameter]
  347 |                          llvm::AllocaInst *alloc,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:348:45: warning: unused parameter â€˜byteSizeOfTypeâ€™ [-Wunused-parameter]
  348 |                          llvm::ConstantInt *byteSizeOfType,
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:39: warning: unused parameter â€˜storeIntoâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                          ~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:64: warning: unused parameter â€˜InvariantMDâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:67,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:29:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h: In member function â€˜virtual void CacheUtility::freeCache(llvm::BasicBlock*, const SubLimitType&, int, llvm::AllocaInst*, llvm::ConstantInt*, llvm::Value*, llvm::MDNode*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:345:44: warning: unused parameter â€˜forwardPreheaderâ€™ [-Wunused-parameter]
  345 |   virtual void freeCache(llvm::BasicBlock *forwardPreheader,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:46: warning: unused parameter â€˜antimapâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:59: warning: unused parameter â€˜iâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                                                       ~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:347:44: warning: unused parameter â€˜allocâ€™ [-Wunused-parameter]
  347 |                          llvm::AllocaInst *alloc,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:348:45: warning: unused parameter â€˜byteSizeOfTypeâ€™ [-Wunused-parameter]
  348 |                          llvm::ConstantInt *byteSizeOfType,
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:39: warning: unused parameter â€˜storeIntoâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                          ~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:64: warning: unused parameter â€˜InvariantMDâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3467:60: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3467 |             updateAnalysis(call.getArgOperand(i), dt, &call);
      |                                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitMemTransferCommon(llvm::CallInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2504:49: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2504 |   updateAnalysis(MTI.getArgOperand(0), res, &MTI);
      |                                                 ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:2505:49: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 2505 |   updateAnalysis(MTI.getArgOperand(1), res, &MTI);
      |                                                 ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3481:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3481 |       updateAnalysis(call.getOperand(3), ptrint, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3482:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3482 |       updateAnalysis(call.getOperand(4), ptrint, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3483:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3483 |       updateAnalysis(call.getOperand(5), ptrint, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3484:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3484 |       updateAnalysis(call.getOperand(6), ptrint, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3520:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3520 |       updateAnalysis(call.getOperand(0), ptrint, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3525:58: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3525 |       updateAnalysis(call.getOperand(1), ptrptrptr, &call);
      |                                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3534:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3534 |       updateAnalysis(call.getOperand(1), ptrint, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitIntrinsicInst(llvm::IntrinsicInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3028:37: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3028 |       updateAnalysis(&I, overall, &I);
      |                                     ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In static member function â€˜static void TypeHandler<void>::analyzeType(llvm::Value*, llvm::CallInst&, TypeAnalyzer&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3115:34: warning: unused parameter â€˜valâ€™ [-Wunused-parameter]
 3115 |   static void analyzeType(Value *val, CallInst &call, TypeAnalyzer &TA) {}
      |                           ~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3115:49: warning: unused parameter â€˜callâ€™ [-Wunused-parameter]
 3115 |   static void analyzeType(Value *val, CallInst &call, TypeAnalyzer &TA) {}
      |                                       ~~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3115:69: warning: unused parameter â€˜TAâ€™ [-Wunused-parameter]
 3115 |   static void analyzeType(Value *val, CallInst &call, TypeAnalyzer &TA) {}
      |                                                       ~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3752:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3752 |       updateAnalysis(call.getOperand(0), ptrptr, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitCallInst(llvm::CallInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3285:18: warning: unused variable â€˜argâ€™ [-Wunused-variable]
 3285 |       for (auto &arg : call.arg_operands())
      |                  ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3910:42: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3910 |       updateAnalysis(&call, ptrint, &call);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3917:42: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3917 |       updateAnalysis(&call, ptrint, &call);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3352:50: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3352 |       updateAnalysis(&call, returnAnalysis, &call);
      |                                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3360:48: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3360 |         updateAnalysis(arg, args[argnum], &call);
      |                                                ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3393:60: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3393 |         updateAnalysis(call.getArgOperand(i), ptrint, &call);
      |                                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3401:60: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3401 |         updateAnalysis(call.getArgOperand(i), ptrdbl, &call);
      |                                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜TypeTree TypeAnalyzer::getReturnAnalysis()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:4097:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 4097 |   return vd;
      |          ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitIPOCall(llvm::CallInst&, llvm::Function&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:4500:36: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 4500 |       updateAnalysis(arg, dt, &call);
      |                                    ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:4514:36: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 4514 |     updateAnalysis(&call, vd, &call);
      |                                    ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3467:60: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3467 |             updateAnalysis(call.getArgOperand(i), dt, &call);
      |                                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3481:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3481 |       updateAnalysis(call.getOperand(3), ptrint, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3482:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3482 |       updateAnalysis(call.getOperand(4), ptrint, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3483:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3483 |       updateAnalysis(call.getOperand(5), ptrint, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3484:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3484 |       updateAnalysis(call.getOperand(6), ptrint, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3520:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3520 |       updateAnalysis(call.getOperand(0), ptrint, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3525:58: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3525 |       updateAnalysis(call.getOperand(1), ptrptrptr, &call);
      |                                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3534:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3534 |       updateAnalysis(call.getOperand(1), ptrint, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:67,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:61:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h: In member function â€˜virtual void CacheUtility::freeCache(llvm::BasicBlock*, const SubLimitType&, int, llvm::AllocaInst*, llvm::ConstantInt*, llvm::Value*, llvm::MDNode*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:345:44: warning: unused parameter â€˜forwardPreheaderâ€™ [-Wunused-parameter]
  345 |   virtual void freeCache(llvm::BasicBlock *forwardPreheader,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:46: warning: unused parameter â€˜antimapâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:59: warning: unused parameter â€˜iâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                                                       ~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:347:44: warning: unused parameter â€˜allocâ€™ [-Wunused-parameter]
  347 |                          llvm::AllocaInst *alloc,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:348:45: warning: unused parameter â€˜byteSizeOfTypeâ€™ [-Wunused-parameter]
  348 |                          llvm::ConstantInt *byteSizeOfType,
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:39: warning: unused parameter â€˜storeIntoâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                          ~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:64: warning: unused parameter â€˜InvariantMDâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3752:55: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3752 |       updateAnalysis(call.getOperand(0), ptrptr, &call);
      |                                                       ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜ConcreteType TypeResults::intType(size_t, llvm::Value*, bool, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:4641:10: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 4641 |   return dt;
      |          ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:67,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h: In member function â€˜virtual void CacheUtility::freeCache(llvm::BasicBlock*, const SubLimitType&, int, llvm::AllocaInst*, llvm::ConstantInt*, llvm::Value*, llvm::MDNode*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:345:44: warning: unused parameter â€˜forwardPreheaderâ€™ [-Wunused-parameter]
  345 |   virtual void freeCache(llvm::BasicBlock *forwardPreheader,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:46: warning: unused parameter â€˜antimapâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:59: warning: unused parameter â€˜iâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                                                       ~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:347:44: warning: unused parameter â€˜allocâ€™ [-Wunused-parameter]
  347 |                          llvm::AllocaInst *alloc,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:348:45: warning: unused parameter â€˜byteSizeOfTypeâ€™ [-Wunused-parameter]
  348 |                          llvm::ConstantInt *byteSizeOfType,
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:39: warning: unused parameter â€˜storeIntoâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                          ~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:64: warning: unused parameter â€˜InvariantMDâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3910:42: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3910 |       updateAnalysis(&call, ptrint, &call);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3917:42: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 3917 |       updateAnalysis(&call, ptrint, &call);
      |                                          ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:18,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:33,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜ConcreteType TypeResults::firstPointer(size_t, llvm::Value*, bool, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:4734:10: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 4734 |   return dt;
      |          ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜TypeTree TypeAnalyzer::getReturnAnalysis()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:4097:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 4097 |   return vd;
      |          ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:27:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h: In constructor â€˜ActivityAnalyzer::ActivityAnalyzer(ActivityAnalyzer&, uint8_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:98:46: warning: â€˜ActivityAnalyzer::ActiveInstructionsâ€™ will be initialized after [-Wreorder]
   98 |   llvm::SmallPtrSet<llvm::Instruction *, 20> ActiveInstructions;
      |                                              ^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:91:39: warning:   â€˜llvm::SmallPtrSet<llvm::Value*, 4> ActivityAnalyzer::ConstantValuesâ€™ [-Wreorder]
   91 |   llvm::SmallPtrSet<llvm::Value *, 4> ConstantValues;
      |                                       ^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:142:3: warning:   when initialized here [-Wreorder]
  142 |   ActivityAnalyzer(ActivityAnalyzer &Other, uint8_t directions)
      |   ^~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:67,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h: In member function â€˜virtual void CacheUtility::freeCache(llvm::BasicBlock*, const SubLimitType&, int, llvm::AllocaInst*, llvm::ConstantInt*, llvm::Value*, llvm::MDNode*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:345:44: warning: unused parameter â€˜forwardPreheaderâ€™ [-Wunused-parameter]
  345 |   virtual void freeCache(llvm::BasicBlock *forwardPreheader,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:46: warning: unused parameter â€˜antimapâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:59: warning: unused parameter â€˜iâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                                                       ~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:347:44: warning: unused parameter â€˜allocâ€™ [-Wunused-parameter]
  347 |                          llvm::AllocaInst *alloc,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:348:45: warning: unused parameter â€˜byteSizeOfTypeâ€™ [-Wunused-parameter]
  348 |                          llvm::ConstantInt *byteSizeOfType,
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:39: warning: unused parameter â€˜storeIntoâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                          ~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:64: warning: unused parameter â€˜InvariantMDâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:51,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜void TypeAnalyzer::visitIPOCall(llvm::CallInst&, llvm::Function&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:4500:36: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 4500 |       updateAnalysis(arg, dt, &call);
      |                                    ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:4514:36: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
 4514 |     updateAnalysis(&call, vd, &call);
      |                                    ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:538:56: note:   initializing argument 2 of â€˜void TypeAnalyzer::updateAnalysis(llvm::Value*, TypeTree, llvm::Value*)â€™
  538 | void TypeAnalyzer::updateAnalysis(Value *Val, TypeTree Data, Value *Origin) {
      |                                               ~~~~~~~~~^~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:51,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜ConcreteType TypeResults::intType(size_t, llvm::Value*, bool, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:4641:10: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 4641 |   return dt;
      |          ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In member function â€˜ConcreteType TypeResults::firstPointer(size_t, llvm::Value*, bool, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:4734:10: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 4734 |   return dt;
      |          ^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:29:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::performLevelAnalysis()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:444:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  444 |       for (int i = 0; i < curr_inst->getNumOperands(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜int GradientUtils::getNextAvailableBin(int, int)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:485:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<int, std::allocator<int> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  485 |     for (int i = 0; i < bins_capacity.size(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:484:31: warning: unused parameter â€˜last_bin_usedâ€™ [-Wunused-parameter]
  484 |   int getNextAvailableBin(int last_bin_used, int region_size) {
      |                           ~~~~^~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::simpleMapForPerformance()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:503:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  503 |       for (int i = 0; i < level.second.size(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:29:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::performLevelAnalysis()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:444:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  444 |       for (int i = 0; i < curr_inst->getNumOperands(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:36: warning: comparison of integer expressions of different signedness: â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} and â€˜intâ€™ [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:60: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |                                                          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:509:17: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  509 |           if (i != level.second.size() - 1) {
      |               ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:46:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(const llvm::AAResultBase<T>&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:72:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1058:36: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1058 |   AAResultBase(const AAResultBase &Arg) {}
      |                ~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:75:54:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1059 |   AAResultBase(AAResultBase &&Arg) {}
      |                ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜uint GradientUtils::getUseOffset(llvm::Value*, llvm::User*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:529:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  529 |     for (int i = 0; i <  dyn_cast<Instruction>(use)->getNumOperands(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜int GradientUtils::getNextAvailableBin(int, int)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:485:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<int, std::allocator<int> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  485 |     for (int i = 0; i < bins_capacity.size(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:484:31: warning: unused parameter â€˜last_bin_usedâ€™ [-Wunused-parameter]
  484 |   int getNextAvailableBin(int last_bin_used, int region_size) {
      |                           ~~~~^~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::simpleMapForPerformance()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:503:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  503 |       for (int i = 0; i < level.second.size(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:18,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:33,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:36: warning: comparison of integer expressions of different signedness: â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} and â€˜intâ€™ [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:60: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |                                                          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:509:17: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  509 |           if (i != level.second.size() - 1) {
      |               ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜uint GradientUtils::getUseOffset(llvm::Value*, llvm::User*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:529:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  529 |     for (int i = 0; i <  dyn_cast<Instruction>(use)->getNumOperands(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::performLevelAnalysis()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:444:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  444 |       for (int i = 0; i < curr_inst->getNumOperands(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜int GradientUtils::getNextAvailableBin(int, int)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:485:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<int, std::allocator<int> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  485 |     for (int i = 0; i < bins_capacity.size(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:484:31: warning: unused parameter â€˜last_bin_usedâ€™ [-Wunused-parameter]
  484 |   int getNextAvailableBin(int last_bin_used, int region_size) {
      |                           ~~~~^~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::simpleMapForPerformance()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:503:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  503 |       for (int i = 0; i < level.second.size(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:36: warning: comparison of integer expressions of different signedness: â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} and â€˜intâ€™ [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:60: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |                                                          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:509:17: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  509 |           if (i != level.second.size() - 1) {
      |               ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜uint GradientUtils::getUseOffset(llvm::Value*, llvm::User*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:529:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  529 |     for (int i = 0; i <  dyn_cast<Instruction>(use)->getNumOperands(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::performLevelAnalysis()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:444:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  444 |       for (int i = 0; i < curr_inst->getNumOperands(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:67,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:61:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h: In member function â€˜virtual void CacheUtility::freeCache(llvm::BasicBlock*, const SubLimitType&, int, llvm::AllocaInst*, llvm::ConstantInt*, llvm::Value*, llvm::MDNode*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:345:44: warning: unused parameter â€˜forwardPreheaderâ€™ [-Wunused-parameter]
  345 |   virtual void freeCache(llvm::BasicBlock *forwardPreheader,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:46: warning: unused parameter â€˜antimapâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:59: warning: unused parameter â€˜iâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                                                       ~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:347:44: warning: unused parameter â€˜allocâ€™ [-Wunused-parameter]
  347 |                          llvm::AllocaInst *alloc,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:348:45: warning: unused parameter â€˜byteSizeOfTypeâ€™ [-Wunused-parameter]
  348 |                          llvm::ConstantInt *byteSizeOfType,
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:39: warning: unused parameter â€˜storeIntoâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                          ~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:64: warning: unused parameter â€˜InvariantMDâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜int GradientUtils::getNextAvailableBin(int, int)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:485:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<int, std::allocator<int> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  485 |     for (int i = 0; i < bins_capacity.size(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:484:31: warning: unused parameter â€˜last_bin_usedâ€™ [-Wunused-parameter]
  484 |   int getNextAvailableBin(int last_bin_used, int region_size) {
      |                           ~~~~^~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::simpleMapForPerformance()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:503:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  503 |       for (int i = 0; i < level.second.size(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::performLevelAnalysis()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:444:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  444 |       for (int i = 0; i < curr_inst->getNumOperands(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:36: warning: comparison of integer expressions of different signedness: â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} and â€˜intâ€™ [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:60: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |                                                          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:509:17: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  509 |           if (i != level.second.size() - 1) {
      |               ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜uint GradientUtils::getUseOffset(llvm::Value*, llvm::User*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:529:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  529 |     for (int i = 0; i <  dyn_cast<Instruction>(use)->getNumOperands(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜int GradientUtils::getNextAvailableBin(int, int)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:485:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<int, std::allocator<int> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  485 |     for (int i = 0; i < bins_capacity.size(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:484:31: warning: unused parameter â€˜last_bin_usedâ€™ [-Wunused-parameter]
  484 |   int getNextAvailableBin(int last_bin_used, int region_size) {
      |                           ~~~~^~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::simpleMapForPerformance()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:503:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  503 |       for (int i = 0; i < level.second.size(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:36: warning: comparison of integer expressions of different signedness: â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} and â€˜intâ€™ [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:60: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |                                                          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:509:17: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  509 |           if (i != level.second.size() - 1) {
      |               ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜uint GradientUtils::getUseOffset(llvm::Value*, llvm::User*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:529:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  529 |     for (int i = 0; i <  dyn_cast<Instruction>(use)->getNumOperands(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:20,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::performLevelAnalysis()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:444:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  444 |       for (int i = 0; i < curr_inst->getNumOperands(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜int GradientUtils::getNextAvailableBin(int, int)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:485:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<int, std::allocator<int> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  485 |     for (int i = 0; i < bins_capacity.size(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:484:31: warning: unused parameter â€˜last_bin_usedâ€™ [-Wunused-parameter]
  484 |   int getNextAvailableBin(int last_bin_used, int region_size) {
      |                           ~~~~^~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::simpleMapForPerformance()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:503:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  503 |       for (int i = 0; i < level.second.size(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:36: warning: comparison of integer expressions of different signedness: â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} and â€˜intâ€™ [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:60: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |                                                          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:509:17: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  509 |           if (i != level.second.size() - 1) {
      |               ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜uint GradientUtils::getUseOffset(llvm::Value*, llvm::User*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:529:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  529 |     for (int i = 0; i <  dyn_cast<Instruction>(use)->getNumOperands(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:46:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(const llvm::AAResultBase<T>&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:72:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1058:36: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1058 |   AAResultBase(const AAResultBase &Arg) {}
      |                ~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:75:54:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1059 |   AAResultBase(AAResultBase &&Arg) {}
      |                ~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/MustExitScalarEvolution.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:51,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:67,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h: In member function â€˜virtual void CacheUtility::freeCache(llvm::BasicBlock*, const SubLimitType&, int, llvm::AllocaInst*, llvm::ConstantInt*, llvm::Value*, llvm::MDNode*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:345:44: warning: unused parameter â€˜forwardPreheaderâ€™ [-Wunused-parameter]
  345 |   virtual void freeCache(llvm::BasicBlock *forwardPreheader,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:46: warning: unused parameter â€˜antimapâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                          ~~~~~~~~~~~~~~~~~~~~^~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:346:59: warning: unused parameter â€˜iâ€™ [-Wunused-parameter]
  346 |                          const SubLimitType &antimap, int i,
      |                                                       ~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:347:44: warning: unused parameter â€˜allocâ€™ [-Wunused-parameter]
  347 |                          llvm::AllocaInst *alloc,
      |                          ~~~~~~~~~~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:348:45: warning: unused parameter â€˜byteSizeOfTypeâ€™ [-Wunused-parameter]
  348 |                          llvm::ConstantInt *byteSizeOfType,
      |                          ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:39: warning: unused parameter â€˜storeIntoâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                          ~~~~~~~~~~~~~^~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:349:64: warning: unused parameter â€˜InvariantMDâ€™ [-Wunused-parameter]
  349 |                          llvm::Value *storeInto, llvm::MDNode *InvariantMD) {
      |                                                  ~~~~~~~~~~~~~~^~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLTraits.h:19,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/DiagnosticInfo.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:56,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:51,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::performLevelAnalysis()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:444:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  444 |       for (int i = 0; i < curr_inst->getNumOperands(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜int GradientUtils::getNextAvailableBin(int, int)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:485:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<int, std::allocator<int> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  485 |     for (int i = 0; i < bins_capacity.size(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:484:31: warning: unused parameter â€˜last_bin_usedâ€™ [-Wunused-parameter]
  484 |   int getNextAvailableBin(int last_bin_used, int region_size) {
      |                           ~~~~^~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::simpleMapForPerformance()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:503:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  503 |       for (int i = 0; i < level.second.size(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:20,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:36: warning: comparison of integer expressions of different signedness: â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} and â€˜intâ€™ [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:60: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |                                                          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:509:17: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  509 |           if (i != level.second.size() - 1) {
      |               ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜uint GradientUtils::getUseOffset(llvm::Value*, llvm::User*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:529:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  529 |     for (int i = 0; i <  dyn_cast<Instruction>(use)->getNumOperands(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:18,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:36,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:18,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:36,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLTraits.h:19,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/DiagnosticInfo.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:56,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::performLevelAnalysis()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:444:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  444 |       for (int i = 0; i < curr_inst->getNumOperands(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜int GradientUtils::getNextAvailableBin(int, int)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:485:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<int, std::allocator<int> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  485 |     for (int i = 0; i < bins_capacity.size(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:484:31: warning: unused parameter â€˜last_bin_usedâ€™ [-Wunused-parameter]
  484 |   int getNextAvailableBin(int last_bin_used, int region_size) {
      |                           ~~~~^~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::simpleMapForPerformance()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:503:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  503 |       for (int i = 0; i < level.second.size(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:36: warning: comparison of integer expressions of different signedness: â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} and â€˜intâ€™ [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:60: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |                                                          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:509:17: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  509 |           if (i != level.second.size() - 1) {
      |               ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜uint GradientUtils::getUseOffset(llvm::Value*, llvm::User*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:529:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  529 |     for (int i = 0; i <  dyn_cast<Instruction>(use)->getNumOperands(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:61:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::performLevelAnalysis()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:444:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  444 |       for (int i = 0; i < curr_inst->getNumOperands(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜int GradientUtils::getNextAvailableBin(int, int)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:485:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<int, std::allocator<int> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  485 |     for (int i = 0; i < bins_capacity.size(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:484:31: warning: unused parameter â€˜last_bin_usedâ€™ [-Wunused-parameter]
  484 |   int getNextAvailableBin(int last_bin_used, int region_size) {
      |                           ~~~~^~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::simpleMapForPerformance()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:503:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  503 |       for (int i = 0; i < level.second.size(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:36: warning: comparison of integer expressions of different signedness: â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} and â€˜intâ€™ [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:60: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |                                                          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:509:17: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  509 |           if (i != level.second.size() - 1) {
      |               ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜uint GradientUtils::getUseOffset(llvm::Value*, llvm::User*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:529:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  529 |     for (int i = 0; i <  dyn_cast<Instruction>(use)->getNumOperands(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:61:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::performLevelAnalysis()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:444:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  444 |       for (int i = 0; i < curr_inst->getNumOperands(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜int GradientUtils::getNextAvailableBin(int, int)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:485:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<int, std::allocator<int> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  485 |     for (int i = 0; i < bins_capacity.size(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:484:31: warning: unused parameter â€˜last_bin_usedâ€™ [-Wunused-parameter]
  484 |   int getNextAvailableBin(int last_bin_used, int region_size) {
      |                           ~~~~^~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜void GradientUtils::simpleMapForPerformance()â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:503:25: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  503 |       for (int i = 0; i < level.second.size(); i++) {
      |                       ~~^~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:36: warning: comparison of integer expressions of different signedness: â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} and â€˜intâ€™ [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:506:60: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  506 |         if (region_ops_list.size() == max_region_size || i == level.second.size() - 1) {
      |                                                          ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:509:17: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<llvm::Value*, std::allocator<llvm::Value*> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
  509 |           if (i != level.second.size() - 1) {
      |               ~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h: In member function â€˜uint GradientUtils::getUseOffset(llvm::Value*, llvm::User*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:529:23: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
  529 |     for (int i = 0; i <  dyn_cast<Instruction>(use)->getNumOperands(); i++) {
      |                     ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h: In function â€˜bool is_use_directly_needed_in_reverse(TypeResults&, const GradientUtils*, const llvm::Value*, const llvm::Instruction*, const llvm::SmallPtrSetImpl<llvm::BasicBlock*>&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:39:18: warning: unused parameter â€˜TRâ€™ [-Wunused-parameter]
   39 |     TypeResults &TR, const GradientUtils *gutils, const Value *val,
      |     ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp: In member function â€˜bool {anonymous}::Enzyme::HandleAutoDiff(llvm::CallInst*, llvm::TargetLibraryInfo&, bool, DerivativeMode, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:365:12: warning: unused variable â€˜funcâ€™ [-Wunused-variable]
  365 |       auto func = cast<Function>(fn);
      |            ^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h: In function â€˜bool is_use_directly_needed_in_reverse(TypeResults&, const GradientUtils*, const llvm::Value*, const llvm::Instruction*, const llvm::SmallPtrSetImpl<llvm::BasicBlock*>&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:39:18: warning: unused parameter â€˜TRâ€™ [-Wunused-parameter]
   39 |     TypeResults &TR, const GradientUtils *gutils, const Value *val,
      |     ~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = double; Args = {double, int*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3974:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
 3231 | void analyzeFuncTypes(RT (*fn)(Args...), CallInst &call, TypeAnalyzer &TA) {
      |                       ~~~~~^~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = float; Args = {float, int*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3975:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = long double; Args = {long double, int*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3976:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = double; Args = {double, int}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3977:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = double; Args = {double, double*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3978:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = double; Args = {double, double, int*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3980:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = float; Args = {float, float, int*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3981:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = long double; Args = {long double, long double, int*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3982:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h: In copy constructor â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:82:3: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
   82 |   FnTypeInfo(const FnTypeInfo &) = default;
      |   ^~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp: In member function â€˜bool {anonymous}::Enzyme::HandleAutoDiff(llvm::CallInst*, llvm::TargetLibraryInfo&, bool, DerivativeMode, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:716:50: note: synthesized method â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™ first required here
  716 |                             .typeInfo = type_args},
      |                                                  ^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:16,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h:20,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:119,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:39:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doInitialization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:48:44: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   48 |   virtual bool doInitialization(CallGraph &CG) {
      |                                 ~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doFinalization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:63:42: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   63 |   virtual bool doFinalization(CallGraph &CG) {
      |                               ~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h: In function â€˜bool is_use_directly_needed_in_reverse(TypeResults&, const GradientUtils*, const llvm::Value*, const llvm::Instruction*, const llvm::SmallPtrSetImpl<llvm::BasicBlock*>&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:39:18: warning: unused parameter â€˜TRâ€™ [-Wunused-parameter]
   39 |     TypeResults &TR, const GradientUtils *gutils, const Value *val,
      |     ~~~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::DummyCGSCCPass::runOnSCC(llvm::CallGraphSCC&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:131:31: warning: unused parameter â€˜SCCâ€™ [-Wunused-parameter]
  131 |   bool runOnSCC(CallGraphSCC &SCC) override { return false; }
      |                 ~~~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:16,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h: In function â€˜bool is_use_directly_needed_in_reverse(TypeResults&, const GradientUtils*, const llvm::Value*, const llvm::Instruction*, const llvm::SmallPtrSetImpl<llvm::BasicBlock*>&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:39:18: warning: unused parameter â€˜TRâ€™ [-Wunused-parameter]
   39 |     TypeResults &TR, const GradientUtils *gutils, const Value *val,
      |     ~~~~~~~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:16,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:46:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Utils/CallGraphUpdater.h:20,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:119,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:39:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doInitialization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:48:44: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   48 |   virtual bool doInitialization(CallGraph &CG) {
      |                                 ~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doFinalization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:63:42: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   63 |   virtual bool doFinalization(CallGraph &CG) {
      |                               ~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = double; Args = {double, int*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3974:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
 3231 | void analyzeFuncTypes(RT (*fn)(Args...), CallInst &call, TypeAnalyzer &TA) {
      |                       ~~~~~^~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = float; Args = {float, int*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3975:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = long double; Args = {long double, int*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3976:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = double; Args = {double, int}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3977:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = double; Args = {double, double*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3978:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = double; Args = {double, double, int*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3980:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = float; Args = {float, float, int*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3981:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = long double; Args = {long double, long double, int*}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3982:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3231:28: warning: unused parameter â€˜fnâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::DummyCGSCCPass::runOnSCC(llvm::CallGraphSCC&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:131:31: warning: unused parameter â€˜SCCâ€™ [-Wunused-parameter]
  131 |   bool runOnSCC(CallGraphSCC &SCC) override { return false; }
      |                 ~~~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:16,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:52:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:41,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h: In function â€˜TypeTree parseTBAA(TBAAStructTypeNode, llvm::Instruction&, const llvm::DataLayout&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:403:25: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  403 |       return TypeTree(CT).Only(-1);
      |                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:416:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  416 |   return Result;
      |          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h: In function â€˜TypeTree parseTBAA(llvm::Instruction&, const llvm::DataLayout&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:464:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  464 |   return Result;
      |          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h: In function â€˜TypeTree parseTBAA(TBAAStructTypeNode, llvm::Instruction&, const llvm::DataLayout&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:403:25: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
  403 |       return TypeTree(CT).Only(-1);
      |                         ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:77:25: note:   initializing argument 1 of â€˜TypeTree::TypeTree(ConcreteType)â€™
   77 |   TypeTree(ConcreteType dat) {
      |            ~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:416:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  416 |   return Result;
      |          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h: In function â€˜TypeTree parseTBAA(llvm::Instruction&, const llvm::DataLayout&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TBAA.h:464:10: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  464 |   return Result;
      |          ^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp: In member function â€˜bool {anonymous}::Enzyme::HandleAutoDiff(llvm::CallInst*, llvm::TargetLibraryInfo&, bool, DerivativeMode, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:365:12: warning: unused variable â€˜funcâ€™ [-Wunused-variable]
  365 |       auto func = cast<Function>(fn);
      |            ^~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:41,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:27:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:18,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:39:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In static member function â€˜static bool llvm::AbstractAttribute::classof(const llvm::AADepGraphNode*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2279:45: warning: unused parameter â€˜DGNâ€™ [-Wunused-parameter]
 2279 |   static bool classof(const AADepGraphNode *DGN) { return true; }
      |                       ~~~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In member function â€˜virtual void llvm::AbstractAttribute::initialize(llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2289:39: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2289 |   virtual void initialize(Attributor &A) {}
      |                           ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In member function â€˜virtual llvm::ChangeStatus llvm::AbstractAttribute::manifest(llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2331:45: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2331 |   virtual ChangeStatus manifest(Attributor &A) {
      |                                 ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAReturnedValues::AAReturnedValues(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2388:55: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2388 |   AAReturnedValues(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                           ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoUnwind::AANoUnwind(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2440:49: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2440 |   AANoUnwind(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                     ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoSync::AANoSync(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2469:47: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2469 |   AANoSync(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANonNull::AANonNull(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2499:48: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2499 |   AANonNull(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                    ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoRecurse::AANoRecurse(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2529:50: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2529 |   AANoRecurse(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                      ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAWillReturn::AAWillReturn(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2559:51: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2559 |   AAWillReturn(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                       ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAUndefinedBehavior::AAUndefinedBehavior(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2589:58: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2589 |   AAUndefinedBehavior(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                              ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAReachability::AAReachability(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2626:53: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2626 |   AAReachability(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                         ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoAlias::AANoAlias(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2668:48: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2668 |   AANoAlias(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                    ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoFree::AANoFree(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2698:47: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2698 |   AANoFree(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoReturn::AANoReturn(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2728:49: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2728 |   AANoReturn(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                     ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:53:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual unsigned int llvm::Dependence::getDirection(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:158:44: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  158 |     virtual unsigned getDirection(unsigned Level) const { return DVEntry::ALL; }
      |                                   ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual const llvm::SCEV* llvm::Dependence::getDistance(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:162:46: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  162 |     virtual const SCEV *getDistance(unsigned Level) const { return nullptr; }
      |                                     ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAIsDead::AAIsDead(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2757:47: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2757 |   AAIsDead(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual bool llvm::Dependence::isPeelFirst(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:166:39: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  166 |     virtual bool isPeelFirst(unsigned Level) const { return false; }
      |                              ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual bool llvm::Dependence::isPeelLast(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:170:38: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  170 |     virtual bool isPeelLast(unsigned Level) const { return false; }
      |                             ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual bool llvm::Dependence::isSplitable(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:174:39: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  174 |     virtual bool isSplitable(unsigned Level) const { return false; }
      |                              ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In member function â€˜virtual bool llvm::AAIsDead::isEdgeDead(const llvm::BasicBlock*, const llvm::BasicBlock*) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2806:45: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
 2806 |   virtual bool isEdgeDead(const BasicBlock *From, const BasicBlock *To) const {
      |                           ~~~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2806:69: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
 2806 |   virtual bool isEdgeDead(const BasicBlock *From, const BasicBlock *To) const {
      |                                                   ~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:39:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In static member function â€˜static bool llvm::AbstractAttribute::classof(const llvm::AADepGraphNode*)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2279:45: warning: unused parameter â€˜DGNâ€™ [-Wunused-parameter]
 2279 |   static bool classof(const AADepGraphNode *DGN) { return true; }
      |                       ~~~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In member function â€˜virtual void llvm::AbstractAttribute::initialize(llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2289:39: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2289 |   virtual void initialize(Attributor &A) {}
      |                           ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In member function â€˜virtual llvm::ChangeStatus llvm::AbstractAttribute::manifest(llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2331:45: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2331 |   virtual ChangeStatus manifest(Attributor &A) {
      |                                 ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AADereferenceable::AADereferenceable(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2977:56: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2977 |   AADereferenceable(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                            ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAAlign::AAAlign(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3033:46: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3033 |   AAAlign(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                  ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoCapture::AANoCapture(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3064:50: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3064 |   AANoCapture(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                      ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAValueSimplify::AAValueSimplify(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3124:54: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3124 |   AAValueSimplify(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                          ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAReturnedValues::AAReturnedValues(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2388:55: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2388 |   AAReturnedValues(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                           ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAHeapToStack::AAHeapToStack(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3153:52: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3153 |   AAHeapToStack(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                        ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAPrivatizablePtr::AAPrivatizablePtr(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3192:56: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3192 |   AAPrivatizablePtr(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                            ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoUnwind::AANoUnwind(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2440:49: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2440 |   AANoUnwind(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                     ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoSync::AANoSync(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2469:47: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2469 |   AANoSync(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAMemoryBehavior::AAMemoryBehavior(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3230:55: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3230 |   AAMemoryBehavior(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                           ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANonNull::AANonNull(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2499:48: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2499 |   AANonNull(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                    ~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h: In copy constructor â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:82:3: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
   82 |   FnTypeInfo(const FnTypeInfo &) = default;
      |   ^~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp: In member function â€˜bool {anonymous}::Enzyme::HandleAutoDiff(llvm::CallInst*, llvm::TargetLibraryInfo&, bool, DerivativeMode, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:716:50: note: synthesized method â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™ first required here
  716 |                             .typeInfo = type_args},
      |                                                  ^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoRecurse::AANoRecurse(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2529:50: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2529 |   AANoRecurse(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                      ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAWillReturn::AAWillReturn(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2559:51: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2559 |   AAWillReturn(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                       ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAMemoryLocation::AAMemoryLocation(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3295:55: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3295 |   AAMemoryLocation(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                           ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAUndefinedBehavior::AAUndefinedBehavior(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2589:58: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2589 |   AAUndefinedBehavior(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                              ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAReachability::AAReachability(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2626:53: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2626 |   AAReachability(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                         ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoAlias::AANoAlias(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2668:48: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2668 |   AANoAlias(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                    ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoFree::AANoFree(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2698:47: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2698 |   AANoFree(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoReturn::AANoReturn(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2728:49: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2728 |   AANoReturn(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                     ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAIsDead::AAIsDead(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2757:47: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2757 |   AAIsDead(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                   ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In member function â€˜virtual bool llvm::AAIsDead::isEdgeDead(const llvm::BasicBlock*, const llvm::BasicBlock*) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2806:45: warning: unused parameter â€˜Fromâ€™ [-Wunused-parameter]
 2806 |   virtual bool isEdgeDead(const BasicBlock *From, const BasicBlock *To) const {
      |                           ~~~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2806:69: warning: unused parameter â€˜Toâ€™ [-Wunused-parameter]
 2806 |   virtual bool isEdgeDead(const BasicBlock *From, const BasicBlock *To) const {
      |                                                   ~~~~~~~~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAValueConstantRange::AAValueConstantRange(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3461:59: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3461 |   AAValueConstantRange(const IRPosition &IRP, Attributor &A)
      |                                               ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAPotentialValues::AAPotentialValues(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3710:56: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3710 |   AAPotentialValues(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                            ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In member function â€˜llvm::Optional<llvm::ConstantInt*> llvm::AAPotentialValues::getAssumedConstantInt(llvm::Attributor&, const llvm::Instruction*) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3724:37: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3724 |   getAssumedConstantInt(Attributor &A,
      |                         ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3725:44: warning: unused parameter â€˜CtxIâ€™ [-Wunused-parameter]
 3725 |                         const Instruction *CtxI = nullptr) const {
      |                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoUndef::AANoUndef(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3761:48: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3761 |   AANoUndef(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                    ~~~~~~~~~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp: In function â€˜TypeTree eunwrap(CTypeTreeRef)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:94:58: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
   94 | TypeTree eunwrap(CTypeTreeRef CTT) { return *(TypeTree *)CTT; }
      |                                                          ^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp: In function â€˜EnzymeTypeTree* ewrap(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:132:40: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  132 |   return (CTypeTreeRef)(new TypeTree(TT));
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h: In copy constructor â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:82:3: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
   82 |   FnTypeInfo(const FnTypeInfo &) = default;
      |   ^~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AADereferenceable::AADereferenceable(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:2977:56: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 2977 |   AADereferenceable(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                            ~~~~~~~~~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp: In function â€˜FnTypeInfo eunwrap(CFnTypeInfo, llvm::Function*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:146:10: note: synthesized method â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™ first required here
  146 |   return FTI;
      |          ^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAAlign::AAAlign(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3033:46: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3033 |   AAAlign(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                  ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoCapture::AANoCapture(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3064:50: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3064 |   AANoCapture(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                      ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAValueSimplify::AAValueSimplify(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3124:54: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3124 |   AAValueSimplify(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                          ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAHeapToStack::AAHeapToStack(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3153:52: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3153 |   AAHeapToStack(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                        ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAPrivatizablePtr::AAPrivatizablePtr(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3192:56: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3192 |   AAPrivatizablePtr(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                            ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAMemoryBehavior::AAMemoryBehavior(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3230:55: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3230 |   AAMemoryBehavior(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                           ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAMemoryLocation::AAMemoryLocation(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3295:55: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3295 |   AAMemoryLocation(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                           ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAValueConstantRange::AAValueConstantRange(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3461:59: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3461 |   AAValueConstantRange(const IRPosition &IRP, Attributor &A)
      |                                               ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AAPotentialValues::AAPotentialValues(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3710:56: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3710 |   AAPotentialValues(const IRPosition &IRP, Attributor &A) : Base(IRP) {}
      |                                            ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In member function â€˜llvm::Optional<llvm::ConstantInt*> llvm::AAPotentialValues::getAssumedConstantInt(llvm::Attributor&, const llvm::Instruction*) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3724:37: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3724 |   getAssumedConstantInt(Attributor &A,
      |                         ~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3725:44: warning: unused parameter â€˜CtxIâ€™ [-Wunused-parameter]
 3725 |                         const Instruction *CtxI = nullptr) const {
      |                         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h: In constructor â€˜llvm::AANoUndef::AANoUndef(const llvm::IRPosition&, llvm::Attributor&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:3761:48: warning: unused parameter â€˜Aâ€™ [-Wunused-parameter]
 3761 |   AANoUndef(const IRPosition &IRP, Attributor &A) : IRAttribute(IRP) {}
      |                                    ~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:18,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp: In function â€˜TypeTree eunwrap(CTypeTreeRef)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:94:58: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
   94 | TypeTree eunwrap(CTypeTreeRef CTT) { return *(TypeTree *)CTT; }
      |                                                          ^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp: In function â€˜EnzymeTypeTree* ewrap(const TypeTree&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:132:40: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  132 |   return (CTypeTreeRef)(new TypeTree(TT));
      |                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h: In copy constructor â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:82:3: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
   82 |   FnTypeInfo(const FnTypeInfo &) = default;
      |   ^~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp: In function â€˜FnTypeInfo eunwrap(CFnTypeInfo, llvm::Function*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:146:10: note: synthesized method â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™ first required here
  146 |   return FTI;
      |          ^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp: In function â€˜EnzymeTypeTree* EnzymeGradientUtilsAllocAndGetTypeTree(GradientUtils*, LLVMValueRef)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:343:34: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  343 |   TypeTree *pTT = new TypeTree(TT);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp: In function â€˜EnzymeTypeTree* EnzymeNewTypeTreeTR(CTypeTreeRef)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:483:56: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  483 |   return (CTypeTreeRef)(new TypeTree(*(TypeTree *)(CTR)));
      |                                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp: In function â€˜uint8_t EnzymeMergeTypeTree(CTypeTreeRef, CTypeTreeRef)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:490:76: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  490 |   return ((TypeTree *)dst)->orIn(*(TypeTree *)src, /*PointerIntSame*/ false);
      |                                                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysisPrinter.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp: In function â€˜EnzymeTypeTree* EnzymeGradientUtilsAllocAndGetTypeTree(GradientUtils*, LLVMValueRef)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:343:34: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  343 |   TypeTree *pTT = new TypeTree(TT);
      |                                  ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp: In function â€˜EnzymeTypeTree* EnzymeNewTypeTreeTR(CTypeTreeRef)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:483:56: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  483 |   return (CTypeTreeRef)(new TypeTree(*(TypeTree *)(CTR)));
      |                                                        ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp: In function â€˜uint8_t EnzymeMergeTypeTree(CTypeTreeRef, CTypeTreeRef)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:490:76: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
  490 |   return ((TypeTree *)dst)->orIn(*(TypeTree *)src, /*PointerIntSame*/ false);
      |                                                                            ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:1053:28: note:   initializing argument 1 of â€˜bool TypeTree::orIn(TypeTree, bool)â€™
 1053 |   bool orIn(const TypeTree RHS, bool PointerIntSame) {
      |             ~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/InlineCost.h:17,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:23,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:71:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doInitialization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:48:44: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   48 |   virtual bool doInitialization(CallGraph &CG) {
      |                                 ~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doFinalization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:63:42: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   63 |   virtual bool doFinalization(CallGraph &CG) {
      |                               ~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::DummyCGSCCPass::runOnSCC(llvm::CallGraphSCC&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:131:31: warning: unused parameter â€˜SCCâ€™ [-Wunused-parameter]
  131 |   bool runOnSCC(CallGraphSCC &SCC) override { return false; }
      |                 ~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:20,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:52:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(const llvm::AAResultBase<T>&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:72:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1058:36: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1058 |   AAResultBase(const AAResultBase &Arg) {}
      |                ~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:75:54:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1059 |   AAResultBase(AAResultBase &&Arg) {}
      |                ~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h: In copy constructor â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:82:3: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
   82 |   FnTypeInfo(const FnTypeInfo &) = default;
      |   ^~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp: In static member function â€˜static llvm::Constant* GradientUtils::GetOrCreateShadowFunction(EnzymeLogic&, llvm::TargetLibraryInfo&, TypeAnalysis&, llvm::Function*, bool, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:2868:46: note: synthesized method â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™ first required here
 2868 |                         .typeInfo = type_args},
      |                                              ^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:33:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.cpp:33:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h: In copy constructor â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:82:3: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
   82 |   FnTypeInfo(const FnTypeInfo &) = default;
      |   ^~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp: In static member function â€˜static llvm::Constant* GradientUtils::GetOrCreateShadowFunction(EnzymeLogic&, llvm::TargetLibraryInfo&, TypeAnalysis&, llvm::Function*, bool, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:2868:46: note: synthesized method â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™ first required here
 2868 |                         .typeInfo = type_args},
      |                                              ^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:35:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual unsigned int llvm::Dependence::getDirection(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:158:44: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  158 |     virtual unsigned getDirection(unsigned Level) const { return DVEntry::ALL; }
      |                                   ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual const llvm::SCEV* llvm::Dependence::getDistance(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:162:46: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  162 |     virtual const SCEV *getDistance(unsigned Level) const { return nullptr; }
      |                                     ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual bool llvm::Dependence::isPeelFirst(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:166:39: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  166 |     virtual bool isPeelFirst(unsigned Level) const { return false; }
      |                              ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual bool llvm::Dependence::isPeelLast(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:170:38: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  170 |     virtual bool isPeelLast(unsigned Level) const { return false; }
      |                             ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual bool llvm::Dependence::isSplitable(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:174:39: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  174 |     virtual bool isSplitable(unsigned Level) const { return false; }
      |                              ~~~~~~~~~^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp: In member function â€˜virtual llvm::Value* GradientUtils::lookupM(llvm::Value*, llvm::IRBuilder<>&, const ValueToValueMapTy&, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:3804:27: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
 3804 |         for (int i = 0; i < op_inst->getNumOperands(); i++) {
      |                         ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:3818:22: warning: unused variable â€˜Câ€™ [-Wunused-variable]
 3818 |         LLVMContext& C = prelcssaInst->getContext();
      |                      ^
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:3822:13: warning: unused variable â€˜indexâ€™ [-Wunused-variable]
 3822 |         int index = addToRegionMap((Value *)prelcssaInst, my_parent);
      |             ^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp: In member function â€˜virtual llvm::Value* GradientUtils::lookupM(llvm::Value*, llvm::IRBuilder<>&, const ValueToValueMapTy&, bool)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:3804:27: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜unsigned intâ€™ [-Wsign-compare]
 3804 |         for (int i = 0; i < op_inst->getNumOperands(); i++) {
      |                         ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:3818:22: warning: unused variable â€˜Câ€™ [-Wunused-variable]
 3818 |         LLVMContext& C = prelcssaInst->getContext();
      |                      ^
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:3822:13: warning: unused variable â€˜indexâ€™ [-Wunused-variable]
 3822 |         int index = addToRegionMap((Value *)prelcssaInst, my_parent);
      |             ^~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:31:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:689:37:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:1097:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:689:37:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/CacheUtility.cpp:1097:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h: In instantiation of â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::delegateCallInst(llvm::Instruction&) [with SubClass = TypeAnalyzer; RetTy = void]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:127:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitRet(llvm::ReturnInst&) [with SubClass = TypeAnalyzer; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:127:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = TypeAnalyzer; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:413:27:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:304:39: warning: unused parameter â€˜Iâ€™ [-Wunused-parameter]
  304 |   RetTy delegateCallInst(Instruction &I) {
      |                          ~~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h: In instantiation of â€˜void llvm::InstVisitor<SubClass, RetTy>::visitInstruction(llvm::Instruction&) [with SubClass = TypeAnalyzer; RetTy = void]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:211:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitUserOp1(llvm::Instruction&) [with SubClass = TypeAnalyzer; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:211:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = TypeAnalyzer; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:413:27:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:279:38: warning: unused parameter â€˜Iâ€™ [-Wunused-parameter]
  279 |   void visitInstruction(Instruction &I) {}  // Ignore unhandled instructions
      |                         ~~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:67:
/localhome/mha157/Enzyme/enzyme/Enzyme/Scheduler.h: In member function â€˜uint32_t instrumem::SchedulerPass::getNextAvailableLevel(uint32_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/Scheduler.h:46:32: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<unsigned int, std::allocator<unsigned int> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
   46 |             for (int i=level; i<cyclesOps.size(); i++) {
      |                               ~^~~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:35:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual unsigned int llvm::Dependence::getDirection(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:158:44: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  158 |     virtual unsigned getDirection(unsigned Level) const { return DVEntry::ALL; }
      |                                   ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual const llvm::SCEV* llvm::Dependence::getDistance(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:162:46: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  162 |     virtual const SCEV *getDistance(unsigned Level) const { return nullptr; }
      |                                     ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual bool llvm::Dependence::isPeelFirst(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:166:39: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  166 |     virtual bool isPeelFirst(unsigned Level) const { return false; }
      |                              ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual bool llvm::Dependence::isPeelLast(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:170:38: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  170 |     virtual bool isPeelLast(unsigned Level) const { return false; }
      |                             ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual bool llvm::Dependence::isSplitable(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:174:39: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  174 |     virtual bool isSplitable(unsigned Level) const { return false; }
      |                              ~~~~~~~~~^~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:68:
/localhome/mha157/Enzyme/enzyme/Enzyme/NodeDetector.h: In member function â€˜void instrumem::NodeDetectorPass::visitBitCastInst(llvm::BitCastInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/NodeDetector.h:38:44: warning: unused parameter â€˜insâ€™ [-Wunused-parameter]
   38 |         void visitBitCastInst(BitCastInst &ins) {}
      |                               ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/NodeDetector.h: In member function â€˜void instrumem::NodeDetectorPass::visitCallInst(llvm::CallInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/NodeDetector.h:39:38: warning: unused parameter â€˜insâ€™ [-Wunused-parameter]
   39 |         void visitCallInst(CallInst &ins) {}
      |                            ~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:20,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:69:
/localhome/mha157/Enzyme/enzyme/Enzyme/BFSPass.h: In constructor â€˜instrumem::Node::Node(llvm::Value*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/BFSPass.h:59:16: warning: â€˜instrumem::Node::valueâ€™ will be initialized after [-Wreorder]
   59 |         Value *value;
      |                ^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/BFSPass.h:56:13: warning:   â€˜int instrumem::Node::levelâ€™ [-Wreorder]
   56 |         int level;
      |             ^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/BFSPass.h:27:9: warning:   when initialized here [-Wreorder]
   27 |         Node(Value *v) : value(v), level(0), cost(0) {
      |         ^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:53:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual unsigned int llvm::Dependence::getDirection(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:158:44: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  158 |     virtual unsigned getDirection(unsigned Level) const { return DVEntry::ALL; }
      |                                   ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual const llvm::SCEV* llvm::Dependence::getDistance(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:162:46: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  162 |     virtual const SCEV *getDistance(unsigned Level) const { return nullptr; }
      |                                     ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual bool llvm::Dependence::isPeelFirst(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:166:39: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  166 |     virtual bool isPeelFirst(unsigned Level) const { return false; }
      |                              ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual bool llvm::Dependence::isPeelLast(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:170:38: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  170 |     virtual bool isPeelLast(unsigned Level) const { return false; }
      |                             ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h: In member function â€˜virtual bool llvm::Dependence::isSplitable(unsigned int) constâ€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/DependenceAnalysis.h:174:39: warning: unused parameter â€˜Levelâ€™ [-Wunused-parameter]
  174 |     virtual bool isSplitable(unsigned Level) const { return false; }
      |                              ~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:31:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:52:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(const llvm::AAResultBase<T>&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:72:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1058:36: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1058 |   AAResultBase(const AAResultBase &Arg) {}
      |                ~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:75:54:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1059 |   AAResultBase(AAResultBase &&Arg) {}
      |                ~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:46:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h: In instantiation of â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::delegateCallInst(llvm::Instruction&) [with SubClass = TypeAnalyzer; RetTy = void]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:127:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitRet(llvm::ReturnInst&) [with SubClass = TypeAnalyzer; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:127:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = TypeAnalyzer; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:413:27:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:304:39: warning: unused parameter â€˜Iâ€™ [-Wunused-parameter]
  304 |   RetTy delegateCallInst(Instruction &I) {
      |                          ~~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h: In instantiation of â€˜void llvm::InstVisitor<SubClass, RetTy>::visitInstruction(llvm::Instruction&) [with SubClass = TypeAnalyzer; RetTy = void]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:211:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitUserOp1(llvm::Instruction&) [with SubClass = TypeAnalyzer; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:211:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = TypeAnalyzer; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:413:27:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:279:38: warning: unused parameter â€˜Iâ€™ [-Wunused-parameter]
  279 |   void visitInstruction(Instruction &I) {}  // Ignore unhandled instructions
      |                         ~~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:31:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:20,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h: In copy constructor â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:82:3: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
   82 |   FnTypeInfo(const FnTypeInfo &) = default;
      |   ^~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp: In function â€˜FnTypeInfo preventTypeAnalysisLoops(const FnTypeInfo&, llvm::Function*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1530:28: note: synthesized method â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™ first required here
 1530 |   FnTypeInfo oldTypeInfo = oldTypeInfo_;
      |                            ^~~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:20,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/InlineCost.h:17,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:23,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:71:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doInitialization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:48:44: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   48 |   virtual bool doInitialization(CallGraph &CG) {
      |                                 ~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::CallGraphSCCPass::doFinalization(llvm::CallGraph&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:63:42: warning: unused parameter â€˜CGâ€™ [-Wunused-parameter]
   63 |   virtual bool doFinalization(CallGraph &CG) {
      |                               ~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h: In member function â€˜virtual bool llvm::DummyCGSCCPass::runOnSCC(llvm::CallGraphSCC&)â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CallGraphSCCPass.h:131:31: warning: unused parameter â€˜SCCâ€™ [-Wunused-parameter]
  131 |   bool runOnSCC(CallGraphSCC &SCC) override { return false; }
      |                 ~~~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:31:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:67:
/localhome/mha157/Enzyme/enzyme/Enzyme/Scheduler.h: In member function â€˜uint32_t instrumem::SchedulerPass::getNextAvailableLevel(uint32_t)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/Scheduler.h:46:32: warning: comparison of integer expressions of different signedness: â€˜intâ€™ and â€˜std::vector<unsigned int, std::allocator<unsigned int> >::size_typeâ€™ {aka â€˜long unsigned intâ€™} [-Wsign-compare]
   46 |             for (int i=level; i<cyclesOps.size(); i++) {
      |                               ~^~~~~~~~~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:68:
/localhome/mha157/Enzyme/enzyme/Enzyme/NodeDetector.h: In member function â€˜void instrumem::NodeDetectorPass::visitBitCastInst(llvm::BitCastInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/NodeDetector.h:38:44: warning: unused parameter â€˜insâ€™ [-Wunused-parameter]
   38 |         void visitBitCastInst(BitCastInst &ins) {}
      |                               ~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/NodeDetector.h: In member function â€˜void instrumem::NodeDetectorPass::visitCallInst(llvm::CallInst&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/NodeDetector.h:39:38: warning: unused parameter â€˜insâ€™ [-Wunused-parameter]
   39 |         void visitCallInst(CallInst &ins) {}
      |                            ~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:69:
/localhome/mha157/Enzyme/enzyme/Enzyme/BFSPass.h: In constructor â€˜instrumem::Node::Node(llvm::Value*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/BFSPass.h:59:16: warning: â€˜instrumem::Node::valueâ€™ will be initialized after [-Wreorder]
   59 |         Value *value;
      |                ^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/BFSPass.h:56:13: warning:   â€˜int instrumem::Node::levelâ€™ [-Wreorder]
   56 |         int level;
      |             ^~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/BFSPass.h:27:9: warning:   when initialized here [-Wreorder]
   27 |         Node(Value *v) : value(v), level(0), cost(0) {
      |         ^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜static void FunctionArgumentIterator<Arg0>::analyzeFuncTypesHelper(unsigned int, llvm::CallInst&, TypeAnalyzer&) [with Arg0 = {}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3225:62:   recursively required from â€˜static void FunctionArgumentIterator<Arg0, Args ...>::analyzeFuncTypesHelper(unsigned int, llvm::CallInst&, TypeAnalyzer&) [with Arg0 = int*; Args = {}]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3225:62:   required from â€˜static void FunctionArgumentIterator<Arg0, Args ...>::analyzeFuncTypesHelper(unsigned int, llvm::CallInst&, TypeAnalyzer&) [with Arg0 = double; Args = {int*}]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3233:60:   required from â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = double; Args = {double, int*}]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3974:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3216:47: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 3216 |   static void analyzeFuncTypesHelper(unsigned idx, CallInst &call,
      |                                      ~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3216:62: warning: unused parameter â€˜callâ€™ [-Wunused-parameter]
 3216 |   static void analyzeFuncTypesHelper(unsigned idx, CallInst &call,
      |                                                    ~~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3217:52: warning: unused parameter â€˜TAâ€™ [-Wunused-parameter]
 3217 |                                      TypeAnalyzer &TA) {}
      |                                      ~~~~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp: In function â€˜void createInvertedTerminator(TypeResults&, DiffeGradientUtils*, const std::vector<DIFFE_TYPE>&, llvm::BasicBlock*, llvm::AllocaInst*, llvm::AllocaInst*, unsigned int, DIFFE_TYPE)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:2483:64: warning: unused parameter â€˜extraArgsâ€™ [-Wunused-parameter]
 2483 |                               AllocaInst *dretAlloca, unsigned extraArgs,
      |                                                       ~~~~~~~~~^~~~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp: In instantiation of â€˜static void FunctionArgumentIterator<Arg0>::analyzeFuncTypesHelper(unsigned int, llvm::CallInst&, TypeAnalyzer&) [with Arg0 = {}]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3225:62:   recursively required from â€˜static void FunctionArgumentIterator<Arg0, Args ...>::analyzeFuncTypesHelper(unsigned int, llvm::CallInst&, TypeAnalyzer&) [with Arg0 = int*; Args = {}]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3225:62:   required from â€˜static void FunctionArgumentIterator<Arg0, Args ...>::analyzeFuncTypesHelper(unsigned int, llvm::CallInst&, TypeAnalyzer&) [with Arg0 = double; Args = {int*}]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3233:60:   required from â€˜void analyzeFuncTypes(RT (*)(Args ...), llvm::CallInst&, TypeAnalyzer&) [with RT = double; Args = {double, int*}]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3974:5:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3216:47: warning: unused parameter â€˜idxâ€™ [-Wunused-parameter]
 3216 |   static void analyzeFuncTypesHelper(unsigned idx, CallInst &call,
      |                                      ~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3216:62: warning: unused parameter â€˜callâ€™ [-Wunused-parameter]
 3216 |   static void analyzeFuncTypesHelper(unsigned idx, CallInst &call,
      |                                                    ~~~~~~~~~~^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:3217:52: warning: unused parameter â€˜TAâ€™ [-Wunused-parameter]
 3217 |                                      TypeAnalyzer &TA) {}
      |                                      ~~~~~~~~~~~~~~^~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:51,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h: In copy constructor â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:82:3: warning: implicitly-declared â€˜TypeTree::TypeTree(const TypeTree&)â€™ is deprecated [-Wdeprecated-copy]
   82 |   FnTypeInfo(const FnTypeInfo &) = default;
      |   ^~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:844:8: note: because â€˜TypeTreeâ€™ has user-provided â€˜bool TypeTree::operator=(const TypeTree&)â€™
  844 |   bool operator=(const TypeTree &RHS) {
      |        ^~~~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp: In function â€˜FnTypeInfo preventTypeAnalysisLoops(const FnTypeInfo&, llvm::Function*)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1530:28: note: synthesized method â€˜FnTypeInfo::FnTypeInfo(const FnTypeInfo&)â€™ first required here
 1530 |   FnTypeInfo oldTypeInfo = oldTypeInfo_;
      |                            ^~~~~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LoopInfo.h:51,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:31:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::Value*; DerivedT = llvm::DenseMap<llvm::Value*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value*>, llvm::detail::DenseSetPair<llvm::Value*> >; KeyT = llvm::Value*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::Value*>; BucketT = llvm::detail::DenseSetPair<llvm::Value*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::Value* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::Value*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value*>, llvm::detail::DenseSetPair<llvm::Value*> >; KeyT = llvm::Value*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::Value*>; BucketT = llvm::detail::DenseSetPair<llvm::Value*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::Value*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value*>, llvm::detail::DenseSetPair<llvm::Value*> >; KeyT = llvm::Value*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::Value*>; BucketT = llvm::detail::DenseSetPair<llvm::Value*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:39:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = llvm::Value*; MapTy = llvm::DenseMap<llvm::Value*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value*>, llvm::detail::DenseSetPair<llvm::Value*> >; ValueInfoT = llvm::DenseMapInfo<llvm::Value*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:34:   required from â€˜bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = llvm::Value*; Vector = std::vector<llvm::Value*, std::allocator<llvm::Value*> >; Set = llvm::DenseSet<llvm::Value*, llvm::DenseMapInfo<llvm::Value*> >; llvm::SetVector<T, Vector, Set>::value_type = llvm::Value*]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:168:25:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:16,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:31:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::Value*; DerivedT = llvm::DenseMap<llvm::Value*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value*>, llvm::detail::DenseSetPair<llvm::Value*> >; KeyT = llvm::Value*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::Value*>; BucketT = llvm::detail::DenseSetPair<llvm::Value*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::Value* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::Value*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value*>, llvm::detail::DenseSetPair<llvm::Value*> >; KeyT = llvm::Value*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::Value*>; BucketT = llvm::detail::DenseSetPair<llvm::Value*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::Value*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value*>, llvm::detail::DenseSetPair<llvm::Value*> >; KeyT = llvm::Value*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::Value*>; BucketT = llvm::detail::DenseSetPair<llvm::Value*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:39:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = llvm::Value*; MapTy = llvm::DenseMap<llvm::Value*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::Value*>, llvm::detail::DenseSetPair<llvm::Value*> >; ValueInfoT = llvm::DenseMapInfo<llvm::Value*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:34:   required from â€˜bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = llvm::Value*; Vector = std::vector<llvm::Value*, std::allocator<llvm::Value*> >; Set = llvm::DenseSet<llvm::Value*, llvm::DenseMapInfo<llvm::Value*> >; llvm::SetVector<T, Vector, Set>::value_type = llvm::Value*]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:168:25:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp: In function â€˜void createInvertedTerminator(TypeResults&, DiffeGradientUtils*, const std::vector<DIFFE_TYPE>&, llvm::BasicBlock*, llvm::AllocaInst*, llvm::AllocaInst*, unsigned int, DIFFE_TYPE)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:2483:64: warning: unused parameter â€˜extraArgsâ€™ [-Wunused-parameter]
 2483 |                               AllocaInst *dretAlloca, unsigned extraArgs,
      |                                                       ~~~~~~~~~^~~~~~~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:20,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLTraits.h:19,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/DiagnosticInfo.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h:19,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/InlineCost.h:18,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:23,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:32,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:16,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:16,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:16,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:28:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:445:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
  445 |         if (RHS.SubTypeEnum == BaseType::Pointer) {
      |         ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:452:7: note: here
  452 |       case BinaryOperator::Add:
      |       ^~~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:36,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(const llvm::AAResultBase<T>&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:72:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1058:36: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1058 |   AAResultBase(const AAResultBase &Arg) {}
      |                ~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:75:54:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1059 |   AAResultBase(AAResultBase &&Arg) {}
      |                ~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AliasResult llvm::AAResultBase<T>::alias(const llvm::MemoryLocation&, const llvm::MemoryLocation&, llvm::AAQueryInfo&) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CFLSteensAliasAnalysis.h:84:28:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1074:43: warning: unused parameter â€˜LocAâ€™ [-Wunused-parameter]
 1074 |   AliasResult alias(const MemoryLocation &LocA, const MemoryLocation &LocB,
      |                     ~~~~~~~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1074:71: warning: unused parameter â€˜LocBâ€™ [-Wunused-parameter]
 1074 |   AliasResult alias(const MemoryLocation &LocA, const MemoryLocation &LocB,
      |                                                 ~~~~~~~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1075:34: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1075 |                     AAQueryInfo &AAQI) {
      |                     ~~~~~~~~~~~~~^~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../Utils.h:60,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.cpp:45:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h: In member function â€˜bool ConcreteType::binopIn(ConcreteType, llvm::Instruction::BinaryOps)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:445:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
  445 |         if (RHS.SubTypeEnum == BaseType::Pointer) {
      |         ^~
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/../TypeAnalysis/ConcreteType.h:452:7: note: here
  452 |       case BinaryOperator::Add:
      |       ^~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLTraits.h:19,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/DiagnosticInfo.h:25,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/OptimizationRemarkEmitter.h:19,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/InlineCost.h:18,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Utils/Cloning.h:23,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:32,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::SCEVAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionAliasAnalysis.h:31:77:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1059 |   AAResultBase(AAResultBase &&Arg) {}
      |                ~~~~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:16,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/FoldingSet.h:20,
                 from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:27,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h: In instantiation of â€˜void llvm::BumpPtrAllocatorImpl<AllocatorT, SlabSize, SizeThreshold, GrowthDelay>::Deallocate(const void*, size_t, size_t) [with AllocatorT = llvm::MallocAllocator; long unsigned int SlabSize = 4096; long unsigned int SizeThreshold = 4096; long unsigned int GrowthDelay = 128; size_t = long unsigned int]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/YAMLParser.h:148:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:31: warning: unused parameter â€˜Ptrâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                   ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Support/Allocator.h:213:43: warning: unused parameter â€˜Sizeâ€™ [-Wunused-parameter]
  213 |   void Deallocate(const void *Ptr, size_t Size, size_t /*Alignment*/) {
      |                                    ~~~~~~~^~~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:16,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:26:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:35,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(const llvm::AAResultBase<T>&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:72:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1058:36: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1058 |   AAResultBase(const AAResultBase &Arg) {}
      |                ~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:75:54:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1059 |   AAResultBase(AAResultBase &&Arg) {}
      |                ~~~~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/CApi.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:18,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:36,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(const llvm::AAResultBase<T>&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:72:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1058:36: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1058 |   AAResultBase(const AAResultBase &Arg) {}
      |                ~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:75:54:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1059 |   AAResultBase(AAResultBase &&Arg) {}
      |                ~~~~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:16,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AliasResult llvm::AAResultBase<T>::alias(const llvm::MemoryLocation&, const llvm::MemoryLocation&, llvm::AAQueryInfo&) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/CFLSteensAliasAnalysis.h:84:28:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1074:43: warning: unused parameter â€˜LocAâ€™ [-Wunused-parameter]
 1074 |   AliasResult alias(const MemoryLocation &LocA, const MemoryLocation &LocB,
      |                     ~~~~~~~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1074:71: warning: unused parameter â€˜LocBâ€™ [-Wunused-parameter]
 1074 |   AliasResult alias(const MemoryLocation &LocA, const MemoryLocation &LocB,
      |                                                 ~~~~~~~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1075:34: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1075 |                     AAQueryInfo &AAQI) {
      |                     ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::SCEVAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionAliasAnalysis.h:31:77:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1059 |   AAResultBase(AAResultBase &&Arg) {}
      |                ~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:35,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(const llvm::AAResultBase<T>&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:72:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1058:36: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1058 |   AAResultBase(const AAResultBase &Arg) {}
      |                ~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::BasicAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/BasicAliasAnalysis.h:75:54:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1059 |   AAResultBase(AAResultBase &&Arg) {}
      |                ~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:378:37:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::CallInst*; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; Config = llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1022:49:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Instruction*; ValueT = AssertingReplacingVH; Config = llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1086:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = const llvm::Value*; ValueT = InvertedPointerVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1208:62:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::BasicBlock*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1799:41:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::TrackingVH<llvm::AllocaInst>; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:2012:24:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::CallInst*; DerivedT = llvm::DenseMap<llvm::CallInst*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::CallInst*>, llvm::detail::DenseSetPair<llvm::CallInst*> >; KeyT = llvm::CallInst*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::CallInst*>; BucketT = llvm::detail::DenseSetPair<llvm::CallInst*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::CallInst* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::CallInst*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::CallInst*>, llvm::detail::DenseSetPair<llvm::CallInst*> >; KeyT = llvm::CallInst*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::CallInst*>; BucketT = llvm::detail::DenseSetPair<llvm::CallInst*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::CallInst*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::CallInst*>, llvm::detail::DenseSetPair<llvm::CallInst*> >; KeyT = llvm::CallInst*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::CallInst*>; BucketT = llvm::detail::DenseSetPair<llvm::CallInst*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:39:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = llvm::CallInst*; MapTy = llvm::DenseMap<llvm::CallInst*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::CallInst*>, llvm::detail::DenseSetPair<llvm::CallInst*> >; ValueInfoT = llvm::DenseMapInfo<llvm::CallInst*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:34:   required from â€˜bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = llvm::CallInst*; Vector = std::vector<llvm::CallInst*>; Set = llvm::DenseSet<llvm::CallInst*, llvm::DenseMapInfo<llvm::CallInst*> >; llvm::SetVector<T, Vector, Set>::value_type = llvm::CallInst*]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:947:24:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:40,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:35,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:40,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:35,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.cpp:32:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Function*; DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Function*; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:977:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Instruction*; DerivedT = llvm::DenseMap<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >; KeyT = const llvm::Instruction*; ValueT = std::unique_ptr<llvm::MustBeExecutedIterator>; KeyInfoT = llvm::DenseMapInfo<const llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Instruction* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >; KeyT = const llvm::Instruction*; ValueT = std::unique_ptr<llvm::MustBeExecutedIterator>; KeyInfoT = llvm::DenseMapInfo<const llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >; KeyT = const llvm::Instruction*; ValueT = std::unique_ptr<llvm::MustBeExecutedIterator>; KeyInfoT = llvm::DenseMapInfo<const llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >; KeyT = const llvm::Instruction*; ValueT = std::unique_ptr<llvm::MustBeExecutedIterator>; KeyInfoT = llvm::DenseMapInfo<const llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/MustExecute.h:423:41:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = std::pair<const llvm::Instruction*, const llvm::Instruction*>; DerivedT = llvm::DenseMap<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>; KeyT = std::pair<const llvm::Instruction*, const llvm::Instruction*>; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<std::pair<const llvm::Instruction*, const llvm::Instruction*> >; BucketT = llvm::detail::DenseMapPair<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = std::pair<const llvm::Instruction*, const llvm::Instruction*>; ValueArgs = {bool}; DerivedT = llvm::DenseMap<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>; KeyT = std::pair<const llvm::Instruction*, const llvm::Instruction*>; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<std::pair<const llvm::Instruction*, const llvm::Instruction*> >; BucketT = llvm::detail::DenseMapPair<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {bool}; DerivedT = llvm::DenseMap<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>; KeyT = std::pair<const llvm::Instruction*, const llvm::Instruction*>; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<std::pair<const llvm::Instruction*, const llvm::Instruction*> >; BucketT = llvm::detail::DenseMapPair<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>; KeyT = std::pair<const llvm::Instruction*, const llvm::Instruction*>; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<std::pair<const llvm::Instruction*, const llvm::Instruction*> >; BucketT = llvm::detail::DenseMapPair<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:906:67:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Function*; DerivedT = llvm::DenseMap<const llvm::Function*, llvm::InformationCache::FunctionInfo*>; KeyT = const llvm::Function*; ValueT = llvm::InformationCache::FunctionInfo*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::InformationCache::FunctionInfo*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Function*; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Function*, llvm::InformationCache::FunctionInfo*>; KeyT = const llvm::Function*; ValueT = llvm::InformationCache::FunctionInfo*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::InformationCache::FunctionInfo*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<const llvm::Function*, llvm::InformationCache::FunctionInfo*>; KeyT = const llvm::Function*; ValueT = llvm::InformationCache::FunctionInfo*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::InformationCache::FunctionInfo*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Function*, llvm::InformationCache::FunctionInfo*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<const llvm::Function*, llvm::InformationCache::FunctionInfo*>; KeyT = const llvm::Function*; ValueT = llvm::InformationCache::FunctionInfo*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::InformationCache::FunctionInfo*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:939:39:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::Use*; DerivedT = llvm::DenseMap<llvm::Use*, llvm::Value*>; KeyT = llvm::Use*; ValueT = llvm::Value*; KeyInfoT = llvm::DenseMapInfo<llvm::Use*>; BucketT = llvm::detail::DenseMapPair<llvm::Use*, llvm::Value*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::Use*; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::Use*, llvm::Value*>; KeyT = llvm::Use*; ValueT = llvm::Value*; KeyInfoT = llvm::DenseMapInfo<llvm::Use*>; BucketT = llvm::detail::DenseMapPair<llvm::Use*, llvm::Value*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::Use*, llvm::Value*>; KeyT = llvm::Use*; ValueT = llvm::Value*; KeyInfoT = llvm::DenseMapInfo<llvm::Use*>; BucketT = llvm::detail::DenseMapPair<llvm::Use*, llvm::Value*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::Use*, llvm::Value*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::Use*, llvm::Value*>; KeyT = llvm::Use*; ValueT = llvm::Value*; KeyInfoT = llvm::DenseMapInfo<llvm::Use*>; BucketT = llvm::detail::DenseMapPair<llvm::Use*, llvm::Value*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:1288:35:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::WeakVH; DerivedT = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; KeyT = llvm::WeakVH; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::WeakVH>; BucketT = llvm::detail::DenseSetPair<llvm::WeakVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::WeakVH; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; KeyT = llvm::WeakVH; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::WeakVH>; BucketT = llvm::detail::DenseSetPair<llvm::WeakVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; KeyT = llvm::WeakVH; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::WeakVH>; BucketT = llvm::detail::DenseSetPair<llvm::WeakVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::WeakVH; MapTy = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; ValueInfoT = llvm::DenseMapInfo<llvm::WeakVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:1314:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::WeakVH; DerivedT = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; KeyT = llvm::WeakVH; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::WeakVH>; BucketT = llvm::detail::DenseSetPair<llvm::WeakVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::WeakVH; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; KeyT = llvm::WeakVH; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::WeakVH>; BucketT = llvm::detail::DenseSetPair<llvm::WeakVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; KeyT = llvm::WeakVH; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::WeakVH>; BucketT = llvm::detail::DenseSetPair<llvm::WeakVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::WeakVH; MapTy = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; ValueInfoT = llvm::DenseMapInfo<llvm::WeakVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:1326:72:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Function*; DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Function*; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:977:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Instruction*; DerivedT = llvm::DenseMap<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >; KeyT = const llvm::Instruction*; ValueT = std::unique_ptr<llvm::MustBeExecutedIterator>; KeyInfoT = llvm::DenseMapInfo<const llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Instruction* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >; KeyT = const llvm::Instruction*; ValueT = std::unique_ptr<llvm::MustBeExecutedIterator>; KeyInfoT = llvm::DenseMapInfo<const llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >; KeyT = const llvm::Instruction*; ValueT = std::unique_ptr<llvm::MustBeExecutedIterator>; KeyInfoT = llvm::DenseMapInfo<const llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >; KeyT = const llvm::Instruction*; ValueT = std::unique_ptr<llvm::MustBeExecutedIterator>; KeyInfoT = llvm::DenseMapInfo<const llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<const llvm::Instruction*, std::unique_ptr<llvm::MustBeExecutedIterator> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/MustExecute.h:423:41:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:18,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = std::pair<const llvm::Instruction*, const llvm::Instruction*>; DerivedT = llvm::DenseMap<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>; KeyT = std::pair<const llvm::Instruction*, const llvm::Instruction*>; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<std::pair<const llvm::Instruction*, const llvm::Instruction*> >; BucketT = llvm::detail::DenseMapPair<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = std::pair<const llvm::Instruction*, const llvm::Instruction*>; ValueArgs = {bool}; DerivedT = llvm::DenseMap<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>; KeyT = std::pair<const llvm::Instruction*, const llvm::Instruction*>; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<std::pair<const llvm::Instruction*, const llvm::Instruction*> >; BucketT = llvm::detail::DenseMapPair<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {bool}; DerivedT = llvm::DenseMap<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>; KeyT = std::pair<const llvm::Instruction*, const llvm::Instruction*>; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<std::pair<const llvm::Instruction*, const llvm::Instruction*> >; BucketT = llvm::detail::DenseMapPair<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>; KeyT = std::pair<const llvm::Instruction*, const llvm::Instruction*>; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<std::pair<const llvm::Instruction*, const llvm::Instruction*> >; BucketT = llvm::detail::DenseMapPair<std::pair<const llvm::Instruction*, const llvm::Instruction*>, bool>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:906:67:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Function*; DerivedT = llvm::DenseMap<const llvm::Function*, llvm::InformationCache::FunctionInfo*>; KeyT = const llvm::Function*; ValueT = llvm::InformationCache::FunctionInfo*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::InformationCache::FunctionInfo*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Function*; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Function*, llvm::InformationCache::FunctionInfo*>; KeyT = const llvm::Function*; ValueT = llvm::InformationCache::FunctionInfo*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::InformationCache::FunctionInfo*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<const llvm::Function*, llvm::InformationCache::FunctionInfo*>; KeyT = const llvm::Function*; ValueT = llvm::InformationCache::FunctionInfo*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::InformationCache::FunctionInfo*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Function*, llvm::InformationCache::FunctionInfo*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<const llvm::Function*, llvm::InformationCache::FunctionInfo*>; KeyT = const llvm::Function*; ValueT = llvm::InformationCache::FunctionInfo*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::InformationCache::FunctionInfo*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:939:39:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::Use*; DerivedT = llvm::DenseMap<llvm::Use*, llvm::Value*>; KeyT = llvm::Use*; ValueT = llvm::Value*; KeyInfoT = llvm::DenseMapInfo<llvm::Use*>; BucketT = llvm::detail::DenseMapPair<llvm::Use*, llvm::Value*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::Use*; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::Use*, llvm::Value*>; KeyT = llvm::Use*; ValueT = llvm::Value*; KeyInfoT = llvm::DenseMapInfo<llvm::Use*>; BucketT = llvm::detail::DenseMapPair<llvm::Use*, llvm::Value*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::Use*, llvm::Value*>; KeyT = llvm::Use*; ValueT = llvm::Value*; KeyInfoT = llvm::DenseMapInfo<llvm::Use*>; BucketT = llvm::detail::DenseMapPair<llvm::Use*, llvm::Value*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::Use*, llvm::Value*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::Use*, llvm::Value*>; KeyT = llvm::Use*; ValueT = llvm::Value*; KeyInfoT = llvm::DenseMapInfo<llvm::Use*>; BucketT = llvm::detail::DenseMapPair<llvm::Use*, llvm::Value*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:1288:35:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::WeakVH; DerivedT = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; KeyT = llvm::WeakVH; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::WeakVH>; BucketT = llvm::detail::DenseSetPair<llvm::WeakVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::WeakVH; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; KeyT = llvm::WeakVH; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::WeakVH>; BucketT = llvm::detail::DenseSetPair<llvm::WeakVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; KeyT = llvm::WeakVH; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::WeakVH>; BucketT = llvm::detail::DenseSetPair<llvm::WeakVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::WeakVH; MapTy = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; ValueInfoT = llvm::DenseMapInfo<llvm::WeakVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:1314:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::WeakVH; DerivedT = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; KeyT = llvm::WeakVH; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::WeakVH>; BucketT = llvm::detail::DenseSetPair<llvm::WeakVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::WeakVH; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; KeyT = llvm::WeakVH; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::WeakVH>; BucketT = llvm::detail::DenseSetPair<llvm::WeakVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; KeyT = llvm::WeakVH; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::WeakVH>; BucketT = llvm::detail::DenseSetPair<llvm::WeakVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::WeakVH; MapTy = llvm::SmallDenseMap<llvm::WeakVH, llvm::detail::DenseSetEmpty, 8, llvm::DenseMapInfo<llvm::WeakVH>, llvm::detail::DenseSetPair<llvm::WeakVH> >; ValueInfoT = llvm::DenseMapInfo<llvm::WeakVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/IPO/Attributor.h:1326:72:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:378:37:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::CallInst*; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; Config = llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1022:49:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Instruction*; ValueT = AssertingReplacingVH; Config = llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1086:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = const llvm::Value*; ValueT = InvertedPointerVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1208:62:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::BasicBlock*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1799:41:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::TrackingVH<llvm::AllocaInst>; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:2012:24:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/PostDominators.h:16,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:43,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h: In instantiation of â€˜static llvm::df_iterator<GraphT, SetType, ExtStorage, GT> llvm::df_iterator<GraphT, SetType, ExtStorage, GT>::end(const GraphT&) [with GraphT = llvm::DomTreeNodeBase<llvm::BasicBlock>*; SetType = llvm::df_iterator_default_set<llvm::DomTreeNodeBase<llvm::BasicBlock>*, 8>; bool ExtStorage = false; GT = llvm::GraphTraits<llvm::DomTreeNodeBase<llvm::BasicBlock>*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:222:29:   required from â€˜llvm::df_iterator<T> llvm::df_end(const T&) [with T = llvm::DomTreeNodeBase<llvm::BasicBlock>*; typename llvm::GraphTraits<GraphType>::NodeRef = llvm::DomTreeNodeBase<llvm::BasicBlock>*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Dominators.h:244:34:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DepthFirstIterator.h:153:40: warning: unused parameter â€˜Gâ€™ [-Wunused-parameter]
  153 |   static df_iterator end(const GraphT &G) { return df_iterator(); }
      |                          ~~~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::CallInst*; DerivedT = llvm::DenseMap<llvm::CallInst*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::CallInst*>, llvm::detail::DenseSetPair<llvm::CallInst*> >; KeyT = llvm::CallInst*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::CallInst*>; BucketT = llvm::detail::DenseSetPair<llvm::CallInst*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::CallInst* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::CallInst*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::CallInst*>, llvm::detail::DenseSetPair<llvm::CallInst*> >; KeyT = llvm::CallInst*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::CallInst*>; BucketT = llvm::detail::DenseSetPair<llvm::CallInst*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::CallInst*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::CallInst*>, llvm::detail::DenseSetPair<llvm::CallInst*> >; KeyT = llvm::CallInst*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::CallInst*>; BucketT = llvm::detail::DenseSetPair<llvm::CallInst*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:39:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = llvm::CallInst*; MapTy = llvm::DenseMap<llvm::CallInst*, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::CallInst*>, llvm::detail::DenseSetPair<llvm::CallInst*> >; ValueInfoT = llvm::DenseMapInfo<llvm::CallInst*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:34:   required from â€˜bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = llvm::CallInst*; Vector = std::vector<llvm::CallInst*>; Set = llvm::DenseSet<llvm::CallInst*, llvm::DenseMapInfo<llvm::CallInst*> >; llvm::SetVector<T, Vector, Set>::value_type = llvm::CallInst*]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:947:24:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueArgs = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:30,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:22,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:28,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueArgs = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:30,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:22,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:28,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::ConstantRange}; DerivedT = llvm::DenseMap<const llvm::SCEV*, llvm::ConstantRange>; KeyT = const llvm::SCEV*; ValueT = llvm::ConstantRange; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, llvm::ConstantRange>]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:1532:51:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:378:37:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::CallInst*; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; Config = llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1022:49:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Instruction*; ValueT = AssertingReplacingVH; Config = llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1086:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = const llvm::Value*; ValueT = InvertedPointerVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1208:62:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::BasicBlock*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1799:41:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::TrackingVH<llvm::AllocaInst>; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:2012:24:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:378:37:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::CallInst*; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; Config = llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1022:49:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Instruction*; ValueT = AssertingReplacingVH; Config = llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1086:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = const llvm::Value*; ValueT = InvertedPointerVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1208:62:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::BasicBlock*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1799:41:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::TrackingVH<llvm::AllocaInst>; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:2012:24:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h: In function â€˜DIFFE_TYPE whatType(llvm::Type*, DerivativeMode, std::set<llvm::Type*>)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:356:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
  356 |         switch (ty) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:367:7: note: here
  367 |       case DIFFE_TYPE::CONSTANT:
      |       ^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:368:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
  368 |         switch (ty) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:380:7: note: here
  380 |       case DIFFE_TYPE::DUP_ARG:
      |       ^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueArgs = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueArgs = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::BasicBlock*; DerivedT = llvm::DenseMap<llvm::BasicBlock*, llvm::BasicBlock**>; KeyT = llvm::BasicBlock*; ValueT = llvm::BasicBlock**; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::BasicBlock**>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::BasicBlock* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::BasicBlock*, llvm::BasicBlock**>; KeyT = llvm::BasicBlock*; ValueT = llvm::BasicBlock**; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::BasicBlock**>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<llvm::BasicBlock*, llvm::BasicBlock**>; KeyT = llvm::BasicBlock*; ValueT = llvm::BasicBlock**; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::BasicBlock**>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::BasicBlock**>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<llvm::BasicBlock*, llvm::BasicBlock**>; KeyT = llvm::BasicBlock*; ValueT = llvm::BasicBlock**; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::BasicBlock**>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PredIteratorCache.h:43:45:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::BasicBlock*; DerivedT = llvm::DenseMap<llvm::BasicBlock*, unsigned int>; KeyT = llvm::BasicBlock*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::BasicBlock* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::BasicBlock*, unsigned int>; KeyT = llvm::BasicBlock*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<llvm::BasicBlock*, unsigned int>; KeyT = llvm::BasicBlock*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<llvm::BasicBlock*, unsigned int>; KeyT = llvm::BasicBlock*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PredIteratorCache.h:50:27:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Function*; DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Function*; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:977:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::Instruction*; DerivedT = llvm::DenseMap<llvm::Instruction*, unsigned int>; KeyT = llvm::Instruction*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::Instruction*; ValueArgs = {unsigned int}; DerivedT = llvm::DenseMap<llvm::Instruction*, unsigned int>; KeyT = llvm::Instruction*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {unsigned int}; DerivedT = llvm::DenseMap<llvm::Instruction*, unsigned int>; KeyT = llvm::Instruction*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::Instruction*, unsigned int>; KeyT = llvm::Instruction*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombineWorklist.h:64:62:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, llvm::GVN::LeaderTableEntry>; KeyT = unsigned int; ValueT = llvm::GVN::LeaderTableEntry; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, llvm::GVN::LeaderTableEntry>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const unsigned int&; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, llvm::GVN::LeaderTableEntry>; KeyT = unsigned int; ValueT = llvm::GVN::LeaderTableEntry; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, llvm::GVN::LeaderTableEntry>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<unsigned int, llvm::GVN::LeaderTableEntry>; KeyT = unsigned int; ValueT = llvm::GVN::LeaderTableEntry; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, llvm::GVN::LeaderTableEntry>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, llvm::GVN::LeaderTableEntry>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<unsigned int, llvm::GVN::LeaderTableEntry>; KeyT = unsigned int; ValueT = llvm::GVN::LeaderTableEntry; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, llvm::GVN::LeaderTableEntry>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Scalar/GVN.h:263:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:378:37:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::CallInst*; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; Config = llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1022:49:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Instruction*; ValueT = AssertingReplacingVH; Config = llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1086:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = const llvm::Value*; ValueT = InvertedPointerVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1208:62:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::BasicBlock*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1799:41:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::TrackingVH<llvm::AllocaInst>; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:2012:24:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:378:37:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::CallInst*; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; Config = llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1022:49:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Instruction*; ValueT = AssertingReplacingVH; Config = llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1086:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = const llvm::Value*; ValueT = InvertedPointerVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1208:62:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::BasicBlock*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1799:41:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/Enzyme.cpp:59:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h: In function â€˜DIFFE_TYPE whatType(llvm::Type*, DerivativeMode, std::set<llvm::Type*>)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:356:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
  356 |         switch (ty) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:367:7: note: here
  367 |       case DIFFE_TYPE::CONSTANT:
      |       ^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:368:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
  368 |         switch (ty) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:380:7: note: here
  380 |       case DIFFE_TYPE::DUP_ARG:
      |       ^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::TrackingVH<llvm::AllocaInst>; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:2012:24:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:378:37:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::CallInst*; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; Config = llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1022:49:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Instruction*; ValueT = AssertingReplacingVH; Config = llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1086:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = const llvm::Value*; ValueT = InvertedPointerVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1208:62:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::BasicBlock*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1799:41:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::TrackingVH<llvm::AllocaInst>; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:2012:24:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::Instruction*; DerivedT = llvm::SmallDenseMap<llvm::Instruction*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::Instruction*>, llvm::detail::DenseSetPair<llvm::Instruction*> >; KeyT = llvm::Instruction*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseSetPair<llvm::Instruction*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::Instruction* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<llvm::Instruction*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::Instruction*>, llvm::detail::DenseSetPair<llvm::Instruction*> >; KeyT = llvm::Instruction*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseSetPair<llvm::Instruction*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<llvm::Instruction*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::Instruction*>, llvm::detail::DenseSetPair<llvm::Instruction*> >; KeyT = llvm::Instruction*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseSetPair<llvm::Instruction*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:39:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = llvm::Instruction*; MapTy = llvm::SmallDenseMap<llvm::Instruction*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::Instruction*>, llvm::detail::DenseSetPair<llvm::Instruction*> >; ValueInfoT = llvm::DenseMapInfo<llvm::Instruction*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:34:   required from â€˜bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = llvm::Instruction*; Vector = llvm::SmallVector<llvm::Instruction*, 16>; Set = llvm::SmallDenseSet<llvm::Instruction*, 16, llvm::DenseMapInfo<llvm::Instruction*> >; llvm::SetVector<T, Vector, Set>::value_type = llvm::Instruction*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombineWorklist.h:47:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::Loop*; DerivedT = llvm::SmallDenseMap<llvm::Loop*, long int, 4, llvm::DenseMapInfo<llvm::Loop*>, llvm::detail::DenseMapPair<llvm::Loop*, long int> >; KeyT = llvm::Loop*; ValueT = long int; KeyInfoT = llvm::DenseMapInfo<llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<llvm::Loop*, long int>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::Loop*; ValueArgs = {long int}; DerivedT = llvm::SmallDenseMap<llvm::Loop*, long int, 4, llvm::DenseMapInfo<llvm::Loop*>, llvm::detail::DenseMapPair<llvm::Loop*, long int> >; KeyT = llvm::Loop*; ValueT = long int; KeyInfoT = llvm::DenseMapInfo<llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<llvm::Loop*, long int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {long int}; DerivedT = llvm::SmallDenseMap<llvm::Loop*, long int, 4, llvm::DenseMapInfo<llvm::Loop*>, llvm::detail::DenseMapPair<llvm::Loop*, long int> >; KeyT = llvm::Loop*; ValueT = long int; KeyInfoT = llvm::DenseMapInfo<llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<llvm::Loop*, long int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::SmallDenseMap<llvm::Loop*, long int, 4, llvm::DenseMapInfo<llvm::Loop*>, llvm::detail::DenseMapPair<llvm::Loop*, long int> >; KeyT = llvm::Loop*; ValueT = long int; KeyInfoT = llvm::DenseMapInfo<llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<llvm::Loop*, long int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/PriorityWorklist.h:93:10:   required from â€˜bool llvm::PriorityWorklist<T, VectorT, MapT>::insert(const T&) [with T = llvm::Loop*; VectorT = llvm::SmallVector<llvm::Loop*, 4>; MapT = llvm::SmallDenseMap<llvm::Loop*, long int, 4, llvm::DenseMapInfo<llvm::Loop*>, llvm::detail::DenseMapPair<llvm::Loop*, long int> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h:285:29:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AnalysisKey*; DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AnalysisKey*; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:853:35:   required from â€˜bool llvm::AnalysisManager<IRUnitT, ExtraArgTs>::registerPass(PassBuilderT&&) [with PassBuilderT = PreProcessCache::PreProcessCache()::<lambda()>; IRUnitT = llvm::Module; ExtraArgTs = {}]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:813:75:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AnalysisKey*; DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AnalysisKey*; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:853:35:   required from â€˜bool llvm::AnalysisManager<IRUnitT, ExtraArgTs>::registerPass(PassBuilderT&&) [with PassBuilderT = PreProcessCache::PreProcessCache()::<lambda()>; IRUnitT = llvm::Function; ExtraArgTs = {}]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:814:75:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h: In instantiation of â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::delegateCallInst(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:127:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitRet(llvm::ReturnInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:127:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:304:39: warning: unused parameter â€˜Iâ€™ [-Wunused-parameter]
  304 |   RetTy delegateCallInst(Instruction &I) {
      |                          ~~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitCallInst(llvm::CallInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitCall(llvm::CallInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6380:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6380 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6380:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6439:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6439 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6439:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6481:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6481 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6481:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6545:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6545 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6545:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6598:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6598 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6598:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6648:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6648 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6648:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6820:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6820 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6820:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6880:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6880 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6880:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6939:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6939 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6939:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6999:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6999 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6999:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7055:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7055 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7055:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7135:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7135 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7135:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7248:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7248 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7248:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7323:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7323 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7323:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7406:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7406 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7406:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitSelectInst(llvm::SelectInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:210:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitSelect(llvm::SelectInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:210:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1017:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1017 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1017:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitInstruction(llvm::Instruction&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:211:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitUserOp1(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:211:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:364:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  364 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:364:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitExtractElementInst(llvm::ExtractElementInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:214:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitExtractElement(llvm::ExtractElementInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:214:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1175:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1175 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1175:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitInsertElementInst(llvm::InsertElementInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:215:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitInsertElement(llvm::InsertElementInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:215:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1227:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1227 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1227:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitShuffleVectorInst(llvm::ShuffleVectorInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:216:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitShuffleVector(llvm::ShuffleVectorInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:216:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1304:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1304 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1304:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitExtractValueInst(llvm::ExtractValueInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:217:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitExtractValue(llvm::ExtractValueInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:217:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1387:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1387 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1387:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitFreezeInst(llvm::FreezeInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:220:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitFreeze(llvm::FreezeInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:220:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:313:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  313 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:313:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h: In instantiation of â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::delegateCallInst(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:127:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitRet(llvm::ReturnInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:127:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:304:39: warning: unused parameter â€˜Iâ€™ [-Wunused-parameter]
  304 |   RetTy delegateCallInst(Instruction &I) {
      |                          ~~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitCallInst(llvm::CallInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitCall(llvm::CallInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6380:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6380 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6380:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6439:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6439 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6439:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6481:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6481 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6481:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6545:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6545 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6545:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6598:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6598 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6598:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6648:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6648 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6648:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6820:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6820 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6820:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6880:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6880 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6880:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6939:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6939 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6939:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6999:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6999 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6999:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7055:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7055 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7055:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7135:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7135 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7135:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7248:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7248 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7248:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7323:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7323 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7323:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7406:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7406 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7406:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AnalysisKey*; DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*>, 2>; KeyT = llvm::AnalysisKey*; ValueT = llvm::TinyPtrVector<llvm::AnalysisKey*>; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AnalysisKey* const&; ValueArgs = {}; DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*>, 2>; KeyT = llvm::AnalysisKey*; ValueT = llvm::TinyPtrVector<llvm::AnalysisKey*>; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*>, 2>; KeyT = llvm::AnalysisKey*; ValueT = llvm::TinyPtrVector<llvm::AnalysisKey*>; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*>, 2>; KeyT = llvm::AnalysisKey*; ValueT = llvm::TinyPtrVector<llvm::AnalysisKey*>; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:1153:13:   required from â€˜void llvm::OuterAnalysisManagerProxy<AnalysisManagerT, IRUnitT, ExtraArgTs>::Result::registerOuterAnalysisInvalidation() [with OuterAnalysisT = llvm::GlobalsAA; InvalidatedAnalysisT = llvm::AAManager; AnalysisManagerT = llvm::AnalysisManager<llvm::Module>; IRUnitT = llvm::Function; ExtraArgTs = {}]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1183:7:   required from â€˜static void llvm::AAManager::getModuleAAResultImpl(llvm::Function&, llvm::FunctionAnalysisManager&, llvm::AAResults&) [with AnalysisT = llvm::GlobalsAA; llvm::FunctionAnalysisManager = llvm::AnalysisManager<llvm::Function>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1154:5:   required from â€˜void llvm::AAManager::registerModuleAnalysis() [with AnalysisT = llvm::GlobalsAA]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:844:42:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitSelectInst(llvm::SelectInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:210:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitSelect(llvm::SelectInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:210:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1017:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1017 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1017:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitInstruction(llvm::Instruction&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:211:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitUserOp1(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:211:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:364:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  364 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:364:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitExtractElementInst(llvm::ExtractElementInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:214:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitExtractElement(llvm::ExtractElementInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:214:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1175:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1175 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1175:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitInsertElementInst(llvm::InsertElementInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:215:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitInsertElement(llvm::InsertElementInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:215:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1227:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1227 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1227:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitShuffleVectorInst(llvm::ShuffleVectorInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:216:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitShuffleVector(llvm::ShuffleVectorInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:216:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1304:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1304 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1304:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitExtractValueInst(llvm::ExtractValueInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:217:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitExtractValue(llvm::ExtractValueInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:217:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1387:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1387 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1387:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitFreezeInst(llvm::FreezeInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:220:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitFreeze(llvm::FreezeInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:220:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:313:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  313 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:313:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueArgs = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueArgs = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::BasicBlock*; DerivedT = llvm::DenseMap<llvm::BasicBlock*, llvm::BasicBlock**>; KeyT = llvm::BasicBlock*; ValueT = llvm::BasicBlock**; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::BasicBlock**>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::BasicBlock* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::BasicBlock*, llvm::BasicBlock**>; KeyT = llvm::BasicBlock*; ValueT = llvm::BasicBlock**; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::BasicBlock**>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<llvm::BasicBlock*, llvm::BasicBlock**>; KeyT = llvm::BasicBlock*; ValueT = llvm::BasicBlock**; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::BasicBlock**>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::BasicBlock**>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<llvm::BasicBlock*, llvm::BasicBlock**>; KeyT = llvm::BasicBlock*; ValueT = llvm::BasicBlock**; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, llvm::BasicBlock**>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PredIteratorCache.h:43:45:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::BasicBlock*; DerivedT = llvm::DenseMap<llvm::BasicBlock*, unsigned int>; KeyT = llvm::BasicBlock*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::BasicBlock* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::BasicBlock*, unsigned int>; KeyT = llvm::BasicBlock*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<llvm::BasicBlock*, unsigned int>; KeyT = llvm::BasicBlock*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<llvm::BasicBlock*, unsigned int>; KeyT = llvm::BasicBlock*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::BasicBlock*>; BucketT = llvm::detail::DenseMapPair<llvm::BasicBlock*, unsigned int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PredIteratorCache.h:50:27:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Function*; DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Function*; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<const llvm::Function*, llvm::LazyCallGraph::Node*>; KeyT = const llvm::Function*; ValueT = llvm::LazyCallGraph::Node*; KeyInfoT = llvm::DenseMapInfo<const llvm::Function*>; BucketT = llvm::detail::DenseMapPair<const llvm::Function*, llvm::LazyCallGraph::Node*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/LazyCallGraph.h:977:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = unsigned int; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<unsigned int, std::__cxx11::basic_string<char> >; KeyT = unsigned int; ValueT = std::__cxx11::basic_string<char>; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, std::__cxx11::basic_string<char> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TargetLibraryInfo.h:133:20:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:30,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:22,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:28,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:378:37:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::Instruction*; DerivedT = llvm::DenseMap<llvm::Instruction*, unsigned int>; KeyT = llvm::Instruction*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::Instruction*; ValueArgs = {unsigned int}; DerivedT = llvm::DenseMap<llvm::Instruction*, unsigned int>; KeyT = llvm::Instruction*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {unsigned int}; DerivedT = llvm::DenseMap<llvm::Instruction*, unsigned int>; KeyT = llvm::Instruction*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::Instruction*, unsigned int>; KeyT = llvm::Instruction*; ValueT = unsigned int; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseMapPair<llvm::Instruction*, unsigned int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombineWorklist.h:64:62:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::CallInst*; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; Config = llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1022:49:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = unsigned int; DerivedT = llvm::DenseMap<unsigned int, llvm::GVN::LeaderTableEntry>; KeyT = unsigned int; ValueT = llvm::GVN::LeaderTableEntry; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, llvm::GVN::LeaderTableEntry>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const unsigned int&; ValueArgs = {}; DerivedT = llvm::DenseMap<unsigned int, llvm::GVN::LeaderTableEntry>; KeyT = unsigned int; ValueT = llvm::GVN::LeaderTableEntry; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, llvm::GVN::LeaderTableEntry>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<unsigned int, llvm::GVN::LeaderTableEntry>; KeyT = unsigned int; ValueT = llvm::GVN::LeaderTableEntry; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, llvm::GVN::LeaderTableEntry>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<unsigned int, llvm::GVN::LeaderTableEntry>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<unsigned int, llvm::GVN::LeaderTableEntry>; KeyT = unsigned int; ValueT = llvm::GVN::LeaderTableEntry; KeyInfoT = llvm::DenseMapInfo<unsigned int>; BucketT = llvm::detail::DenseMapPair<unsigned int, llvm::GVN::LeaderTableEntry>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Scalar/GVN.h:263:43:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Instruction*; ValueT = AssertingReplacingVH; Config = llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1086:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = const llvm::Value*; ValueT = InvertedPointerVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1208:62:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::BasicBlock*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1799:41:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::TrackingVH<llvm::AllocaInst>; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:2012:24:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitLoadLike(llvm::Instruction&, llvm::MaybeAlign, bool, llvm::Value*, llvm::Value*, llvm::Value*) [with AugmentedReturnType = AugmentedReturn*]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:687:5:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitLoadInst(llvm::LoadInst&) [with AugmentedReturnType = AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:172:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitLoad(llvm::LoadInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:172:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:455:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  455 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:455:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:596:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  596 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:596:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitCommonStore(llvm::Instruction&, llvm::Value*, llvm::Value*, llvm::MaybeAlign, bool, llvm::AtomicOrdering, llvm::SyncScope::ID, llvm::Value*) [with AugmentedReturnType = AugmentedReturn*; llvm::SyncScope::ID = unsigned char]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:725:5:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitStoreInst(llvm::StoreInst&) [with AugmentedReturnType = AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:173:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitStore(llvm::StoreInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:173:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:792:7: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  792 |       switch (Mode) {
      |       ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:792:7: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::SCEV*; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::SCEV* const&; ValueArgs = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {const llvm::SCEV*&}; DerivedT = llvm::DenseMap<const llvm::SCEV*, const llvm::SCEV*>; KeyT = const llvm::SCEV*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::SCEV*>; BucketT = llvm::detail::DenseMapPair<const llvm::SCEV*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:724:12:   required from â€˜const llvm::SCEV* llvm::SCEVRewriteVisitor<SC>::visit(const llvm::SCEV*) [with SC = llvm::SCEVParameterRewriter]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:859:33:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = const llvm::Loop*; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = const llvm::Loop* const&; ValueArgs = {}; DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::DenseMap<const llvm::Loop*, const llvm::SCEV*>; KeyT = const llvm::Loop*; ValueT = const llvm::SCEV*; KeyInfoT = llvm::DenseMapInfo<const llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<const llvm::Loop*, const llvm::SCEV*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScalarEvolutionExpressions.h:904:44:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitCastInst(llvm::CastInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:177:53:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitTruncInst(llvm::TruncInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:184:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitTrunc(llvm::TruncInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:184:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:938:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  938 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:938:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AssertingVH<llvm::PHINode>; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AssertingVH<llvm::PHINode>; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; KeyT = llvm::AssertingVH<llvm::PHINode>; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >; BucketT = llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:213:50:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(ValueT&&) [with ValueT = llvm::AssertingVH<llvm::PHINode>; MapTy = llvm::DenseMap<llvm::AssertingVH<llvm::PHINode>, llvm::detail::DenseSetEmpty, llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >, llvm::detail::DenseSetPair<llvm::AssertingVH<llvm::PHINode> > >; ValueInfoT = llvm::DenseMapInfo<llvm::AssertingVH<llvm::PHINode> >]â€™
/localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolutionExpander.h:360:58:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::handleMPI(llvm::CallInst&, llvm::Function*, llvm::StringRef) [with AugmentedReturnType = AugmentedReturn*]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6072:7:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitCallInst(llvm::CallInst&) [with AugmentedReturnType = AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitCall(llvm::CallInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:4877:36: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 4877 |               getOrInsertOpFloatSum(*gutils->newFunc->getParent(),
      |               ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 4878 |                                     MPI_OP_Ptr_type, CT, root->getType(),
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 4879 |                                     Builder2),
      |                                     ~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:841:49: note:   initializing argument 3 of â€˜llvm::Value* getOrInsertOpFloatSum(llvm::Module&, llvm::Type*, ConcreteType, llvm::Type*, llvm::IRBuilder<>&)â€™
  841 |                                    ConcreteType CT, llvm::Type *intType,
      |                                    ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:5751:36: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 5751 |               getOrInsertOpFloatSum(*gutils->newFunc->getParent(),
      |               ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 5752 |                                     MPI_OP_Ptr_type, CT, call.getType(),
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 5753 |                                     Builder2),
      |                                     ~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:841:49: note:   initializing argument 3 of â€˜llvm::Value* getOrInsertOpFloatSum(llvm::Module&, llvm::Type*, ConcreteType, llvm::Type*, llvm::IRBuilder<>&)â€™
  841 |                                    ConcreteType CT, llvm::Type *intType,
      |                                    ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::handleAdjointForIntrinsic(llvm::Intrinsic::ID, llvm::Instruction&, llvm::SmallVectorImpl<llvm::Value*>&) [with AugmentedReturnType = AugmentedReturn*; llvm::Intrinsic::ID = unsigned int]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7231:13:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitCallInst(llvm::CallInst&) [with AugmentedReturnType = AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitCall(llvm::CallInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:2503:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 2503 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:2503:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:378:37:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::CallInst*; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; Config = llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1022:49:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:36,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜bool llvm::AAResultBase<T>::pointsToConstantMemory(const llvm::MemoryLocation&, llvm::AAQueryInfo&, bool) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:947:60:   required from â€˜bool llvm::AAResults::Model<T>::pointsToConstantMemory(const llvm::MemoryLocation&, llvm::AAQueryInfo&, bool) [with AAResultT = llvm::CFLSteensAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:945:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1079:53: warning: unused parameter â€˜Locâ€™ [-Wunused-parameter]
 1079 |   bool pointsToConstantMemory(const MemoryLocation &Loc, AAQueryInfo &AAQI,
      |                               ~~~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1079:71: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1079 |   bool pointsToConstantMemory(const MemoryLocation &Loc, AAQueryInfo &AAQI,
      |                                                          ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1080:36: warning: unused parameter â€˜OrLocalâ€™ [-Wunused-parameter]
 1080 |                               bool OrLocal) {
      |                               ~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:951:48:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with AAResultT = llvm::CFLSteensAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:950:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:47: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                               ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:62: warning: unused parameter â€˜ArgIdxâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                                                     ~~~~~~~~~^~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::FunctionModRefBehavior llvm::AAResultBase<T>::getModRefBehavior(const llvm::CallBase*) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:955:41:   required from â€˜llvm::FunctionModRefBehavior llvm::AAResults::Model<T>::getModRefBehavior(const llvm::CallBase*) [with AAResultT = llvm::CFLSteensAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:954:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1088:60: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1088 |   FunctionModRefBehavior getModRefBehavior(const CallBase *Call) {
      |                                            ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::FunctionModRefBehavior llvm::AAResultBase<T>::getModRefBehavior(const llvm::Function*) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:959:38:   required from â€˜llvm::FunctionModRefBehavior llvm::AAResults::Model<T>::getModRefBehavior(const llvm::Function*) [with AAResultT = llvm::CFLSteensAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:958:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1092:60: warning: unused parameter â€˜Fâ€™ [-Wunused-parameter]
 1092 |   FunctionModRefBehavior getModRefBehavior(const Function *F) {
      |                                            ~~~~~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getModRefInfo(const llvm::CallBase*, const llvm::MemoryLocation&, llvm::AAQueryInfo&) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:964:48:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getModRefInfo(const llvm::CallBase*, const llvm::MemoryLocation&, llvm::AAQueryInfo&) [with AAResultT = llvm::CFLSteensAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:962:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1096:44: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1096 |   ModRefInfo getModRefInfo(const CallBase *Call, const MemoryLocation &Loc,
      |                            ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1096:72: warning: unused parameter â€˜Locâ€™ [-Wunused-parameter]
 1096 |   ModRefInfo getModRefInfo(const CallBase *Call, const MemoryLocation &Loc,
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1097:41: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1097 |                            AAQueryInfo &AAQI) {
      |                            ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getModRefInfo(const llvm::CallBase*, const llvm::CallBase*, llvm::AAQueryInfo&) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:969:51:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getModRefInfo(const llvm::CallBase*, const llvm::CallBase*, llvm::AAQueryInfo&) [with AAResultT = llvm::CFLSteensAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:967:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1101:44: warning: unused parameter â€˜Call1â€™ [-Wunused-parameter]
 1101 |   ModRefInfo getModRefInfo(const CallBase *Call1, const CallBase *Call2,
      |                            ~~~~~~~~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1101:67: warning: unused parameter â€˜Call2â€™ [-Wunused-parameter]
 1101 |   ModRefInfo getModRefInfo(const CallBase *Call1, const CallBase *Call2,
      |                                                   ~~~~~~~~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1102:41: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1102 |                            AAQueryInfo &AAQI) {
      |                            ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜bool llvm::AAResultBase<T>::pointsToConstantMemory(const llvm::MemoryLocation&, llvm::AAQueryInfo&, bool) [with DerivedT = llvm::GlobalsAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:947:60:   required from â€˜bool llvm::AAResults::Model<T>::pointsToConstantMemory(const llvm::MemoryLocation&, llvm::AAQueryInfo&, bool) [with AAResultT = llvm::GlobalsAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:945:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1079:53: warning: unused parameter â€˜Locâ€™ [-Wunused-parameter]
 1079 |   bool pointsToConstantMemory(const MemoryLocation &Loc, AAQueryInfo &AAQI,
      |                               ~~~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1079:71: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1079 |   bool pointsToConstantMemory(const MemoryLocation &Loc, AAQueryInfo &AAQI,
      |                                                          ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1080:36: warning: unused parameter â€˜OrLocalâ€™ [-Wunused-parameter]
 1080 |                               bool OrLocal) {
      |                               ~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with DerivedT = llvm::GlobalsAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:951:48:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with AAResultT = llvm::GlobalsAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:950:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:47: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                               ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:62: warning: unused parameter â€˜ArgIdxâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                                                     ~~~~~~~~~^~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getModRefInfo(const llvm::CallBase*, const llvm::CallBase*, llvm::AAQueryInfo&) [with DerivedT = llvm::GlobalsAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:969:51:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getModRefInfo(const llvm::CallBase*, const llvm::CallBase*, llvm::AAQueryInfo&) [with AAResultT = llvm::GlobalsAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:967:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1101:44: warning: unused parameter â€˜Call1â€™ [-Wunused-parameter]
 1101 |   ModRefInfo getModRefInfo(const CallBase *Call1, const CallBase *Call2,
      |                            ~~~~~~~~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1101:67: warning: unused parameter â€˜Call2â€™ [-Wunused-parameter]
 1101 |   ModRefInfo getModRefInfo(const CallBase *Call1, const CallBase *Call2,
      |                                                   ~~~~~~~~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1102:41: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1102 |                            AAQueryInfo &AAQI) {
      |                            ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜bool llvm::AAResultBase<T>::pointsToConstantMemory(const llvm::MemoryLocation&, llvm::AAQueryInfo&, bool) [with DerivedT = llvm::ScopedNoAliasAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:947:60:   required from â€˜bool llvm::AAResults::Model<T>::pointsToConstantMemory(const llvm::MemoryLocation&, llvm::AAQueryInfo&, bool) [with AAResultT = llvm::ScopedNoAliasAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:945:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1079:53: warning: unused parameter â€˜Locâ€™ [-Wunused-parameter]
 1079 |   bool pointsToConstantMemory(const MemoryLocation &Loc, AAQueryInfo &AAQI,
      |                               ~~~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1079:71: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1079 |   bool pointsToConstantMemory(const MemoryLocation &Loc, AAQueryInfo &AAQI,
      |                                                          ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1080:36: warning: unused parameter â€˜OrLocalâ€™ [-Wunused-parameter]
 1080 |                               bool OrLocal) {
      |                               ~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with DerivedT = llvm::ScopedNoAliasAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:951:48:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with AAResultT = llvm::ScopedNoAliasAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:950:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:47: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                               ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:62: warning: unused parameter â€˜ArgIdxâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                                                     ~~~~~~~~~^~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::FunctionModRefBehavior llvm::AAResultBase<T>::getModRefBehavior(const llvm::CallBase*) [with DerivedT = llvm::ScopedNoAliasAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:955:41:   required from â€˜llvm::FunctionModRefBehavior llvm::AAResults::Model<T>::getModRefBehavior(const llvm::CallBase*) [with AAResultT = llvm::ScopedNoAliasAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:954:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1088:60: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1088 |   FunctionModRefBehavior getModRefBehavior(const CallBase *Call) {
      |                                            ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::FunctionModRefBehavior llvm::AAResultBase<T>::getModRefBehavior(const llvm::Function*) [with DerivedT = llvm::ScopedNoAliasAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:959:38:   required from â€˜llvm::FunctionModRefBehavior llvm::AAResults::Model<T>::getModRefBehavior(const llvm::Function*) [with AAResultT = llvm::ScopedNoAliasAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:958:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1092:60: warning: unused parameter â€˜Fâ€™ [-Wunused-parameter]
 1092 |   FunctionModRefBehavior getModRefBehavior(const Function *F) {
      |                                            ~~~~~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with DerivedT = llvm::TypeBasedAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:951:48:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with AAResultT = llvm::TypeBasedAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:950:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:47: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                               ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:62: warning: unused parameter â€˜ArgIdxâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                                                     ~~~~~~~~~^~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Instruction*; ValueT = AssertingReplacingVH; Config = llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1086:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = const llvm::Value*; ValueT = InvertedPointerVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1208:62:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitLoadLike(llvm::Instruction&, llvm::MaybeAlign, bool, llvm::Value*, llvm::Value*, llvm::Value*) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:687:5:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitLoadInst(llvm::LoadInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:172:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitLoad(llvm::LoadInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:172:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:455:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  455 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:455:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:596:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  596 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:596:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitCommonStore(llvm::Instruction&, llvm::Value*, llvm::Value*, llvm::MaybeAlign, bool, llvm::AtomicOrdering, llvm::SyncScope::ID, llvm::Value*) [with AugmentedReturnType = const AugmentedReturn*; llvm::SyncScope::ID = unsigned char]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:725:5:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitStoreInst(llvm::StoreInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:173:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitStore(llvm::StoreInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:173:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:792:7: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  792 |       switch (Mode) {
      |       ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:792:7: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitCastInst(llvm::CastInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:177:53:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitTruncInst(llvm::TruncInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:184:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitTrunc(llvm::TruncInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:184:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:938:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  938 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:938:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::BasicBlock*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1799:41:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::TrackingVH<llvm::AllocaInst>; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:2012:24:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:39,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h: In instantiation of â€˜llvm::InnerAnalysisManagerProxy<AnalysisManagerT, IRUnitT, ExtraArgTs>::Result llvm::InnerAnalysisManagerProxy<AnalysisManagerT, IRUnitT, ExtraArgTs>::run(IRUnitT&, llvm::AnalysisManager<IRUnitT, AnalysisArgTs ...>&, ExtraArgTs ...) [with AnalysisManagerT = llvm::AnalysisManager<llvm::Function>; IRUnitT = llvm::Module; ExtraArgTs = {}]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:314:42:   required from â€˜std::unique_ptr<llvm::detail::AnalysisResultConcept<IRUnitT, PreservedAnalysesT, InvalidatorT> > llvm::detail::AnalysisPassModel<IRUnitT, PassT, PreservedAnalysesT, InvalidatorT, ExtraArgTs>::run(IRUnitT&, llvm::AnalysisManager<IRUnitT, ExtraArgTs ...>&, ExtraArgTs ...) [with IRUnitT = llvm::Module; PassT = llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>, llvm::Module>; PreservedAnalysesT = llvm::PreservedAnalyses; InvalidatorT = llvm::AnalysisManager<llvm::Module>::Invalidator; ExtraArgTs = {}]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:312:3:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:1032:23: warning: unused parameter â€˜IRâ€™ [-Wunused-parameter]
 1032 |   Result run(IRUnitT &IR, AnalysisManager<IRUnitT, ExtraArgTs...> &AM,
      |              ~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:1032:68: warning: unused parameter â€˜AMâ€™ [-Wunused-parameter]
 1032 |   Result run(IRUnitT &IR, AnalysisManager<IRUnitT, ExtraArgTs...> &AM,
      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::handleMPI(llvm::CallInst&, llvm::Function*, llvm::StringRef) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6072:7:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitCallInst(llvm::CallInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitCall(llvm::CallInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:4877:36: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 4877 |               getOrInsertOpFloatSum(*gutils->newFunc->getParent(),
      |               ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 4878 |                                     MPI_OP_Ptr_type, CT, root->getType(),
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 4879 |                                     Builder2),
      |                                     ~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:841:49: note:   initializing argument 3 of â€˜llvm::Value* getOrInsertOpFloatSum(llvm::Module&, llvm::Type*, ConcreteType, llvm::Type*, llvm::IRBuilder<>&)â€™
  841 |                                    ConcreteType CT, llvm::Type *intType,
      |                                    ~~~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::Instruction*; DerivedT = llvm::SmallDenseMap<llvm::Instruction*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::Instruction*>, llvm::detail::DenseSetPair<llvm::Instruction*> >; KeyT = llvm::Instruction*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseSetPair<llvm::Instruction*>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::Instruction* const&; ValueArgs = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<llvm::Instruction*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::Instruction*>, llvm::detail::DenseSetPair<llvm::Instruction*> >; KeyT = llvm::Instruction*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseSetPair<llvm::Instruction*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:258:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(const KeyT&, Ts&& ...) [with Ts = {llvm::detail::DenseSetEmpty&}; DerivedT = llvm::SmallDenseMap<llvm::Instruction*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::Instruction*>, llvm::detail::DenseSetPair<llvm::Instruction*> >; KeyT = llvm::Instruction*; ValueT = llvm::detail::DenseSetEmpty; KeyInfoT = llvm::DenseMapInfo<llvm::Instruction*>; BucketT = llvm::detail::DenseSetPair<llvm::Instruction*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:208:39:   required from â€˜std::pair<llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::Iterator, bool> llvm::detail::DenseSetImpl<ValueT, MapTy, ValueInfoT>::insert(const ValueT&) [with ValueT = llvm::Instruction*; MapTy = llvm::SmallDenseMap<llvm::Instruction*, llvm::detail::DenseSetEmpty, 16, llvm::DenseMapInfo<llvm::Instruction*>, llvm::detail::DenseSetPair<llvm::Instruction*> >; ValueInfoT = llvm::DenseMapInfo<llvm::Instruction*>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/SetVector.h:142:34:   required from â€˜bool llvm::SetVector<T, Vector, Set>::insert(const value_type&) [with T = llvm::Instruction*; Vector = llvm::SmallVector<llvm::Instruction*, 16>; Set = llvm::SmallDenseSet<llvm::Instruction*, 16, llvm::DenseMapInfo<llvm::Instruction*> >; llvm::SetVector<T, Vector, Set>::value_type = llvm::Instruction*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/InstCombine/InstCombineWorklist.h:47:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::Loop*; DerivedT = llvm::SmallDenseMap<llvm::Loop*, long int, 4, llvm::DenseMapInfo<llvm::Loop*>, llvm::detail::DenseMapPair<llvm::Loop*, long int> >; KeyT = llvm::Loop*; ValueT = long int; KeyInfoT = llvm::DenseMapInfo<llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<llvm::Loop*, long int>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::Loop*; ValueArgs = {long int}; DerivedT = llvm::SmallDenseMap<llvm::Loop*, long int, 4, llvm::DenseMapInfo<llvm::Loop*>, llvm::detail::DenseMapPair<llvm::Loop*, long int> >; KeyT = llvm::Loop*; ValueT = long int; KeyInfoT = llvm::DenseMapInfo<llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<llvm::Loop*, long int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {long int}; DerivedT = llvm::SmallDenseMap<llvm::Loop*, long int, 4, llvm::DenseMapInfo<llvm::Loop*>, llvm::detail::DenseMapPair<llvm::Loop*, long int> >; KeyT = llvm::Loop*; ValueT = long int; KeyInfoT = llvm::DenseMapInfo<llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<llvm::Loop*, long int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::SmallDenseMap<llvm::Loop*, long int, 4, llvm::DenseMapInfo<llvm::Loop*>, llvm::detail::DenseMapPair<llvm::Loop*, long int> >; KeyT = llvm::Loop*; ValueT = long int; KeyInfoT = llvm::DenseMapInfo<llvm::Loop*>; BucketT = llvm::detail::DenseMapPair<llvm::Loop*, long int>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/PriorityWorklist.h:93:10:   required from â€˜bool llvm::PriorityWorklist<T, VectorT, MapT>::insert(const T&) [with T = llvm::Loop*; VectorT = llvm::SmallVector<llvm::Loop*, 4>; MapT = llvm::SmallDenseMap<llvm::Loop*, long int, 4, llvm::DenseMapInfo<llvm::Loop*>, llvm::detail::DenseMapPair<llvm::Loop*, long int> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Transforms/Scalar/LoopPassManager.h:285:29:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:5751:36: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 5751 |               getOrInsertOpFloatSum(*gutils->newFunc->getParent(),
      |               ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 5752 |                                     MPI_OP_Ptr_type, CT, call.getType(),
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 5753 |                                     Builder2),
      |                                     ~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:841:49: note:   initializing argument 3 of â€˜llvm::Value* getOrInsertOpFloatSum(llvm::Module&, llvm::Type*, ConcreteType, llvm::Type*, llvm::IRBuilder<>&)â€™
  841 |                                    ConcreteType CT, llvm::Type *intType,
      |                                    ~~~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AnalysisKey*; DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AnalysisKey*; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Module, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Module>::Invalidator> > > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:853:35:   required from â€˜bool llvm::AnalysisManager<IRUnitT, ExtraArgTs>::registerPass(PassBuilderT&&) [with PassBuilderT = PreProcessCache::PreProcessCache()::<lambda()>; IRUnitT = llvm::Module; ExtraArgTs = {}]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:813:75:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AnalysisKey*; DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AnalysisKey*; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >, llvm::DenseMapInfo<llvm::AnalysisKey*>, llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > > >; KeyT = llvm::AnalysisKey*; ValueT = std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > >; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, std::unique_ptr<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>, std::default_delete<llvm::detail::AnalysisPassConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator> > > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:853:35:   required from â€˜bool llvm::AnalysisManager<IRUnitT, ExtraArgTs>::registerPass(PassBuilderT&&) [with PassBuilderT = PreProcessCache::PreProcessCache()::<lambda()>; IRUnitT = llvm::Function; ExtraArgTs = {}]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:814:75:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::handleAdjointForIntrinsic(llvm::Intrinsic::ID, llvm::Instruction&, llvm::SmallVectorImpl<llvm::Value*>&) [with AugmentedReturnType = const AugmentedReturn*; llvm::Intrinsic::ID = unsigned int]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7231:13:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitCallInst(llvm::CallInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitCall(llvm::CallInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:2503:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 2503 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:2503:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:30,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:22,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:28,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3487:15:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:36,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::ScopedNoAliasAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScopedNoAliasAA.h:29:7:   required from â€˜typename std::_MakeUniq<_Tp>::__single_object std::make_unique(_Args&& ...) [with _Tp = llvm::detail::AnalysisResultModel<llvm::Function, llvm::ScopedNoAliasAA, llvm::ScopedNoAliasAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator, true>; _Args = {llvm::ScopedNoAliasAAResult}; typename std::_MakeUniq<_Tp>::__single_object = std::unique_ptr<llvm::detail::AnalysisResultModel<llvm::Function, llvm::ScopedNoAliasAA, llvm::ScopedNoAliasAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator, true>, std::default_delete<llvm::detail::AnalysisResultModel<llvm::Function, llvm::ScopedNoAliasAA, llvm::ScopedNoAliasAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator, true> > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:314:42:   required from â€˜std::unique_ptr<llvm::detail::AnalysisResultConcept<IRUnitT, PreservedAnalysesT, InvalidatorT> > llvm::detail::AnalysisPassModel<IRUnitT, PassT, PreservedAnalysesT, InvalidatorT, ExtraArgTs>::run(IRUnitT&, llvm::AnalysisManager<IRUnitT, ExtraArgTs ...>&, ExtraArgTs ...) [with IRUnitT = llvm::Function; PassT = llvm::ScopedNoAliasAA; PreservedAnalysesT = llvm::PreservedAnalyses; InvalidatorT = llvm::AnalysisManager<llvm::Function>::Invalidator; ExtraArgTs = {}]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:312:3:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1059 |   AAResultBase(AAResultBase &&Arg) {}
      |                ~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::TypeBasedAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TypeBasedAliasAnalysis.h:31:7:   required from â€˜typename std::_MakeUniq<_Tp>::__single_object std::make_unique(_Args&& ...) [with _Tp = llvm::detail::AnalysisResultModel<llvm::Function, llvm::TypeBasedAA, llvm::TypeBasedAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator, true>; _Args = {llvm::TypeBasedAAResult}; typename std::_MakeUniq<_Tp>::__single_object = std::unique_ptr<llvm::detail::AnalysisResultModel<llvm::Function, llvm::TypeBasedAA, llvm::TypeBasedAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator, true>, std::default_delete<llvm::detail::AnalysisResultModel<llvm::Function, llvm::TypeBasedAA, llvm::TypeBasedAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator, true> > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:314:42:   required from â€˜std::unique_ptr<llvm::detail::AnalysisResultConcept<IRUnitT, PreservedAnalysesT, InvalidatorT> > llvm::detail::AnalysisPassModel<IRUnitT, PassT, PreservedAnalysesT, InvalidatorT, ExtraArgTs>::run(IRUnitT&, llvm::AnalysisManager<IRUnitT, ExtraArgTs ...>&, ExtraArgTs ...) [with IRUnitT = llvm::Function; PassT = llvm::TypeBasedAA; PreservedAnalysesT = llvm::PreservedAnalyses; InvalidatorT = llvm::AnalysisManager<llvm::Function>::Invalidator; ExtraArgTs = {}]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:312:3:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h: In instantiation of â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::delegateCallInst(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:127:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitRet(llvm::ReturnInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:127:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:304:39: warning: unused parameter â€˜Iâ€™ [-Wunused-parameter]
  304 |   RetTy delegateCallInst(Instruction &I) {
      |                          ~~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitCallInst(llvm::CallInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitCall(llvm::CallInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6380:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6380 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6380:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6439:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6439 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6439:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6481:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6481 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6481:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6545:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6545 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6545:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6598:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6598 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6598:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6648:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6648 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6648:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6820:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6820 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6820:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6880:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6880 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6880:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6939:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6939 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6939:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6999:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6999 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6999:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7055:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7055 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7055:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7135:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7135 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7135:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7248:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7248 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7248:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7323:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7323 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7323:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7406:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7406 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7406:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitSelectInst(llvm::SelectInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:210:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitSelect(llvm::SelectInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:210:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1017:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1017 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1017:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitInstruction(llvm::Instruction&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:211:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitUserOp1(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:211:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:364:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  364 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:364:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitExtractElementInst(llvm::ExtractElementInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:214:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitExtractElement(llvm::ExtractElementInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:214:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1175:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1175 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1175:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitInsertElementInst(llvm::InsertElementInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:215:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitInsertElement(llvm::InsertElementInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:215:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1227:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1227 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1227:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitShuffleVectorInst(llvm::ShuffleVectorInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:216:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitShuffleVector(llvm::ShuffleVectorInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:216:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1304:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1304 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1304:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitExtractValueInst(llvm::ExtractValueInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:217:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitExtractValue(llvm::ExtractValueInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:217:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1387:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1387 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1387:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitFreezeInst(llvm::FreezeInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:220:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitFreeze(llvm::FreezeInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:220:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:313:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  313 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:313:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AnalysisKey*; DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*>, 2>; KeyT = llvm::AnalysisKey*; ValueT = llvm::TinyPtrVector<llvm::AnalysisKey*>; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AnalysisKey* const&; ValueArgs = {}; DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*>, 2>; KeyT = llvm::AnalysisKey*; ValueT = llvm::TinyPtrVector<llvm::AnalysisKey*>; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:326:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(const KeyT&) [with DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*>, 2>; KeyT = llvm::AnalysisKey*; ValueT = llvm::TinyPtrVector<llvm::AnalysisKey*>; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:330:34:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](const KeyT&) [with DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*>, 2>; KeyT = llvm::AnalysisKey*; ValueT = llvm::TinyPtrVector<llvm::AnalysisKey*>; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, llvm::TinyPtrVector<llvm::AnalysisKey*> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:1153:13:   required from â€˜void llvm::OuterAnalysisManagerProxy<AnalysisManagerT, IRUnitT, ExtraArgTs>::Result::registerOuterAnalysisInvalidation() [with OuterAnalysisT = llvm::GlobalsAA; InvalidatedAnalysisT = llvm::AAManager; AnalysisManagerT = llvm::AnalysisManager<llvm::Module>; IRUnitT = llvm::Function; ExtraArgTs = {}]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1183:7:   required from â€˜static void llvm::AAManager::getModuleAAResultImpl(llvm::Function&, llvm::FunctionAnalysisManager&, llvm::AAResults&) [with AnalysisT = llvm::GlobalsAA; llvm::FunctionAnalysisManager = llvm::AnalysisManager<llvm::Function>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1154:5:   required from â€˜void llvm::AAManager::registerModuleAnalysis() [with AnalysisT = llvm::GlobalsAA]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:844:42:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h: In instantiation of â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::delegateCallInst(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:127:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitRet(llvm::ReturnInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:127:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:304:39: warning: unused parameter â€˜Iâ€™ [-Wunused-parameter]
  304 |   RetTy delegateCallInst(Instruction &I) {
      |                          ~~~~~~~~~~~~~^
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitCallInst(llvm::CallInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitCall(llvm::CallInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6380:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6380 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6380:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6439:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6439 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6439:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6481:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6481 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6481:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6545:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6545 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6545:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6598:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6598 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6598:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6648:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6648 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6648:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6820:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6820 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6820:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6880:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6880 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6880:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6939:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6939 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6939:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6999:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 6999 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6999:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7055:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7055 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7055:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7135:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7135 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7135:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueArgs = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7248:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7248 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7248:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7323:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7323 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7323:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7406:11: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 7406 |           switch (Mode) {
      |           ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7406:11: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitSelectInst(llvm::SelectInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:210:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitSelect(llvm::SelectInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:210:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1017:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1017 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1017:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitInstruction(llvm::Instruction&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:211:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitUserOp1(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:211:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:364:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  364 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:364:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitExtractElementInst(llvm::ExtractElementInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:214:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitExtractElement(llvm::ExtractElementInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:214:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1175:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1175 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1175:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitInsertElementInst(llvm::InsertElementInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:215:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitInsertElement(llvm::InsertElementInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:215:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1227:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1227 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1227:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitShuffleVectorInst(llvm::ShuffleVectorInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:216:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitShuffleVector(llvm::ShuffleVectorInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:216:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1304:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1304 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1304:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitExtractValueInst(llvm::ExtractValueInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:217:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitExtractValue(llvm::ExtractValueInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:217:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1387:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 1387 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:1387:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitFreezeInst(llvm::FreezeInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:220:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitFreeze(llvm::FreezeInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:220:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:313:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  313 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:313:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AnalysisKey*; DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, bool, 8>; KeyT = llvm::AnalysisKey*; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AnalysisKey*; ValueArgs = {bool}; DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, bool, 8>; KeyT = llvm::AnalysisKey*; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {bool}; DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, bool, 8>; KeyT = llvm::AnalysisKey*; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, bool, 8>; KeyT = llvm::AnalysisKey*; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:732:33:   required from â€˜bool llvm::AnalysisManager<IRUnitT, ExtraArgTs>::Invalidator::invalidateImpl(llvm::AnalysisKey*, IRUnitT&, const llvm::PreservedAnalyses&) [with ResultT = llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>; IRUnitT = llvm::Function; ExtraArgTs = {}]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:703:41:   required from â€˜bool llvm::AnalysisManager<IRUnitT, ExtraArgTs>::Invalidator::invalidate(llvm::AnalysisKey*, IRUnitT&, const llvm::PreservedAnalyses&) [with IRUnitT = llvm::Function; ExtraArgTs = {}]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:1133:52:   required from â€˜bool llvm::OuterAnalysisManagerProxy<AnalysisManagerT, IRUnitT, ExtraArgTs>::Result::invalidate(IRUnitT&, const llvm::PreservedAnalyses&, typename llvm::AnalysisManager<IRUnitT, AnalysisArgTs ...>::Invalidator&) [with AnalysisManagerT = llvm::AnalysisManager<llvm::Module>; IRUnitT = llvm::Function; ExtraArgTs = {}; typename llvm::AnalysisManager<IRUnitT, AnalysisArgTs ...>::Invalidator = llvm::AnalysisManager<llvm::Function>::Invalidator]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:250:41:   required from â€˜bool llvm::detail::AnalysisResultModel<IRUnitT, PassT, ResultT, PreservedAnalysesT, InvalidatorT, true>::invalidate(IRUnitT&, const PreservedAnalysesT&, InvalidatorT&) [with IRUnitT = llvm::Function; PassT = llvm::OuterAnalysisManagerProxy<llvm::AnalysisManager<llvm::Module>, llvm::Function>; ResultT = llvm::OuterAnalysisManagerProxy<llvm::AnalysisManager<llvm::Module>, llvm::Function>::Result; PreservedAnalysesT = llvm::PreservedAnalyses; InvalidatorT = llvm::AnalysisManager<llvm::Function>::Invalidator]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:248:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:30,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:22,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:28,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::WeakTrackingVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:378:37:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::CallInst*, llvm::SmallPtrSet<const llvm::CallInst*, 1>, llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> > >, llvm::SmallPtrSet<const llvm::CallInst*, 1> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::CallInst*; ValueT = llvm::SmallPtrSet<const llvm::CallInst*, 1>; Config = llvm::ValueMapConfig<const llvm::CallInst*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1022:49:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >; ValueT = AssertingReplacingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Instruction*, AssertingReplacingVH, llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> > >, AssertingReplacingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Instruction*; ValueT = AssertingReplacingVH; Config = llvm::ValueMapConfig<const llvm::Instruction*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1086:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {InvertedPointerVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH> >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = InvertedPointerVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, InvertedPointerVH, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, InvertedPointerVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = const llvm::Value*; ValueT = InvertedPointerVH; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1208:62:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::BasicBlock*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::BasicBlock*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::BasicBlock*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:1799:41:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> > >; KeyT = llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::TrackingVH<llvm::AllocaInst>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<const llvm::Value*, llvm::TrackingVH<llvm::AllocaInst>, llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> > >, llvm::TrackingVH<llvm::AllocaInst> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = const llvm::Value*; ValueT = llvm::TrackingVH<llvm::AllocaInst>; Config = llvm::ValueMapConfig<const llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:2012:24:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitLoadLike(llvm::Instruction&, llvm::MaybeAlign, bool, llvm::Value*, llvm::Value*, llvm::Value*) [with AugmentedReturnType = AugmentedReturn*]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:687:5:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitLoadInst(llvm::LoadInst&) [with AugmentedReturnType = AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:172:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitLoad(llvm::LoadInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:172:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:455:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  455 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:455:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:596:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  596 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:596:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitCommonStore(llvm::Instruction&, llvm::Value*, llvm::Value*, llvm::MaybeAlign, bool, llvm::AtomicOrdering, llvm::SyncScope::ID, llvm::Value*) [with AugmentedReturnType = AugmentedReturn*; llvm::SyncScope::ID = unsigned char]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:725:5:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitStoreInst(llvm::StoreInst&) [with AugmentedReturnType = AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:173:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitStore(llvm::StoreInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:173:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:792:7: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  792 |       switch (Mode) {
      |       ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:792:7: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitCastInst(llvm::CastInst&) [with AugmentedReturnType = AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:177:53:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitTruncInst(llvm::TruncInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:184:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitTrunc(llvm::TruncInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:184:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:938:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  938 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:938:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::handleMPI(llvm::CallInst&, llvm::Function*, llvm::StringRef) [with AugmentedReturnType = AugmentedReturn*]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6072:7:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitCallInst(llvm::CallInst&) [with AugmentedReturnType = AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitCall(llvm::CallInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:4877:36: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 4877 |               getOrInsertOpFloatSum(*gutils->newFunc->getParent(),
      |               ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 4878 |                                     MPI_OP_Ptr_type, CT, root->getType(),
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 4879 |                                     Builder2),
      |                                     ~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:841:49: note:   initializing argument 3 of â€˜llvm::Value* getOrInsertOpFloatSum(llvm::Module&, llvm::Type*, ConcreteType, llvm::Type*, llvm::IRBuilder<>&)â€™
  841 |                                    ConcreteType CT, llvm::Type *intType,
      |                                    ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:5751:36: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 5751 |               getOrInsertOpFloatSum(*gutils->newFunc->getParent(),
      |               ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 5752 |                                     MPI_OP_Ptr_type, CT, call.getType(),
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 5753 |                                     Builder2),
      |                                     ~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:841:49: note:   initializing argument 3 of â€˜llvm::Value* getOrInsertOpFloatSum(llvm::Module&, llvm::Type*, ConcreteType, llvm::Type*, llvm::IRBuilder<>&)â€™
  841 |                                    ConcreteType CT, llvm::Type *intType,
      |                                    ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:36,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜bool llvm::AAResultBase<T>::pointsToConstantMemory(const llvm::MemoryLocation&, llvm::AAQueryInfo&, bool) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:947:60:   required from â€˜bool llvm::AAResults::Model<T>::pointsToConstantMemory(const llvm::MemoryLocation&, llvm::AAQueryInfo&, bool) [with AAResultT = llvm::CFLSteensAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:945:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1079:53: warning: unused parameter â€˜Locâ€™ [-Wunused-parameter]
 1079 |   bool pointsToConstantMemory(const MemoryLocation &Loc, AAQueryInfo &AAQI,
      |                               ~~~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1079:71: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1079 |   bool pointsToConstantMemory(const MemoryLocation &Loc, AAQueryInfo &AAQI,
      |                                                          ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1080:36: warning: unused parameter â€˜OrLocalâ€™ [-Wunused-parameter]
 1080 |                               bool OrLocal) {
      |                               ~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:951:48:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with AAResultT = llvm::CFLSteensAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:950:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:47: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                               ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:62: warning: unused parameter â€˜ArgIdxâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                                                     ~~~~~~~~~^~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::FunctionModRefBehavior llvm::AAResultBase<T>::getModRefBehavior(const llvm::CallBase*) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:955:41:   required from â€˜llvm::FunctionModRefBehavior llvm::AAResults::Model<T>::getModRefBehavior(const llvm::CallBase*) [with AAResultT = llvm::CFLSteensAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:954:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1088:60: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1088 |   FunctionModRefBehavior getModRefBehavior(const CallBase *Call) {
      |                                            ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::FunctionModRefBehavior llvm::AAResultBase<T>::getModRefBehavior(const llvm::Function*) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:959:38:   required from â€˜llvm::FunctionModRefBehavior llvm::AAResults::Model<T>::getModRefBehavior(const llvm::Function*) [with AAResultT = llvm::CFLSteensAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:958:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1092:60: warning: unused parameter â€˜Fâ€™ [-Wunused-parameter]
 1092 |   FunctionModRefBehavior getModRefBehavior(const Function *F) {
      |                                            ~~~~~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getModRefInfo(const llvm::CallBase*, const llvm::MemoryLocation&, llvm::AAQueryInfo&) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:964:48:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getModRefInfo(const llvm::CallBase*, const llvm::MemoryLocation&, llvm::AAQueryInfo&) [with AAResultT = llvm::CFLSteensAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:962:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1096:44: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1096 |   ModRefInfo getModRefInfo(const CallBase *Call, const MemoryLocation &Loc,
      |                            ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1096:72: warning: unused parameter â€˜Locâ€™ [-Wunused-parameter]
 1096 |   ModRefInfo getModRefInfo(const CallBase *Call, const MemoryLocation &Loc,
      |                                                  ~~~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1097:41: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1097 |                            AAQueryInfo &AAQI) {
      |                            ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getModRefInfo(const llvm::CallBase*, const llvm::CallBase*, llvm::AAQueryInfo&) [with DerivedT = llvm::CFLSteensAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:969:51:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getModRefInfo(const llvm::CallBase*, const llvm::CallBase*, llvm::AAQueryInfo&) [with AAResultT = llvm::CFLSteensAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:967:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1101:44: warning: unused parameter â€˜Call1â€™ [-Wunused-parameter]
 1101 |   ModRefInfo getModRefInfo(const CallBase *Call1, const CallBase *Call2,
      |                            ~~~~~~~~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1101:67: warning: unused parameter â€˜Call2â€™ [-Wunused-parameter]
 1101 |   ModRefInfo getModRefInfo(const CallBase *Call1, const CallBase *Call2,
      |                                                   ~~~~~~~~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1102:41: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1102 |                            AAQueryInfo &AAQI) {
      |                            ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜bool llvm::AAResultBase<T>::pointsToConstantMemory(const llvm::MemoryLocation&, llvm::AAQueryInfo&, bool) [with DerivedT = llvm::GlobalsAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:947:60:   required from â€˜bool llvm::AAResults::Model<T>::pointsToConstantMemory(const llvm::MemoryLocation&, llvm::AAQueryInfo&, bool) [with AAResultT = llvm::GlobalsAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:945:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1079:53: warning: unused parameter â€˜Locâ€™ [-Wunused-parameter]
 1079 |   bool pointsToConstantMemory(const MemoryLocation &Loc, AAQueryInfo &AAQI,
      |                               ~~~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1079:71: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1079 |   bool pointsToConstantMemory(const MemoryLocation &Loc, AAQueryInfo &AAQI,
      |                                                          ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1080:36: warning: unused parameter â€˜OrLocalâ€™ [-Wunused-parameter]
 1080 |                               bool OrLocal) {
      |                               ~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with DerivedT = llvm::GlobalsAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:951:48:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with AAResultT = llvm::GlobalsAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:950:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:47: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                               ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:62: warning: unused parameter â€˜ArgIdxâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                                                     ~~~~~~~~~^~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getModRefInfo(const llvm::CallBase*, const llvm::CallBase*, llvm::AAQueryInfo&) [with DerivedT = llvm::GlobalsAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:969:51:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getModRefInfo(const llvm::CallBase*, const llvm::CallBase*, llvm::AAQueryInfo&) [with AAResultT = llvm::GlobalsAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:967:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1101:44: warning: unused parameter â€˜Call1â€™ [-Wunused-parameter]
 1101 |   ModRefInfo getModRefInfo(const CallBase *Call1, const CallBase *Call2,
      |                            ~~~~~~~~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1101:67: warning: unused parameter â€˜Call2â€™ [-Wunused-parameter]
 1101 |   ModRefInfo getModRefInfo(const CallBase *Call1, const CallBase *Call2,
      |                                                   ~~~~~~~~~~~~~~~~^~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1102:41: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1102 |                            AAQueryInfo &AAQI) {
      |                            ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜bool llvm::AAResultBase<T>::pointsToConstantMemory(const llvm::MemoryLocation&, llvm::AAQueryInfo&, bool) [with DerivedT = llvm::ScopedNoAliasAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:947:60:   required from â€˜bool llvm::AAResults::Model<T>::pointsToConstantMemory(const llvm::MemoryLocation&, llvm::AAQueryInfo&, bool) [with AAResultT = llvm::ScopedNoAliasAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:945:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1079:53: warning: unused parameter â€˜Locâ€™ [-Wunused-parameter]
 1079 |   bool pointsToConstantMemory(const MemoryLocation &Loc, AAQueryInfo &AAQI,
      |                               ~~~~~~~~~~~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1079:71: warning: unused parameter â€˜AAQIâ€™ [-Wunused-parameter]
 1079 |   bool pointsToConstantMemory(const MemoryLocation &Loc, AAQueryInfo &AAQI,
      |                                                          ~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1080:36: warning: unused parameter â€˜OrLocalâ€™ [-Wunused-parameter]
 1080 |                               bool OrLocal) {
      |                               ~~~~~^~~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with DerivedT = llvm::ScopedNoAliasAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:951:48:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with AAResultT = llvm::ScopedNoAliasAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:950:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:47: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                               ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:62: warning: unused parameter â€˜ArgIdxâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                                                     ~~~~~~~~~^~~~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::FunctionModRefBehavior llvm::AAResultBase<T>::getModRefBehavior(const llvm::CallBase*) [with DerivedT = llvm::ScopedNoAliasAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:955:41:   required from â€˜llvm::FunctionModRefBehavior llvm::AAResults::Model<T>::getModRefBehavior(const llvm::CallBase*) [with AAResultT = llvm::ScopedNoAliasAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:954:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1088:60: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1088 |   FunctionModRefBehavior getModRefBehavior(const CallBase *Call) {
      |                                            ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::FunctionModRefBehavior llvm::AAResultBase<T>::getModRefBehavior(const llvm::Function*) [with DerivedT = llvm::ScopedNoAliasAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:959:38:   required from â€˜llvm::FunctionModRefBehavior llvm::AAResults::Model<T>::getModRefBehavior(const llvm::Function*) [with AAResultT = llvm::ScopedNoAliasAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:958:26:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1092:60: warning: unused parameter â€˜Fâ€™ [-Wunused-parameter]
 1092 |   FunctionModRefBehavior getModRefBehavior(const Function *F) {
      |                                            ~~~~~~~~~~~~~~~~^
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::ModRefInfo llvm::AAResultBase<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with DerivedT = llvm::TypeBasedAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:951:48:   required from â€˜llvm::ModRefInfo llvm::AAResults::Model<T>::getArgModRefInfo(const llvm::CallBase*, unsigned int) [with AAResultT = llvm::TypeBasedAAResult]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:950:14:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:47: warning: unused parameter â€˜Callâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                               ~~~~~~~~~~~~~~~~^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1084:62: warning: unused parameter â€˜ArgIdxâ€™ [-Wunused-parameter]
 1084 |   ModRefInfo getArgModRefInfo(const CallBase *Call, unsigned ArgIdx) {
      |                                                     ~~~~~~~~~^~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:39,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h: In instantiation of â€˜llvm::InnerAnalysisManagerProxy<AnalysisManagerT, IRUnitT, ExtraArgTs>::Result llvm::InnerAnalysisManagerProxy<AnalysisManagerT, IRUnitT, ExtraArgTs>::run(IRUnitT&, llvm::AnalysisManager<IRUnitT, AnalysisArgTs ...>&, ExtraArgTs ...) [with AnalysisManagerT = llvm::AnalysisManager<llvm::Function>; IRUnitT = llvm::Module; ExtraArgTs = {}]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:314:42:   required from â€˜std::unique_ptr<llvm::detail::AnalysisResultConcept<IRUnitT, PreservedAnalysesT, InvalidatorT> > llvm::detail::AnalysisPassModel<IRUnitT, PassT, PreservedAnalysesT, InvalidatorT, ExtraArgTs>::run(IRUnitT&, llvm::AnalysisManager<IRUnitT, ExtraArgTs ...>&, ExtraArgTs ...) [with IRUnitT = llvm::Module; PassT = llvm::InnerAnalysisManagerProxy<llvm::AnalysisManager<llvm::Function>, llvm::Module>; PreservedAnalysesT = llvm::PreservedAnalyses; InvalidatorT = llvm::AnalysisManager<llvm::Module>::Invalidator; ExtraArgTs = {}]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:312:3:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:1032:23: warning: unused parameter â€˜IRâ€™ [-Wunused-parameter]
 1032 |   Result run(IRUnitT &IR, AnalysisManager<IRUnitT, ExtraArgTs...> &AM,
      |              ~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:1032:68: warning: unused parameter â€˜AMâ€™ [-Wunused-parameter]
 1032 |   Result run(IRUnitT &IR, AnalysisManager<IRUnitT, ExtraArgTs...> &AM,
      |                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::handleAdjointForIntrinsic(llvm::Intrinsic::ID, llvm::Instruction&, llvm::SmallVectorImpl<llvm::Value*>&) [with AugmentedReturnType = AugmentedReturn*; llvm::Intrinsic::ID = unsigned int]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7231:13:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitCallInst(llvm::CallInst&) [with AugmentedReturnType = AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitCall(llvm::CallInst&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:1928:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:2503:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 2503 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:2503:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitLoadLike(llvm::Instruction&, llvm::MaybeAlign, bool, llvm::Value*, llvm::Value*, llvm::Value*) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:687:5:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitLoadInst(llvm::LoadInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:172:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitLoad(llvm::LoadInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:172:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:455:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  455 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:455:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:596:9: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  596 |         switch (Mode) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:596:9: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitCommonStore(llvm::Instruction&, llvm::Value*, llvm::Value*, llvm::MaybeAlign, bool, llvm::AtomicOrdering, llvm::SyncScope::ID, llvm::Value*) [with AugmentedReturnType = const AugmentedReturn*; llvm::SyncScope::ID = unsigned char]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:725:5:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitStoreInst(llvm::StoreInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:173:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitStore(llvm::StoreInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:173:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:792:7: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  792 |       switch (Mode) {
      |       ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:792:7: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::visitCastInst(llvm::CastInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:177:53:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitTruncInst(llvm::TruncInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:184:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitTrunc(llvm::TruncInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:184:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:938:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
  938 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:938:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:36,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::ScopedNoAliasAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ScopedNoAliasAA.h:29:7:   required from â€˜typename std::_MakeUniq<_Tp>::__single_object std::make_unique(_Args&& ...) [with _Tp = llvm::detail::AnalysisResultModel<llvm::Function, llvm::ScopedNoAliasAA, llvm::ScopedNoAliasAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator, true>; _Args = {llvm::ScopedNoAliasAAResult}; typename std::_MakeUniq<_Tp>::__single_object = std::unique_ptr<llvm::detail::AnalysisResultModel<llvm::Function, llvm::ScopedNoAliasAA, llvm::ScopedNoAliasAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator, true>, std::default_delete<llvm::detail::AnalysisResultModel<llvm::Function, llvm::ScopedNoAliasAA, llvm::ScopedNoAliasAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator, true> > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:314:42:   required from â€˜std::unique_ptr<llvm::detail::AnalysisResultConcept<IRUnitT, PreservedAnalysesT, InvalidatorT> > llvm::detail::AnalysisPassModel<IRUnitT, PassT, PreservedAnalysesT, InvalidatorT, ExtraArgTs>::run(IRUnitT&, llvm::AnalysisManager<IRUnitT, ExtraArgTs ...>&, ExtraArgTs ...) [with IRUnitT = llvm::Function; PassT = llvm::ScopedNoAliasAA; PreservedAnalysesT = llvm::PreservedAnalyses; InvalidatorT = llvm::AnalysisManager<llvm::Function>::Invalidator; ExtraArgTs = {}]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:312:3:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
 1059 |   AAResultBase(AAResultBase &&Arg) {}
      |                ~~~~~~~~~~~~~~~^~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::handleMPI(llvm::CallInst&, llvm::Function*, llvm::StringRef) [with AugmentedReturnType = const AugmentedReturn*]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:6072:7:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitCallInst(llvm::CallInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitCall(llvm::CallInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:4877:36: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 4877 |               getOrInsertOpFloatSum(*gutils->newFunc->getParent(),
      |               ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 4878 |                                     MPI_OP_Ptr_type, CT, root->getType(),
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 4879 |                                     Builder2),
      |                                     ~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:841:49: note:   initializing argument 3 of â€˜llvm::Value* getOrInsertOpFloatSum(llvm::Module&, llvm::Type*, ConcreteType, llvm::Type*, llvm::IRBuilder<>&)â€™
  841 |                                    ConcreteType CT, llvm::Type *intType,
      |                                    ~~~~~~~~~~~~~^~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h: In instantiation of â€˜llvm::AAResultBase<T>::AAResultBase(llvm::AAResultBase<T>&&) [with DerivedT = llvm::TypeBasedAAResult]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/TypeBasedAliasAnalysis.h:31:7:   required from â€˜typename std::_MakeUniq<_Tp>::__single_object std::make_unique(_Args&& ...) [with _Tp = llvm::detail::AnalysisResultModel<llvm::Function, llvm::TypeBasedAA, llvm::TypeBasedAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator, true>; _Args = {llvm::TypeBasedAAResult}; typename std::_MakeUniq<_Tp>::__single_object = std::unique_ptr<llvm::detail::AnalysisResultModel<llvm::Function, llvm::TypeBasedAA, llvm::TypeBasedAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator, true>, std::default_delete<llvm::detail::AnalysisResultModel<llvm::Function, llvm::TypeBasedAA, llvm::TypeBasedAAResult, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator, true> > >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:314:42:   required from â€˜std::unique_ptr<llvm::detail::AnalysisResultConcept<IRUnitT, PreservedAnalysesT, InvalidatorT> > llvm::detail::AnalysisPassModel<IRUnitT, PassT, PreservedAnalysesT, InvalidatorT, ExtraArgTs>::run(IRUnitT&, llvm::AnalysisManager<IRUnitT, ExtraArgTs ...>&, ExtraArgTs ...) [with IRUnitT = llvm::Function; PassT = llvm::TypeBasedAA; PreservedAnalysesT = llvm::PreservedAnalyses; InvalidatorT = llvm::AnalysisManager<llvm::Function>::Invalidator; ExtraArgTs = {}]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:312:3:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/AliasAnalysis.h:1059:31: warning: unused parameter â€˜Argâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:5751:36: warning: implicitly-declared â€˜constexpr ConcreteType::ConcreteType(const ConcreteType&)â€™ is deprecated [-Wdeprecated-copy]
 5751 |               getOrInsertOpFloatSum(*gutils->newFunc->getParent(),
      |               ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 5752 |                                     MPI_OP_Ptr_type, CT, call.getType(),
      |                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 5753 |                                     Builder2),
      |                                     ~~~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeTree.h:42,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/TypeAnalysis.h:46,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:44,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/TypeAnalysis/ConcreteType.h:177:8: note: because â€˜ConcreteTypeâ€™ has user-provided â€˜bool ConcreteType::operator=(ConcreteType)â€™
  177 |   bool operator=(const ConcreteType CT) {
      |        ^~~~~~~~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:841:49: note:   initializing argument 3 of â€˜llvm::Value* getOrInsertOpFloatSum(llvm::Module&, llvm::Type*, ConcreteType, llvm::Type*, llvm::IRBuilder<>&)â€™
  841 |                                    ConcreteType CT, llvm::Type *intType,
      |                                    ~~~~~~~~~~~~~^~
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h: In instantiation of â€˜void AdjointGenerator<AugmentedReturnType>::handleAdjointForIntrinsic(llvm::Intrinsic::ID, llvm::Instruction&, llvm::SmallVectorImpl<llvm::Value*>&) [with AugmentedReturnType = const AugmentedReturn*; llvm::Intrinsic::ID = unsigned int]â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:7231:13:   required from â€˜void AdjointGenerator<AugmentedReturnType>::visitCallInst(llvm::CallInst&) [with AugmentedReturnType = const AugmentedReturn*]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visitCall(llvm::CallInst&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Instruction.def:209:1:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction&) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstVisitor.h:112:49:   required from â€˜RetTy llvm::InstVisitor<SubClass, RetTy>::visit(llvm::Instruction*) [with SubClass = AdjointGenerator<const AugmentedReturn*>; RetTy = void]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3459:22:   required from here
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:2503:5: warning: enumeration value â€˜ForwardModeVectorâ€™ not handled in switch [-Wswitch]
 2503 |     switch (Mode) {
      |     ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:2503:5: warning: enumeration value â€˜ForwardModeSplitâ€™ not handled in switch [-Wswitch]
In file included from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseSet.h:16,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/Function.h:20,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/InstrTypes.h:30,
                 from /local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/Analysis/ValueTracking.h:22,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:28,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueArgs = {}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:338:12:   required from â€˜llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::FindAndConstruct(KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>; llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::value_type = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:342:45:   required from â€˜ValueT& llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::operator[](KeyT&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:208:15:   required from â€˜ValueT& llvm::ValueMap<KeyT, ValueT, Config>::operator[](const KeyT&) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:3487:15:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
In file included from /localhome/mha157/Enzyme/enzyme/build/include/SCEV/ScalarEvolution.h:25,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.h:31,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/FunctionUtils.cpp:25:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
  565 |   BucketT *InsertIntoBucketImpl(const KeyT &Key, const LookupKeyT &Lookup,
      |                                 ~~~~~~~~~~~~^~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueArgs = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {llvm::WeakTrackingVH}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH> >; KeyT = llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >; ValueT = llvm::WeakTrackingVH; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::PHINode*, llvm::WeakTrackingVH, llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> > >, llvm::WeakTrackingVH>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::PHINode*; ValueT = llvm::WeakTrackingVH; Config = llvm::ValueMapConfig<llvm::PHINode*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::AnalysisKey*; DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, bool, 8>; KeyT = llvm::AnalysisKey*; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::AnalysisKey*; ValueArgs = {bool}; DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, bool, 8>; KeyT = llvm::AnalysisKey*; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {bool}; DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, bool, 8>; KeyT = llvm::AnalysisKey*; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::SmallDenseMap<llvm::AnalysisKey*, bool, 8>; KeyT = llvm::AnalysisKey*; ValueT = bool; KeyInfoT = llvm::DenseMapInfo<llvm::AnalysisKey*>; BucketT = llvm::detail::DenseMapPair<llvm::AnalysisKey*, bool>]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:732:33:   required from â€˜bool llvm::AnalysisManager<IRUnitT, ExtraArgTs>::Invalidator::invalidateImpl(llvm::AnalysisKey*, IRUnitT&, const llvm::PreservedAnalyses&) [with ResultT = llvm::detail::AnalysisResultConcept<llvm::Function, llvm::PreservedAnalyses, llvm::AnalysisManager<llvm::Function>::Invalidator>; IRUnitT = llvm::Function; ExtraArgTs = {}]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:703:41:   required from â€˜bool llvm::AnalysisManager<IRUnitT, ExtraArgTs>::Invalidator::invalidate(llvm::AnalysisKey*, IRUnitT&, const llvm::PreservedAnalyses&) [with IRUnitT = llvm::Function; ExtraArgTs = {}]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManager.h:1133:52:   required from â€˜bool llvm::OuterAnalysisManagerProxy<AnalysisManagerT, IRUnitT, ExtraArgTs>::Result::invalidate(IRUnitT&, const llvm::PreservedAnalyses&, typename llvm::AnalysisManager<IRUnitT, AnalysisArgTs ...>::Invalidator&) [with AnalysisManagerT = llvm::AnalysisManager<llvm::Module>; IRUnitT = llvm::Function; ExtraArgTs = {}; typename llvm::AnalysisManager<IRUnitT, AnalysisArgTs ...>::Invalidator = llvm::AnalysisManager<llvm::Function>::Invalidator]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:250:41:   required from â€˜bool llvm::detail::AnalysisResultModel<IRUnitT, PassT, ResultT, PreservedAnalysesT, InvalidatorT, true>::invalidate(IRUnitT&, const PreservedAnalysesT&, InvalidatorT&) [with IRUnitT = llvm::Function; PassT = llvm::OuterAnalysisManagerProxy<llvm::AnalysisManager<llvm::Module>, llvm::Function>; ResultT = llvm::OuterAnalysisManagerProxy<llvm::AnalysisManager<llvm::Module>, llvm::Function>::Result; PreservedAnalysesT = llvm::PreservedAnalyses; InvalidatorT = llvm::AnalysisManager<llvm::Function>::Invalidator]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/PassManagerInternal.h:248:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h: In function â€˜DIFFE_TYPE whatType(llvm::Type*, DerivativeMode, std::set<llvm::Type*>)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:356:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
  356 |         switch (ty) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:367:7: note: here
  367 |       case DIFFE_TYPE::CONSTANT:
      |       ^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:368:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
  368 |         switch (ty) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:380:7: note: here
  380 |       case DIFFE_TYPE::DUP_ARG:
      |       ^~~~
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h: In instantiation of â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucketImpl(const KeyT&, const LookupKeyT&, BucketT*) [with LookupKeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™:
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:547:15:   required from â€˜BucketT* llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::InsertIntoBucket(BucketT*, KeyArg&&, ValueArgs&& ...) [with KeyArg = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueArgs = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:233:15:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::try_emplace(KeyT&&, Ts&& ...) [with Ts = {std::map<llvm::BasicBlock*, llvm::WeakTrackingVH, std::less<llvm::BasicBlock*>, std::allocator<std::pair<llvm::BasicBlock* const, llvm::WeakTrackingVH> > >}; DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:215:65:   required from â€˜std::pair<llvm::DenseMapIterator<KeyT, ValueT, KeyInfoT, BucketT>, bool> llvm::DenseMapBase<DerivedT, KeyT, ValueT, KeyInfoT, BucketT>::insert(std::pair<_Tp1, _Tp2>&&) [with DerivedT = llvm::DenseMap<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >, llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> > >; KeyT = llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; KeyInfoT = llvm::DenseMapInfo<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > > >; BucketT = llvm::detail::DenseMapPair<llvm::ValueMapCallbackVH<llvm::Value*, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>, llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> > >, std::map<llvm::BasicBlock*, llvm::WeakTrackingVH> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:179:10:   required from â€˜std::pair<llvm::ValueMapIterator<llvm::DenseMap<llvm::ValueMapCallbackVH<KeyT, ValueT, Config>, ValueT, llvm::DenseMapInfo<llvm::ValueMapCallbackVH<KeyT, ValueT, Config> > >, KeyT>, bool> llvm::ValueMap<KeyT, ValueT, Config>::insert(std::pair<_T1, _T2>&&) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:291:9:   required from â€˜void llvm::ValueMapCallbackVH<KeyT, ValueT, Config>::allUsesReplacedWith(llvm::Value*) [with KeyT = llvm::Value*; ValueT = std::map<llvm::BasicBlock*, llvm::WeakTrackingVH>; Config = llvm::ValueMapConfig<llvm::Value*, llvm::sys::SmartMutex<false> >]â€™
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/IR/ValueMap.h:271:8:   required from here
/local-scratch/localhome/mha157/llvm-project/llvm/include/llvm/ADT/DenseMap.h:565:45: warning: unused parameter â€˜Keyâ€™ [-Wunused-parameter]
In file included from /localhome/mha157/Enzyme/enzyme/Enzyme/ActivityAnalysis.h:45,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/GradientUtils.h:38,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/DifferentialUseAnalysis.h:30,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/AdjointGenerator.h:34,
                 from /localhome/mha157/Enzyme/enzyme/Enzyme/EnzymeLogic.cpp:30:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h: In function â€˜DIFFE_TYPE whatType(llvm::Type*, DerivativeMode, std::set<llvm::Type*>)â€™:
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:356:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
  356 |         switch (ty) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:367:7: note: here
  367 |       case DIFFE_TYPE::CONSTANT:
      |       ^~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:368:9: warning: this statement may fall through [-Wimplicit-fallthrough=]
  368 |         switch (ty) {
      |         ^~~~~~
/localhome/mha157/Enzyme/enzyme/Enzyme/Utils.h:380:7: note: here
  380 |       case DIFFE_TYPE::DUP_ARG:
      |       ^~~~
